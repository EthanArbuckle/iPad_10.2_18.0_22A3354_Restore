uint64_t sub_BCFAB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  v4 = *(_BYTE *)(a1 + 72);
  v5 = swift_allocObject(&unk_13AAF20, 152, 7);
  v6 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v5 + 128) = v6;
  *(_QWORD *)(v5 + 144) = *(_QWORD *)(a1 + 128);
  v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v7;
  v8 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v5 + 96) = v8;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v9;
  v10 = swift_allocObject(&unk_13AAF48, 152, 7);
  v11 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v10 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v10 + 128) = v11;
  *(_QWORD *)(v10 + 144) = *(_QWORD *)(a1 + 128);
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v10 + 64) = v12;
  v13 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v10 + 96) = v13;
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v14;
  v15 = swift_allocObject(&unk_13AAF70, 152, 7);
  v16 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v15 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v15 + 128) = v16;
  *(_QWORD *)(v15 + 144) = *(_QWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v15 + 64) = v17;
  v18 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v15 + 96) = v18;
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v15 + 32) = v19;
  *(_BYTE *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = sub_BE10B4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_BE10C0;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_14FC118;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_BE11DC(a1);
  sub_BE11DC(a1);
  sub_BE11DC(a1);
  return v3;
}

uint64_t sub_BCFC14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_13AB470, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_13AB498, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_13AB4C0, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_BE2124;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_BE3E5C;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_14FC1F0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  return v3;
}

uint64_t sub_BCFD58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_13AB2E0, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_13AB308, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_13AB330, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_BE1DD4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_BE1CB8;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_14FC1B0;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_BE1EDC((_QWORD *)a1);
  sub_BE1EDC((_QWORD *)a1);
  sub_BE1EDC((_QWORD *)a1);
  return v3;
}

uint64_t sub_BCFE9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_13AB218, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_13AB240, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_13AB268, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_BE1C78;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_BE1CB8;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_14FC190;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_BE1EDC((_QWORD *)a1);
  sub_BE1EDC((_QWORD *)a1);
  sub_BE1EDC((_QWORD *)a1);
  return v3;
}

uint64_t sub_BCFFE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_13AB100, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_13AB128, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_13AB150, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_BE1A08;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_BE3E5C;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_14FC160;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  return v3;
}

uint64_t sub_BD0124(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_13AB3A8, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_13AB3D0, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_13AB3F8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_BE2008;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_BE3E5C;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_14FC1D0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  return v3;
}

uint64_t sub_BD0268(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_13AAE58, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_13AAE80, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_13AAEA8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_BE0EA0;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_BE3E5C;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_14FC0F0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  return v3;
}

uint64_t sub_BD03AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_13AAD90, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_13AADB8, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_13AADE0, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_BE0D84;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_BE3E5C;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_14FC0D0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  return v3;
}

uint64_t sub_BD04F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_13AACC8, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_13AACF0, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_13AAD18, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_BE0C50;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_BE0C84;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_14FC0B0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  return v3;
}

uint64_t sub_BD0634(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_13AAC00, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_13AAC28, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_13AAC50, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_BE0B34;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_BE3E5C;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_14FC090;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  sub_BE381C((_QWORD *)a1);
  return v3;
}

uint64_t sub_BD0778(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  v4 = *((_BYTE *)a1 + 32);
  v5 = (_OWORD *)swift_allocObject(&unk_13AAB38, 112, 7);
  v6 = a1[3];
  v5[3] = a1[2];
  v5[4] = v6;
  v7 = a1[5];
  v5[5] = a1[4];
  v5[6] = v7;
  v8 = a1[1];
  v5[1] = *a1;
  v5[2] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_13AAB60, 112, 7);
  v10 = a1[3];
  v9[3] = a1[2];
  v9[4] = v10;
  v11 = a1[5];
  v9[5] = a1[4];
  v9[6] = v11;
  v12 = a1[1];
  v9[1] = *a1;
  v9[2] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_13AAB88, 112, 7);
  v14 = a1[3];
  v13[3] = a1[2];
  v13[4] = v14;
  v15 = a1[5];
  v13[5] = a1[4];
  v13[6] = v15;
  v16 = *a1;
  v17 = a1[1];
  *(_BYTE *)(v3 + 32) = v4;
  v13[1] = v16;
  v13[2] = v17;
  *(_QWORD *)(v3 + 40) = sub_BE0984;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_BE0990;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_14FC070;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_955B18(a1);
  sub_955B18(a1);
  sub_955B18(a1);
  return v3;
}

uint64_t sub_BD08A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 216) = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BD0900, 0, 0);
}

uint64_t sub_BD0900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  sub_5C238(v2, v0 + 16, &qword_14FB400);
  v4 = swift_allocObject(&unk_13AB1C8, 232, 7);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  v5 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v4 + 192) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v4 + 208) = v5;
  *(_QWORD *)(v4 + 224) = *(_QWORD *)(v0 + 208);
  v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v4 + 144) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v4 + 176) = v7;
  v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v4 + 80) = v8;
  v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v4 + 112) = v9;
  v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 48) = v10;
  sub_D351B0(v1, (uint64_t)&unk_14FC180, v4);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PlaylistContext.entry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Playlist.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PlaylistContext.entry.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Playlist.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t PlaylistContext.playlist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v4 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PlaylistContext(uint64_t a1)
{
  uint64_t result;

  result = qword_14FC010;
  if (!qword_14FC010)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaylistContext);
  return result;
}

uint64_t PlaylistContext.playlist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v4 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

double (*PlaylistContext.playlist.modify())(double)
{
  type metadata accessor for PlaylistContext(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t PlaylistContext.init(entry:playlist:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v8 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

__n128 MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>, __int128 a9, __int128 a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 result;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[3];
  uint64_t v38;
  unsigned __int8 v39;
  __n128 v40;

  v33 = a4;
  v32 = a7;
  *(_QWORD *)&v36 = a6;
  *(_QWORD *)&v35 = a5;
  v31 = a9;
  v30 = a10;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  __chkstk_darwin(v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  __chkstk_darwin(v21);
  v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
  sub_BDC4F8(v34, a1, a2, a3, (uint64_t)v23, v33, v35, v36, (uint64_t *)v37, v32, v31, *((unint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), a11, a12, (uint64_t)v20, a13, a14);
  v35 = v37[1];
  v36 = v37[0];
  v34 = v37[2];
  v26 = v38;
  v27 = v39;
  sub_56024((uint64_t)v20, &qword_14FAFF8);
  sub_56024((uint64_t)v23, &qword_14FBF88);
  result = v40;
  v29 = v35;
  *(_OWORD *)a8 = v36;
  *(_OWORD *)(a8 + 16) = v29;
  *(_OWORD *)(a8 + 32) = v34;
  *(_QWORD *)(a8 + 48) = v26;
  *(_QWORD *)(a8 + 56) = v27;
  *(__n128 *)(a8 + 64) = result;
  return result;
}

uint64_t GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t, double);
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  NSObject *v173;
  os_log_type_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  __n128 v181;
  void (*v182)(char *, uint64_t, __n128);
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  void *v232;
  void *v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t *v238;
  uint64_t v239;
  unint64_t v240;
  __int128 v241;
  __int128 v242;
  uint64_t v243;
  __int128 v244;
  __int128 v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  unint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unsigned __int8 v254;
  uint64_t v255;
  uint64_t v256;

  v231 = a8;
  v240 = a7;
  v236 = a6;
  v235 = a5;
  v210 = a4;
  v234 = a3;
  v233 = a2;
  v232 = a1;
  v238 = a9;
  v227 = a15;
  v228 = a14;
  v229 = a13;
  v230 = a12;
  v237 = a11;
  v226 = type metadata accessor for UploadedVideo(0);
  v185 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin(v226);
  v184 = (char *)&v183 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = type metadata accessor for TVShow(0);
  v188 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v187 = (char *)&v183 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = type metadata accessor for TVSeason(0);
  v191 = *(_QWORD *)(v194 - 8);
  __chkstk_darwin(v194);
  v190 = (char *)&v183 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = type metadata accessor for TVEpisode(0);
  v193 = *(_QWORD *)(v197 - 8);
  __chkstk_darwin(v197);
  v192 = (char *)&v183 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for Station(0);
  v196 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v195 = (char *)&v183 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = type metadata accessor for Song(0);
  v199 = *(_QWORD *)(v201 - 8);
  __chkstk_darwin(v201);
  v198 = (char *)&v183 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = type metadata accessor for RadioShow(0);
  v203 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v202 = (char *)&v183 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = type metadata accessor for Playlist(0);
  v205 = *(_QWORD *)(v209 - 8);
  __chkstk_darwin(v209);
  v204 = (char *)&v183 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = type metadata accessor for MusicVideo(0);
  v208 = *(_QWORD *)(v211 - 8);
  __chkstk_darwin(v211);
  v207 = (char *)&v183 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = type metadata accessor for MusicMovie(0);
  v213 = *(_QWORD *)(v216 - 8);
  __chkstk_darwin(v216);
  v212 = (char *)&v183 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = type metadata accessor for Genre(0);
  v215 = *(_QWORD *)(v219 - 8);
  __chkstk_darwin(v219);
  v214 = (char *)&v183 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = type metadata accessor for EditorialItem(0);
  v218 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v217 = (char *)&v183 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = type metadata accessor for Curator(0);
  v221 = *(_QWORD *)(v222 - 8);
  __chkstk_darwin(v222);
  v220 = (char *)&v183 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = type metadata accessor for Artist(0);
  v224 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin(v225);
  v29 = (char *)&v183 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  __chkstk_darwin(v30);
  v32 = (char *)&v183 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  __chkstk_darwin(v33);
  v35 = (char *)&v183 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for Album(0);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v39 = (char *)&v183 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for GenericMusicItem(0);
  v41 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v186 = (char *)&v183 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __chkstk_darwin(v43);
  v46 = (char *)&v183 - v45;
  v47 = *(void (**)(char *, uint64_t, uint64_t, double))(v41 + 16);
  v47((char *)&v183 - v45, v239, v40, v44);
  v48 = (*(uint64_t (**)(char *, uint64_t))(v41 + 88))(v46, v40);
  if (v48 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v40);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v39, v46, v36);
    v49 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v35, 1, 1, v49);
    v50 = type metadata accessor for Actions.MetricsReportingContext(0);
    v244 = 0u;
    v245 = 0u;
    v246 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v32, 1, 1, v50);
    sub_BD81C0((uint64_t)v39, v232, v233, v234, (uint64_t)v35, v235, v236, v240, &v247, v231, (uint64_t)&v244, v237, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v51 = v251;
    v236 = v250;
    v52 = v252;
    v53 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024((uint64_t)v32, &qword_14FAFF8);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    sub_56024((uint64_t)v35, &qword_14FBF88);
    v56 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
    v57 = v53;
    v58 = v51;
    v59 = v39;
LABEL_3:
    v60 = v36;
LABEL_29:
    result = v56(v59, v60);
    goto LABEL_30;
  }
  v61 = v237;
  v62 = v226;
  if (v48 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v40);
    v63 = v224;
    v64 = v225;
    (*(void (**)(char *, char *, uint64_t))(v224 + 32))(v29, v46, v225);
    v65 = type metadata accessor for PlaylistContext(0);
    v66 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v35, 1, 1, v65);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v67 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v68 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v32, 1, 1, v67);
    sub_BD8630((uint64_t)v29, v232, v233, v234, (uint64_t)v35, v235, v236, v240, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v69 = v255;
    v235 = v256;
    sub_56024(v68, &qword_14FAFF8);
    sub_56024((uint64_t)&v241, &qword_14FBF98);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    sub_56024(v66, &qword_14FBF88);
    v70 = v29;
    v55 = v69;
    result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v70, v64);
    goto LABEL_30;
  }
  if (v48 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v40);
    v72 = v221;
    v73 = (uint64_t)v220;
    v36 = v222;
    (*(void (**)(char *, char *, uint64_t))(v221 + 32))(v220, v46, v222);
    v74 = type metadata accessor for PlaylistContext(0);
    v75 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v35, 1, 1, v74);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v76 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v77 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v32, 1, 1, v76);
    sub_BD8AA0(v73, v232, v233, v234, (uint64_t)v35, v235, v236, v240, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v77, &qword_14FAFF8);
    sub_56024((uint64_t)&v241, &qword_14FBF98);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    sub_56024(v75, &qword_14FBF88);
    v56 = *(uint64_t (**)(char *, uint64_t))(v72 + 8);
    v59 = (char *)v73;
    goto LABEL_3;
  }
  if (v48 == enum case for GenericMusicItem.editorialItem(_:))
  {
    v78 = v40;
    v79 = (uint64_t)v35;
    v80 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v78);
    v81 = v218;
    v82 = (uint64_t)v217;
    (*(void (**)(char *, char *, uint64_t))(v218 + 32))(v217, v46, v223);
    v83 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v35, 1, 1, v83);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v84 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v85 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v32, 1, 1, v84);
    sub_BD8F10(v82, v232, v233, v234, (uint64_t)v35, v235, v236, v80, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v85, &qword_14FAFF8);
    sub_56024((uint64_t)&v241, &qword_14FBF98);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    sub_56024(v79, &qword_14FBF88);
    v56 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
    v59 = (char *)v82;
    v86 = (uint64_t *)&v250;
LABEL_28:
    v60 = *(v86 - 32);
    goto LABEL_29;
  }
  if (v48 == enum case for GenericMusicItem.genre(_:))
  {
    v87 = v40;
    v88 = (uint64_t)v35;
    v89 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v87);
    v90 = v215;
    v91 = (uint64_t)v214;
    (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v214, v46, v219);
    v92 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v35, 1, 1, v92);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v93 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v94 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v32, 1, 1, v93);
    sub_BD939C(v91, v232, v233, v234, (uint64_t)v35, v235, v236, v89, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v94, &qword_14FAFF8);
    sub_56024((uint64_t)&v241, &qword_14FBF98);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    sub_56024(v88, &qword_14FBF88);
    v56 = *(uint64_t (**)(char *, uint64_t))(v90 + 8);
    v59 = (char *)v91;
    v86 = &v246;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.musicMovie(_:))
  {
    v95 = v40;
    v96 = (uint64_t)v35;
    v97 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v95);
    v98 = v213;
    v99 = (uint64_t)v32;
    v100 = (uint64_t)v212;
    (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v212, v46, v216);
    v101 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v35, 1, 1, v101);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v102 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v32, 1, 1, v102);
    sub_BD980C(v100, v232, v233, v234, (uint64_t)v35, v235, v236, v97, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v99, &qword_14FAFF8);
    sub_56024((uint64_t)&v241, &qword_14FBF98);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    sub_56024(v96, &qword_14FBF88);
    v56 = *(uint64_t (**)(char *, uint64_t))(v98 + 8);
    v59 = (char *)v100;
    v86 = (uint64_t *)&v244 + 1;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v103 = v40;
    v104 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v103);
    v105 = v208;
    v106 = (uint64_t)v207;
    (*(void (**)(char *, char *, uint64_t))(v208 + 32))(v207, v46, v211);
    v107 = type metadata accessor for Actions.MetricsReportingContext(0);
    v108 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v32, 1, 1, v107);
    sub_BD9C98(v106, v232, v233, v234, v210, v235, v236, v104, &v247, v231, a10, v61, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v108, &qword_14FAFF8);
    v56 = *(uint64_t (**)(char *, uint64_t))(v105 + 8);
    v59 = (char *)v106;
    v86 = (uint64_t *)&v242;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.playlist(_:))
  {
    v109 = v40;
    v110 = (uint64_t)v35;
    v111 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v109);
    v112 = v205;
    v113 = (uint64_t)v204;
    (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v204, v46, v209);
    v114 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v35, 1, 1, v114);
    v115 = type metadata accessor for Actions.MetricsReportingContext(0);
    v244 = 0u;
    v245 = 0u;
    v246 = 0;
    v116 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v32, 1, 1, v115);
    sub_BDA108(v113, v232, v233, v234, (uint64_t)v35, v235, v236, v111, &v247, v231, (uint64_t)&v244, v61, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v116, &qword_14FAFF8);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    sub_56024(v110, &qword_14FBF88);
    v56 = *(uint64_t (**)(char *, uint64_t))(v112 + 8);
    v59 = (char *)v113;
    v86 = (uint64_t *)&v241;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.radioShow(_:))
  {
    v117 = v40;
    v118 = (uint64_t)v35;
    v119 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v117);
    v120 = v203;
    v121 = (uint64_t)v202;
    (*(void (**)(char *, char *, uint64_t))(v203 + 32))(v202, v46, v206);
    v122 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v35, 1, 1, v122);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v123 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v124 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v32, 1, 1, v123);
    sub_BDA578(v121, v232, v233, v234, (uint64_t)v35, v235, v236, v119, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v124, &qword_14FAFF8);
    sub_56024((uint64_t)&v241, &qword_14FBF98);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    sub_56024(v118, &qword_14FBF88);
    v56 = *(uint64_t (**)(char *, uint64_t))(v120 + 8);
    v59 = (char *)v121;
    v86 = (uint64_t *)&v238;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.song(_:))
  {
    v125 = v40;
    v126 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v125);
    v127 = v199;
    v128 = (uint64_t)v198;
    (*(void (**)(char *, char *, uint64_t))(v199 + 32))(v198, v46, v201);
    v129 = type metadata accessor for Actions.MetricsReportingContext(0);
    v130 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v32, 1, 1, v129);
    sub_BDA9E8(v128, v232, v233, v234, v210, v235, v236, v126, &v247, v231, a10, v61, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v130, &qword_14FAFF8);
    v56 = *(uint64_t (**)(char *, uint64_t))(v127 + 8);
    v59 = (char *)v128;
    v86 = (uint64_t *)&v233;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.station(_:))
  {
    v131 = v40;
    v132 = (uint64_t)v35;
    v133 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v131);
    v134 = v196;
    v135 = (uint64_t)v195;
    (*(void (**)(char *, char *, uint64_t))(v196 + 32))(v195, v46, v200);
    v136 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v35, 1, 1, v136);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v137 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v138 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v32, 1, 1, v137);
    sub_BDAE58(v135, v232, v233, v234, (uint64_t)v35, v235, v236, v133, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v138, &qword_14FAFF8);
    sub_56024((uint64_t)&v241, &qword_14FBF98);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    sub_56024(v132, &qword_14FBF88);
    v56 = *(uint64_t (**)(char *, uint64_t))(v134 + 8);
    v59 = (char *)v135;
    v86 = (uint64_t *)&v232;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    v139 = v40;
    v140 = (uint64_t)v35;
    v141 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v139);
    v142 = v193;
    v143 = (uint64_t)v192;
    (*(void (**)(char *, char *, uint64_t))(v193 + 32))(v192, v46, v197);
    v144 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v35, 1, 1, v144);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v145 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v146 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v32, 1, 1, v145);
    sub_BDB2C8(v143, v232, v233, v234, (uint64_t)v35, v235, v236, v141, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v146, &qword_14FAFF8);
    sub_56024((uint64_t)&v241, &qword_14FBF98);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    sub_56024(v140, &qword_14FBF88);
    v56 = *(uint64_t (**)(char *, uint64_t))(v142 + 8);
    v59 = (char *)v143;
    v86 = &v229;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.tvSeason(_:))
  {
    v147 = v40;
    v148 = (uint64_t)v35;
    v149 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v147);
    v150 = v191;
    v151 = (uint64_t)v190;
    (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v190, v46, v194);
    v152 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v35, 1, 1, v152);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v153 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v154 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56))(v32, 1, 1, v153);
    sub_BDB754(v151, v232, v233, v234, (uint64_t)v35, v235, v236, v149, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v154, &qword_14FAFF8);
    sub_56024((uint64_t)&v241, &qword_14FBF98);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    sub_56024(v148, &qword_14FBF88);
    v56 = *(uint64_t (**)(char *, uint64_t))(v150 + 8);
    v59 = (char *)v151;
    v86 = &v226;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.tvShow(_:))
  {
    v159 = v35;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v40);
    v160 = v188;
    v161 = (uint64_t)v187;
    v162 = v189;
    (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v187, v46, v189);
    v163 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v35, 1, 1, v163);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v164 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v165 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v164 - 8) + 56))(v32, 1, 1, v164);
    sub_BDBBE0(v161, v232, v233, v234, (uint64_t)v35, v235, v236, v240, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v165, &qword_14FAFF8);
    sub_56024((uint64_t)&v241, &qword_14FBF98);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    v166 = (uint64_t)v159;
LABEL_35:
    sub_56024(v166, &qword_14FBF88);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 8))(v161, v162);
    goto LABEL_30;
  }
  if (v48 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v40);
    v160 = v185;
    v161 = (uint64_t)v184;
    v162 = v62;
    (*(void (**)(char *, char *, uint64_t))(v185 + 32))(v184, v46, v62);
    v167 = type metadata accessor for PlaylistContext(0);
    v168 = v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 56))(v35, 1, 1, v167);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v169 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v170 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 56))(v32, 1, 1, v169);
    sub_BDC06C(v161, v232, v233, v234, (uint64_t)v35, v235, v236, v240, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_56024(v170, &qword_14FAFF8);
    sub_56024((uint64_t)&v241, &qword_14FBF98);
    sub_56024((uint64_t)&v244, &qword_14FBFA0);
    v166 = (uint64_t)v168;
    goto LABEL_35;
  }
  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v171 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v171, (uint64_t)static Logger.actions);
  v172 = ((uint64_t (*)(char *, uint64_t, uint64_t))v47)(v186, v239, v40);
  v173 = Logger.logObject.getter(v172);
  v174 = static os_log_type_t.info.getter(v173);
  if (os_log_type_enabled(v173, v174))
  {
    v175 = swift_slowAlloc(12, -1);
    v176 = swift_slowAlloc(32, -1);
    v247 = v176;
    *(_DWORD *)v175 = 136315138;
    v177 = sub_4DD24(&qword_14FBF90, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v178 = v186;
    v179 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v40, v177);
    *(_QWORD *)(v175 + 4) = sub_BA95EC(v179, v180, &v247);
    v181 = swift_bridgeObjectRelease();
    v182 = *(void (**)(char *, uint64_t, __n128))(v41 + 8);
    v182(v178, v40, v181);
    _os_log_impl(&dword_0, v173, v174, "GenericMusicItem %s actions not handled.", (uint8_t *)v175, 0xCu);
    swift_arrayDestroy(v176, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v176, -1, -1);
    swift_slowDealloc(v175, -1, -1);
  }
  else
  {
    v182 = *(void (**)(char *, uint64_t, __n128))(v41 + 8);
    ((void (*)(char *, uint64_t))v182)(v186, v40);
  }

  result = ((uint64_t (*)(char *, uint64_t))v182)(v46, v40);
  v239 = 0;
  v240 = 0;
  v237 = 0;
  v236 = 0;
  v58 = 0;
  v52 = 0;
  v57 = 0;
  v54 = 0;
  v55 = 0;
  v235 = 0;
LABEL_30:
  v155 = v238;
  v156 = v240;
  *v238 = v239;
  v155[1] = v156;
  v157 = v236;
  v155[2] = v237;
  v155[3] = v157;
  v155[4] = v58;
  v155[5] = v52;
  v155[6] = v57;
  v155[7] = v54;
  v158 = v235;
  v155[8] = v55;
  v155[9] = v158;
  return result;
}

void sub_BD30A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  Swift::String v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  _QWORD *v87;
  uint64_t v88;
  char v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  unint64_t v119;
  id v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  Swift::String v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  _QWORD *v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  int64_t v144;
  int64_t v145;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  BOOL v151;
  uint64_t v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  _QWORD *v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  __int128 v175;
  uint64_t v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180[2];
  __int128 v181[2];
  uint64_t v182;
  __int128 v183[2];
  uint64_t v184;
  __int128 v185[3];
  uint64_t v186;
  unsigned __int8 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  unsigned __int8 v193;
  __int128 v194;
  __int128 v195[3];
  uint64_t v196;
  unsigned __int8 v197;
  __int128 v198;

  v163 = a8;
  v169 = a6;
  *(_QWORD *)&v178 = a5;
  v165 = a4;
  *(_QWORD *)&v179 = a3;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  __chkstk_darwin(v19);
  *(_QWORD *)&v166 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = type metadata accessor for PlaylistContext(0);
  *(_QWORD *)&v167 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v161 = v21;
  v162 = (_QWORD *)((char *)&v154 - (((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  *(_QWORD *)&v168 = (char *)&v154 - v23;
  v24 = type metadata accessor for UUID(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v154 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 64);
  __chkstk_darwin(v28);
  v31 = (char *)&v154 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = a1;
  sub_5C238(a1, (uint64_t)&v189, &qword_14FBFA0);
  v176 = a7;
  *(_QWORD *)&v177 = a2;
  v174 = v25;
  *(_QWORD *)&v175 = v24;
  v172 = v31;
  v173 = v27;
  v170 = v29;
  v171 = v30;
  if (*((_QWORD *)&v190 + 1))
  {
    sub_8B15C(&v189, (uint64_t)v195);
    sub_55D1C(a2, (uint64_t)&v189);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
    v160 = String.init<A>(describing:)(&v189, v32);
    v33 = v27;
    v35 = v34;
    sub_55D1C(a2, (uint64_t)&v189);
    sub_55D1C((uint64_t)v195, (uint64_t)v185);
    sub_5C238(v179, (uint64_t)&v154 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
    v36 = *(unsigned __int8 *)(v29 + 80);
    v37 = (v36 + 96) & ~v36;
    v38 = swift_allocObject(&unk_13AB5B0, v37 + v30, v36 | 7);
    sub_8B15C(&v189, v38 + 16);
    sub_8B15C(v185, v38 + 56);
    sub_5C090((uint64_t)v31, v38 + v37, &qword_14FAFF8);
    v39 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v40 = UUID.uuidString.getter(v39);
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v24);
    strcpy((char *)&v189, "ActionMenu: ");
    BYTE13(v189) = 0;
    HIWORD(v189) = -5120;
    v43._countAndFlagsBits = v160;
    v43._object = v35;
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    v44 = v189;
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
    v46 = swift_allocObject(v45, 120, 7);
    *(_OWORD *)(v46 + 16) = xmmword_105B360;
    *(_QWORD *)(v46 + 32) = v40;
    *(_QWORD *)(v46 + 40) = v42;
    *(_OWORD *)(v46 + 48) = v44;
    *(_OWORD *)(v46 + 64) = xmmword_10638B0;
    *(_QWORD *)(v46 + 80) = 0;
    *(_QWORD *)(v46 + 88) = 0;
    *(_QWORD *)(v46 + 96) = sub_BE29D4;
    *(_QWORD *)(v46 + 104) = v38;
    *(_BYTE *)(v46 + 112) = 1;
    *(_QWORD *)&v189 = _swiftEmptyArrayStorage;
    sub_C18520(v46);
    v157 = (_QWORD *)v189;
    __swift_destroy_boxed_opaque_existential_1(v195);
  }
  else
  {
    sub_56024((uint64_t)&v189, &qword_14FBFA0);
    v157 = _swiftEmptyArrayStorage;
  }
  v47 = v167;
  v48 = v166;
  v49 = v164;
  sub_5C238((uint64_t)v165, v166, &qword_14FBF88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v48, 1, v49) == 1)
  {
    sub_56024(v48, &qword_14FBF88);
    v50 = _swiftEmptyArrayStorage;
    v51 = v176;
    v52 = v177;
    v53 = "v32@0:8@\"UIDocumentPickerViewController\"16@\"NSArray\"24" + 22;
  }
  else
  {
    v54 = v48;
    v55 = v168;
    sub_BE2504(v54, v168);
    v52 = v177;
    sub_55D1C(v177, (uint64_t)v195);
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
    *(_QWORD *)&v167 = String.init<A>(describing:)(v195, v56);
    v58 = v57;
    v59 = (uint64_t)v162;
    sub_BE2548(v55, (uint64_t)v162);
    v60 = (uint64_t)v172;
    sub_5C238(v179, (uint64_t)v172, &qword_14FAFF8);
    v61 = *(unsigned __int8 *)(v47 + 80);
    v62 = (v61 + 16) & ~v61;
    v63 = ((unint64_t)v161 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = *(unsigned __int8 *)(v170 + 80);
    v65 = (v64 + v63 + 8) & ~v64;
    v66 = swift_allocObject(&unk_13AB588, v65 + v171, v61 | v64 | 7);
    sub_BE2504(v59, v66 + v62);
    *(_QWORD *)(v66 + v63) = v178;
    sub_5C090(v60, v66 + v65, &qword_14FAFF8);
    swift_retain();
    v67 = v173;
    v68 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v69 = UUID.uuidString.getter(v68);
    v71 = v70;
    (*(void (**)(char *, _QWORD))(v174 + 8))(v67, v175);
    strcpy((char *)v195, "ActionMenu: ");
    BYTE13(v195[0]) = 0;
    HIWORD(v195[0]) = -5120;
    v72._countAndFlagsBits = v167;
    v72._object = v58;
    String.append(_:)(v72);
    swift_bridgeObjectRelease();
    v74 = *((_QWORD *)&v195[0] + 1);
    v73 = *(_QWORD *)&v195[0];
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
    v76 = swift_allocObject(v75, 120, 7);
    *(_OWORD *)(v76 + 16) = xmmword_105B360;
    *(_QWORD *)(v76 + 32) = v69;
    *(_QWORD *)(v76 + 40) = v71;
    *(_OWORD *)(v76 + 48) = __PAIR128__(v74, v73);
    *(_OWORD *)(v76 + 64) = xmmword_10638B0;
    *(_QWORD *)(v76 + 80) = 0;
    *(_QWORD *)(v76 + 88) = 0;
    *(_QWORD *)(v76 + 96) = sub_BE2794;
    *(_QWORD *)(v76 + 104) = v66;
    *(_BYTE *)(v76 + 112) = 1;
    v53 = "kerViewController\"16@\"NSArray\"24";
    *(_QWORD *)&v195[0] = _swiftEmptyArrayStorage;
    sub_C18520(v76);
    v50 = *(_QWORD **)&v195[0];
    sub_BE2808(v168);
    v51 = v176;
  }
  v77 = (uint64_t)a16;
  sub_55D1C(v52, (uint64_t)v185);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC130);
  if ((swift_dynamicCast(&v189, v185, v78, v79, 6) & 1) != 0)
  {
    sub_139764(&v189, v195);
    sub_55D1C(v51, (uint64_t)&v189);
    v80 = v179;
    sub_BDF5A4(v195, v178, v169, (uint64_t)&v189, v163, a9, v179, (uint64_t)v185);
    v167 = v185[1];
    v168 = v185[0];
    v166 = v185[2];
    v81 = v186;
    v82 = v187;
    sub_56024((uint64_t)&v189, &qword_14FB068);
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
    v84 = swift_allocObject(v83, 120, 7);
    v85 = v168;
    *(_OWORD *)(v84 + 16) = *((_OWORD *)v53 + 54);
    *(_OWORD *)(v84 + 32) = v85;
    v86 = v166;
    *(_OWORD *)(v84 + 48) = v167;
    *(_OWORD *)(v84 + 64) = v86;
    *(_QWORD *)(v84 + 80) = v81;
    *(_QWORD *)(v84 + 88) = v82;
    *(_OWORD *)(v84 + 96) = v188;
    *(_BYTE *)(v84 + 112) = 1;
    *(_QWORD *)&v189 = _swiftEmptyArrayStorage;
    sub_C18520(v84);
    v87 = (_QWORD *)v189;
    __swift_destroy_boxed_opaque_existential_1(v195);
  }
  else
  {
    v190 = 0u;
    v191 = 0u;
    v189 = 0u;
    sub_56024((uint64_t)&v189, &qword_14FC208);
    v87 = _swiftEmptyArrayStorage;
    v80 = v179;
  }
  *(_QWORD *)&v168 = a15;
  *(_QWORD *)&v167 = a14;
  *(_QWORD *)&v166 = a13;
  v164 = a12;
  v165 = a11;
  sub_55D1C(v52, (uint64_t)&v189);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBFA8);
  v89 = swift_dynamicCast(v183, &v189, v78, v88, 6);
  v161 = v87;
  v162 = v50;
  if ((v89 & 1) == 0)
  {
    v184 = 0;
    memset(v183, 0, sizeof(v183));
    sub_56024((uint64_t)v183, &qword_14FC210);
LABEL_15:
    *(_QWORD *)&v156 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  sub_8B15C(v183, (uint64_t)v195);
  if (!a10)
  {
    __swift_destroy_boxed_opaque_existential_1(v195);
    goto LABEL_15;
  }
  v90 = a10;
  v158 = a16;
  v91 = v90;
  sub_BDFA78((uint64_t)v195, v90, v165, v51, v164, v166, v167, (uint64_t)&v189, v168, v80);
  v155 = v190;
  v156 = v189;
  v154 = v191;
  v92 = v192;
  v93 = v193;
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v95 = swift_allocObject(v94, 120, 7);
  v96 = v156;
  *(_OWORD *)(v95 + 16) = *((_OWORD *)v53 + 54);
  *(_OWORD *)(v95 + 32) = v96;
  v97 = v154;
  *(_OWORD *)(v95 + 48) = v155;
  *(_OWORD *)(v95 + 64) = v97;
  *(_QWORD *)(v95 + 80) = v92;
  *(_QWORD *)(v95 + 88) = v93;
  v77 = (uint64_t)v158;
  *(_OWORD *)(v95 + 96) = v194;
  *(_BYTE *)(v95 + 112) = 1;
  *(_QWORD *)&v183[0] = _swiftEmptyArrayStorage;
  sub_C18520(v95);

  *(_QWORD *)&v156 = *(_QWORD *)&v183[0];
  __swift_destroy_boxed_opaque_existential_1(v195);
LABEL_16:
  v98 = v159;
  v100 = v170;
  v99 = v171;
  v160 = v78;
  sub_55D1C(v52, (uint64_t)v195);
  v101 = String.init<A>(describing:)(v195, v78);
  v158 = v102;
  v159 = v101;
  sub_55D1C(v52, (uint64_t)v195);
  sub_55D1C(v77, (uint64_t)v183);
  v103 = (uint64_t)v172;
  sub_5C238(v80, (uint64_t)v172, &qword_14FAFF8);
  sub_5C238(v98, (uint64_t)v181, &qword_14FBFA0);
  sub_55D1C(v51, (uint64_t)v180);
  v104 = *(unsigned __int8 *)(v100 + 80);
  v105 = (v104 + 96) & ~v104;
  v106 = (v99 + v105 + 7) & 0xFFFFFFFFFFFFFFF8;
  v107 = (v106 + 47) & 0xFFFFFFFFFFFFFFF8;
  v108 = (v107 + 15) & 0xFFFFFFFFFFFFFFF8;
  v109 = (v108 + 15) & 0xFFFFFFFFFFFFFFF8;
  v110 = (v109 + 47) & 0xFFFFFFFFFFFFFFF8;
  v111 = (v110 + 23) & 0xFFFFFFFFFFFFFFF8;
  v112 = swift_allocObject(&unk_13AB560, v111 + 16, v104 | 7);
  sub_8B15C(v195, v112 + 16);
  sub_8B15C(v183, v112 + 56);
  sub_5C090(v103, v112 + v105, &qword_14FAFF8);
  sub_5C090((uint64_t)v181, v112 + v106, &qword_14FBFA0);
  v113 = v178;
  *(_QWORD *)(v112 + v107) = v178;
  v114 = v165;
  *(_QWORD *)(v112 + v108) = v165;
  sub_8B15C(v180, v112 + v109);
  v115 = (_QWORD *)(v112 + v110);
  v116 = v166;
  *v115 = v164;
  v115[1] = v116;
  v117 = (_QWORD *)(v112 + v111);
  v118 = v167;
  v119 = v168;
  *v117 = v167;
  v117[1] = v119;
  swift_retain();
  v120 = v114;
  swift_bridgeObjectRetain();
  sub_1390D8(v118, v119);
  v121 = v173;
  v122 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v123 = UUID.uuidString.getter(v122);
  v125 = v124;
  (*(void (**)(char *, _QWORD))(v174 + 8))(v121, v175);
  strcpy((char *)v195, "ActionMenu: ");
  BYTE13(v195[0]) = 0;
  HIWORD(v195[0]) = -5120;
  v126._countAndFlagsBits = v159;
  v126._object = v158;
  String.append(_:)(v126);
  swift_bridgeObjectRelease();
  v127 = v195[0];
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
  v129 = swift_allocObject(v128, 120, 7);
  v175 = xmmword_105B360;
  *(_OWORD *)(v129 + 16) = xmmword_105B360;
  *(_QWORD *)(v129 + 32) = v123;
  *(_QWORD *)(v129 + 40) = v125;
  *(_OWORD *)(v129 + 48) = v127;
  *(_OWORD *)(v129 + 64) = xmmword_10638B0;
  *(_QWORD *)(v129 + 80) = 0;
  *(_QWORD *)(v129 + 88) = 0;
  *(_QWORD *)(v129 + 96) = sub_BE2460;
  *(_QWORD *)(v129 + 104) = v112;
  *(_BYTE *)(v129 + 112) = 1;
  sub_55D1C(v177, (uint64_t)v195);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBFB0);
  if ((swift_dynamicCast(v181, v195, v160, v130, 6) & 1) != 0)
  {
    sub_8B15C(v181, (uint64_t)v183);
    sub_55D1C(v176, (uint64_t)v181);
    sub_BDFCBC((uint64_t)v183, v113, v169, (uint64_t)v181, v163, v179, 0, 0, (uint64_t)v195);
    v178 = v195[1];
    v179 = v195[0];
    v177 = v195[2];
    v131 = v196;
    v132 = v197;
    sub_56024((uint64_t)v181, &qword_14FB068);
    v133 = swift_allocObject(v128, 120, 7);
    v134 = v179;
    *(_OWORD *)(v133 + 16) = v175;
    *(_OWORD *)(v133 + 32) = v134;
    v135 = v177;
    *(_OWORD *)(v133 + 48) = v178;
    *(_OWORD *)(v133 + 64) = v135;
    *(_QWORD *)(v133 + 80) = v131;
    *(_QWORD *)(v133 + 88) = v132;
    *(_OWORD *)(v133 + 96) = v198;
    *(_BYTE *)(v133 + 112) = 1;
    *(_QWORD *)&v181[0] = _swiftEmptyArrayStorage;
    sub_C18520(v133);
    v136 = *(_QWORD **)&v181[0];
    __swift_destroy_boxed_opaque_existential_1(v183);
  }
  else
  {
    v182 = 0;
    memset(v181, 0, sizeof(v181));
    sub_56024((uint64_t)v181, &qword_14FC218);
    v136 = _swiftEmptyArrayStorage;
  }
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC058);
  v138 = (_QWORD *)swift_allocObject(v137, 80, 7);
  v138[4] = v157;
  *(_QWORD *)&v179 = v138 + 4;
  v139 = v161;
  v138[5] = v162;
  v138[6] = v139;
  v138[7] = v156;
  v138[8] = v129;
  v138[9] = v136;
  v140 = 4;
  v141 = _swiftEmptyArrayStorage;
  while (1)
  {
    v142 = v138[v140];
    v143 = *(_QWORD *)(v142 + 16);
    v144 = v141[2];
    v145 = v144 + v143;
    if (__OFADD__(v144, v143))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v141);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v145 <= v141[3] >> 1)
    {
      if (*(_QWORD *)(v142 + 16))
        goto LABEL_31;
    }
    else
    {
      if (v144 <= v145)
        v147 = v144 + v143;
      else
        v147 = v144;
      v141 = sub_BCCBF8(isUniquelyReferenced_nonNull_native, v147, 1, v141);
      if (*(_QWORD *)(v142 + 16))
      {
LABEL_31:
        v148 = v141[2];
        if ((v141[3] >> 1) - v148 < v143)
          goto LABEL_38;
        v149 = (uint64_t)&v141[11 * v148 + 4];
        __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
        swift_arrayInitWithCopy(v149);
        if (v143)
        {
          v150 = v141[2];
          v151 = __OFADD__(v150, v143);
          v152 = v150 + v143;
          if (v151)
            goto LABEL_39;
          v141[2] = v152;
        }
        goto LABEL_21;
      }
    }
    if (v143)
      goto LABEL_37;
LABEL_21:
    swift_bridgeObjectRelease();
    if (++v140 == 10)
    {
      swift_setDeallocating(v138);
      v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC060);
      swift_arrayDestroy(v179, 6, v153);
      swift_deallocClassInstance(v138, 32, 7);
      return;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

_QWORD *sub_BD3DB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v27[2];
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  uint64_t (*v38)(uint64_t (**)(void));
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  __chkstk_darwin(v6);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v11 = __swift_project_boxed_opaque_existential_1(a1, v9);
  v12 = a2[3];
  v13 = a2[4];
  v14 = __swift_project_boxed_opaque_existential_1(a2, v12);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(uint64_t (**)(char *, _QWORD *, uint64_t, double))(v18 + 16))(v17, v11, v9, v15);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD *, uint64_t, double))(v23 + 16))(v22, v14, v12, v20);
  sub_5C238(a3, (uint64_t)v8, &qword_14FAFF8);
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v24 = static ApplicationCapabilities.Controller.shared;
  swift_retain();
  Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)(v17, v24, (uint64_t)v22, (uint64_t)v8, v9, v12, v10, v13, &v29);
  v33 = v29;
  v27[1] = v30;
  v27[0] = v31;
  v34 = v30;
  v35 = v31;
  v36 = v32;
  v37 = 4;
  v38 = sub_BE9D60;
  v39 = 0;
  v40 = 0x4014000000000000;
  v41 = &unk_14FC330;
  v42 = 0;
  v43 = &unk_14FC338;
  v44 = 0;
  v25 = sub_BCF320((uint64_t)&v33);
  swift_release();
  swift_release();
  swift_release();
  v28 = _swiftEmptyArrayStorage;
  sub_C18520(v25);
  return v28;
}

_QWORD *sub_BD400C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(uint64_t, char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, double);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD v67[6];
  char v68;
  uint64_t (*v69)(uint64_t (**)(void));
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;

  v60 = a3;
  v65 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v7;
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - v15;
  v17 = type metadata accessor for Playlist.Entry(0);
  v18 = *(_QWORD *)(v17 - 8);
  v55 = v17;
  v19 = *(_QWORD *)(v18 + 64);
  v57 = v18;
  __chkstk_darwin(v17);
  v61 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v64 = (char *)&v52 - v21;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v52 - v24;
  v56 = *(void (**)(char *, uint64_t, double))(v26 + 16);
  v54 = (char *)&v52 - v24;
  v56((char *)&v52 - v24, a1, v23);
  v27 = a1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v28(v16, v27, v8);
  sub_5C238(v60, (uint64_t)v7, &qword_14FAFF8);
  v28(v13, (uint64_t)v16, v8);
  v29 = *(unsigned __int8 *)(v9 + 80);
  v30 = (v29 + 16) & ~v29;
  v31 = v29 | 7;
  v60 = swift_allocObject(&unk_13AB6A0, v30 + v10, v29 | 7);
  v32 = v60 + v30;
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v34 = v8;
  v53 = v8;
  v33(v32, v13, v8);
  v35 = v55;
  ((void (*)(char *, char *, uint64_t))v56)(v64, v25, v55);
  v36 = v58;
  v33((uint64_t)v58, v16, v34);
  v37 = v57;
  v38 = *(unsigned __int8 *)(v57 + 80);
  v39 = (v38 + 24) & ~v38;
  v40 = (v19 + v29 + v39) & ~v29;
  v41 = swift_allocObject(&unk_13AB6C8, v40 + v10, v31 | v38);
  v42 = v64;
  *(_QWORD *)(v41 + 16) = v65;
  v43 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 32);
  v43(v41 + v39, v42, v35);
  v33(v41 + v40, v36, v53);
  v44 = v61;
  v45 = v35;
  v43((uint64_t)v61, v54, v35);
  v46 = *(unsigned __int8 *)(v62 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = (v63 + v38 + v47) & ~v38;
  v49 = swift_allocObject(&unk_13AB6F0, v48 + v19, v38 | v46 | 7);
  sub_5C090((uint64_t)v59, v49 + v47, &qword_14FAFF8);
  v43(v49 + v48, v44, v45);
  v67[0] = sub_BB7000;
  v67[1] = v60;
  v67[2] = &unk_14FB5B0;
  v67[3] = v41;
  v67[4] = &unk_14FB5C0;
  v67[5] = v49;
  v68 = 41;
  v69 = sub_B9FFF0;
  v70 = 0;
  v71 = 0x4014000000000000;
  v72 = &unk_14FB598;
  v73 = 0;
  v74 = &unk_14FB5A0;
  v75 = 0;
  swift_retain();
  v50 = sub_BCF464((uint64_t)v67);
  swift_release();
  swift_release();
  swift_release();
  v66 = _swiftEmptyArrayStorage;
  sub_C18520(v50);
  return v66;
}

__n128 static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __int128 v9;
  __n128 result;
  _OWORD v11[5];

  sub_BDF5A4(a1, a2, a3, a4, a5, a6, a7, (uint64_t)v11);
  v9 = v11[3];
  *(_OWORD *)(a8 + 32) = v11[2];
  *(_OWORD *)(a8 + 48) = v9;
  *(_OWORD *)(a8 + 64) = v11[4];
  result = (__n128)v11[1];
  *(_OWORD *)a8 = v11[0];
  *(__n128 *)(a8 + 16) = result;
  return result;
}

uint64_t sub_BD4450(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(char *, char *, uint64_t), int64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unint64_t (**v16)();
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t (*v24)();
  unint64_t (*v25)();
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  double v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  double v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  __int128 v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  int64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  int64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  int64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t (**v95)();
  _QWORD *v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  _QWORD *v102;
  _OWORD v103[3];
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  unint64_t (*v111[8])();
  _OWORD v112[4];
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[8];
  char v118;
  uint64_t (*v119)(uint64_t (**)(void));
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  _QWORD v126[18];

  *(_QWORD *)&v99 = a8;
  *(_QWORD *)&v98 = a7;
  v101 = a5;
  v97 = a11;
  v96 = (_QWORD *)a10;
  v100 = a9;
  v16 = v111;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  __chkstk_darwin(v17);
  v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_55D1C(a1, (uint64_t)v112);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC280);
  v22 = _swiftEmptyArrayStorage;
  if ((swift_dynamicCast(&v113, v112, v20, v21, 6) & 1) == 0)
  {
    v115 = 0;
    v113 = 0u;
    v114 = 0u;
    sub_56024((uint64_t)&v113, &qword_14FC288);
    v95 = (unint64_t (**)())_swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  sub_8B15C(&v113, (uint64_t)v103);
  sub_55D1C((uint64_t)v103, (uint64_t)v126);
  sub_55D1C(a2, (uint64_t)v117);
  sub_5C238(a3, (uint64_t)v19, &qword_14FAFF8);
  if (qword_14F9D68 != -1)
    goto LABEL_47;
  while (1)
  {
    v23 = static ApplicationCapabilities.Controller.shared;
    swift_retain();
    sub_C0638C(v126, v23, v117, (uint64_t)v19, v111);
    v24 = v111[6];
    v25 = v111[7];
    v26 = *((_OWORD *)v16 + 1);
    *((_OWORD *)v16 + 11) = *(_OWORD *)v16;
    *((_OWORD *)v16 + 12) = v26;
    *((_OWORD *)v16 + 13) = *((_OWORD *)v16 + 2);
    v117[6] = v24;
    v117[7] = v25;
    v118 = 42;
    v119 = sub_B9FFF0;
    v120 = 0;
    v121 = 0x4014000000000000;
    v122 = &unk_14FC898;
    v123 = 0;
    v124 = &unk_14FC8A0;
    v125 = 0;
    v27 = *((_OWORD *)v16 + 16);
    *((_OWORD *)v16 + 23) = *((_OWORD *)v16 + 15);
    *((_OWORD *)v16 + 24) = v27;
    v28 = *((_OWORD *)v16 + 12);
    *((_OWORD *)v16 + 19) = *((_OWORD *)v16 + 11);
    *((_OWORD *)v16 + 20) = v28;
    v29 = *((_OWORD *)v16 + 14);
    *((_OWORD *)v16 + 21) = *((_OWORD *)v16 + 13);
    *((_OWORD *)v16 + 22) = v29;
    v30 = *((_OWORD *)v16 + 18);
    *((_OWORD *)v16 + 25) = *((_OWORD *)v16 + 17);
    *((_OWORD *)v16 + 26) = v30;
    v31 = sub_BCF5A8((uint64_t)v126);
    sub_BE327C(v117, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_QWORD *)&v109 = v22;
    sub_C18520(v31);
    v95 = (unint64_t (**)())v109;
    __swift_destroy_boxed_opaque_existential_1(v103);
LABEL_5:
    v93 = v19;
    sub_5C238((uint64_t)a4, (uint64_t)&v109, &qword_14FBFA0);
    v94 = a3;
    if (v110)
    {
      sub_8B15C(&v109, (uint64_t)&v113);
      v32 = *(_QWORD *)(a1 + 24);
      v91 = *(_QWORD *)(a1 + 32);
      v33 = __swift_project_boxed_opaque_existential_1((_QWORD *)a1, v32);
      v92 = a6;
      v34 = v33;
      v35 = *((_QWORD *)&v114 + 1);
      v89 = v115;
      v36 = (_QWORD *)a1;
      v37 = __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
      v90 = &v88;
      v38 = __chkstk_darwin(v37);
      v40 = (char *)&v88 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
      v42 = (*(uint64_t (**)(char *, _QWORD *, uint64_t, double))(v41 + 16))(v40, v34, v32, v38);
      v43 = __chkstk_darwin(v42);
      v45 = (char *)&v88 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD *, uint64_t, double))(v46 + 16))(v45, v37, v35, v43);
      v47 = (uint64_t)v93;
      sub_5C238(a3, (uint64_t)v93, &qword_14FAFF8);
      v48 = (uint64_t)v45;
      a6 = v92;
      Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)(v40, v48, v47, v32, v35, v91, v89, v112);
      v49 = *((_OWORD *)v16 + 6);
      v50 = *((_OWORD *)v16 + 7);
      v51 = *((_OWORD *)v16 + 5);
      v103[0] = *((_OWORD *)v16 + 4);
      v103[1] = v51;
      v103[2] = v49;
      v104 = v50;
      LOBYTE(v105) = 17;
      *((_QWORD *)&v105 + 1) = sub_BE9D50;
      *(_QWORD *)&v106 = 0;
      *((_QWORD *)&v106 + 1) = 0x4014000000000000;
      *(_QWORD *)&v107 = &unk_14FC350;
      *((_QWORD *)&v107 + 1) = 0;
      *(_QWORD *)&v108 = &unk_14FC358;
      *((_QWORD *)&v108 + 1) = 0;
      v52 = v106;
      *((_OWORD *)v16 + 15) = v105;
      *((_OWORD *)v16 + 16) = v52;
      v53 = v108;
      *((_OWORD *)v16 + 17) = v107;
      *((_OWORD *)v16 + 18) = v53;
      v54 = v103[1];
      *((_OWORD *)v16 + 11) = v103[0];
      *((_OWORD *)v16 + 12) = v54;
      v55 = v104;
      *((_OWORD *)v16 + 13) = v103[2];
      *((_OWORD *)v16 + 14) = v55;
      v56 = sub_BCF6EC((uint64_t)v117);
      sub_8AD610(v103);
      v102 = _swiftEmptyArrayStorage;
      sub_C18520(v56);
      v57 = v102;
      __swift_destroy_boxed_opaque_existential_1(&v113);
    }
    else
    {
      sub_56024((uint64_t)&v109, &qword_14FBFA0);
      v57 = _swiftEmptyArrayStorage;
      v36 = (_QWORD *)a1;
      v47 = (uint64_t)v93;
    }
    v58 = v36[3];
    v59 = v36[4];
    v60 = __swift_project_boxed_opaque_existential_1(v36, v58);
    v19 = (char *)&v88;
    v61 = __chkstk_darwin(v60);
    v63 = (char *)&v88 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v64 + 16))(v63, v61);
    sub_55D1C(v98, (uint64_t)v103);
    sub_5C238(v94, v47, &qword_14FAFF8);
    v87 = v47;
    v22 = v96;
    a1 = v97;
    Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v63, v101, (void *)a6, (uint64_t)v103, v99, v100, (uint64_t)v96, v97, (unint64_t (**)())&v113, v87, v58, v59);
    v65 = *(_OWORD *)(v16 + 17);
    v98 = *(_OWORD *)(v16 + 19);
    v99 = v65;
    *(_QWORD *)&v103[0] = v113;
    *(_OWORD *)((char *)v103 + 8) = v65;
    *(_OWORD *)((char *)&v103[1] + 8) = v98;
    *((_QWORD *)&v103[2] + 1) = v116;
    LOBYTE(v104) = 5;
    *((_QWORD *)&v104 + 1) = sub_B9FFF0;
    *(_QWORD *)&v105 = 0;
    *((_QWORD *)&v105 + 1) = 0x4014000000000000;
    *(_QWORD *)&v106 = &unk_14FC6D0;
    *((_QWORD *)&v106 + 1) = 0;
    *(_QWORD *)&v107 = &unk_14FC6D8;
    *((_QWORD *)&v107 + 1) = 0;
    swift_retain();
    v66 = (id)a6;
    swift_bridgeObjectRetain();
    sub_1390D8((uint64_t)v22, a1);
    v67 = sub_BCF830((uint64_t)v103);
    swift_release();
    swift_release();
    swift_release();
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC058);
    v69 = (_QWORD *)swift_allocObject(v68, 56, 7);
    v16 = v95;
    v69[4] = v95;
    a3 = (uint64_t)(v69 + 4);
    v69[5] = v57;
    v69[6] = v67;
    v70 = (int64_t)v16[2];
    swift_bridgeObjectRetain();
    v71 = sub_BCCBF8(0, v70, 1, _swiftEmptyArrayStorage);
    a4 = v71;
    if (v16[2])
    {
      v72 = v71[2];
      if ((v71[3] >> 1) - v72 < v70)
        goto LABEL_44;
      v73 = (uint64_t)&v71[11 * v72 + 4];
      __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
      result = swift_arrayInitWithCopy(v73);
      if (v70)
      {
        v75 = a4[2];
        v76 = __OFADD__(v75, v70);
        v77 = v75 + v70;
        if (v76)
        {
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        a4[2] = v77;
      }
    }
    else if (v70)
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    v78 = v69[5];
    v19 = *(char **)(v78 + 16);
    a6 = a4[2];
    v16 = (unint64_t (**)())&v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (v19)
          goto LABEL_17;
        goto LABEL_26;
      }
    }
    if (a6 <= (uint64_t)v16)
      v81 = (int64_t)&v19[a6];
    else
      v81 = a6;
    a4 = sub_BCCBF8((int *)((char *)&dword_0 + 1), v81, 1, a4);
    a6 = a4[2];
    if (*(_QWORD *)(v78 + 16))
    {
LABEL_17:
      if ((a4[3] >> 1) - a6 < (uint64_t)v19)
        goto LABEL_45;
      __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
      result = swift_arrayInitWithCopy(&a4[11 * a6 + 4]);
      if (v19)
      {
        v79 = a4[2];
        v76 = __OFADD__(v79, v19);
        v80 = &v19[v79];
        if (v76)
          goto LABEL_49;
        a4[2] = v80;
      }
      goto LABEL_27;
    }
LABEL_26:
    if (v19)
      goto LABEL_42;
LABEL_27:
    swift_bridgeObjectRelease();
    v82 = v69[6];
    v19 = *(char **)(v82 + 16);
    a6 = a4[2];
    v16 = (unint64_t (**)())&v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (!v19)
          goto LABEL_39;
        goto LABEL_30;
      }
    }
    if (a6 <= (uint64_t)v16)
      v85 = (int64_t)&v19[a6];
    else
      v85 = a6;
    a4 = sub_BCCBF8((int *)((char *)&dword_0 + 1), v85, 1, a4);
    a6 = a4[2];
    if (!*(_QWORD *)(v82 + 16))
    {
LABEL_39:
      if (!v19)
        goto LABEL_40;
      goto LABEL_43;
    }
LABEL_30:
    if ((a4[3] >> 1) - a6 >= (uint64_t)v19)
      break;
LABEL_46:
    __break(1u);
LABEL_47:
    swift_once(&qword_14F9D68, sub_C3FD38);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
  result = swift_arrayInitWithCopy(&a4[11 * a6 + 4]);
  if (!v19)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_setDeallocating(v69);
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC060);
    swift_arrayDestroy(a3, 3, v86);
    swift_deallocClassInstance(v69, 32, 7);
    return (uint64_t)a4;
  }
  v83 = a4[2];
  v76 = __OFADD__(v83, v19);
  v84 = &v19[v83];
  if (!v76)
  {
    a4[2] = v84;
    goto LABEL_40;
  }
LABEL_50:
  __break(1u);
  return result;
}

__n128 static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  __int128 v10;
  __n128 result;
  _OWORD v12[5];

  sub_BDFCBC(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v12);
  v10 = v12[3];
  *(_OWORD *)(a9 + 32) = v12[2];
  *(_OWORD *)(a9 + 48) = v10;
  *(_OWORD *)(a9 + 64) = v12[4];
  result = (__n128)v12[1];
  *(_OWORD *)a9 = v12[0];
  *(__n128 *)(a9 + 16) = result;
  return result;
}

void sub_BD4D08(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  double v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  double v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  double v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  int64_t v71;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  unint64_t (*v92)();
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE v98[136];
  uint64_t v99;
  uint64_t v100;
  _BYTE v101[136];
  uint64_t v102;
  uint64_t v103;
  _BYTE v104[136];
  _BYTE v105[16];
  id v106;
  _BYTE v107[16];
  id v108;
  _BYTE v109[16];
  id v110;
  unint64_t (*v111)();
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  char v115;
  uint64_t (*v116)(uint64_t (**)(void));
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;

  v87 = a6;
  v88 = a8;
  v90 = a7;
  v91 = (_QWORD *)a4;
  v82 = a5;
  v89 = a9;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  __chkstk_darwin(v13);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v86 = a1[4];
  v17 = __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v21 + 16))(v20, v18);
  v22 = a8;
  v23 = (uint64_t)v15;
  sub_5C238(v22, (uint64_t)v15, &qword_14FAFF8);
  v24 = a2;
  v25 = a3;
  v26 = v82;
  swift_bridgeObjectRetain();
  v27 = v87;
  v28 = v90;
  sub_1390D8(v87, v90);
  Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v20, (uint64_t)v24, (uint64_t)v25, (uint64_t)v91, v26, v27, v28, v23, &v92, v16, v86);
  v85 = v93;
  v112 = v93;
  v84 = v94;
  v113 = v94;
  v111 = v92;
  v114 = v95;
  v115 = 23;
  v116 = sub_BE9D60;
  v117 = 0;
  v118 = 0x4014000000000000;
  v119 = &unk_14FC708;
  v120 = 0;
  v121 = &unk_14FC710;
  v122 = 0;
  v86 = sub_BCF974((uint64_t)&v111);
  swift_release();
  swift_release();
  swift_release();
  v29 = a1[3];
  *(_QWORD *)&v85 = a1[4];
  v30 = __swift_project_boxed_opaque_existential_1(a1, v29);
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v80 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v34 + 16))(v33, v31);
  sub_55D1C(v89, (uint64_t)v104);
  sub_5C238(v88, v23, &qword_14FAFF8);
  v35 = v24;
  v36 = v25;
  *(_QWORD *)&v84 = v36;
  swift_bridgeObjectRetain();
  v37 = v87;
  v38 = v90;
  sub_1390D8(v87, v90);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v33, v35, (uint64_t)v36, (uint64_t)v104, (uint64_t)v91, v26, v37, &v96, v38, v23, v29, v85);
  sub_BF28C8(&v96, (uint64_t)v98);
  sub_BE0FB8(&v96, &v110);
  sub_BE0FF4(&v110);
  sub_5C090((uint64_t)&v97, (uint64_t)v109, &qword_14FC108);
  sub_8B134((uint64_t)v109);
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&v85 = sub_BCFAB8((uint64_t)v98);
  sub_BE101C((uint64_t)v98);
  v39 = a1[3];
  v81 = a1[4];
  v40 = __swift_project_boxed_opaque_existential_1(a1, v39);
  v41 = __chkstk_darwin(v40);
  v43 = (char *)&v80 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v44 + 16))(v43, v41);
  sub_55D1C(v89, (uint64_t)v104);
  v45 = v23;
  v83 = v23;
  sub_5C238(v88, v23, &qword_14FAFF8);
  v46 = v35;
  v47 = (id)v84;
  v48 = v26;
  swift_bridgeObjectRetain();
  v49 = v90;
  sub_1390D8(v37, v90);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v43, v46, (uint64_t)v47, (uint64_t)v104, (uint64_t)v91, v48, v37, &v99, v49, v45, v39, v81);
  sub_BF28C8(&v99, (uint64_t)v101);
  sub_BE0FB8(&v99, &v108);
  sub_BE0FF4(&v108);
  sub_5C090((uint64_t)&v100, (uint64_t)v107, &qword_14FC108);
  sub_8B134((uint64_t)v107);
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&v84 = sub_BCFAB8((uint64_t)v101);
  sub_BE101C((uint64_t)v101);
  v51 = a1[3];
  v50 = a1[4];
  v52 = __swift_project_boxed_opaque_existential_1(a1, v51);
  v53 = __chkstk_darwin(v52);
  v55 = (char *)&v80 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v56 + 16))(v55, v53);
  sub_55D1C(v89, (uint64_t)v104);
  v57 = v83;
  sub_5C238(v88, v83, &qword_14FAFF8);
  v58 = v46;
  v59 = v47;
  swift_bridgeObjectRetain();
  v60 = v87;
  v61 = v90;
  sub_1390D8(v87, v90);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v55, v58, (uint64_t)v59, (uint64_t)v104, (uint64_t)v91, v48, v60, &v102, v61, v57, v51, v50);
  sub_BF28C8(&v102, (uint64_t)v104);
  sub_BE0FB8(&v102, &v106);
  sub_BE0FF4(&v106);
  sub_5C090((uint64_t)&v103, (uint64_t)v105, &qword_14FC108);
  sub_8B134((uint64_t)v105);
  swift_release();
  swift_release();
  swift_release();
  v62 = sub_BCFAB8((uint64_t)v104);
  sub_BE101C((uint64_t)v104);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC058);
  v64 = (_QWORD *)swift_allocObject(v63, 64, 7);
  v64[4] = v86;
  v91 = v64 + 4;
  v65 = v84;
  v64[5] = v85;
  v64[6] = v65;
  v64[7] = v62;
  v66 = _swiftEmptyArrayStorage;
  v67 = 4;
  while (1)
  {
    v68 = v64[v67];
    v69 = *(_QWORD *)(v68 + 16);
    v70 = v66[2];
    v71 = v70 + v69;
    if (__OFADD__(v70, v69))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v66);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v71 <= v66[3] >> 1)
    {
      if (*(_QWORD *)(v68 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v70 <= v71)
        v73 = v70 + v69;
      else
        v73 = v70;
      v66 = sub_BCCBF8(isUniquelyReferenced_nonNull_native, v73, 1, v66);
      if (*(_QWORD *)(v68 + 16))
      {
LABEL_13:
        v74 = v66[2];
        if ((v66[3] >> 1) - v74 < v69)
          goto LABEL_20;
        v75 = (uint64_t)&v66[11 * v74 + 4];
        __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
        swift_arrayInitWithCopy(v75);
        if (v69)
        {
          v76 = v66[2];
          v77 = __OFADD__(v76, v69);
          v78 = v76 + v69;
          if (v77)
            goto LABEL_21;
          v66[2] = v78;
        }
        goto LABEL_3;
      }
    }
    if (v69)
      goto LABEL_19;
LABEL_3:
    swift_bridgeObjectRelease();
    if (++v67 == 8)
    {
      swift_setDeallocating(v64);
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC060);
      swift_arrayDestroy(v91, 4, v79);
      swift_deallocClassInstance(v64, 32, 7);
      return;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}

void static MusicActions.queueActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  __int128 v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[40];
  __int128 v50[3];

  v45 = a5;
  v46 = a6;
  v41 = a3;
  v43 = a8;
  v44 = a9;
  v14 = type metadata accessor for UUID(0);
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_55D1C(a1, (uint64_t)v50);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBFA8);
  v42 = String.init<A>(describing:)(v50, v21);
  v23 = v22;
  sub_55D1C(a1, (uint64_t)v50);
  sub_5C238(a4, (uint64_t)v49, &qword_14FB068);
  sub_5C238(a10, (uint64_t)v20, &qword_14FAFF8);
  v24 = *(unsigned __int8 *)(v18 + 80);
  v25 = (v24 + 144) & ~v24;
  v26 = (_QWORD *)swift_allocObject(&unk_13AAA80, v25 + v19, v24 | 7);
  sub_8B15C(v50, (uint64_t)(v26 + 2));
  v27 = v41;
  v26[7] = a2;
  v26[8] = v27;
  sub_5C090((uint64_t)v49, (uint64_t)(v26 + 9), &qword_14FB068);
  v28 = v46;
  v26[14] = v45;
  v26[15] = v28;
  v29 = (uint64_t)v26 + v25;
  v31 = v43;
  v30 = v44;
  v26[16] = v43;
  v26[17] = v30;
  sub_5C090((uint64_t)v20, v29, &qword_14FAFF8);
  v32 = a2;
  v33 = v27;
  swift_bridgeObjectRetain();
  sub_1390D8(v31, v30);
  v34 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v35 = UUID.uuidString.getter(v34);
  v37 = v36;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v48);
  strcpy((char *)v50, "ActionMenu: ");
  BYTE13(v50[0]) = 0;
  HIWORD(v50[0]) = -5120;
  v38._countAndFlagsBits = v42;
  v38._object = v23;
  String.append(_:)(v38);
  swift_bridgeObjectRelease(v23);
  v39 = v50[0];
  *(_QWORD *)a7 = v35;
  *(_QWORD *)(a7 + 8) = v37;
  *(_OWORD *)(a7 + 16) = v39;
  *(_QWORD *)(a7 + 32) = 0;
  *(_QWORD *)(a7 + 40) = 0xE000000000000000;
  *(_QWORD *)(a7 + 48) = 0;
  *(_BYTE *)(a7 + 56) = 0;
  *(_QWORD *)(a7 + 64) = sub_BE0168;
  *(_QWORD *)(a7 + 72) = v26;
}

void sub_BD569C(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  double v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  _QWORD *v42;
  double v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  double v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  int64_t v72;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD v95[8];
  _BYTE v96[136];
  uint64_t v97;
  _QWORD v98[8];
  _BYTE v99[136];
  uint64_t v100;
  _QWORD v101[8];
  _BYTE v102[136];
  uint64_t v103;
  _QWORD v104[8];
  _BYTE v105[136];
  _BYTE v106[16];
  id v107;
  _BYTE v108[16];
  id v109;
  _BYTE v110[16];
  id v111;
  _BYTE v112[16];
  id v113[2];

  v89 = a8;
  v90 = a4;
  v92 = a7;
  v93 = (_QWORD *)a5;
  v83 = a6;
  v91 = a9;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  __chkstk_darwin(v13);
  v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v88 = a1[4];
  v17 = __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v21 + 16))(v20, v18);
  sub_5C238(a4, (uint64_t)v105, &qword_14FB068);
  sub_5C238(a9, (uint64_t)v15, &qword_14FAFF8);
  v22 = a2;
  v23 = a3;
  v24 = v83;
  swift_bridgeObjectRetain();
  v25 = v92;
  v26 = v89;
  sub_1390D8(v92, v89);
  v81 = v26;
  v27 = v23;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v20, v22, (uint64_t)v23, (uint64_t)v105, (uint64_t)v93, v24, v25, &v94, v81, (uint64_t)v15, v16, v88);
  sub_BF28C8(&v94, (uint64_t)v96);
  sub_BE0FB8(&v94, v113);
  sub_BE0FF4(v113);
  sub_5C090((uint64_t)v95, (uint64_t)v112, &qword_14FC108);
  sub_8B134((uint64_t)v112);
  swift_release(v95[3]);
  swift_release(v95[5]);
  swift_release(v95[7]);
  v88 = sub_BCFAB8((uint64_t)v96);
  sub_BE101C((uint64_t)v96);
  v28 = a1[3];
  v87 = a1[4];
  v29 = __swift_project_boxed_opaque_existential_1(a1, v28);
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v33 + 16))(v32, v30);
  sub_5C238(v90, (uint64_t)v105, &qword_14FB068);
  v34 = (uint64_t)v15;
  sub_5C238(v91, (uint64_t)v15, &qword_14FAFF8);
  v35 = v22;
  v36 = v27;
  v37 = v24;
  swift_bridgeObjectRetain();
  v38 = v92;
  v39 = v89;
  sub_1390D8(v92, v89);
  v82 = v39;
  v40 = v35;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v32, v35, (uint64_t)v36, (uint64_t)v105, (uint64_t)v93, v37, v38, &v97, v82, v34, v28, v87);
  sub_BF28C8(&v97, (uint64_t)v99);
  sub_BE0FB8(&v97, &v111);
  sub_BE0FF4(&v111);
  sub_5C090((uint64_t)v98, (uint64_t)v110, &qword_14FC108);
  sub_8B134((uint64_t)v110);
  swift_release(v98[3]);
  swift_release(v98[5]);
  swift_release(v98[7]);
  v87 = sub_BCFAB8((uint64_t)v99);
  sub_BE101C((uint64_t)v99);
  v41 = a1[3];
  v86 = a1[4];
  v42 = __swift_project_boxed_opaque_existential_1(a1, v41);
  v43 = __chkstk_darwin(v42);
  v45 = (char *)&v83 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v46 + 16))(v45, v43);
  sub_5C238(v90, (uint64_t)v105, &qword_14FB068);
  v47 = v34;
  sub_5C238(v91, v34, &qword_14FAFF8);
  v48 = v40;
  v84 = v48;
  v49 = v36;
  v85 = v49;
  v50 = v37;
  swift_bridgeObjectRetain();
  v51 = v92;
  v52 = v89;
  sub_1390D8(v92, v89);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v45, v48, (uint64_t)v49, (uint64_t)v105, (uint64_t)v93, v50, v51, &v100, v52, v47, v41, v86);
  sub_BF28C8(&v100, (uint64_t)v102);
  sub_BE0FB8(&v100, &v109);
  sub_BE0FF4(&v109);
  sub_5C090((uint64_t)v101, (uint64_t)v108, &qword_14FC108);
  sub_8B134((uint64_t)v108);
  swift_release(v101[3]);
  swift_release(v101[5]);
  swift_release(v101[7]);
  v86 = sub_BCFAB8((uint64_t)v102);
  sub_BE101C((uint64_t)v102);
  v54 = a1[3];
  v53 = a1[4];
  v55 = __swift_project_boxed_opaque_existential_1(a1, v54);
  v56 = __chkstk_darwin(v55);
  v58 = (char *)&v83 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v59 + 16))(v58, v56);
  sub_5C238(v90, (uint64_t)v105, &qword_14FB068);
  sub_5C238(v91, v47, &qword_14FAFF8);
  v60 = v84;
  v61 = v85;
  swift_bridgeObjectRetain();
  v62 = v92;
  sub_1390D8(v92, v52);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v58, v60, (uint64_t)v61, (uint64_t)v105, (uint64_t)v93, v50, v62, &v103, v52, v47, v54, v53);
  sub_BF28C8(&v103, (uint64_t)v105);
  sub_BE0FB8(&v103, &v107);
  sub_BE0FF4(&v107);
  sub_5C090((uint64_t)v104, (uint64_t)v106, &qword_14FC108);
  sub_8B134((uint64_t)v106);
  swift_release(v104[3]);
  swift_release(v104[5]);
  swift_release(v104[7]);
  v63 = sub_BCFAB8((uint64_t)v105);
  sub_BE101C((uint64_t)v105);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC058);
  v65 = (_QWORD *)swift_allocObject(v64, 64, 7);
  v65[4] = v88;
  v93 = v65 + 4;
  v66 = v86;
  v65[5] = v87;
  v65[6] = v66;
  v65[7] = v63;
  v67 = _swiftEmptyArrayStorage;
  v68 = 4;
  while (1)
  {
    v69 = v65[v68];
    v70 = *(_QWORD *)(v69 + 16);
    v71 = v67[2];
    v72 = v71 + v70;
    if (__OFADD__(v71, v70))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v67);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v72 <= v67[3] >> 1)
    {
      if (*(_QWORD *)(v69 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v71 <= v72)
        v74 = v71 + v70;
      else
        v74 = v71;
      v67 = sub_BCCBF8(isUniquelyReferenced_nonNull_native, v74, 1, v67);
      if (*(_QWORD *)(v69 + 16))
      {
LABEL_13:
        v75 = v67[2];
        if ((v67[3] >> 1) - v75 < v70)
          goto LABEL_20;
        v76 = (uint64_t)&v67[11 * v75 + 4];
        __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
        swift_arrayInitWithCopy(v76);
        if (v70)
        {
          v77 = v67[2];
          v78 = __OFADD__(v77, v70);
          v79 = v77 + v70;
          if (v78)
            goto LABEL_21;
          v67[2] = v79;
        }
        goto LABEL_3;
      }
    }
    if (v70)
      goto LABEL_19;
LABEL_3:
    swift_bridgeObjectRelease(v69);
    if (++v68 == 8)
    {
      swift_setDeallocating(v65);
      v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC060);
      swift_arrayDestroy(v93, 4, v80);
      swift_deallocClassInstance(v65, 32, 7);
      return;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}

uint64_t sub_BD5E08(uint64_t a1, char a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  double v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  double v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)();
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  double v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  int64_t v106;
  char *v107;
  int64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  _QWORD *v123;
  double v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  double v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  int64_t v140;
  uint64_t result;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int64_t v149;
  uint64_t v150;
  int64_t v151;
  int64_t v152;
  int64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  _QWORD *v167;
  _QWORD *v168;
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  _OWORD v172[12];
  uint64_t v173;
  __int128 v174[3];
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  _OWORD v179[5];
  uint64_t v180;
  __int128 v181[3];
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  uint64_t v191;
  __int128 v192[3];
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  _BYTE v197[25];
  char v198;
  unint64_t (*v199)(uint64_t (**)(void));
  uint64_t v200;
  uint64_t v201;
  void *v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  _OWORD v206[4];
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219[2];
  _OWORD v220[4];
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  _OWORD v225[8];
  _OWORD v226[9];

  *(_QWORD *)&v170 = a6;
  *(_QWORD *)&v171 = a5;
  v168 = a4;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  __chkstk_darwin(v13);
  v169 = (uint64_t)&v159 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_BCFC14(a1);
  v16 = v15;
  v17 = _swiftEmptyArrayStorage;
  if ((a2 & 1) != 0)
  {
    v160 = a7;
    v161 = a8;
    v162 = v15;
    v18 = a3[3];
    *(_QWORD *)&v166 = a3[4];
    *(_QWORD *)&v165 = a3[5];
    v19 = __swift_project_boxed_opaque_existential_1(a3, v18);
    v20 = v168[3];
    *(_QWORD *)&v164 = v168[4];
    v21 = __swift_project_boxed_opaque_existential_1(v168, v20);
    *(_QWORD *)&v163 = &v159;
    v22 = __chkstk_darwin(v21);
    v167 = a3;
    v24 = (char *)&v159 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    v26 = (*(uint64_t (**)(char *, _QWORD *, uint64_t, double))(v25 + 16))(v24, v19, v18, v22);
    v27 = __chkstk_darwin(v26);
    v29 = (char *)&v159 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, uint64_t, double))(v30 + 16))(v29, v21, v20, v27);
    v31 = v169;
    sub_5C238(v170, v169, &qword_14FAFF8);
    v32 = v171;
    Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)(v24, v171, (uint64_t)v29, v31, v18, v20, v166, v165, (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))v220, v164);
    v33 = *(_QWORD *)&v220[0];
    v34 = *((_QWORD *)&v220[3] + 1);
    v164 = *(_OWORD *)((char *)v220 + 8);
    v165 = *(_OWORD *)((char *)&v220[1] + 8);
    v166 = *(_OWORD *)((char *)&v220[2] + 8);
    v35 = (_OWORD *)swift_allocObject(&unk_13AB038, 80, 7);
    v36 = v220[1];
    v35[1] = v220[0];
    v35[2] = v36;
    v37 = v220[3];
    v35[3] = v220[2];
    v35[4] = v37;
    *(_OWORD *)((char *)v206 + 8) = v164;
    *(_OWORD *)((char *)&v206[1] + 8) = v165;
    *(_OWORD *)((char *)&v206[2] + 8) = v166;
    *(_QWORD *)&v206[0] = v33;
    *((_QWORD *)&v206[3] + 1) = v34;
    LOBYTE(v207) = 8;
    *((_QWORD *)&v207 + 1) = sub_BAB7D0;
    *(_QWORD *)&v208 = v35;
    *((_QWORD *)&v208 + 1) = 0x4014000000000000;
    *(_QWORD *)&v209 = &unk_14FB2E8;
    *((_QWORD *)&v209 + 1) = 0;
    *(_QWORD *)&v210 = &unk_14FB2F0;
    *((_QWORD *)&v210 + 1) = 0;
    v226[2] = v206[2];
    v226[3] = v206[3];
    v226[0] = v206[0];
    v226[1] = v206[1];
    v226[4] = v207;
    v226[5] = v208;
    v226[6] = v209;
    v226[7] = v210;
    swift_retain(v32);
    swift_retain(v164);
    swift_retain(v165);
    swift_retain(v166);
    swift_retain(v34);
    *(_QWORD *)&v166 = sub_BCFD58((uint64_t)v226);
    sub_BE327C(v206, (void (*)(uint64_t))&_swift_release);
    v38 = v167;
    v39 = v167[3];
    v40 = v167[4];
    v41 = v167[5];
    v42 = __swift_project_boxed_opaque_existential_1(v167, v39);
    v43 = __chkstk_darwin(v42);
    v45 = (char *)&v159 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v46 + 16))(v45, v43);
    v47 = v169;
    sub_5C238(v170, v169, &qword_14FAFF8);
    v48 = (uint64_t)v45;
    v49 = v171;
    Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)(v48, v171, v47, v39, v40, v41, (uint64_t (**)())&v221);
    v211 = v221;
    v212 = v222;
    v213 = v223;
    v214 = v224;
    LOBYTE(v215) = 40;
    *((_QWORD *)&v215 + 1) = sub_BB5270;
    *(_QWORD *)&v216 = 0;
    *((_QWORD *)&v216 + 1) = 0x4014000000000000;
    *(_QWORD *)&v217 = &unk_14FB530;
    *((_QWORD *)&v217 + 1) = 0;
    *(_QWORD *)&v218 = &unk_14FB538;
    *((_QWORD *)&v218 + 1) = 0;
    v225[4] = v215;
    v225[5] = v216;
    v225[6] = v217;
    v225[7] = v218;
    v225[0] = v221;
    v225[1] = v222;
    v225[2] = v223;
    v225[3] = v224;
    swift_retain(v49);
    *(_QWORD *)&v165 = sub_BCFE9C((uint64_t)v225);
    sub_BE327C(&v211, (void (*)(uint64_t))&_swift_release);
    v50 = v38[3];
    *(_QWORD *)&v164 = v38[4];
    *(_QWORD *)&v163 = v38[5];
    v51 = __swift_project_boxed_opaque_existential_1(v38, v50);
    v53 = v168[3];
    v52 = v168[4];
    v54 = __swift_project_boxed_opaque_existential_1(v168, v53);
    v55 = __chkstk_darwin(v54);
    v57 = (char *)&v159 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    v59 = (*(uint64_t (**)(char *, _QWORD *, uint64_t, double))(v58 + 16))(v57, v51, v50, v55);
    v60 = __chkstk_darwin(v59);
    v62 = (char *)&v159 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, uint64_t, double))(v63 + 16))(v62, v54, v53, v60);
    v64 = v169;
    sub_5C238(v170, v169, &qword_14FAFF8);
    v65 = (uint64_t (*)())v171;
    swift_retain(v171);
    Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)((uint64_t)v57, (uint64_t)v62, v65, v64, v50, v53, v164, v163, (uint64_t (**)())v181, v52);
    sub_BB0384((uint64_t)v181, (uint64_t)v174);
    v66 = 4;
    v67 = swift_allocObject(&unk_13AB060, 32, 7);
    *(_QWORD *)(v67 + 16) = &unk_14FB350;
    *(_QWORD *)(v67 + 24) = 0;
    v198 = 39;
    v195 = v177;
    v196 = v178;
    *(_OWORD *)v197 = v179[0];
    *(_OWORD *)&v197[9] = *(_OWORD *)((char *)v179 + 9);
    v192[2] = v174[2];
    v193 = v175;
    v194 = v176;
    v192[0] = v174[0];
    v192[1] = v174[1];
    v199 = sub_BAD3F0;
    v200 = 0;
    v201 = 0x403E000000000000;
    v202 = &unk_14FB368;
    v203 = v67;
    v204 = &unk_14FB358;
    v205 = 0;
    sub_BB105C(v181);
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF68);
    v69 = swift_allocObject(v68, 120, 7);
    *(_OWORD *)(v69 + 16) = xmmword_105B360;
    LOBYTE(v62) = v198;
    sub_5C238((uint64_t)v192, (uint64_t)v181, &qword_14FB400);
    v70 = swift_allocObject(&unk_13AB088, 216, 7);
    v71 = v190;
    *(_OWORD *)(v70 + 176) = v189;
    *(_OWORD *)(v70 + 192) = v71;
    *(_QWORD *)(v70 + 208) = v191;
    v72 = v186;
    *(_OWORD *)(v70 + 112) = v185;
    *(_OWORD *)(v70 + 128) = v72;
    v73 = v188;
    *(_OWORD *)(v70 + 144) = v187;
    *(_OWORD *)(v70 + 160) = v73;
    v74 = v182;
    *(_OWORD *)(v70 + 48) = v181[2];
    *(_OWORD *)(v70 + 64) = v74;
    v75 = v184;
    *(_OWORD *)(v70 + 80) = v183;
    *(_OWORD *)(v70 + 96) = v75;
    v76 = v181[1];
    *(_OWORD *)(v70 + 16) = v181[0];
    *(_OWORD *)(v70 + 32) = v76;
    sub_5C238((uint64_t)v192, (uint64_t)v174, &qword_14FB400);
    v77 = swift_allocObject(&unk_13AB0B0, 216, 7);
    v78 = v179[4];
    *(_OWORD *)(v77 + 176) = v179[3];
    *(_OWORD *)(v77 + 192) = v78;
    *(_QWORD *)(v77 + 208) = v180;
    v79 = v179[0];
    *(_OWORD *)(v77 + 112) = v178;
    *(_OWORD *)(v77 + 128) = v79;
    v80 = v179[2];
    *(_OWORD *)(v77 + 144) = v179[1];
    *(_OWORD *)(v77 + 160) = v80;
    v81 = v175;
    *(_OWORD *)(v77 + 48) = v174[2];
    *(_OWORD *)(v77 + 64) = v81;
    v82 = v177;
    *(_OWORD *)(v77 + 80) = v176;
    *(_OWORD *)(v77 + 96) = v82;
    v83 = v174[1];
    *(_OWORD *)(v77 + 16) = v174[0];
    *(_OWORD *)(v77 + 32) = v83;
    sub_5C238((uint64_t)v192, (uint64_t)v172, &qword_14FB400);
    v84 = swift_allocObject(&unk_13AB0D8, 216, 7);
    v85 = v172[11];
    *(_OWORD *)(v84 + 176) = v172[10];
    *(_OWORD *)(v84 + 192) = v85;
    *(_QWORD *)(v84 + 208) = v173;
    v86 = v172[7];
    *(_OWORD *)(v84 + 112) = v172[6];
    *(_OWORD *)(v84 + 128) = v86;
    v87 = v172[9];
    *(_OWORD *)(v84 + 144) = v172[8];
    *(_OWORD *)(v84 + 160) = v87;
    v88 = v172[3];
    *(_OWORD *)(v84 + 48) = v172[2];
    *(_OWORD *)(v84 + 64) = v88;
    v89 = v172[5];
    *(_OWORD *)(v84 + 80) = v172[4];
    *(_OWORD *)(v84 + 96) = v89;
    v90 = v172[1];
    *(_OWORD *)(v84 + 16) = v172[0];
    *(_OWORD *)(v84 + 32) = v90;
    *(_BYTE *)(v69 + 32) = (_BYTE)v62;
    *(_QWORD *)(v69 + 40) = sub_BE18CC;
    *(_QWORD *)(v69 + 48) = v70;
    *(_QWORD *)(v69 + 56) = sub_BE1990;
    *(_QWORD *)(v69 + 64) = v77;
    *(_QWORD *)(v69 + 72) = &unk_14FC150;
    *(_QWORD *)(v69 + 80) = v84;
    *(_BYTE *)(v69 + 112) = 0;
    sub_56024((uint64_t)v192, &qword_14FB400);
    v91 = v167[3];
    v92 = v167[4];
    v93 = v167[5];
    v94 = __swift_project_boxed_opaque_existential_1(v167, v91);
    v95 = __chkstk_darwin(v94);
    v97 = (char *)&v159 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v98 + 16))(v97, v95);
    sub_55D1C((uint64_t)v168, (uint64_t)v192);
    v99 = v64;
    sub_5C238(v170, v64, &qword_14FAFF8);
    v100 = v171;
    swift_retain(v171);
    Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)((uint64_t)v97, v100, v192, v99, v91, v92, v93, (unint64_t (**)())v172);
    v101 = *((_QWORD *)&v172[2] + 1);
    v163 = *(_OWORD *)((char *)&v172[1] + 8);
    v164 = *(_OWORD *)((char *)v172 + 8);
    *(__int128 *)((char *)v192 + 8) = *(_OWORD *)((char *)v172 + 8);
    *(__int128 *)((char *)&v192[1] + 8) = *(_OWORD *)((char *)&v172[1] + 8);
    *(_QWORD *)&v192[0] = *(_QWORD *)&v172[0];
    *((_QWORD *)&v192[2] + 1) = *((_QWORD *)&v172[2] + 1);
    LOBYTE(v193) = 9;
    *((_QWORD *)&v193 + 1) = sub_B9FFF0;
    *(_QWORD *)&v194 = 0;
    *((_QWORD *)&v194 + 1) = 0x4014000000000000;
    *(_QWORD *)&v195 = &unk_14FB440;
    *((_QWORD *)&v195 + 1) = 0;
    *(_QWORD *)&v196 = &unk_14FB448;
    *((_QWORD *)&v196 + 1) = 0;
    v102 = sub_BCFFE0((uint64_t)v192);
    swift_release(v101);
    swift_release(v163);
    swift_release(v164);
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC058);
    v104 = (_QWORD *)swift_allocObject(v103, 64, 7);
    v104[4] = v166;
    *(_QWORD *)&v164 = v104 + 4;
    v104[5] = v165;
    v104[6] = v69;
    v104[7] = v102;
    v17 = _swiftEmptyArrayStorage;
    v105 = (_QWORD *)(&stru_20 + 56);
    v106 = (int64_t)&qword_14FBF70;
    while (1)
    {
      v107 = (char *)v104[v66];
      v108 = *((_QWORD *)v107 + 2);
      v109 = (_QWORD *)v17[2];
      v110 = (_QWORD *)((char *)v109 + v108);
      if (__OFADD__(v109, v108))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v17);
      if ((_DWORD)isUniquelyReferenced_nonNull_native && (uint64_t)v110 <= v17[3] >> 1)
      {
        if (*((_QWORD *)v107 + 2))
          goto LABEL_14;
      }
      else
      {
        if ((uint64_t)v109 <= (uint64_t)v110)
          v112 = (int64_t)v109 + v108;
        else
          v112 = (int64_t)v109;
        v17 = sub_BCCBF8(isUniquelyReferenced_nonNull_native, v112, 1, v17);
        if (*((_QWORD *)v107 + 2))
        {
LABEL_14:
          v113 = v17[2];
          if ((v17[3] >> 1) - v113 < v108)
            goto LABEL_40;
          v109 = &v17[11 * v113 + 4];
          v110 = v107 + 32;
          __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
          swift_arrayInitWithCopy(v109);
          if (v108)
          {
            v114 = v17[2];
            v115 = __OFADD__(v114, v108);
            v116 = v114 + v108;
            if (v115)
              goto LABEL_41;
            v17[2] = v116;
          }
          goto LABEL_4;
        }
      }
      if (v108)
        goto LABEL_39;
LABEL_4:
      swift_bridgeObjectRelease(v107);
      if (++v66 == 8)
      {
        swift_setDeallocating(v104);
        v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC060);
        swift_arrayDestroy(v164, 4, v117);
        swift_deallocClassInstance(v104, 32, 7);
        a8 = v161;
        v16 = v162;
        a7 = v160;
        a3 = v167;
        break;
      }
    }
  }
  sub_97DDD4((uint64_t)a3, (uint64_t)v181);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC130);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC138);
  if (swift_dynamicCast(v174, v181, v118, v119, 6))
  {
    sub_139764(v174, &v211);
    sub_5C238(a7, (uint64_t)v181, &qword_14FBF98);
    if (*((_QWORD *)&v181[1] + 1))
    {
      sub_8B15C(v181, (uint64_t)v206);
      v120 = *((_QWORD *)&v212 + 1);
      *(_QWORD *)&v166 = *((_QWORD *)&v213 + 1);
      v167 = (_QWORD *)v213;
      v121 = __swift_project_boxed_opaque_existential_1(&v211, *((uint64_t *)&v212 + 1));
      v122 = *((_QWORD *)&v206[1] + 1);
      *(_QWORD *)&v164 = *(_QWORD *)&v206[2];
      v123 = __swift_project_boxed_opaque_existential_1(v206, *((uint64_t *)&v206[1] + 1));
      *(_QWORD *)&v165 = &v159;
      v124 = __chkstk_darwin(v123);
      v126 = (char *)&v159 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0);
      v128 = (*(uint64_t (**)(char *, _QWORD *, uint64_t, double))(v127 + 16))(v126, v121, v120, v124);
      v129 = __chkstk_darwin(v128);
      v131 = (char *)&v159 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD *, uint64_t, double))(v132 + 16))(v131, v123, v122, v129);
      sub_55D1C((uint64_t)v168, (uint64_t)v219);
      sub_5C238(a8, (uint64_t)v181, &qword_14FB060);
      v133 = v169;
      sub_5C238(v170, v169, &qword_14FAFF8);
      v134 = v171;
      swift_retain(v171);
      sub_BA9B5C(v126, v134, (uint64_t)v131, v219, (uint64_t)v181, v133, v120, v122, (unint64_t (**)())v174, (uint64_t)v167, v166, v164);
      v135 = *(_QWORD *)&v174[0];
      v136 = *((_QWORD *)&v174[2] + 1);
      swift_release(v134);
      v170 = *(__int128 *)((char *)&v174[1] + 8);
      v171 = *(__int128 *)((char *)v174 + 8);
      *(__int128 *)((char *)v181 + 8) = *(__int128 *)((char *)v174 + 8);
      *(__int128 *)((char *)&v181[1] + 8) = *(__int128 *)((char *)&v174[1] + 8);
      *(_QWORD *)&v181[0] = v135;
      *((_QWORD *)&v181[2] + 1) = v136;
      LOBYTE(v182) = 2;
      *((_QWORD *)&v182 + 1) = sub_B9FFF0;
      *(_QWORD *)&v183 = 0;
      *((_QWORD *)&v183 + 1) = 0x4014000000000000;
      *(_QWORD *)&v184 = &unk_14FB128;
      *((_QWORD *)&v184 + 1) = 0;
      *(_QWORD *)&v185 = &unk_14FB130;
      *((_QWORD *)&v185 + 1) = 0;
      v137 = sub_BD0124((uint64_t)v181);
      swift_release(v136);
      swift_release(v170);
      swift_release(v171);
      *(_QWORD *)&v219[0] = _swiftEmptyArrayStorage;
      sub_C18520(v137);
      v138 = *(_QWORD **)&v219[0];
      __swift_destroy_boxed_opaque_existential_1(v206);
      __swift_destroy_boxed_opaque_existential_1(&v211);
      goto LABEL_25;
    }
    sub_56024((uint64_t)v181, &qword_14FBF98);
    __swift_destroy_boxed_opaque_existential_1(&v211);
  }
  else
  {
    memset(v174, 0, sizeof(v174));
    sub_56024((uint64_t)v174, &qword_14FC140);
  }
  v138 = _swiftEmptyArrayStorage;
LABEL_25:
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC058);
  v109 = (_QWORD *)swift_allocObject(v139, 56, 7);
  v109[4] = v16;
  v110 = v109 + 4;
  v109[5] = v17;
  v109[6] = v138;
  v140 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  result = (uint64_t)sub_BCCBF8(0, v140, 1, _swiftEmptyArrayStorage);
  v105 = (_QWORD *)result;
  if (*(_QWORD *)(v16 + 16))
  {
    v142 = *(_QWORD *)(result + 16);
    if ((*(_QWORD *)(result + 24) >> 1) - v142 < v140)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    v143 = result + 88 * v142 + 32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
    result = swift_arrayInitWithCopy(v143);
    if (v140)
    {
      v144 = v105[2];
      v115 = __OFADD__(v144, v140);
      v145 = v144 + v140;
      if (v115)
      {
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      v105[2] = v145;
    }
  }
  else if (v140)
  {
    __break(1u);
    goto LABEL_63;
  }
  swift_bridgeObjectRelease(v16);
  v108 = v17[2];
  v106 = v105[2];
  v107 = (char *)(v106 + v108);
  if (__OFADD__(v106, v108))
    goto LABEL_42;
  v146 = v105[3];
  result = swift_bridgeObjectRetain();
  if ((uint64_t)v107 > (uint64_t)(v146 >> 1))
  {
LABEL_43:
    if (v106 <= (uint64_t)v107)
      v149 = (int64_t)v107;
    else
      v149 = v106;
    result = (uint64_t)sub_BCCBF8((int *)((char *)&dword_0 + 1), v149, 1, v105);
    v105 = (_QWORD *)result;
    v106 = *(_QWORD *)(result + 16);
    if (v17[2])
      goto LABEL_34;
    goto LABEL_47;
  }
  if (!v108)
  {
LABEL_47:
    if (!v108)
      goto LABEL_48;
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_34:
  if ((v105[3] >> 1) - v106 < v108)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
  result = swift_arrayInitWithCopy(&v105[11 * v106 + 4]);
  if (v108)
  {
    v147 = v105[2];
    v115 = __OFADD__(v147, v108);
    v148 = v147 + v108;
    if (v115)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v105[2] = v148;
  }
LABEL_48:
  swift_bridgeObjectRelease(v17);
  v150 = v109[6];
  v151 = *(_QWORD *)(v150 + 16);
  v152 = v105[2];
  v153 = v152 + v151;
  if (__OFADD__(v152, v151))
  {
    __break(1u);
  }
  else
  {
    v154 = v105[3];
    result = swift_bridgeObjectRetain();
    if (v153 <= (uint64_t)(v154 >> 1))
    {
      if (v151)
        goto LABEL_51;
      goto LABEL_60;
    }
  }
  if (v152 <= v153)
    v157 = v152 + v151;
  else
    v157 = v152;
  result = (uint64_t)sub_BCCBF8((int *)((char *)&dword_0 + 1), v157, 1, v105);
  v105 = (_QWORD *)result;
  v152 = *(_QWORD *)(result + 16);
  if (!*(_QWORD *)(v150 + 16))
  {
LABEL_60:
    if (!v151)
      goto LABEL_61;
    goto LABEL_64;
  }
LABEL_51:
  if ((v105[3] >> 1) - v152 < v151)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
  result = swift_arrayInitWithCopy(&v105[11 * v152 + 4]);
  if (!v151)
  {
LABEL_61:
    swift_bridgeObjectRelease(v150);
    swift_setDeallocating(v109);
    v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC060);
    swift_arrayDestroy(v110, 3, v158);
    swift_deallocClassInstance(v109, 32, 7);
    return (uint64_t)v105;
  }
  v155 = v105[2];
  v115 = __OFADD__(v155, v151);
  v156 = v155 + v151;
  if (!v115)
  {
    v105[2] = v156;
    goto LABEL_61;
  }
LABEL_70:
  __break(1u);
  return result;
}

void sub_BD6E1C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  double v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  double v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  double v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  int64_t v59;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t (*v77)();
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t (*v81)();
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t (*v85)();
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t (*v89)();
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t (*v93)();
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  char v97;
  uint64_t (*v98)(uint64_t (**)(void));
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t (*v105)();
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  char v109;
  uint64_t (*v110)(uint64_t (**)(void));
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t (*v117)();
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  char v121;
  uint64_t (*v122)(uint64_t (**)(void));
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t (*v129)();
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  char v133;
  uint64_t (*v134)(uint64_t (**)(void));
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;

  v70 = a7;
  *(_QWORD *)&v71 = a8;
  v72 = a6;
  *(_QWORD *)&v73 = a5;
  v74 = a3;
  *(_QWORD *)&v76 = a2;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  v18 = __swift_project_boxed_opaque_existential_1(a1, v16);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v22 + 16))(v21, v19);
  sub_55D1C(a3, (uint64_t)&v117);
  v23 = a4;
  sub_5C238(a4, (uint64_t)&v105, &qword_14FB068);
  sub_5C238(a5, (uint64_t)&v129, &qword_14FB060);
  sub_5C238(a6, (uint64_t)v15, &qword_14FAFF8);
  v24 = v70;
  v25 = v71;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v21, v76, (__int128 *)&v117, (uint64_t)&v105, (uint64_t)&v129, (uint64_t)v15, v70, v71, &v77, v16, v17);
  v69 = v78;
  v130 = v78;
  v68 = v79;
  v131 = v79;
  v129 = v77;
  v132 = v80;
  v133 = 10;
  v134 = sub_BE9D60;
  v135 = 0;
  v136 = 0x4014000000000000;
  v137 = &unk_14FCD68;
  v138 = 0;
  v139 = &unk_14FCD70;
  v140 = 0;
  swift_retain();
  sub_A9DEC(v24, v25);
  v75 = sub_BD0268((uint64_t)&v129);
  swift_release();
  swift_release();
  swift_release();
  v26 = a1[3];
  v27 = a1[4];
  v28 = __swift_project_boxed_opaque_existential_1(a1, v26);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v32 + 16))(v31, v29);
  sub_55D1C(v74, (uint64_t)&v105);
  sub_5C238(v23, (uint64_t)&v93, &qword_14FB068);
  sub_5C238(v73, (uint64_t)&v117, &qword_14FB060);
  v33 = v72;
  sub_5C238(v72, (uint64_t)v15, &qword_14FAFF8);
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v31, v76, (__int128 *)&v105, (uint64_t)&v93, (uint64_t)&v117, (uint64_t)v15, v24, v25, &v81, v26, v27);
  v73 = v82;
  v118 = v82;
  v69 = v83;
  v119 = v83;
  v117 = v81;
  v120 = v84;
  v121 = 55;
  v122 = sub_BE9D60;
  v123 = 0;
  v124 = 0x4014000000000000;
  v125 = &unk_14FCD98;
  v126 = 0;
  v127 = &unk_14FCDA0;
  v128 = 0;
  swift_retain();
  sub_A9DEC(v24, v25);
  v74 = sub_BD03AC((uint64_t)&v117);
  swift_release();
  swift_release();
  swift_release();
  v34 = a1[3];
  v35 = a1[4];
  v36 = __swift_project_boxed_opaque_existential_1(a1, v34);
  v37 = __chkstk_darwin(v36);
  v39 = (char *)&v68 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v40 + 16))(v39, v37);
  sub_5C238(v23, (uint64_t)&v105, &qword_14FB068);
  v41 = v33;
  sub_5C238(v33, (uint64_t)v15, &qword_14FAFF8);
  v42 = v76;
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)((uint64_t)v39, v76, (uint64_t)&v105, (uint64_t)v15, v34, v35, &v85);
  v73 = v86;
  v106 = v86;
  v71 = v87;
  v107 = v87;
  v109 = 54;
  v105 = v85;
  v108 = v88;
  v110 = sub_B9FFF0;
  v111 = 0;
  v112 = 0x4014000000000000;
  v113 = &unk_14FCDC8;
  v114 = 0;
  v115 = &unk_14FCDD0;
  v116 = 0;
  swift_retain();
  v43 = sub_BD04F0((uint64_t)&v105);
  swift_release();
  swift_release();
  swift_release();
  v44 = a1[3];
  v45 = a1[4];
  v46 = __swift_project_boxed_opaque_existential_1(a1, v44);
  v47 = __chkstk_darwin(v46);
  v49 = (char *)&v68 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v50 + 16))(v49, v47);
  sub_5C238(v23, (uint64_t)&v93, &qword_14FB068);
  sub_5C238(v41, (uint64_t)v15, &qword_14FAFF8);
  swift_retain();
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v49, v42, (uint64_t)v15, v44, v45, &v89);
  v76 = v90;
  v94 = v90;
  v73 = v91;
  v95 = v91;
  v93 = v89;
  v96 = v92;
  v97 = 56;
  v98 = sub_BE9D60;
  v99 = 0;
  v100 = 0x4014000000000000;
  v101 = &unk_14FCDF8;
  v102 = 0;
  v103 = &unk_14FCE00;
  v104 = 0;
  v51 = sub_BD0634((uint64_t)&v93);
  swift_release();
  swift_release();
  swift_release();
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC058);
  v53 = (_QWORD *)swift_allocObject(v52, 64, 7);
  v53[4] = v75;
  *(_QWORD *)&v76 = v53 + 4;
  v53[5] = v74;
  v53[6] = v43;
  v53[7] = v51;
  v54 = _swiftEmptyArrayStorage;
  v55 = 4;
  while (1)
  {
    v56 = v53[v55];
    v57 = *(_QWORD *)(v56 + 16);
    v58 = v54[2];
    v59 = v58 + v57;
    if (__OFADD__(v58, v57))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v54);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v59 <= v54[3] >> 1)
    {
      if (*(_QWORD *)(v56 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v58 <= v59)
        v61 = v58 + v57;
      else
        v61 = v58;
      v54 = sub_BCCBF8(isUniquelyReferenced_nonNull_native, v61, 1, v54);
      if (*(_QWORD *)(v56 + 16))
      {
LABEL_13:
        v62 = v54[2];
        if ((v54[3] >> 1) - v62 < v57)
          goto LABEL_20;
        v63 = (uint64_t)&v54[11 * v62 + 4];
        __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
        swift_arrayInitWithCopy(v63);
        if (v57)
        {
          v64 = v54[2];
          v65 = __OFADD__(v64, v57);
          v66 = v64 + v57;
          if (v65)
            goto LABEL_21;
          v54[2] = v66;
        }
        goto LABEL_3;
      }
    }
    if (v57)
      goto LABEL_19;
LABEL_3:
    swift_bridgeObjectRelease();
    if (++v55 == 8)
    {
      swift_setDeallocating(v53);
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC060);
      swift_arrayDestroy(v76, 4, v67);
      swift_deallocClassInstance(v53, 32, 7);
      return;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}

void static MusicActions.tasteActions(item:library:alertPresenter:noticePresenting:ratingViewController:presentationSource:metricsReportingContext:onFinish:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[9];
  _BYTE v53[40];
  __int128 v54[2];
  __int128 v55[2];

  v43 = a8;
  v49 = a6;
  v48 = a5;
  v44 = a2;
  v47 = a11;
  v46 = a10;
  v51 = type metadata accessor for UUID(0);
  v50 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_55D1C(a1, (uint64_t)v52);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBFB0);
  v45 = String.init<A>(describing:)(v52, v22);
  v24 = v23;
  sub_55D1C(a1, (uint64_t)v55);
  sub_55D1C(a3, (uint64_t)v54);
  sub_5C238(a4, (uint64_t)v53, &qword_14FB068);
  sub_6087C(a7, (uint64_t)v52);
  sub_5C238(v43, (uint64_t)v21, &qword_14FAFF8);
  v25 = *(unsigned __int8 *)(v19 + 80);
  v26 = (v25 + 216) & ~v25;
  v27 = (v20 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_13AAAA8, v28 + 16, v25 | 7);
  sub_8B15C(v55, v29 + 16);
  v30 = v44;
  *(_QWORD *)(v29 + 56) = v44;
  sub_8B15C(v54, v29 + 64);
  sub_5C090((uint64_t)v53, v29 + 104, &qword_14FB068);
  sub_648A4((uint64_t)v52, v29 + 144);
  sub_5C090((uint64_t)v21, v29 + v26, &qword_14FAFF8);
  v31 = (uint64_t *)(v29 + v27);
  v32 = v46;
  v33 = v47;
  *v31 = v46;
  v31[1] = v33;
  v34 = (_QWORD *)(v29 + v28);
  v35 = v49;
  *v34 = v48;
  v34[1] = v35;
  swift_retain(v30);
  sub_A9DEC(v32, v33);
  swift_retain(v35);
  v36 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v37 = UUID.uuidString.getter(v36);
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v17, v51);
  strcpy((char *)v52, "ActionMenu: ");
  BYTE5(v52[1]) = 0;
  HIWORD(v52[1]) = -5120;
  v40._countAndFlagsBits = v45;
  v40._object = v24;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v24);
  v41 = v52[0];
  v42 = v52[1];
  *(_QWORD *)a9 = v37;
  *(_QWORD *)(a9 + 8) = v39;
  *(_QWORD *)(a9 + 16) = v41;
  *(_QWORD *)(a9 + 24) = v42;
  *(_QWORD *)(a9 + 32) = 0;
  *(_QWORD *)(a9 + 40) = 0xE000000000000000;
  *(_QWORD *)(a9 + 48) = 0;
  *(_BYTE *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = sub_BE03C8;
  *(_QWORD *)(a9 + 72) = v29;
}

void sub_BD7898(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  double v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  double v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  double v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  double v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t (*v68)();
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int64_t v83;
  int64_t v84;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  _QWORD v103[5];
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)();
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  uint64_t (*v112)();
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t (*v116)();
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t (*v120)();
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t (*v133)();
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  char v137;
  uint64_t (*v138)(uint64_t (**)(void));
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  uint64_t (*v145)();
  __int128 v146;
  __int128 v147;
  uint64_t v148;
  char v149;
  uint64_t (*v150)(uint64_t (**)(void));
  uint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t (*v157)();
  __int128 v158;
  __int128 v159;
  uint64_t v160;
  char v161;
  uint64_t (*v162)(uint64_t (**)(void));
  uint64_t v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  uint64_t (*v169)();
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  char v173;
  uint64_t (*v174)(uint64_t (**)(void));
  uint64_t v175;
  uint64_t v176;
  void *v177;
  uint64_t v178;
  void *v179;
  uint64_t v180;

  v97 = a8;
  v98 = a3;
  *(_QWORD *)&v95 = a7;
  v101 = a5;
  *(_QWORD *)&v102 = a4;
  v100 = a2;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  __chkstk_darwin(v15);
  v17 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v18 = a1[4];
  v20 = __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v24 + 16))(v23, v21);
  sub_55D1C(a3, (uint64_t)&v157);
  sub_5C238(a4, (uint64_t)&v145, &qword_14FB068);
  sub_6087C(a5, (uint64_t)&v169);
  *(_QWORD *)&v96 = a6;
  v25 = v100;
  sub_5C238(a6, (uint64_t)v17, &qword_14FAFF8);
  v26 = v95;
  v27 = v97;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v23, v25, (__int128 *)&v157, (uint64_t)&v145, (uint64_t)&v169, (uint64_t)v17, v95, v97, &v108, v19, v18);
  v28 = v111;
  v94 = v109;
  v170 = v109;
  v93 = v110;
  v171 = v110;
  v169 = v108;
  v172 = v111;
  v173 = 10;
  v174 = sub_BE9D60;
  v175 = 0;
  v176 = 0x4014000000000000;
  v177 = &unk_14FCD68;
  v178 = 0;
  v179 = &unk_14FCD70;
  v180 = 0;
  swift_retain(v25);
  sub_A9DEC(v26, v27);
  v99 = sub_BD0268((uint64_t)&v169);
  swift_release(v28);
  swift_release(v93);
  swift_release(v94);
  v29 = a1[3];
  v30 = a1[4];
  v31 = __swift_project_boxed_opaque_existential_1(a1, v29);
  v32 = __chkstk_darwin(v31);
  v34 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v35 + 16))(v34, v32);
  sub_55D1C(v98, (uint64_t)&v145);
  sub_5C238(v102, (uint64_t)&v133, &qword_14FB068);
  sub_6087C(v101, (uint64_t)&v157);
  sub_5C238(a6, (uint64_t)v17, &qword_14FAFF8);
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v34, v25, (__int128 *)&v145, (uint64_t)&v133, (uint64_t)&v157, (uint64_t)v17, v26, v27, &v112, v29, v30);
  v36 = v115;
  v94 = v113;
  v158 = v113;
  v93 = v114;
  v159 = v114;
  v161 = 55;
  v157 = v112;
  v160 = v115;
  v162 = sub_BE9D60;
  v163 = 0;
  v164 = 0x4014000000000000;
  v165 = &unk_14FCD98;
  v166 = 0;
  v167 = &unk_14FCDA0;
  v168 = 0;
  swift_retain(v25);
  sub_A9DEC(v26, v27);
  v98 = sub_BD03AC((uint64_t)&v157);
  swift_release(v36);
  swift_release(v93);
  swift_release(v94);
  v37 = a1[3];
  v38 = a1[4];
  v39 = __swift_project_boxed_opaque_existential_1(a1, v37);
  v40 = __chkstk_darwin(v39);
  v42 = (char *)&v93 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v43 + 16))(v42, v40);
  v44 = v102;
  sub_5C238(v102, (uint64_t)&v145, &qword_14FB068);
  v45 = v96;
  sub_5C238(v96, (uint64_t)v17, &qword_14FAFF8);
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)((uint64_t)v42, v25, (uint64_t)&v145, (uint64_t)v17, v37, v38, &v116);
  v46 = v119;
  v95 = v117;
  v146 = v117;
  v94 = v118;
  v147 = v118;
  v149 = 54;
  v145 = v116;
  v148 = v119;
  v150 = sub_B9FFF0;
  v151 = 0;
  v152 = 0x4014000000000000;
  v153 = &unk_14FCDC8;
  v154 = 0;
  v155 = &unk_14FCDD0;
  v156 = 0;
  swift_retain(v25);
  v97 = sub_BD04F0((uint64_t)&v145);
  swift_release(v46);
  swift_release(v94);
  swift_release(v95);
  v47 = a1[3];
  v48 = a1[4];
  v49 = __swift_project_boxed_opaque_existential_1(a1, v47);
  v50 = __chkstk_darwin(v49);
  v52 = (char *)&v93 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v53 + 16))(v52, v50);
  sub_5C238(v44, (uint64_t)&v133, &qword_14FB068);
  sub_5C238(v45, (uint64_t)v17, &qword_14FAFF8);
  swift_retain(v25);
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v52, v25, (uint64_t)v17, v47, v48, &v120);
  v54 = v123;
  v102 = v121;
  v134 = v121;
  v96 = v122;
  v135 = v122;
  v133 = v120;
  v136 = v123;
  v137 = 56;
  v138 = sub_BE9D60;
  v139 = 0;
  v140 = 0x4014000000000000;
  v141 = &unk_14FCDF8;
  v142 = 0;
  v143 = &unk_14FCE00;
  v144 = 0;
  v55 = sub_BD0634((uint64_t)&v133);
  swift_release(v54);
  swift_release(v96);
  swift_release(v102);
  sub_55D1C((uint64_t)a1, (uint64_t)v103);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBFB0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC048);
  if ((swift_dynamicCast(&v124, v103, v56, v57, 6) & 1) != 0)
  {
    sub_139764(&v124, &v104);
    v58 = v105;
    v59 = v106;
    v60 = v107;
    v61 = __swift_project_boxed_opaque_existential_1(&v104, v105);
    v62 = __chkstk_darwin(v61);
    v64 = (char *)&v93 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v65 + 16))(v64, v62);
    sub_6087C(v101, (uint64_t)&v124);
    v66 = (_QWORD *)swift_allocObject(&unk_13AAB10, 56, 7);
    v66[2] = v58;
    v66[3] = v59;
    v66[4] = v60;
    v66[5] = a9;
    v66[6] = a10;
    v67 = v100;
    v68 = Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(v64, v100, (uint64_t)sub_BE0908, (uint64_t)v66, (uint64_t)&v124, v58, v59, v60);
    v70 = v69;
    v72 = v71;
    *(_QWORD *)&v124 = v68;
    *((_QWORD *)&v124 + 1) = v69;
    *(_QWORD *)&v125 = v73;
    *((_QWORD *)&v125 + 1) = v71;
    LOBYTE(v126) = 38;
    *((_QWORD *)&v126 + 1) = sub_B9FFF0;
    v127 = 0;
    v128 = 0x4014000000000000;
    v129 = &unk_14FCEF8;
    v130 = 0;
    v131 = &unk_14FCF00;
    v132 = 0;
    swift_retain(v67);
    swift_retain(a10);
    v74 = sub_BD0778(&v124);
    swift_release(v72);
    swift_release(v70);
    v103[0] = _swiftEmptyArrayStorage;
    sub_C18520(v74);
    v75 = (_QWORD *)v103[0];
    __swift_destroy_boxed_opaque_existential_1(&v104);
  }
  else
  {
    v125 = 0u;
    v126 = 0u;
    v124 = 0u;
    sub_56024((uint64_t)&v124, &qword_14FC050);
    v75 = _swiftEmptyArrayStorage;
  }
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC058);
  v77 = (_QWORD *)swift_allocObject(v76, 72, 7);
  v77[4] = v99;
  *(_QWORD *)&v102 = v77 + 4;
  v78 = v97;
  v77[5] = v98;
  v77[6] = v78;
  v77[7] = v55;
  v77[8] = v75;
  v79 = _swiftEmptyArrayStorage;
  v80 = 4;
  while (1)
  {
    v81 = v77[v80];
    v82 = *(_QWORD *)(v81 + 16);
    v83 = v79[2];
    v84 = v83 + v82;
    if (__OFADD__(v83, v82))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v79);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v84 <= v79[3] >> 1)
    {
      if (*(_QWORD *)(v81 + 16))
        goto LABEL_16;
    }
    else
    {
      if (v83 <= v84)
        v86 = v83 + v82;
      else
        v86 = v83;
      v79 = sub_BCCBF8(isUniquelyReferenced_nonNull_native, v86, 1, v79);
      if (*(_QWORD *)(v81 + 16))
      {
LABEL_16:
        v87 = v79[2];
        if ((v79[3] >> 1) - v87 < v82)
          goto LABEL_23;
        v88 = (uint64_t)&v79[11 * v87 + 4];
        __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
        swift_arrayInitWithCopy(v88);
        if (v82)
        {
          v89 = v79[2];
          v90 = __OFADD__(v89, v82);
          v91 = v89 + v82;
          if (v90)
            goto LABEL_24;
          v79[2] = v91;
        }
        goto LABEL_6;
      }
    }
    if (v82)
      goto LABEL_22;
LABEL_6:
    swift_bridgeObjectRelease(v81);
    if (++v80 == 9)
    {
      swift_setDeallocating(v77);
      v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC060);
      swift_arrayDestroy(v102, 5, v92);
      swift_deallocClassInstance(v77, 32, 7);
      return;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_BD81C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v62 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v64 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v63 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Album(0);
  v92[3] = v26;
  v92[4] = &protocol witness table for Album;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v62, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13AB538, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v63, v41 + v32, &qword_14FAFF8);
  sub_5C090(v64, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v43 = v77;
  v42 = v78;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v76;
  *v46 = v75;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v68);
  v49 = v41 + v70;
  *v48 = v44;
  v48[1] = v42;
  sub_8B15C(v85, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v42);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BD8630@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v62 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v64 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v63 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Artist(0);
  v92[3] = v26;
  v92[4] = &protocol witness table for Artist;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v62, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABB28, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v63, v41 + v32, &qword_14FAFF8);
  sub_5C090(v64, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v43 = v77;
  v42 = v78;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v76;
  *v46 = v75;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v68);
  v49 = v41 + v70;
  *v48 = v44;
  v48[1] = v42;
  sub_8B15C(v85, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v42);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BD8AA0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v62 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v64 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v63 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Curator(0);
  v92[3] = v26;
  v92[4] = &protocol witness table for Curator;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v62, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABB50, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v63, v41 + v32, &qword_14FAFF8);
  sub_5C090(v64, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v43 = v77;
  v42 = v78;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v76;
  *v46 = v75;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v68);
  v49 = v41 + v70;
  *v48 = v44;
  v48[1] = v42;
  sub_8B15C(v85, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v42);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BD8F10@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v63 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v62 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for EditorialItem(0);
  v92[3] = v26;
  v92[4] = sub_4DD24(&qword_14FC2F0, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialItem, (uint64_t)&protocol conformance descriptor for EditorialItem);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v64, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABB78, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v62, v41 + v32, &qword_14FAFF8);
  sub_5C090(v63, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v42 = v76;
  v43 = v77;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v75;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v68);
  v48 = v41 + v70;
  v49 = v78;
  *v47 = v44;
  v47[1] = v49;
  sub_8B15C(v85, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v49);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BD939C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v62 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v64 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v63 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Genre(0);
  v92[3] = v26;
  v92[4] = &protocol witness table for Genre;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v62, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABBA0, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v63, v41 + v32, &qword_14FAFF8);
  sub_5C090(v64, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v43 = v77;
  v42 = v78;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v76;
  *v46 = v75;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v68);
  v49 = v41 + v70;
  *v48 = v44;
  v48[1] = v42;
  sub_8B15C(v85, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v42);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BD980C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v63 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v62 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MusicMovie(0);
  v92[3] = v26;
  v92[4] = sub_4DD24(&qword_14FC2F8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v64, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABBC8, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v62, v41 + v32, &qword_14FAFF8);
  sub_5C090(v63, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v42 = v76;
  v43 = v77;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v75;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v68);
  v48 = v41 + v70;
  v49 = v78;
  *v47 = v44;
  v47[1] = v49;
  sub_8B15C(v85, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v49);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BD9C98@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v62 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v64 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v63 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MusicVideo(0);
  v92[3] = v26;
  v92[4] = &protocol witness table for MusicVideo;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v62, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABBF0, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v63, v41 + v32, &qword_14FAFF8);
  sub_5C090(v64, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v43 = v77;
  v42 = v78;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v76;
  *v46 = v75;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v68);
  v49 = v41 + v70;
  *v48 = v44;
  v48[1] = v42;
  sub_8B15C(v85, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v42);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BDA108@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v62 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v64 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v63 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Playlist(0);
  v92[3] = v26;
  v92[4] = &protocol witness table for Playlist;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v62, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABC18, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v63, v41 + v32, &qword_14FAFF8);
  sub_5C090(v64, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v43 = v77;
  v42 = v78;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v76;
  *v46 = v75;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v68);
  v49 = v41 + v70;
  *v48 = v44;
  v48[1] = v42;
  sub_8B15C(v85, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v42);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BDA578@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v62 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v64 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v63 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for RadioShow(0);
  v92[3] = v26;
  v92[4] = &protocol witness table for RadioShow;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v62, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABC40, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v63, v41 + v32, &qword_14FAFF8);
  sub_5C090(v64, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v43 = v77;
  v42 = v78;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v76;
  *v46 = v75;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v68);
  v49 = v41 + v70;
  *v48 = v44;
  v48[1] = v42;
  sub_8B15C(v85, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v42);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BDA9E8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v62 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v64 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v63 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Song(0);
  v92[3] = v26;
  v92[4] = &protocol witness table for Song;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v62, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABC68, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v63, v41 + v32, &qword_14FAFF8);
  sub_5C090(v64, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v43 = v77;
  v42 = v78;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v76;
  *v46 = v75;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v68);
  v49 = v41 + v70;
  *v48 = v44;
  v48[1] = v42;
  sub_8B15C(v85, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v42);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BDAE58@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v62 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v64 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v63 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Station(0);
  v92[3] = v26;
  v92[4] = &protocol witness table for Station;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v62, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABC90, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v63, v41 + v32, &qword_14FAFF8);
  sub_5C090(v64, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v43 = v77;
  v42 = v78;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v76;
  *v46 = v75;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v68);
  v49 = v41 + v70;
  *v48 = v44;
  v48[1] = v42;
  sub_8B15C(v85, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v42);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BDB2C8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v63 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v62 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVEpisode(0);
  v92[3] = v26;
  v92[4] = sub_4DD24(&qword_14FC300, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v64, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABCB8, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v62, v41 + v32, &qword_14FAFF8);
  sub_5C090(v63, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v42 = v76;
  v43 = v77;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v75;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v68);
  v48 = v41 + v70;
  v49 = v78;
  *v47 = v44;
  v47[1] = v49;
  sub_8B15C(v85, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v49);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BDB754@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v63 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v62 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVSeason(0);
  v92[3] = v26;
  v92[4] = sub_4DD24(&qword_14FC308, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v64, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABCE0, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v62, v41 + v32, &qword_14FAFF8);
  sub_5C090(v63, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v42 = v76;
  v43 = v77;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v75;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v68);
  v48 = v41 + v70;
  v49 = v78;
  *v47 = v44;
  v47[1] = v49;
  sub_8B15C(v85, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v49);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BDBBE0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v63 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v62 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVShow(0);
  v92[3] = v26;
  v92[4] = sub_4DD24(&qword_14FC310, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v64, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABD08, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v62, v41 + v32, &qword_14FAFF8);
  sub_5C090(v63, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v42 = v76;
  v43 = v77;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v75;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v68);
  v48 = v41 + v70;
  v49 = v78;
  *v47 = v44;
  v47[1] = v49;
  sub_8B15C(v85, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v49);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BDC06C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85[2];
  _BYTE v86[40];
  _QWORD v87[9];
  __int128 v88[2];
  __int128 v89[2];
  __int128 v90[2];
  _BYTE v91[40];
  _QWORD v92[6];

  v71 = a8;
  v67 = a6;
  v68 = a7;
  v66 = a5;
  v74 = a4;
  v79 = a3;
  v77 = a2;
  v84 = a9;
  v80 = a15;
  v76 = a14;
  v75 = a13;
  v69 = a12;
  v78 = a16;
  v65 = a17;
  v70 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v63 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v62 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for UploadedVideo(0);
  v92[3] = v26;
  v92[4] = sub_4DD24(&qword_14FC318, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v26);
  sub_55D1C((uint64_t)v92, (uint64_t)v87);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v29 = String.init<A>(describing:)(v87, v28);
  v72 = v30;
  v73 = v29;
  sub_5C238(v64, (uint64_t)v91, &qword_14FBFA0);
  sub_55D1C((uint64_t)v92, (uint64_t)v90);
  sub_5C238(v65, (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v66, (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v67, (uint64_t)v89);
  sub_55D1C(v68, (uint64_t)v88);
  sub_5C238(v71, (uint64_t)v87, &qword_14FB060);
  sub_5C238(v69, (uint64_t)v86, &qword_14FBF98);
  sub_55D1C(v70, (uint64_t)v85);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13ABD30, v70 + 40, v31 | v33 | 7);
  sub_5C090((uint64_t)v91, v41 + 16, &qword_14FBFA0);
  sub_8B15C(v90, v41 + 56);
  sub_5C090(v62, v41 + v32, &qword_14FAFF8);
  sub_5C090(v63, v41 + v34, &qword_14FBF88);
  *(_QWORD *)(v41 + v35) = v74;
  sub_8B15C(v89, v41 + v36);
  sub_8B15C(v88, v41 + v37);
  sub_5C090((uint64_t)v87, v41 + v38, &qword_14FB060);
  sub_5C090((uint64_t)v86, v41 + v39, &qword_14FBF98);
  v42 = v76;
  v43 = v77;
  *(_QWORD *)(v41 + v71) = v77;
  v45 = v79;
  v44 = v80;
  *(_QWORD *)(v41 + v69) = v79;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v75;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v68);
  v48 = v41 + v70;
  v49 = v78;
  *v47 = v44;
  v47[1] = v49;
  sub_8B15C(v85, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v44, v49);
  v52 = v81;
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
  strcpy((char *)v87, "ActionMenu: ");
  BYTE5(v87[1]) = 0;
  HIWORD(v87[1]) = -5120;
  v57._countAndFlagsBits = v73;
  v57._object = v72;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v58 = v87[0];
  v59 = v87[1];
  result = __swift_destroy_boxed_opaque_existential_1(v92);
  v61 = v84;
  *v84 = v54;
  v61[1] = v56;
  v61[2] = v58;
  v61[3] = v59;
  v61[4] = 0;
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  *((_BYTE *)v61 + 56) = 0;
  v61[8] = (uint64_t)sub_BE2240;
  v61[9] = v41;
  return result;
}

uint64_t sub_BDC4F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  unint64_t v79;
  void *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  __int128 v86[2];
  _BYTE v87[40];
  _QWORD v88[9];
  __int128 v89[2];
  __int128 v90[2];
  __int128 v91[2];
  _BYTE v92[40];
  _QWORD v93[6];

  v72 = a8;
  v68 = a6;
  v69 = a7;
  v67 = a5;
  v75 = a4;
  v80 = a3;
  v78 = a2;
  v85 = a9;
  v81 = a15;
  v77 = a14;
  v76 = a13;
  v70 = a12;
  v79 = a16;
  v66 = a17;
  v71 = a10;
  v63 = a11;
  v20 = type metadata accessor for UUID(0);
  v83 = *(_QWORD *)(v20 - 8);
  v84 = v20;
  __chkstk_darwin(v20);
  v82 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  __chkstk_darwin(v22);
  v65 = (uint64_t)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  __chkstk_darwin(v25);
  v64 = (uint64_t)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93[3] = a18;
  v93[4] = a19;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v93);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 16))(boxed_opaque_existential_1Tm, a1, a18);
  sub_55D1C((uint64_t)v93, (uint64_t)v88);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  v30 = String.init<A>(describing:)(v88, v29);
  v73 = v31;
  v74 = v30;
  sub_5C238(v63, (uint64_t)v92, &qword_14FBFA0);
  sub_55D1C((uint64_t)v93, (uint64_t)v91);
  sub_5C238(v66, (uint64_t)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FAFF8);
  sub_5C238(v67, (uint64_t)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_14FBF88);
  sub_55D1C(v68, (uint64_t)v90);
  sub_55D1C(v69, (uint64_t)v89);
  sub_5C238(v72, (uint64_t)v88, &qword_14FB060);
  sub_5C238(v70, (uint64_t)v87, &qword_14FBF98);
  sub_55D1C(v71, (uint64_t)v86);
  v32 = *(unsigned __int8 *)(v26 + 80);
  v33 = (v32 + 96) & ~v32;
  v34 = *(unsigned __int8 *)(v23 + 80);
  v35 = (v27 + v34 + v33) & ~v34;
  v36 = (v24 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 79) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v40 + 47) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v72 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v70 + 15) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v41 + 23) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject(&unk_13ABD58, v71 + 40, v32 | v34 | 7);
  sub_5C090((uint64_t)v92, v42 + 16, &qword_14FBFA0);
  sub_8B15C(v91, v42 + 56);
  sub_5C090(v64, v42 + v33, &qword_14FAFF8);
  sub_5C090(v65, v42 + v35, &qword_14FBF88);
  *(_QWORD *)(v42 + v36) = v75;
  sub_8B15C(v90, v42 + v37);
  sub_8B15C(v89, v42 + v38);
  sub_5C090((uint64_t)v88, v42 + v39, &qword_14FB060);
  sub_5C090((uint64_t)v87, v42 + v40, &qword_14FBF98);
  v44 = v78;
  v43 = v79;
  *(_QWORD *)(v42 + v72) = v78;
  v46 = v80;
  v45 = v81;
  *(_QWORD *)(v42 + v70) = v80;
  v47 = (_QWORD *)(v42 + v41);
  v48 = v77;
  *v47 = v76;
  v47[1] = v48;
  v49 = (uint64_t *)(v42 + v69);
  v50 = v42 + v71;
  *v49 = v45;
  v49[1] = v43;
  sub_8B15C(v86, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1390D8(v45, v43);
  v53 = v82;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v83 + 8))(v53, v84);
  strcpy((char *)v88, "ActionMenu: ");
  BYTE5(v88[1]) = 0;
  HIWORD(v88[1]) = -5120;
  v58._countAndFlagsBits = v74;
  v58._object = v73;
  String.append(_:)(v58);
  swift_bridgeObjectRelease();
  v59 = v88[0];
  v60 = v88[1];
  result = __swift_destroy_boxed_opaque_existential_1(v93);
  v62 = v85;
  *v85 = v55;
  v62[1] = v57;
  v62[2] = v59;
  v62[3] = v60;
  v62[4] = 0;
  v62[5] = 0xE000000000000000;
  v62[6] = 0;
  *((_BYTE *)v62 + 56) = 0;
  v62[8] = (uint64_t)sub_BE2240;
  v62[9] = v42;
  return result;
}

uint64_t sub_BDC958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_BDC9E8, 0, 0);
}

uint64_t sub_BDC9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13AB650, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC238, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDCB34(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_14FFBBC;
  v12 = (char *)&dword_14FFBB8 + dword_14FFBB8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_BE3E54;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDCBC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_BDCC54, 0, 0);
}

uint64_t sub_BDCC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13AB790, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC258, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDCDA0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_14FFBDC;
  v12 = (char *)&dword_14FFBD8 + dword_14FFBD8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_BE3E54;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDCE30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_BDCEC0, 0, 0);
}

uint64_t sub_BDCEC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13ABAD8, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC2E8, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDD00C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_14FFC5C;
  v12 = (char *)&dword_14FFC58 + dword_14FFC58;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_BE3E54;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDD09C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.GoToAlbum.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.GoToAlbum.Context;
  v8 = swift_allocObject(&unk_13ABA38, 80, 7);
  *a2 = v8;
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v4;
  *(_QWORD *)(v8 + 32) = v6;
  v10 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 40) = v10;
  v11 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 72) = v7;
  swift_bridgeObjectRetain(v4);
  swift_retain(v10);
  swift_retain(v11);
  return swift_retain(v7);
}

uint64_t sub_BDD154(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_BDD1D0, 0, 0);
}

uint64_t sub_BDD1D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_13ABA10, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_BE354C((_QWORD *)(v0 + 16));
  sub_D351A0(v1, (uint64_t)&unk_14FC2C8, v3);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDD294(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_14FFC3C;
  v13 = (char *)&dword_14FFC38 + dword_14FFC38;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E58;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_BDD324@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;

  v4 = *a1;
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.Share.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Share.Context;
  v8 = swift_allocObject(&unk_13AB970, 80, 7);
  *a2 = v8;
  *(_QWORD *)(v8 + 16) = v4;
  v9 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v8 + 24) = v9;
  v11 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 40) = v11;
  *(_QWORD *)(v8 + 56) = v5;
  *(_QWORD *)(v8 + 64) = v6;
  *(_QWORD *)(v8 + 72) = v7;
  swift_retain(v9);
  swift_retain(v11);
  swift_retain(v5);
  return swift_bridgeObjectRetain(v7);
}

uint64_t sub_BDD3D4(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_BDD450, 0, 0);
}

uint64_t sub_BDD450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_13AB948, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_1399BC((_QWORD *)(v0 + 16));
  sub_D351A0(v1, (uint64_t)&unk_14FC2A8, v3);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDD514(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_14FFC1C;
  v13 = (char *)&dword_14FFC18 + dword_14FFC18;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E58;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

double sub_BDD5A4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  __int128 v11;
  __int128 v12;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 64);
  a2[3] = (uint64_t)&type metadata for Actions.Queue.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Queue.Context;
  v9 = swift_allocObject(&unk_13AAFC0, 88, 7);
  *a2 = v9;
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v5;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v7;
  v11 = *(_OWORD *)(a1 + 32);
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v9 + 48) = v11;
  *(_OWORD *)(v9 + 64) = v12;
  *(_QWORD *)(v9 + 80) = v8;
  sub_1D81FC(v4);
  swift_bridgeObjectRetain();
  swift_retain(v11);
  swift_retain(v12);
  *(_QWORD *)&result = swift_retain(v8).n128_u64[0];
  return result;
}

uint64_t sub_BDD660(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  v4 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(v1 + 152) = v4;
  v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 64) = v6;
  v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v7;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v8;
  return swift_task_switch(sub_BDD6E0, 0, 0);
}

uint64_t sub_BDD6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_13AAF98, 168, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v4;
  *(_QWORD *)(v3 + 160) = *(_QWORD *)(v0 + 144);
  v5 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v5;
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v6;
  v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v7;
  sub_BE11DC(v0 + 16);
  sub_D351A0(v1, (uint64_t)&unk_14FC128, v3);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDD7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v4 + 128) = v6;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a4 + 128);
  v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v4 + 64) = v7;
  v8 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v4 + 96) = v8;
  v9 = *(_OWORD *)(a4 + 16);
  v10 = unk_14FFB1C;
  v13 = (char *)&dword_14FFB18 + dword_14FFB18;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 152) = v11;
  *v11 = v4;
  v11[1] = sub_BDD844;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_BDD844()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_BDD88C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_BDD91C, 0, 0);
}

uint64_t sub_BDD91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13AB880, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC278, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDDA68(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_14FFBFC;
  v12 = (char *)&dword_14FFBF8 + dword_14FFBF8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_BE3E54;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDDAF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_BDDB88, 0, 0);
}

uint64_t sub_BDDB88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13AB420, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC1E0, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDDCD4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_14FFB7C;
  v12 = (char *)&dword_14FFB78 + dword_14FFB78;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_BE3E54;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDDD64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_BDDDF4, 0, 0);
}

uint64_t sub_BDDDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13AB178, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC170, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDDF40(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_14FF984;
  v12 = (char *)&dword_14FF980 + dword_14FF980;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_BE3E54;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDDFD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(char);

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (*)(char))((char *)&dword_14FF970 + dword_14FF970);
  v2 = (_QWORD *)swift_task_alloc(unk_14FF974);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_BDE034;
  return v4(0);
}

uint64_t sub_BDE034(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_BDE090(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_BDE10C, 0, 0);
}

uint64_t sub_BDE10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_13AB290, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_BE1EDC((_QWORD *)(v0 + 16));
  sub_D351A0(v1, (uint64_t)&unk_14FC1A0, v3);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDE1D0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_14FFB3C;
  v13 = (char *)&dword_14FFB38 + dword_14FFB38;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_BDE260;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_BDE260()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_BDE2A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;
  __int128 v13;

  v7 = *a1;
  v8 = a1[7];
  a5[3] = a2;
  a5[4] = a3;
  v9 = swift_allocObject(a4, 80, 7);
  *a5 = v9;
  *(_QWORD *)(v9 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v9 + 24) = v10;
  v12 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v9 + 40) = v12;
  v13 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 72) = v8;
  swift_retain(v10);
  swift_retain(v12);
  swift_retain(v13);
  return swift_retain(v8);
}

uint64_t sub_BDE344(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_BDE3C0, 0, 0);
}

uint64_t sub_BDE3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_13AB358, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_BE1EDC((_QWORD *)(v0 + 16));
  sub_D351A0(v1, (uint64_t)&unk_14FC1C0, v3);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDE484(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_14FFB5C;
  v13 = (char *)&dword_14FFB58 + dword_14FFB58;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E58;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_BDE514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_BDE5A4, 0, 0);
}

uint64_t sub_BDE5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13AB4E8, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC200, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDE6F0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_14FFB9C;
  v12 = (char *)&dword_14FFB98 + dword_14FFB98;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_BE3E54;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDE780(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_BDE810, 0, 0);
}

uint64_t sub_BDE810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13AAC78, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC0A0, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDE95C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_14FFA9C;
  v12 = (char *)&dword_14FFA98 + dword_14FFA98;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_BE3E54;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDE9EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_BDEA7C, 0, 0);
}

uint64_t sub_BDEA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13AAD40, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC0C0, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDEBC8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_14FFABC;
  v12 = (char *)&dword_14FFAB8 + dword_14FFAB8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_BDEC58;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDEC58()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_BDECA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_BDED30, 0, 0);
}

uint64_t sub_BDED30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13AAE08, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC0E0, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDEE7C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_14FFADC;
  v12 = (char *)&dword_14FFAD8 + dword_14FFAD8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_BE3E54;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDEF0C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;

  v7 = *a1;
  v8 = a1[5];
  a5[3] = a2;
  a5[4] = a3;
  v9 = swift_allocObject(a4, 64, 7);
  *a5 = v9;
  *(_QWORD *)(v9 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v9 + 24) = v10;
  v12 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v9 + 40) = v12;
  *(_QWORD *)(v9 + 56) = v8;
  swift_retain(v10);
  swift_retain(v12);
  return swift_retain(v8);
}

uint64_t sub_BDEF90(uint64_t a1)
{
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[3];
  char v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_BYTE *)(a1 + 48);
  v2 = *(uint64_t (**)(_QWORD))(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v8[2] = *(_OWORD *)(a1 + 32);
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v6 = *(_OWORD *)(a1 + 96);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = v6;
  return v2(v8);
}

uint64_t sub_BDEFE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_BDF078, 0, 0);
}

uint64_t sub_BDF078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13AAED0, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC100, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDF1C4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_14FFAFC;
  v12 = (char *)&dword_14FFAF8 + dword_14FFAF8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_BE3E54;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDF254@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *a1;
  v5 = a1[3];
  a2[3] = (uint64_t)&type metadata for Actions.RateSong.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.RateSong.Context;
  v6 = swift_allocObject(&unk_13AABD8, 48, 7);
  *a2 = v6;
  *(_QWORD *)(v6 + 16) = v4;
  v7 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 40) = v5;
  swift_retain(v7);
  return swift_retain(v5);
}

uint64_t sub_BDF2CC(uint64_t a1)
{
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[2];
  char v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_BYTE *)(a1 + 32);
  v2 = *(uint64_t (**)(_QWORD))(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v6 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = v6;
  return v2(v8);
}

uint64_t sub_BDF31C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_BYTE *)(v1 + 112) = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v5;
  return swift_task_switch(sub_BDF3A4, 0, 0);
}

uint64_t sub_BDF3A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_BYTE *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_13AABB0, 128, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_QWORD *)(v11 + 56) = v7;
  *(_BYTE *)(v11 + 64) = v6;
  *(_QWORD *)(v11 + 72) = v5;
  *(_QWORD *)(v11 + 80) = v4;
  *(_QWORD *)(v11 + 88) = v3;
  *(_QWORD *)(v11 + 96) = v2;
  *(_OWORD *)(v11 + 104) = v14;
  *(_QWORD *)(v11 + 120) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_D351A0(v8, (uint64_t)&unk_14FC080, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BDF4D4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v6;
  v7 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v7;
  v8 = a4[1];
  v9 = unk_14FFA7C;
  v12 = (char *)&dword_14FFA78 + dword_14FFA78;
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 112) = v10;
  *v10 = v4;
  v10[1] = sub_BDF55C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_BDF55C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_BDF5A4(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)();
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)();
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[40];
  __int128 v70[3];
  _QWORD v71[9];
  __int128 v72[2];
  uint64_t (*v73)();
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  _DWORD v77[3];

  v67 = a7;
  v68 = a5;
  v60 = a6;
  *(_QWORD *)&v66 = a4;
  v12 = type metadata accessor for UUID(0);
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  __chkstk_darwin(v12);
  v62 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Album(0);
  v54 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v56 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v57 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v58 = v17;
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  *(_QWORD *)&v65 = a1[4];
  v20 = a1[5];
  v21 = __swift_project_boxed_opaque_existential_1(a1, v19);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v25 + 16))(v24, v22);
  v59 = a3;
  sub_55D1C(a3, (uint64_t)v70);
  sub_5C238(v66, (uint64_t)v72, &qword_14FB068);
  sub_5C238(v68, (uint64_t)v71, &qword_14FB060);
  sub_5C238(v67, (uint64_t)v18, &qword_14FAFF8);
  Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)((unint64_t)v24, a2, v70, (uint64_t)v72, (uint64_t)v71, 0, 0, (uint64_t)v18, &v73, v19, v65, v20);
  v65 = v74;
  v66 = v75;
  v55 = v73;
  v26 = v76;
  sub_97DDD4((uint64_t)a1, (uint64_t)v71);
  v61 = a2;
  v27 = a2;
  v28 = v56;
  swift_retain(v27);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC130);
  if ((swift_dynamicCast(v28, v71, v29, v14, 6) & 1) != 0)
  {
    v30 = v73;
    v31 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v28, v14);
    v32 = ((uint64_t (*)(uint64_t))v30)(v31);
    v34 = v33 != 1;
    sub_1492CC(v32, v33);
  }
  else
  {
    v34 = 1;
  }
  sub_97DDD4((uint64_t)a1, (uint64_t)v71);
  v56 = (char *)String.init<A>(describing:)(v71, v29);
  v36 = v35;
  sub_97DDD4((uint64_t)a1, (uint64_t)v70);
  sub_55D1C(v59, (uint64_t)v72);
  sub_5C238(v67, (uint64_t)v18, &qword_14FAFF8);
  sub_5C238(v60, (uint64_t)v69, &qword_14FBF98);
  sub_5C238(v68, (uint64_t)v71, &qword_14FB060);
  v37 = *(unsigned __int8 *)(v57 + 80);
  v38 = (v37 + 232) & ~v37;
  v39 = (v58 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_13AB010, v40 + 72, v37 | 7);
  *(_QWORD *)(v41 + 16) = v55;
  *(_OWORD *)(v41 + 24) = v65;
  *(_OWORD *)(v41 + 40) = v66;
  *(_QWORD *)(v41 + 56) = v26;
  *(_BYTE *)(v41 + 64) = 0;
  *(_DWORD *)(v41 + 65) = v77[0];
  *(_DWORD *)(v41 + 68) = *(_DWORD *)((char *)v77 + 3);
  *(_QWORD *)(v41 + 72) = sub_B9FFF0;
  *(_QWORD *)(v41 + 80) = 0;
  *(_QWORD *)(v41 + 88) = 0x4014000000000000;
  *(_QWORD *)(v41 + 96) = &unk_14FB048;
  *(_QWORD *)(v41 + 104) = 0;
  *(_QWORD *)(v41 + 112) = &unk_14FB050;
  *(_QWORD *)(v41 + 120) = 0;
  *(_BYTE *)(v41 + 128) = v34;
  sub_139764(v70, (_OWORD *)(v41 + 136));
  sub_8B15C(v72, v41 + 184);
  v42 = v61;
  *(_QWORD *)(v41 + 224) = v61;
  sub_5C090((uint64_t)v18, v41 + v38, &qword_14FAFF8);
  sub_5C090((uint64_t)v69, v41 + v39, &qword_14FBF98);
  sub_5C090((uint64_t)v71, v41 + v40, &qword_14FB060);
  swift_retain(v42);
  v43 = v65;
  swift_retain(v65);
  v44 = v66;
  swift_retain(v66);
  swift_retain(v26);
  v45 = v62;
  v46 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v47 = UUID.uuidString.getter(v46);
  v49 = v48;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v64);
  strcpy((char *)v71, "ActionMenu: ");
  BYTE5(v71[1]) = 0;
  HIWORD(v71[1]) = -5120;
  v50._countAndFlagsBits = (uint64_t)v56;
  v50._object = v36;
  String.append(_:)(v50);
  swift_release(v26);
  swift_release(v44);
  swift_release(v43);
  swift_bridgeObjectRelease(v36);
  v51 = v71[0];
  v52 = v71[1];
  *(_QWORD *)a8 = v47;
  *(_QWORD *)(a8 + 8) = v49;
  *(_QWORD *)(a8 + 16) = v51;
  *(_QWORD *)(a8 + 24) = v52;
  *(_QWORD *)(a8 + 32) = 0;
  *(_QWORD *)(a8 + 40) = 0xE000000000000000;
  *(_QWORD *)(a8 + 48) = 0;
  *(_BYTE *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = sub_BE1830;
  *(_QWORD *)(a8 + 72) = v41;
}

void sub_BDFA78(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48[2];
  __int128 v49[3];

  v39 = a4;
  v40 = a7;
  v44 = a5;
  v45 = a6;
  v42 = a9;
  v14 = type metadata accessor for UUID(0);
  v46 = *(_QWORD *)(v14 - 8);
  v47 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_55D1C(a1, (uint64_t)v49);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBFA8);
  v43 = String.init<A>(describing:)(v49, v21);
  v41 = v22;
  sub_55D1C(a1, (uint64_t)v49);
  sub_5C238(a10, (uint64_t)v20, &qword_14FAFF8);
  sub_55D1C(v39, (uint64_t)v48);
  v23 = *(unsigned __int8 *)(v18 + 80);
  v24 = (v23 + 104) & ~v23;
  v25 = (v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (_QWORD *)swift_allocObject(&unk_13AB7E0, v25 + 40, v23 | 7);
  sub_8B15C(v49, (uint64_t)(v26 + 2));
  v26[7] = a2;
  v26[8] = a3;
  v27 = v45;
  v26[9] = v44;
  v26[10] = v27;
  v28 = (uint64_t)v26 + v24;
  v29 = v40;
  v30 = v42;
  v26[11] = v40;
  v26[12] = v30;
  sub_5C090((uint64_t)v20, v28, &qword_14FAFF8);
  sub_8B15C(v48, (uint64_t)v26 + v25);
  v31 = a2;
  v32 = a3;
  swift_bridgeObjectRetain();
  sub_1390D8(v29, v30);
  v33 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v34 = UUID.uuidString.getter(v33);
  v36 = v35;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v47);
  strcpy((char *)v49, "ActionMenu: ");
  BYTE13(v49[0]) = 0;
  HIWORD(v49[0]) = -5120;
  v37._countAndFlagsBits = v43;
  v37._object = v41;
  String.append(_:)(v37);
  swift_bridgeObjectRelease();
  v38 = v49[0];
  *(_QWORD *)a8 = v34;
  *(_QWORD *)(a8 + 8) = v36;
  *(_OWORD *)(a8 + 16) = v38;
  *(_QWORD *)(a8 + 32) = 0;
  *(_QWORD *)(a8 + 40) = 0xE000000000000000;
  *(_QWORD *)(a8 + 48) = 0;
  *(_BYTE *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = sub_BE30FC;
  *(_QWORD *)(a8 + 72) = v26;
}

void sub_BDFCBC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[9];
  _BYTE v45[40];
  __int128 v46[2];
  __int128 v47[3];

  v41 = a8;
  v40 = a7;
  v37 = a6;
  v38 = a2;
  v43 = type metadata accessor for UUID(0);
  v42 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_55D1C(a1, (uint64_t)v44);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBFB0);
  v39 = String.init<A>(describing:)(v44, v20);
  v22 = v21;
  sub_55D1C(a1, (uint64_t)v47);
  sub_55D1C(a3, (uint64_t)v46);
  sub_5C238(a4, (uint64_t)v45, &qword_14FB068);
  sub_5C238(a5, (uint64_t)v44, &qword_14FB060);
  sub_5C238(v37, (uint64_t)v19, &qword_14FAFF8);
  v23 = *(unsigned __int8 *)(v17 + 80);
  v24 = (v23 + 216) & ~v23;
  v25 = (v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject(&unk_13AAFE8, v25 + 16, v23 | 7);
  sub_8B15C(v47, v26 + 16);
  *(_QWORD *)(v26 + 56) = v38;
  sub_8B15C(v46, v26 + 64);
  sub_5C090((uint64_t)v45, v26 + 104, &qword_14FB068);
  sub_5C090((uint64_t)v44, v26 + 144, &qword_14FB060);
  sub_5C090((uint64_t)v19, v26 + v24, &qword_14FAFF8);
  v27 = (uint64_t *)(v26 + v25);
  v28 = v40;
  v29 = v41;
  *v27 = v40;
  v27[1] = v29;
  swift_retain();
  sub_A9DEC(v28, v29);
  v30 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v31 = UUID.uuidString.getter(v30);
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v43);
  strcpy((char *)v44, "ActionMenu: ");
  BYTE5(v44[1]) = 0;
  HIWORD(v44[1]) = -5120;
  v34._countAndFlagsBits = v39;
  v34._object = v22;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  v35 = v44[0];
  v36 = v44[1];
  *(_QWORD *)a9 = v31;
  *(_QWORD *)(a9 + 8) = v33;
  *(_QWORD *)(a9 + 16) = v35;
  *(_QWORD *)(a9 + 24) = v36;
  *(_QWORD *)(a9 + 32) = 0;
  *(_QWORD *)(a9 + 40) = 0xE000000000000000;
  *(_QWORD *)(a9 + 48) = 0;
  *(_BYTE *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = sub_BE15A4;
  *(_QWORD *)(a9 + 72) = v26;
}

uint64_t sub_BDFFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 96))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 72));
  v4 = (v2 + 144) & ~v2;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + 136);
  if (v5 >> 60 != 15)
    sub_50C60(*(_QWORD *)(v0 + 128), v5);
  v6 = v0 + v4;
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 1, v7))
  {
    if (*(_QWORD *)(v6 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v8 = v6 + *(int *)(v7 + 20);
    v9 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v8 + *(int *)(v9 + 24);
      v11 = type metadata accessor for URL(0);
      v13 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v4 + v3, v2 | 7);
}

void sub_BE0168()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8) + 80);
  sub_BD569C((_QWORD *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), v0 + 72, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v0 + ((v1 + 144) & ~v1));
}

uint64_t sub_BE01BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 216) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 128))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 104));
  v5 = v4 + v3;
  swift_unknownObjectWeakDestroy(v0 + 144);
  v6 = *(unsigned __int8 *)(v0 + 192);
  if (v6 != 255)
    sub_626A8(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v6);
  v7 = v5 + 7;
  if (*(_QWORD *)(v0 + 200))
    swift_release();
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  v9 = v0 + v3;
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    if (*(_QWORD *)(v9 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v11 = v9 + *(int *)(v10 + 20);
    v12 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v11 + *(int *)(v12 + 24);
      v14 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + v8))
    swift_release();
  swift_release();
  return swift_deallocObject(v0, ((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

void sub_BE03C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_BD7898((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

ValueMetadata *type metadata accessor for Actions()
{
  return &type metadata for Actions;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for PlaylistContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_BE0754);
}

uint64_t sub_BE0754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for Playlist(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_BE07D4);
}

uint64_t sub_BE07D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Playlist.Entry(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for Playlist(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_BE0850(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Playlist.Entry(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicActions()
{
  return &type metadata for MusicActions;
}

uint64_t sub_BE08E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_BE0908(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v4 = v1[4];
  v5 = (uint64_t (*)(_QWORD *))v1[5];
  v10 = v1[2];
  v3 = v10;
  v11 = v4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v9);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v3);
  v7 = v5(v9);
  __swift_destroy_boxed_opaque_existential_1(v9);
  return v7;
}

uint64_t sub_BE0984@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDF254((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_BE0990()
{
  uint64_t v0;

  return sub_BDF2CC(v0 + 16);
}

uint64_t objectdestroy_7Tm_0()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[8]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_BE09E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC06C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC068 + dword_14FC068))(v0 + 16);
}

uint64_t sub_BE0A38()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_BE0A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC07C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC078 + dword_14FC078))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE0B04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_BE0B34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDEF0C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoSuggestLess.Context, (uint64_t)&protocol witness table for Actions.UndoSuggestLess.Context, (uint64_t)&unk_13AACA0, a1);
}

uint64_t sub_BE0B6C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC08C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC088 + dword_14FC088))(v0 + 16);
}

uint64_t sub_BE0BC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC09C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC098 + dword_14FC098))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE0C50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDEF0C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.SuggestLess.Context, (uint64_t)&protocol witness table for Actions.SuggestLess.Context, (uint64_t)&unk_13AAD68, a1);
}

uint64_t sub_BE0C84()
{
  uint64_t v0;

  return sub_BDEF90(v0 + 16);
}

uint64_t sub_BE0CA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC0AC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_50F8C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC0A8 + dword_14FC0A8))(v0 + 16);
}

uint64_t sub_BE0CFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC0BC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC0B8 + dword_14FC0B8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE0D84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDEF0C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoFavorite.Context, (uint64_t)&protocol witness table for Actions.UndoFavorite.Context, (uint64_t)&unk_13AAE30, a1);
}

uint64_t sub_BE0DBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC0CC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC0C8 + dword_14FC0C8))(v0 + 16);
}

uint64_t sub_BE0E18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC0DC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC0D8 + dword_14FC0D8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE0EA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDEF0C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Favorite.Context, (uint64_t)&protocol witness table for Actions.Favorite.Context, (uint64_t)&unk_13AAEF8, a1);
}

uint64_t sub_BE0ED8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC0EC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC0E8 + dword_14FC0E8))(v0 + 16);
}

uint64_t sub_BE0F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC0FC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC0F8 + dword_14FC0F8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_BE0FB8(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8_0(a2, a1);
  return a2;
}

id *sub_BE0FF4(id *a1)
{
  sub_DB514(*a1);
  return a1;
}

uint64_t sub_BE101C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 128);
  sub_DB514(*(id *)a1);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

double sub_BE10B4@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDD5A4(v1 + 16, a1);
}

uint64_t sub_BE10C0()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  __int128 v5;
  _OWORD v7[5];
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = *(_OWORD *)(v0 + 64);
  v7[2] = *(_OWORD *)(v0 + 48);
  v7[3] = v1;
  v7[4] = *(_OWORD *)(v0 + 80);
  v2 = *(_OWORD *)(v0 + 32);
  v7[0] = *(_OWORD *)(v0 + 16);
  v7[1] = v2;
  v4 = *(uint64_t (**)(_QWORD))(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_OWORD *)(v0 + 128);
  v10 = *(_OWORD *)(v0 + 112);
  v11 = v5;
  v12 = *(_QWORD *)(v0 + 144);
  v8 = v4;
  v9 = v3;
  return v4(v7);
}

uint64_t objectdestroy_102Tm_0()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[2];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[16]);
  swift_release(v0[18]);
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_BE1184()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC114);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC110 + dword_14FC110))(v0 + 16);
}

uint64_t sub_BE11DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 128);
  sub_1D81FC(*(id *)a1);
  swift_bridgeObjectRetain();
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_BE1270()
{
  _QWORD *v0;
  void *v1;

  swift_unknownObjectRelease(v0[2]);
  v1 = (void *)v0[4];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[18]);
  swift_release(v0[20]);
  return swift_deallocObject(v0, 168, 7);
}

uint64_t sub_BE12DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC124);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_14FC120 + dword_14FC120))(a1, v4, v5, v1 + 32);
}

uint64_t sub_BE135C()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[2];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_BE13A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 216) & ~v2;
  v4 = *(_QWORD *)(v1 + 64) + v3;
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 128))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 104));
  v5 = v4 + 7;
  if (*(_QWORD *)(v0 + 200) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + 144);
    v6 = *(unsigned __int8 *)(v0 + 192);
    if (v6 != 255)
      sub_626A8(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v6);
    if (*(_QWORD *)(v0 + 200))
      swift_release();
  }
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v3;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v10 + *(int *)(v11 + 24);
      v13 = type metadata accessor for URL(0);
      v14 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + v7))
    swift_release();
  return swift_deallocObject(v0, v7 + 16, v2 | 7);
}

void sub_BE15A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_BD6E1C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *v3, v3[1]);
}

uint64_t sub_BE1600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 232) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 136));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 184));
  swift_release();
  v5 = v0 + v3;
  v6 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    if (*(_QWORD *)(v5 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v7 = v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v7 + *(int *)(v8 + 24);
      v10 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v9, 1, v10))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v0 + v4 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v4));
  v12 = v0 + v11;
  if (*(_QWORD *)(v0 + v11 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v11);
    v13 = *(unsigned __int8 *)(v12 + 48);
    if (v13 != 255)
      sub_626A8(*(id *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), v13);
    if (*(_QWORD *)(v12 + 56))
      swift_release();
  }
  return swift_deallocObject(v0, v11 + 72, v2 | 7);
}

uint64_t sub_BE1830()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_BD5E08(v0 + 16, *(_BYTE *)(v0 + 128), (_QWORD *)(v0 + 136), (_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 224), v0 + v2, v0 + v3, v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_BE1894()
{
  return objectdestroy_127Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE18A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_BE18CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = (uint64_t)&type metadata for Actions.DeleteOrRemoveDownload.Context;
  a1[4] = (uint64_t)&protocol witness table for Actions.DeleteOrRemoveDownload.Context;
  v3 = swift_allocObject(&unk_13AB1F0, 153, 7);
  *a1 = v3;
  return sub_BB0384(v1 + 16, v3 + 16);
}

uint64_t objectdestroy_134Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 216, 7);
}

uint64_t sub_BE1990()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 160))(v0 + 16);
}

uint64_t sub_BE19B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC14C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return sub_BD08A4(v0 + 16);
}

uint64_t sub_BE1A08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDEF0C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Download.Context, (uint64_t)&protocol witness table for Actions.Download.Context, (uint64_t)&unk_13AB1A0, a1);
}

uint64_t sub_BE1A40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC15C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC158 + dword_14FC158))(v0 + 16);
}

uint64_t sub_BE1A9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC16C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC168 + dword_14FC168))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE1B20()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 232, 7);
}

uint64_t sub_BE1B94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FC17C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC178 + dword_14FC178))(a1);
}

uint64_t sub_BE1C14()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 153, 7);
}

uint64_t sub_BE1C68()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE1C78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDE2A8((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveDownload.Context, (uint64_t)&protocol witness table for Actions.RemoveDownload.Context, (uint64_t)&unk_13AB2B8, a1);
}

uint64_t sub_BE1CA8()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE1CBC()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE1CCC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC18C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_14FC188 + dword_14FC188))((_OWORD *)(v0 + 16));
}

uint64_t sub_BE1D24()
{
  return objectdestroy_182Tm((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE1D34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC19C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC198 + dword_14FC198))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE1DB4()
{
  return objectdestroy_127Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE1DC4()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE1DD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDE2A8((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.DeleteFromLibrary.Context, (uint64_t)&protocol witness table for Actions.DeleteFromLibrary.Context, (uint64_t)&unk_13AB380, a1);
}

uint64_t sub_BE1E04()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE1E14()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  __int128 v5;
  uint64_t v6;
  _OWORD v8[4];
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v1 = *(_OWORD *)(v0 + 64);
  v8[2] = *(_OWORD *)(v0 + 48);
  v8[3] = v1;
  v2 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v2;
  v14 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v12 = *(_OWORD *)(v0 + 104);
  v5 = *(_OWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v13 = v5;
  v9 = v3;
  v10 = v4;
  v11 = v6;
  return v4(v8);
}

uint64_t sub_BE1E74()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE1E84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC1AC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_14FC1A8 + dword_14FC1A8))((_OWORD *)(v0 + 16));
}

_QWORD *sub_BE1EDC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_BE1F64()
{
  return objectdestroy_182Tm((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE1F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC1BC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC1B8 + dword_14FC1B8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE1FF4()
{
  return objectdestroy_127Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE2008@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDEF0C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToPlaylist.Context, (uint64_t)&protocol witness table for Actions.AddToPlaylist.Context, (uint64_t)&unk_13AB448, a1);
}

uint64_t sub_BE2040()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC1CC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC1C8 + dword_14FC1C8))(v0 + 16);
}

uint64_t sub_BE209C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC1DC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC1D8 + dword_14FC1D8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE2124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDEF0C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToLibrary.Context, (uint64_t)&protocol witness table for Actions.AddToLibrary.Context, (uint64_t)&unk_13AB510, a1);
}

uint64_t sub_BE215C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC1EC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC1E8 + dword_14FC1E8))(v0 + 16);
}

uint64_t sub_BE21B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC1FC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC1F8 + dword_14FC1F8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE2244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (((v4 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 23;
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 56));
  v9 = v0 + v3;
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v20 = v7 + 23;
    if (*(_QWORD *)(v9 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v11 = v9 + *(int *)(v10 + 20);
    v12 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v11 + *(int *)(v12 + 24);
      v13 = type metadata accessor for URL(0);
      v17 = *(_QWORD *)(v13 - 8);
      v18 = v13;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v17 + 48))(v19, 1))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v20;
  }
  v14 = v8 & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v0 + v4 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v4));
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v6));
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v0 + v14 + 8);
  if (v15 >> 60 != 15)
    sub_50C60(*(_QWORD *)(v0 + v14), v15);
  return swift_deallocObject(v0, v14 + 16, v2 | 7);
}

uint64_t sub_BE2460()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 47) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  return sub_BD4450(v0 + 16, v0 + 56, v0 + v2, (_QWORD *)(v0 + v3), *(void (**)(char *, char *, uint64_t))(v0 + v4), *(_QWORD *)(v0 + v5), v0 + v6, *(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + v7 + 8), *(_QWORD *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_BE2504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_BE2548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_BE258C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = type metadata accessor for PlaylistContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 8) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v0 + v4;
  v11 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v10 + *(int *)(v1 + 20);
  v13 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  v14 = v0 + v8;
  v15 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v0 + v8, 1, v15))
  {
    if (*(_QWORD *)(v14 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v16 = v14 + *(int *)(v15 + 20);
    v17 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
    {
      v22 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v16 + *(int *)(v17 + 24);
      v19 = type metadata accessor for URL(0);
      v21 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v22;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

_QWORD *sub_BE2794()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for PlaylistContext(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8) + 80);
  return sub_BD400C(v0 + v2, *(_QWORD *)(v0 + v3), v0 + ((v3 + v4 + 8) & ~v4));
}

uint64_t sub_BE2808(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_BE2844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 56));
  v5 = v0 + v3;
  v6 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    if (*(_QWORD *)(v5 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v7 = v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v7 + *(int *)(v8 + 24);
      v10 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10))
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

_QWORD *sub_BE29D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8) + 80);
  return sub_BD3DB8((_QWORD *)(v0 + 16), (_QWORD *)(v0 + 56), v0 + ((v1 + 96) & ~v1));
}

uint64_t sub_BE2A10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDEF0C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.ShowSongCredits.Context, (uint64_t)&protocol witness table for Actions.ShowSongCredits.Context, (uint64_t)&unk_13AB678, a1);
}

uint64_t sub_BE2A48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC224);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC220 + dword_14FC220))(v0 + 16);
}

uint64_t sub_BE2AA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC234);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC230 + dword_14FC230))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE2B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_BE2B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_BE2C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v0 + v3, 1, v10))
  {
    v20 = v8;
    v21 = v4;
    if (*(_QWORD *)(v9 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v11 = v9 + *(int *)(v10 + 20);
    v12 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v11 + *(int *)(v12 + 24);
      v13 = type metadata accessor for URL(0);
      v17 = *(_QWORD *)(v13 - 8);
      v18 = v13;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v17 + 48))(v19, 1))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v20;
    v4 = v21;
  }
  v14 = (v3 + v4 + v7) & ~v7;
  v15 = v14 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v14, v5);
  return swift_deallocObject(v0, v15, v2 | v7 | 7);
}

uint64_t sub_BE2E10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDEF0C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveFromPlaylist.Context, (uint64_t)&protocol witness table for Actions.RemoveFromPlaylist.Context, (uint64_t)&unk_13AB7B8, a1);
}

uint64_t sub_BE2E48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC244);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC240 + dword_14FC240))(v0 + 16);
}

uint64_t sub_BE2EA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC254);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC250 + dword_14FC250))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE2F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 104) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + 96);
  if (v5 >> 60 != 15)
    sub_50C60(*(_QWORD *)(v0 + 88), v5);
  v6 = v0 + v3;
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v3, 1, v7))
  {
    if (*(_QWORD *)(v6 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v8 = v6 + *(int *)(v7 + 20);
    v9 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v8 + *(int *)(v9 + 24);
      v11 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 40;
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v12));
  return swift_deallocObject(v0, v13, v2 | 7);
}

void sub_BE30FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_BD4D08((_QWORD *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), v0 + v2, v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_BE3164@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDEF0C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Play.Context, (uint64_t)&protocol witness table for Actions.Play.Context, (uint64_t)&unk_13AB8A8, a1);
}

uint64_t sub_BE319C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC264);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC260 + dword_14FC260))(v0 + 16);
}

uint64_t sub_BE31F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC274);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC270 + dword_14FC270))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_BE327C(_QWORD *a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1[1];
  v5 = a1[3];
  v6 = a1[5];
  v7 = a1[7];
  v8 = a1[10];
  v9 = a1[13];
  swift_release(a1[15]);
  swift_release(v9);
  swift_release(v8);
  a2(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  return a1;
}

uint64_t sub_BE3308()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_BE331C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDD324((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_BE3324()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_BE3338()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_BE334C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC294);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_14FC290 + dword_14FC290))((_OWORD *)(v0 + 16));
}

uint64_t sub_BE33A4()
{
  return objectdestroy_182Tm((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_BE33B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC2A4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC2A0 + dword_14FC2A0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE3438()
{
  return objectdestroy_127Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_BE344C()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE3460@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDD09C((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_BE3468()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_BE347C()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t objectdestroy_172Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  a1(v2[3]);
  swift_release(v2[5]);
  swift_release(v2[7]);
  a2(v2[9]);
  swift_release(v2[12]);
  swift_release(v2[15]);
  swift_release(v2[17]);
  return swift_deallocObject(v2, 144, 7);
}

uint64_t sub_BE34F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC2B4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_14FC2B0 + dword_14FC2B0))((_OWORD *)(v0 + 16));
}

_QWORD *sub_BE354C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_bridgeObjectRetain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_BE35D4()
{
  return objectdestroy_182Tm((void (*)(_QWORD, __n128))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t objectdestroy_182Tm(void (*a1)(_QWORD, __n128), void (*a2)(_QWORD))
{
  _QWORD *v2;
  __n128 v5;

  v5 = swift_unknownObjectRelease(v2[2]);
  a1(v2[5], v5);
  swift_release(v2[7]);
  swift_release(v2[9]);
  a2(v2[11]);
  swift_release(v2[14]);
  swift_release(v2[17]);
  swift_release(v2[19]);
  return swift_deallocObject(v2, 160, 7);
}

uint64_t sub_BE365C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC2C4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC2C0 + dword_14FC2C0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_BE36DC()
{
  return objectdestroy_127Tm((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t objectdestroy_127Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  a1(v2[3]);
  swift_release(v2[5]);
  swift_release(v2[7]);
  a2(v2[9]);
  return swift_deallocObject(v2, 80, 7);
}

uint64_t sub_BE3740@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_BDEF0C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.CreateStation.Context, (uint64_t)&protocol witness table for Actions.CreateStation.Context, (uint64_t)&unk_13ABB00, a1);
}

uint64_t objectdestroy_26Tm_1()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_BE37C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FC2D4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t))((char *)&dword_14FC2D0 + dword_14FC2D0))(v0 + 16);
}

_QWORD *sub_BE381C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[8];
  v5 = a1[11];
  v6 = a1[13];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t objectdestroy_36Tm_1()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[17]);
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_BE38E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC2E4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FC2E0 + dword_14FC2E0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t objectdestroy_42Tm_2()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t objectdestroy_248Tm()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88) - 8);
  v32 = *(unsigned __int8 *)(v5 + 80);
  v6 = (v3 + v4 + v32) & ~v32;
  v7 = (((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 79) & 0xFFFFFFFFFFFFFFF8;
  v31 = (v30 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*((_QWORD *)v0 + 5))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)v0 + 2);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)v0 + 7);
  v9 = &v0[v3];
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v28 = v2;
    if (*((_QWORD *)v9 + 1) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v11 = &v9[*(int *)(v10 + 20)];
    v12 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = &v11[*(int *)(v12 + 24)];
      v13 = type metadata accessor for URL(0);
      v25 = *(_QWORD *)(v13 - 8);
      v26 = v13;
      if (!(*(unsigned int (**)(char *, uint64_t))(v25 + 48))(v27, 1))
        (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v28;
  }
  v14 = type metadata accessor for PlaylistContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(&v0[v6], 1, v14))
  {
    v15 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(&v0[v6], v15);
    v16 = &v0[v6 + *(int *)(v14 + 20)];
    v17 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(&v0[v7]);
  __swift_destroy_boxed_opaque_existential_1(&v0[v8]);
  v18 = &v0[v29];
  if (*(_QWORD *)&v0[v29 + 56] != 1)
  {
    swift_unknownObjectWeakDestroy(&v0[v29]);
    v19 = v18[48];
    if (v19 != 255)
      sub_626A8(*((id *)v18 + 1), *((_QWORD *)v18 + 2), *((_QWORD *)v18 + 3), *((_QWORD *)v18 + 4), *((_QWORD *)v18 + 5), v19);
    if (*((_QWORD *)v18 + 7))
      swift_release();
  }
  v20 = (((((v31 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)&v0[v30 + 24])
    __swift_destroy_boxed_opaque_existential_1(&v0[v30]);

  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)&v0[v20 + 8];
  if (v21 >> 60 != 15)
    sub_50C60(*(_QWORD *)&v0[v20], v21);
  v22 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = v22 + 40;
  __swift_destroy_boxed_opaque_existential_1(&v0[v22]);
  return swift_deallocObject(v0, v23, v2 | v32 | 7);
}

void sub_BE3D40()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FBF88) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 79) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_BD30A4(v0 + 16, v0 + 56, v0 + v2, (void *)(v0 + v5), *(_QWORD *)(v0 + v6), v0 + v7, v0 + v8, v0 + v9, v0 + v10, *(void **)(v0 + v11), *(void **)(v0 + v12), *(_QWORD *)(v0 + v13), *(_QWORD *)(v0 + v13 + 8), *(_QWORD *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), (void *)(v0 + ((((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_BE3E60@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC378, &qword_14FC640, (uint64_t (*)(_QWORD))&type metadata accessor for Album, a1);
}

uint64_t sub_BE3E7C@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC630, &qword_14FC638, (uint64_t (*)(_QWORD))&type metadata accessor for Artist, a1);
}

uint64_t sub_BE3E98@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(_QWORD *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;

  v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v9 = sub_BE9D10(a2, a1);
  dispatch thunk of Collection.startIndex.getter(v8);
  dispatch thunk of Collection.endIndex.getter(v8, v9);
  if (v18 == v17[0])
  {
    v10 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 1, 1, v10);
  }
  else
  {
    v12 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v17, &v18, v8, v9);
    v14 = v13;
    v15 = a3(0);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a4, v14, v15);
    v12(v17, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a4, 0, 1, v15);
  }
}

uint64_t sub_BE3FA8@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC620, &qword_14FC628, (uint64_t (*)(_QWORD))&type metadata accessor for MusicMovie, a1);
}

uint64_t sub_BE3FC4@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC610, &qword_14FC618, (uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, a1);
}

uint64_t sub_BE3FE0@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC600, &qword_14FC608, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t sub_BE3FFC@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC5F0, &qword_14FC5F8, (uint64_t (*)(_QWORD))&type metadata accessor for Song, a1);
}

uint64_t sub_BE4018@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC5D0, &qword_14FC5D8, (uint64_t (*)(_QWORD))&type metadata accessor for TVEpisode, a1);
}

uint64_t sub_BE4034@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC5C0, &qword_14FC5C8, (uint64_t (*)(_QWORD))&type metadata accessor for TVSeason, a1);
}

uint64_t sub_BE4050@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC5B0, &qword_14FC5B8, (uint64_t (*)(_QWORD))&type metadata accessor for TVShow, a1);
}

uint64_t sub_BE406C@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC5A0, &qword_14FC5A8, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedAudio, a1);
}

uint64_t sub_BE4088@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC590, &qword_14FC598, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedVideo, a1);
}

uint64_t sub_BE40A4@<X0>(uint64_t a1@<X8>)
{
  return sub_BE3E98(&qword_14FC5E0, &qword_14FC5E8, (uint64_t (*)(_QWORD))&type metadata accessor for Station, a1);
}

double Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  void (*v20)(double);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  _OWORD *v38;
  double result;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  uint64_t v49;
  _OWORD v50[2];
  __int128 v51;

  v48 = a9;
  v49 = a8;
  v41 = a7;
  v43 = a2;
  v44 = a6;
  v46 = a3;
  v47 = a4;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(a1);
  v42 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - v15;
  v18 = __chkstk_darwin(v17);
  v45 = (uint64_t)&v40 - v19;
  v20 = *(void (**)(double))(v12 + 16);
  v20(v18);
  ((void (*)(char *, char *, uint64_t))v20)(v16, a1, a5);
  v21 = *(unsigned __int8 *)(v12 + 80);
  v22 = (v21 + 56) & ~v21;
  v40 = v21 | 7;
  v23 = (char *)swift_allocObject(&unk_13ABD88, v22 + v13, v21 | 7);
  v24 = v44;
  *((_QWORD *)v23 + 2) = a5;
  *((_QWORD *)v23 + 3) = v24;
  v25 = v49;
  *((_QWORD *)v23 + 4) = a7;
  *((_QWORD *)v23 + 5) = v25;
  *((_QWORD *)v23 + 6) = v43;
  v26 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v26(&v23[v22], v16, a5);
  v27 = v42;
  v26(v42, a1, a5);
  v28 = (v21 + 48) & ~v21;
  v29 = v24;
  v30 = *(_QWORD *)(v24 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = (v28 + v13 + v31) & ~v31;
  v33 = (char *)swift_allocObject(&unk_13ABDB0, v32 + *(_QWORD *)(v30 + 64), v40 | v31);
  *((_QWORD *)v33 + 2) = a5;
  *((_QWORD *)v33 + 3) = v29;
  v34 = v29;
  v35 = v41;
  v36 = v49;
  *((_QWORD *)v33 + 4) = v41;
  *((_QWORD *)v33 + 5) = v36;
  v26(&v33[v28], v27, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(&v33[v32], v46, v34);
  Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)(v45, (uint64_t)sub_BE7200, (uint64_t)v23, (uint64_t)&unk_14FC328, (uint64_t)v33, v47, a5, v35, v50);
  v37 = v50[1];
  v38 = v48;
  *v48 = v50[0];
  v38[1] = v37;
  result = *(double *)&v51;
  v38[2] = v51;
  return result;
}

uint64_t static Actions.ShowSongCredits.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8C18(a1, 4, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FC330, (uint64_t)&unk_14FC338, a2);
}

double Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  void (*v21)(double);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  _OWORD *v35;
  double result;
  __int128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  _OWORD v44[2];
  __int128 v45;
  __int128 v46;

  v42 = a8;
  v43 = a7;
  v40 = a2;
  v41 = a3;
  v38 = a1;
  v12 = *(_QWORD *)(a4 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(a1);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - v16;
  v19 = __chkstk_darwin(v18);
  v39 = (uint64_t)&v38 - v20;
  v21 = *(void (**)(double))(v12 + 16);
  v21(v19);
  ((void (*)(char *, char *, uint64_t))v21)(v17, a1, a4);
  v22 = *(unsigned __int8 *)(v12 + 80);
  v23 = (v22 + 48) & ~v22;
  v24 = v23 + v13;
  v25 = v22 | 7;
  v26 = (char *)swift_allocObject(&unk_13ABDD8, v23 + v13, v22 | 7);
  *((_QWORD *)v26 + 2) = a4;
  *((_QWORD *)v26 + 3) = a5;
  v27 = v43;
  *((_QWORD *)v26 + 4) = a6;
  *((_QWORD *)v26 + 5) = v27;
  v28 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v28(&v26[v23], v17, a4);
  v28(v14, v38, a4);
  v29 = *(_QWORD *)(a5 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (v24 + v30) & ~v30;
  v32 = (char *)swift_allocObject(&unk_13ABE00, v31 + *(_QWORD *)(v29 + 64), v25 | v30);
  *((_QWORD *)v32 + 2) = a4;
  *((_QWORD *)v32 + 3) = a5;
  v33 = v43;
  *((_QWORD *)v32 + 4) = a6;
  *((_QWORD *)v32 + 5) = v33;
  v28(&v32[v23], v14, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(&v32[v31], v40, a5);
  Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)(v39, 0, 0, (uint64_t)sub_BE7C24, (uint64_t)v26, (uint64_t)&unk_14FC348, (uint64_t)v32, v41, v44, a4, a6);
  v34 = v44[1];
  v35 = v42;
  *v42 = v44[0];
  v35[1] = v34;
  result = *(double *)&v45;
  v37 = v46;
  v35[2] = v45;
  v35[3] = v37;
  return result;
}

double static Actions.GoToAlbum.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_BE60D4(a1, 17, (uint64_t)sub_BE9D50, (uint64_t)&unk_14FC350, (uint64_t)&unk_14FC358, a2).n128_u64[0];
  return result;
}

uint64_t sub_BE44F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE82D0(a1, 17, (uint64_t)sub_BE9D50, (uint64_t)&unk_14FC350, (uint64_t)&unk_14FC358, a2);
}

uint64_t Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_13ABE28, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_5C090(a8, v21 + v17, &qword_14FAFF8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_14FC368;
  a9[7] = v21;
  return result;
}

uint64_t sub_BE4620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BE46CC, 0, 0);
}

uint64_t sub_BE46CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_5C238(*(_QWORD *)(v0 + 96), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 136), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_2DE5F8(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105F890;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_BE4890, v19, v20);
  }
}

uint64_t sub_BE4890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 41, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BE9D64, 0, 0);
}

unint64_t sub_BE4960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, double);
  char v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB150);
  __chkstk_darwin(v4);
  v63 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicVideo(0);
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  __chkstk_darwin(v6);
  v58 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB158);
  __chkstk_darwin(v8);
  v65 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v64 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v59 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB148);
  __chkstk_darwin(v12);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v16);
  v60 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v57 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v57 - v22;
  v24 = type metadata accessor for Track(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v66 = a1;
  v29(v23, a1, a2, v26);
  v30 = swift_dynamicCast(v14, v23, a2, v24, 6);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  if ((v30 & 1) != 0)
  {
    v31(v14, 0, 1, v24);
    v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v28, v14, v24);
    Track.albumTitle.getter(v32);
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
    v35 = swift_bridgeObjectRelease();
    if (v34)
      return 0;
  }
  else
  {
    v31(v14, 1, 1, v24);
    sub_56024((uint64_t)v14, &qword_14FB148);
  }
  v36 = v66;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v29)(v20, v66, a2, v35);
  v37 = (uint64_t)v65;
  v38 = swift_dynamicCast(v65, v20, a2, v10, 6);
  v39 = v64;
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
  if ((v38 & 1) == 0)
  {
    v40(v37, 1, 1, v10);
    sub_56024(v37, &qword_14FB158);
    goto LABEL_9;
  }
  v40(v37, 0, 1, v10);
  v41 = v59;
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 32))(v59, v37, v10);
  Song.albumTitle.getter(v42);
  v44 = v43;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v10);
  v45 = swift_bridgeObjectRelease();
  if (v44)
    return 0;
LABEL_9:
  v46 = v60;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v29)(v60, v36, a2, v45);
  v48 = v62;
  v47 = (uint64_t)v63;
  v49 = swift_dynamicCast(v63, v46, a2, v62, 6);
  v50 = v61;
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
  if ((v49 & 1) != 0)
  {
    v51(v47, 0, 1, v48);
    v52 = v58;
    v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 32))(v58, v47, v48);
    MusicVideo.albumTitle.getter(v53);
    v55 = v54;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v48);
    swift_bridgeObjectRelease();
    if (v55)
      return 0;
  }
  else
  {
    v51(v47, 1, 1, v48);
    sub_56024(v47, &qword_14FB150);
  }
  return 0xD000000000000010;
}

uint64_t sub_BE4DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB150);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationItem(0);
  v6[11] = v11;
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB158);
  v6[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v6[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[15] = v14;
  v6[16] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB148);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 - 8);
  v6[18] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[19] = swift_task_alloc(v17);
  v6[20] = swift_task_alloc(v17);
  v6[21] = swift_task_alloc(v17);
  v18 = type metadata accessor for Track(0);
  v6[22] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[23] = v19;
  v6[24] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BE4F3C, 0, 0);
}

uint64_t sub_BE4F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16);
  v6(v3, *(_QWORD *)(v0 + 16), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 48);
    v8(v12, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v9, v11);
    swift_storeEnumTagMultiPayload(v13, v14, 1);
    v16 = *(int **)(v15 + 8);
    v68 = (int *)((char *)v16 + *v16);
    v17 = (_QWORD *)swift_task_alloc(v16[1]);
    *(_QWORD *)(v0 + 200) = v17;
    v18 = sub_BE5334;
LABEL_7:
    *v17 = v0;
    v17[1] = v18;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v68)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  v19 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 16);
  v8(v20, 1, 1, *(_QWORD *)(v0 + 176));
  sub_56024(v20, &qword_14FB148);
  v6(v19, v25, v24);
  v26 = swift_dynamicCast(v23, v19, v24, v21, 6);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if ((v26 & 1) != 0)
  {
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 48);
    v27(v33, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v33, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v30, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v34, enum case for Track.song(_:), v28);
    swift_storeEnumTagMultiPayload(v34, v35, 1);
    v37 = *(int **)(v36 + 8);
    v68 = (int *)((char *)v37 + *v37);
    v17 = (_QWORD *)swift_task_alloc(v37[1]);
    *(_QWORD *)(v0 + 208) = v17;
    v18 = sub_BE539C;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 64);
  v41 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 32);
  v44 = *(_QWORD *)(v0 + 16);
  v27(v39, 1, 1, *(_QWORD *)(v0 + 112));
  sub_56024(v39, &qword_14FB158);
  v6(v38, v44, v43);
  v45 = swift_dynamicCast(v42, v38, v43, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if ((v45 & 1) != 0)
  {
    v47 = *(_QWORD *)(v0 + 176);
    v48 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 88);
    v49 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 80);
    v54 = *(_QWORD *)(v0 + 56);
    v53 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 48);
    v46(v54, 0, 1, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v54, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v49, v51, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v49, enum case for Track.musicVideo(_:), v47);
    swift_storeEnumTagMultiPayload(v49, v50, 1);
    v56 = *(int **)(v55 + 8);
    v68 = (int *)((char *)v56 + *v56);
    v17 = (_QWORD *)swift_task_alloc(v56[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = sub_BE5404;
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v0 + 56);
  v46(v58, 1, 1, *(_QWORD *)(v0 + 64));
  sub_56024(v58, &qword_14FB150);
  v59 = *(_QWORD *)(v0 + 160);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 128);
  v62 = *(_QWORD *)(v0 + 136);
  v65 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 104);
  v66 = *(_QWORD *)(v0 + 80);
  v67 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BE5334()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  sub_5C0DC(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_BE9D70, 0, 0);
}

uint64_t sub_BE539C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  sub_5C0DC(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_BE9D74, 0, 0);
}

uint64_t sub_BE5404()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  sub_5C0DC(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_BE9D6C, 0, 0);
}

uint64_t Actions.GoToAlbum.Context.menuItemTitle.getter()
{
  return sub_BE88C8(0x6C41206F74206F47, 0xEB000000006D7562);
}

uint64_t (*Actions.GoToAlbum.Context.menuItemImage.getter())()
{
  return sub_BCC3A8;
}

id sub_BE54A8()
{
  return sub_BE944C();
}

uint64_t sub_BE54C8(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x6C41206F74206F47, 0xEB000000006D7562);
}

uint64_t Song.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  if (a1)
    return sub_BE551C() & 1;
  else
    return 1;
}

uint64_t sub_BE551C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  char v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD v25[15];

  v0 = type metadata accessor for MusicPropertySource(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v25[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v25[-1] - v6;
  v8 = dispatch thunk of MusicLibrary.ItemState.isAdded.getter(v5);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  if ((v8 & 1) != 0)
  {
    v10 = enum case for MusicPropertySource.library(_:);
    v9(v7, enum case for MusicPropertySource.library(_:), v0);
  }
  else
  {
    v9(v7, enum case for MusicPropertySource.catalog(_:), v0);
    v10 = enum case for MusicPropertySource.library(_:);
  }
  v9(v3, v10, v0);
  v11 = static MusicPropertySource.== infix(_:_:)(v7, v3);
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  v12(v7, v0);
  if ((v11 & 1) != 0)
    return 1;
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v14 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_109CCA0);
  v16 = swift_getKeyPath(&unk_109CCC8);
  static Published.subscript.getter(v25, v14, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v13 = BYTE1(v25[0]);
  v17 = v25[3];
  v18 = v25[4];
  v19 = v25[7];
  v20 = v25[9];
  v21 = (void *)v25[10];
  v22 = v25[12];
  swift_bridgeObjectRelease(v25[14]);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v20);

  return v13;
}

BOOL MusicVideo.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC370);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Album(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10.n128_f64[0] = __chkstk_darwin(v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (sub_BE551C() & 1) == 0)
    return 0;
  MusicVideo.albums.getter(v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC378);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
  {
    sub_56024((uint64_t)v4, &qword_14FC370);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_6:
    sub_56024((uint64_t)v7, &qword_14FB108);
    return 0;
  }
  sub_BE3E98(&qword_14FC378, &qword_14FC640, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    goto LABEL_6;
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  v17 = Album.isSingleMusicVideo.getter(v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (v17 == 2)
    return 0;
  return (v17 & 1) == 0;
}

uint64_t Track.supportsContainerNavigation(itemState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  _BOOL8 v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC370);
  __chkstk_darwin(v0);
  v38 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
  __chkstk_darwin(v2);
  v37 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Album(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicVideo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Track(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_BE551C() & 1) == 0)
    return 0;
  v33 = v7;
  v34 = v5;
  v35 = v4;
  v36 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v39, v12);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 != enum case for Track.song(_:))
  {
    if (v16 == enum case for Track.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
      v18 = v11;
      v19 = v8;
      v20.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v36 + 32))(v11, v15, v8);
      v21 = (uint64_t)v38;
      MusicVideo.albums.getter(v20);
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC378);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
      {
        sub_56024(v21, &qword_14FC370);
        v24 = v37;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v37, 1, 1, v35);
      }
      else
      {
        v24 = v37;
        sub_BE3E98(&qword_14FC378, &qword_14FC640, (uint64_t (*)(_QWORD))&type metadata accessor for Album, v37);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
        v27 = v34;
        v26 = v35;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v24, 1, v35) != 1)
        {
          v29 = v33;
          v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 32))(v33, v24, v26);
          v31 = Album.isSingleMusicVideo.getter(v30);
          (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
          v28 = v36;
          v17 = v31 != 2 && (v31 & 1) == 0;
          goto LABEL_12;
        }
      }
      sub_56024(v24, &qword_14FB108);
      v17 = 0;
      v28 = v36;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v19);
      return v17;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return 1;
}

uint64_t Playlist.supportsContainerNavigation(itemState:)()
{
  return sub_BE551C() & 1;
}

BOOL Playlist.Entry.supportsContainerNavigation(itemState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  int v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC370);
  __chkstk_darwin(v0);
  v46 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Album(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC380);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v38 - v17;
  if ((sub_BE551C() & 1) != 0)
  {
    v39 = v8;
    v40 = v6;
    v42 = v5;
    v43 = v12;
    v41 = v4;
    v44 = v10;
    v45 = v9;
    Playlist.Entry.item.getter(v19);
    v20 = type metadata accessor for Playlist.Entry.Item(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      v22 = 0;
LABEL_12:
      sub_56024((uint64_t)v18, &qword_14FC380);
      return v22;
    }
    sub_5C238((uint64_t)v18, (uint64_t)v15, &qword_14FC380);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v15, v20);
    if (v23 != enum case for Playlist.Entry.Item.musicVideo(_:))
    {
      v22 = v23 == enum case for Playlist.Entry.Item.song(_:);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v20);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v21 + 96))(v15, v20);
    v24 = v43;
    v25 = v44;
    v26.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v44 + 32))(v43, v15, v45);
    v27 = (uint64_t)v46;
    MusicVideo.albums.getter(v26);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC378);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    {
      sub_56024(v27, &qword_14FC370);
      v30 = (uint64_t)v41;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v41, 1, 1, v42);
    }
    else
    {
      v30 = (uint64_t)v41;
      sub_BE3E98(&qword_14FC378, &qword_14FC640, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t)v41);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
      v31 = v40;
      v32 = v42;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v30, 1, v42) != 1)
      {
        v35 = v39;
        v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 32))(v39, v30, v32);
        v37 = Album.isSingleMusicVideo.getter(v36);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v32);
        v33 = v45;
        v22 = v37 != 2 && (v37 & 1) == 0;
        goto LABEL_11;
      }
    }
    sub_56024(v30, &qword_14FB108);
    v22 = 0;
    v33 = v45;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v33);
    goto LABEL_12;
  }
  return 0;
}

uint64_t MusicLibrary.ItemState.containerLoadingSource.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  unsigned int *v4;

  v2 = dispatch thunk of MusicLibrary.ItemState.isAdded.getter();
  v3 = type metadata accessor for MusicPropertySource(0);
  v4 = (unsigned int *)&enum case for MusicPropertySource.library(_:);
  if ((v2 & 1) == 0)
    v4 = (unsigned int *)&enum case for MusicPropertySource.catalog(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, *v4, v3);
}

double static Actions.GoToPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_BE60D4(a1, 15, (uint64_t)sub_BE9D50, (uint64_t)&unk_14FC388, (uint64_t)&unk_14FC390, a2).n128_u64[0];
  return result;
}

__n128 sub_BE60D4@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[16];

  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 16);
  v18 = *(__n128 *)(a1 + 48);
  sub_5C090(a1, (uint64_t)v21, &qword_14FC108);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 56);
  sub_1391E0((uint64_t)v21);
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v16);
  *(_QWORD *)a6 = v12;
  *(_QWORD *)(a6 + 8) = v13;
  *(_OWORD *)(a6 + 16) = v20;
  *(_OWORD *)(a6 + 32) = v19;
  result = v18;
  *(__n128 *)(a6 + 48) = v18;
  *(_BYTE *)(a6 + 64) = a2;
  *(_QWORD *)(a6 + 72) = a3;
  *(_QWORD *)(a6 + 80) = 0;
  *(_QWORD *)(a6 + 88) = 0x4014000000000000;
  *(_QWORD *)(a6 + 96) = a4;
  *(_QWORD *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = a5;
  *(_QWORD *)(a6 + 120) = 0;
  return result;
}

uint64_t sub_BE61B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE82D0(a1, 15, (uint64_t)sub_BE9D50, (uint64_t)&unk_14FC388, (uint64_t)&unk_14FC390, a2);
}

uint64_t Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_13ABE50, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_5C090(a8, v21 + v17, &qword_14FAFF8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_14FC3A0;
  a9[7] = v21;
  return result;
}

uint64_t sub_BE62DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BE6388, 0, 0);
}

uint64_t sub_BE6388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_5C238(*(_QWORD *)(v0 + 96), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 136), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_2DE5F8(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105F890;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_1061BE0;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_BE6554, v19, v20);
  }
}

uint64_t sub_BE6554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 44, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BE9D64, 0, 0);
}

uint64_t Actions.GoToPlaylist.Context.menuItemTitle.getter()
{
  return sub_BE88C8(0x6C50206F74206F47, 0xEE007473696C7961);
}

uint64_t (*Actions.GoToPlaylist.Context.menuItemImage.getter())()
{
  return sub_BCC354;
}

id sub_BE6664()
{
  return sub_BE944C();
}

uint64_t sub_BE6688(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x6C50206F74206F47, 0xEE007473696C7961);
}

uint64_t sub_BE66AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_C3150;
  return v6();
}

uint64_t sub_BE6700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8CAC(a1, 4, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FC330, (uint64_t)&unk_14FC338, a2);
}

uint64_t Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_13ABE78, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a7;
  *(_QWORD *)(v21 + 24) = a8;
  sub_5C090(a6, v21 + v17, &qword_14FAFF8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_14FC3B0;
  a9[5] = v21;
  return result;
}

uint64_t sub_BE6820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BE68CC, 0, 0);
}

uint64_t sub_BE68CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_5C238(*(_QWORD *)(v0 + 72), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 112), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_2DE5F8(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_BE6A84, v19, v20);
  }
}

uint64_t sub_BE6A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 43, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BE9D68, 0, 0);
}

unint64_t sub_BE6B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  int v30;
  void *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;

  v79 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB150);
  __chkstk_darwin(v5);
  v70 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for MusicVideo(0);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v65 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB158);
  __chkstk_darwin(v8);
  v75 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Song(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v66 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB148);
  __chkstk_darwin(v11);
  v78 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = a3;
  v76 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v13);
  v67 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v72 = (char *)&v65 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v65 - v18;
  v20 = type metadata accessor for Track(0);
  v77 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v71 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_109CCA0);
  v23 = swift_getKeyPath(&unk_109CCC8);
  v24 = a1;
  static Published.subscript.getter(&v81, a1, KeyPath, v23);
  swift_release();
  swift_release();
  v25 = v82;
  v26 = v83;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v25 & 1) == 0)
    return 0xD00000000000003CLL;
  v28 = swift_getKeyPath(&unk_109CCA0);
  v29 = swift_getKeyPath(&unk_109CCC8);
  static Published.subscript.getter(&v81, v24, v28, v29);
  swift_release();
  swift_release();
  v30 = BYTE1(v81);
  v31 = v83;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v30 != 1)
    return 0xD000000000000016;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
  v34 = v79;
  v33 = v80;
  v32(v19, v79, v80);
  v35 = (uint64_t)v78;
  v36 = swift_dynamicCast(v78, v19, v33, v20, 6);
  v37 = v77;
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56);
  if ((v36 & 1) != 0)
  {
    v38(v35, 0, 1, v20);
    v39 = v71;
    v40 = (*(double (**)(char *, uint64_t, uint64_t))(v37 + 32))(v71, v35, v20);
    Track.catalogID.getter(v40);
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v20);
    v43 = swift_bridgeObjectRelease();
    if (v42)
      return 0;
  }
  else
  {
    v38(v35, 1, 1, v20);
    sub_56024(v35, &qword_14FB148);
  }
  v44 = v72;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v32)(v72, v34, v33, v43);
  v45 = (uint64_t)v75;
  v46 = v74;
  v47 = swift_dynamicCast(v75, v44, v33, v74, 6);
  v48 = v73;
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
  if ((v47 & 1) == 0)
  {
    v49(v45, 1, 1, v46);
    sub_56024(v45, &qword_14FB158);
    goto LABEL_13;
  }
  v49(v45, 0, 1, v46);
  v50 = v66;
  v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 32))(v66, v45, v46);
  Song.catalogID.getter(v51);
  v53 = v52;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v46);
  v54 = swift_bridgeObjectRelease();
  if (v53)
    return 0;
LABEL_13:
  v55 = v67;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v32)(v67, v34, v33, v54);
  v56 = (uint64_t)v70;
  v57 = v69;
  v58 = swift_dynamicCast(v70, v55, v33, v69, 6);
  v59 = v68;
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56);
  if ((v58 & 1) != 0)
  {
    v60(v56, 0, 1, v57);
    v61 = v65;
    v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 32))(v65, v56, v57);
    MusicVideo.catalogID.getter(v62);
    v64 = v63;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v57);
    swift_bridgeObjectRelease();
    if (v64)
      return 0;
  }
  else
  {
    v60(v56, 1, 1, v57);
    sub_56024(v56, &qword_14FB150);
  }
  return 0xD000000000000010;
}

uint64_t sub_BE7194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_BE7200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_BE6B54(*(_QWORD *)(v0 + 48), v0 + ((v2 + 56) & ~v2), v1);
}

uint64_t sub_BE7224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB150);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationItem(0);
  v6[11] = v11;
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB158);
  v6[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v6[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[15] = v14;
  v6[16] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB148);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 - 8);
  v6[18] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[19] = swift_task_alloc(v17);
  v6[20] = swift_task_alloc(v17);
  v6[21] = swift_task_alloc(v17);
  v18 = type metadata accessor for Track(0);
  v6[22] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[23] = v19;
  v6[24] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BE73A8, 0, 0);
}

uint64_t sub_BE73A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16);
  v6(v3, *(_QWORD *)(v0 + 16), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 48);
    v8(v12, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v9, v11);
    swift_storeEnumTagMultiPayload(v13, v14, 0);
    v16 = *(int **)(v15 + 8);
    v68 = (int *)((char *)v16 + *v16);
    v17 = (_QWORD *)swift_task_alloc(v16[1]);
    *(_QWORD *)(v0 + 200) = v17;
    v18 = sub_BE77A0;
LABEL_7:
    *v17 = v0;
    v17[1] = v18;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v68)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  v19 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 16);
  v8(v20, 1, 1, *(_QWORD *)(v0 + 176));
  sub_56024(v20, &qword_14FB148);
  v6(v19, v25, v24);
  v26 = swift_dynamicCast(v23, v19, v24, v21, 6);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if ((v26 & 1) != 0)
  {
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 48);
    v27(v33, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v33, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v30, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v34, enum case for Track.song(_:), v28);
    swift_storeEnumTagMultiPayload(v34, v35, 0);
    v37 = *(int **)(v36 + 8);
    v68 = (int *)((char *)v37 + *v37);
    v17 = (_QWORD *)swift_task_alloc(v37[1]);
    *(_QWORD *)(v0 + 208) = v17;
    v18 = sub_BE78CC;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 64);
  v41 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 32);
  v44 = *(_QWORD *)(v0 + 16);
  v27(v39, 1, 1, *(_QWORD *)(v0 + 112));
  sub_56024(v39, &qword_14FB158);
  v6(v38, v44, v43);
  v45 = swift_dynamicCast(v42, v38, v43, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if ((v45 & 1) != 0)
  {
    v47 = *(_QWORD *)(v0 + 176);
    v48 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 88);
    v49 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 80);
    v54 = *(_QWORD *)(v0 + 56);
    v53 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 48);
    v46(v54, 0, 1, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v54, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v49, v51, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v49, enum case for Track.musicVideo(_:), v47);
    swift_storeEnumTagMultiPayload(v49, v50, 0);
    v56 = *(int **)(v55 + 8);
    v68 = (int *)((char *)v56 + *v56);
    v17 = (_QWORD *)swift_task_alloc(v56[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = sub_BE79F8;
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v0 + 56);
  v46(v58, 1, 1, *(_QWORD *)(v0 + 64));
  sub_56024(v58, &qword_14FB150);
  v59 = *(_QWORD *)(v0 + 160);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 128);
  v62 = *(_QWORD *)(v0 + 136);
  v65 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 104);
  v66 = *(_QWORD *)(v0 + 80);
  v67 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BE77A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  sub_5C0DC(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_BE7808, 0, 0);
}

uint64_t sub_BE7808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BE78CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  sub_5C0DC(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_BE7934, 0, 0);
}

uint64_t sub_BE7934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BE79F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  sub_5C0DC(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_BE7A60, 0, 0);
}

uint64_t sub_BE7A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BE7B28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v9 = (uint64_t)v0 + v7;
  v10 = (uint64_t)v0 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v11 = (_QWORD *)swift_task_alloc(dword_14FC324);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_C3150;
  return sub_BE7224(v9, v10, v2, v3, v4, v5);
}

uint64_t sub_BE7BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return swift_deallocObject(v0, v4, v5);
}

unint64_t sub_BE7C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_BE4960(v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + *(_QWORD *)(v2 + 64) + v6) & ~v6;
  v8 = v7 + *(_QWORD *)(v5 + 64);
  v9 = v3 | v6 | 7;
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  return swift_deallocObject(v0, v8, v9);
}

uint64_t sub_BE7CD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v9 = (uint64_t)v0 + v7;
  v10 = (uint64_t)v0 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v11 = (_QWORD *)swift_task_alloc(dword_14FC344);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_C3150;
  return sub_BE4DB8(v9, v10, v2, v3, v4, v5);
}

uint64_t sub_BE7D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_14FC364);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_C3150;
  return sub_BE4620(v7, v8, v2, v3);
}

uint64_t sub_BE7E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_14FC39C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_C3150;
  return sub_BE62DC(v7, v8, v2, v3);
}

uint64_t sub_BE7EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_14FC3AC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_C3150;
  return sub_BE6820(v7, v8, v2, v3);
}

uint64_t Actions.ShowSongCredits.Context.menuItemTitle.getter()
{
  return sub_BE88C8(0x6572432077656956, 0xEC00000073746964);
}

uint64_t (*Actions.ShowSongCredits.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13ABEA0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_13ABEC8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_B9FA1C;
}

uint64_t sub_BE8000()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_BE8024()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x6572432077656956, 0xEC00000073746964);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*sub_BE8194())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13AC378, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_13AC3A0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_B9FF50;
}

double static Actions.GoToArtist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_BE60D4(a1, 16, (uint64_t)sub_BE823C, (uint64_t)&unk_14FC3B8, (uint64_t)&unk_14FC3C0, a2).n128_u64[0];
  return result;
}

uint64_t sub_BE823C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_BE825C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 32);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_50F8C;
  return v6();
}

uint64_t sub_BE82B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE82D0(a1, 16, (uint64_t)sub_BE823C, (uint64_t)&unk_14FC3B8, (uint64_t)&unk_14FC3C0, a2);
}

uint64_t sub_BE82D0@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  *(_QWORD *)(a6 + 8) = v6;
  *(_QWORD *)(a6 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v10;
  v11 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a6 + 40) = v11;
  *(_QWORD *)(a6 + 56) = v8;
  *(_BYTE *)(a6 + 64) = a2;
  *(_QWORD *)(a6 + 72) = a3;
  *(_QWORD *)(a6 + 80) = 0;
  *(_QWORD *)(a6 + 88) = 0x4014000000000000;
  *(_QWORD *)(a6 + 96) = a4;
  *(_QWORD *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = a5;
  *(_QWORD *)(a6 + 120) = 0;
  swift_bridgeObjectRetain(v6);
  swift_retain(v10);
  swift_retain(v11);
  return swift_retain(v8);
}

uint64_t Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_13ABEF0, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_5C090(a8, v21 + v17, &qword_14FAFF8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_14FC3D0;
  a9[7] = v21;
  return result;
}

uint64_t sub_BE8468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BE8514, 0, 0);
}

uint64_t sub_BE8514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_5C238(*(_QWORD *)(v0 + 96), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 136), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_2DE5F8(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105F890;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_1060130;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_BE86E0, v19, v20);
  }
}

uint64_t sub_BE86E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 42, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BE87B0, 0, 0);
}

uint64_t sub_BE87B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_5C0DC(*(_QWORD *)(v0 + 160), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BE880C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_14FC3CC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_50F8C;
  return sub_BE8468(v7, v8, v2, v3);
}

uint64_t Actions.GoToArtist.Context.menuItemTitle.getter()
{
  return sub_BE88C8(0x7241206F74206F47, 0xEC00000074736974);
}

uint64_t sub_BE88C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v17[-v12];
  String.LocalizationValue.init(stringLiteral:)(a1, a2);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v14 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v15 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v14, v6, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  return v15;
}

uint64_t (*Actions.GoToArtist.Context.menuItemImage.getter())()
{
  return sub_BCC30C;
}

id sub_BE8A50()
{
  return sub_BE944C();
}

uint64_t sub_BE8A6C(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x7241206F74206F47, 0xEC00000074736974);
}

uint64_t sub_BE8A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v19[-v14];
  String.LocalizationValue.init(stringLiteral:)(a3, a4);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v12, v15, v9);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v16 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v17 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v16, v8, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
  return v17;
}

uint64_t static Actions.ViewFullLyrics.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8C18(a1, 57, (uint64_t)sub_B9FFF0, (uint64_t)&unk_14FC3D8, (uint64_t)&unk_14FC3E0, a2);
}

uint64_t sub_BE8C18@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;

  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 8) = v7;
  v9 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v9;
  *(_QWORD *)(a6 + 40) = v6;
  *(_BYTE *)(a6 + 48) = a2;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = 0;
  *(_QWORD *)(a6 + 72) = 0x4014000000000000;
  *(_QWORD *)(a6 + 80) = a4;
  *(_QWORD *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = a5;
  *(_QWORD *)(a6 + 104) = 0;
  swift_retain(v7);
  swift_retain(v9);
  return swift_retain(v6);
}

uint64_t sub_BE8C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8CAC(a1, 57, (uint64_t)sub_B9FFF0, (uint64_t)&unk_14FC3D8, (uint64_t)&unk_14FC3E0, a2);
}

uint64_t sub_BE8CAC@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;

  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 8) = v7;
  v9 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v9;
  *(_QWORD *)(a6 + 40) = v6;
  *(_BYTE *)(a6 + 48) = a2;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = 0;
  *(_QWORD *)(a6 + 72) = 0x4014000000000000;
  *(_QWORD *)(a6 + 80) = a4;
  *(_QWORD *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = a5;
  *(_QWORD *)(a6 + 104) = 0;
  swift_retain(v7);
  swift_retain(v9);
  return swift_retain(v6);
}

uint64_t Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_13ABF18, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a7;
  *(_QWORD *)(v21 + 24) = a8;
  sub_5C090(a6, v21 + v17, &qword_14FAFF8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_14FC3F0;
  a9[5] = v21;
  return result;
}

uint64_t sub_BE8E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BE8ECC, 0, 0);
}

uint64_t sub_BE8ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_5C238(*(_QWORD *)(v0 + 72), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 112), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_2DE5F8(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_BE9084, v19, v20);
  }
}

uint64_t sub_BE9084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 38, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BE9154, 0, 0);
}

uint64_t sub_BE9154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_5C0DC(*(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t objectdestroy_13Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v0 + v4, 1, v10))
  {
    v20 = v8;
    v21 = v5;
    if (*(_QWORD *)(v9 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v11 = v9 + *(int *)(v10 + 20);
    v12 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v11 + *(int *)(v12 + 24);
      v13 = type metadata accessor for URL(0);
      v17 = *(_QWORD *)(v13 - 8);
      v18 = v13;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v17 + 48))(v19, 1))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v20;
    v5 = v21;
  }
  v14 = (v4 + v5 + v7) & ~v7;
  v15 = v14 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v14, v1);
  return swift_deallocObject(v0, v15, v3 | v7 | 7);
}

uint64_t sub_BE9370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_14FC3EC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_C3150;
  return sub_BE8E20(v7, v8, v2, v3);
}

uint64_t (*Actions.ViewFullLyrics.Context.menuItemImage.getter())()
{
  return sub_BCC380;
}

id sub_BE942C()
{
  return sub_BE944C();
}

id sub_BE944C()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v0);

  return v1;
}

uint64_t _s9MusicCore7ActionsO14ViewFullLyricsO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000000010CE070);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t *initializeBufferWithCopyOfBuffer for NavigationItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for Playlist(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Track(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v14 = type metadata accessor for Track(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for NavigationItem(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v4 = type metadata accessor for Playlist(0);
  }
  else
  {
    if (result > 1)
      return result;
    v4 = type metadata accessor for Track(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t initializeWithCopy for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
    v7 = type metadata accessor for Playlist(0);
  else
    v7 = type metadata accessor for Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t assignWithCopy for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_5C0DC(a1, type metadata accessor for NavigationItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
      v7 = type metadata accessor for Playlist(0);
    else
      v7 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t type metadata accessor for NavigationItem(uint64_t a1)
{
  uint64_t result;

  result = qword_14FC558;
  if (!qword_14FC558)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NavigationItem);
  return result;
}

uint64_t initializeWithTake for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
    v7 = type metadata accessor for Playlist(0);
  else
    v7 = type metadata accessor for Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t assignWithTake for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_5C0DC(a1, type metadata accessor for NavigationItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
      v7 = type metadata accessor for Playlist(0);
    else
      v7 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t sub_BE9A00(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for Track(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = v5[0];
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum()
{
  return &type metadata for Actions.GoToAlbum;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum.Context()
{
  return &type metadata for Actions.GoToAlbum.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist()
{
  return &type metadata for Actions.GoToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist.Context()
{
  return &type metadata for Actions.GoToPlaylist.Context;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits()
{
  return &type metadata for Actions.ShowSongCredits;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits.Context()
{
  return &type metadata for Actions.ShowSongCredits.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist()
{
  return &type metadata for Actions.GoToArtist;
}

uint64_t _s9GoToAlbumO7ContextVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_release(a1[7]);
}

uint64_t _s9GoToAlbumO7ContextVwcp_0(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  v4 = *(_QWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain(v3);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v4);
  return a1;
}

_QWORD *_s9GoToAlbumO7ContextVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = a2[6];
  v10 = a2[7];
  v12 = a1[7];
  a1[6] = v11;
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

_QWORD *_s9GoToAlbumO7ContextVwta_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(a1[3]);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_release(a1[5]);
  v4 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  v5 = a1[7];
  a1[7] = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist.Context()
{
  return &type metadata for Actions.GoToArtist.Context;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics()
{
  return &type metadata for Actions.ViewFullLyrics;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics.Context()
{
  return &type metadata for Actions.ViewFullLyrics.Context;
}

uint64_t sub_BE9D10(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

double static Actions.OpenInClassical.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 9;
  *(_QWORD *)(a2 + 56) = sub_B9FFF0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_14FC648;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_14FC650;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t (**a4)()@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t (*v54)(uint64_t, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  unint64_t (**v62)();
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t (**v75)();
  uint64_t v76;
  char *v77;
  uint64_t v78;

  v72 = a2;
  v7 = type metadata accessor for Album(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v73 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v9;
  __chkstk_darwin(v10);
  v70 = (char *)&v64 - v11;
  v66 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC658);
  v67 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v71 = (uint64_t)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v69 = (uint64_t)&v64 - v18;
  __chkstk_darwin(v19);
  v68 = (uint64_t)&v64 - v20;
  v76 = v21;
  __chkstk_darwin(v22);
  v24 = (uint64_t *)((char *)&v64 - v23);
  v77 = a1;
  v26 = Album.catalogID.getter(v25);
  v74 = a3;
  v75 = a4;
  if (v27)
  {
    v28 = v27;
    static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(1, v26, v27, (uint64_t)v14);
    v32 = swift_bridgeObjectRelease(v28);
    (*(void (**)(uint64_t *, char *, uint64_t, __n128))(v12 + 32))(v24, v14, v66, v32);
    v33 = 0;
    v34 = v67;
  }
  else
  {
    v29 = sub_BEA250();
    v30 = swift_allocError(&type metadata for ClassicalBridge.Error, v29, 0, 0);
    *(_QWORD *)v31 = 2;
    *(_QWORD *)(v31 + 8) = 0;
    *(_QWORD *)(v31 + 16) = 0;
    *(_QWORD *)(v31 + 24) = 0;
    *(_BYTE *)(v31 + 32) = 2;
    swift_willThrow(v30);
    v34 = v67;
    *v24 = v30;
    v33 = 1;
  }
  swift_storeEnumTagMultiPayload(v24, v15, v33);
  v35 = v70;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v70, v77, v7);
  v36 = v68;
  sub_5C238((uint64_t)v24, v68, &qword_14FC658);
  v37 = *(unsigned __int8 *)(v8 + 80);
  v38 = (v37 + 16) & ~v37;
  v39 = v8;
  v40 = v7;
  v41 = *(unsigned __int8 *)(v34 + 80);
  v42 = (v78 + v41 + v38) & ~v41;
  v43 = v76;
  v65 = v41 | 7;
  v66 = v41 | 7 | v37;
  v44 = swift_allocObject(&unk_13AC3E8, v42 + v76, v66);
  v45 = v44 + v38;
  v46 = v44;
  v67 = v44;
  v47 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 32);
  v47(v45, v35, v40);
  sub_5C090(v36, v46 + v42, &qword_14FC658);
  v48 = v69;
  sub_5C238((uint64_t)v24, v69, &qword_14FC658);
  v49 = (v41 + 16) & ~v41;
  v50 = (v43 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  v51 = swift_allocObject(&unk_13AC410, v50 + 72, v65);
  sub_5C090(v48, v51 + v49, &qword_14FC658);
  sub_648A4(v72, v51 + v50);
  v52 = v71;
  sub_5C090((uint64_t)v24, v71, &qword_14FC658);
  v53 = v73;
  v47((uint64_t)v73, v77, v40);
  v54 = (uint64_t (*)(uint64_t, char *, uint64_t))v47;
  v55 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 16) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v41 + v57) & ~v41;
  v59 = (v76 + v37 + v58) & ~v37;
  v60 = swift_allocObject(&unk_13AC438, v59 + v78, v66 | v56);
  sub_5C090(v74, v60 + v57, &qword_14FAFF8);
  sub_5C090(v52, v60 + v58, &qword_14FC658);
  result = v54(v60 + v59, v53, v40);
  v62 = v75;
  v63 = v67;
  *v75 = sub_BEA4D4;
  v62[1] = (unint64_t (*)())v63;
  v62[2] = (unint64_t (*)())&unk_14FC668;
  v62[3] = (unint64_t (*)())v51;
  v62[4] = (unint64_t (*)())&unk_14FC678;
  v62[5] = (unint64_t (*)())v60;
  return result;
}

unint64_t sub_BEA250()
{
  unint64_t result;

  result = qword_1503DD0;
  if (!qword_1503DD0)
  {
    result = swift_getWitnessTable("]r1", &type metadata for ClassicalBridge.Error);
    atomic_store(result, (unint64_t *)&qword_1503DD0);
  }
  return result;
}

unint64_t sub_BEA294(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v3 = 0xD000000000000021;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC658);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((Album.isClassicalExperienceAvailable.getter(v5) & 1) != 0)
  {
    sub_5C238(a2, (uint64_t)v7, &qword_14FC658);
    if (swift_getEnumCaseMultiPayload(v7, v4) == 1)
    {
      v8 = *v7;
      v15[0] = 0;
      v15[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      v9._countAndFlagsBits = 0xD000000000000028;
      v9._object = (void *)0x80000000010EDD30;
      String.append(_:)(v9);
      v14 = v8;
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
      _print_unlocked<A, B>(_:_:)(&v14, v15, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v11._countAndFlagsBits = 41;
      v11._object = (void *)0xE100000000000000;
      String.append(_:)(v11);
      swift_errorRelease(v8);
      return v15[0];
    }
    else
    {
      sub_56024((uint64_t)v7, &qword_14FC658);
      return 0;
    }
  }
  return v3;
}

uint64_t sub_BEA3F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Album(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC658);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v6) == 1)
  {
    swift_errorRelease(*(_QWORD *)(v0 + v9));
  }
  else
  {
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v9, v11);
  }
  return swift_deallocObject(v0, v9 + v10, v3 | v8 | 7);
}

unint64_t sub_BEA4D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for Album(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FC658) - 8) + 80);
  return sub_BEA294(v0 + v2, v0 + ((v3 + v4) & ~v4));
}

uint64_t sub_BEA538(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v2[2] = a1;
  v2[3] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC658);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[7] = v5;
  v2[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[10] = v8;
  v2[11] = v9;
  return swift_task_switch(sub_BEA5F4, v8, v9);
}

uint64_t sub_BEA5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t Strong;
  _QWORD *v8;
  char *v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  sub_5C238(*(_QWORD *)(v0 + 16), v2, &qword_14FC658);
  if (swift_getEnumCaseMultiPayload(v2, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 40);
    swift_release();
    sub_56024(v3, &qword_14FC658);
    v4 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    *(_QWORD *)(v0 + 96) = Strong;
    v9 = (char *)&dword_1503DE0 + dword_1503DE0;
    v8 = (_QWORD *)swift_task_alloc(unk_1503DE4);
    *(_QWORD *)(v0 + 104) = v8;
    *v8 = v0;
    v8[1] = sub_BEA6F8;
    return ((uint64_t (*)(_QWORD, uint64_t))v9)(*(_QWORD *)(v0 + 64), Strong);
  }
}

uint64_t sub_BEA6F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(void **)(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v5 = sub_BEA7C8;
  else
    v5 = sub_BEA764;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_BEA764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BEA7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BEA82C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC658);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (_QWORD *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    swift_errorRelease(*v6);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = v0 + v5;
  swift_unknownObjectWeakDestroy(v0 + v5);
  v9 = *(unsigned __int8 *)(v0 + v5 + 48);
  if (v9 != 255)
    sub_626A8(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v9);
  if (*(_QWORD *)(v8 + 56))
    swift_release();
  return swift_deallocObject(v0, v5 + 72, v3 | 7);
}

uint64_t sub_BEA8FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FC658) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC664);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_50F8C;
  return sub_BEA538(v4, v5);
}

uint64_t sub_BEA97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC658);
  v3[12] = v4;
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v3[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v3[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BEAA50, 0, 0);
}

uint64_t sub_BEAA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_5C238(*(_QWORD *)(v0 + 72), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 120), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 80);
    sub_2DE5F8(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
    sub_5C238(v10, v9, &qword_14FC658);
    if (swift_getEnumCaseMultiPayload(v9, v8) == 1)
    {
      sub_56024(*(_QWORD *)(v0 + 104), &qword_14FC658);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      v13 = 1;
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 104);
      v14 = *(_QWORD *)(v0 + 112);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v14, v15, v11);
      v13 = 0;
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v12 + 56))(*(_QWORD *)(v0 + 112), v13, 1, v11);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v16, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = sub_BC1698();
    *(_QWORD *)(inited + 40) = v18;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 152) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 160) = v19;
    *(_QWORD *)(v0 + 168) = v20;
    *(_WORD *)(v0 + 184) = v21;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v22 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 176) = static MainActor.shared.getter(v23);
    v24 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
    return swift_task_switch(sub_BEAC6C, v24, v25);
  }
}

uint64_t sub_BEAC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(uint64_t **)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(unsigned __int16 *)(v0 + 184);
  swift_release();
  sub_BC2F1C(0xD000000000000014, 0x8000000001101F20, 5, 23, v5, v3, v2, v1, v6, v4);
  sub_79B688(v3, v2, v1, v6, SBYTE1(v6));
  return swift_task_switch(sub_BEAD28, 0, 0);
}

uint64_t sub_BEAD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 144);
  sub_56024(*(_QWORD *)(v0 + 112), &qword_14FAC20);
  sub_B9FF14(v1);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BEADA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC658);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v27 = *(_QWORD *)(v6 + 64);
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v26 = *(_QWORD *)(v10 + 64);
  v12 = v0 + v3;
  v13 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v24 = v8;
    v25 = v9;
    if (*(_QWORD *)(v12 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v14 = v12 + *(int *)(v13 + 20);
    v15 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = v14 + *(int *)(v15 + 24);
      v16 = type metadata accessor for URL(0);
      v21 = *(_QWORD *)(v16 - 8);
      v22 = v16;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v21 + 48))(v23, 1))
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v24;
    v9 = v25;
  }
  if (swift_getEnumCaseMultiPayload(v0 + v8, v5) == 1)
  {
    swift_errorRelease(*(_QWORD *)(v0 + v8));
  }
  else
  {
    v17 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v0 + v8, v17);
  }
  v18 = (v8 + v27 + v11) & ~v11;
  v19 = v18 + v26;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v18, v9);
  return swift_deallocObject(v0, v19, v2 | v7 | v11 | 7);
}

uint64_t sub_BEAFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FC658) - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Album(0) - 8) + 80);
  v9 = v6 + v7 + v8;
  v10 = v0 + v3;
  v11 = v0 + v6;
  v12 = v0 + (v9 & ~v8);
  v13 = (_QWORD *)swift_task_alloc(dword_14FC674);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_C3150;
  return sub_BEA97C(v10, v11, v12);
}

uint64_t (*Actions.OpenInClassical.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13AC460, 32, 7);
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(_BYTE *)(v0 + 31) = -18;
  v1 = swift_allocObject(&unk_13AC488, 32, 7);
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(_BYTE *)(v1 + 31) = -18;
  return sub_B9FA1C;
}

uint64_t (*sub_BEB134())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13AC588, 32, 7);
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(_BYTE *)(v0 + 31) = -18;
  v1 = swift_allocObject(&unk_13AC5B0, 32, 7);
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(_BYTE *)(v1 + 31) = -18;
  return sub_B9FF50;
}

uint64_t _s9MusicCore7ActionsO15OpenInClassicalO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x8000000001103560);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_BEB32C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical()
{
  return &type metadata for Actions.OpenInClassical;
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical.Context()
{
  return &type metadata for Actions.OpenInClassical.Context;
}

id Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  uint64_t v23;
  uint64_t v24;
  unint64_t (*v25)();
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id result;
  unint64_t (**v49)();
  unint64_t (*v50)();
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  unint64_t (*v53)();
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t (**v61)();
  uint64_t v62;
  uint64_t v63;
  id v64;

  v58 = a7;
  v59 = a8;
  v55 = a5;
  v56 = a6;
  v57 = a4;
  v52 = a2;
  v61 = a9;
  v63 = a12;
  v64 = a3;
  v60 = a10;
  v13 = *(_QWORD *)(a11 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(a1);
  v54 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - v16;
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v51 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v51 = a1;
  v22((char *)&v51 - v20, a1, a11, v19);
  v23 = *(unsigned __int8 *)(v13 + 80);
  v24 = (v23 + 48) & ~v23;
  v62 = v23 | 7;
  v25 = (unint64_t (*)())swift_allocObject(&unk_13AC5F0, v24 + v14, v23 | 7);
  v53 = v25;
  *((_QWORD *)v25 + 2) = a11;
  *((_QWORD *)v25 + 3) = a12;
  v26 = v64;
  *((_QWORD *)v25 + 4) = v52;
  *((_QWORD *)v25 + 5) = v26;
  v52 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v52((char *)v25 + v24, v21, a11);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a1, a11);
  v27 = (v23 + 32) & ~v23;
  v28 = (v14 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  v32 = swift_allocObject(&unk_13AC618, v31 + 40, v62);
  v33 = v63;
  *(_QWORD *)(v32 + 16) = a11;
  *(_QWORD *)(v32 + 24) = v33;
  v34 = v32 + v27;
  v35 = (void (*)(char *, uint64_t, uint64_t))v52;
  v52((char *)v34, v17, a11);
  *(_QWORD *)(v32 + v28) = v64;
  v36 = (_QWORD *)(v32 + v29);
  v38 = v56;
  v37 = v57;
  *v36 = v55;
  v36[1] = v38;
  v39 = (_QWORD *)(v32 + v30);
  v40 = v59;
  *v39 = v58;
  v39[1] = v40;
  sub_5C090(v37, v32 + v31, &qword_14FB068);
  v41 = v54;
  v35(v54, v51, a11);
  v42 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v44 = (v43 + 32) & ~v43;
  v45 = (*(_QWORD *)(v42 + 64) + v23 + v44) & ~v23;
  v46 = swift_allocObject(&unk_13AC640, v45 + v14, v62 | v43);
  v47 = v63;
  *(_QWORD *)(v46 + 16) = a11;
  *(_QWORD *)(v46 + 24) = v47;
  sub_5C090(v60, v46 + v44, &qword_14FAFF8);
  v35((char *)(v46 + v45), (uint64_t)v41, a11);
  result = v64;
  v49 = v61;
  v50 = v53;
  *v61 = sub_BED038;
  v49[1] = v50;
  v49[2] = (unint64_t (*)())&unk_14FC6B8;
  v49[3] = (unint64_t (*)())v32;
  v49[4] = (unint64_t (*)())&unk_14FC6C8;
  v49[5] = (unint64_t (*)())v46;
  return result;
}

uint64_t static Actions.CreateStation.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8C18(a1, 5, (uint64_t)sub_B9FFF0, (uint64_t)&unk_14FC6D0, (uint64_t)&unk_14FC6D8, a2);
}

uint64_t Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  unint64_t (**v67)();
  uint64_t v68;
  void (*v69)(uint64_t, char *, uint64_t);
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t (**v85)();
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89[32];

  v84 = a8;
  v85 = a9;
  v81 = a6;
  v82 = a7;
  v78 = a4;
  v79 = a5;
  v77 = a2;
  v87 = a1;
  v12 = *(_QWORD *)(a10 - 8);
  __chkstk_darwin(a1);
  v83 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v76 = (char *)&v69 - v15;
  v86 = v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v69 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC6E0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v75 = (uint64_t)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v69 - v24;
  __chkstk_darwin(v26);
  v28 = (void (**)(uint64_t, char *, uint64_t))((char *)&v69 - v27);
  v80 = a3;
  v29 = (uint64_t *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v29, v89, 0, 0);
  v30 = *v29;
  v88 = a11;
  if (v30)
  {
    swift_retain(v30);
    v31 = Player.state<A>(for:)(v87, a10, a11);
    swift_release(v30);
    MusicItemState.playabilityStatus.getter(v28);
    swift_release(v31);
    v32 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v28, 0, 1, v32);
  }
  else
  {
    v33 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v28, 1, 1, v33);
  }
  sub_5C238((uint64_t)v28, (uint64_t)v25, &qword_14FC6E0);
  v70 = v28;
  v73 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v34 = v87;
  v73(v19, v87, a10);
  v35 = *(unsigned __int8 *)(v21 + 80);
  v36 = *(unsigned __int8 *)(v12 + 80);
  v37 = (v35 + 32) & ~v35;
  v38 = (v22 + v36 + v37) & ~v36;
  v39 = v38 + v86;
  v71 = v36 | v35 | 7;
  v72 = v37;
  v40 = swift_allocObject(&unk_13AC668, v38 + v86, v71);
  v41 = v88;
  *(_QWORD *)(v40 + 16) = a10;
  *(_QWORD *)(v40 + 24) = v41;
  v42 = v40 + v37;
  v43 = v40;
  v74 = v40;
  sub_5C090((uint64_t)v25, v42, &qword_14FC6E0);
  v69 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v69(v43 + v38, v19, a10);
  v44 = v75;
  sub_5C090((uint64_t)v70, v75, &qword_14FC6E0);
  v45 = v76;
  v73(v76, v34, a10);
  v46 = (v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
  v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
  v50 = swift_allocObject(&unk_13AC690, v49 + 8, v71);
  v51 = v88;
  *(_QWORD *)(v50 + 16) = a10;
  *(_QWORD *)(v50 + 24) = v51;
  sub_5C090(v44, v50 + v72, &qword_14FC6E0);
  v52 = v45;
  v53 = (void (*)(char *, uint64_t, uint64_t))v69;
  v69(v50 + v38, v52, a10);
  v54 = v78;
  *(_QWORD *)(v50 + v46) = v77;
  v55 = (_QWORD *)(v50 + v47);
  v56 = v79;
  *v55 = v54;
  v55[1] = v56;
  v57 = (_QWORD *)(v50 + v48);
  v58 = v82;
  v59 = v83;
  *v57 = v81;
  v57[1] = v58;
  *(_QWORD *)(v50 + v49) = v80;
  v53(v59, v87, a10);
  v60 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v61 = *(unsigned __int8 *)(v60 + 80);
  v62 = (v61 + 32) & ~v61;
  v63 = (*(_QWORD *)(v60 + 64) + v36 + v62) & ~v36;
  v64 = swift_allocObject(&unk_13AC6B8, v63 + v86, v36 | v61 | 7);
  v65 = v88;
  *(_QWORD *)(v64 + 16) = a10;
  *(_QWORD *)(v64 + 24) = v65;
  sub_5C090(v84, v64 + v62, &qword_14FAFF8);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v53)(v64 + v63, v59, a10);
  v67 = v85;
  v68 = v74;
  *v85 = sub_BF1DB8;
  v67[1] = (unint64_t (*)())v68;
  v67[2] = (unint64_t (*)())&unk_14FC6F0;
  v67[3] = (unint64_t (*)())v50;
  v67[4] = (unint64_t (*)())&unk_14FC700;
  v67[5] = (unint64_t (*)())v64;
  return result;
}

uint64_t static Actions.Play.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8C18(a1, 23, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FC708, (uint64_t)&unk_14FC710, a2);
}

id Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  id v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  void *v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id result;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  id v87;
  id v88;
  id v89;
  char v90[32];

  v80 = a6;
  v81 = a7;
  v82 = a4;
  v88 = a2;
  v13 = a1;
  v78 = a9;
  v79 = a5;
  v15 = *(_QWORD *)(a11 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(a1);
  v83 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18.n128_f64[0] = __chkstk_darwin(v17);
  v20 = (char *)&v72 - v19;
  v77 = v21;
  v84 = a10;
  v85 = a8;
  v86 = v22;
  v87 = v23;
  if (v21 == (_BYTE *)&dword_0 + 3
    && (v24 = (uint64_t *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player),
        v18 = swift_beginAccess(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v90, 0, 0),
        (v25 = *v24) != 0))
  {
    v76 = v15;
    KeyPath = swift_getKeyPath(&unk_109CD38);
    v27 = swift_getKeyPath(&unk_109CD60);
    swift_retain(v25);
    static Published.subscript.getter(&v89, v28, KeyPath, v27);
    swift_release(v25);
    swift_release(KeyPath);
    v18 = swift_release(v27);
    v29 = v89;
    if (v89)
    {
      v30 = objc_msgSend(v89, "tracklist", v18.n128_f64[0]);

      v31 = objc_msgSend(v30, "insertCommand");
      if (v31)
      {
        v32 = objc_msgSend(v31, "insertAfterLastSection");
        v18 = swift_unknownObjectRelease(v31);
        if (v32)
        {
          v33 = objc_msgSend(v32, "section", v18.n128_f64[0]);
          v34 = objc_msgSend(v33, "metadataObject", swift_unknownObjectRelease(v32).n128_f64[0]);

          if (v34)
          {
            v35 = objc_msgSend(v34, "flattenedGenericObject");

            v15 = v76;
            if (!v35)
              goto LABEL_20;
            v36 = objc_msgSend(v35, "anyObject");

            if (!v36)
              goto LABEL_20;
            objc_opt_self(MPModelAlbum);
            v37 = swift_dynamicCastObjCClass(v36);
            if (v37)
            {
              v38 = (void *)v37;
              v39 = v36;
              v40 = objc_msgSend(v38, "title");
            }
            else
            {
              objc_opt_self(MPModelPlaylist);
              v66 = swift_dynamicCastObjCClass(v36);
              if (!v66)
              {

                goto LABEL_20;
              }
              v67 = (void *)v66;
              v39 = v36;
              v40 = objc_msgSend(v67, "name");
            }
            v68 = v40;
            if (v68)
            {
              v69 = v68;
              v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
              v72 = v71;
              v73 = v70;

LABEL_21:
              v13 = v86;
              goto LABEL_13;
            }

LABEL_20:
            v72 = 0;
            v73 = 0;
            goto LABEL_21;
          }
        }
      }
    }
    v72 = 0;
    v73 = 0;
    v13 = v86;
    v15 = v76;
  }
  else
  {
    v72 = 0;
    v73 = 0;
  }
LABEL_13:
  (*(void (**)(char *, char *, uint64_t, __n128))(v15 + 16))(v20, v13, a11, v18);
  v41 = *(unsigned __int8 *)(v15 + 80);
  v42 = (v41 + 40) & ~v41;
  v74 = v41 | 7;
  v76 = v16 + 7;
  v43 = (v16 + 7 + v42) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  v45 = (_QWORD *)swift_allocObject(&unk_13AC6E0, v44 + 8, v41 | 7);
  v45[2] = a11;
  v45[3] = a12;
  v75 = a12;
  v46 = v87;
  v45[4] = v87;
  v47 = (char *)v45 + v42;
  v48 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v48(v47, v20, a11);
  v49 = v77;
  *(_QWORD *)((char *)v45 + v43) = v77;
  v50 = v88;
  *(_QWORD *)((char *)v45 + v44) = v88;
  v51 = (_QWORD *)swift_allocObject(&unk_13AC708, 112, 7);
  v52 = v79;
  v51[2] = v50;
  v51[3] = v52;
  v53 = v81;
  v51[4] = v80;
  v51[5] = v53;
  v51[6] = v78;
  v51[7] = v46;
  v51[8] = v49;
  sub_5C090(v82, (uint64_t)(v51 + 9), &qword_14FB068);
  v54 = v83;
  v48(v83, v86, a11);
  v55 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 32) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v41 + v57) & ~v41;
  v59 = (v76 + v58) & 0xFFFFFFFFFFFFFFF8;
  v60 = swift_allocObject(&unk_13AC730, v59 + 8, v74 | v56);
  v61 = v75;
  *(_QWORD *)(v60 + 16) = a11;
  *(_QWORD *)(v60 + 24) = v61;
  sub_5C090(v84, v60 + v57, &qword_14FAFF8);
  v48((char *)(v60 + v58), v54, a11);
  *(_QWORD *)(v60 + v59) = v49;
  sub_1D81FC(v49);
  sub_1D81FC(v49);
  sub_1D81FC(v49);
  v62 = v87;
  result = v88;
  v64 = v85;
  v65 = v73;
  *v85 = v49;
  v64[1] = v65;
  v64[2] = v72;
  v64[3] = sub_BF21B4;
  v64[4] = v45;
  v64[5] = &unk_14FC720;
  v64[6] = v51;
  v64[7] = &unk_14FC730;
  v64[8] = v60;
  return result;
}

__n128 static Actions.Queue.action(context:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  _OWORD v7[8];
  uint64_t v8;

  sub_BF28C8(a1, (uint64_t)v7);
  v3 = v7[7];
  *(_OWORD *)(a2 + 96) = v7[6];
  *(_OWORD *)(a2 + 112) = v3;
  *(_QWORD *)(a2 + 128) = v8;
  v4 = v7[3];
  *(_OWORD *)(a2 + 32) = v7[2];
  *(_OWORD *)(a2 + 48) = v4;
  v5 = v7[5];
  *(_OWORD *)(a2 + 64) = v7[4];
  *(_OWORD *)(a2 + 80) = v5;
  result = (__n128)v7[1];
  *(_OWORD *)a2 = v7[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v15 = swift_allocObject(&unk_13AC758, 32, 7);
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = *(_QWORD *)(a7 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (v18 + *(_QWORD *)(v16 + 64) + v20) & ~v20;
  v22 = swift_allocObject(&unk_13AC780, v21 + *(_QWORD *)(v19 + 64), v17 | v20 | 7);
  *(_QWORD *)(v22 + 16) = a7;
  *(_QWORD *)(v22 + 24) = a8;
  sub_5C090(a6, v22 + v18, &qword_14FAFF8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v22 + v21, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = &unk_14FB1F0;
  a9[3] = v15;
  a9[4] = &unk_14FC740;
  a9[5] = v22;
  return result;
}

uint64_t sub_BEC10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BEC1B8, 0, 0);
}

uint64_t sub_BEC1B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_5C238(*(_QWORD *)(v0 + 72), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 112), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_5C04C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_BEC378, v19, v20);
  }
}

uint64_t sub_BEC378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 45, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BE9D68, 0, 0);
}

uint64_t static Actions.Preview.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8C18(a1, 36, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FC748, (uint64_t)&unk_14FC750, a2);
}

uint64_t sub_BEC468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8CAC(a1, 36, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FC748, (uint64_t)&unk_14FC750, a2);
}

uint64_t (*Actions.Preview.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13AC7A8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_13AC7D0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_B9FA1C;
}

uint64_t (*sub_BEC514())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13ACD40, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_13ACD68, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_B9FF50;
}

uint64_t sub_BEC59C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8CAC(a1, 5, (uint64_t)sub_B9FFF0, (uint64_t)&unk_14FC6D0, (uint64_t)&unk_14FC6D8, a2);
}

unint64_t sub_BEC5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  Swift::String v32;
  _QWORD v34[11];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[8];

  v40 = a3;
  v7 = type metadata accessor for Artist(0);
  __chkstk_darwin(v7);
  v35 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v34[10] = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34[9] = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for Song(0);
  v36 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  __chkstk_darwin(v9);
  v34[8] = (char *)v34 - v10;
  __chkstk_darwin(v11);
  v41 = a4;
  v39 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v12);
  v38 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v34 - v15;
  type metadata accessor for MusicLibrary(0);
  v17 = static MusicLibrary.shared.getter();
  v18 = static MusicLibrary.== infix(_:_:)(a1, v17);
  swift_release(v17);
  if ((v18 & 1) == 0)
    return 0xD000000000000016;
  v19 = (uint64_t *)(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  v20 = swift_beginAccess(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v53, 0, 0);
  v21 = *v19;
  if (*v19)
  {
    v22 = v41;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v39 + 16))(v16, v40, v41, v20);
    swift_retain(v21);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB990);
    if ((swift_dynamicCast(v42, v16, v22, v23, 6) & 1) != 0)
    {
      sub_8B15C(v42, (uint64_t)&v50);
      v24 = v51;
      v25 = v52;
      __swift_project_boxed_opaque_existential_1(&v50, v51);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
      v27 = v26;
      swift_bridgeObjectRelease(v26);
      if (v27)
      {
        v34[7] = v21;
        if (qword_14F9D68 != -1)
          swift_once(&qword_14F9D68, sub_C3FD38);
        v28 = static ApplicationCapabilities.Controller.shared;
        KeyPath = swift_getKeyPath("ЇK");
        v30 = swift_getKeyPath(&unk_109CE88);
        static Published.subscript.getter(v42, v28, KeyPath, v30);
        swift_release(KeyPath);
        swift_release(v30);
        v34[3] = v43;
        v34[5] = v44;
        v34[6] = v45;
        v34[4] = v46;
        v34[2] = v48;
        v34[1] = v49;
        __asm { BR              X10 }
      }
      __swift_destroy_boxed_opaque_existential_1(&v50);
    }
    else
    {
      v43 = 0;
      memset(v42, 0, sizeof(v42));
      sub_56024((uint64_t)v42, (uint64_t *)&unk_15017D0);
    }
    swift_release(v21);
    return 0xD00000000000001DLL;
  }
  else
  {
    *(_QWORD *)&v42[0] = 0;
    *((_QWORD *)&v42[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v32._countAndFlagsBits = 0xD000000000000020;
    v32._object = (void *)0x80000000011036C0;
    String.append(_:)(v32);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v40, v41);
    return *(_QWORD *)&v42[0];
  }
}

uint64_t sub_BECFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 32));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_BED038()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_BEC5BC(v0[4], v0[5], (uint64_t)v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_BED058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v19;
  unint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, v1, v6, v8);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
    v19 = 0;
    v20 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v5, &v19, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v12 = v19;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v11 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    return 0;
  }
  else
  {
    if (qword_14F9CA0 != -1)
      swift_once(&qword_14F9CA0, sub_C14A2C);
    v13 = type metadata accessor for Logger(0);
    v14 = __swift_project_value_buffer(v13, (uint64_t)static Logger.actions);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.fault.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "Unknown playability status", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    v19 = 0;
    v20 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v1, &v19, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v12 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v12;
}

uint64_t sub_BED2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8[44] = a7;
  v8[45] = a8;
  v8[42] = a5;
  v8[43] = a6;
  v8[40] = a3;
  v8[41] = a4;
  v8[38] = a1;
  v8[39] = a2;
  v10 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[46] = v10;
  v8[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[48] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[49] = swift_task_alloc(v12);
  v8[50] = swift_task_alloc(v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC838);
  v8[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v8[52] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[53] = v15;
  v8[54] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Notice.Variant(0);
  v8[55] = v16;
  v8[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Notice(0);
  v8[57] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB158);
  v8[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a8 - 8);
  v8[59] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[60] = swift_task_alloc(v20);
  v8[61] = swift_task_alloc(v20);
  v21 = type metadata accessor for Song(0);
  v8[62] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v8[63] = v22;
  v8[64] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BED458, 0, 0);
}

uint64_t sub_BED458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  unint64_t v33;
  NSString v34;
  Class v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  NSString v58;
  uint64_t v59;
  void *v60;
  Class isa;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 360);
  v6 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 472) + 16);
  v6(v3, *(_QWORD *)(v0 + 304), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) == 0)
  {
    v36 = *(_QWORD *)(v0 + 464);
    v8(v36, 1, 1, *(_QWORD *)(v0 + 496));
    sub_56024(v36, &qword_14FB158);
    goto LABEL_16;
  }
  v10 = *(_QWORD *)(v0 + 504);
  v9 = *(_QWORD *)(v0 + 512);
  v11 = *(_QWORD *)(v0 + 496);
  v12 = *(_QWORD *)(v0 + 464);
  v13 = *(_QWORD *)(v0 + 312);
  v8(v12, 0, 1, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
  v14 = (_QWORD *)(v13 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  v15 = swift_beginAccess(v13 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v0 + 256, 0, 0);
  if (!*v14)
    goto LABEL_15;
  KeyPath = swift_getKeyPath(&unk_109CD38);
  v17 = swift_getKeyPath(&unk_109CD60);
  swift_retain();
  static Published.subscript.getter((_QWORD *)(v0 + 280), v18, KeyPath, v17);
  swift_release();
  swift_release();
  v15 = swift_release();
  v19 = *(void **)(v0 + 280);
  if (!v19)
    goto LABEL_15;
  MPCPlayerResponse.playState(for:)(*(_QWORD *)(v0 + 512));
  v21 = v20;

  if ((v21 & 1) != 0)
    goto LABEL_15;
  if (!*v14)
    goto LABEL_15;
  v22 = swift_getKeyPath(&unk_109CD38);
  v23 = swift_getKeyPath(&unk_109CD60);
  swift_retain();
  static Published.subscript.getter((_QWORD *)(v0 + 288), v24, v22, v23);
  swift_release();
  swift_release();
  v15 = swift_release();
  v25 = *(void **)(v0 + 288);
  if (!v25)
    goto LABEL_15;
  v26 = objc_msgSend(*(id *)(v0 + 288), "tracklist", v15.n128_f64[0]);

  v27 = objc_msgSend(v26, "playingItem");
  if (!v27)
    goto LABEL_15;
  v28 = objc_msgSend(v27, "metadataObject");

  if (!v28)
    goto LABEL_15;
  v29 = objc_msgSend(v28, "innermostModelObject");
  *(_QWORD *)(v0 + 520) = v29;

  objc_opt_self(MPModelSong);
  v30 = swift_dynamicCastObjCClass(v29);
  if (!v30)
  {

LABEL_15:
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496), v15);
    goto LABEL_16;
  }
  v31 = objc_msgSend((id)objc_opt_self(MPCPlaybackIntent), "radioPlaybackIntentFromSong:", v30);
  *(_QWORD *)(v0 + 528) = v31;
  if (!v31)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));

LABEL_16:
    v37 = *(_QWORD *)(v0 + 480);
    v38 = *(_QWORD *)(v0 + 360);
    v6(v37, *(_QWORD *)(v0 + 304), v38);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC840);
    if ((swift_dynamicCast(v0 + 56, v37, v38, v39, 6) & 1) != 0)
    {
      sub_8B15C((__int128 *)(v0 + 56), v0 + 16);
      sub_55D1C(v0 + 16, v0 + 96);
      MusicPlaybackIntentDescriptor.init(stationSeed:)(v0 + 96);
      v51 = *(_QWORD *)(v0 + 424);
      v50 = *(_QWORD *)(v0 + 432);
      v53 = *(_QWORD *)(v0 + 408);
      v52 = *(_QWORD *)(v0 + 416);
      v55 = *(_QWORD *)(v0 + 336);
      v54 = *(_QWORD *)(v0 + 344);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v53, 0, 1, v52);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v50, v53, v52);
      v56 = swift_bridgeObjectRetain();
      v57 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v56);
      v58 = String._bridgeToObjectiveC()();
      objc_msgSend(v57, "setPlayActivityFeatureName:", v58, swift_bridgeObjectRelease().n128_f64[0]);

      v59 = sub_1390D8(v55, v54);
      v60 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v59);
      if (v54 >> 60 == 15)
      {
        isa = 0;
      }
      else
      {
        v62 = *(_QWORD *)(v0 + 336);
        v63 = *(_QWORD *)(v0 + 344);
        sub_50CB4(v62, v63);
        isa = Data._bridgeToObjectiveC()().super.isa;
        sub_50C4C(v62, v63);
      }
      v64 = *(_QWORD *)(v0 + 424);
      v65 = *(_QWORD *)(v0 + 416);
      v66 = *(_QWORD *)(v0 + 392);
      v75 = *(_QWORD *)(v0 + 432);
      v77 = *(_QWORD *)(v0 + 400);
      v67 = *(_QWORD *)(v0 + 376);
      v68 = *(int **)(v0 + 384);
      v74 = *(_QWORD *)(v0 + 368);
      v69 = *(_QWORD *)(v0 + 336);
      v70 = *(_QWORD *)(v0 + 344);
      objc_msgSend(v60, "setPlayActivityRecommendationData:", isa);
      sub_50C4C(v69, v70);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v67, v75, v65);
      swift_storeEnumTagMultiPayload(v67, v74, 1);
      *(_QWORD *)(v0 + 168) = 0;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      v71 = v66 + v68[7];
      *(_QWORD *)(v71 + 32) = 0;
      *(_OWORD *)v71 = 0u;
      *(_OWORD *)(v71 + 16) = 0u;
      *(_BYTE *)(v66 + v68[8]) = 0;
      *(_BYTE *)(v66 + v68[9]) = 0;
      sub_BF2EBC(v67, v66);
      sub_BF2F00(v0 + 136, v71);
      *(_QWORD *)(v66 + v68[5]) = 2;
      *(_QWORD *)(v66 + v68[6]) = 1;
      sub_56024(v0 + 136, &qword_1500B80);
      sub_5C0DC(v67, type metadata accessor for PlaybackIntentDescriptor.IntentType);
      sub_5C04C(v66, v77, type metadata accessor for PlaybackIntentDescriptor);
      v72 = (_QWORD *)swift_task_alloc(dword_1500814);
      *(_QWORD *)(v0 + 584) = v72;
      *v72 = v0;
      v72[1] = sub_BEDF1C;
      return PlaybackController.add(_:route:)(*(_QWORD *)(v0 + 400), 0);
    }
    else
    {
      *(_QWORD *)(v0 + 88) = 0;
      *(_OWORD *)(v0 + 56) = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
      sub_56024(v0 + 56, &qword_14FC848);
      v40 = *(_QWORD *)(v0 + 480);
      v41 = *(_QWORD *)(v0 + 488);
      v43 = *(_QWORD *)(v0 + 456);
      v42 = *(_QWORD *)(v0 + 464);
      v44 = *(_QWORD *)(v0 + 448);
      v45 = *(_QWORD *)(v0 + 432);
      v47 = *(_QWORD *)(v0 + 400);
      v46 = *(_QWORD *)(v0 + 408);
      v48 = *(_QWORD *)(v0 + 392);
      v76 = *(_QWORD *)(v0 + 376);
      swift_task_dealloc(*(_QWORD *)(v0 + 512));
      swift_task_dealloc(v41);
      swift_task_dealloc(v40);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      swift_task_dealloc(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      swift_task_dealloc(v47);
      swift_task_dealloc(v48);
      swift_task_dealloc(v76);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  v32 = v31;
  v33 = *(_QWORD *)(v0 + 344);
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setPlayActivityFeatureName:", v34);

  if (v33 >> 60 == 15)
    v35 = 0;
  else
    v35 = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v32, "setPlayActivityRecommendationData:", v35);

  v73 = (_QWORD *)swift_task_alloc(dword_15007DC);
  *(_QWORD *)(v0 + 536) = v73;
  *v73 = v0;
  v73[1] = sub_BEDB84;
  return PlaybackController.insert(_:location:)((uint64_t)v32, 0);
}

uint64_t sub_BEDB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 536);
  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_BEE2D4;
  else
    v3 = sub_BEDBE8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BEDBE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_5C238(*(_QWORD *)(v0 + 352), v0 + 176, &qword_14FB068);
  v1 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 552) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 560) = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 568) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 176), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 8);
    static Notice.variant(_:)(v2);
    sub_5C0DC(v2, type metadata accessor for Notice.Variant);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 576) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_BEDDAC, v6, v7);
  }
  else
  {
    v9 = *(void **)(v0 + 528);
    v10 = *(void **)(v0 + 520);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));

    sub_56024(v0 + 176, &qword_14FB068);
    v11 = *(_QWORD *)(v0 + 480);
    v12 = *(_QWORD *)(v0 + 488);
    v14 = *(_QWORD *)(v0 + 456);
    v13 = *(_QWORD *)(v0 + 464);
    v15 = *(_QWORD *)(v0 + 448);
    v16 = *(_QWORD *)(v0 + 432);
    v18 = *(_QWORD *)(v0 + 400);
    v17 = *(_QWORD *)(v0 + 408);
    v19 = *(_QWORD *)(v0 + 392);
    v20 = *(_QWORD *)(v0 + 376);
    swift_task_dealloc(*(_QWORD *)(v0 + 512));
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_BEDDAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[70];
  v2 = v0[69];
  v3 = v0[57];
  swift_release();
  sub_C12A88(v3, 0, v2, v1);
  sub_5C0DC(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_BEDE24, 0, 0);
}

uint64_t sub_BEDE24()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 176));
  v5 = *(_QWORD *)(v0 + 480);
  v6 = *(_QWORD *)(v0 + 488);
  v8 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 464);
  v9 = *(_QWORD *)(v0 + 448);
  v10 = *(_QWORD *)(v0 + 432);
  v12 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD *)(v0 + 408);
  v13 = *(_QWORD *)(v0 + 392);
  v15 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v6);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BEDF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 584);
  *(_QWORD *)(*(_QWORD *)v1 + 592) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_BEE53C;
  else
    v3 = sub_BEDF80;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BEDF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_5C238(*(_QWORD *)(v0 + 352), v0 + 216, &qword_14FB068);
  v1 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 600) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 608) = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 616) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 216), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 8);
    static Notice.variant(_:)(v2);
    sub_5C0DC(v2, type metadata accessor for Notice.Variant);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 624) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_BEE158, v6, v7);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 424);
    v9 = *(_QWORD *)(v0 + 432);
    v11 = *(_QWORD *)(v0 + 416);
    sub_5C0DC(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
    sub_56024(v0 + 216, &qword_14FB068);
    v12 = *(_QWORD *)(v0 + 480);
    v13 = *(_QWORD *)(v0 + 488);
    v15 = *(_QWORD *)(v0 + 456);
    v14 = *(_QWORD *)(v0 + 464);
    v16 = *(_QWORD *)(v0 + 448);
    v17 = *(_QWORD *)(v0 + 432);
    v19 = *(_QWORD *)(v0 + 400);
    v18 = *(_QWORD *)(v0 + 408);
    v20 = *(_QWORD *)(v0 + 392);
    v21 = *(_QWORD *)(v0 + 376);
    swift_task_dealloc(*(_QWORD *)(v0 + 512));
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_BEE158()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[76];
  v2 = v0[75];
  v3 = v0[57];
  swift_release();
  sub_C12A88(v3, 0, v2, v1);
  sub_5C0DC(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_BEE1D0, 0, 0);
}

uint64_t sub_BEE1D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  sub_5C0DC(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 216));
  v4 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 488);
  v7 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 464);
  v8 = *(_QWORD *)(v0 + 448);
  v9 = *(_QWORD *)(v0 + 432);
  v11 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 408);
  v12 = *(_QWORD *)(v0 + 392);
  v14 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BEE2D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void **)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v5 = *(_QWORD *)(v0 + 544);
  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v6 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v6, (uint64_t)static Logger.actions);
  swift_errorRetain(v5);
  v7 = swift_errorRetain(v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v26 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 296) = v5;
    swift_errorRetain(v5);
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v13 = (char *)String.init<A>(describing:)(v0 + 296, v12);
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v14, &v26);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl(&dword_0, v8, v9, "Failed to Create Station with error=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  v15 = *(_QWORD *)(v0 + 480);
  v16 = *(_QWORD *)(v0 + 488);
  v18 = *(_QWORD *)(v0 + 456);
  v17 = *(_QWORD *)(v0 + 464);
  v19 = *(_QWORD *)(v0 + 448);
  v20 = *(_QWORD *)(v0 + 432);
  v22 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 408);
  v23 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BEE53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  sub_5C0DC(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  v4 = *(_QWORD *)(v0 + 592);
  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v5 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v5, (uint64_t)static Logger.actions);
  swift_errorRetain(v4);
  v6 = swift_errorRetain(v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v25 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 296) = v4;
    swift_errorRetain(v4);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v12 = (char *)String.init<A>(describing:)(v0 + 296, v11);
    *(_QWORD *)(v9 + 4) = sub_BA95EC(v12, v13, &v25);
    swift_bridgeObjectRelease();
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl(&dword_0, v7, v8, "Failed to Create Station with error=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v4);
  }
  else
  {
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    swift_errorRelease(v4);

  }
  v14 = *(_QWORD *)(v0 + 480);
  v15 = *(_QWORD *)(v0 + 488);
  v17 = *(_QWORD *)(v0 + 456);
  v16 = *(_QWORD *)(v0 + 464);
  v18 = *(_QWORD *)(v0 + 448);
  v19 = *(_QWORD *)(v0 + 432);
  v21 = *(_QWORD *)(v0 + 400);
  v20 = *(_QWORD *)(v0 + 408);
  v22 = *(_QWORD *)(v0 + 392);
  v24 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BEE7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v0 + v5 + 8);
  if (v7 >> 60 != 15)
    sub_50C60(*(_QWORD *)(v0 + v5), v7);
  if (*(_QWORD *)(v0 + v6 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 40, v2 | 7);
}

uint64_t sub_BEE86C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v4;
  v9 = *(_QWORD *)(v0 + v5);
  v10 = *(_QWORD *)(v0 + v6);
  v11 = *(_QWORD *)(v0 + v6 + 8);
  v12 = *(_QWORD *)(v0 + v7);
  v13 = *(_QWORD *)(v0 + v7 + 8);
  v14 = v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)swift_task_alloc(dword_14FC6B4);
  *(_QWORD *)(v1 + 16) = v15;
  *v15 = v1;
  v15[1] = sub_50F8C;
  return sub_BED2AC(v8, v9, v10, v11, v12, v13, v14, v2);
}

uint64_t sub_BEE94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BEE9F8, 0, 0);
}

uint64_t sub_BEE9F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_5C238(*(_QWORD *)(v0 + 96), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 136), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_5C04C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105F890;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 4;
    *(_QWORD *)(v0 + 184) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_BEEBC4, v19, v20);
  }
}

uint64_t sub_BEEBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 10, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BE87B0, 0, 0);
}

uint64_t sub_BEEC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_14FC6C4);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_C3150;
  return sub_BEE94C(v7, v8, v2, v3);
}

uint64_t Actions.CreateStation.Context.menuItemTitle.getter()
{
  return sub_BE88C8(0x5320657461657243, 0xEE006E6F69746174);
}

uint64_t (*Actions.CreateStation.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13AC7F8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 24) = 0x80000000010F80A0;
  v1 = swift_allocObject(&unk_13AC820, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 + 24) = 0x80000000010F80A0;
  return sub_B9FF50;
}

uint64_t sub_BEEDDC(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x5320657461657243, 0xEE006E6F69746174);
}

uint64_t (*sub_BEEE00())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13ACCF0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 24) = 0x80000000010F80A0;
  v1 = swift_allocObject(&unk_13ACD18, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 + 24) = 0x80000000010F80A0;
  return sub_B9FF50;
}

uint64_t sub_BEEE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8CAC(a1, 23, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FC708, (uint64_t)&unk_14FC710, a2);
}

uint64_t sub_BEEEA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 24))();
}

uint64_t sub_BEEEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 40);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_C3150;
  return v6();
}

uint64_t sub_BEEF18(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 56);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return v5();
}

__n128 sub_BEEF6C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  _OWORD v9[8];
  uint64_t v10;
  _OWORD v11[4];
  uint64_t v12;

  v3 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v3;
  v12 = *(_QWORD *)(a1 + 64);
  v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  sub_BF28C8((uint64_t *)v11, (uint64_t)v9);
  v5 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v5;
  *(_QWORD *)(a2 + 128) = v10;
  v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

unint64_t sub_BEEFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __n128 v28;
  Swift::String v29;
  void *object;
  unint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  int v40;
  __n128 v41;
  char *v42;
  Swift::String v43;
  void *v44;
  __n128 v45;
  void (*v46)(char *, uint64_t, __n128);
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  __n128 v52;
  char *v53;
  Swift::String v54;
  void *v55;
  __n128 v56;
  void (*v57)(char *, uint64_t, __n128);
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;

  v65 = a4;
  v66 = a2;
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  __chkstk_darwin(v6);
  v60 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v62 = (char *)&v59 - v9;
  __chkstk_darwin(v10);
  v61 = (char *)&v59 - v11;
  v12 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC6E0);
  __chkstk_darwin(v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v59 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v59 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v59 - v26;
  sub_5C238(a1, (uint64_t)v18, &qword_14FC6E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_56024((uint64_t)v18, &qword_14FC6E0);
    v67 = 0;
    v68 = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    v28 = swift_bridgeObjectRelease(v68);
    v67 = 0xD000000000000022;
    v68 = 0x8000000001103630;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v15, v66, a3, v28);
    v29._countAndFlagsBits = String.init<A>(describing:)(v15, a3);
    object = v29._object;
    String.append(_:)(v29);
    swift_bridgeObjectRelease(object);
    return v67;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v18, v19);
  if ((sub_BEF574(v66, a3) & 1) == 0)
  {
    v31 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return v31;
  }
  v32 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v33 = v24;
  v32(v24, v27, v19);
  v34 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v24, v19);
  if (v34 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
    v35 = v63;
    v36 = v64;
    v37 = v61;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v61, v24, v64);
    v38 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    v39 = v62;
    v38(v62, v37, v36);
    v40 = (*(uint64_t (**)(char *, uint64_t))(v35 + 88))(v39, v36);
    if (v40 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:)
      && v40 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v67 = 0;
      v68 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      v41 = swift_bridgeObjectRelease(v68);
      v67 = 0xD000000000000018;
      v68 = 0x8000000001103680;
      v42 = v60;
      ((void (*)(char *, char *, uint64_t, __n128))v38)(v60, v37, v36, v41);
      v43._countAndFlagsBits = String.init<A>(describing:)(v42, v36);
      v44 = v43._object;
      String.append(_:)(v43);
      v45 = swift_bridgeObjectRelease(v44);
      v31 = v67;
      v46 = *(void (**)(char *, uint64_t, __n128))(v35 + 8);
      v46(v37, v36, v45);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
      ((void (*)(char *, uint64_t))v46)(v39, v36);
      return v31;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
LABEL_16:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return 0;
  }
  if (v34 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
    goto LABEL_16;
  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v47 = type metadata accessor for Logger(0);
  v48 = __swift_project_value_buffer(v47, (uint64_t)static Logger.actions);
  v49 = Logger.logObject.getter(v48);
  v50 = static os_log_type_t.fault.getter(v49);
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v51 = 0;
    _os_log_impl(&dword_0, v49, v50, "Unknown playability status", v51, 2u);
    swift_slowDealloc(v51, -1, -1);
  }

  v67 = 0;
  v68 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  v52 = swift_bridgeObjectRelease(v68);
  v67 = 0xD000000000000010;
  v68 = 0x8000000001103660;
  v53 = v59;
  ((void (*)(char *, char *, uint64_t, __n128))v32)(v59, v27, v19, v52);
  v54._countAndFlagsBits = String.init<A>(describing:)(v53, v19);
  v55 = v54._object;
  String.append(_:)(v54);
  v56 = swift_bridgeObjectRelease(v55);
  v31 = v67;
  v57 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
  v57(v27, v19, v56);
  ((void (*)(char *, uint64_t))v57)(v33, v19);
  return v31;
}

uint64_t sub_BEF574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v24 = type metadata accessor for Station(0);
  v22 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v11);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a2);
  if (swift_dynamicCast(v13, v16, a2, v9, 0))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else if (swift_dynamicCast(v8, v16, a2, v5, 0))
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v18 = v23;
    v17 = v24;
    if (!swift_dynamicCast(v23, v16, a2, v24, 0))
    {
      v19 = 0;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v17);
  }
  v19 = 1;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, a2);
  return v19;
}

uint64_t sub_BEF758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v8[21] = v17;
  v8[22] = v18;
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[15] = a3;
  v8[16] = a4;
  v8[13] = a1;
  v8[14] = a2;
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[23] = v9;
  v8[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[25] = v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[26] = swift_task_alloc(v11);
  v8[27] = swift_task_alloc(v11);
  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v8[28] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[29] = v13;
  v8[30] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC828);
  v8[31] = v14;
  v8[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FC6E0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[33] = swift_task_alloc(v15);
  v8[34] = swift_task_alloc(v15);
  return swift_task_switch(sub_BEF880, 0, 0);
}

uint64_t sub_BEF880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(uint64_t, uint64_t);
  unint64_t v34;
  void *v35;
  NSString v36;
  Class isa;
  uint64_t v38;
  int *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v1, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v7 = v3 + *(int *)(v2 + 48);
  sub_5C238(v6, v3, &qword_14FC6E0);
  sub_5C238(v1, v7, &qword_14FC6E0);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v8(v3, 1, v4) != 1)
  {
    v10 = *(_QWORD *)(v0 + 224);
    sub_5C238(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), &qword_14FC6E0);
    v11 = v8(v7, 1, v10);
    v12 = *(_QWORD *)(v0 + 264);
    v13 = *(_QWORD *)(v0 + 272);
    if (v11 != 1)
    {
      v27 = *(_QWORD *)(v0 + 256);
      v29 = *(_QWORD *)(v0 + 232);
      v28 = *(_QWORD *)(v0 + 240);
      v30 = *(_QWORD *)(v0 + 224);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v7, v30);
      v31 = sub_4DD24(&qword_14FC830, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t)&protocol conformance descriptor for MusicPlayer.PlayabilityStatus);
      v32 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v28, v30, v31);
      v33 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v33(v28, v30);
      sub_56024(v13, &qword_14FC6E0);
      v33(v12, v30);
      sub_56024(v27, &qword_14FC6E0);
      if ((v32 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      v17 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 176);
      v18 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v0 + 40) = v17;
      *(_QWORD *)(v0 + 48) = *(_QWORD *)(v16 + 8);
      boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((_QWORD *)(v0 + 16));
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(boxed_opaque_existential_1Tm, v18, v17);
      *(_BYTE *)(v0 + 56) = 0;
      _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 16);
      sub_B91340(v0 + 16);
      v20 = *(_QWORD *)(v0 + 264);
      v21 = *(_QWORD *)(v0 + 256);
      v22 = *(_QWORD *)(v0 + 240);
      v24 = *(_QWORD *)(v0 + 208);
      v23 = *(_QWORD *)(v0 + 216);
      v25 = *(_QWORD *)(v0 + 192);
      swift_task_dealloc(*(_QWORD *)(v0 + 272));
      swift_task_dealloc(v20);
      swift_task_dealloc(v21);
      swift_task_dealloc(v22);
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      swift_task_dealloc(v25);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v14 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 232);
    sub_56024(*(_QWORD *)(v0 + 272), &qword_14FC6E0);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    sub_56024(*(_QWORD *)(v0 + 256), &qword_14FC828);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(v0 + 224);
  sub_56024(*(_QWORD *)(v0 + 272), &qword_14FC6E0);
  if (v8(v7, 1, v9) != 1)
    goto LABEL_6;
  sub_56024(*(_QWORD *)(v0 + 256), &qword_14FC6E0);
LABEL_9:
  v34 = *(_QWORD *)(v0 + 152);
  v35 = *(void **)(v0 + 120);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v35, "setPlayActivityFeatureName:", v36);

  if (v34 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  v38 = *(_QWORD *)(v0 + 208);
  v40 = *(_QWORD **)(v0 + 192);
  v39 = *(int **)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 168);
  v44 = *(void **)(v0 + 120);
  v49 = *(_QWORD *)(v0 + 112);
  v50 = *(_QWORD *)(v0 + 216);
  objc_msgSend(v44, "setPlayActivityRecommendationData:", isa);

  *v40 = v44;
  swift_storeEnumTagMultiPayload(v40, v41, 0);
  *(_QWORD *)(v0 + 88) = v43;
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v42 + 8);
  v45 = __swift_allocate_boxed_opaque_existential_1Tm((_QWORD *)(v0 + 64));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v45, v49, v43);
  v46 = v38 + v39[7];
  *(_QWORD *)(v46 + 32) = 0;
  *(_OWORD *)v46 = 0u;
  *(_OWORD *)(v46 + 16) = 0u;
  *(_BYTE *)(v38 + v39[8]) = 0;
  *(_BYTE *)(v38 + v39[9]) = 0;
  sub_BF2EBC((uint64_t)v40, v38);
  v47 = v44;
  sub_BF2F00(v0 + 64, v46);
  *(_QWORD *)(v38 + v39[5]) = 2;
  *(_QWORD *)(v38 + v39[6]) = 0;
  sub_56024(v0 + 64, &qword_1500B80);
  sub_5C0DC((uint64_t)v40, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  sub_5C04C(v38, v50, type metadata accessor for PlaybackIntentDescriptor);
  v48 = (_QWORD *)swift_task_alloc(dword_1500814);
  *(_QWORD *)(v0 + 280) = v48;
  *v48 = v0;
  v48[1] = sub_BEFCC0;
  return PlaybackController.add(_:route:)(*(_QWORD *)(v0 + 216), 0);
}

uint64_t sub_BEFCC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 280));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_BF38F4;
  }
  else
  {
    v2 = sub_BEFD2C;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_BEFD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_5C0DC(*(_QWORD *)(v0 + 216), type metadata accessor for PlaybackIntentDescriptor);
  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BEFDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BEFE6C, 0, 0);
}

uint64_t sub_BEFE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_5C238(*(_QWORD *)(v0 + 72), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 112), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_5C04C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_BF0030, v19, v20);
  }
}

uint64_t sub_BF0030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 24, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BE9154, 0, 0);
}

uint64_t sub_BF0100(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t DynamicType;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  BOOL v26;
  _QWORD *v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  unint64_t v37;
  ValueMetadata *v38;
  _UNKNOWN **v39;
  _BYTE v40[24];

  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v16, v40, 0, 0);
  v17 = *v16;
  if (!v17)
  {
    v36 = 0;
    v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(39);
    v29._countAndFlagsBits = 0xD000000000000025;
    v29._object = (void *)0x80000000011035D0;
    String.append(_:)(v29);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(a2, a5);
    return (uint64_t)v36;
  }
  v33 = a6;
  v34 = a5;
  v38 = &type metadata for Player.InsertCommand;
  v39 = &protocol witness table for Player.InsertCommand;
  v36 = a4;
  v37 = (unint64_t)a3;
  v18 = __swift_project_boxed_opaque_existential_1(&v36, (uint64_t)&type metadata for Player.InsertCommand);
  DynamicType = swift_getDynamicType(v18, &type metadata for Player.InsertCommand, 1);
  v20 = (uint64_t)v39;
  v21 = a4;
  sub_1D81FC(a3);
  v22 = v21;
  sub_1D81FC(a3);
  v23 = v22;
  sub_1D81FC(a3);
  swift_retain(v17);
  v24 = sub_D01B94(DynamicType, v20);
  if (!v24)
  {
    __swift_destroy_boxed_opaque_existential_1(&v36);

    sub_DB514(a3);
    goto LABEL_7;
  }
  v25 = (void *)v24;
  v26 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v36);

  __swift_destroy_boxed_opaque_existential_1(&v36);
  sub_DB514(a3);
  if (!v26)
  {
LABEL_7:
    v36 = 0;
    v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v30._object = (void *)0x8000000001103600;
    v30._countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v30);
    v35 = a3;
    _print_unlocked<A, B>(_:_:)(&v35, &v36, &type metadata for Player.InsertCommand.Location, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);

    sub_DB514(a3);
    swift_release(v17);
    return (uint64_t)v36;
  }
  v27 = Player.state<A>(for:)(a2, v34, v33);
  MusicItemState.playabilityStatus.getter(v15);
  swift_release(v27);
  v28 = sub_BED058();

  swift_release(v17);
  sub_DB514(a3);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  return v28;
}

uint64_t sub_BF03B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  v9 = type metadata accessor for Notice(0);
  v8[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF0414, 0, 0);
}

uint64_t sub_BF0414()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  NSString v3;
  Class isa;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(void **)(v0 + 64);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setPlayActivityFeatureName:", v3);

  if (v1 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(*(id *)(v0 + 64), "setPlayActivityRecommendationData:", isa);

  v5 = (_QWORD *)swift_task_alloc(dword_15007DC);
  *(_QWORD *)(v0 + 136) = v5;
  *v5 = v0;
  v5[1] = sub_BF04D4;
  return PlaybackController.insert(_:location:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 112));
}

uint64_t sub_BF04D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_BF06D4;
  else
    v3 = sub_BF0538;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BF0538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  sub_5C238(*(_QWORD *)(v0 + 120), v0 + 16, &qword_14FB068);
  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 152) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 168) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
    Player.InsertCommand.Location.notice.getter(v2);
    v3 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 176) = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    return swift_task_switch(sub_BF0628, v5, v6);
  }
  else
  {
    sub_56024(v0 + 16, &qword_14FB068);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_BF0628()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[19];
  v1 = v0[20];
  v3 = v0[16];
  swift_release();
  sub_C12A88(v3, 0, v2, v1);
  sub_5C0DC(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_BF0698, 0, 0);
}

uint64_t sub_BF0698()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF06D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v14;

  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.actions);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 144);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 56) = v7;
    swift_errorRetain(v7);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v11 = (char *)String.init<A>(describing:)(v0 + 56, v10);
    *(_QWORD *)(v8 + 4) = sub_BA95EC(v11, v12, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to perform add to queue with error=%{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 144));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.InsertCommand.Location.notice.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 1) >= 3)
    v6 = 3;
  else
    v6 = (a1 + 3);
  swift_storeEnumTagMultiPayload(v5, v3, v6);
  static Notice.variant(_:)((uint64_t)v5);
  return sub_5C0DC((uint64_t)v5, type metadata accessor for Notice.Variant);
}

uint64_t sub_BF0944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[17] = v9;
  v5[18] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF09F4, 0, 0);
}

uint64_t sub_BF09F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_5C238(*(_QWORD *)(v0 + 72), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 120), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 88);
    sub_5C04C(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 152) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(_QWORD *)(v0 + 160) = v9;
    if (v8 >= 4)
    {
      return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000000011035B0, "MusicCore/Actions+Playback.swift", 32, 2, 443, 0);
    }
    else
    {
      *(_BYTE *)(v0 + 202) = 0x19041A1Bu >> (8 * v8);
      v10 = *(_QWORD *)(v0 + 112);
      v11 = *(_QWORD *)(v0 + 96);
      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
      inited = swift_initStackObject(v13, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_105B360;
      *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v11);
      *(_QWORD *)(inited + 40) = v15;
      *(_BYTE *)(inited + 48) = 0;
      *(_QWORD *)(v0 + 168) = sub_BC2B0C(inited);
      *(_QWORD *)(v0 + 176) = v16;
      *(_QWORD *)(v0 + 184) = v17;
      *(_WORD *)(v0 + 200) = v18;
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
      v19 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v20);
      v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
      return swift_task_switch(sub_BF0C40, v21, v22);
    }
  }
}

uint64_t sub_BF0C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(uint64_t **)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int8 *)(v0 + 202);
  v9 = *(unsigned __int16 *)(v0 + 200);
  swift_release();
  sub_BC2F1C(v5, v4, 5, v8, v7, v3, v2, v1, v9, v6);
  sub_79B688(v3, v2, v1, v9, SBYTE1(v9));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BF0D18, 0, 0);
}

uint64_t sub_BF0D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_5C0DC(*(_QWORD *)(v0 + 144), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Actions.Play.Context.menuItemTitle.getter()
{
  return sub_BE88C8(2036427856, 0xE400000000000000);
}

uint64_t (*Actions.Play.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13AC848, 32, 7);
  *(_QWORD *)(v0 + 16) = 2036427888;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_13AC870, 32, 7);
  *(_QWORD *)(v1 + 16) = 2036427888;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_B9FF50;
}

uint64_t sub_BF0DF8(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 2036427856, 0xE400000000000000);
}

uint64_t (*sub_BF0E08())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13ACCA0, 32, 7);
  *(_QWORD *)(v0 + 16) = 2036427888;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_13ACCC8, 32, 7);
  *(_QWORD *)(v1 + 16) = 2036427888;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_B9FF50;
}

uint64_t Actions.Queue.Context.menuItemTitle.getter()
{
  uint64_t *v0;

  return sub_BF2588(*v0);
}

uint64_t Actions.Queue.Context.menuItemSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t (*Actions.Queue.Context.menuItemImage.getter())()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  sub_BE0FB8(v0, &v6);
  sub_BE0FB8(&v6, &v7);
  if (v7)
    v1 = 0xD000000000000028;
  else
    v1 = 0xD000000000000029;
  if (v7)
    v2 = 0x80000000010CDAB0;
  else
    v2 = 0x80000000010CDAE0;
  v3 = swift_allocObject(&unk_13AC898, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_13AC8C0, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_B9FF50;
}

uint64_t (*sub_BF0F88())()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*v0)
    v1 = 0xD000000000000028;
  else
    v1 = 0xD000000000000029;
  if (*v0)
    v2 = 0x80000000010CDAB0;
  else
    v2 = 0x80000000010CDAE0;
  v3 = swift_allocObject(&unk_13ACC50, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_13ACC78, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain(v2);
  return sub_B9FF50;
}

uint64_t sub_BF104C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_109CD38);
  v5 = swift_getKeyPath(&unk_109CD60);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_BF10C8(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_109CD38);
  v5 = swift_getKeyPath(&unk_109CD60);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

double sub_BF113C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_BF132C();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_BF1190(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v17[-v8 - 8];
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v11 = result;
    v12 = dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
    __chkstk_darwin(v12);
    v13 = type metadata accessor for Song(0);
    *(&v16 - 2) = v13;
    *(&v16 - 1) = (uint64_t)&protocol witness table for Song;
    KeyPath = swift_getKeyPath(&unk_109CF00);
    __chkstk_darwin(KeyPath);
    *(&v16 - 2) = v13;
    *(&v16 - 1) = (uint64_t)&protocol witness table for Song;
    v15 = swift_getKeyPath(&unk_109CF38);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    swift_retain(v11);
    static Published.subscript.setter(v7, v11, KeyPath, v15);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    return swift_release(v11);
  }
  return result;
}

uint64_t sub_BF132C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t (**v27)(char *, char *, uint64_t, __n128);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  char *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  char *v85;
  __n128 v86;
  uint64_t (**v87)(char *, char *, uint64_t, __n128);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  void (*v100)(char *, _QWORD, uint64_t);
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t (**v112)(char *, char *, uint64_t, __n128);
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  _QWORD *v118;
  id v119[3];

  v114 = type metadata accessor for Song(0);
  v112 = *(uint64_t (***)(char *, char *, uint64_t, __n128))(v114 - 8);
  __chkstk_darwin(v114);
  v111 = (char *)&v108 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v108 - v7;
  v9 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v115 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v116 = (char *)&v108 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v108 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v108 - v18;
  v118 = v0;
  v20 = v0[2];
  swift_retain(v20);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v21);
  v22 = swift_release(v20);
  v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v117 = v19;
  v113 = v23;
  ((void (*)(char *, char *, uint64_t, __n128))v23)(v16, v19, v9, v22);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v16, v9);
  v25 = enum case for MusicPlayer.PlayabilityStatus.unplayable(_:);
  if ((_DWORD)v24 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v16, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v16, v2);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:), v2);
    v26 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)(v8, v5);
    v27 = *(uint64_t (***)(char *, char *, uint64_t, __n128))(v3 + 8);
    ((void (*)(char *, uint64_t))v27)(v5, v2);
    v28 = v10;
    v29 = v8;
    v112 = v27;
    if ((v26 & 1) != 0)
    {
      v30 = v118[3];
      KeyPath = swift_getKeyPath(&unk_109CF58);
      v32 = swift_getKeyPath(&unk_109CF80);
      swift_retain(v30);
      static Published.subscript.getter(v119, v33, KeyPath, v32);
      swift_release(v30);
      swift_release(KeyPath);
      swift_release(v32);
      v34 = v119[0];

      if (v34)
      {
        v35 = v116;
        v36 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v28 + 104))(v116, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v9);
        __chkstk_darwin(v36);
        v37 = v114;
        *(&v108 - 2) = v114;
        *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
        v38 = swift_getKeyPath(&unk_109CEA8);
        __chkstk_darwin(v38);
        *(&v108 - 2) = v37;
        *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
        v39 = swift_getKeyPath(&unk_109CEE0);
        v40 = v115;
        v113(v115, v35, v9);
        v41 = v118;
        swift_retain(v118);
        static Published.subscript.setter(v40, v41, v38, v39);
        v42 = *(void (**)(char *, uint64_t))(v28 + 8);
        v42(v35, v9);
        ((void (*)(char *, uint64_t))v112)(v8, v2);
        v43 = v117;
        return ((uint64_t (*)(char *, uint64_t))v42)(v43, v9);
      }
    }
    v65 = v116;
    v16 = v117;
    v66 = v113;
    v67 = ((uint64_t (*)(char *, char *, uint64_t))v113)(v116, v117, v9);
    __chkstk_darwin(v67);
    v109 = v2;
    v68 = v66;
    v69 = v114;
    *(&v108 - 2) = v114;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v70 = swift_getKeyPath(&unk_109CEA8);
    v111 = v29;
    v71 = v28;
    __chkstk_darwin(v70);
    *(&v108 - 2) = v69;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v72 = swift_getKeyPath(&unk_109CEE0);
    v73 = v115;
    v68(v115, v65, v9);
    v74 = v118;
    swift_retain(v118);
    static Published.subscript.setter(v73, v74, v70, v72);
    v42 = *(void (**)(char *, uint64_t))(v71 + 8);
    v42(v65, v9);
    ((void (*)(char *, uint64_t))v112)(v111, v109);
LABEL_12:
    v43 = v16;
    return ((uint64_t (*)(char *, uint64_t))v42)(v43, v9);
  }
  v44 = v24;
  v110 = v10;
  if ((_DWORD)v24 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    v75 = v113;
    v77 = v116;
    v76 = v117;
    v78 = ((uint64_t (*)(char *, char *, uint64_t))v113)(v116, v117, v9);
    __chkstk_darwin(v78);
    v79 = v114;
    *(&v108 - 2) = v114;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v80 = swift_getKeyPath(&unk_109CEA8);
    __chkstk_darwin(v80);
    *(&v108 - 2) = v79;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v81 = swift_getKeyPath(&unk_109CEE0);
    v82 = v115;
    v75(v115, v77, v9);
    v83 = v118;
    swift_retain(v118);
    static Published.subscript.setter(v82, v83, v80, v81);
    v42 = *(void (**)(char *, uint64_t))(v110 + 8);
    v42(v77, v9);
    v42(v76, v9);
    goto LABEL_12;
  }
  v109 = v2;
  v45 = v118;
  v46 = v118[3];
  v47 = swift_getKeyPath(&unk_109CF58);
  v48 = swift_getKeyPath(&unk_109CF80);
  swift_retain(v46);
  static Published.subscript.getter(v119, v49, v47, v48);
  swift_release(v46);
  swift_release(v47);
  swift_release(v48);
  v50 = v119[0];

  if (!v50)
    goto LABEL_9;
  v51 = v45[3];
  v52 = swift_getKeyPath(&unk_109CFA0);
  v53 = swift_getKeyPath(&unk_109CFC8);
  swift_retain(v51);
  static Published.subscript.getter(v119, v54, v52, v53);
  swift_release(v51);
  swift_release(v52);
  swift_release(v53);
  if (((uint64_t)v119[0] & 1) != 0
    || (v55 = v45[3],
        swift_retain(v55),
        v56 = Player.supportsDelegation.getter(),
        swift_release(v55),
        (v56 & 1) != 0))
  {
LABEL_9:
    v58 = v116;
    v57 = v117;
    v59 = v113;
    v60 = ((uint64_t (*)(char *, char *, uint64_t))v113)(v116, v117, v9);
    __chkstk_darwin(v60);
    v61 = v114;
    *(&v108 - 2) = v114;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v62 = swift_getKeyPath(&unk_109CEA8);
    __chkstk_darwin(v62);
    *(&v108 - 2) = v61;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v63 = swift_getKeyPath(&unk_109CEE0);
    v64 = v115;
    v59(v115, v58, v9);
    swift_retain(v45);
    static Published.subscript.setter(v64, v45, v62, v63);
    v42 = *(void (**)(char *, uint64_t))(v110 + 8);
    v42(v58, v9);
    v43 = v57;
  }
  else
  {
    v85 = (char *)v45 + *(_QWORD *)(*v45 + 120);
    v86 = swift_beginAccess(v85, v119, 0, 0);
    v88 = v111;
    v87 = v112;
    v89 = v114;
    v90 = v112[2](v111, v85, v114, v86);
    Song.catalogID.getter(v90);
    v92 = v91;
    ((void (*)(char *, uint64_t))v87[1])(v88, v89);
    if (v92)
    {
      v93 = swift_bridgeObjectRelease(v92);
      v94 = v110;
      v95 = v116;
      v96 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v110 + 104))(v116, v44, v9, v93);
      __chkstk_darwin(v96);
      *(&v108 - 2) = v89;
      *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
      v97 = swift_getKeyPath(&unk_109CEA8);
      __chkstk_darwin(v97);
      *(&v108 - 2) = v89;
      *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
      v98 = swift_getKeyPath(&unk_109CEE0);
      v99 = v115;
      v113(v115, v95, v9);
      swift_retain(v45);
      static Published.subscript.setter(v99, v45, v97, v98);
      v42 = *(void (**)(char *, uint64_t))(v94 + 8);
      v42(v95, v9);
    }
    else
    {
      v100 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
      v101 = v89;
      v102 = v116;
      v100(v116, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.contentUnavailable(_:), v109);
      v103 = v110;
      v104 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v110 + 104))(v102, v25, v9);
      __chkstk_darwin(v104);
      *(&v108 - 2) = v101;
      *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
      v105 = swift_getKeyPath(&unk_109CEA8);
      __chkstk_darwin(v105);
      *(&v108 - 2) = v101;
      *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
      v106 = swift_getKeyPath(&unk_109CEE0);
      v107 = v115;
      v113(v115, v102, v9);
      swift_retain(v45);
      static Published.subscript.setter(v107, v45, v105, v106);
      v42 = *(void (**)(char *, uint64_t))(v103 + 8);
      v42(v102, v9);
    }
    v43 = v117;
  }
  return ((uint64_t (*)(_QWORD, _QWORD))v42)(v43, v9);
}

uint64_t sub_BF1CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FC6E0) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v13 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v4, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v4, v8);
  v10 = (v4 + v13 + v6) & ~v6;
  v11 = v10 + v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v10, v1);
  return swift_deallocObject(v0, v11, v3 | v6 | 7);
}

unint64_t sub_BF1DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FC6E0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_BEEFF0(v0 + v4, v0 + ((v4 + *(_QWORD *)(v3 + 64) + v5) & ~v5), v1, v2);
}

uint64_t sub_BF1E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FC6E0) - 8);
  v16 = v1;
  v17 = *(unsigned __int8 *)(v2 + 80);
  v3 = (v17 + 32) & ~v17;
  v4 = *(_QWORD *)(v1 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v3 + *(_QWORD *)(v2 + 64) + v5) & ~v5;
  v7 = (*(_QWORD *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = v0 + v3;
  v10 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v6, v16);

  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v0 + v8 + 8);
  if (v12 >> 60 != 15)
    sub_50C60(*(_QWORD *)(v0 + v8), v12);
  v13 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = v13 + 8;

  return swift_deallocObject(v0, v14, v17 | v5 | 7);
}

uint64_t sub_BF1F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FC6E0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v2 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = v0 + v4;
  v11 = v0 + v6;
  v12 = *(_QWORD *)(v0 + v7);
  v13 = *(_QWORD *)(v0 + v8);
  v14 = *(_QWORD *)(v0 + v8 + 8);
  v15 = *(_QWORD *)(v0 + v9);
  v16 = *(_QWORD *)(v0 + v9 + 8);
  v17 = *(_QWORD *)(v0 + ((v9 + 23) & 0xFFFFFFFFFFFFF8));
  v18 = (_QWORD *)swift_task_alloc(dword_14FC6EC);
  *(_QWORD *)(v1 + 16) = v18;
  *v18 = v1;
  v18[1] = sub_C3150;
  return sub_BEF758(v10, v11, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_BF2078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_14FC6FC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_C3150;
  return sub_BEFDC0(v7, v8, v2, v3);
}

uint64_t sub_BF211C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v6 = *(void **)(v0 + v5);
  if ((unint64_t)v6 >= 4)

  v7 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;

  return swift_deallocObject(v0, v8, v3 | 7);
}

uint64_t sub_BF21B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_BF0100(v0[4], (uint64_t)v0 + v3, *(void **)((char *)v0 + v4), *(void **)((char *)v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8)), v1, v0[3]);
}

uint64_t sub_BF21F4()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;

  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 48);
  if (v1 >> 60 != 15)
    sub_50C60(*(_QWORD *)(v0 + 40), v1);

  v2 = *(void **)(v0 + 64);
  if ((unint64_t)v2 >= 4)

  if (*(_QWORD *)(v0 + 96))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_BF2260()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[7];
  v8 = v0[8];
  v9 = (_QWORD *)swift_task_alloc(dword_14FC71C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_C3150;
  return sub_BF03B0(v2, v3, v4, v5, v6, v7, v8, (uint64_t)(v0 + 9));
}

uint64_t sub_BF22F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + *(_QWORD *)(v2 + 64) + v6) & ~v6;
  v8 = (*(_QWORD *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v0 + v4;
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v19 = v1;
    if (*(_QWORD *)(v9 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v11 = v9 + *(int *)(v10 + 20);
    v12 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v11 + *(int *)(v12 + 24);
      v14 = type metadata accessor for URL(0);
      v17 = *(_QWORD *)(v14 - 8);
      v18 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v17 + 48))(v13, 1))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v13, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = v19;
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  v15 = *(void **)(v0 + v8);
  if ((unint64_t)v15 >= 4)

  return swift_deallocObject(v0, v8 + 8, v3 | v6 | 7);
}

uint64_t sub_BF24CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v0 + v5;
  v9 = v0 + v7;
  v10 = *(_QWORD *)(v0 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_14FC72C);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_C3150;
  return sub_BF0944(v8, v9, v10, v2, v3);
}

uint64_t sub_BF2588(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  if (a1 == 3)
  {
    v12 = 0x7466412079616C50;
    v13 = 0xEA00000000007265;
  }
  else if (a1 == 2)
  {
    v12 = 0x51206F7420646441;
    v13 = 0xEC00000065756575;
  }
  else
  {
    if (a1)
      v12 = 0x73614C2079616C50;
    else
      v12 = 0x78654E2079616C50;
    v13 = 0xE900000000000074;
  }
  String.LocalizationValue.init(stringLiteral:)(v12, v13);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v14 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v15 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v14, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v15;
}

uint64_t _s9MusicCore7ActionsO7PreviewO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000000010D7660);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

void sub_BF28C8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[16];
  uint64_t v16;
  unint64_t v17;

  v4 = *a1;
  v5 = (uint64_t)(a1 + 1);
  v6 = a1[1];
  v7 = a1[2];
  v13 = *(_OWORD *)(a1 + 5);
  v14 = *(_OWORD *)(a1 + 3);
  v12 = *(_OWORD *)(a1 + 7);
  sub_BE0FB8(a1, &v16);
  sub_BE0FB8(&v16, &v17);
  if (v17 >= 4)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000000011035B0, "MusicCore/Actions+Playback.swift", 32, 2, 218, 0);
    __break(1u);
  }
  else
  {
    v8 = 0x22232021u >> (8 * v17);
    sub_5C090(v5, (uint64_t)v15, &qword_14FC108);
    v9 = a1[4];
    v10 = a1[6];
    v11 = a1[8];
    sub_1391E0((uint64_t)v15);
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v6;
    *(_QWORD *)(a2 + 16) = v7;
    *(_OWORD *)(a2 + 24) = v14;
    *(_OWORD *)(a2 + 40) = v13;
    *(_OWORD *)(a2 + 56) = v12;
    *(_BYTE *)(a2 + 72) = v8;
    *(_QWORD *)(a2 + 80) = sub_BEEEA4;
    *(_QWORD *)(a2 + 88) = 0;
    *(_QWORD *)(a2 + 96) = 0x4014000000000000;
    *(_QWORD *)(a2 + 104) = &unk_14FC818;
    *(_QWORD *)(a2 + 112) = 0;
    *(_QWORD *)(a2 + 120) = &unk_14FC820;
    *(_QWORD *)(a2 + 128) = 0;
    swift_retain(v9);
    swift_retain(v10);
    swift_retain(v11);
  }
}

uint64_t sub_BF2A38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_BF2A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_14FC73C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_C3150;
  return sub_BEC10C(v7, v8, v2, v3);
}

ValueMetadata *type metadata accessor for Actions.Preview()
{
  return &type metadata for Actions.Preview;
}

ValueMetadata *type metadata accessor for Actions.Preview.Context()
{
  return &type metadata for Actions.Preview.Context;
}

ValueMetadata *type metadata accessor for Actions.CreateStation()
{
  return &type metadata for Actions.CreateStation;
}

ValueMetadata *type metadata accessor for Actions.CreateStation.Context()
{
  return &type metadata for Actions.CreateStation.Context;
}

ValueMetadata *type metadata accessor for Actions.Play()
{
  return &type metadata for Actions.Play;
}

ValueMetadata *type metadata accessor for Actions.Play.Context()
{
  return &type metadata for Actions.Play.Context;
}

ValueMetadata *type metadata accessor for Actions.Queue()
{
  return &type metadata for Actions.Queue;
}

uint64_t _s5QueueO7ContextVwxx(uint64_t a1)
{
  if (*(_QWORD *)a1 >= 4uLL)

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 48));
  return swift_release(*(_QWORD *)(a1 + 64));
}

uint64_t _s5QueueO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2 >= 4uLL)
    v5 = v4;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_OWORD *)(a2 + 16);
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v10;
  v8 = *(_QWORD *)(a2 + 64);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRetain(v7);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v8);
  return a1;
}

uint64_t _s5QueueO7ContextVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 >= 4uLL)
  {
    if ((unint64_t)v5 >= 4)
    {
      *(_QWORD *)a1 = v5;
      v7 = v5;

      goto LABEL_8;
    }

    v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 4)
  {
LABEL_6:
    *(_QWORD *)a1 = v5;
    goto LABEL_8;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;
LABEL_8:
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v12;
  swift_retain(v12);
  swift_release(v13);
  v15 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v14;
  swift_retain(v14);
  swift_release(v16);
  return a1;
}

__n128 __swift_memcpy72_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s5QueueO7ContextVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)a2;
  if (*(_QWORD *)a1 >= 4uLL)
  {
    if (v5 >= 4)
    {
      *(_QWORD *)a1 = v5;

      goto LABEL_6;
    }

  }
  *(_QWORD *)a1 = v5;
LABEL_6:
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(*(_QWORD *)(a1 + 32));
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(*(_QWORD *)(a1 + 48));
  v6 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v6;
  swift_release(v7);
  return a1;
}

uint64_t _s5QueueO7ContextVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5QueueO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.Queue.Context()
{
  return &type metadata for Actions.Queue.Context;
}

uint64_t sub_BF2E98()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_BF2EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_BF2F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

_QWORD *sub_BF2F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  __n128 v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  _QWORD *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  void *v134;
  id v135[4];

  v4 = v3;
  v120 = a3;
  v129 = a2;
  v130 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC858);
  v122 = *(_QWORD *)(v5 - 8);
  v123 = v5;
  __chkstk_darwin(v5);
  v121 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1501950);
  v125 = *(_QWORD *)(v7 - 8);
  v126 = v7;
  __chkstk_darwin(v7);
  v124 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15039E0);
  __chkstk_darwin(v9);
  v127 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC860);
  v128 = *(_QWORD **)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC868);
  v13 = *(_QWORD *)(v12 - 8);
  v117 = v12;
  v118 = v13;
  __chkstk_darwin(v12);
  v115 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500FD0);
  v112 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v111 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  v16 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v109 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v107 - v19;
  v108 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500FC0);
  v21 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v23 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v107 - v30;
  v4[4] = _swiftEmptyArrayStorage;
  v113 = v4 + 4;
  v32 = (char *)v4 + *(_QWORD *)(*v4 + 128);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v25 + 104))((char *)&v107 - v30, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v24, v29);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v31, v24);
  Published.init(initialValue:)(v27, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v31, v24);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v32, v23, v108);
  v33 = (char *)v4 + *(_QWORD *)(*v4 + 136);
  v34 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  v35 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v20, v34, v35);
  v36 = v110;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v20, enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:), v110);
  v37 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v38 = v16;
  v39 = v109;
  v37(v109, v20, v36);
  v40 = v111;
  Published.init(initialValue:)(v39, v36);
  v41 = *(void (**)(char *, uint64_t))(v38 + 8);
  v41(v20, v36);
  (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v33, v40, v119);
  v42 = (char *)v4 + *(_QWORD *)(*v4 + 120);
  v43 = type metadata accessor for Song(0);
  v119 = *(_QWORD *)(v43 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v42, v130, v43);
  v44 = v120;
  v45 = v129;
  v4[2] = v129;
  v4[3] = v44;
  swift_retain(v44);
  swift_retain(v45);
  v46 = sub_BF132C();
  dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter(v46);
  v133 = v43;
  v134 = &protocol witness table for Song;
  KeyPath = swift_getKeyPath(&unk_109CF00);
  v120 = v43;
  v131 = v43;
  v132 = &protocol witness table for Song;
  v48 = swift_getKeyPath(&unk_109CF38);
  v37(v39, v20, v36);
  swift_retain(v4);
  static Published.subscript.setter(v39, v4, KeyPath, v48);
  v49 = ((uint64_t (*)(char *, uint64_t))v41)(v20, v36);
  v50 = v114;
  dispatch thunk of MusicPlayer.ItemState.$playabilityStatus.getter(v49);
  v51 = sub_BF3848();
  v135[0] = (id)static OS_dispatch_queue.main.getter(v51, v52, v53, v54, v55, v56, v57, v58, v107, v108, v109, v110, v111, v112, v113);
  v59 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
  v61 = v127;
  v60(v127, 1, 1, v59);
  v62 = sub_5C150((unint64_t *)&unk_1501960, &qword_14FC860, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v63 = sub_4DD24((unint64_t *)&qword_1500F60, (uint64_t (*)(uint64_t))sub_BF3848, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v64 = v115;
  v65 = v61;
  v66 = (uint64_t)v61;
  v67 = v116;
  Publisher.receive<A>(on:options:)(v135, v65, v116, v51, v62, v63);
  sub_56024(v66, (uint64_t *)&unk_15039E0);

  ((void (*)(char *, uint64_t))v128[1])(v50, v67);
  v68 = swift_allocObject(&unk_13ACD90, 24, 7);
  v128 = v4;
  swift_weakInit(v68 + 16);
  v69 = sub_5C150(&qword_14FC870, &qword_14FC868, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v70 = v117;
  v71 = v64;
  v72 = Publisher<>.sink(receiveValue:)(sub_BF38A8, v68, v117, v69);
  v73 = swift_release(v68);
  v74 = v113;
  (*(void (**)(char *, uint64_t, __n128))(v118 + 8))(v71, v70, v73);
  swift_beginAccess(v74, v135, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
  v77 = *(_QWORD *)((char *)&dword_10 + (*v74 & 0xFFFFFFFFFFFFFF8));
  v76 = *(_QWORD *)((char *)&dword_18 + (*v74 & 0xFFFFFFFFFFFFFF8));
  if (v77 >= v76 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
  v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v72);
  specialized Array._endMutation()(v78);
  v79 = swift_endAccess(v135);
  v80 = v74;
  v81 = v121;
  v82 = v129;
  v83 = dispatch thunk of MusicPlayer.ItemState.$previewCapabilityStatus.getter(v79);
  v135[0] = (id)static OS_dispatch_queue.main.getter(v83, v84, v85, v86, v87, v88, v89, v90, v107, v108, v109, v110, v111, v112, v113);
  v91 = (uint64_t)v127;
  v60(v127, 1, 1, v59);
  v92 = sub_5C150(qword_1501970, &qword_14FC858, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v93 = v123;
  v94 = v124;
  Publisher.receive<A>(on:options:)(v135, v91, v123, v51, v92, v63);
  sub_56024(v91, (uint64_t *)&unk_15039E0);

  (*(void (**)(char *, uint64_t))(v122 + 8))(v81, v93);
  v95 = swift_allocObject(&unk_13ACD90, 24, 7);
  v96 = v128;
  swift_weakInit(v95 + 16);
  v97 = swift_allocObject(&unk_13ACDB8, 32, 7);
  *(_QWORD *)(v97 + 16) = v95;
  *(_QWORD *)(v97 + 24) = v82;
  v98 = sub_5C150(&qword_14FC878, (uint64_t *)&unk_1501950, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(v82);
  v99 = v126;
  v100 = Publisher<>.sink(receiveValue:)(sub_BF38DC, v97, v126, v98);
  v101 = swift_release(v97);
  (*(void (**)(char *, uint64_t, __n128))(v125 + 8))(v94, v99, v101);
  swift_beginAccess(v80, v135, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v102);
  v104 = *(_QWORD *)((char *)&dword_10 + (v96[4] & 0xFFFFFFFFFFFFFF8));
  v103 = *(_QWORD *)((char *)&dword_18 + (v96[4] & 0xFFFFFFFFFFFFFF8));
  if (v104 >= v103 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v103 > 1, v104 + 1, 1);
  v105 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v104, v100);
  specialized Array._endMutation()(v105);
  swift_endAccess(v135);
  (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v130, v120);
  return v128;
}

uint64_t sub_BF3810()
{
  return 16;
}

__n128 sub_BF381C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_BF3830()
{
  return 16;
}

__n128 sub_BF383C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_BF3848()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FE2D0;
  if (!qword_14FE2D0)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_14FE2D0);
  }
  return result;
}

uint64_t sub_BF3884()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_BF38A8(uint64_t a1)
{
  uint64_t v1;

  return sub_BF113C(a1, v1);
}

uint64_t sub_BF38B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_BF38DC(uint64_t a1)
{
  uint64_t v1;

  return sub_BF1190(a1, *(_QWORD *)(v1 + 16));
}

double Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  __int128 v6;
  double result;
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;

  sub_C0638C(a1, a2, a3, a4, (unint64_t (**)())v9);
  v6 = v9[1];
  *a5 = v9[0];
  a5[1] = v6;
  result = *(double *)&v10;
  v8 = v11;
  a5[2] = v10;
  a5[3] = v8;
  return result;
}

__n128 static Actions.Share.action(context:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __n128 v9;
  __int128 v10;
  __int128 v11;

  v4 = *a1;
  v5 = a1[5];
  v7 = a1[7];
  v10 = *(_OWORD *)(a1 + 1);
  v11 = *((_OWORD *)a1 + 3);
  v6 = v11;
  swift_retain(v10);
  v9 = *(__n128 *)(a1 + 3);
  swift_retain(a1[3]);
  swift_retain(v5);
  sub_1391E0((uint64_t)&v11);
  *(_QWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v10;
  result = v9;
  *(__n128 *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = v7;
  *(_BYTE *)(a2 + 64) = 42;
  *(_QWORD *)(a2 + 72) = sub_B9FFF0;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_14FC898;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_14FC8A0;
  *(_QWORD *)(a2 + 120) = 0;
  return result;
}

uint64_t Actions.Share.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t Actions.Share.Context.menuItemTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

double (*Actions.Share.Context.menuItemTitle.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t sub_BF3AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 40);
  v2 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v2;
  *(_QWORD *)(a2 + 56) = v4;
  *(_BYTE *)(a2 + 64) = 42;
  *(_QWORD *)(a2 + 72) = sub_B9FFF0;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_14FC898;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_14FC8A0;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t (*Actions.Share.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13ACE20, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  *(_QWORD *)(v0 + 24) = 0x80000000010D12D0;
  v1 = swift_allocObject(&unk_13ACE48, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000013;
  *(_QWORD *)(v1 + 24) = 0x80000000010D12D0;
  return sub_B9FA1C;
}

uint64_t (*sub_BF3BCC())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13AD638, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  *(_QWORD *)(v0 + 24) = 0x80000000010D12D0;
  v1 = swift_allocObject(&unk_13AD660, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000013;
  *(_QWORD *)(v1 + 24) = 0x80000000010D12D0;
  return sub_B9FF50;
}

uint64_t sub_BF3C50(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v5;
  v2[6] = v6;
  return swift_task_switch(sub_BF3CBC, v5, v6);
}

uint64_t sub_BF3CBC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = (_QWORD *)v0[2];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = *(int **)(v3 + 8);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_BF3D3C;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v7)(v0[3], v2, v3);
}

uint64_t sub_BF3D3C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return swift_task_switch(sub_BF3D88, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_BF3D88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t (**a6)()@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  unint64_t (*v27)();
  unint64_t (*v28)();
  uint64_t result;
  uint64_t v30;
  __int128 v31[2];

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_55D1C((uint64_t)a1, (uint64_t)v31);
  v16 = swift_allocObject(&unk_13ACE70, 64, 7);
  *(_QWORD *)(v16 + 16) = a2;
  sub_8B15C(v31, v16 + 24);
  v17 = (unint64_t (*)())swift_allocObject(&unk_13ACE98, 48, 7);
  *((_QWORD *)v17 + 2) = sub_C06634;
  *((_QWORD *)v17 + 3) = v16;
  *((_QWORD *)v17 + 4) = a3;
  *((_QWORD *)v17 + 5) = a4;
  sub_5C238(a5, (uint64_t)v15, &qword_14FAFF8);
  sub_55D1C((uint64_t)a1, (uint64_t)v31);
  v18 = *(unsigned __int8 *)(v13 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_13ACEC0, v20 + 40, v18 | 7);
  sub_B9FBE0((uint64_t)v15, v21 + v19);
  sub_8B15C(v31, v21 + v20);
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v23 + 32);
  v25 = swift_retain(v16);
  v26 = v24(v22, v23, v25);
  v28 = v27;
  sub_56024(a5, &qword_14FAFF8);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a6 = sub_C06634;
  a6[1] = (unint64_t (*)())v16;
  a6[2] = (unint64_t (*)())&unk_14FC8B0;
  a6[3] = v17;
  a6[4] = (unint64_t (*)())&unk_14FC8C0;
  a6[5] = (unint64_t (*)())v21;
  a6[6] = (unint64_t (*)())v26;
  a6[7] = v28;
  return result;
}

unint64_t sub_BF3F84(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  char v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[40];
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _QWORD v51[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for Playlist(0);
  v45 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v43 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v44 = (char *)&v42 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_109CFF0);
  v14 = swift_getKeyPath(&unk_109D018);
  static Published.subscript.getter(v51, a1, KeyPath, v14);
  swift_release(KeyPath);
  swift_release(v14);
  v15 = BYTE1(v51[0]);
  v16 = v51[3];
  v17 = v51[4];
  v18 = v51[7];
  v19 = v51[9];
  v20 = (void *)v51[10];
  v21 = v51[12];
  swift_bridgeObjectRelease(v51[14]);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v19);

  if (v15 != 1)
    return 0xD000000000000016;
  v22 = a2[3];
  v23 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  v24 = type metadata accessor for URL(0);
  LODWORD(v22) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v12, 1, v24);
  sub_56024((uint64_t)v12, &qword_14FAC20);
  sub_55D1C((uint64_t)a2, (uint64_t)v51);
  if ((_DWORD)v22 != 1)
  {
    __swift_destroy_boxed_opaque_existential_1(v51);
    return 0;
  }
  sub_55D1C((uint64_t)v51, (uint64_t)v47);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC280);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB990);
  if (swift_dynamicCast(&v48, v47, v25, v26, 6))
  {
    v27 = *((_QWORD *)&v49 + 1);
    v28 = v50;
    __swift_project_boxed_opaque_existential_1(&v48, *((uint64_t *)&v49 + 1));
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
    v30 = v29;
    __swift_destroy_boxed_opaque_existential_1(v51);
    __swift_destroy_boxed_opaque_existential_1(&v48);
    if (v30)
    {
      swift_bridgeObjectRelease(v30);
      return 0;
    }
  }
  else
  {
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    __swift_destroy_boxed_opaque_existential_1(v51);
    sub_56024((uint64_t)&v48, (uint64_t *)&unk_15017D0);
  }
  sub_55D1C((uint64_t)a2, (uint64_t)&v48);
  v32 = v46;
  v33 = swift_dynamicCast(v6, &v48, v25, v46, 6);
  v34 = v45;
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
  if ((v33 & 1) == 0)
  {
    v35(v6, 1, 1, v32);
    sub_56024((uint64_t)v6, &qword_14FE970);
    return 0xD000000000000023;
  }
  v35(v6, 0, 1, v32);
  v36 = v44;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v44, v6, v32);
  v37 = Playlist.isShareable.getter();
  v38 = v43;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v43, v36, v32);
  if ((v37 & 1) != 0)
  {
    v39 = *(void (**)(char *, uint64_t))(v34 + 8);
    v39(v38, v32);
    v39(v36, v32);
    return 0;
  }
  v40 = Playlist.canMakeShareable.getter();
  v41 = *(void (**)(char *, uint64_t))(v34 + 8);
  v41(v38, v32);
  if ((v40 & 1) != 0)
  {
    v41(v36, v32);
    return 0;
  }
  v41(v36, v32);
  return 0xD000000000000021;
}

uint64_t Playlist.isShareable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  _BYTE *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  unsigned int v36;
  uint64_t v37;
  void (*v38)(_BYTE *, uint64_t);
  unsigned int v39;
  _BYTE *v40;
  void (*v41)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v42;
  _BYTE *v43;
  _QWORD *v45;
  _BYTE *v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  void (*v60)(_BYTE *, uint64_t);
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(_BYTE *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[4];
  int v72;
  _QWORD *v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  void (*v75)(_BYTE *, _QWORD, uint64_t);
  void (*v76)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  _BYTE *v87;
  void (*v88)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v89;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD **)(v2 - 8);
  __chkstk_darwin(v2);
  v78 = &v71[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB760);
  __chkstk_darwin(v86);
  v82 = &v71[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v71[-v7];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB600);
  __chkstk_darwin(v9);
  v84 = &v71[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v85 = &v71[-v12];
  __chkstk_darwin(v13);
  v83 = &v71[-v14];
  __chkstk_darwin(v15);
  v80 = &v71[-v16];
  __chkstk_darwin(v17);
  v19 = &v71[-v18];
  __chkstk_darwin(v20);
  v22 = &v71[-v21];
  v23 = type metadata accessor for Playlist(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v87 = &v71[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  v89 = &v71[-v27];
  v29 = __chkstk_darwin(v28);
  v31 = &v71[-v30];
  v32 = Playlist.isPublic.getter(v29);
  v88 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 16);
  v33 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v88)(v31, v1, v23);
  if ((v32 & 1) != 0)
  {
    v38 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
    v38(v31, v23);
    goto LABEL_6;
  }
  v77 = v24;
  v79 = v23;
  v81 = v1;
  Playlist.variant.getter(v33);
  v75 = (void (*)(_BYTE *, _QWORD, uint64_t))v3[13];
  v75(v19, enum case for Playlist.Variant.subscribed(_:), v2);
  v76 = (void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v3[7];
  v76(v19, 0, 1, v2);
  v34 = (uint64_t)&v8[*(int *)(v86 + 48)];
  sub_5C238((uint64_t)v22, (uint64_t)v8, &qword_14FB600);
  sub_5C238((uint64_t)v19, v34, &qword_14FB600);
  v35 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v3[6];
  v36 = v35((uint64_t)v8, 1, v2);
  v37 = (uint64_t)v8;
  v73 = v3;
  if (v36 == 1)
  {
    sub_56024((uint64_t)v19, &qword_14FB600);
    sub_56024((uint64_t)v22, &qword_14FB600);
    v38 = *(void (**)(_BYTE *, uint64_t))(v77 + 8);
    v38(v31, v79);
    v39 = v35(v34, 1, v2);
    v40 = v85;
    if (v39 == 1)
    {
      sub_56024(v37, &qword_14FB600);
      v1 = v81;
      v23 = v79;
LABEL_6:
      v41 = v88;
      v42 = v89;
      v88(v89, v1, v23);
LABEL_7:
      v38(v42, v23);
LABEL_8:
      v43 = v87;
      v41(v87, v1, v23);
LABEL_9:
      v38(v43, v23);
      return 1;
    }
    v74 = v35;
    v50 = v81;
    v41 = v88;
    v42 = v89;
    v51 = (uint64_t)v83;
    v49 = v79;
    goto LABEL_15;
  }
  v45 = v3;
  v46 = v80;
  sub_5C238((uint64_t)v8, (uint64_t)v80, &qword_14FB600);
  v47 = v35(v34, 1, v2);
  v48 = v77;
  v74 = v35;
  if (v47 == 1)
  {
    sub_56024((uint64_t)v19, &qword_14FB600);
    sub_56024((uint64_t)v22, &qword_14FB600);
    v38 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
    v49 = v79;
    v38(v31, v79);
    ((void (*)(_BYTE *, uint64_t))v45[1])(v46, v2);
    v50 = v81;
    v41 = v88;
    v42 = v89;
    v51 = (uint64_t)v83;
    v40 = v85;
LABEL_15:
    sub_56024(v37, &qword_14FB760);
    v52 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v41)(v42, v50, v49);
    v23 = v49;
    goto LABEL_16;
  }
  v57 = v46;
  v58 = v78;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v45[4])(v78, v34, v2);
  v59 = sub_4DD24((unint64_t *)&qword_14FE2A0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  v72 = dispatch thunk of static Equatable.== infix(_:_:)(v57, v58, v2, v59);
  v60 = (void (*)(_BYTE *, uint64_t))v45[1];
  v60(v58, v2);
  sub_56024((uint64_t)v19, &qword_14FB600);
  sub_56024((uint64_t)v22, &qword_14FB600);
  v38 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
  v61 = v31;
  v62 = v79;
  v38(v61, v79);
  v60(v57, v2);
  v63 = v37;
  v23 = v62;
  sub_56024(v63, &qword_14FB600);
  v41 = v88;
  v42 = v89;
  v1 = v81;
  v52 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v88)(v89, v81, v62);
  v51 = (uint64_t)v83;
  v40 = v85;
  if ((v72 & 1) != 0)
    goto LABEL_7;
LABEL_16:
  Playlist.variant.getter(v52);
  v75(v40, enum case for Playlist.Variant.admin(_:), v2);
  v76(v40, 0, 1, v2);
  v53 = v82;
  v54 = (uint64_t)&v82[*(int *)(v86 + 48)];
  sub_5C238(v51, (uint64_t)v82, &qword_14FB600);
  sub_5C238((uint64_t)v40, v54, &qword_14FB600);
  v55 = v74;
  if (v74((uint64_t)v53, 1, v2) == 1)
  {
    sub_56024((uint64_t)v40, &qword_14FB600);
    sub_56024(v51, &qword_14FB600);
    v38(v42, v23);
    if (v55(v54, 1, v2) == 1)
    {
      sub_56024((uint64_t)v53, &qword_14FB600);
      v1 = v81;
      goto LABEL_8;
    }
    goto LABEL_21;
  }
  sub_5C238((uint64_t)v53, (uint64_t)v84, &qword_14FB600);
  if (v55(v54, 1, v2) == 1)
  {
    sub_56024((uint64_t)v40, &qword_14FB600);
    sub_56024(v51, &qword_14FB600);
    v38(v42, v23);
    ((void (*)(_BYTE *, uint64_t))v73[1])(v84, v2);
LABEL_21:
    sub_56024((uint64_t)v53, &qword_14FB760);
    v43 = v87;
    v56 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v41)(v87, v81, v23);
    goto LABEL_25;
  }
  v64 = v73;
  v65 = v78;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v73[4])(v78, v54, v2);
  v66 = sub_4DD24((unint64_t *)&qword_14FE2A0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  LODWORD(v88) = dispatch thunk of static Equatable.== infix(_:_:)(v84, v65, v2, v66);
  v67 = v51;
  v68 = (void (*)(_BYTE *, uint64_t))v64[1];
  v68(v65, v2);
  sub_56024((uint64_t)v85, &qword_14FB600);
  sub_56024(v67, &qword_14FB600);
  v38(v89, v23);
  v68(v84, v2);
  sub_56024((uint64_t)v53, &qword_14FB600);
  v43 = v87;
  v56 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v41)(v87, v81, v23);
  if ((v88 & 1) != 0)
    goto LABEL_9;
LABEL_25:
  Playlist.catalogID.getter(v56);
  v70 = v69;
  v38(v43, v23);
  if (!v70)
    return 0;
  swift_bridgeObjectRelease(v70);
  return 1;
}

uint64_t Playlist.canMakeShareable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  void (*v43)(char *, uint64_t);
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;

  v65 = type metadata accessor for Playlist.Variant(0);
  v63 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v59 = (char *)&v59 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB760);
  __chkstk_darwin(v62);
  v64 = (uint64_t)&v59 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB600);
  __chkstk_darwin(v2);
  v60 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v69 = (char *)&v59 - v5;
  __chkstk_darwin(v6);
  v70 = (char *)&v59 - v7;
  v8 = type metadata accessor for Playlist.EditableComponents(0);
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  __chkstk_darwin(v8);
  v61 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FED50);
  __chkstk_darwin(v10);
  v66 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v71 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v59 - v16;
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v18 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_109CFF0);
  v20 = swift_getKeyPath(&unk_109D018);
  static Published.subscript.getter(&v73, v18, KeyPath, v20);
  swift_release(KeyPath);
  swift_release(v20);
  v21 = v74;
  v22 = v75;
  v23 = v76;
  v24 = v77;
  v26 = v78;
  v25 = v79;
  v27 = v80;
  swift_bridgeObjectRelease(v81);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v26);

  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v29 = v28(v17, v72, v12);
  v30 = v12;
  v31 = v17;
  if ((v21 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
LABEL_15:
    v44 = 0;
    return v44 & 1;
  }
  v72 = v13;
  v32 = (uint64_t)v66;
  Playlist.editableComponents.getter(v29);
  v34 = v67;
  v33 = v68;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v32, 1, v68) == 1)
  {
    sub_56024(v32, (uint64_t *)&unk_14FED50);
    v35 = v71;
    v36 = v28(v71, (uint64_t)v31, v30);
    v38 = (uint64_t)v69;
    v37 = (uint64_t)v70;
    goto LABEL_9;
  }
  v39 = v61;
  static Playlist.EditableComponents.tracklist.getter();
  v40 = sub_4DD24((unint64_t *)&qword_14FB5F8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
  v41 = dispatch thunk of SetAlgebra.isSuperset(of:)(v39, v33, v40);
  v42 = *(void (**)(char *, uint64_t))(v34 + 8);
  v42(v39, v33);
  v42((char *)v32, v33);
  v35 = v71;
  v36 = v28(v71, (uint64_t)v31, v30);
  v38 = (uint64_t)v69;
  v37 = (uint64_t)v70;
  if ((v41 & 1) == 0)
  {
LABEL_9:
    v70 = v31;
    Playlist.variant.getter(v36);
    v45 = v63;
    v46 = v65;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v63 + 104))(v38, enum case for Playlist.Variant.favoriteSongs(_:), v65);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v38, 0, 1, v46);
    v47 = v64;
    v48 = v64 + *(int *)(v62 + 48);
    sub_5C238(v37, v64, &qword_14FB600);
    sub_5C238(v38, v48, &qword_14FB600);
    v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
    if (v49(v47, 1, v46) == 1)
    {
      sub_56024(v38, &qword_14FB600);
      sub_56024(v37, &qword_14FB600);
      v50 = *(void (**)(char *, uint64_t))(v72 + 8);
      v50(v35, v30);
      v50(v70, v30);
      if (v49(v48, 1, v46) == 1)
      {
        sub_56024(v47, &qword_14FB600);
        v44 = 1;
        return v44 & 1;
      }
    }
    else
    {
      v51 = v60;
      sub_5C238(v47, v60, &qword_14FB600);
      if (v49(v48, 1, v46) != 1)
      {
        v54 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v59, v48, v46);
        v55 = sub_4DD24((unint64_t *)&qword_14FE2A0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        v56 = v51;
        v44 = dispatch thunk of static Equatable.== infix(_:_:)(v51, v54, v46, v55);
        v57 = *(void (**)(char *, uint64_t))(v45 + 8);
        v57(v54, v46);
        sub_56024(v38, &qword_14FB600);
        sub_56024(v37, &qword_14FB600);
        v58 = *(void (**)(char *, uint64_t))(v72 + 8);
        v58(v71, v30);
        v58(v70, v30);
        v57((char *)v56, v46);
        sub_56024(v47, &qword_14FB600);
        return v44 & 1;
      }
      sub_56024(v38, &qword_14FB600);
      sub_56024(v37, &qword_14FB600);
      v52 = *(void (**)(char *, uint64_t))(v72 + 8);
      v52(v71, v30);
      v52(v70, v30);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v51, v46);
    }
    sub_56024(v47, &qword_14FB760);
    goto LABEL_15;
  }
  v43 = *(void (**)(char *, uint64_t))(v72 + 8);
  v43(v35, v30);
  v43(v31, v30);
  v44 = 1;
  return v44 & 1;
}

uint64_t sub_BF5234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[7] = v7;
  v4[8] = v8;
  return swift_task_switch(sub_BF52A4, v7, v8);
}

uint64_t sub_BF52A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t (*v12)(void);

  v1 = (*(uint64_t (**)(void))(v0 + 16))();
  if (v2 == 1)
  {
    v3 = *(int **)(v0 + 32);
    v12 = (uint64_t (*)(void))((char *)v3 + *v3);
    v4 = (_QWORD *)swift_task_alloc(v3[1]);
    *(_QWORD *)(v0 + 72) = v4;
    *v4 = v0;
    v4[1] = sub_BF5364;
    v5 = v12;
  }
  else
  {
    v6 = v1;
    v7 = v2;
    swift_release();
    v8 = sub_BBE8FC();
    v9 = swift_allocError(&type metadata for ActionError, v8, 0, 0);
    *v10 = v6;
    v10[1] = v7;
    swift_willThrow(v9);
    v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

uint64_t sub_BF5364()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_BF53F8;
  else
    v4 = sub_BF53C4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_BF53C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF53F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF542C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF54D4, 0, 0);
}

uint64_t sub_BF54D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_5C238(*(_QWORD *)(v0 + 72), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 96), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD **)(v0 + 80);
    sub_2DE5F8(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v9 = v8[3];
    __swift_project_boxed_opaque_existential_1(v8, v9);
    *(_QWORD *)(v0 + 128) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 136) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    v14 = v8[3];
    __swift_project_boxed_opaque_existential_1(v8, v14);
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v14);
    *(_QWORD *)(inited + 40) = v15;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 144) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 152) = v16;
    *(_QWORD *)(v0 + 160) = v17;
    *(_WORD *)(v0 + 176) = v18;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v19 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v20);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
    return swift_task_switch(sub_BF56B8, v21, v22);
  }
}

uint64_t sub_BF56B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t **)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 35, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_C06F20, 0, 0);
}

double static Actions.ShareLyrics.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 43;
  *(_QWORD *)(a2 + 56) = sub_B9FFF0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_14FC8C8;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_14FC8D0;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;

  v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (*(_QWORD *)(v14 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_13ACEE8, v17 + 40, v15 | 7);
  sub_B9FBE0(a6, v18 + v16);
  result = sub_8B15C(a1, v18 + v17);
  *a7 = a2;
  a7[1] = a3;
  a7[2] = a4;
  a7[3] = a5;
  a7[4] = &unk_14FC8E0;
  a7[5] = v18;
  return result;
}

uint64_t sub_BF58DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF5984, 0, 0);
}

uint64_t sub_BF5984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_5C238(*(_QWORD *)(v0 + 72), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 96), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD **)(v0 + 80);
    sub_2DE5F8(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v9 = v8[3];
    __swift_project_boxed_opaque_existential_1(v8, v9);
    *(_QWORD *)(v0 + 128) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 136) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    v14 = v8[3];
    __swift_project_boxed_opaque_existential_1(v8, v14);
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v14);
    *(_QWORD *)(inited + 40) = v15;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 144) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 152) = v16;
    *(_QWORD *)(v0 + 160) = v17;
    *(_WORD *)(v0 + 176) = v18;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v19 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v20);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
    return swift_task_switch(sub_BF5B68, v21, v22);
  }
}

uint64_t sub_BF5B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t **)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 37, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BAAA80, 0, 0);
}

uint64_t Actions.ShareLyrics.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x794C206572616853, 0xAFA680E273636972);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.ShareLyrics.Context.menuItemImage.getter())()
{
  return sub_BCC330;
}

id sub_BF5DC8()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v0);

  return v1;
}

uint64_t ShareableMusicItem.actionTitle.getter(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0xA680E26572616853, 0xA800000000000000);
}

uint64_t sub_BF5E48()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000001103750);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t ShareableMusicItem.failureMessage.getter(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0xD00000000000001ALL, 0x8000000001103750);
}

uint64_t ShareableMusicItem.shareURL.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_BF5FEC, 0, 0);
}

uint64_t sub_BF5FEC()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 32) + 16))(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF6024(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF6080, 0, 0);
}

uint64_t sub_BF6080()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  NSURL *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = **(void ***)(v0 + 16);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v1, 1, 1, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v7 = 0;
  if (v5 != 1)
  {
    v8 = *(_QWORD *)(v0 + 24);
    URL._bridgeToObjectiveC()(v6);
    v7 = v9;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
  }
  v10 = *(_QWORD *)(v0 + 24);
  objc_msgSend(v2, "setOriginalURL:", v7);

  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF614C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF61A8, 0, 0);
}

uint64_t sub_BF61A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  Curator.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF6268(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF62C4, 0, 0);
}

uint64_t sub_BF62C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  EditorialItem.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF6384(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF63E0, 0, 0);
}

uint64_t sub_BF63E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  Genre.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF64A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF64FC, 0, 0);
}

uint64_t sub_BF64FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  RadioShow.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF65BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF6618, 0, 0);
}

uint64_t sub_BF6618()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  RecordLabel.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF66D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF6734, 0, 0);
}

uint64_t sub_BF6734()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  SocialProfile.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ShareableMusicItem.augmentMetadata(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF6854, 0, 0);
}

uint64_t sub_BF6854()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 56) = **(_QWORD **)(v0 + 16);
  v2 = *(int **)(v1 + 24);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_BF68C4;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v5)(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_BF68C4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  return swift_task_switch(sub_BF6918, 0, 0);
}

uint64_t sub_BF6918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSURL *v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v4);
    v5 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    v1 = *(_QWORD *)(v0 + 48);
  }
  objc_msgSend(*(id *)(v0 + 56), "setOriginalURL:", v5);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Album.actionTitle.getter()
{
  return sub_BE88C8(0x6C41206572616853, 0xAE00A680E26D7562);
}

uint64_t Album.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001BLL, 0x8000000001103770);
}

uint64_t Album.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC378);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC900);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC908);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF6B00, 0, 0);
}

uint64_t sub_BF6B00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 128);
  Album.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_56024(*(_QWORD *)(v1 + 128), &qword_14FAC20);
    v6 = Album.catalogID.getter(v5);
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_109D038);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for Album(0);
      *(_QWORD *)(v1 + 168) = v11;
      v12 = sub_4DD24(&qword_14FB188, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for Album, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 176) = v13;
      *v13 = v1;
      v13[1] = sub_BF6CD8;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v15 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v15, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v3);
  }
  v16 = *(_QWORD *)(v1 + 120);
  v17 = *(_QWORD *)(v1 + 96);
  v19 = *(_QWORD *)(v1 + 64);
  v18 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_BF6CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BF6EBC;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BF6D44;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BF6D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_BE3E60(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_56024(v13, &qword_14FB108);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    Album.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF6EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for album catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Album.augmentMetadata(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for MusicOffer.Kind(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicOffer(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC378);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FB108) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[16] = swift_task_alloc(v10);
  v2[17] = swift_task_alloc(v10);
  v2[18] = swift_task_alloc(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC900);
  v2[19] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[20] = v12;
  v2[21] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC908);
  v2[22] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[23] = v14;
  v2[24] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF7300, 0, 0);
}

uint64_t sub_BF7300(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = Album.catalogID.getter(a1);
  *(_QWORD *)(v1 + 200) = v2;
  *(_QWORD *)(v1 + 208) = v3;
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    v6 = objc_msgSend(**(id **)(v1 + 32), "specialization");
    *(_QWORD *)(v1 + 216) = v6;
    if (v6)
    {
      v7 = v6;
      objc_opt_self(LPiTunesMediaAlbumMetadata);
      v8 = swift_dynamicCastObjCClass(v7);
      *(_QWORD *)(v1 + 224) = v8;
      if (v8)
      {
        v9 = *(_QWORD *)(v1 + 176);
        KeyPath = swift_getKeyPath(&unk_109D038);
        *(_QWORD *)(v1 + 16) = v4;
        *(_QWORD *)(v1 + 24) = v5;
        v11 = type metadata accessor for Album(0);
        *(_QWORD *)(v1 + 232) = v11;
        v12 = sub_4DD24(&qword_14FB188, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
        swift_bridgeObjectRetain();
        MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for Album, v12);
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
        v14 = swift_allocObject(v13, 40, 7);
        *(_OWORD *)(v14 + 16) = xmmword_1060220;
        __swift_instantiateConcreteTypeFromMangledName(&qword_14FB180);
        v15 = static PartialMusicProperty<A>.offers.getter();
        *(_QWORD *)(v14 + 32) = v15;
        specialized Array._endMutation()(v15);
        MusicCatalogResourceRequest.properties.setter(v14, v9);
        v16 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
        *(_QWORD *)(v1 + 240) = v16;
        *v16 = v1;
        v16[1] = sub_BF7544;
        return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
      }
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v18 = *(_QWORD *)(v1 + 168);
  v20 = *(_QWORD *)(v1 + 136);
  v19 = *(_QWORD *)(v1 + 144);
  v22 = *(_QWORD *)(v1 + 120);
  v21 = *(_QWORD *)(v1 + 128);
  v24 = *(_QWORD *)(v1 + 88);
  v23 = *(_QWORD *)(v1 + 96);
  v25 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 192));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_BF7544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BF79D8;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BF75B0;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BF75B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSURL *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  Class isa;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(void ***)(v0 + 32);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 152));
  sub_BE3E60(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v8 = *v7;
  sub_5C238(v2, v3, &qword_14FB108);
  v9 = *(_QWORD *)(v1 - 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v3, 1, v1);
  if ((_DWORD)v11 == 1)
  {
    v12 = *(_QWORD *)(v0 + 96);
    sub_56024(*(_QWORD *)(v0 + 136), &qword_14FB108);
    v13 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = 0;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 232);
    v16 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 96);
    Album.url.getter(v11);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v15);
    v18 = type metadata accessor for URL(0);
    v19 = *(_QWORD *)(v18 - 8);
    v14 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      v21 = *(_QWORD *)(v0 + 96);
      URL._bridgeToObjectiveC()(v20);
      v14 = v22;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v18);
    }
  }
  v23 = *(_QWORD *)(v0 + 232);
  v24 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 128);
  objc_msgSend(v8, "setOriginalURL:", v14);

  sub_5C238(v24, v25, &qword_14FB108);
  if (v10(v25, 1, v23) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 128), &qword_14FB108);
    isa = 0;
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 128);
    isa = (Class)Album.offers.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v29, v28);
    if (isa)
    {
      v30 = *((_QWORD *)isa + 2);
      if (v30)
      {
        v31 = *(_QWORD *)(v0 + 80);
        v64 = *(_QWORD *)(v0 + 56);
        sub_C058BC(0, v30, 0);
        v32 = (char *)isa
            + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
        v63 = *(_QWORD *)(v31 + 72);
        v65 = v31;
        v62 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 16);
        do
        {
          v33 = *(_QWORD *)(v0 + 88);
          v35 = *(_QWORD *)(v0 + 64);
          v34 = *(_QWORD *)(v0 + 72);
          v36 = *(_QWORD *)(v0 + 48);
          v37 = v62(v33, v32, v34);
          v38 = MusicOffer.kind.getter(v37);
          v39 = MusicOffer.Kind.rawValue.getter(v38);
          v41 = v40;
          (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v35, v36);
          (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v33, v34);
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            sub_C058BC(0, _swiftEmptyArrayStorage[2] + 1, 1);
          v43 = _swiftEmptyArrayStorage[2];
          v42 = _swiftEmptyArrayStorage[3];
          if (v43 >= v42 >> 1)
            sub_C058BC((char *)(v42 > 1), v43 + 1, 1);
          _swiftEmptyArrayStorage[2] = v43 + 1;
          v44 = &_swiftEmptyArrayStorage[2 * v43];
          v44[4] = v39;
          v44[5] = v41;
          v32 += v63;
          --v30;
        }
        while (v30);
      }
      swift_bridgeObjectRelease();
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v26 = swift_bridgeObjectRelease().n128_u64[0];
    }
  }
  v45 = *(void **)(v0 + 216);
  v47 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 192);
  v49 = *(_QWORD *)(v0 + 168);
  v48 = *(_QWORD *)(v0 + 176);
  v50 = *(_QWORD *)(v0 + 152);
  v51 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 144);
  objc_msgSend(*(id *)(v0 + 224), "setOffers:", isa, v26);

  sub_56024(v52, &qword_14FB108);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
  v53 = *(_QWORD *)(v0 + 168);
  v55 = *(_QWORD *)(v0 + 136);
  v54 = *(_QWORD *)(v0 + 144);
  v57 = *(_QWORD *)(v0 + 120);
  v56 = *(_QWORD *)(v0 + 128);
  v59 = *(_QWORD *)(v0 + 88);
  v58 = *(_QWORD *)(v0 + 96);
  v60 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF79D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 248);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 208);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v30 = *(void **)(v0 + 216);
    v31 = *(_QWORD *)(v0 + 184);
    v32 = *(_QWORD *)(v0 + 176);
    v33 = *(_QWORD *)(v0 + 192);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v34 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for album catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v32);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 192);
    v20 = *(_QWORD *)(v0 + 176);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v21 = *(_QWORD *)(v0 + 168);
  v23 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 88);
  v26 = *(_QWORD *)(v0 + 96);
  v28 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF7CCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FC8FC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return Album.shareURL.getter(a1);
}

uint64_t sub_BF7D1C(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x6C41206572616853, 0xAE00A680E26D7562);
}

uint64_t sub_BF7D40()
{
  return Album.failureMessage.getter();
}

uint64_t sub_BF7D54(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FC914);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return Album.augmentMetadata(_:)(a1);
}

uint64_t Artist.actionTitle.getter()
{
  return sub_BE88C8(0x7241206572616853, 0xAFA680E274736974);
}

uint64_t Artist.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001CLL, 0x8000000001103790);
}

uint64_t Artist.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC630);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC920);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC928);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC930);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF7EE8, 0, 0);
}

uint64_t sub_BF7EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 128);
  Artist.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_56024(*(_QWORD *)(v0 + 128), &qword_14FAC20);
    v5 = Artist.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_109D060);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for Artist(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_4DD24(&qword_14FC938, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, &protocol witness table for Artist, v11);
      v12 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v12;
      *v12 = v0;
      v12[1] = sub_BF80C0;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v14, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
  }
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 64);
  v17 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF80C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BF82A4;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BF812C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BF812C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_BE3E7C(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_56024(v12, &qword_14FC920);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    Artist.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF82A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for artist catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF857C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FC91C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return Artist.shareURL.getter(a1);
}

uint64_t sub_BF85CC(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x7241206572616853, 0xAFA680E274736974);
}

uint64_t sub_BF85F0()
{
  return Artist.failureMessage.getter();
}

uint64_t sub_BF8604(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF8660, 0, 0);
}

uint64_t sub_BF8660()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FC91C);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_BF86B8;
  return Artist.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t sub_BF86B8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  return swift_task_switch(sub_C06F1C, 0, 0);
}

uint64_t Composer.actionTitle.getter()
{
  return sub_BE88C8(0x1000000000000011, 0x80000000010DD6F0);
}

uint64_t Composer.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001ELL, 0x80000000011037B0);
}

uint64_t sub_BF8748(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_BF8760, 0, 0);
}

uint64_t sub_BF8760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF87B0()
{
  return Composer.actionTitle.getter();
}

uint64_t sub_BF87C4()
{
  return Composer.failureMessage.getter();
}

uint64_t sub_BF87D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_14FCD20 + dword_14FCD20);
  v3 = (_QWORD *)swift_task_alloc(unk_14FCD24);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return v5(a1);
}

uint64_t Curator.actionTitle.getter()
{
  return sub_BE88C8(0x1000000000000010, 0x80000000010DD710);
}

uint64_t Curator.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001DLL, 0x80000000011037D0);
}

uint64_t sub_BF8878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_BF8890, 0, 0);
}

uint64_t sub_BF8890()
{
  uint64_t v0;

  Curator.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF88C0()
{
  return Curator.actionTitle.getter();
}

uint64_t sub_BF88D4()
{
  return Curator.failureMessage.getter();
}

uint64_t sub_BF88E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_14FCD18 + dword_14FCD18);
  v3 = (_QWORD *)swift_task_alloc(unk_14FCD1C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return v5(a1);
}

uint64_t EditorialItem.actionTitle.getter()
{
  return sub_BE88C8(0xA680E26572616853, 0xA800000000000000);
}

uint64_t sub_BF8968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_BF8980, 0, 0);
}

uint64_t sub_BF8980()
{
  uint64_t v0;

  EditorialItem.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF89B0()
{
  return sub_BF5E48();
}

uint64_t sub_BF89C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_14FCD10 + dword_14FCD10);
  v3 = (_QWORD *)swift_task_alloc(unk_14FCD14);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return v5(a1);
}

uint64_t Genre.actionTitle.getter()
{
  return sub_BE88C8(0x6547206572616853, 0xAE00A680E265726ELL);
}

uint64_t Genre.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001BLL, 0x80000000011037F0);
}

uint64_t sub_BF8A6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_BF8A84, 0, 0);
}

uint64_t sub_BF8A84()
{
  uint64_t v0;

  Genre.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF8AB4(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x6547206572616853, 0xAE00A680E265726ELL);
}

uint64_t sub_BF8AD8()
{
  return Genre.failureMessage.getter();
}

uint64_t sub_BF8AEC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_14FCD08 + dword_14FCD08);
  v3 = (_QWORD *)swift_task_alloc(unk_14FCD0C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return v5(a1);
}

uint64_t MusicMovie.actionTitle.getter()
{
  return sub_BE88C8(0x6F4D206572616853, 0xAE00A680E2656976);
}

uint64_t MusicMovie.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001BLL, 0x8000000001103810);
}

uint64_t MusicMovie.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC620);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC948);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC950);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC958);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF8C94, 0, 0);
}

uint64_t sub_BF8C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  MusicMovie.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_56024(*(_QWORD *)(v0 + 128), &qword_14FAC20);
    v5 = MusicMovie.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_109D088);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for MusicMovie(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_4DD24(&qword_14FC960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
      v12 = sub_4DD24(&qword_14FC968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_BF8E94;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF8E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BF9078;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BF8F00;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BF8F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_BE3FA8(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_56024(v12, &qword_14FC948);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    MusicMovie.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF9078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for music movie catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF9350(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FC944);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return MusicMovie.shareURL.getter(a1);
}

uint64_t sub_BF93A0(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x6F4D206572616853, 0xAE00A680E2656976);
}

uint64_t sub_BF93C4()
{
  return MusicMovie.failureMessage.getter();
}

uint64_t sub_BF93D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF9434, 0, 0);
}

uint64_t sub_BF9434()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FC944);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_BF86B8;
  return MusicMovie.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t MusicVideo.actionTitle.getter()
{
  return sub_BE88C8(0x6956206572616853, 0xAE00A680E26F6564);
}

uint64_t MusicVideo.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001BLL, 0x8000000001103830);
}

uint64_t MusicVideo.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC610);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB150);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC978);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC980);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF95D4, 0, 0);
}

uint64_t sub_BF95D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 128);
  MusicVideo.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_56024(*(_QWORD *)(v0 + 128), &qword_14FAC20);
    v5 = MusicVideo.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_109D0B0);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for MusicVideo(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_4DD24(&qword_14FC988, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, &protocol witness table for MusicVideo, v11);
      v12 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v12;
      *v12 = v0;
      v12[1] = sub_BF97AC;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v14, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
  }
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 64);
  v17 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF97AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BF9990;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BF9818;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BF9818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_BE3FC4(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_56024(v12, &qword_14FB150);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    MusicVideo.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF9990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for music video catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BF9C64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicVideoFilter.id.getter, a2);
}

uint64_t sub_BF9C74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FC974);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return MusicVideo.shareURL.getter(a1);
}

uint64_t sub_BF9CC4(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x6956206572616853, 0xAE00A680E26F6564);
}

uint64_t sub_BF9CE8()
{
  return MusicVideo.failureMessage.getter();
}

uint64_t sub_BF9CFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF9D58, 0, 0);
}

uint64_t sub_BF9D58()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FC974);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_BF86B8;
  return MusicVideo.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t Playlist.actionTitle.getter()
{
  return sub_BE88C8(0x1000000000000011, 0x80000000010DD750);
}

uint64_t Playlist.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001ELL, 0x8000000001103850);
}

uint64_t Playlist.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC600);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FE970) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[9] = swift_task_alloc(v5);
  v2[10] = swift_task_alloc(v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC998);
  v2[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[12] = v7;
  v2[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC9A0);
  v2[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[15] = v9;
  v2[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BF9F00, 0, 0);
}

uint64_t sub_BF9F00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  char v17;
  BOOL v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(v1 + 136);
  Playlist.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 144) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 152) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_56024(*(_QWORD *)(v1 + 136), &qword_14FAC20);
    v6 = Playlist.catalogID.getter(v5);
    *(_QWORD *)(v1 + 160) = v6;
    *(_QWORD *)(v1 + 168) = v7;
    if (v7)
    {
      v9 = v6;
      v10 = v7;
      KeyPath = swift_getKeyPath(&unk_109D0D8);
      *(_QWORD *)(v1 + 16) = v9;
      *(_QWORD *)(v1 + 24) = v10;
      v12 = type metadata accessor for Playlist(0);
      *(_QWORD *)(v1 + 176) = v12;
      v13 = sub_4DD24(&qword_14FC9B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v12, &protocol witness table for Playlist, v13);
      v14 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 184) = v14;
      *v14 = v1;
      v14[1] = sub_BFA15C;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
    }
    v17 = Playlist.isPublic.getter(v8);
    v18 = v17 != 2 && (v17 & 1) == 0;
    if (v18 && (Playlist.isShareable.getter() & 1) == 0 && (Playlist.canMakeShareable.getter() & 1) != 0)
    {
      v19 = (_QWORD *)swift_task_alloc(dword_14FC9AC);
      *(_QWORD *)(v1 + 200) = v19;
      *v19 = v1;
      v19[1] = sub_BFA34C;
      return Playlist.publish()(*(_QWORD *)(v1 + 72));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v16, *(_QWORD *)(v1 + 136), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v16, 0, 1, v3);
  }
  v20 = *(_QWORD *)(v1 + 128);
  v21 = *(_QWORD *)(v1 + 104);
  v23 = *(_QWORD *)(v1 + 72);
  v22 = *(_QWORD *)(v1 + 80);
  v24 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 136));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_BFA15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BFA490;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BFA1C8;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BFA1C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 88));
  sub_BE3FE0(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 120);
    v10 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_56024(v13, &qword_14FE970);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 120);
    v16 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 80);
    Playlist.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 128);
  v24 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 72);
  v25 = *(_QWORD *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFA34C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  return swift_task_switch(sub_BFA3A0, 0, 0);
}

uint64_t sub_BFA3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  if ((_DWORD)v4 == 1)
  {
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 32);
    sub_56024(v1, &qword_14FE970);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, 1, 1, v5);
  }
  else
  {
    Playlist.url.getter(v4);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFA490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 168);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 120);
    v28 = *(_QWORD *)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 128);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v30 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for playlist catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 112);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 144));
  v21 = *(_QWORD *)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 72);
  v23 = *(_QWORD *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Playlist.publish()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[3] = a1;
  v2[4] = v1;
  v3 = type metadata accessor for Playlist(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicLibraryPlaylistResponse(0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v2[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicLibraryPlaylistRequest.CompletionPolicy(0);
  v2[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[12] = v8;
  v2[13] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC9B8);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibraryPlaylistRequest(0);
  v2[15] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[16] = v11;
  v2[17] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFA86C, 0, 0);
}

uint64_t sub_BFA86C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[11];
  v4 = v0[12];
  v5 = v0[4];
  v6 = type metadata accessor for Curator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  static MusicLibraryPlaylistRequest.editing(_:name:description:userImage:isPublic:isVisible:curator:)(v5, 0, 0, 0, 0, 0, 1, 2, v1);
  sub_56024(v1, &qword_14FC9B8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, enum case for MusicLibraryPlaylistRequest.CompletionPolicy.afterCloudLibraryChanges(_:), v3);
  MusicLibraryPlaylistRequest.completionPolicy.setter(v2);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryPlaylistRequest.response()[1]);
  v0[18] = v7;
  *v7 = v0;
  v7[1] = sub_BFA96C;
  return MusicLibraryPlaylistRequest.response()(v0[10]);
}

uint64_t sub_BFA96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_BFAAA4;
  else
    v3 = sub_BFA9D0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BFA9D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 24);
  MusicLibraryPlaylistResponse.playlist.getter();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v9, 0, 1, v7);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v11);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFAAA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v6, (uint64_t)qword_14FC880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 48);
  v16 = *(_QWORD *)(v0 + 56);
  v17 = *(_QWORD *)(v0 + 40);
  if (v10)
  {
    v36 = *(_QWORD *)(v0 + 120);
    v18 = swift_slowAlloc(22, -1);
    v35 = v13;
    v19 = swift_slowAlloc(64, -1);
    v37 = v19;
    *(_DWORD *)v18 = 136446466;
    v20 = sub_4DD24(&qword_14FC9C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v21 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v17, v20);
    v34 = v12;
    v23 = v22;
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v21, v22, &v37);
    v24 = swift_bridgeObjectRelease(v23);
    (*(void (**)(uint64_t, uint64_t, __n128))(v15 + 8))(v16, v17, v24);
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v11;
    swift_errorRetain(v11);
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v26 = (char *)String.init<A>(describing:)(v0 + 16, v25);
    v28 = v27;
    *(_QWORD *)(v18 + 14) = sub_BA95EC(v26, v27, &v37);
    swift_bridgeObjectRelease(v28);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl(&dword_0, v8, v9, "Failed to make playlist=%{public}s public with error=%{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    swift_errorRelease(v11);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  }
  else
  {

    swift_errorRelease(v11);
    swift_errorRelease(v11);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
    swift_errorRelease(v11);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 40));
  v29 = *(_QWORD *)(v0 + 104);
  v30 = *(_QWORD *)(v0 + 112);
  v31 = *(_QWORD *)(v0 + 80);
  v32 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v30);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFAD84(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FC994);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return Playlist.shareURL.getter(a1);
}

uint64_t sub_BFADD4()
{
  return Playlist.actionTitle.getter();
}

uint64_t sub_BFADE8()
{
  return Playlist.failureMessage.getter();
}

uint64_t sub_BFADFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFAE58, 0, 0);
}

uint64_t sub_BFAE58()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FC994);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_BF86B8;
  return Playlist.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t RadioShow.actionTitle.getter()
{
  return sub_BE88C8(0x6853206572616853, 0xAD0000A680E2776FLL);
}

uint64_t RadioShow.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001ALL, 0x8000000001103870);
}

uint64_t sub_BFAEFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_BFAF14, 0, 0);
}

uint64_t sub_BFAF14()
{
  uint64_t v0;

  RadioShow.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFAF44(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x6853206572616853, 0xAD0000A680E2776FLL);
}

uint64_t sub_BFAF68()
{
  return RadioShow.failureMessage.getter();
}

uint64_t sub_BFAF7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_14FCD00 + dword_14FCD00);
  v3 = (_QWORD *)swift_task_alloc(unk_14FCD04);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return v5(a1);
}

uint64_t RecordLabel.actionTitle.getter()
{
  return sub_BE88C8(0x1000000000000015, 0x80000000010DD670);
}

uint64_t RecordLabel.failureMessage.getter()
{
  return sub_BE88C8(0xD000000000000022, 0x8000000001103890);
}

uint64_t sub_BFB01C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_BFB034, 0, 0);
}

uint64_t sub_BFB034()
{
  uint64_t v0;

  RecordLabel.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFB064()
{
  return RecordLabel.actionTitle.getter();
}

uint64_t sub_BFB078()
{
  return RecordLabel.failureMessage.getter();
}

uint64_t sub_BFB08C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_14FCCF8 + dword_14FCCF8);
  v3 = (_QWORD *)swift_task_alloc(unk_14FCCFC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return v5(a1);
}

uint64_t SocialProfile.actionTitle.getter()
{
  return sub_BE88C8(0x1000000000000010, 0x80000000010DD690);
}

uint64_t SocialProfile.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001DLL, 0x80000000011038C0);
}

uint64_t sub_BFB12C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_BFB144, 0, 0);
}

uint64_t sub_BFB144()
{
  uint64_t v0;

  SocialProfile.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFB174()
{
  return SocialProfile.actionTitle.getter();
}

uint64_t sub_BFB188()
{
  return SocialProfile.failureMessage.getter();
}

uint64_t sub_BFB19C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_14FCCF0 + dword_14FCCF0);
  v3 = (_QWORD *)swift_task_alloc(unk_14FCCF4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return v5(a1);
}

uint64_t Song.actionTitle.getter()
{
  return sub_BE88C8(0x6F53206572616853, 0xAD0000A680E2676ELL);
}

uint64_t Song.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001ALL, 0x80000000011038E0);
}

uint64_t Song.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC5F0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB158);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC9D0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC9D8);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFB344, 0, 0);
}

uint64_t sub_BFB344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 128);
  Song.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_56024(*(_QWORD *)(v0 + 128), &qword_14FAC20);
    v5 = Song.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_109D100);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for Song(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_4DD24(&qword_14FC9E0, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, &protocol witness table for Song, v11);
      v12 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v12;
      *v12 = v0;
      v12[1] = sub_BFB51C;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v14, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
  }
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 64);
  v17 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFB51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BFB700;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BFB588;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BFB588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_BE3FFC(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_56024(v12, &qword_14FB158);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    Song.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFB700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for song catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFB9D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SongFilter.id.getter, a2);
}

uint64_t Song.augmentMetadata(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC9F0);
  v2[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MusicOffer.Kind(0);
  v2[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[8] = v5;
  v2[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicOffer(0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v8);
  v2[14] = swift_task_alloc(v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC5F0);
  v2[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[16] = v10;
  v2[17] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FB158) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v11);
  v2[19] = swift_task_alloc(v11);
  v2[20] = swift_task_alloc(v11);
  v2[21] = swift_task_alloc(v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC9D0);
  v2[22] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[23] = v13;
  v2[24] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC9D8);
  v2[25] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[26] = v15;
  v2[27] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFBB90, 0, 0);
}

uint64_t sub_BFBB90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = Song.catalogID.getter(a1);
  *(_QWORD *)(v1 + 224) = v2;
  *(_QWORD *)(v1 + 232) = v3;
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    v6 = objc_msgSend(**(id **)(v1 + 32), "specialization");
    *(_QWORD *)(v1 + 240) = v6;
    if (v6)
    {
      v7 = v6;
      objc_opt_self(LPiTunesMediaSongMetadata);
      v8 = swift_dynamicCastObjCClass(v7);
      *(_QWORD *)(v1 + 248) = v8;
      if (v8)
      {
        v9 = *(_QWORD *)(v1 + 200);
        KeyPath = swift_getKeyPath(&unk_109D100);
        *(_QWORD *)(v1 + 16) = v4;
        *(_QWORD *)(v1 + 24) = v5;
        v11 = type metadata accessor for Song(0);
        *(_QWORD *)(v1 + 256) = v11;
        v12 = sub_4DD24(&qword_14FC9E0, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
        swift_bridgeObjectRetain();
        MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for Song, v12);
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
        v14 = swift_allocObject(v13, 40, 7);
        *(_OWORD *)(v14 + 16) = xmmword_1060220;
        __swift_instantiateConcreteTypeFromMangledName(&qword_14FC9F8);
        v15 = static PartialMusicProperty<A>.offers.getter();
        *(_QWORD *)(v14 + 32) = v15;
        specialized Array._endMutation()(v15);
        MusicCatalogResourceRequest.properties.setter(v14, v9);
        v16 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
        *(_QWORD *)(v1 + 264) = v16;
        *v16 = v1;
        v16[1] = sub_BFBDFC;
        return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200));
      }
      swift_bridgeObjectRelease(v5);

    }
    else
    {
      swift_bridgeObjectRelease(v5);
    }
  }
  v18 = *(_QWORD *)(v1 + 192);
  v20 = *(_QWORD *)(v1 + 160);
  v19 = *(_QWORD *)(v1 + 168);
  v22 = *(_QWORD *)(v1 + 144);
  v21 = *(_QWORD *)(v1 + 152);
  v23 = *(_QWORD *)(v1 + 136);
  v25 = *(_QWORD *)(v1 + 104);
  v24 = *(_QWORD *)(v1 + 112);
  v26 = *(_QWORD *)(v1 + 96);
  v27 = *(_QWORD *)(v1 + 72);
  v28 = *(_QWORD *)(v1 + 48);
  swift_task_dealloc(*(_QWORD *)(v1 + 216));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_BFBDFC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_BFC47C;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 232));
    v4 = sub_BFBE68;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_BFBE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSURL *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  Class isa;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSURL *v83;
  uint64_t v84;
  void *v85;
  Class v86;
  uint64_t v87;
  unsigned int (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v89)(uint64_t, char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(void ***)(v0 + 32);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 176));
  sub_BE3FFC(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v8 = *v7;
  sub_5C238(v2, v3, &qword_14FB158);
  v9 = *(_QWORD *)(v1 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v10(v3, 1, v1) == 1)
  {
    v11 = *(_QWORD *)(v0 + 112);
    sub_56024(*(_QWORD *)(v0 + 160), &qword_14FB158);
    v12 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v13 = 0;
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 256);
    v15 = *(_QWORD *)(v0 + 160);
    v16 = *(_QWORD *)(v0 + 112);
    Song.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v14);
    v17 = type metadata accessor for URL(0);
    v18 = *(_QWORD *)(v17 - 8);
    v13 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      v20 = *(_QWORD *)(v0 + 112);
      URL._bridgeToObjectiveC()(v19);
      v13 = v21;
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  v22 = *(_QWORD *)(v0 + 256);
  v23 = *(_QWORD *)(v0 + 168);
  v24 = *(_QWORD *)(v0 + 152);
  objc_msgSend(v8, "setOriginalURL:", v13);

  sub_5C238(v23, v24, &qword_14FB158);
  v88 = v10;
  if (v10(v24, 1, v22) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 152), &qword_14FB158);
    isa = 0;
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 256);
    v28 = *(_QWORD *)(v0 + 152);
    isa = (Class)Song.offers.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v28, v27);
    if (isa)
    {
      v29 = *((_QWORD *)isa + 2);
      if (v29)
      {
        v87 = v9;
        v30 = *(_QWORD *)(v0 + 88);
        v91 = *(_QWORD *)(v0 + 64);
        sub_C058BC(0, v29, 0);
        v86 = isa;
        v31 = (char *)isa
            + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
        v93 = v30;
        v89 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 16);
        v90 = *(_QWORD *)(v30 + 72);
        do
        {
          v32 = *(_QWORD *)(v0 + 96);
          v34 = *(_QWORD *)(v0 + 72);
          v33 = *(_QWORD *)(v0 + 80);
          v35 = *(_QWORD *)(v0 + 56);
          v36 = v89(v32, v31, v33);
          v37 = MusicOffer.kind.getter(v36);
          v38 = MusicOffer.Kind.rawValue.getter(v37);
          v40 = v39;
          (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v34, v35);
          (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v32, v33);
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            sub_C058BC(0, _swiftEmptyArrayStorage[2] + 1, 1);
          v42 = _swiftEmptyArrayStorage[2];
          v41 = _swiftEmptyArrayStorage[3];
          if (v42 >= v41 >> 1)
            sub_C058BC((char *)(v41 > 1), v42 + 1, 1);
          _swiftEmptyArrayStorage[2] = v42 + 1;
          v43 = &_swiftEmptyArrayStorage[2 * v42];
          v43[4] = v38;
          v43[5] = v40;
          v31 += v90;
          --v29;
        }
        while (v29);
        swift_bridgeObjectRelease(v86);
        v9 = v87;
      }
      else
      {
        swift_bridgeObjectRelease(isa);
      }
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v25 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
    }
  }
  v45 = (uint64_t *)(v0 + 144);
  v44 = *(_QWORD *)(v0 + 144);
  v46 = *(_QWORD *)(v0 + 256);
  v47 = *(_QWORD *)(v0 + 168);
  objc_msgSend(*(id *)(v0 + 248), "setOffers:", isa, v25);

  v48 = &qword_14FB158;
  sub_5C238(v47, v44, &qword_14FB158);
  if (v88(v44, 1, v46) == 1)
    goto LABEL_25;
  v49 = *(_QWORD *)(v0 + 256);
  v50 = *(_QWORD *)(v0 + 144);
  v51 = Song.previewAssets.getter();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v50, v49);
  if (!v51)
  {
LABEL_26:
    v58 = *(_QWORD *)(v0 + 104);
    v59 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59);
    v60 = 0;
    goto LABEL_27;
  }
  v52 = *(_QWORD *)(v51 + 16);
  v53 = type metadata accessor for PreviewAsset(0);
  v54 = *(_QWORD *)(v53 - 8);
  if (v52)
  {
    (*(void (**)(_QWORD, unint64_t, uint64_t))(v54 + 16))(*(_QWORD *)(v0 + 48), v51 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80)), v53);
    v55 = 0;
  }
  else
  {
    v55 = 1;
  }
  v45 = (uint64_t *)(v0 + 48);
  v56 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v56, v55, 1, v53);
  v57 = swift_bridgeObjectRelease(v51);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v54 + 48))(v56, 1, v53, v57) == 1)
  {
    v48 = (uint64_t *)&unk_14FC9F0;
LABEL_25:
    sub_56024(*v45, v48);
    goto LABEL_26;
  }
  v79 = *(_QWORD *)(v0 + 104);
  v80 = *(_QWORD *)(v0 + 48);
  PreviewAsset.url.getter();
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v80, v53);
  v81 = type metadata accessor for URL(0);
  v82 = *(_QWORD *)(v81 - 8);
  v60 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v79, 1, v81) != 1)
  {
    v84 = *(_QWORD *)(v0 + 104);
    URL._bridgeToObjectiveC()(v83);
    v60 = v85;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v81);
  }
LABEL_27:
  v61 = *(void **)(v0 + 240);
  v63 = *(_QWORD *)(v0 + 208);
  v62 = *(_QWORD *)(v0 + 216);
  v65 = *(_QWORD *)(v0 + 192);
  v64 = *(_QWORD *)(v0 + 200);
  v66 = *(_QWORD *)(v0 + 176);
  v67 = *(_QWORD *)(v0 + 184);
  v68 = *(_QWORD *)(v0 + 168);
  objc_msgSend(*(id *)(v0 + 248), "setPreviewURL:", v60);

  sub_56024(v68, &qword_14FB158);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
  v69 = *(_QWORD *)(v0 + 192);
  v71 = *(_QWORD *)(v0 + 160);
  v70 = *(_QWORD *)(v0 + 168);
  v73 = *(_QWORD *)(v0 + 144);
  v72 = *(_QWORD *)(v0 + 152);
  v74 = *(_QWORD *)(v0 + 136);
  v76 = *(_QWORD *)(v0 + 104);
  v75 = *(_QWORD *)(v0 + 112);
  v77 = *(_QWORD *)(v0 + 96);
  v92 = *(_QWORD *)(v0 + 72);
  v94 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFC47C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 272);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 232);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 224);
    v31 = *(void **)(v0 + 240);
    v32 = *(_QWORD *)(v0 + 208);
    v33 = *(_QWORD *)(v0 + 200);
    v35 = *(_QWORD *)(v0 + 216);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v37 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v37);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for album catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v33);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 208);
    v18 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 200);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v21 = *(_QWORD *)(v0 + 192);
  v23 = *(_QWORD *)(v0 + 160);
  v22 = *(_QWORD *)(v0 + 168);
  v25 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 152);
  v26 = *(_QWORD *)(v0 + 136);
  v28 = *(_QWORD *)(v0 + 104);
  v27 = *(_QWORD *)(v0 + 112);
  v29 = *(_QWORD *)(v0 + 96);
  v34 = *(_QWORD *)(v0 + 72);
  v36 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFC798(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FC9CC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return Song.shareURL.getter(a1);
}

uint64_t sub_BFC7E8(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x6F53206572616853, 0xAD0000A680E2676ELL);
}

uint64_t sub_BFC80C()
{
  return Song.failureMessage.getter();
}

uint64_t sub_BFC820(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FC9EC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return Song.augmentMetadata(_:)(a1);
}

uint64_t Station.actionTitle.getter()
{
  return sub_BE88C8(0x1000000000000010, 0x80000000010DD6D0);
}

uint64_t Station.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001DLL, 0x8000000001103900);
}

uint64_t Station.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC5E0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA08);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA10);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA18);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFC9AC, 0, 0);
}

uint64_t sub_BFC9AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(v1 + 128);
  Station.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_56024(*(_QWORD *)(v1 + 128), &qword_14FAC20);
    v6 = Station.id.getter(v5);
    v8 = v7;
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    KeyPath = swift_getKeyPath(&unk_109D128);
    *(_QWORD *)(v1 + 16) = v6;
    *(_QWORD *)(v1 + 24) = v8;
    v10 = type metadata accessor for Station(0);
    *(_QWORD *)(v1 + 168) = v10;
    v11 = sub_4DD24(&qword_14FCA20, (uint64_t (*)(uint64_t))&type metadata accessor for Station, (uint64_t)&protocol conformance descriptor for Station);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v10, &protocol witness table for Station, v11);
    v12 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v1 + 176) = v12;
    *v12 = v1;
    v12[1] = sub_BFCB68;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
  }
  else
  {
    v14 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v14, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
    v15 = *(_QWORD *)(v1 + 120);
    v16 = *(_QWORD *)(v1 + 96);
    v18 = *(_QWORD *)(v1 + 64);
    v17 = *(_QWORD *)(v1 + 72);
    swift_task_dealloc(*(_QWORD *)(v1 + 128));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_BFCB68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BFCD4C;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BFCBD4;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BFCBD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_BE40A4(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_56024(v13, &qword_14FCA08);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    Station.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFCD4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for station catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFD024(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FCA04);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return Station.shareURL.getter(a1);
}

uint64_t sub_BFD074()
{
  return Station.actionTitle.getter();
}

uint64_t sub_BFD088()
{
  return Station.failureMessage.getter();
}

uint64_t sub_BFD09C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFD0F8, 0, 0);
}

uint64_t sub_BFD0F8()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FCA04);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_BF86B8;
  return Station.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t Track.actionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;

  v0 = type metadata accessor for Song(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v44 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - v11;
  v13 = type metadata accessor for MusicVideo(0);
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  __chkstk_darwin(v13);
  v42 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v19, v43, v15, v17);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v19, v15);
  if (v20 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v19, v0);
    String.LocalizationValue.init(stringLiteral:)(0x6F53206572616853, 0xAD0000A680E2676ELL);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    v21 = v6;
    v22 = v1;
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v23 = qword_1581E30;
    v24 = (id)qword_1581E30;
    v25 = v44;
    static Locale.current.getter(v24);
    v26 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v23, v25, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v21);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v0);
  }
  else if (v20 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    v28 = v40;
    v27 = v41;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v42, v19, v41);
    String.LocalizationValue.init(stringLiteral:)(0x6956206572616853, 0xAE00A680E26F6564);
    v29 = v6;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v30 = qword_1581E30;
    v31 = (id)qword_1581E30;
    v32 = v44;
    static Locale.current.getter(v31);
    v26 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v30, v32, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v29);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v42, v27);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
    v33 = v9;
    v34 = v9;
    v35 = v6;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v34, v12, v6);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v36 = qword_1581E30;
    v37 = (id)qword_1581E30;
    v38 = v44;
    static Locale.current.getter(v37);
    v26 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v36, v38, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v35);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  return v26;
}

uint64_t Track.failureMessage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;

  v1 = type metadata accessor for Song(0);
  v36 = *(_QWORD *)(v1 - 8);
  v37 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - v11;
  v13 = type metadata accessor for MusicVideo(0);
  v34 = *(_QWORD *)(v13 - 8);
  v35 = v13;
  __chkstk_darwin(v13);
  v38 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v19, v0, v15, v17);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v19, v15);
  if (v20 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    v21 = v36;
    v22 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v3, v19, v37);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000000011038E0);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v23 = qword_1581E30;
    v24 = (id)qword_1581E30;
    v25 = v39;
    static Locale.current.getter(v24);
    v26 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v23, v25, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v22);
  }
  else if (v20 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    v28 = v34;
    v27 = v35;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v38, v19, v35);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000001103830);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v29 = qword_1581E30;
    v30 = (id)qword_1581E30;
    v31 = v39;
    static Locale.current.getter(v30);
    v26 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v29, v31, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v38, v27);
  }
  else
  {
    v26 = Track.failureMessage.getter();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  return v26;
}

uint64_t Track.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for Song(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicVideo(0);
  v2[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[8] = v6;
  v2[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Track(0);
  v2[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[11] = v8;
  v2[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFDA3C, 0, 0);
}

uint64_t sub_BFDA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for Track.song(_:))
  {
    v5 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v5, *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    v9 = (_QWORD *)swift_task_alloc(dword_14FC9CC);
    *(_QWORD *)(v0 + 112) = v9;
    *v9 = v0;
    v9[1] = sub_BFDCA8;
    return Song.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for Track.musicVideo(_:))
  {
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 56);
    v14 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v11, *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v12, v11, v13);
    v15 = (_QWORD *)swift_task_alloc(dword_14FC974);
    *(_QWORD *)(v0 + 104) = v15;
    *v15 = v0;
    v15[1] = sub_BFDBF4;
    return MusicVideo.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 16);
    v17 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(v18, *(_QWORD *)(v0 + 80));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_BFDBF4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  return swift_task_switch(sub_BFDC48, 0, 0);
}

uint64_t sub_BFDC48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v1, *(_QWORD *)(v0 + 56));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFDCA8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));
  return swift_task_switch(sub_BFDCFC, 0, 0);
}

uint64_t sub_BFDCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(v1, *(_QWORD *)(v0 + 32));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFDD64(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FCA2C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return Track.shareURL.getter(a1);
}

uint64_t sub_BFDDBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFDE18, 0, 0);
}

uint64_t sub_BFDE18()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FCA2C);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_BF86B8;
  return Track.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t TVEpisode.actionTitle.getter()
{
  return sub_BE88C8(0x1000000000000010, 0x80000000010DD6B0);
}

uint64_t TVEpisode.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001DLL, 0x8000000001103920);
}

uint64_t TVEpisode.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC5D0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA38);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA40);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA48);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFDFB0, 0, 0);
}

uint64_t sub_BFDFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  TVEpisode.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_56024(*(_QWORD *)(v0 + 128), &qword_14FAC20);
    v5 = TVEpisode.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_109D150);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for TVEpisode(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_4DD24(&qword_14FCA50, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
      v12 = sub_4DD24(&qword_14FCA58, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_BFE1B0;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFE1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BFE394;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BFE21C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BFE21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_BE4018(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_56024(v12, &qword_14FCA38);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    TVEpisode.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFE394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for TVEpisode catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFE66C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FCA34);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return TVEpisode.shareURL.getter(a1);
}

uint64_t sub_BFE6BC()
{
  return TVEpisode.actionTitle.getter();
}

uint64_t sub_BFE6D0()
{
  return TVEpisode.failureMessage.getter();
}

uint64_t sub_BFE6E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFE740, 0, 0);
}

uint64_t sub_BFE740()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FCA34);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_BF86B8;
  return TVEpisode.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t TVSeason.actionTitle.getter()
{
  return sub_BE88C8(0x6553206572616853, 0xAFA680E26E6F7361);
}

uint64_t TVSeason.failureMessage.getter()
{
  return sub_BE88C8(0xD00000000000001CLL, 0x8000000001103940);
}

uint64_t TVSeason.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC5C0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA68);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA70);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA78);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFE8E0, 0, 0);
}

uint64_t sub_BFE8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  TVSeason.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_56024(*(_QWORD *)(v0 + 128), &qword_14FAC20);
    v5 = TVSeason.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_109D178);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for TVSeason(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_4DD24(&qword_14FCA80, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
      v12 = sub_4DD24(&qword_14FCA88, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_BFEAE0;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFEAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BFECC4;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BFEB4C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BFEB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_BE4034(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_56024(v12, &qword_14FCA68);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    TVSeason.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFECC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for TVSeason catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFEF9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FCA64);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return TVSeason.shareURL.getter(a1);
}

uint64_t sub_BFEFEC(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x6553206572616853, 0xAFA680E26E6F7361);
}

uint64_t sub_BFF010()
{
  return TVSeason.failureMessage.getter();
}

uint64_t sub_BFF024(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFF080, 0, 0);
}

uint64_t sub_BFF080()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FCA64);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_BF86B8;
  return TVSeason.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t TVShow.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC5B0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA98);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCAA0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCAA8);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFF1E0, 0, 0);
}

uint64_t sub_BFF1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  TVShow.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_56024(*(_QWORD *)(v0 + 128), &qword_14FAC20);
    v5 = TVShow.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_109D1A0);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for TVShow(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_4DD24(&qword_14FCAB0, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
      v12 = sub_4DD24(&qword_14FCAB8, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_BFF3E0;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFF3E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BFF5C4;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BFF44C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BFF44C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_BE4050(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_56024(v12, &qword_14FCA98);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    TVShow.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFF5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for TVShow catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFF89C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FCA94);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return TVShow.shareURL.getter(a1);
}

uint64_t sub_BFF8EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFF948, 0, 0);
}

uint64_t sub_BFF948()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FCA94);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_BF86B8;
  return TVShow.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t UploadedAudio.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC5A0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCAC8);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCAD0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCAD8);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BFFAA8, 0, 0);
}

uint64_t sub_BFFAA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  _s16MusicKitInternal13UploadedAudioV0A4CoreE3url10Foundation3URLVSgvg_0();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_56024(*(_QWORD *)(v0 + 128), &qword_14FAC20);
    v5 = UploadedAudio.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_109D1C8);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for UploadedAudio(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_4DD24(&qword_14FCAE0, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
      v12 = sub_4DD24(&qword_14FCAE8, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_BFFCA8;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFFCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_BFFE8C;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_BFFD14;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_BFFD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_BE406C(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_56024(v12, &qword_14FCAC8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    _s16MusicKitInternal13UploadedAudioV0A4CoreE3url10Foundation3URLVSgvg_0();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BFFE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for uploaded audio catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C00164(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FCAC4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return UploadedAudio.shareURL.getter(a1);
}

uint64_t sub_C001B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C00210, 0, 0);
}

uint64_t sub_C00210()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FCAC4);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_BF86B8;
  return UploadedAudio.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t UploadedVideo.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC590);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCAF8);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCB00);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCB08);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C00370, 0, 0);
}

uint64_t sub_C00370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  _s16MusicKitInternal13UploadedVideoV0A4CoreE3url10Foundation3URLVSgvg_0();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_56024(*(_QWORD *)(v0 + 128), &qword_14FAC20);
    v5 = UploadedVideo.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_109D1F0);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for UploadedVideo(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_4DD24(&qword_14FCB10, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
      v12 = sub_4DD24(&qword_14FCB18, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_C00570;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C00570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_C00754;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_C005DC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C005DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_BE4088(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_56024(v12, &qword_14FCAF8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    _s16MusicKitInternal13UploadedVideoV0A4CoreE3url10Foundation3URLVSgvg_0();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C00754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14F9C98 != -1)
    swift_once(&qword_14F9C98, sub_C057D8);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_14FC880);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to get share URL for uploaded video catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C00A2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FCAF4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return UploadedVideo.shareURL.getter(a1);
}

uint64_t sub_C00A7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C00AD8, 0, 0);
}

uint64_t sub_C00AD8()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FCAF4);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_BF86B8;
  return UploadedVideo.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t GenericMusicItem.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v115 = a1;
  v69 = type metadata accessor for UploadedVideo(0);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v67 = (char *)&v67 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for UploadedAudio(0);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v70 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for TVShow(0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v73 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for TVSeason(0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for TVEpisode(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v79 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for Station(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for Song(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for SocialProfile(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for RecordLabel(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RadioShow(0);
  v95 = *(_QWORD *)(v10 - 8);
  v96 = v10;
  __chkstk_darwin(v10);
  v94 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist(0);
  v98 = *(_QWORD *)(v12 - 8);
  v99 = v12;
  __chkstk_darwin(v12);
  v97 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicVideo(0);
  v101 = *(_QWORD *)(v14 - 8);
  v102 = v14;
  __chkstk_darwin(v14);
  v100 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicMovie(0);
  v104 = *(_QWORD *)(v16 - 8);
  v105 = v16;
  __chkstk_darwin(v16);
  v103 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Genre(0);
  v107 = *(_QWORD *)(v18 - 8);
  v108 = v18;
  __chkstk_darwin(v18);
  v106 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for EditorialItem(0);
  v110 = *(_QWORD *)(v20 - 8);
  v111 = v20;
  __chkstk_darwin(v20);
  v109 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Curator(0);
  v112 = *(_QWORD *)(v22 - 8);
  v113 = v22;
  __chkstk_darwin(v22);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Artist(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Album(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v67 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for GenericMusicItem(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = __chkstk_darwin(v33);
  v37 = (char *)&v67 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v34 + 16))(v37, v114, v33, v35);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v37, v33);
  if (v38 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))(v32, v37, v29);
    Album.url.getter(v39);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  }
  v41 = v115;
  if (v38 != enum case for GenericMusicItem.artist(_:))
  {
    if (v38 == enum case for GenericMusicItem.composer(_:) || v38 == enum case for GenericMusicItem.creditArtist(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v33);
      goto LABEL_9;
    }
    if (v38 == enum case for GenericMusicItem.curator(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
      v45 = v112;
      v44 = v113;
      v46 = (*(uint64_t (**)(char *, char *, uint64_t))(v112 + 32))(v24, v37, v113);
      Curator.url.getter(v46);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v24, v44);
    }
    if (v38 == enum case for GenericMusicItem.editorialItem(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
      v48 = v109;
      v47 = v110;
      v49 = v111;
      v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v110 + 32))(v109, v37, v111);
      EditorialItem.url.getter(v50);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v49);
    }
    if (v38 == enum case for GenericMusicItem.genre(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
      v51 = v106;
      v52 = v107;
      v53 = v108;
      v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v107 + 32))(v106, v37, v108);
      Genre.url.getter(v54);
    }
    else if (v38 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
      v51 = v103;
      v52 = v104;
      v53 = v105;
      v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v104 + 32))(v103, v37, v105);
      MusicMovie.url.getter(v55);
    }
    else if (v38 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
      v51 = v100;
      v52 = v101;
      v53 = v102;
      v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v101 + 32))(v100, v37, v102);
      MusicVideo.url.getter(v56);
    }
    else if (v38 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
      v51 = v97;
      v52 = v98;
      v53 = v99;
      v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v98 + 32))(v97, v37, v99);
      Playlist.url.getter(v57);
    }
    else if (v38 == enum case for GenericMusicItem.radioShow(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
      v52 = v95;
      v51 = v94;
      v53 = v96;
      v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v95 + 32))(v94, v37, v96);
      RadioShow.url.getter(v58);
    }
    else if (v38 == enum case for GenericMusicItem.recordLabel(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
      v52 = v92;
      v51 = v91;
      v53 = v93;
      v59 = (*(uint64_t (**)(char *, char *, uint64_t))(v92 + 32))(v91, v37, v93);
      RecordLabel.url.getter(v59);
    }
    else if (v38 == enum case for GenericMusicItem.socialProfile(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
      v52 = v89;
      v51 = v88;
      v53 = v90;
      v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v89 + 32))(v88, v37, v90);
      SocialProfile.url.getter(v60);
    }
    else
    {
      if (v38 != enum case for GenericMusicItem.song(_:))
      {
        if (v38 == enum case for GenericMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
          v47 = v83;
          v48 = v82;
          v49 = v84;
          v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v83 + 32))(v82, v37, v84);
          Station.url.getter(v62);
        }
        else if (v38 == enum case for GenericMusicItem.tvEpisode(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
          v47 = v80;
          v48 = v79;
          v49 = v81;
          v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v80 + 32))(v79, v37, v81);
          TVEpisode.url.getter(v63);
        }
        else if (v38 == enum case for GenericMusicItem.tvSeason(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
          v47 = v77;
          v48 = v76;
          v49 = v78;
          v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v77 + 32))(v76, v37, v78);
          TVSeason.url.getter(v64);
        }
        else if (v38 == enum case for GenericMusicItem.tvShow(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
          v47 = v74;
          v48 = v73;
          v49 = v75;
          v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 32))(v73, v37, v75);
          TVShow.url.getter(v65);
        }
        else if (v38 == enum case for GenericMusicItem.uploadedAudio(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
          v47 = v71;
          v48 = v70;
          v49 = v72;
          (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v37, v72);
          _s16MusicKitInternal13UploadedAudioV0A4CoreE3url10Foundation3URLVSgvg_0();
        }
        else
        {
          if (v38 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            if (v38 != enum case for GenericMusicItem.other(_:))
            {
              v66 = type metadata accessor for URL(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v41, 1, 1, v66);
              return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v37, v33);
            }
            (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
            swift_bridgeObjectRelease();
LABEL_9:
            v43 = type metadata accessor for URL(0);
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v41, 1, 1, v43);
          }
          (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
          v47 = v68;
          v48 = v67;
          v49 = v69;
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v67, v37, v69);
          _s16MusicKitInternal13UploadedVideoV0A4CoreE3url10Foundation3URLVSgvg_0();
        }
        return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v49);
      }
      (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
      v52 = v86;
      v51 = v85;
      v53 = v87;
      v61 = (*(uint64_t (**)(char *, char *, uint64_t))(v86 + 32))(v85, v37, v87);
      Song.url.getter(v61);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v51, v53);
  }
  (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
  v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v28, v37, v25);
  Artist.url.getter(v42);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
}

uint64_t GenericMusicItem.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for UploadedVideo(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UploadedAudio(0);
  v2[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[8] = v6;
  v2[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVShow(0);
  v2[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[11] = v8;
  v2[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TVSeason(0);
  v2[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[14] = v10;
  v2[15] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TVEpisode(0);
  v2[16] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[17] = v12;
  v2[18] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v2[19] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[20] = v14;
  v2[21] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Playlist(0);
  v2[22] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[23] = v16;
  v2[24] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MusicVideo(0);
  v2[25] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[26] = v18;
  v2[27] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicMovie(0);
  v2[28] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v2[29] = v20;
  v2[30] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Artist(0);
  v2[31] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v2[32] = v22;
  v2[33] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Album(0);
  v2[34] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v2[35] = v24;
  v2[36] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for GenericMusicItem(0);
  v2[37] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v2[38] = v26;
  v2[39] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C019B8, 0, 0);
}

uint64_t sub_C019B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for GenericMusicItem.album(_:))
  {
    v5 = *(_QWORD *)(v0 + 312);
    v6 = *(_QWORD *)(v0 + 288);
    v7 = *(_QWORD *)(v0 + 272);
    v8 = *(_QWORD *)(v0 + 280);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v5, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    v9 = (_QWORD *)swift_task_alloc(dword_14FC8FC);
    *(_QWORD *)(v0 + 320) = v9;
    *v9 = v0;
    v9[1] = sub_C02224;
    return Album.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.artist(_:))
  {
    v11 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 248);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v11, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v11, v14);
    v15 = (_QWORD *)swift_task_alloc(dword_14FC91C);
    *(_QWORD *)(v0 + 328) = v15;
    *v15 = v0;
    v15[1] = sub_C02360;
    return Artist.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.composer(_:))
    goto LABEL_16;
  if (v4 == enum case for GenericMusicItem.creditArtist(_:))
  {
LABEL_7:
    v16 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    v17 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
LABEL_17:
    v21 = *(_QWORD *)(v0 + 288);
    v22 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 240);
    v24 = *(_QWORD *)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 144);
    v28 = *(_QWORD *)(v0 + 120);
    v29 = *(_QWORD *)(v0 + 96);
    v78 = *(_QWORD *)(v0 + 72);
    v79 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v18 = v4 == enum case for GenericMusicItem.curator(_:) || v4 == enum case for GenericMusicItem.editorialItem(_:);
  if (v18 || v4 == enum case for GenericMusicItem.genre(_:))
    goto LABEL_16;
  if (v4 == enum case for GenericMusicItem.musicMovie(_:))
  {
    v30 = *(_QWORD *)(v0 + 312);
    v32 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 240);
    v33 = *(_QWORD *)(v0 + 224);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v30, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v31, v30, v33);
    v34 = (_QWORD *)swift_task_alloc(dword_14FC944);
    *(_QWORD *)(v0 + 336) = v34;
    *v34 = v0;
    v34[1] = sub_C0249C;
    return MusicMovie.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v35 = *(_QWORD *)(v0 + 312);
    v37 = *(_QWORD *)(v0 + 208);
    v36 = *(_QWORD *)(v0 + 216);
    v38 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v35, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v36, v35, v38);
    v39 = (_QWORD *)swift_task_alloc(dword_14FC974);
    *(_QWORD *)(v0 + 344) = v39;
    *v39 = v0;
    v39[1] = sub_C025D8;
    return MusicVideo.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.playlist(_:))
  {
    v40 = *(_QWORD *)(v0 + 312);
    v42 = *(_QWORD *)(v0 + 184);
    v41 = *(_QWORD *)(v0 + 192);
    v43 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v40, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v41, v40, v43);
    v44 = (_QWORD *)swift_task_alloc(dword_14FC994);
    *(_QWORD *)(v0 + 352) = v44;
    *v44 = v0;
    v44[1] = sub_C02714;
    return Playlist.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.radioShow(_:)
    || v4 == enum case for GenericMusicItem.recordLabel(_:)
    || v4 == enum case for GenericMusicItem.socialProfile(_:))
  {
    goto LABEL_16;
  }
  if (v4 == enum case for GenericMusicItem.song(_:))
  {
    v45 = *(_QWORD *)(v0 + 312);
    v47 = *(_QWORD *)(v0 + 160);
    v46 = *(_QWORD *)(v0 + 168);
    v48 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v45, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v46, v45, v48);
    v49 = (_QWORD *)swift_task_alloc(dword_14FC9CC);
    *(_QWORD *)(v0 + 360) = v49;
    *v49 = v0;
    v49[1] = sub_C02850;
    return Song.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.station(_:))
  {
LABEL_16:
    v20 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    GenericMusicItem.url.getter(v20);
    goto LABEL_17;
  }
  if (v4 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    v50 = *(_QWORD *)(v0 + 312);
    v52 = *(_QWORD *)(v0 + 136);
    v51 = *(_QWORD *)(v0 + 144);
    v53 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v50, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v50, v53);
    v54 = (_QWORD *)swift_task_alloc(dword_14FCA34);
    *(_QWORD *)(v0 + 368) = v54;
    *v54 = v0;
    v54[1] = sub_C0298C;
    return TVEpisode.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for GenericMusicItem.tvSeason(_:))
  {
    v55 = *(_QWORD *)(v0 + 312);
    v57 = *(_QWORD *)(v0 + 112);
    v56 = *(_QWORD *)(v0 + 120);
    v58 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v55, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v56, v55, v58);
    v59 = (_QWORD *)swift_task_alloc(dword_14FCA64);
    *(_QWORD *)(v0 + 376) = v59;
    *v59 = v0;
    v59[1] = sub_C02AC8;
    return TVSeason.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for GenericMusicItem.tvShow(_:))
  {
    v60 = *(_QWORD *)(v0 + 312);
    v62 = *(_QWORD *)(v0 + 88);
    v61 = *(_QWORD *)(v0 + 96);
    v63 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v60, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v61, v60, v63);
    v64 = (_QWORD *)swift_task_alloc(dword_14FCA94);
    *(_QWORD *)(v0 + 384) = v64;
    *v64 = v0;
    v64[1] = sub_C02C04;
    return TVShow.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    v65 = *(_QWORD *)(v0 + 312);
    v67 = *(_QWORD *)(v0 + 64);
    v66 = *(_QWORD *)(v0 + 72);
    v68 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v65, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v66, v65, v68);
    v69 = (_QWORD *)swift_task_alloc(dword_14FCAC4);
    *(_QWORD *)(v0 + 392) = v69;
    *v69 = v0;
    v69[1] = sub_C02D40;
    return UploadedAudio.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else
  {
    if (v4 != enum case for GenericMusicItem.uploadedVideo(_:))
    {
      if (v4 != enum case for GenericMusicItem.other(_:))
      {
        v76 = *(_QWORD *)(v0 + 304);
        v75 = *(_QWORD *)(v0 + 312);
        v77 = *(_QWORD *)(v0 + 296);
        GenericMusicItem.url.getter(*(_QWORD *)(v0 + 16));
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
        goto LABEL_17;
      }
      goto LABEL_7;
    }
    v70 = *(_QWORD *)(v0 + 312);
    v72 = *(_QWORD *)(v0 + 40);
    v71 = *(_QWORD *)(v0 + 48);
    v73 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v70, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v71, v70, v73);
    v74 = (_QWORD *)swift_task_alloc(dword_14FCAF4);
    *(_QWORD *)(v0 + 400) = v74;
    *v74 = v0;
    v74[1] = sub_C02E7C;
    return UploadedVideo.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_C02224()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 320));
  return swift_task_switch(sub_C02278, 0, 0);
}

uint64_t sub_C02278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C02360()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 328));
  return swift_task_switch(sub_C023B4, 0, 0);
}

uint64_t sub_C023B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C0249C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 336));
  return swift_task_switch(sub_C024F0, 0, 0);
}

uint64_t sub_C024F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C025D8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 344));
  return swift_task_switch(sub_C0262C, 0, 0);
}

uint64_t sub_C0262C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C02714()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 352));
  return swift_task_switch(sub_C02768, 0, 0);
}

uint64_t sub_C02768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C02850()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 360));
  return swift_task_switch(sub_C028A4, 0, 0);
}

uint64_t sub_C028A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C0298C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 368));
  return swift_task_switch(sub_C029E0, 0, 0);
}

uint64_t sub_C029E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C02AC8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 376));
  return swift_task_switch(sub_C02B1C, 0, 0);
}

uint64_t sub_C02B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C02C04()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 384));
  return swift_task_switch(sub_C02C58, 0, 0);
}

uint64_t sub_C02C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C02D40()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 392));
  return swift_task_switch(sub_C02D94, 0, 0);
}

uint64_t sub_C02D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C02E7C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 400));
  return swift_task_switch(sub_C02ED0, 0, 0);
}

uint64_t sub_C02ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenericMusicItem.actionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  id v56;
  char *v57;
  char *v58;
  uint64_t v59;
  id v60;
  char *v61;
  unsigned int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int16 v69;
  unint64_t v70;
  char *v71;
  char *v72;
  const char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  id v78;
  char *v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  id v84;
  char *v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  id v90;
  char *v91;
  uint64_t v92;
  id v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;

  v98 = type metadata accessor for UploadedVideo(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v95 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for UploadedAudio(0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (char *)&v95 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for TVShow(0);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v102 = (char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for TVSeason(0);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v108 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for TVEpisode(0);
  v106 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v105 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for Station(0);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v111 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for Song(0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for SocialProfile(0);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for RecordLabel(0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for RadioShow(0);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for Playlist(0);
  v127 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v126 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for MusicVideo(0);
  v130 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v129 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicMovie(0);
  v133 = *(_QWORD *)(v12 - 8);
  v134 = v12;
  __chkstk_darwin(v12);
  v132 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Genre(0);
  v136 = *(_QWORD *)(v14 - 8);
  v137 = v14;
  __chkstk_darwin(v14);
  v135 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Curator(0);
  v139 = *(_QWORD *)(v16 - 8);
  v140 = v16;
  __chkstk_darwin(v16);
  v138 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Composer(0);
  v142 = *(_QWORD *)(v18 - 8);
  v143 = v18;
  __chkstk_darwin(v18);
  v141 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Artist(0);
  v145 = *(_QWORD *)(v20 - 8);
  v146 = v20;
  __chkstk_darwin(v20);
  v144 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Locale(0);
  __chkstk_darwin(v22);
  v148 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for String.LocalizationValue(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v95 - v29;
  v31 = type metadata accessor for Album(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v95 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for GenericMusicItem(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v95 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v36 + 16))(v39, v147, v35, v37);
  v40 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v39, v35);
  if (v40 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v39, v31);
    String.LocalizationValue.init(stringLiteral:)(0x6C41206572616853, 0xAE00A680E26D7562);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v41 = qword_1581E30;
    v42 = (id)qword_1581E30;
    v43 = v148;
    static Locale.current.getter(v42);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v41, v43, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    return v44;
  }
  if (v40 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v144;
    v45 = v145;
    v47 = v146;
    (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v144, v39, v146);
    v48 = 0x7241206572616853;
    v49 = 0xAFA680E274736974;
LABEL_7:
    String.LocalizationValue.init(stringLiteral:)(v48, v49);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v50 = qword_1581E30;
    v51 = (id)qword_1581E30;
    v52 = v148;
    static Locale.current.getter(v51);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v50, v52, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
LABEL_18:
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    return v44;
  }
  if (v40 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v141;
    v45 = v142;
    v47 = v143;
    (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v141, v39, v143);
    v53 = v30;
    String.LocalizationValue.init(stringLiteral:)(0x1000000000000011, 0x80000000010DD6F0);
    v54 = v27;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v55 = qword_1581E30;
    v56 = (id)qword_1581E30;
    v57 = v148;
    static Locale.current.getter(v56);
    v44 = String.init(localized:table:bundle:locale:comment:)(v54, 0, 0, v55, v57, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v53, v24);
    goto LABEL_18;
  }
  if (v40 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v138;
    v45 = v139;
    v47 = v140;
    (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v138, v39, v140);
    v58 = v30;
    String.LocalizationValue.init(stringLiteral:)(0x1000000000000010, 0x80000000010DD710);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v59 = qword_1581E30;
    v60 = (id)qword_1581E30;
    v61 = v148;
    static Locale.current.getter(v60);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v59, v61, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v58, v24);
    goto LABEL_18;
  }
  if (v40 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v135;
    v45 = v136;
    v47 = v137;
    (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v135, v39, v137);
    v49 = 0xAE00A680E265726ELL;
    v48 = 0x6547206572616853;
    goto LABEL_7;
  }
  if (v40 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v132;
    v45 = v133;
    v47 = v134;
    (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v132, v39, v134);
    v48 = 0x6F4D206572616853;
    v63 = -496670346;
LABEL_26:
    v49 = v63 | 0xAE00A68000000000;
    goto LABEL_7;
  }
  if (v40 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v130;
    v46 = v129;
    v47 = v131;
    (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v129, v39, v131);
    v48 = 0x6956206572616853;
    v63 = -496016028;
    goto LABEL_26;
  }
  if (v40 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v127;
    v46 = v126;
    v47 = v128;
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v126, v39, v128);
    v48 = 0x1000000000000011;
    v49 = 0x80000000010DD750;
    goto LABEL_7;
  }
  if (v40 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v124;
    v65 = v123;
    v66 = v39;
    v67 = v125;
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v123, v66, v125);
    v68 = 0x6853206572616853;
    v69 = 30575;
LABEL_31:
    v70 = v69 | 0xAD0000A680E20000;
LABEL_43:
    String.LocalizationValue.init(stringLiteral:)(v68, v70);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v77 = qword_1581E30;
    v78 = (id)qword_1581E30;
    v79 = v148;
    static Locale.current.getter(v78);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v77, v79, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v67);
    return v44;
  }
  if (v40 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v121;
    v65 = v120;
    v71 = v39;
    v67 = v122;
    (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v120, v71, v122);
    v68 = 0x1000000000000015;
    v70 = 0x80000000010DD670;
    goto LABEL_43;
  }
  if (v40 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v118;
    v65 = v117;
    v72 = v39;
    v67 = v119;
    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v117, v72, v119);
    v73 = "Share Profile…";
LABEL_42:
    v70 = (unint64_t)(v73 - 32) | 0x8000000000000000;
    v68 = 0x1000000000000010;
    goto LABEL_43;
  }
  if (v40 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v115;
    v65 = v114;
    v74 = v39;
    v67 = v116;
    (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v114, v74, v116);
    v68 = 0x6F53206572616853;
    v69 = 26478;
    goto LABEL_31;
  }
  if (v40 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v112;
    v65 = v111;
    v75 = v39;
    v67 = v113;
    (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v111, v75, v113);
    v73 = "Share Station…";
    goto LABEL_42;
  }
  if (v40 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v106;
    v65 = v105;
    v76 = v39;
    v67 = v107;
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v105, v76, v107);
    v73 = "Share Episode…";
    goto LABEL_42;
  }
  if (v40 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v108, v39, v110);
    String.LocalizationValue.init(stringLiteral:)(0x6553206572616853, 0xAFA680E26E6F7361);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v80 = qword_1581E30;
    v81 = (id)qword_1581E30;
    v82 = v148;
    static Locale.current.getter(v81);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v80, v82, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v110);
  }
  else if (v40 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v102, v39, v104);
    String.LocalizationValue.init(stringLiteral:)(0x6853206572616853, 0xAD0000A680E2776FLL);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v83 = qword_1581E30;
    v84 = (id)qword_1581E30;
    v85 = v148;
    static Locale.current.getter(v84);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v83, v85, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v104);
  }
  else if (v40 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v39, v101);
    String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v86 = qword_1581E30;
    v87 = (id)qword_1581E30;
    v88 = v148;
    static Locale.current.getter(v87);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v86, v88, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
  }
  else if (v40 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v96, v39, v98);
    String.LocalizationValue.init(stringLiteral:)(0x6956206572616853, 0xAE00A680E26F6564);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v89 = qword_1581E30;
    v90 = (id)qword_1581E30;
    v91 = v148;
    static Locale.current.getter(v90);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v89, v91, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v98);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v92 = qword_1581E30;
    v93 = (id)qword_1581E30;
    v94 = v148;
    static Locale.current.getter(v93);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v92, v94, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v35);
  }
  return v44;
}

uint64_t GenericMusicItem.failureMessage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  const char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  id v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  const char *v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  id v65;
  char *v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;

  v76 = type metadata accessor for UploadedVideo(0);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v74 = (char *)&v73 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for UploadedAudio(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v77 = (char *)&v73 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for TVShow(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v80 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for TVSeason(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for TVEpisode(0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v83 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for Station(0);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v89 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for Song(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for SocialProfile(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for RecordLabel(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for RadioShow(0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v101 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for Playlist(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for MusicVideo(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicMovie(0);
  v111 = *(_QWORD *)(v12 - 8);
  v112 = v12;
  __chkstk_darwin(v12);
  v110 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Genre(0);
  v114 = *(_QWORD *)(v14 - 8);
  v115 = v14;
  __chkstk_darwin(v14);
  v113 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Curator(0);
  v117 = *(_QWORD *)(v16 - 8);
  v118 = v16;
  __chkstk_darwin(v16);
  v116 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Composer(0);
  v120 = *(_QWORD *)(v18 - 8);
  v121 = v18;
  __chkstk_darwin(v18);
  v119 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Artist(0);
  v123 = *(_QWORD *)(v20 - 8);
  v124 = v20;
  __chkstk_darwin(v20);
  v122 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Locale(0);
  __chkstk_darwin(v22);
  v125 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for String.LocalizationValue(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v73 - v29;
  v31 = type metadata accessor for Album(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v73 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for GenericMusicItem(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v73 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v36 + 16))(v39, v126, v35, v37);
  v40 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v39, v35);
  if (v40 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v39, v31);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000001103770);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v41 = qword_1581E30;
    v42 = (id)qword_1581E30;
    v43 = v125;
    static Locale.current.getter(v42);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v41, v43, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    return v44;
  }
  if (v40 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v122;
    v45 = v123;
    v47 = v124;
    (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v122, v39, v124);
    v48 = 0xD00000000000001CLL;
    v49 = "Unable to share this artist.";
LABEL_13:
    v55 = (unint64_t)(v49 - 32) | 0x8000000000000000;
LABEL_14:
    String.LocalizationValue.init(stringLiteral:)(v48, v55);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v56 = qword_1581E30;
    v57 = (id)qword_1581E30;
    v58 = v125;
    static Locale.current.getter(v57);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v56, v58, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    return v44;
  }
  if (v40 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v119;
    v45 = v120;
    v47 = v121;
    (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v119, v39, v121);
    v50 = v30;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x80000000011037B0);
    v51 = v27;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v52 = qword_1581E30;
    v53 = (id)qword_1581E30;
    v54 = v125;
    static Locale.current.getter(v53);
    v44 = String.init(localized:table:bundle:locale:comment:)(v51, 0, 0, v52, v54, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v50, v24);
    goto LABEL_17;
  }
  if (v40 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v116;
    v45 = v117;
    v47 = v118;
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v116, v39, v118);
    v48 = 0xD00000000000001DLL;
    v49 = "Unable to share this curator.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v113;
    v45 = v114;
    v47 = v115;
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v39, v115);
    v60 = "Unable to share this genre.";
LABEL_25:
    v55 = (unint64_t)(v60 - 32) | 0x8000000000000000;
    v48 = 0xD00000000000001BLL;
    goto LABEL_14;
  }
  if (v40 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v110;
    v45 = v111;
    v47 = v112;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v110, v39, v112);
    v60 = "Unable to share this movie.";
    goto LABEL_25;
  }
  if (v40 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v108;
    v46 = v107;
    v47 = v109;
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v39, v109);
    v60 = "Unable to share this video.";
    goto LABEL_25;
  }
  if (v40 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v105;
    v46 = v104;
    v47 = v106;
    (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v39, v106);
    v48 = 0xD00000000000001ELL;
    v49 = "Unable to share this playlist.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v102;
    v46 = v101;
    v47 = v103;
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v101, v39, v103);
    v48 = 0xD00000000000001ALL;
    v49 = "Unable to share this show.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v99;
    v46 = v98;
    v47 = v100;
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v39, v100);
    v48 = 0xD000000000000022;
    v49 = "Unable to share this record label.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v96;
    v46 = v95;
    v47 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v39, v97);
    v48 = 0xD00000000000001DLL;
    v49 = "Unable to share this profile.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v93;
    v46 = v92;
    v47 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v92, v39, v94);
    v48 = 0xD00000000000001ALL;
    v49 = "Unable to share this song.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v90;
    v46 = v89;
    v47 = v91;
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v39, v91);
    v48 = 0xD00000000000001DLL;
    v49 = "Unable to share this station.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v84;
    v46 = v83;
    v47 = v85;
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v83, v39, v85);
    v48 = 0xD00000000000001DLL;
    v49 = "Unable to share this episode.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v39, v88);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001CLL, 0x8000000001103940);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v61 = qword_1581E30;
    v62 = (id)qword_1581E30;
    v63 = v125;
    static Locale.current.getter(v62);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v61, v63, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v88);
  }
  else if (v40 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, v39, v82);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000001103870);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v64 = qword_1581E30;
    v65 = (id)qword_1581E30;
    v66 = v125;
    static Locale.current.getter(v65);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v64, v66, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
  }
  else if (v40 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v39, v79);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000001103750);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v67 = qword_1581E30;
    v68 = (id)qword_1581E30;
    v69 = v125;
    static Locale.current.getter(v68);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v67, v69, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v79);
  }
  else if (v40 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v74, v39, v76);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000001103830);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v70 = qword_1581E30;
    v71 = (id)qword_1581E30;
    v72 = v125;
    static Locale.current.getter(v71);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v70, v72, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v76);
  }
  else
  {
    v44 = GenericMusicItem.failureMessage.getter();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v35);
  }
  return v44;
}

uint64_t sub_C055D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FCB24);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_50F8C;
  return GenericMusicItem.shareURL.getter(a1);
}

uint64_t sub_C0562C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C05688, 0, 0);
}

uint64_t sub_C05688()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_14FCB24);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_C056E0;
  return GenericMusicItem.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t sub_C056E0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  return swift_task_switch(sub_C05734, 0, 0);
}

uint64_t sub_C05734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSURL *v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v4);
    v5 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    v1 = *(_QWORD *)(v0 + 32);
  }
  objc_msgSend(*(id *)(v0 + 40), "setOriginalURL:", v5);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C057D8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_14FC880);
  __swift_project_value_buffer(v0, (uint64_t)qword_14FC880);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x676E6972616853, 0xE700000000000000);
}

size_t sub_C0584C(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_C05948(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

char *sub_C05868(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_C05AC4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_C05884(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_C05BB8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_C058A0(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_C05CD4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_C058BC(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_C05E08(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_C058D8(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_C05F08(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_C058F4(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_C06028(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_C05910(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_C06120(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

size_t sub_C0592C(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_C06218(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

size_t sub_C05948(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC28);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = _swift_stdlib_malloc_size_0(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v15 + v19;
  v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v20, v21);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v20);
  }
  swift_release(a4);
  return (size_t)v15;
}

char *sub_C05AC4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBEA8);
    v11 = (char *)swift_allocObject(v10, 2 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 31;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = v13 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[2 * v8])
      memmove(v14, v15, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 2 * v8);
  }
  swift_release(a4);
  return v11;
}

char *sub_C05BB8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_release();
  return v11;
}

_QWORD *sub_C05CD4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1501800);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[5 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_release(a4);
  return v11;
}

char *sub_C05E08(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_release(a4);
  return v11;
}

_QWORD *sub_C05F08(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF38);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_release(a4);
  return v11;
}

char *sub_C06028(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBEA0);
    v11 = (char *)swift_allocObject(v10, 4 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v8])
      memmove(v14, v15, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 4 * v8);
  }
  swift_release();
  return v11;
}

char *sub_C06120(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBEF0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 32 * v8);
  }
  swift_release(a4);
  return v11;
}

size_t sub_C06218(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBE98);
  v11 = *(_QWORD *)(type metadata accessor for SharePlayTogetherSession.Participant(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = _swift_stdlib_malloc_size_0(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v15 + v19;
  v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v20, v21);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v20);
  }
  swift_release();
  return (size_t)v15;
}

uint64_t sub_C0638C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, unint64_t (**a5)()@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t (*v19)();
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  unint64_t (*v29)();
  unint64_t (*v30)();
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 v35[2];
  __int128 v36[2];
  __int128 v37[2];
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v33 = a4;
  v34 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - v15;
  sub_55D1C((uint64_t)a1, (uint64_t)v38);
  sub_55D1C((uint64_t)a3, (uint64_t)v37);
  sub_55D1C((uint64_t)a1, (uint64_t)v36);
  v17 = swift_allocObject(&unk_13AD688, 96, 7);
  sub_8B15C(v37, v17 + 16);
  sub_8B15C(v36, v17 + 56);
  sub_5C238(a4, (uint64_t)v16, &qword_14FAFF8);
  sub_55D1C((uint64_t)v38, (uint64_t)v35);
  v18 = swift_allocObject(&unk_13AD6B0, 64, 7);
  *(_QWORD *)(v18 + 16) = a2;
  sub_8B15C(v35, v18 + 24);
  v19 = (unint64_t (*)())swift_allocObject(&unk_13AD6D8, 48, 7);
  *((_QWORD *)v19 + 2) = sub_C06F24;
  *((_QWORD *)v19 + 3) = v18;
  *((_QWORD *)v19 + 4) = &unk_14FCD30;
  *((_QWORD *)v19 + 5) = v17;
  sub_5C238((uint64_t)v16, (uint64_t)v13, &qword_14FAFF8);
  sub_55D1C((uint64_t)v38, (uint64_t)v35);
  v20 = *(unsigned __int8 *)(v11 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_13AD700, v22 + 40, v20 | 7);
  sub_B9FBE0((uint64_t)v13, v23 + v21);
  sub_8B15C(v35, v23 + v22);
  v24 = v39;
  v25 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v25 + 32);
  v27 = swift_retain();
  v28 = v26(v24, v25, v27);
  v30 = v29;
  sub_56024((uint64_t)v16, &qword_14FAFF8);
  __swift_destroy_boxed_opaque_existential_1(v38);
  sub_56024(v33, &qword_14FAFF8);
  __swift_destroy_boxed_opaque_existential_1(v34);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a5 = sub_C06F24;
  a5[1] = (unint64_t (*)())v18;
  a5[2] = (unint64_t (*)())&unk_14FCD38;
  a5[3] = v19;
  a5[4] = (unint64_t (*)())&unk_14FCD40;
  a5[5] = (unint64_t (*)())v23;
  a5[6] = (unint64_t (*)())v28;
  a5[7] = v30;
  return result;
}

uint64_t sub_C0660C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_C06634()
{
  uint64_t v0;

  return sub_BF3F84(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_C06644()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_14FC8AC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_C3150;
  return sub_BF5234(v2, v3, v5, v4);
}

uint64_t sub_C066AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC8BC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_C3150;
  return sub_BF542C(v4, v5);
}

uint64_t sub_C06738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)swift_task_alloc(dword_14FC8DC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_50F8C;
  return sub_BF58DC(v4, v5);
}

uint64_t sub_C067B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of AlbumFilter.id.getter, a2);
}

uint64_t sub_C067C4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ArtistFilter.id.getter, a2);
}

uint64_t sub_C067D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicMovieFilter.id.getter, a2);
}

uint64_t sub_C067DC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicVideoFilter.id.getter, a2);
}

uint64_t sub_C067E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PlaylistFilter.id.getter, a2);
}

uint64_t sub_C067F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SongFilter.id.getter, a2);
}

uint64_t sub_C06800@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of StationFilter.id.getter, a2);
}

uint64_t sub_C0680C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVEpisodeFilter.id.getter, a2);
}

uint64_t sub_C06818@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVSeasonFilter.id.getter, a2);
}

uint64_t sub_C06824@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVShowFilter.id.getter, a2);
}

uint64_t sub_C06830@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedAudioFilter.id.getter, a2);
}

uint64_t sub_C0683C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_2Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedVideoFilter.id.getter, a2);
}

uint64_t sub_C06848(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24(&qword_14FCBB8, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_C06884(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24(&qword_14FC2F0, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialItem, (uint64_t)&protocol conformance descriptor for EditorialItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_C068C0(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24(&qword_14FC2F8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_C068FC(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24(&qword_14FCC50, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_C06938(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24(&qword_14FC300, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_C06974(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24(&qword_14FC308, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_C069B0(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24(&qword_14FC310, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_C069EC(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24(&qword_14FCCC8, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_C06A28(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24(&qword_14FC318, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_C06A64(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24((unint64_t *)&unk_15009A0, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for Actions.Share()
{
  return &type metadata for Actions.Share;
}

uint64_t _s5ShareO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

uint64_t _s5ShareO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v8 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v8;
  v5 = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v4;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v6;
  swift_retain(v3);
  swift_retain(v8);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *_s5ShareO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t _s5ShareO7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease(v8);
  return a1;
}

ValueMetadata *type metadata accessor for Actions.Share.Context()
{
  return &type metadata for Actions.Share.Context;
}

ValueMetadata *type metadata accessor for Actions.ShareLyrics()
{
  return &type metadata for Actions.ShareLyrics;
}

ValueMetadata *type metadata accessor for Actions.ShareLyrics.Context()
{
  return &type metadata for Actions.ShareLyrics.Context;
}

uint64_t sub_C06C90()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_C06CBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FCD2C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return sub_BF3C50(v0 + 16, v0 + 56);
}

uint64_t objectdestroy_5Tm_5()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t objectdestroy_8Tm_4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t objectdestroy_12Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = v0 + v3;
  v6 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    if (*(_QWORD *)(v5 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v7 = v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v7 + *(int *)(v8 + 24);
      v10 = type metadata accessor for URL(0);
      v14 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v9, 1, v10))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = v11 + 40;
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v12, v2 | 7);
}

void Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)();
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t (*v32)();
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t (*v45)();
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 *v55;
  uint64_t (*v56)();
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (**v60)();
  uint64_t v61;

  v57 = a7;
  v58 = a8;
  v59 = a6;
  v60 = a9;
  v54 = a5;
  v55 = a3;
  v52 = a4;
  v61 = a2;
  v12 = *(_QWORD *)(a10 - 8);
  __chkstk_darwin(a1);
  v53 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v47 = (char *)&v46 - v15;
  v17 = v16;
  v51 = v16;
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v46 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v48 = a1;
  v22((char *)&v46 - v20, a1, a10, v19);
  v50 = *(unsigned __int8 *)(v12 + 80);
  v23 = (v50 + 40) & ~v50;
  v24 = v23 + v17;
  v25 = v50 | 7;
  v26 = (uint64_t (*)())swift_allocObject(&unk_13AD750, v24, v50 | 7);
  v56 = v26;
  *((_QWORD *)v26 + 2) = a10;
  *((_QWORD *)v26 + 3) = a11;
  v49 = a11;
  v27 = v61;
  *((_QWORD *)v26 + 4) = v61;
  v46 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v46((char *)v26 + v23, v21, a10);
  v28 = v47;
  ((void (*)(char *, uint64_t, uint64_t))v22)(v47, a1, a10);
  v29 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 47) & 0xFFFFFFFFFFFFFFF8;
  v31 = (v30 + 79) & 0xFFFFFFFFFFFFFFF8;
  v32 = (uint64_t (*)())swift_allocObject(&unk_13AD778, v31 + 40, v25);
  *((_QWORD *)v32 + 2) = a10;
  *((_QWORD *)v32 + 3) = a11;
  *((_QWORD *)v32 + 4) = v27;
  v33 = (char *)v32 + v23;
  v34 = (void (*)(char *, uint64_t, uint64_t))v46;
  v46(v33, v28, a10);
  sub_5C090(v52, (uint64_t)v32 + v29, &qword_14FB068);
  sub_5C090(v54, (uint64_t)v32 + v30, &qword_14FB060);
  sub_8B15C(v55, (uint64_t)v32 + v31);
  v35 = v53;
  v34(v53, v48, a10);
  v36 = (void (*)(char *, char *, uint64_t))v34;
  v37 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = (v38 + 48) & ~v38;
  v40 = (*(_QWORD *)(v37 + 64) + v50 + v39) & ~v50;
  v41 = (uint64_t (*)())swift_allocObject(&unk_13AD7A0, v40 + v51, v25 | v38);
  v42 = v49;
  *((_QWORD *)v41 + 2) = a10;
  *((_QWORD *)v41 + 3) = v42;
  v43 = v58;
  *((_QWORD *)v41 + 4) = v57;
  *((_QWORD *)v41 + 5) = v43;
  sub_5C090(v59, (uint64_t)v41 + v39, &qword_14FAFF8);
  v36((char *)v41 + v40, v35, a10);
  swift_retain(v61);
  v44 = v60;
  v45 = v56;
  *v60 = sub_C07AE0;
  v44[1] = v45;
  v44[2] = (uint64_t (*)())&unk_14FCD50;
  v44[3] = v32;
  v44[4] = (uint64_t (*)())&unk_14FCD60;
  v44[5] = v41;
}

uint64_t static Actions.Favorite.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8C18(a1, 10, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FCD68, (uint64_t)&unk_14FCD70, a2);
}

void Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)();
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t (*v32)();
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t (*v45)();
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 *v55;
  uint64_t (*v56)();
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (**v60)();
  uint64_t v61;

  v57 = a7;
  v58 = a8;
  v59 = a6;
  v60 = a9;
  v54 = a5;
  v55 = a3;
  v52 = a4;
  v61 = a2;
  v12 = *(_QWORD *)(a10 - 8);
  __chkstk_darwin(a1);
  v53 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v47 = (char *)&v46 - v15;
  v17 = v16;
  v51 = v16;
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v46 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v48 = a1;
  v22((char *)&v46 - v20, a1, a10, v19);
  v50 = *(unsigned __int8 *)(v12 + 80);
  v23 = (v50 + 40) & ~v50;
  v24 = v23 + v17;
  v25 = v50 | 7;
  v26 = (uint64_t (*)())swift_allocObject(&unk_13AD7C8, v24, v50 | 7);
  v56 = v26;
  *((_QWORD *)v26 + 2) = a10;
  *((_QWORD *)v26 + 3) = a11;
  v49 = a11;
  v27 = v61;
  *((_QWORD *)v26 + 4) = v61;
  v46 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v46((char *)v26 + v23, v21, a10);
  v28 = v47;
  ((void (*)(char *, uint64_t, uint64_t))v22)(v47, a1, a10);
  v29 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 47) & 0xFFFFFFFFFFFFFFF8;
  v31 = (v30 + 79) & 0xFFFFFFFFFFFFFFF8;
  v32 = (uint64_t (*)())swift_allocObject(&unk_13AD7F0, v31 + 40, v25);
  *((_QWORD *)v32 + 2) = a10;
  *((_QWORD *)v32 + 3) = a11;
  *((_QWORD *)v32 + 4) = v27;
  v33 = (char *)v32 + v23;
  v34 = (void (*)(char *, uint64_t, uint64_t))v46;
  v46(v33, v28, a10);
  sub_5C090(v52, (uint64_t)v32 + v29, &qword_14FB068);
  sub_5C090(v54, (uint64_t)v32 + v30, &qword_14FB060);
  sub_8B15C(v55, (uint64_t)v32 + v31);
  v35 = v53;
  v34(v53, v48, a10);
  v36 = (void (*)(char *, char *, uint64_t))v34;
  v37 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = (v38 + 48) & ~v38;
  v40 = (*(_QWORD *)(v37 + 64) + v50 + v39) & ~v50;
  v41 = (uint64_t (*)())swift_allocObject(&unk_13AD818, v40 + v51, v25 | v38);
  v42 = v49;
  *((_QWORD *)v41 + 2) = a10;
  *((_QWORD *)v41 + 3) = v42;
  v43 = v58;
  *((_QWORD *)v41 + 4) = v57;
  *((_QWORD *)v41 + 5) = v43;
  sub_5C090(v59, (uint64_t)v41 + v39, &qword_14FAFF8);
  v36((char *)v41 + v40, v35, a10);
  swift_retain(v61);
  v44 = v60;
  v45 = v56;
  *v60 = sub_C094B8;
  v44[1] = v45;
  v44[2] = (uint64_t (*)())&unk_14FCD80;
  v44[3] = v32;
  v44[4] = (uint64_t (*)())&unk_14FCD90;
  v44[5] = v41;
}

uint64_t static Actions.UndoFavorite.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8C18(a1, 55, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FCD98, (uint64_t)&unk_14FCDA0, a2);
}

void Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)()@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, double);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t (*v27)();
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  void (*v31)(uint64_t, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)();
  uint64_t (*v38)();
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t (*v42)();
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (**v46)();
  uint64_t v47;
  uint64_t v48;

  v44 = a3;
  v45 = a4;
  v47 = a1;
  v48 = a2;
  v46 = a7;
  v9 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v43 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v40 = (char *)&v39 - v12;
  v41 = v13;
  v14 = v13;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v39 - v17;
  v19 = *(void (**)(char *, double))(v9 + 16);
  v19((char *)&v39 - v17, v16);
  v20 = *(unsigned __int8 *)(v9 + 80);
  v21 = (v20 + 40) & ~v20;
  v22 = v21 + v14;
  v23 = (uint64_t (*)())swift_allocObject(&unk_13AD840, v22, v20 | 7);
  v42 = v23;
  *((_QWORD *)v23 + 2) = a5;
  *((_QWORD *)v23 + 3) = a6;
  v24 = v48;
  *((_QWORD *)v23 + 4) = v48;
  v39 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v39((char *)v23 + v21, v18, a5);
  v25 = v40;
  ((void (*)(char *, uint64_t, uint64_t))v19)(v40, v47, a5);
  v26 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (uint64_t (*)())swift_allocObject(&unk_13AD868, v26 + 40, v20 | 7);
  *((_QWORD *)v27 + 2) = a5;
  *((_QWORD *)v27 + 3) = a6;
  *((_QWORD *)v27 + 4) = v24;
  v28 = (char *)v27 + v21;
  v29 = (void (*)(char *, uint64_t, uint64_t))v39;
  v39(v28, v25, a5);
  sub_5C090(v44, (uint64_t)v27 + v26, &qword_14FB068);
  v30 = v43;
  v29(v43, v47, a5);
  v31 = (void (*)(uint64_t, char *, uint64_t))v29;
  v32 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = (v33 + 32) & ~v33;
  v35 = (*(_QWORD *)(v32 + 64) + v20 + v34) & ~v20;
  v36 = swift_allocObject(&unk_13AD890, v35 + v41, v20 | 7 | v33);
  *(_QWORD *)(v36 + 16) = a5;
  *(_QWORD *)(v36 + 24) = a6;
  sub_5C090(v45, v36 + v34, &qword_14FAFF8);
  v31(v36 + v35, v30, a5);
  swift_retain(v48);
  v37 = v46;
  v38 = v42;
  *v46 = sub_C0B170;
  v37[1] = v38;
  v37[2] = (uint64_t (*)())&unk_14FCDB0;
  v37[3] = v27;
  v37[4] = (uint64_t (*)())&unk_14FCDC0;
  v37[5] = (uint64_t (*)())v36;
}

uint64_t static Actions.SuggestLess.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8C18(a1, 54, (uint64_t)sub_B9FFF0, (uint64_t)&unk_14FCDC8, (uint64_t)&unk_14FCDD0, a2);
}

void Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t (**a6)()@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t (*v28)();
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (**v35)();
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t (*v42)();
  char *v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;

  v44 = a3;
  v45 = a6;
  v46 = a2;
  v39 = a1;
  v9 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(a1);
  v43 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - v12;
  v15 = v14;
  v41 = v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - v17;
  sub_56024(v19, &qword_14FB068);
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v40(v18, (uint64_t)a1, a4);
  v20 = *(unsigned __int8 *)(v9 + 80);
  v21 = (v20 + 40) & ~v20;
  v22 = v21 + v15;
  v38 = v21 + v15;
  v23 = v20 | 7;
  v24 = (uint64_t (*)())swift_allocObject(&unk_13AD8B8, v22, v20 | 7);
  v42 = v24;
  *((_QWORD *)v24 + 2) = a4;
  *((_QWORD *)v24 + 3) = a5;
  v25 = v46;
  *((_QWORD *)v24 + 4) = v46;
  v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v26((char *)v24 + v21, v18, a4);
  v27 = v39;
  v40(v13, (uint64_t)v39, a4);
  v28 = (uint64_t (*)())swift_allocObject(&unk_13AD8E0, v38, v20 | 7);
  *((_QWORD *)v28 + 2) = a4;
  *((_QWORD *)v28 + 3) = a5;
  *((_QWORD *)v28 + 4) = v25;
  v26((char *)v28 + v21, v13, a4);
  v29 = v43;
  v26(v43, v27, a4);
  v30 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = (*(_QWORD *)(v30 + 64) + v20 + v32) & ~v20;
  v34 = swift_allocObject(&unk_13AD908, v33 + v41, v23 | v31);
  *(_QWORD *)(v34 + 16) = a4;
  *(_QWORD *)(v34 + 24) = a5;
  sub_5C090(v44, v34 + v32, &qword_14FAFF8);
  v26((char *)(v34 + v33), v29, a4);
  swift_retain(v46);
  v35 = v45;
  v36 = v42;
  *v45 = sub_C0BEA4;
  v35[1] = v36;
  v35[2] = (uint64_t (*)())&unk_14FCDE0;
  v35[3] = v28;
  v35[4] = (uint64_t (*)())&unk_14FCDF0;
  v35[5] = (uint64_t (*)())v34;
}

uint64_t static Actions.UndoSuggestLess.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8C18(a1, 56, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FCDF8, (uint64_t)&unk_14FCE00, a2);
}

uint64_t sub_C07974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8CAC(a1, 10, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FCD68, (uint64_t)&unk_14FCD70, a2);
}

uint64_t sub_C07994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8CAC(a1, 55, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FCD98, (uint64_t)&unk_14FCDA0, a2);
}

uint64_t sub_C079B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.FavoriteAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCEE0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.favorite.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.FavoriteAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_C07AEC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_C07AE0()
{
  return sub_C0BEB0((uint64_t (*)(_QWORD, uint64_t))sub_C079B4);
}

uint64_t sub_C07AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, double);
  int v20;
  void (*v21)(char *, char *, uint64_t);
  int v22;
  char *v23;
  unint64_t v24;
  __n128 v25;
  Swift::String v26;
  void *object;
  __n128 v28;
  char *v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  __int16 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  __n128 v41;
  char *v42;
  __n128 v43;
  char *v44;
  Swift::String v45;
  void *v46;
  __n128 v47;
  void (*v48)(char *, uint64_t, __n128);
  char *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v49 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCEE0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v49 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v19((char *)&v49 - v17, v1, v11, v16);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v18, v11);
  if (v20 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v20 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v50 = 0;
      v51 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      v25 = swift_bridgeObjectRelease(v51);
      v50 = 0xD000000000000019;
      v51 = 0x80000000011039C0;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v19)(v14, v1, v11, v25);
      v26._countAndFlagsBits = String.init<A>(describing:)(v14, v11);
      object = v26._object;
      String.append(_:)(v26);
      v28 = swift_bridgeObjectRelease(object);
      v24 = v50;
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v18, v11, v28);
      return v24;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v12 + 96))(v18, v11);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v18, v2);
  v21 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v21(v7, v10, v2);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v7, v2);
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unsupportedType(_:))
  {
LABEL_3:
    v23 = v10;
    v24 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v23, v2);
    return v24;
  }
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.alreadyFavorited(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000011;
  }
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cannotFavoriteWhenDisliked(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD00000000000001DLL;
  }
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000018;
  }
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
  {
    v30 = v10;
    if (qword_14F9D68 != -1)
      swift_once(&qword_14F9D68, sub_C3FD38);
    v31 = static ApplicationCapabilities.Controller.shared;
    KeyPath = swift_getKeyPath(&unk_109D668);
    v33 = swift_getKeyPath(&unk_109D690);
    static Published.subscript.getter(&v50, v31, KeyPath, v33);
    swift_release(KeyPath);
    swift_release(v33);
    v34 = v51;
    v35 = v52;
    v36 = v53;
    v37 = v54;
    v38 = v55;
    v39 = v56;
    v40 = v57;
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v38);

    if ((v34 & 0x100) != 0)
      v24 = 0;
    else
      v24 = 0xD000000000000016;
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v30, v2, v41);
    return v24;
  }
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0;
  }
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.sharedLibrary(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0x6C20646572616853;
  }
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD00000000000001CLL;
  }
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000013;
  }
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.invalidContentType(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000014;
  }
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.networkRequired(_:))
    goto LABEL_3;
  if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000025;
  }
  else
  {
    v42 = v10;
    if (v22 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unknown(_:))
    {
      v24 = 0x206E776F6E6B6E55;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v42, v2);
    }
    else
    {
      v50 = 0;
      v51 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      v43 = swift_bridgeObjectRelease(v51);
      v50 = 0x206E776F6E6B6E55;
      v51 = 0xEF206E6F73616572;
      v44 = v49;
      ((void (*)(char *, char *, uint64_t, __n128))v21)(v49, v42, v2, v43);
      v45._countAndFlagsBits = String.init<A>(describing:)(v44, v2);
      v46 = v45._object;
      String.append(_:)(v45);
      v47 = swift_bridgeObjectRelease(v46);
      v24 = v50;
      v48 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
      v48(v42, v2, v47);
      ((void (*)(char *, uint64_t))v48)(v7, v2);
    }
  }
  return v24;
}

uint64_t sub_C081A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v7[44] = a6;
  v7[45] = a7;
  v7[42] = a4;
  v7[43] = a5;
  v7[40] = a2;
  v7[41] = a3;
  v7[39] = a1;
  v8 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason(0);
  v7[46] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[47] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[48] = swift_task_alloc(v10);
  v7[49] = swift_task_alloc(v10);
  v11 = type metadata accessor for Notice.Variant(0);
  v7[50] = v11;
  v7[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicLibrary.FavoriteAction(0);
  v7[52] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[53] = v13;
  v7[54] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCEE0);
  v7[55] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v7[56] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[57] = swift_task_alloc(v16);
  v7[58] = swift_task_alloc(v16);
  return swift_task_switch(sub_C082AC, 0, 0);
}

uint64_t sub_C082AC(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = *(_QWORD *)(v1 + 464);
  v3 = *(_QWORD *)(v1 + 440);
  v4 = *(_QWORD *)(v1 + 448);
  v5 = *(_QWORD *)(v1 + 432);
  v52 = *(_QWORD *)(v1 + 424);
  v53 = *(_QWORD *)(v1 + 456);
  v6 = *(_QWORD *)(v1 + 416);
  v8 = *(_QWORD *)(v1 + 352);
  v7 = *(_QWORD *)(v1 + 360);
  v9 = *(_QWORD *)(v1 + 320);
  static MusicLibraryAction<>.favorite.getter(a1);
  MusicLibrary.supportedStatus<A, B>(for:action:)(v9, v5, v8, v6, *(_QWORD *)(v7 + 8), &protocol witness table for MusicLibrary.FavoriteAction);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v53, v2, v3);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v53, v3);
  if (v10 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    v11 = *(_QWORD *)(v1 + 456);
    v13 = *(_QWORD *)(v1 + 384);
    v12 = *(_QWORD *)(v1 + 392);
    v14 = *(_QWORD *)(v1 + 368);
    v15 = *(_QWORD *)(v1 + 376);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 448) + 96))(v11, *(_QWORD *)(v1 + 440));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v11, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v13, v14);
    if (v16 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      sub_5C238(*(_QWORD *)(v1 + 336), v1 + 88, &qword_14FB060);
      if (*(_QWORD *)(v1 + 144) != 1)
      {
        sub_648A4(v1 + 88, v1 + 16);
        v37 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v1 + 568) = v37;
        *(_QWORD *)(v1 + 576) = static MainActor.shared.getter(v38);
        v39 = dispatch thunk of Actor.unownedExecutor.getter(v37, &protocol witness table for MainActor);
        v33 = v40;
        *(_QWORD *)(v1 + 584) = v39;
        *(_QWORD *)(v1 + 592) = v40;
        v24 = sub_C08A90;
        v32 = v39;
        return swift_task_switch(v24, v32, v33);
      }
      v17 = *(_QWORD **)(v1 + 344);
      sub_56024(v1 + 88, &qword_14FB060);
      v18 = v17[3];
      *(_QWORD *)(v1 + 528) = v18;
      *(_QWORD *)(v1 + 536) = v17[4];
      *(_QWORD *)(v1 + 544) = __swift_project_boxed_opaque_existential_1(v17, v18);
      v19 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 552) = static MainActor.shared.getter(v20);
      v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
      v23 = v22;
      v24 = sub_C089AC;
LABEL_9:
      v32 = v21;
      v33 = v23;
      return swift_task_switch(v24, v32, v33);
    }
    if (v16 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      v27 = *(_QWORD **)(v1 + 344);
      v28 = v27[3];
      *(_QWORD *)(v1 + 624) = v28;
      *(_QWORD *)(v1 + 632) = v27[4];
      *(_QWORD *)(v1 + 640) = __swift_project_boxed_opaque_existential_1(v27, v28);
      v29 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 648) = static MainActor.shared.getter(v30);
      v21 = dispatch thunk of Actor.unownedExecutor.getter(v29, &protocol witness table for MainActor);
      v23 = v31;
      v24 = sub_C08CB0;
      goto LABEL_9;
    }
    v41 = *(_QWORD *)(v1 + 464);
    v42 = *(_QWORD *)(v1 + 440);
    v43 = *(_QWORD *)(v1 + 448);
    v44 = *(_QWORD *)(v1 + 384);
    v45 = *(_QWORD *)(v1 + 368);
    v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 376) + 8);
    v46(*(_QWORD *)(v1 + 392), v45);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    v46(v44, v45);
  }
  else
  {
    if (v10 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v25 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.favorite<A>(_:)[1]);
      *(_QWORD *)(v1 + 472) = v25;
      *v25 = v1;
      v25[1] = sub_C08678;
      return MusicLibrary.favorite<A>(_:)(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
    }
    v34 = *(_QWORD *)(v1 + 456);
    v35 = *(_QWORD *)(v1 + 440);
    v36 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 448) + 8);
    v36(*(_QWORD *)(v1 + 464), v35);
    v36(v34, v35);
  }
  v47 = *(_QWORD *)(v1 + 456);
  v48 = *(_QWORD *)(v1 + 432);
  v49 = *(_QWORD *)(v1 + 408);
  v51 = *(_QWORD *)(v1 + 384);
  v50 = *(_QWORD *)(v1 + 392);
  swift_task_dealloc(*(_QWORD *)(v1 + 464));
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_C08678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 472);
  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C08E34;
  else
    v3 = sub_C086DC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C086DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t);

  sub_5C238(v0[41], (uint64_t)(v0 + 34), &qword_14FB068);
  v1 = v0[37];
  v0[61] = v1;
  if (v1)
  {
    v3 = v0[50];
    v2 = v0[51];
    v0[62] = v0[38];
    v0[63] = __swift_project_boxed_opaque_existential_1(v0 + 34, v1);
    swift_storeEnumTagMultiPayload(v2, v3, 9);
    v4 = type metadata accessor for MainActor(0);
    v0[64] = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_C087F8, v6, v7);
  }
  else
  {
    sub_56024((uint64_t)(v0 + 34), &qword_14FB068);
    v10 = (uint64_t (*)(uint64_t))((char *)&dword_1503D40 + dword_1503D40);
    v9 = (_QWORD *)swift_task_alloc(unk_1503D44);
    v0[65] = v9;
    *v9 = v0;
    v9[1] = sub_C088D0;
    return v10(v0[42]);
  }
}

uint64_t sub_C087F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[61];
  v1 = v0[62];
  v3 = v0[51];
  swift_release();
  sub_C129EC(v3, 0, v2, v1);
  sub_5C0DC(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_C08868, 0, 0);
}

uint64_t sub_C08868()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  __swift_destroy_boxed_opaque_existential_1(v0 + 34);
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_1503D40 + dword_1503D40);
  v1 = (_QWORD *)swift_task_alloc(unk_1503D44);
  v0[65] = v1;
  *v1 = v0;
  v1[1] = sub_C088D0;
  return v3(v0[42]);
}

uint64_t sub_C088D0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 520));
  return swift_task_switch(sub_C08924, 0, 0);
}

uint64_t sub_C08924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C089AC()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[67];
  swift_release();
  sub_C68C80(5, (uint64_t)(v0 + 27));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[70] = v3;
  *v3 = v0;
  v3[1] = sub_C08A30;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 27, v0[66], v0[67]);
}

uint64_t sub_C08A30()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 560));
  sub_281298(v1);
  return swift_task_switch(sub_C0CAE4, 0, 0);
}

uint64_t sub_C08A90(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[75] = v2;
  v3 = swift_task_alloc(48);
  v1[76] = v3;
  *(_BYTE *)(v3 + 16) = 5;
  *(_QWORD *)(v3 + 24) = v1 + 2;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[77] = v4;
  *v4 = v1;
  v4[1] = sub_C08B54;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 83, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000001103250, sub_C0CAEC, v3, &type metadata for Bool);
}

uint64_t sub_C08B54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 608);
  swift_task_dealloc(*(_QWORD *)(*v0 + 616));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_C08BC4, *(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 592));
}

uint64_t sub_C08BC4()
{
  swift_release();
  return swift_task_switch(sub_C08C00, 0, 0);
}

uint64_t sub_C08C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  sub_56060(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 432);
  v9 = *(_QWORD *)(v0 + 408);
  v11 = *(_QWORD *)(v0 + 384);
  v10 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C08CB0()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[79];
  swift_release();
  sub_C68E74(0, (uint64_t)(v0 + 20));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[82] = v3;
  *v3 = v0;
  v3[1] = sub_C08D34;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 20, v0[78], v0[79]);
}

uint64_t sub_C08D34()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 656));
  sub_281298(v1);
  return swift_task_switch(sub_C08D94, 0, 0);
}

uint64_t sub_C08D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 448);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 8))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 368));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 408);
  v8 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C08E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 408);
  v6 = *(_QWORD *)(v0 + 384);
  v5 = *(_QWORD *)(v0 + 392);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(v2, *(_QWORD *)(v0 + 440));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C08EC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0[4];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + v6;
  v11 = (uint64_t)v0 + v7;
  v12 = (uint64_t)v0 + ((v7 + 79) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)swift_task_alloc(dword_14FCD4C);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_C3150;
  return sub_C081A8(v8, v9, v10, v11, v12, v2, v3);
}

uint64_t sub_C08F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v6[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  v6[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[18] = v10;
  v6[19] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C09034, 0, 0);
}

uint64_t sub_C09034()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void (**)(uint64_t))(v0 + 72);
  if (v1)
    v1(10);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  sub_5C238(*(_QWORD *)(v0 + 88), v4, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 128), &qword_14FAFF8);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v6);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 104);
    sub_2DE5F8(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152));
    *(_QWORD *)(v0 + 160) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 168) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v9);
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 176) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 184) = v15;
    *(_QWORD *)(v0 + 192) = v16;
    *(_WORD *)(v0 + 208) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v19);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_C09208, v20, v21);
  }
}

uint64_t sub_C09208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(uint64_t **)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 17, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_C0CAE8, 0, 0);
}

uint64_t sub_C092DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0[4];
  v8 = v0[5];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_14FCD5C);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_C3150;
  return sub_C08F84(v7, v8, v9, v10, v2, v3);
}

uint64_t sub_C0938C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.UndoFavoriteAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCED8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.undoFavorite.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.UndoFavoriteAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_C094C4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_C094B8()
{
  return sub_C0BEB0((uint64_t (*)(_QWORD, uint64_t))sub_C0938C);
}

uint64_t sub_C094C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, double);
  int v20;
  void (*v21)(char *, char *, uint64_t);
  int v22;
  unint64_t v23;
  __n128 v24;
  Swift::String v25;
  void *object;
  __n128 v27;
  char *v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  __n128 v40;
  char *v41;
  __n128 v42;
  char *v43;
  Swift::String v44;
  void *v45;
  __n128 v46;
  void (*v47)(char *, uint64_t, __n128);
  char *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v48 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCED8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v48 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v19((char *)&v48 - v17, v1, v11, v16);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v18, v11);
  if (v20 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v20 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v49 = 0;
      v50 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      v24 = swift_bridgeObjectRelease(v50);
      v49 = 0xD000000000000019;
      v50 = 0x80000000011039C0;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v19)(v14, v1, v11, v24);
      v25._countAndFlagsBits = String.init<A>(describing:)(v14, v11);
      object = v25._object;
      String.append(_:)(v25);
      v27 = swift_bridgeObjectRelease(object);
      v23 = v49;
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v18, v11, v27);
      return v23;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v12 + 96))(v18, v11);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v18, v2);
  v21 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v21(v7, v10, v2);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v7, v2);
  if (v22 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unsupportedType(_:))
  {
    v23 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return v23;
  }
  if (v22 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.notFavorited(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0x6F76614620746F4ELL;
  }
  if (v22 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000018;
  }
  if (v22 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
  {
    if (v22 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      if (v22 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.sharedLibrary(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0x6C20646572616853;
      }
      else if (v22 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD00000000000001CLL;
      }
      else if (v22 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD000000000000013;
      }
      else if (v22 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.invalidContentType(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD000000000000014;
      }
      else if (v22 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD000000000000025;
      }
      else
      {
        v23 = 0x206E776F6E6B6E55;
        if (v22 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unknown(_:))
        {
          (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        }
        else
        {
          v49 = 0;
          v50 = 0xE000000000000000;
          v41 = v10;
          _StringGuts.grow(_:)(17);
          v42 = swift_bridgeObjectRelease(v50);
          v49 = 0x206E776F6E6B6E55;
          v50 = 0xEF206E6F73616572;
          v43 = v48;
          ((void (*)(char *, char *, uint64_t, __n128))v21)(v48, v41, v2, v42);
          v44._countAndFlagsBits = String.init<A>(describing:)(v43, v2);
          v45 = v44._object;
          String.append(_:)(v44);
          v46 = swift_bridgeObjectRelease(v45);
          v23 = v49;
          v47 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
          v47(v41, v2, v46);
          ((void (*)(char *, uint64_t))v47)(v7, v2);
        }
      }
      return v23;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0;
  }
  v29 = v10;
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v30 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_109D668);
  v32 = swift_getKeyPath(&unk_109D690);
  static Published.subscript.getter(&v49, v30, KeyPath, v32);
  swift_release(KeyPath);
  swift_release(v32);
  v33 = v50;
  v34 = v51;
  v35 = v52;
  v36 = v53;
  v37 = v54;
  v38 = v55;
  v39 = v56;
  swift_bridgeObjectRelease(v57);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v37);

  if ((v33 & 0x100) != 0)
    v23 = 0;
  else
    v23 = 0xD000000000000016;
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v29, v2, v40);
  return v23;
}

uint64_t sub_C09B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v7[44] = a6;
  v7[45] = a7;
  v7[42] = a4;
  v7[43] = a5;
  v7[40] = a2;
  v7[41] = a3;
  v7[39] = a1;
  v8 = type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason(0);
  v7[46] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[47] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[48] = swift_task_alloc(v10);
  v7[49] = swift_task_alloc(v10);
  v11 = type metadata accessor for Notice.Variant(0);
  v7[50] = v11;
  v7[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicLibrary.UndoFavoriteAction(0);
  v7[52] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[53] = v13;
  v7[54] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCED8);
  v7[55] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v7[56] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[57] = swift_task_alloc(v16);
  v7[58] = swift_task_alloc(v16);
  return swift_task_switch(sub_C09C08, 0, 0);
}

uint64_t sub_C09C08(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = *(_QWORD *)(v1 + 464);
  v3 = *(_QWORD *)(v1 + 440);
  v4 = *(_QWORD *)(v1 + 448);
  v5 = *(_QWORD *)(v1 + 432);
  v52 = *(_QWORD *)(v1 + 424);
  v53 = *(_QWORD *)(v1 + 456);
  v6 = *(_QWORD *)(v1 + 416);
  v8 = *(_QWORD *)(v1 + 352);
  v7 = *(_QWORD *)(v1 + 360);
  v9 = *(_QWORD *)(v1 + 320);
  static MusicLibraryAction<>.undoFavorite.getter(a1);
  MusicLibrary.supportedStatus<A, B>(for:action:)(v9, v5, v8, v6, *(_QWORD *)(v7 + 8), &protocol witness table for MusicLibrary.UndoFavoriteAction);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v53, v2, v3);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v53, v3);
  if (v10 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    v11 = *(_QWORD *)(v1 + 456);
    v13 = *(_QWORD *)(v1 + 384);
    v12 = *(_QWORD *)(v1 + 392);
    v14 = *(_QWORD *)(v1 + 368);
    v15 = *(_QWORD *)(v1 + 376);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 448) + 96))(v11, *(_QWORD *)(v1 + 440));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v11, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v13, v14);
    if (v16 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      sub_5C238(*(_QWORD *)(v1 + 336), v1 + 88, &qword_14FB060);
      if (*(_QWORD *)(v1 + 144) != 1)
      {
        sub_648A4(v1 + 88, v1 + 16);
        v37 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v1 + 560) = v37;
        *(_QWORD *)(v1 + 568) = static MainActor.shared.getter(v38);
        v39 = dispatch thunk of Actor.unownedExecutor.getter(v37, &protocol witness table for MainActor);
        v33 = v40;
        *(_QWORD *)(v1 + 576) = v39;
        *(_QWORD *)(v1 + 584) = v40;
        v24 = sub_C0A360;
        v32 = v39;
        return swift_task_switch(v24, v32, v33);
      }
      v17 = *(_QWORD **)(v1 + 344);
      sub_56024(v1 + 88, &qword_14FB060);
      v18 = v17[3];
      *(_QWORD *)(v1 + 520) = v18;
      *(_QWORD *)(v1 + 528) = v17[4];
      *(_QWORD *)(v1 + 536) = __swift_project_boxed_opaque_existential_1(v17, v18);
      v19 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 544) = static MainActor.shared.getter(v20);
      v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
      v23 = v22;
      v24 = sub_C0A27C;
LABEL_9:
      v32 = v21;
      v33 = v23;
      return swift_task_switch(v24, v32, v33);
    }
    if (v16 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      v27 = *(_QWORD **)(v1 + 344);
      v28 = v27[3];
      *(_QWORD *)(v1 + 616) = v28;
      *(_QWORD *)(v1 + 624) = v27[4];
      *(_QWORD *)(v1 + 632) = __swift_project_boxed_opaque_existential_1(v27, v28);
      v29 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 640) = static MainActor.shared.getter(v30);
      v21 = dispatch thunk of Actor.unownedExecutor.getter(v29, &protocol witness table for MainActor);
      v23 = v31;
      v24 = sub_C0A4D0;
      goto LABEL_9;
    }
    v41 = *(_QWORD *)(v1 + 464);
    v42 = *(_QWORD *)(v1 + 440);
    v43 = *(_QWORD *)(v1 + 448);
    v44 = *(_QWORD *)(v1 + 384);
    v45 = *(_QWORD *)(v1 + 368);
    v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 376) + 8);
    v46(*(_QWORD *)(v1 + 392), v45);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    v46(v44, v45);
  }
  else
  {
    if (v10 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v25 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.undoFavorite<A>(_:)[1]);
      *(_QWORD *)(v1 + 472) = v25;
      *v25 = v1;
      v25[1] = sub_C09FD4;
      return MusicLibrary.undoFavorite<A>(_:)(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
    }
    v34 = *(_QWORD *)(v1 + 456);
    v35 = *(_QWORD *)(v1 + 440);
    v36 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 448) + 8);
    v36(*(_QWORD *)(v1 + 464), v35);
    v36(v34, v35);
  }
  v47 = *(_QWORD *)(v1 + 456);
  v48 = *(_QWORD *)(v1 + 432);
  v49 = *(_QWORD *)(v1 + 408);
  v51 = *(_QWORD *)(v1 + 384);
  v50 = *(_QWORD *)(v1 + 392);
  swift_task_dealloc(*(_QWORD *)(v1 + 464));
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_C09FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 472);
  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C08E34;
  else
    v3 = sub_C0A038;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C0A038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_5C238(*(_QWORD *)(v0 + 328), v0 + 272, &qword_14FB068);
  v1 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 488) = v1;
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 400);
    v2 = *(_QWORD *)(v0 + 408);
    *(_QWORD *)(v0 + 496) = *(_QWORD *)(v0 + 304);
    *(_QWORD *)(v0 + 504) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 272), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 10);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 512) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_C0A178, v6, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
    sub_56024(v0 + 272, &qword_14FB068);
    v9 = *(_QWORD *)(v0 + 456);
    v10 = *(_QWORD *)(v0 + 432);
    v11 = *(_QWORD *)(v0 + 408);
    v13 = *(_QWORD *)(v0 + 384);
    v12 = *(_QWORD *)(v0 + 392);
    swift_task_dealloc(*(_QWORD *)(v0 + 464));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C0A178()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[61];
  v1 = v0[62];
  v3 = v0[51];
  swift_release();
  sub_C129EC(v3, 0, v2, v1);
  sub_5C0DC(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_C0A1E8, 0, 0);
}

uint64_t sub_C0A1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 272));
  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C0A27C()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[66];
  swift_release();
  sub_C68C80(5, (uint64_t)(v0 + 27));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[69] = v3;
  *v3 = v0;
  v3[1] = sub_C0A300;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 27, v0[65], v0[66]);
}

uint64_t sub_C0A300()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 552));
  sub_281298(v1);
  return swift_task_switch(sub_C0CAE4, 0, 0);
}

uint64_t sub_C0A360(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[74] = v2;
  v3 = swift_task_alloc(48);
  v1[75] = v3;
  *(_BYTE *)(v3 + 16) = 5;
  *(_QWORD *)(v3 + 24) = v1 + 2;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[76] = v4;
  *v4 = v1;
  v4[1] = sub_C0A424;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 82, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000001103250, sub_BA4D6C, v3, &type metadata for Bool);
}

uint64_t sub_C0A424()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 600);
  swift_task_dealloc(*(_QWORD *)(*v0 + 608));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_C0A494, *(_QWORD *)(v1 + 576), *(_QWORD *)(v1 + 584));
}

uint64_t sub_C0A494()
{
  swift_release();
  return swift_task_switch(sub_C08C00, 0, 0);
}

uint64_t sub_C0A4D0()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[78];
  swift_release();
  sub_C68E74(0, (uint64_t)(v0 + 20));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[81] = v3;
  *v3 = v0;
  v3[1] = sub_C0A554;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 20, v0[77], v0[78]);
}

uint64_t sub_C0A554()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 648));
  sub_281298(v1);
  return swift_task_switch(sub_C08D94, 0, 0);
}

uint64_t objectdestroy_2Tm_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  if (*(_QWORD *)(v0 + v5 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v5));
  v8 = v0 + v6;
  if (*(_QWORD *)(v0 + v6 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v6);
    v9 = *(unsigned __int8 *)(v8 + 48);
    if (v9 != 255)
      sub_626A8(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v9);
    if (*(_QWORD *)(v8 + 56))
      swift_release();
  }
  v10 = (v6 + 79) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 40;
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v11, v3 | 7);
}

uint64_t sub_C0A6A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0[4];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + v6;
  v11 = (uint64_t)v0 + v7;
  v12 = (uint64_t)v0 + ((v7 + 79) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)swift_task_alloc(dword_14FCD7C);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_C3150;
  return sub_C09B04(v8, v9, v10, v11, v12, v2, v3);
}

uint64_t sub_C0A764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v6[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  v6[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[18] = v10;
  v6[19] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C0A814, 0, 0);
}

uint64_t sub_C0A814()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void (**)(uint64_t))(v0 + 72);
  if (v1)
    v1(55);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  sub_5C238(*(_QWORD *)(v0 + 88), v4, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 128), &qword_14FAFF8);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v6);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 104);
    sub_2DE5F8(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152));
    *(_QWORD *)(v0 + 160) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 168) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v9);
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 176) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 184) = v15;
    *(_QWORD *)(v0 + 192) = v16;
    *(_WORD *)(v0 + 208) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v19);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_C0A9E8, v20, v21);
  }
}

uint64_t sub_C0A9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(uint64_t **)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 18, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_C0AAB8, 0, 0);
}

uint64_t sub_C0AAB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_5C0DC(*(_QWORD *)(v0 + 152), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t objectdestroy_6Tm_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  v9 = v0 + v4;
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v0 + v4, 1, v10))
  {
    v20 = v8;
    v21 = v5;
    if (*(_QWORD *)(v9 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v11 = v9 + *(int *)(v10 + 20);
    v12 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v11 + *(int *)(v12 + 24);
      v13 = type metadata accessor for URL(0);
      v17 = *(_QWORD *)(v13 - 8);
      v18 = v13;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v17 + 48))(v19, 1))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v20;
    v5 = v21;
  }
  v14 = (v4 + v5 + v7) & ~v7;
  v15 = v14 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v14, v1);
  return swift_deallocObject(v0, v15, v3 | v7 | 7);
}

uint64_t sub_C0ACE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0[4];
  v8 = v0[5];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_14FCD8C);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_C3150;
  return sub_C0A764(v7, v8, v9, v10, v2, v3);
}

uint64_t Actions.Favorite.Context.menuItemTitle.getter()
{
  return sub_BE88C8(0x657469726F766146, 0xE800000000000000);
}

uint64_t (*Actions.Favorite.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13AD930, 32, 7);
  *(_QWORD *)(v0 + 16) = 1918989427;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_13AD958, 32, 7);
  *(_QWORD *)(v1 + 16) = 1918989427;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_B9FA1C;
}

uint64_t sub_C0AE24(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x657469726F766146, 0xE800000000000000);
}

uint64_t (*sub_C0AE3C())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13ADEC0, 32, 7);
  *(_QWORD *)(v0 + 16) = 1918989427;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_13ADEE8, 32, 7);
  *(_QWORD *)(v1 + 16) = 1918989427;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_B9FF50;
}

uint64_t Actions.UndoFavorite.Context.menuItemTitle.getter()
{
  return sub_BE88C8(0x766146206F646E55, 0xED0000657469726FLL);
}

uint64_t (*Actions.UndoFavorite.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13AD980, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v0 + 24) = 0xEA00000000006873;
  v1 = swift_allocObject(&unk_13AD9A8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v1 + 24) = 0xEA00000000006873;
  return sub_B9FF50;
}

uint64_t sub_C0AF5C(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x766146206F646E55, 0xED0000657469726FLL);
}

uint64_t (*sub_C0AF80())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13ADE70, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v0 + 24) = 0xEA00000000006873;
  v1 = swift_allocObject(&unk_13ADE98, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v1 + 24) = 0xEA00000000006873;
  return sub_B9FF50;
}

uint64_t sub_C0B004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8CAC(a1, 54, (uint64_t)sub_B9FFF0, (uint64_t)&unk_14FCDC8, (uint64_t)&unk_14FCDD0, a2);
}

uint64_t sub_C0B024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BE8CAC(a1, 56, (uint64_t)sub_BE9D60, (uint64_t)&unk_14FCDF8, (uint64_t)&unk_14FCE00, a2);
}

uint64_t sub_C0B044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.DislikeAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCED0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.dislike.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.DislikeAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_C0B17C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_C0B170()
{
  return sub_C0BEB0((uint64_t (*)(_QWORD, uint64_t))sub_C0B044);
}

uint64_t sub_C0B17C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t, double);
  int v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void *object;
  unint64_t v21;
  unint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCED0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v21 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16);
  v14((char *)&v21 - v12, v1, v6, v11);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v13, v6);
  if (v15 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v13, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v13, v2);
    v16 = sub_C0BB04((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v15 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    return 0;
  }
  else
  {
    v21 = 0;
    v22 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    v17 = swift_bridgeObjectRelease(v22);
    v21 = 0xD000000000000019;
    v22 = 0x80000000011039C0;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v14)(v9, v1, v6, v17);
    v18._countAndFlagsBits = String.init<A>(describing:)(v9, v6);
    object = v18._object;
    String.append(_:)(v18);
    swift_bridgeObjectRelease(object);
    v16 = v21;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  return v16;
}

uint64_t sub_C0B36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v9;
  _QWORD *v10;

  v5[7] = a3;
  v9 = type metadata accessor for Notice.Variant(0);
  v5[8] = v9;
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.new_dislike<A>(_:)[1]);
  v5[10] = v10;
  *v10 = v5;
  v10[1] = sub_C0B404;
  return MusicLibrary.new_dislike<A>(_:)(a2, a4, a5);
}

uint64_t sub_C0B404()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (!v0)
    return swift_task_switch(sub_C0B474, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v2 + 72));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_C0B474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  sub_5C238(*(_QWORD *)(v0 + 56), v0 + 16, &qword_14FB068);
  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 88) = v1;
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 104) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 11);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 112) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_C0B564, v6, v7);
  }
  else
  {
    sub_56024(v0 + 16, &qword_14FB068);
    swift_task_dealloc(*(_QWORD *)(v0 + 72));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C0B564()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[9];
  swift_release();
  sub_C129EC(v3, 0, v2, v1);
  sub_5C0DC(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_C0B5D4, 0, 0);
}

uint64_t sub_C0B5D4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C0B610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v6);
  if (*(_QWORD *)(v0 + v5 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 40, v3 | 7);
}

uint64_t sub_C0B690()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0[4];
  v7 = (uint64_t)v0 + v5;
  v8 = (uint64_t)v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)swift_task_alloc(dword_14FCDAC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_50F8C;
  return sub_C0B36C(v6, v7, v8, v2, v3);
}

uint64_t sub_C0B728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C0B7D4, 0, 0);
}

uint64_t sub_C0B7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_5C238(*(_QWORD *)(v0 + 72), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 112), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_2DE5F8(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_C0B994, v19, v20);
  }
}

uint64_t sub_C0B994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 19, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BE9154, 0, 0);
}

uint64_t sub_C0BA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_14FCDBC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_C3150;
  return sub_C0B728(v7, v8, v2, v3);
}

uint64_t sub_C0BB04(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  int v11;
  Swift::String v13;
  void *object;
  uint64_t v15;
  unint64_t v16;

  v2 = 0xD000000000000010;
  v3 = type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v15 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v15 - v8, a1, v3);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.unsupportedType(_:)
    && v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.alreadyDisliked(_:))
  {
    if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cannotDislikeWhenFavorited(_:))
    {
      return 0xD00000000000001DLL;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cannotDislikeWhenLiked(_:))
    {
      return 0xD000000000000019;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.subscriptionRequired(_:))
    {
      return 0xD000000000000015;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      return 0xD000000000000016;
    }
    else if (v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.networkRequired(_:))
    {
      if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.sharedLibrary(_:))
      {
        return 0x6C20646572616853;
      }
      else
      {
        v15 = 0;
        v16 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v16);
        v15 = 0x206E776F6E6B6E55;
        v16 = 0xEF206E6F73616572;
        v10(v7, a1, v3);
        v13._countAndFlagsBits = String.init<A>(describing:)(v7, v3);
        object = v13._object;
        String.append(_:)(v13);
        swift_bridgeObjectRelease(object);
        v2 = v15;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      }
    }
  }
  return v2;
}

uint64_t sub_C0BD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.UndoDislikeAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCEC8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.undoDislike.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.UndoDislikeAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_C0BED4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_C0BEA4()
{
  return sub_C0BEB0((uint64_t (*)(_QWORD, uint64_t))sub_C0BD78);
}

uint64_t sub_C0BEB0(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 32), v1 + ((v2 + 40) & ~v2));
}

uint64_t sub_C0BED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, double);
  int v18;
  uint64_t v19;
  __n128 v20;
  Swift::String v21;
  void *object;
  unint64_t v24;
  unint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.UndoDislikeAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCEC8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v24 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  v17((char *)&v24 - v15, v1, v9, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v16, v9);
  if (v18 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v16, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v16, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    v19 = String.init<A>(describing:)(v5, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else if (v18 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    return 0;
  }
  else
  {
    v24 = 0;
    v25 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    v20 = swift_bridgeObjectRelease(v25);
    v24 = 0xD000000000000019;
    v25 = 0x80000000011039C0;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v17)(v12, v1, v9, v20);
    v21._countAndFlagsBits = String.init<A>(describing:)(v12, v9);
    object = v21._object;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(object);
    v19 = v24;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  }
  return v19;
}

uint64_t sub_C0C0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.new_undoDislike<A>(_:)[1]);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_C3150;
  return MusicLibrary.new_undoDislike<A>(_:)(a2, a3, a4);
}

uint64_t objectdestroyTm_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_C0C1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 40) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_14FCDDC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_C3150;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.new_undoDislike<A>(_:)[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_C3150;
  return MusicLibrary.new_undoDislike<A>(_:)(v5, v2, v3);
}

uint64_t sub_C0C27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C0C328, 0, 0);
}

uint64_t sub_C0C328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_5C238(*(_QWORD *)(v0 + 72), v3, &qword_14FAFF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 112), &qword_14FAFF8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_2DE5F8(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_BC2B0C(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_C0C4E8, v19, v20);
  }
}

uint64_t sub_C0C4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_BC2F1C(v5, v4, 5, 20, v7, v3, v2, v1, v8, v6);
  sub_79B688(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_56024(v7, &qword_14FAC20);
  return swift_task_switch(sub_BE9D68, 0, 0);
}

uint64_t sub_C0C5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_14FCDEC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_C3150;
  return sub_C0C27C(v7, v8, v2, v3);
}

uint64_t Actions.SuggestLess.Context.menuItemTitle.getter()
{
  return sub_BE88C8(0x2074736567677553, 0xEC0000007373654CLL);
}

uint64_t (*Actions.SuggestLess.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13AD9D0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_13AD9F8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_B9FF50;
}

uint64_t sub_C0C704(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x2074736567677553, 0xEC0000007373654CLL);
}

uint64_t (*sub_C0C724())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13ADE20, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_13ADE48, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_B9FF50;
}

uint64_t (*Actions.UndoSuggestLess.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13ADA20, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_13ADA48, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_B9FF50;
}

uint64_t (*sub_C0C840())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13ADDD0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_13ADDF8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_B9FF50;
}

uint64_t _s9MusicCore7ActionsO15UndoSuggestLessO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000000010CEEA0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

ValueMetadata *type metadata accessor for Actions.Favorite()
{
  return &type metadata for Actions.Favorite;
}

ValueMetadata *type metadata accessor for Actions.Favorite.Context()
{
  return &type metadata for Actions.Favorite.Context;
}

ValueMetadata *type metadata accessor for Actions.UndoFavorite()
{
  return &type metadata for Actions.UndoFavorite;
}

ValueMetadata *type metadata accessor for Actions.UndoFavorite.Context()
{
  return &type metadata for Actions.UndoFavorite.Context;
}

ValueMetadata *type metadata accessor for Actions.SuggestLess()
{
  return &type metadata for Actions.SuggestLess;
}

ValueMetadata *type metadata accessor for Actions.SuggestLess.Context()
{
  return &type metadata for Actions.SuggestLess.Context;
}

ValueMetadata *type metadata accessor for Actions.UndoSuggestLess()
{
  return &type metadata for Actions.UndoSuggestLess;
}

ValueMetadata *type metadata accessor for Actions.UndoSuggestLess.Context()
{
  return &type metadata for Actions.UndoSuggestLess.Context;
}

uint64_t sub_C0CAB8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t (*Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))()
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a8;
  v38 = a3;
  v33 = a1;
  v34 = a7;
  v39 = a4;
  v40 = a5;
  v36 = a2;
  v11 = *(_QWORD *)(a6 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(a1);
  v35 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v33 - v15;
  (*(void (**)(char *, double))(v11 + 16))((char *)&v33 - v15, v14);
  v17 = *(unsigned __int8 *)(v11 + 80);
  v18 = (v17 + 48) & ~v17;
  v19 = v17 | 7;
  v20 = (_QWORD *)swift_allocObject(&unk_13ADF30, v18 + v12, v17 | 7);
  v20[2] = a6;
  v20[3] = a7;
  v21 = v37;
  v20[4] = v37;
  v20[5] = a2;
  v22 = (char *)v20 + v18;
  v23 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v23(v22, v16, a6);
  v24 = v35;
  v23(v35, v33, a6);
  v25 = (v17 + 56) & ~v17;
  v26 = (v12 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = (char *)swift_allocObject(&unk_13ADF58, v27 + 72, v19);
  v29 = v34;
  *((_QWORD *)v28 + 2) = a6;
  *((_QWORD *)v28 + 3) = v29;
  v30 = v38;
  *((_QWORD *)v28 + 4) = v21;
  *((_QWORD *)v28 + 5) = v30;
  *((_QWORD *)v28 + 6) = v39;
  v23(&v28[v25], v24, a6);
  v31 = v36;
  *(_QWORD *)&v28[v26] = v36;
  sub_648A4(v40, (uint64_t)&v28[v27]);
  swift_retain(v31);
  return sub_C0D330;
}

double static Actions.RateSong.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  double result;

  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 32) = 38;
  *(_QWORD *)(a5 + 40) = sub_B9FFF0;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = 0x4014000000000000;
  *(_QWORD *)(a5 + 64) = &unk_14FCEF8;
  *(_QWORD *)(a5 + 72) = 0;
  *(_QWORD *)(a5 + 80) = &unk_14FCF00;
  *(_QWORD *)(a5 + 88) = 0;
  swift_retain();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

double sub_C0CD38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = v2;
  *(_BYTE *)(a2 + 32) = 38;
  *(_QWORD *)(a2 + 40) = sub_B9FFF0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0x4014000000000000;
  *(_QWORD *)(a2 + 64) = &unk_14FCEF8;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = &unk_14FCF00;
  *(_QWORD *)(a2 + 88) = 0;
  swift_retain();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t Actions.RateSong.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x6E6F532065746152, 0xAC000000A680E267);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.RateSong.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13ADF80, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000017;
  *(_QWORD *)(v0 + 24) = 0x80000000011024B0;
  v1 = swift_allocObject(&unk_13ADFA8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000017;
  *(_QWORD *)(v1 + 24) = 0x80000000011024B0;
  return sub_B9FA1C;
}

uint64_t (*sub_C0CF9C())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_13AE0A0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000017;
  *(_QWORD *)(v0 + 24) = 0x80000000011024B0;
  v1 = swift_allocObject(&unk_13AE0C8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000017;
  *(_QWORD *)(v1 + 24) = 0x80000000011024B0;
  return sub_B9FF50;
}

unint64_t sub_C0D020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a4;
  v35 = a2;
  v36 = a3;
  v5 = type metadata accessor for MusicLibrary.AddAction(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB098);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MusicLibrary(0);
  v13 = static MusicLibrary.shared.getter();
  v14 = static MusicLibrary.== infix(_:_:)(a1, v13);
  swift_release(v13);
  if ((v14 & 1) == 0)
    return 0xD00000000000001DLL;
  v30 = v6;
  v31 = v5;
  v16 = v35;
  v15 = v36;
  v32 = v10;
  v33 = a1;
  v17 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "BOOLForKey:", v18);

  if (!v19)
    return 0xD000000000000018;
  static MusicLibraryAction<>.add.getter(v20);
  v21 = v31;
  MusicLibrary.supportedStatus<A, B>(for:action:)(v16, v8, v15, v31, v34, &protocol witness table for MusicLibrary.AddAction);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v21);
  v22 = v32;
  v23 = 0xD000000000000011;
  if ((*(unsigned int (**)(char *, uint64_t))(v32 + 88))(v12, v9) == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v12, v9);
    v24 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v12, v24);
    v27 = enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v24);
    if (v26 == v27)
      return 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v9);
  }
  return v23;
}

uint64_t sub_C0D2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_C0D330()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_C0D020(v0[5], (uint64_t)v0 + ((v2 + 48) & ~v2), v1, v0[3]);
}

id NSUserDefaults.showStarRatings.getter()
{
  void *v0;
  NSString v1;
  id v2;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  return v2;
}

uint64_t sub_C0D3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  v9 = *(_QWORD *)(a6 - 8);
  v8[16] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v8[17] = v10;
  v8[18] = swift_task_alloc((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  v8[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  v8[20] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[21] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[22] = swift_task_alloc(v14);
  v8[23] = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  v8[24] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  return swift_task_switch(sub_C0D4A0, v17, v18);
}

uint64_t sub_C0D4A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  NSString v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  void *v30;
  id v31;
  __int128 v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 160);
  swift_release();
  String.LocalizationValue.init(stringLiteral:)(0x7461522072617453, 0xEB00000000676E69);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 152);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, v10, v9, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v11, 0, 1);

  if (qword_14FA560 != -1)
    swift_once(&qword_14FA560, sub_D73CDC);
  v13 = *(_QWORD *)(v0 + 80);
  v14 = *(uint64_t (**)(uint64_t))(v0 + 64);
  swift_bridgeObjectRetain();
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v35 = (id)objc_opt_self(UIAlertAction);
  v16 = objc_msgSend(v35, "actionWithTitle:style:handler:", v15, 1, 0);

  v40 = v16;
  objc_msgSend(v12, "addAction:", v16);
  v17 = (void *)v14(v13);
  v34 = v18;
  v36 = v12;
  if (qword_14FA558 != -1)
    swift_once(&qword_14FA558, sub_D73CA0);
  v37 = *(_QWORD *)(v0 + 184);
  v38 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 144);
  v39 = *(_QWORD *)(v0 + 152);
  v20 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 88);
  v33 = *(_OWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 16))(v19, *(_QWORD *)(v0 + 80), v24);
  v25 = *(unsigned __int8 *)(v20 + 80);
  v26 = (v25 + 64) & ~v25;
  v27 = swift_allocObject(&unk_13AE0F0, v26 + v21, v25 | 7);
  *(_OWORD *)(v27 + 16) = v33;
  *(_QWORD *)(v27 + 32) = v22;
  *(_QWORD *)(v27 + 40) = v17;
  *(_QWORD *)(v27 + 48) = v34;
  *(_QWORD *)(v27 + 56) = v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v27 + v26, v19, v24);
  swift_bridgeObjectRetain();
  v28 = v17;
  swift_retain();
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 48) = sub_C0E10C;
  *(_QWORD *)(v0 + 56) = v27;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_5FEBC;
  *(_QWORD *)(v0 + 40) = &block_descriptor_287;
  v30 = _Block_copy((const void *)(v0 + 16));
  v31 = objc_msgSend(v35, "actionWithTitle:style:handler:", v29, 0, v30, swift_release().n128_f64[0]);
  _Block_release(v30);

  objc_msgSend(v36, "addAction:", v31);
  objc_msgSend(v36, "setPreferredAction:", v31);
  objc_msgSend(v36, "setContentViewController:", v28);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v36, 1, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);

  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C0D8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;
  uint64_t v7;
  int v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = (((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v6);
  swift_release();
  v7 = v0 + v5;
  swift_unknownObjectWeakDestroy(v0 + v5);
  v8 = *(unsigned __int8 *)(v0 + v5 + 48);
  if (v8 != 255)
    sub_626A8(*(id *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), v8);
  if (*(_QWORD *)(v7 + 56))
    swift_release();
  return swift_deallocObject(v0, v5 + 72, v3 | 7);
}

uint64_t sub_C0D990()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0[4];
  v8 = v0[5];
  v9 = v0[6];
  v10 = (uint64_t)v0 + v5;
  v11 = *(_QWORD *)((char *)v0 + v6);
  v12 = (uint64_t)v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)swift_task_alloc(dword_14FCEEC);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_50F8C;
  return sub_C0D3B0(v8, v9, v10, v11, v12, v2, v3, v7);
}

ValueMetadata *type metadata accessor for Actions.RateSong()
{
  return &type metadata for Actions.RateSong;
}

ValueMetadata *type metadata accessor for Actions.RateSong.Context()
{
  return &type metadata for Actions.RateSong.Context;
}

uint64_t sub_C0DA6C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_C0DA90(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;

  v28 = a7;
  v29 = a8;
  v13 = *(_QWORD *)(a6 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(a1);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, a6);
  type metadata accessor for MainActor(0);
  v20 = a2;
  v21 = swift_retain();
  v22 = static MainActor.shared.getter(v21);
  v23 = *(unsigned __int8 *)(v13 + 80);
  v24 = (v23 + 80) & ~v23;
  v25 = (char *)swift_allocObject(&unk_13AE140, v24 + v14, v23 | 7);
  *((_QWORD *)v25 + 2) = v22;
  *((_QWORD *)v25 + 3) = &protocol witness table for MainActor;
  v26 = v28;
  *((_QWORD *)v25 + 4) = a6;
  *((_QWORD *)v25 + 5) = v26;
  *((_QWORD *)v25 + 6) = v29;
  *((_QWORD *)v25 + 7) = v20;
  *((_QWORD *)v25 + 8) = a3;
  *((_QWORD *)v25 + 9) = a4;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v25[v24], v15, a6);
  sub_C51ED8((uint64_t)v18, (uint64_t)&unk_14FCF40, (uint64_t)v25);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_C0DC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v8[8] = v16;
  v8[9] = v17;
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  v9 = *(_QWORD *)(a8 - 8);
  v8[10] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[11] = swift_task_alloc(v10);
  v8[12] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v8[13] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v8[14] = v13;
  v8[15] = v14;
  return swift_task_switch(sub_C0DCC8, v13, v14);
}

uint64_t sub_C0DCC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  double v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = v0[8];
  v2 = v0[4];
  ObjectType = swift_getObjectType();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  v0[16] = v4;
  v5 = (double)v4 / 5.0;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.setUserRating<A>(_:for:)[1]);
  v0[17] = v6;
  v7 = *(_QWORD *)(v1 + 8);
  *v6 = v0;
  v6[1] = sub_C0DD5C;
  return MusicLibrary.setUserRating<A>(_:for:)(v0[6], v0[7], v7, v0[9], v5);
}

uint64_t sub_C0DD5C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C0DDFC;
  else
    v4 = sub_C0DDBC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

uint64_t sub_C0DDBC()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C0DDFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  swift_release();
  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v6, (uint64_t)static Logger.actions);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v2, v5, v4);
  swift_errorRetain(v1);
  v8 = swift_errorRetain(v1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(_QWORD *)(v0 + 144);
  if (v11)
  {
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 96);
    v30 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 56);
    v16 = (double)*(uint64_t *)(v0 + 128) / 5.0;
    v17 = swift_slowAlloc(32, -1);
    v18 = swift_slowAlloc(64, -1);
    v31 = v18;
    *(_DWORD *)v17 = 134349570;
    *(double *)(v17 + 4) = v16;
    *(_WORD *)(v17 + 12) = 2082;
    v7(v14, v13, v15);
    v19 = (char *)String.init<A>(describing:)(v14, v15);
    *(_QWORD *)(v17 + 14) = sub_BA95EC(v19, v20, &v31);
    v21 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v30 + 8))(v13, v15, v21);
    *(_WORD *)(v17 + 22) = 2082;
    *(_QWORD *)(v0 + 16) = v12;
    swift_errorRetain(v12);
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v23 = (char *)String.init<A>(describing:)(v0 + 16, v22);
    *(_QWORD *)(v17 + 24) = sub_BA95EC(v23, v24, &v31);
    swift_bridgeObjectRelease();
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    _os_log_impl(&dword_0, v9, v10, "Failed to set userRating=%{public}f for item=%{public}s with error=%{public}s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v12);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 88);
    v27 = *(_QWORD *)(v0 + 56);
    swift_errorRelease(*(_QWORD *)(v0 + 144));
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    swift_errorRelease(v12);
    swift_errorRelease(v12);

  }
  v28 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C0E098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_C0E10C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_C0DA90(a1, *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v1 + ((v3 + 64) & ~v3), v2, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t block_copy_helper_283(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_283(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_C0E148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 80) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_C0E1C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v3 = v1[4];
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[7];
  v8 = v1[8];
  v9 = v1[9];
  v10 = (uint64_t)v1 + ((v4 + 80) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_14FCF3C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_50F8C;
  return sub_C0DC1C(a1, v5, v6, v7, v8, v9, v10, v3);
}

void static Notice.variant(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  char *v18;
  _QWORD v19[14];

  v2 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDF0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48);
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  v19[10] = (char *)v19 - v8;
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v19[7] = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  v19[8] = *(_QWORD *)(v11 - 8);
  v19[9] = v11;
  __chkstk_darwin(v11);
  v19[6] = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v14 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(a1, (uint64_t)v16, v17);
  v18 = (char *)sub_C0E4AC + 4 * word_109D718[swift_getEnumCaseMultiPayload(v16, v14)];
  __asm { BR              X10 }
}

uint64_t sub_C0E4AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void (*v18)(_QWORD *, uint64_t, uint64_t, uint64_t);
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)(v8 - 112) = *v4;
  *(_QWORD *)(v8 - 152) = v4[1];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF60);
  v10 = *(_QWORD *)((char *)v4 + *(int *)(v9 + 64));
  sub_C10488((uint64_t)v4 + *(int *)(v9 + 48), v5);
  Notice.Variant.id.getter();
  *(_QWORD *)(v8 - 168) = v12;
  *(_QWORD *)(v8 - 160) = v11;
  sub_5C238(v5, v2, &qword_14FEDF0);
  v13 = type metadata accessor for Artwork(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v2, 1, v13) == 1)
  {
    sub_56024(v2, &qword_14FEDF0);
    v15 = type metadata accessor for Notice.Thumbnail(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v1, 1, 1, v15);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v1, v2, v13);
    v15 = type metadata accessor for Notice.Thumbnail(0);
    swift_storeEnumTagMultiPayload(v1, v15, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v1, 0, 1, v15);
  }
  type metadata accessor for Notice.Thumbnail(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v1, 1, v15);
  *(_QWORD *)(v8 - 176) = v15;
  if (v17 == 1)
  {
    *v6 = Image.init(_internalSystemName:)(0x6461622E74786574, 0xEF73756C702E6567);
    swift_storeEnumTagMultiPayload(v6, v15, 0);
    v18 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v18(v6, 0, 1, v15);
    sub_56024(v1, &qword_14FCF48);
  }
  else
  {
    sub_C104D0(v1, (uint64_t)v6);
    v18 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v18(v6, 0, 1, v15);
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
  *(_QWORD *)(v8 - 96) = v10;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v8 - 96, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v20._countAndFlagsBits = 0x297328676E6F7320;
  v20._object = (void *)0xEE00646564646120;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
  String.LocalizationValue.init(stringInterpolation:)(v7);
  v22 = *(_QWORD *)(v8 - 128);
  v21 = *(_QWORD *)(v8 - 120);
  v23 = *(_QWORD *)(v8 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v23, v3, v21);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v24 = qword_1581E30;
  v25 = (id)qword_1581E30;
  v26 = *(_QWORD *)(v8 - 136);
  static Locale.current.getter(v25);
  v27 = String.init(localized:table:bundle:locale:comment:)(v23, 0, 0, v24, v26, 0, 0, 256);
  *(_QWORD *)(v8 - 144) = v28;
  *(_QWORD *)(v8 - 136) = v27;
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v3, v21);
  v29 = (int *)type metadata accessor for Notice(0);
  v30 = (uint64_t)v0 + v29[5];
  v18((_QWORD *)v30, 1, 1, *(_QWORD *)(v8 - 176));
  v31 = (_QWORD *)((char *)v0 + v29[7]);
  *v31 = 0;
  v31[1] = 0;
  v32 = (_QWORD *)((char *)v0 + v29[8]);
  *v32 = 0;
  v32[1] = 0;
  v33 = (char *)v0 + v29[9];
  *(_QWORD *)v33 = 0;
  v33[8] = 1;
  v34 = v29[10];
  *((_BYTE *)v0 + v34) = 1;
  v35 = *(_QWORD *)(v8 - 168);
  *v0 = *(_QWORD *)(v8 - 160);
  v0[1] = v35;
  sub_C103D0((uint64_t)v6, v30);
  v36 = (_QWORD *)((char *)v0 + v29[6]);
  v37 = *(_QWORD *)(v8 - 152);
  *v36 = *(_QWORD *)(v8 - 112);
  v36[1] = v37;
  swift_bridgeObjectRelease(v31[1]);
  v38 = *(_QWORD *)(v8 - 144);
  *v31 = *(_QWORD *)(v8 - 136);
  v31[1] = v38;
  sub_5C198(*v32, v32[1]);
  *v32 = 0;
  v32[1] = 0;
  *(_QWORD *)v33 = 0;
  v33[8] = 0;
  *((_BYTE *)v0 + v34) = 1;
  return sub_56024(v5, &qword_14FEDF0);
}

uint64_t Notice.thumbnail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Notice(0);
  return sub_5C238(v1 + *(int *)(v3 + 20), a1, &qword_14FCF48);
}

uint64_t Notice.thumbnail.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Notice(0) + 20);
  return sub_C103D0(a1, v3);
}

double (*Notice.thumbnail.modify())(double)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Notice(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

void Notice.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Notice(0) + 24));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*Notice.message.modify())(double)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.headnote.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Notice(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

void Notice.headnote.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Notice(0) + 28));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*Notice.headnote.modify())(double)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.link.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Notice(0) + 32));
  v2 = *v1;
  sub_A9DEC(*v1, v1[1]);
  return v2;
}

uint64_t Notice.link.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for Notice(0) + 32));
  result = sub_5C198(*v5, v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

double (*Notice.link.modify())(double)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.hapticFeedback.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Notice(0) + 36));
}

uint64_t Notice.hapticFeedback.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for Notice(0);
  v6 = v2 + *(int *)(result + 36);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

double (*Notice.hapticFeedback.modify())(double)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.isDismissable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Notice(0) + 40));
}

uint64_t Notice.isDismissable.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Notice(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

double (*Notice.isDismissable.modify())(double)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.init(id:image:message:headnote:link:hapticFeedback:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(_QWORD *, uint64_t, uint64_t, uint64_t);
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;

  v41 = a8;
  v35 = a5;
  v36 = a6;
  v33 = a2;
  v34 = a4;
  v40 = a12;
  v38 = a7;
  v39 = a11;
  v37 = a10;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v17 = a3;
  v18 = type metadata accessor for Notice.Thumbnail(0);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  v19 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v17, 0, 1, v18);
  v20 = (int *)type metadata accessor for Notice(0);
  v21 = (uint64_t)a9 + v20[5];
  v19((_QWORD *)v21, 1, 1, v18);
  v22 = (_QWORD *)((char *)a9 + v20[7]);
  *v22 = 0;
  v22[1] = 0;
  v23 = (_QWORD *)((char *)a9 + v20[8]);
  *v23 = 0;
  v23[1] = 0;
  v24 = (char *)a9 + v20[9];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  v25 = v20[10];
  *((_BYTE *)a9 + v25) = 1;
  v26 = v33;
  *a9 = a1;
  a9[1] = v26;
  sub_C103D0((uint64_t)v17, v21);
  v27 = (_QWORD *)((char *)a9 + v20[6]);
  v28 = v35;
  *v27 = v34;
  v27[1] = v28;
  swift_bridgeObjectRelease();
  v29 = v38;
  *v22 = v36;
  v22[1] = v29;
  result = sub_5C198(*v23, v23[1]);
  v31 = v37;
  *v23 = v41;
  v23[1] = v31;
  *(_QWORD *)v24 = v39;
  v24[8] = v40 & 1;
  *((_BYTE *)a9 + v25) = 1;
  return result;
}

uint64_t Notice.init(id:thumbnail:message:headnote:link:hapticFeedback:isDismissable:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, char a12, char a13)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;

  v16 = (int *)type metadata accessor for Notice(0);
  v17 = (uint64_t)a9 + v16[5];
  v18 = type metadata accessor for Notice.Thumbnail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)((char *)a9 + v16[7]);
  *v19 = 0;
  v19[1] = 0;
  v20 = (_QWORD *)((char *)a9 + v16[8]);
  *v20 = 0;
  v20[1] = 0;
  v21 = (char *)a9 + v16[9];
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  v22 = v16[10];
  *((_BYTE *)a9 + v22) = 1;
  *a9 = a1;
  a9[1] = a2;
  sub_C103D0(a3, v17);
  v23 = (_QWORD *)((char *)a9 + v16[6]);
  *v23 = a4;
  v23[1] = a5;
  swift_bridgeObjectRelease();
  *v19 = a6;
  v19[1] = a7;
  result = sub_5C198(*v20, v20[1]);
  *v20 = a8;
  v20[1] = a10;
  *(_QWORD *)v21 = a11;
  v21[8] = a12 & 1;
  *((_BYTE *)a9 + v22) = a13;
  return result;
}

uint64_t Notice.init(id:symbol:message:headnote:link:hapticFeedback:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(_QWORD *, uint64_t, uint64_t, uint64_t);
  int *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;

  v36 = a5;
  v37 = a6;
  v35 = a2;
  v43 = a13;
  v41 = a12;
  v42 = a8;
  v39 = a11;
  v40 = a7;
  v38 = a10;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v19 = Image.init(_internalSystemName:)(a3, a4);
  v20 = type metadata accessor for Notice.Thumbnail(0);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  v21 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v19, 0, 1, v20);
  v22 = (int *)type metadata accessor for Notice(0);
  v23 = (uint64_t)a9 + v22[5];
  v21((_QWORD *)v23, 1, 1, v20);
  v24 = (_QWORD *)((char *)a9 + v22[7]);
  *v24 = 0;
  v24[1] = 0;
  v25 = (_QWORD *)((char *)a9 + v22[8]);
  *v25 = 0;
  v25[1] = 0;
  v26 = (char *)a9 + v22[9];
  *(_QWORD *)v26 = 0;
  v26[8] = 1;
  v27 = v22[10];
  *((_BYTE *)a9 + v27) = 1;
  v28 = v35;
  *a9 = a1;
  a9[1] = v28;
  sub_C103D0((uint64_t)v19, v23);
  v29 = (_QWORD *)((char *)a9 + v22[6]);
  v30 = v37;
  *v29 = v36;
  v29[1] = v30;
  swift_bridgeObjectRelease(v24[1]);
  v31 = v42;
  *v24 = v40;
  v24[1] = v31;
  result = sub_5C198(*v25, v25[1]);
  v33 = v39;
  *v25 = v38;
  v25[1] = v33;
  *(_QWORD *)v26 = v41;
  v26[8] = v43 & 1;
  *((_BYTE *)a9 + v27) = 1;
  return result;
}

uint64_t Notice.withLink(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  sub_5BDB8(v3, a3, type metadata accessor for Notice);
  v7 = (uint64_t *)(a3 + *(int *)(type metadata accessor for Notice(0) + 32));
  v8 = *v7;
  v9 = v7[1];
  swift_retain();
  result = sub_5C198(v8, v9);
  *v7 = a1;
  v7[1] = a2;
  return result;
}

void Notice.Variant.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = v0;
  v2 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(v1, (uint64_t)v4, v5);
  v6 = (char *)sub_C0FF18 + 4 * byte_109D732[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_C0FF18()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 8));
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF60);
  sub_56024(v0 + *(int *)(v1 + 48), &qword_14FEDF0);
  return 0x506F546465646461;
}

uint64_t type metadata accessor for Notice.Variant(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14FD130, (uint64_t)&nominal type descriptor for Notice.Variant);
}

uint64_t sub_C100E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  void *v16;
  id v17;
  NSURL *v18;
  void *v19;
  void *v20;
  unsigned int v21;
  id v22;
  NSURL *v23;
  void *v24;
  void *v25;
  unint64_t v26;
  Class isa;
  uint64_t v29;
  char *v30;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  if (a2)
  {
    v13 = a2;
  }
  else
  {
    a1 = 0xD000000000000010;
    v13 = 0x8000000001103C40;
  }
  swift_bridgeObjectRetain();
  v14 = sub_C26648((uint64_t)_swiftEmptyArrayStorage);
  sub_C81E20(a1, v13, 0xD000000000000032, 0x8000000001103C60, (uint64_t)_swiftEmptyArrayStorage, v14, (uint64_t)_swiftEmptyArrayStorage, 1, (uint64_t)v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);
  sub_5C238((uint64_t)v12, (uint64_t)v9, &qword_14FAC20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
  {
    sub_56024((uint64_t)v12, &qword_14FAC20);
  }
  else
  {
    v15 = v30;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v30, v9, v4);
    v16 = (void *)objc_opt_self(UIApplication);
    v17 = objc_msgSend(v16, "sharedApplication");
    URL._bridgeToObjectiveC()(v18);
    v20 = v19;
    v21 = objc_msgSend(v17, "canOpenURL:", v19);

    if (v21)
    {
      v22 = objc_msgSend(v16, "sharedApplication");
      URL._bridgeToObjectiveC()(v23);
      v25 = v24;
      v26 = sub_C26514((uint64_t)_swiftEmptyArrayStorage);
      _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
      sub_C129A4();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v22, "openURL:options:completionHandler:", v25, isa, 0, swift_bridgeObjectRelease(v26).n128_f64[0]);

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
    v9 = v12;
  }
  return sub_56024((uint64_t)v9, &qword_14FAC20);
}

uint64_t type metadata accessor for Notice.Thumbnail(uint64_t a1)
{
  return sub_6345C(a1, qword_14FD088, (uint64_t)&nominal type descriptor for Notice.Thumbnail);
}

uint64_t type metadata accessor for Notice(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14FCFC0, (uint64_t)&nominal type descriptor for Notice);
}

uint64_t sub_C103D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_C10418()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C1043C()
{
  uint64_t v0;

  return sub_C100E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_C10444()
{
  unint64_t result;

  result = qword_14FCF58;
  if (!qword_14FCF58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_14FCF58);
  }
  return result;
}

uint64_t sub_C10488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_C104D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Notice.Thumbnail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s9MusicCore6NoticeV9ThumbnailO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int EnumCaseMultiPayload;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = type metadata accessor for Artwork(0);
  v4 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Notice.Thumbnail(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v25 - v11);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD178);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v15[*(int *)(v16 + 48)];
  sub_5BDB8(a1, (uint64_t)v15, type metadata accessor for Notice.Thumbnail);
  sub_5BDB8(a2, (uint64_t)v17, type metadata accessor for Notice.Thumbnail);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v7);
  if (!EnumCaseMultiPayload)
  {
    sub_5BDB8((uint64_t)v15, (uint64_t)v12, type metadata accessor for Notice.Thumbnail);
    v23 = *v12;
    if (!swift_getEnumCaseMultiPayload(v17, v7))
    {
      v21 = static Image.== infix(_:_:)(v23, *(_QWORD *)v17);
      swift_release();
      swift_release();
      goto LABEL_12;
    }
    swift_release();
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_5BDB8((uint64_t)v15, (uint64_t)v9, type metadata accessor for Notice.Thumbnail);
    if (swift_getEnumCaseMultiPayload(v17, v7) == 1)
    {
      v19 = v17;
      v20 = v26;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v19, v26);
      v21 = static Artwork.== infix(_:_:)(v9, v6);
      v22 = *(void (**)(char *, uint64_t))(v4 + 8);
      v22(v6, v20);
      v22(v9, v20);
LABEL_12:
      sub_5C0DC((uint64_t)v15, type metadata accessor for Notice.Thumbnail);
      return v21 & 1;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v26);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload(v17, v7) != 2)
  {
LABEL_10:
    sub_56024((uint64_t)v15, &qword_14FD178);
    v21 = 0;
    return v21 & 1;
  }
  sub_5C0DC((uint64_t)v15, type metadata accessor for Notice.Thumbnail);
  v21 = 1;
  return v21 & 1;
}

uint64_t _s9MusicCore6NoticeV2eeoiySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  _QWORD *v80;
  uint64_t v81;

  v4 = type metadata accessor for Notice.Thumbnail(0);
  v74 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  __chkstk_darwin(v4);
  v72 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48);
  __chkstk_darwin(v6);
  v73 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD170);
  __chkstk_darwin(v8);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for Notice(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v81 = (uint64_t)&v72 - v15;
  __chkstk_darwin(v16);
  v78 = (char *)&v72 - v17;
  __chkstk_darwin(v18);
  v79 = (char *)&v72 - v19;
  __chkstk_darwin(v20);
  v77 = (uint64_t)&v72 - v21;
  __chkstk_darwin(v22);
  v76 = (uint64_t)&v72 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v72 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v72 - v28;
  v30 = *a1;
  v31 = a1[1];
  v32 = *a2;
  v33 = a2[1];
  v34 = *a1 == *a2;
  v80 = a2;
  if (v34 && v31 == v33)
  {
    sub_5BDB8((uint64_t)a1, (uint64_t)&v72 - v28, type metadata accessor for Notice);
    sub_5BDB8((uint64_t)a2, (uint64_t)v26, type metadata accessor for Notice);
  }
  else
  {
    v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, v32, v33, 0);
    sub_5BDB8((uint64_t)a1, (uint64_t)v29, type metadata accessor for Notice);
    sub_5BDB8((uint64_t)a2, (uint64_t)v26, type metadata accessor for Notice);
    if ((v35 & 1) == 0)
    {
      sub_5C0DC((uint64_t)v26, type metadata accessor for Notice);
      sub_5C0DC((uint64_t)v29, type metadata accessor for Notice);
      goto LABEL_13;
    }
  }
  v36 = v11[5];
  v37 = (uint64_t)&v26[v36];
  v38 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_5C238((uint64_t)&v29[v36], (uint64_t)v10, &qword_14FCF48);
  sub_5C238(v37, v38, &qword_14FCF48);
  v39 = v75;
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  if (v40((uint64_t)v10, 1, v75) != 1)
  {
    v46 = v73;
    sub_5C238((uint64_t)v10, v73, &qword_14FCF48);
    if (v40(v38, 1, v39) != 1)
    {
      v49 = v38;
      v50 = v72;
      sub_C104D0(v49, v72);
      v51 = _s9MusicCore6NoticeV9ThumbnailO21__derived_enum_equalsySbAE_AEtFZ_0(v46, v50);
      sub_5C0DC(v50, type metadata accessor for Notice.Thumbnail);
      sub_5C0DC((uint64_t)v26, type metadata accessor for Notice);
      sub_5C0DC((uint64_t)v29, type metadata accessor for Notice);
      sub_5C0DC(v46, type metadata accessor for Notice.Thumbnail);
      sub_56024((uint64_t)v10, &qword_14FCF48);
      v41 = v76;
      sub_5BDB8((uint64_t)a1, v76, type metadata accessor for Notice);
      v42 = (uint64_t)v80;
      v43 = v77;
      sub_5BDB8((uint64_t)v80, v77, type metadata accessor for Notice);
      v45 = (uint64_t)v78;
      v44 = (uint64_t)v79;
      if ((v51 & 1) != 0)
        goto LABEL_20;
LABEL_14:
      sub_5C0DC(v41, type metadata accessor for Notice);
      sub_5C0DC(v43, type metadata accessor for Notice);
      sub_5BDB8((uint64_t)a1, v44, type metadata accessor for Notice);
      sub_5BDB8(v42, v45, type metadata accessor for Notice);
      goto LABEL_15;
    }
    sub_5C0DC((uint64_t)v26, type metadata accessor for Notice);
    sub_5C0DC((uint64_t)v29, type metadata accessor for Notice);
    sub_5C0DC(v46, type metadata accessor for Notice.Thumbnail);
    goto LABEL_11;
  }
  sub_5C0DC((uint64_t)v26, type metadata accessor for Notice);
  sub_5C0DC((uint64_t)v29, type metadata accessor for Notice);
  if (v40(v38, 1, v39) != 1)
  {
LABEL_11:
    sub_56024((uint64_t)v10, &qword_14FD170);
LABEL_13:
    v44 = (uint64_t)v79;
    v42 = (uint64_t)v80;
    v43 = v77;
    v45 = (uint64_t)v78;
    v41 = v76;
    sub_5BDB8((uint64_t)a1, v76, type metadata accessor for Notice);
    sub_5BDB8(v42, v43, type metadata accessor for Notice);
    goto LABEL_14;
  }
  sub_56024((uint64_t)v10, &qword_14FCF48);
  v41 = v76;
  sub_5BDB8((uint64_t)a1, v76, type metadata accessor for Notice);
  v42 = (uint64_t)v80;
  v43 = v77;
  sub_5BDB8((uint64_t)v80, v77, type metadata accessor for Notice);
  v45 = (uint64_t)v78;
  v44 = (uint64_t)v79;
LABEL_20:
  v52 = v11[6];
  v53 = *(_QWORD *)(v41 + v52);
  v54 = *(_QWORD *)(v41 + v52 + 8);
  v55 = (_QWORD *)(v43 + v52);
  v56 = v55[1];
  if (v53 == *v55 && v54 == v56)
  {
    sub_5C0DC(v41, type metadata accessor for Notice);
    sub_5C0DC(v43, type metadata accessor for Notice);
    sub_5BDB8((uint64_t)a1, v44, type metadata accessor for Notice);
    sub_5BDB8(v42, v45, type metadata accessor for Notice);
    goto LABEL_24;
  }
  v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, *v55, v56, 0);
  sub_5C0DC(v41, type metadata accessor for Notice);
  sub_5C0DC(v43, type metadata accessor for Notice);
  sub_5BDB8((uint64_t)a1, v44, type metadata accessor for Notice);
  sub_5BDB8(v42, v45, type metadata accessor for Notice);
  if ((v57 & 1) == 0)
  {
LABEL_15:
    sub_5C0DC(v45, type metadata accessor for Notice);
    sub_5C0DC(v44, type metadata accessor for Notice);
LABEL_16:
    sub_5BDB8((uint64_t)a1, v81, type metadata accessor for Notice);
    sub_5BDB8(v42, (uint64_t)v13, type metadata accessor for Notice);
    goto LABEL_17;
  }
LABEL_24:
  v58 = (uint64_t)v13;
  v59 = v11;
  v60 = v11[7];
  v61 = (_QWORD *)(v44 + v60);
  v62 = *(_QWORD *)(v44 + v60 + 8);
  v63 = (_QWORD *)(v45 + v60);
  v64 = v63[1];
  if (!v62)
  {
    swift_bridgeObjectRetain();
    sub_5C0DC(v45, type metadata accessor for Notice);
    sub_5C0DC(v44, type metadata accessor for Notice);
    if (!v64)
      goto LABEL_30;
    goto LABEL_32;
  }
  if (!v64)
  {
    swift_bridgeObjectRetain();
    sub_5C0DC(v45, type metadata accessor for Notice);
    sub_5C0DC(v44, type metadata accessor for Notice);
LABEL_32:
    swift_bridgeObjectRelease();
    v13 = (char *)v58;
    goto LABEL_16;
  }
  if (*v61 == *v63 && v62 == v64)
  {
    swift_bridgeObjectRetain();
    sub_5C0DC(v45, type metadata accessor for Notice);
    sub_5C0DC(v44, type metadata accessor for Notice);
    swift_bridgeObjectRelease();
LABEL_30:
    sub_5BDB8((uint64_t)a1, v81, type metadata accessor for Notice);
    v13 = (char *)v58;
    sub_5BDB8(v42, v58, type metadata accessor for Notice);
    goto LABEL_34;
  }
  v65 = _stringCompareWithSmolCheck(_:_:expecting:)(*v61, v62, *v63, v63[1], 0);
  swift_bridgeObjectRetain();
  sub_5C0DC(v45, type metadata accessor for Notice);
  sub_5C0DC(v44, type metadata accessor for Notice);
  swift_bridgeObjectRelease();
  sub_5BDB8((uint64_t)a1, v81, type metadata accessor for Notice);
  v13 = (char *)v58;
  sub_5BDB8(v42, v58, type metadata accessor for Notice);
  if ((v65 & 1) == 0)
  {
LABEL_17:
    sub_5C0DC((uint64_t)v13, type metadata accessor for Notice);
    sub_5C0DC(v81, type metadata accessor for Notice);
    return 0;
  }
LABEL_34:
  v66 = (uint64_t *)(v81 + v59[9]);
  v67 = (uint64_t)v13;
  v68 = *v66;
  v69 = *((_BYTE *)v66 + 8);
  sub_5C0DC(v81, type metadata accessor for Notice);
  v70 = v67 + v59[9];
  v71 = *(_QWORD *)v70;
  v47 = *(unsigned __int8 *)(v70 + 8);
  sub_5C0DC(v67, type metadata accessor for Notice);
  if ((v69 & 1) == 0)
    return (v68 == v71) & ~(_DWORD)v47;
  return v47;
}

_QWORD *initializeBufferWithCopyOfBuffer for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for Notice.Thumbnail(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
      if (EnumCaseMultiPayload == 1)
      {
        v17 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, v10, v17);
        swift_storeEnumTagMultiPayload(v9, v11, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
      }
      else
      {
        *v9 = *v10;
        swift_retain();
        swift_storeEnumTagMultiPayload(v9, v11, 0);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v18 = a3[6];
    v19 = a3[7];
    v20 = (_QWORD *)((char *)v4 + v18);
    v21 = (_QWORD *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (_QWORD *)((char *)v4 + v19);
    v24 = (_QWORD *)((char *)a2 + v19);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[8];
    v27 = (_QWORD *)((char *)v4 + v26);
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29)
    {
      v30 = *((_QWORD *)v28 + 1);
      *v27 = v29;
      v27[1] = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
    }
    v31 = a3[9];
    v32 = a3[10];
    v33 = (char *)v4 + v31;
    v34 = (char *)a2 + v31;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    *((_BYTE *)v4 + v32) = *((_BYTE *)a2 + v32);
  }
  return v4;
}

double destroy for Notice(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  int EnumCaseMultiPayload;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  if (*(_QWORD *)(a1 + *(int *)(a2 + 32)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v8, v9, v15);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      swift_storeEnumTagMultiPayload(v8, v10, 0);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v16 = a3[6];
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v16);
  v19 = (_QWORD *)((char *)a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (_QWORD *)((char *)a1 + v17);
  v22 = (_QWORD *)((char *)a2 + v17);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)((char *)a2 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    v28 = *((_QWORD *)v26 + 1);
    *v25 = v27;
    v25[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
  }
  v29 = a3[9];
  v30 = a3[10];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  return a1;
}

_QWORD *assignWithCopy for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  int v14;
  size_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Notice.Thumbnail(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_5C0DC((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
      if (EnumCaseMultiPayload == 1)
      {
        v36 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v7, v8, v36);
        swift_storeEnumTagMultiPayload(v7, v9, 1);
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        *v7 = *v8;
        swift_retain();
        swift_storeEnumTagMultiPayload(v7, v9, 0);
        goto LABEL_17;
      }
      v15 = *(_QWORD *)(v10 + 64);
LABEL_9:
      memcpy(v7, v8, v15);
      goto LABEL_17;
    }
    sub_5C0DC((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
LABEL_8:
    v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48) - 8) + 64);
    goto LABEL_9;
  }
  if (v13)
    goto LABEL_8;
  v14 = swift_getEnumCaseMultiPayload(v8, v9);
  if (v14 == 1)
  {
    v17 = type metadata accessor for Artwork(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v8, v17);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else if (v14)
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    swift_storeEnumTagMultiPayload(v7, v9, 0);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_17:
  v18 = a3[6];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)((char *)a1 + v24);
  v28 = *(_QWORD *)((char *)a2 + v24);
  if (!v27)
  {
    if (v28)
    {
      v30 = *((_QWORD *)v26 + 1);
      *v25 = v28;
      v25[1] = v30;
      swift_retain();
      goto LABEL_24;
    }
LABEL_23:
    *(_OWORD *)v25 = *(_OWORD *)v26;
    goto LABEL_24;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_23;
  }
  v29 = *((_QWORD *)v26 + 1);
  *v25 = v28;
  v25[1] = v29;
  swift_retain();
  swift_release();
LABEL_24:
  v31 = a3[9];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *(_QWORD *)v32 = v34;
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return a1;
}

_OWORD *initializeWithTake for Notice(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Notice.Thumbnail(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v12 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(v10 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = *v16;
  if (*v16)
  {
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v19 = a3[9];
  v20 = a3[10];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  return a1;
}

_QWORD *assignWithTake for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_5C0DC((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
      {
        v17 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v8, v9, v17);
        swift_storeEnumTagMultiPayload(v8, v10, 1);
        goto LABEL_14;
      }
      v16 = *(_QWORD *)(v11 + 64);
LABEL_8:
      memcpy(v8, v9, v16);
      goto LABEL_14;
    }
    sub_5C0DC((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48) - 8) + 64);
    goto LABEL_8;
  }
  if (v14)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v15 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_14:
  v18 = a3[6];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[7];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[8];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)((char *)a1 + v28);
  v32 = *(_QWORD *)((char *)a2 + v28);
  if (!v31)
  {
    if (v32)
    {
      v34 = *((_QWORD *)v30 + 1);
      *v29 = v32;
      v29[1] = v34;
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)v29 = *(_OWORD *)v30;
    goto LABEL_21;
  }
  if (!v32)
  {
    swift_release();
    goto LABEL_20;
  }
  v33 = *((_QWORD *)v30 + 1);
  *v29 = v32;
  v29[1] = v33;
  swift_release();
LABEL_21:
  v35 = a3[9];
  v36 = a3[10];
  v37 = (char *)a1 + v35;
  v38 = (char *)a2 + v35;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *((_BYTE *)a1 + v36) = *((_BYTE *)a2 + v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for Notice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C11B0C);
}

uint64_t sub_C11B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Notice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C11B98);
}

uint64_t sub_C11B98(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF48);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_C11C10(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_109D7E0;
  sub_E835C(319, (unint64_t *)&unk_14FCFD0, type metadata accessor for Notice.Thumbnail);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_109D7E0;
    v4[3] = &unk_109D7F8;
    v4[4] = &unk_109D7F8;
    v4[5] = &unk_109D810;
    v4[6] = &unk_109D828;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Notice.Thumbnail(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      swift_retain(v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t destroy for Notice.Thumbnail(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for Artwork(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else if (!(_DWORD)result)
  {
    return swift_release(*a1);
  }
  return result;
}

uint64_t *initializeWithCopy for Notice.Thumbnail(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = *a2;
    *a1 = *a2;
    swift_retain(v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_QWORD *assignWithCopy for Notice.Thumbnail(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for Notice.Thumbnail);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *initializeWithTake for Notice.Thumbnail(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Artwork(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for Notice.Thumbnail(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for Notice.Thumbnail);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Artwork(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_C12094(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Artwork(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Notice.Variant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      v21 = a2[2];
      v22 = a2[3];
      a1[2] = v21;
      a1[3] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF60);
      v11 = *(int *)(v10 + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for Artwork(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDF0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 64));
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void destroy for Notice.Variant(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_8;
    case 1:
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      return;
    case 0:
      swift_bridgeObjectRelease();
      v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FCF60) + 48);
      v5 = type metadata accessor for Artwork(0);
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      break;
  }
}

_QWORD *initializeWithCopy for Notice.Variant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      v16 = a1;
      v17 = a3;
      v18 = 2;
LABEL_11:
      swift_storeEnumTagMultiPayload(v16, v17, v18);
      return a1;
    case 1:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      v20 = a2[2];
      v21 = a2[3];
      a1[2] = v20;
      a1[3] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = a1;
      v17 = a3;
      v18 = 1;
      goto LABEL_11;
    case 0:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF60);
      v9 = *(int *)(v8 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for Artwork(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDF0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v8 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 64));
      v16 = a1;
      v17 = a3;
      v18 = 0;
      goto LABEL_11;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for Notice.Variant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 == a2)
    return a1;
  sub_5C0DC((uint64_t)a1, type metadata accessor for Notice.Variant);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v14 = a1;
      v15 = a3;
      v16 = 2;
LABEL_12:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      return a1;
    case 1:
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = a1;
      v15 = a3;
      v16 = 1;
      goto LABEL_12;
    case 0:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF60);
      v8 = *(int *)(v7 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for Artwork(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDF0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 64));
      v14 = a1;
      v15 = a3;
      v16 = 0;
      goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *initializeWithTake for Notice.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF60);
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Artwork(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDF0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(_QWORD *)((char *)a1 + *(int *)(v6 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 64));
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_OWORD *assignWithTake for Notice.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for Notice.Variant);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF60);
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for Artwork(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDF0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v6 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 64));
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_C128FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[3];

  sub_E835C(319, (unint64_t *)&unk_14FD140, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout3(v4, &unk_109D7E0, *(_QWORD *)(v2 - 8) + 64, (char *)&value witness table for Builtin.Int64 + 64);
    v5[0] = v4;
    v5[1] = " ";
    v5[2] = &unk_109D7F8;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
  }
}

unint64_t sub_C129A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15009F0;
  if (!qword_15009F0)
  {
    _s3__C25OpenExternalURLOptionsKeyVMa_0(255);
    result = swift_getWitnessTable(&unk_109B6B8, v1);
    atomic_store(result, (unint64_t *)&qword_15009F0);
  }
  return result;
}

uint64_t sub_C129EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v8 = type metadata accessor for Notice(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notice.variant(_:)(a1);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 8))(v10, a2, a3, a4);
  return sub_1A6608((uint64_t)v10);
}

uint64_t sub_C12A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t PresentedViewState<A>.present(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  *(_OWORD *)(v2 + 72) = v3;
  *(_BYTE *)(v2 + 113) = *(_BYTE *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v2 + 96) = v4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 104) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_C12B18, v7, v8);
}

{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_15068B0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[8] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[9] = v8;
  v2[10] = v9;
  return swift_task_switch(sub_E20FE4, v8, v9);
}

uint64_t sub_C12B18()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t KeyPath;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_BYTE *)(v0 + 113);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v18 = *(_OWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 56);
  v19 = *(_QWORD *)(v0 + 80);
  v20 = *(_QWORD *)(v0 + 40);
  swift_release();
  v16 = v1 & 1;
  v3 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96));
  swift_beginAccess(v3, v0 + 16, 1, 0);
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = (void *)v3[6];
  *v3 = v17;
  *(_OWORD *)(v3 + 1) = v18;
  v3[3] = v19;
  v3[4] = v16;
  v3[5] = v21;
  v3[6] = v22;
  sub_8074BC(v20);
  sub_6A5858(v4, v5, v6, v7, v8, v9, v10);
  v11 = (_QWORD *)swift_task_alloc(16);
  *v11 = &type metadata for Alert;
  KeyPath = swift_getKeyPath(&unk_109D870);
  swift_task_dealloc(v11);
  v13 = (_QWORD *)swift_task_alloc(16);
  *v13 = &type metadata for Alert;
  v14 = swift_getKeyPath(&unk_109D8A8);
  swift_task_dealloc(v13);
  *(_BYTE *)(v0 + 112) = 1;
  swift_retain();
  static Published.subscript.setter(v0 + 112, v2, KeyPath, v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C12CA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_14FD184);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_50F8C;
  return PresentedViewState<A>.present(_:)(a1);
}

uint64_t sub_C12CF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_C12D1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_C12D48(char *a1)
{
  return PresentedViewState.isPresented.setter(*a1);
}

uint64_t sub_C12D6C(char *a1)
{
  return PresentedViewState.isPresented.setter(*a1);
}

uint64_t sub_C12D90()
{
  return 8;
}

_QWORD *sub_C12D9C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t Logger.actions.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.actions);
}

uint64_t ActionDeclaring.init(context:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE v29[32];

  v28 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a3, a2, &protocol requirements base descriptor for ActionDeclaring, &associated type descriptor for ActionDeclaring.Context);
  v8 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - v10;
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v26 - v17;
  v27 = a1;
  sub_95094((uint64_t)a1, (uint64_t)v29);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD190);
  v20 = swift_dynamicCast(v11, v29, v19, AssociatedTypeWitness, 6);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v20 & 1) != 0)
  {
    v21(v11, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v11, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v18, AssociatedTypeWitness);
    v22 = v28;
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 24))(v15, a2, a3);
    __swift_destroy_boxed_opaque_existential_1(v27);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, AssociatedTypeWitness);
    v23 = 0;
    v24 = v22;
  }
  else
  {
    v23 = 1;
    v21(v11, 1, 1, AssociatedTypeWitness);
    __swift_destroy_boxed_opaque_existential_1(v27);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v24 = v28;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v24, v23, 1, a2);
}

uint64_t AnyAction.init(identifier:contexts:resolver:logs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  void (*v54)(_BYTE *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  uint64_t v74;
  uint64_t result;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (**v81)(uint64_t);
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  Swift::String v89;
  uint64_t *v90;
  uint64_t v91;
  void *v92;
  Swift::String v93;
  Swift::String v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  Swift::String v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  void *v105;
  Swift::String v106;
  Swift::String v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  _QWORD *v127;
  uint64_t *v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  int *v132;
  _BYTE v133[32];
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v124 = a4;
  v131 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v120 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AnyAction(0, v15, v16, v14);
  v130 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v122 = (uint64_t)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)__chkstk_darwin(v18);
  v22 = (char *)&v113 - v21;
  v23 = (char *)&v113 + v20[10] - v21;
  *(_OWORD *)v23 = xmmword_1060DF0;
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  v125 = v20[11];
  *(uint64_t *)((char *)&v113 + v125 - v21) = 0;
  v24 = (uint64_t *)((char *)&v113 + v20[12] - v21);
  *v24 = 0;
  v24[1] = 0;
  v126 = v24;
  v25 = (uint64_t *)((char *)&v113 + v20[13] - v21);
  *v25 = 0;
  v25[1] = 0;
  v26 = (uint64_t *)((char *)&v113 + v20[14] - v21);
  *v26 = 0;
  v26[1] = 0;
  v129 = v26;
  v132 = v20;
  v27 = (uint64_t *)((char *)&v113 + v20[15] - v21);
  *v27 = 0;
  v27[1] = 0;
  v128 = v27;
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(a5, a6);
  v127 = a3;
  if ((v28 & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    if (qword_14FA618 != -1)
      swift_once(&qword_14FA618, sub_D75398);
    v29 = v128;
    v30 = a7;
    if (static DeviceCapabilities.isInternalInstall == 1)
    {
      v137 = 0;
      v138 = 0xE000000000000000;
      _StringGuts.grow(_:)(32);
      v118 = v23;
      v31 = v25;
      v32 = v138;
      v33 = sub_BC0494(a1, a5, *(_QWORD *)(a6 + 8));
      v123 = a7;
      v34 = a5;
      v36 = v35;
      swift_bridgeObjectRelease(v32);
      v137 = v33;
      v138 = v36;
      v37._countAndFlagsBits = 0xD00000000000001ELL;
      v37._object = (void *)0x8000000001103D00;
      String.append(_:)(v37);
      v38 = v138;
      Array<A>.appendStringComponents(_:lineLength:bullet:)(v137, v138, 80, 120, 0xE100000000000000);
      v39 = v38;
      v25 = v31;
      v40 = v126;
      v41 = v125;
      v23 = v118;
      swift_bridgeObjectRelease(v39);
      v42 = v34;
      v30 = v123;
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(a1, v42);
      v44 = v129;
      v43 = v130;
LABEL_15:
      v52 = v132;
LABEL_18:
      __swift_destroy_boxed_opaque_existential_1(v127);
      sub_58ABA8(*(_QWORD *)v23, *((_QWORD *)v23 + 1), *((_QWORD *)v23 + 2), *((_QWORD *)v23 + 3), *((void **)v23 + 4));

      sub_5C198(*v40, v40[1]);
      sub_5C198(*v25, v25[1]);
      sub_5C198(*v44, v44[1]);
      sub_5C198(*v29, v29[1]);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v43 + 56))(v30, 1, 1, v52);
    }
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(a1, a5);
    v43 = v130;
LABEL_14:
    v41 = v125;
    v44 = v129;
    v40 = v126;
    goto LABEL_15;
  }
  v121 = a2;
  v123 = a7;
  v119 = v25;
  v45 = a5;
  v46 = a3[3];
  v47 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v46);
  v48 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 8))(a1, v45, *(_QWORD *)(a6 + 16), v46, v47);
  if (!v48)
  {
    swift_bridgeObjectRelease(v121);
    v137 = 0;
    v138 = 0xE000000000000000;
    _StringGuts.grow(_:)(22);
    v61 = v138;
    v62 = sub_BC0494(a1, v45, *(_QWORD *)(a6 + 8));
    v64 = v63;
    swift_bridgeObjectRelease(v61);
    v137 = v62;
    v138 = v64;
    v65._countAndFlagsBits = 0xD000000000000014;
    v65._object = (void *)0x8000000001103CA0;
    String.append(_:)(v65);
    v66 = v138;
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v137, v138, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease(v66);
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(a1, v45);
    v25 = v119;
    v30 = v123;
    v43 = v130;
    v29 = v128;
    goto LABEL_14;
  }
  v50 = v48;
  v115 = a6;
  v116 = a1;
  v117 = v45;
  v51 = *(_QWORD *)(v121 + 16);
  v52 = v132;
  if (!v51)
  {
    swift_bridgeObjectRelease(v121);
    v30 = v123;
    v40 = v126;
LABEL_17:
    v137 = 0;
    v138 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    v67 = v138;
    v68 = v116;
    v69 = v117;
    v70 = sub_BC0494(v116, v117, *(_QWORD *)(v115 + 8));
    v72 = v71;
    swift_bridgeObjectRelease(v67);
    v137 = v70;
    v138 = v72;
    v73._countAndFlagsBits = 0xD000000000000016;
    v73._object = (void *)0x8000000001103CC0;
    String.append(_:)(v73);
    v74 = v138;
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v137, v138, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease(v74);
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v68, v69);
    v44 = v129;
    v43 = v130;
    v25 = v119;
    v29 = v128;
    v41 = v125;
    goto LABEL_18;
  }
  v53 = v49;
  v118 = v23;
  v114 = v22;
  v54 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v49 + 8);
  v55 = v121 + 32;
  while (1)
  {
    sub_95094(v55, (uint64_t)v133);
    v56 = type metadata accessor for Optional(0, v50);
    v57 = *(_QWORD *)(v56 - 8);
    __chkstk_darwin(v56);
    v59 = (char *)&v113 - v58;
    v54(v133, v50, v53);
    v60 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v59, 1, v50) != 1)
      break;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v56);
    v134 = 0u;
    v135 = 0u;
    v136 = 0;
    sub_56024((uint64_t)&v134, &qword_14FD198);
    v55 += 32;
    if (!--v51)
    {
      swift_bridgeObjectRelease(v121);
      v30 = v123;
      v52 = v132;
      v22 = v114;
      v40 = v126;
      v23 = v118;
      goto LABEL_17;
    }
  }
  *((_QWORD *)&v135 + 1) = v50;
  v136 = v53;
  v76 = __swift_allocate_boxed_opaque_existential_1Tm(&v134);
  (*(void (**)(_QWORD *, char *, uint64_t))(v60 + 32))(v76, v59, v50);
  swift_bridgeObjectRelease(v121);
  sub_8B15C(&v134, (uint64_t)&v137);
  sub_55D1C((uint64_t)&v137, (uint64_t)&v134);
  v77 = (uint64_t)v120;
  v78 = v116;
  v79 = v117;
  (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v120, v116, v117);
  v80 = v122;
  result = sub_C13A08(&v134, v77, v79, v115, v122);
  v52 = v132;
  v81 = (uint64_t (**)(uint64_t))(v80 + v132[12]);
  if (*v81)
  {
    v82 = (*v81)(result);
    v85 = v129;
    v43 = v130;
    v22 = v114;
    v29 = v128;
    v40 = v126;
    v23 = v118;
    if (v83 != 1)
    {
      v98 = v82;
      v99 = v83;
      if ((v84 & 1) != 0)
      {
        sub_1492CC(v82, v83);
        v111 = v78;
        v112 = v117;
        v102 = v122;
      }
      else
      {
        *(_QWORD *)&v134 = sub_BC0494(v78, v117, *(_QWORD *)(v115 + 8));
        *((_QWORD *)&v134 + 1) = v100;
        v101._countAndFlagsBits = 10272;
        v101._object = (void *)0xE200000000000000;
        String.append(_:)(v101);
        v102 = v122;
        v103 = (uint64_t *)(v122 + v52[9]);
        v104 = *v103;
        v105 = (void *)v103[1];
        swift_bridgeObjectRetain();
        v106._countAndFlagsBits = v104;
        v22 = v114;
        v106._object = v105;
        String.append(_:)(v106);
        v29 = v128;
        swift_bridgeObjectRelease(v105);
        v107._countAndFlagsBits = 539828265;
        v107._object = (void *)0xE400000000000000;
        String.append(_:)(v107);
        if (v99)
          v108 = v98;
        else
          v108 = 0xD000000000000013;
        if (!v99)
          v99 = 0x8000000001103CE0;
        v109 = v99;
        String.append(_:)(*(Swift::String *)&v108);
        swift_bridgeObjectRelease(v99);
        v110 = *((_QWORD *)&v134 + 1);
        Array<A>.appendStringComponents(_:lineLength:bullet:)(v134, *((uint64_t *)&v134 + 1), 80, 120, 0xE100000000000000);
        v43 = v130;
        swift_bridgeObjectRelease(v110);
        v111 = v116;
        v112 = v117;
      }
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v111, v112);
      (*(void (**)(uint64_t, int *))(v43 + 8))(v102, v52);
      __swift_destroy_boxed_opaque_existential_1(&v137);
      v25 = v119;
      v30 = v123;
      v41 = v125;
      v44 = v129;
      goto LABEL_18;
    }
    v86 = v78;
    v87 = v117;
    *(_QWORD *)&v134 = sub_BC0494(v86, v117, *(_QWORD *)(v115 + 8));
    *((_QWORD *)&v134 + 1) = v88;
    v89._countAndFlagsBits = 10272;
    v89._object = (void *)0xE200000000000000;
    String.append(_:)(v89);
    v90 = (uint64_t *)(v122 + v52[9]);
    v91 = *v90;
    v92 = (void *)v90[1];
    swift_bridgeObjectRetain();
    v93._countAndFlagsBits = v91;
    v93._object = v92;
    String.append(_:)(v93);
    swift_bridgeObjectRelease(v92);
    v94._countAndFlagsBits = 41;
    v94._object = (void *)0xE100000000000000;
    String.append(_:)(v94);
    v95 = *((_QWORD *)&v134 + 1);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v134, *((uint64_t *)&v134 + 1), 80, 9673954, 0xA300000000000000);
    swift_bridgeObjectRelease(v95);
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v116, v87);
    __swift_destroy_boxed_opaque_existential_1(&v137);
    sub_58ABA8(*(_QWORD *)v23, *((_QWORD *)v23 + 1), *((_QWORD *)v23 + 2), *((_QWORD *)v23 + 3), *((void **)v23 + 4));

    sub_5C198(*v40, v40[1]);
    sub_5C198(*v119, v119[1]);
    sub_5C198(*v85, v85[1]);
    sub_5C198(*v29, v29[1]);
    v96 = v130;
    (*(void (**)(char *, uint64_t, int *))(v130 + 32))(v22, v122, v52);
    v97 = v123;
    (*(void (**)(uint64_t, char *, int *))(v96 + 16))(v123, v22, v52);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v96 + 56))(v97, 0, 1, v52);
    __swift_destroy_boxed_opaque_existential_1(v127);
    return (*(uint64_t (**)(char *, int *))(v96 + 8))(v22, v52);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_C13A08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t DynamicType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[40];
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v58 = a5;
  v8 = type metadata accessor for AnyAction(0, a3, a4, a4);
  v57 = *(_QWORD *)(v8 - 8);
  v9 = (int *)__chkstk_darwin(v8);
  v11 = (char *)&v48 - v10;
  v12 = (char *)&v48 + v9[10] - v10;
  *(_OWORD *)v12 = xmmword_1060DF0;
  *((_OWORD *)v12 + 1) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  v51 = v9[11];
  *(_QWORD *)&v11[v51] = 0;
  v13 = (uint64_t *)((char *)&v48 + v9[12] - v10);
  *v13 = 0;
  v13[1] = 0;
  v14 = (uint64_t *)((char *)&v48 + v9[13] - v10);
  *v14 = 0;
  v14[1] = 0;
  v54 = v14;
  v15 = (uint64_t *)&v11[v9[14]];
  *v15 = 0;
  v15[1] = 0;
  v55 = v15;
  v16 = (uint64_t *)&v11[v9[15]];
  *v16 = 0;
  v16[1] = 0;
  v56 = v16;
  v50 = *(_QWORD *)(a3 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  v52 = a2;
  v53 = a3;
  v17(v11, a2, a3);
  v18 = a1[3];
  v19 = __swift_project_boxed_opaque_existential_1(a1, v18);
  DynamicType = swift_getDynamicType(v19, v18, 1);
  v21 = a1[4];
  v63 = DynamicType;
  v64 = v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD2C0);
  v23 = String.init<A>(describing:)(&v63, v22);
  v24 = (uint64_t *)&v11[*(int *)(v8 + 36)];
  *v24 = v23;
  v24[1] = v25;
  sub_55D1C((uint64_t)a1, (uint64_t)v59);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD2C8);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD2D0);
  if ((swift_dynamicCast(&v60, v59, v26, v27, 6) & 1) != 0)
  {
    v28 = *((_QWORD *)&v61 + 1);
    v29 = v62;
    __swift_project_boxed_opaque_existential_1(&v60, *((uint64_t *)&v61 + 1));
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v29 + 8))(&v63, v28, v29);
    v30 = v64;
    v49 = v63;
    v31 = v65;
    v32 = v66;
    v34 = v67;
    v33 = v68;
    __swift_destroy_boxed_opaque_existential_1(&v60);
  }
  else
  {
    v62 = 0;
    v60 = 0u;
    v61 = 0u;
    sub_56024((uint64_t)&v60, &qword_14FD2D8);
    v49 = 0;
    v31 = 0;
    v32 = 0;
    v34 = 0;
    v33 = 0;
    v30 = 1;
  }
  sub_58ABA8(*(_QWORD *)v12, *((_QWORD *)v12 + 1), *((_QWORD *)v12 + 2), *((_QWORD *)v12 + 3), *((void **)v12 + 4));
  *(_QWORD *)v12 = v49;
  *((_QWORD *)v12 + 1) = v30;
  *((_QWORD *)v12 + 2) = v31;
  *((_QWORD *)v12 + 3) = v32;
  *((_QWORD *)v12 + 4) = v34;
  *((_QWORD *)v12 + 5) = v33;
  v35 = a1[3];
  v36 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 24))(v35, v36);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v52, v53);
  v38 = v51;

  *(_QWORD *)&v11[v38] = v37;
  sub_55D1C((uint64_t)a1, (uint64_t)&v60);
  v39 = swift_allocObject(&unk_13AE2B8, 56, 7);
  sub_8B15C(&v60, v39 + 16);
  sub_5C198(*v13, v13[1]);
  *v13 = (uint64_t)sub_C15C10;
  v13[1] = v39;
  sub_55D1C((uint64_t)a1, (uint64_t)&v60);
  v40 = swift_allocObject(&unk_13AE2E0, 56, 7);
  sub_8B15C(&v60, v40 + 16);
  v41 = v54;
  sub_5C198(*v54, v54[1]);
  *v41 = (uint64_t)&unk_14FD2E0;
  v41[1] = v40;
  sub_55D1C((uint64_t)a1, (uint64_t)&v60);
  v42 = swift_allocObject(&unk_13AE308, 56, 7);
  sub_8B15C(&v60, v42 + 16);
  v43 = v55;
  sub_5C198(*v55, v55[1]);
  *v43 = (uint64_t)&unk_14FD2E8;
  v43[1] = v42;
  sub_55D1C((uint64_t)a1, (uint64_t)&v60);
  v44 = swift_allocObject(&unk_13AE330, 56, 7);
  sub_8B15C(&v60, v44 + 16);
  v45 = v56;
  sub_5C198(*v56, v56[1]);
  *v45 = (uint64_t)sub_C15D14;
  v45[1] = v44;
  v46 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v58, v11, v8);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v11, v8);
}

uint64_t AnyAction.canPerform.getter(uint64_t result)
{
  uint64_t v1;
  uint64_t (**v2)(void);

  v2 = (uint64_t (**)(void))(v1 + *(int *)(result + 48));
  if (*v2)
    return (*v2)();
  __break(1u);
  return result;
}

uint64_t sub_C13E38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_C13E78(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_C13E90, 0, 0);
}

uint64_t sub_C13E90()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = *(int **)(v3 + 32);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 24) = v5;
  *v5 = v0;
  v5[1] = sub_BAB670;
  return v7(v2, v3);
}

uint64_t sub_C13F08(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_C13F20, 0, 0);
}

uint64_t sub_C13F20()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = *(int **)(v3 + 40);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 24) = v5;
  *v5 = v0;
  v5[1] = sub_BAAEAC;
  return v7(v2, v3);
}

uint64_t sub_C13F98(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t AnyAction.displayConfiguration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_C14B1C(v2 + *(int *)(a1 + 40), a2);
}

void *AnyAction.submenu.getter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 44));
  v3 = v2;
  return v2;
}

uint64_t AnyAction.execute()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v2[3] = a1;
  v2[4] = v1;
  v3 = *(_QWORD *)(a1 - 8);
  v2[5] = v3;
  v2[6] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[7] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v2[8] = v6;
  v2[9] = v7;
  return swift_task_switch(sub_C14098, v6, v7);
}

void sub_C14098()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (**v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  void (*v8)(void);
  uint64_t v9;
  __n128 v10;
  uint64_t (**v11)(__n128);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(void);
  uint64_t v50;
  uint64_t v51[2];

  v1 = v0[3];
  v2 = (uint64_t (**)(void))(v0[4] + *(int *)(v1 + 48));
  if (!*v2)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v3 = (*v2)();
  v5 = v4;
  sub_1492CC(v3, v4);
  if (v5 == 1)
  {
    v6 = *(int **)(v0[4] + *(int *)(v0[3] + 52));
    if (v6)
    {
      v49 = (void (*)(void))((char *)v6 + *v6);
      v7 = (_QWORD *)swift_task_alloc(v6[1]);
      v0[10] = v7;
      *v7 = v0;
      v7[1] = sub_C14410;
      v8 = v49;
LABEL_15:
      v8();
      return;
    }
    goto LABEL_17;
  }
  v9 = v0[4];
  v10 = swift_release(v0[7]);
  v11 = (uint64_t (**)(__n128))(v9 + *(int *)(v1 + 48));
  if (*v11)
  {
    v12 = (*v11)(v10);
    v15 = v0[3];
    if (v13 == 1)
    {
      v16 = type metadata accessor for AnyAction.Error(0, *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), v14);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for AnyAction<A>.Error, v16);
      v18 = swift_allocError(v16, WitnessTable, 0, 0);
      v19 = v18;
      *v20 = 0;
      v20[1] = 0;
    }
    else
    {
      v21 = v12;
      v22 = v13;
      v23 = type metadata accessor for AnyAction.Error(0, *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), v14);
      v24 = swift_getWitnessTable(&protocol conformance descriptor for AnyAction<A>.Error, v23);
      v18 = swift_allocError(v23, v24, 0, 0);
      v19 = v18;
      *v25 = v21;
      v25[1] = v22;
    }
    swift_willThrow(v18);
    if (qword_14F9CA0 != -1)
      swift_once(&qword_14F9CA0, sub_C14A2C);
    v27 = v0[5];
    v26 = v0[6];
    v29 = v0[3];
    v28 = v0[4];
    v30 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v30, (uint64_t)static Logger.actions);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v26, v28, v29);
    swift_errorRetain(v19);
    v31 = swift_errorRetain(v19);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter(v32);
    v34 = os_log_type_enabled(v32, v33);
    v35 = v0[5];
    v36 = v0[6];
    v37 = v0[3];
    if (v34)
    {
      v38 = swift_slowAlloc(22, -1);
      v50 = swift_slowAlloc(64, -1);
      v51[0] = v50;
      *(_DWORD *)v38 = 136446466;
      v39 = (char *)sub_BC0494(v36, *(_QWORD *)(v37 + 16), *(_QWORD *)(*(_QWORD *)(v37 + 24) + 8));
      v41 = v40;
      *(_QWORD *)(v38 + 4) = sub_BA95EC(v39, v40, v51);
      v42 = swift_bridgeObjectRelease(v41);
      (*(void (**)(uint64_t, uint64_t, __n128))(v35 + 8))(v36, v37, v42);
      *(_WORD *)(v38 + 12) = 2082;
      v0[2] = v19;
      swift_errorRetain(v19);
      v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
      v44 = (char *)String.init<A>(describing:)(v0 + 2, v43);
      v46 = v45;
      *(_QWORD *)(v38 + 14) = sub_BA95EC(v44, v45, v51);
      swift_bridgeObjectRelease(v46);
      swift_errorRelease(v19);
      swift_errorRelease(v19);
      _os_log_impl(&dword_0, v32, v33, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy(v50, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v35 + 8))(v0[6], v0[3]);
      swift_errorRelease(v19);
      swift_errorRelease(v19);
    }

    v47 = v0[6];
    swift_willThrow(v48);
    swift_task_dealloc(v47);
    v8 = (void (*)(void))v0[1];
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_C14410()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C1459C;
  else
    v4 = sub_C14470;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

void sub_C14470()
{
  _QWORD *v0;
  int *v1;
  _QWORD *v2;
  void (*v3)(void);

  v1 = *(int **)(v0[4] + *(int *)(v0[3] + 56));
  if (v1)
  {
    v3 = (void (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    v0[12] = v2;
    *v2 = v0;
    v2[1] = sub_C144DC;
    v3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_C144DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C147E4;
  else
    v4 = sub_C1453C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_C1453C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  void (**v4)(uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  result = swift_release(*(_QWORD *)(v0 + 56));
  v4 = (void (**)(uint64_t))(v2 + *(int *)(v1 + 60));
  if (*v4)
  {
    v5 = *(_QWORD *)(v0 + 48);
    (*v4)(result);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_C1459C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27[2];

  swift_release(*(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 88);
  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v6, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4, v5);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 24);
  if (v10)
  {
    v14 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v27[0] = v26;
    *(_DWORD *)v14 = 136446466;
    v15 = (char *)sub_BC0494(v12, *(_QWORD *)(v13 + 16), *(_QWORD *)(*(_QWORD *)(v13 + 24) + 8));
    v17 = v16;
    *(_QWORD *)(v14 + 4) = sub_BA95EC(v15, v16, v27);
    v18 = swift_bridgeObjectRelease(v17);
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v12, v13, v18);
    *(_WORD *)(v14 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v20 = (char *)String.init<A>(describing:)(v0 + 16, v19);
    v22 = v21;
    *(_QWORD *)(v14 + 14) = sub_BA95EC(v20, v21, v27);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v8, v9, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24));
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v23 = *(_QWORD *)(v0 + 48);
  swift_willThrow(v24);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C147E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27[2];

  swift_release(*(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 104);
  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v6, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4, v5);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 24);
  if (v10)
  {
    v14 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v27[0] = v26;
    *(_DWORD *)v14 = 136446466;
    v15 = (char *)sub_BC0494(v12, *(_QWORD *)(v13 + 16), *(_QWORD *)(*(_QWORD *)(v13 + 24) + 8));
    v17 = v16;
    *(_QWORD *)(v14 + 4) = sub_BA95EC(v15, v16, v27);
    v18 = swift_bridgeObjectRelease(v17);
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v12, v13, v18);
    *(_WORD *)(v14 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v20 = (char *)String.init<A>(describing:)(v0 + 16, v19);
    v22 = v21;
    *(_QWORD *)(v14 + 14) = sub_BA95EC(v20, v21, v27);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v8, v9, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24));
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v23 = *(_QWORD *)(v0 + 48);
  swift_willThrow(v24);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C14A2C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.actions);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.actions);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x736E6F69746341, 0xE700000000000000);
}

uint64_t type metadata accessor for AnyAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAction);
}

uint64_t static Logger.actions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.actions);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_C14B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD1A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AnyAction.Error(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAction.Error);
}

uint64_t sub_C14B70(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_109DA30;
    v4[2] = &unk_109DA48;
    v4[3] = &unk_109DA60;
    v4[4] = &unk_109DA78;
    v4[5] = &unk_109DA78;
    v4[6] = &unk_109DA78;
    v4[7] = &unk_109DA78;
    swift_initStructMetadata(a1, 0, 8, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_C14C08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  int v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void **v22;
  void *v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x1000F8) != 0
    || (v7 = *(_QWORD *)(v5 + 64),
        ((((((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16 > 0x18))
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v8 = (_QWORD *)(((unint64_t)v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v9 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v8 = *v9;
    v10 = v9[1];
    v8[1] = v10;
    v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = v12[1];
    if (v13 >= 0xFFFFFFFF)
      LODWORD(v13) = -1;
    v14 = v13 - 1;
    swift_bridgeObjectRetain(v10);
    if (v14 < 0)
    {
      *v11 = *v12;
      v18 = v12[1];
      v11[1] = v18;
      v11[2] = v12[2];
      v19 = v12[3];
      v11[3] = v19;
      v20 = (void *)v12[4];
      v11[4] = v20;
      v11[5] = v12[5];
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v19);
      v21 = v20;
    }
    else
    {
      v15 = *(_OWORD *)v12;
      v16 = *((_OWORD *)v12 + 2);
      *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
      *((_OWORD *)v11 + 2) = v16;
      *(_OWORD *)v11 = v15;
    }
    v22 = (void **)(((unint64_t)v12 + 55) & 0xFFFFFFFFFFFFFFF8);
    v23 = *v22;
    v24 = (_QWORD *)(((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFF8);
    *v24 = *v22;
    v25 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
    v26 = (unint64_t *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    v27 = *v26;
    v28 = v23;
    if (v27 < 0xFFFFFFFF)
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
    }
    else
    {
      v29 = v26[1];
      *(_QWORD *)v25 = v27;
      *(_QWORD *)(v25 + 8) = v29;
      swift_retain(v29);
    }
    v30 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
    v31 = ((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v31 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v30 = *(_OWORD *)v31;
    }
    else
    {
      v32 = *(_QWORD *)(v31 + 8);
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_QWORD *)(v30 + 8) = v32;
      swift_retain(v32);
    }
    v33 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    v34 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v34 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
    else
    {
      v35 = *(_QWORD *)(v34 + 8);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *(_QWORD *)(v33 + 8) = v35;
      swift_retain(v35);
    }
    v36 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
    v37 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v37 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
      return v4;
    }
    v17 = *(_QWORD *)(v37 + 8);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *(_QWORD *)(v36 + 8) = v17;
  }
  swift_retain(v17);
  return v4;
}

void sub_C14E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 8));
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(v5 + 8);
  if ((int)v7 - 1 < 0)
  {
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 24));

  }
  v8 = (id *)((v5 + 55) & 0xFFFFFFFFFFFFFFF8);

  v9 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v9 >= 0xFFFFFFFFuLL)
    swift_release(v9[1]);
  v10 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v10 >= 0xFFFFFFFFuLL)
    swift_release(v10[1]);
  v11 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v11 >= 0xFFFFFFFFuLL)
    swift_release(v11[1]);
  v12 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v12 >= 0xFFFFFFFFuLL)
    swift_release(v12[1]);
}

uint64_t sub_C14F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  int v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  void *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v8[1];
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  v13 = v12 - 1;
  swift_bridgeObjectRetain(v9);
  if (v13 < 0)
  {
    *v10 = *v11;
    v16 = v11[1];
    v10[1] = v16;
    v10[2] = v11[2];
    v17 = v11[3];
    v10[3] = v17;
    v18 = (void *)v11[4];
    v10[4] = v18;
    v10[5] = v11[5];
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    v19 = v18;
  }
  else
  {
    v14 = *(_OWORD *)v11;
    v15 = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
    *((_OWORD *)v10 + 2) = v15;
    *(_OWORD *)v10 = v14;
  }
  v20 = (void **)(((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFFFF8);
  v21 = *v20;
  v22 = (_QWORD *)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFF8);
  *v22 = *v20;
  v23 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (unint64_t *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  v25 = *v24;
  v26 = v21;
  if (v25 < 0xFFFFFFFF)
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  else
  {
    v27 = v24[1];
    *(_QWORD *)v23 = v25;
    *(_QWORD *)(v23 + 8) = v27;
    swift_retain(v27);
  }
  v28 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v29 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  else
  {
    v30 = *(_QWORD *)(v29 + 8);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_QWORD *)(v28 + 8) = v30;
    swift_retain(v30);
  }
  v31 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v32 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  else
  {
    v33 = *(_QWORD *)(v32 + 8);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *(_QWORD *)(v31 + 8) = v33;
    swift_retain(v33);
  }
  v34 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v35 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
  }
  else
  {
    v36 = *(_QWORD *)(v35 + 8);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *(_QWORD *)(v34 + 8) = v36;
    swift_retain(v36);
  }
  return a1;
}

uint64_t sub_C15158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  __int128 v22;
  __int128 v23;
  void **v24;
  void **v25;
  void *v26;
  void *v27;
  id v28;
  _QWORD *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v8[1];
  v10 = v7[1];
  v7[1] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v11 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = *(_QWORD *)(v11 + 8);
  LODWORD(v14) = -1;
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  else
    v15 = *(_QWORD *)(v11 + 8);
  v16 = v15 - 1;
  if (v12[1] < 0xFFFFFFFFuLL)
    v14 = v12[1];
  v17 = v14 - 1;
  if ((v16 & 0x80000000) == 0)
  {
    if (v17 < 0)
    {
      *(_QWORD *)v11 = *v12;
      v18 = v12[1];
      *(_QWORD *)(v11 + 8) = v18;
      *(_QWORD *)(v11 + 16) = v12[2];
      v19 = v12[3];
      *(_QWORD *)(v11 + 24) = v19;
      v20 = (void *)v12[4];
      *(_QWORD *)(v11 + 32) = v20;
      *(_QWORD *)(v11 + 40) = v12[5];
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v19);
      v21 = v20;
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if ((v17 & 0x80000000) == 0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v11 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v11 + 24));

LABEL_11:
    v22 = *(_OWORD *)v12;
    v23 = *((_OWORD *)v12 + 2);
    *(_OWORD *)(v11 + 16) = *((_OWORD *)v12 + 1);
    *(_OWORD *)(v11 + 32) = v23;
    *(_OWORD *)v11 = v22;
    goto LABEL_12;
  }
  *(_QWORD *)v11 = *v12;
  v54 = v12[1];
  *(_QWORD *)(v11 + 8) = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(v11 + 16) = v12[2];
  v55 = v12[3];
  v56 = *(_QWORD *)(v11 + 24);
  *(_QWORD *)(v11 + 24) = v55;
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRelease(v56);
  v57 = *(void **)(v11 + 32);
  v58 = (void *)v12[4];
  *(_QWORD *)(v11 + 32) = v58;
  v59 = v58;

  *(_QWORD *)(v11 + 40) = v12[5];
LABEL_12:
  v24 = (void **)((v11 + 55) & 0xFFFFFFFFFFFFFFF8);
  v25 = (void **)(((unint64_t)v12 + 55) & 0xFFFFFFFFFFFFFFF8);
  v26 = *v25;
  v27 = *v24;
  *v24 = *v25;
  v28 = v26;

  v29 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 = (unint64_t *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  v31 = *v30;
  if (*v29 < 0xFFFFFFFFuLL)
  {
    if (v31 >= 0xFFFFFFFF)
    {
      v34 = v30[1];
      *v29 = v31;
      v29[1] = v34;
      swift_retain(v34);
      goto LABEL_19;
    }
  }
  else
  {
    if (v31 >= 0xFFFFFFFF)
    {
      v32 = v30[1];
      v33 = v29[1];
      *v29 = v31;
      v29[1] = v32;
      swift_retain(v32);
      swift_release(v33);
      goto LABEL_19;
    }
    swift_release(v29[1]);
  }
  *(_OWORD *)v29 = *(_OWORD *)v30;
LABEL_19:
  v35 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v36 = (unint64_t *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  v37 = *v36;
  if (*v35 < 0xFFFFFFFFuLL)
  {
    if (v37 >= 0xFFFFFFFF)
    {
      v40 = v36[1];
      *v35 = v37;
      v35[1] = v40;
      swift_retain(v40);
      goto LABEL_26;
    }
  }
  else
  {
    if (v37 >= 0xFFFFFFFF)
    {
      v38 = v36[1];
      v39 = v35[1];
      *v35 = v37;
      v35[1] = v38;
      swift_retain(v38);
      swift_release(v39);
      goto LABEL_26;
    }
    swift_release(v35[1]);
  }
  *(_OWORD *)v35 = *(_OWORD *)v36;
LABEL_26:
  v41 = (_QWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  v42 = (unint64_t *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  v43 = *v42;
  if (*v41 < 0xFFFFFFFFuLL)
  {
    if (v43 >= 0xFFFFFFFF)
    {
      v46 = v42[1];
      *v41 = v43;
      v41[1] = v46;
      swift_retain(v46);
      goto LABEL_33;
    }
  }
  else
  {
    if (v43 >= 0xFFFFFFFF)
    {
      v44 = v42[1];
      v45 = v41[1];
      *v41 = v43;
      v41[1] = v44;
      swift_retain(v44);
      swift_release(v45);
      goto LABEL_33;
    }
    swift_release(v41[1]);
  }
  *(_OWORD *)v41 = *(_OWORD *)v42;
LABEL_33:
  v47 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  v48 = (unint64_t *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  v49 = *v48;
  if (*v47 < 0xFFFFFFFFuLL)
  {
    if (v49 >= 0xFFFFFFFF)
    {
      v52 = v48[1];
      *v47 = v49;
      v47[1] = v52;
      swift_retain(v52);
      return a1;
    }
LABEL_39:
    *(_OWORD *)v47 = *(_OWORD *)v48;
    return a1;
  }
  if (v49 < 0xFFFFFFFF)
  {
    swift_release(v47[1]);
    goto LABEL_39;
  }
  v50 = v48[1];
  v51 = v47[1];
  *v47 = v49;
  v47[1] = v50;
  swift_retain(v50);
  swift_release(v51);
  return a1;
}

uint64_t sub_C154D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (__int128 *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  v12 = v10[2];
  v9[1] = v10[1];
  v9[2] = v12;
  *v9 = v11;
  v13 = (_QWORD *)(((unint64_t)v9 + 55) & 0xFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v16 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  else
  {
    v17 = *(_QWORD *)(v16 + 8);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)(v15 + 8) = v17;
  }
  v18 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v19 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  else
  {
    v20 = *(_QWORD *)(v19 + 8);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)(v18 + 8) = v20;
  }
  v21 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v22 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  else
  {
    v23 = *(_QWORD *)(v22 + 8);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_QWORD *)(v21 + 8) = v23;
  }
  v24 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = (uint64_t *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = *v25;
  if ((unint64_t)*v25 < 0xFFFFFFFF)
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  else
  {
    v27 = v25[1];
    *(_QWORD *)v24 = v26;
    *(_QWORD *)(v24 + 8) = v27;
  }
  return a1;
}

uint64_t sub_C15628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  void **v17;
  void **v18;
  void *v19;
  _QWORD *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  void *v46;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v7[1];
  v7[1] = v8[1];
  swift_bridgeObjectRelease(v9);
  v10 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)(v10 + 8);
  LODWORD(v13) = -1;
  if (v12 < 0xFFFFFFFF)
    v13 = *(_QWORD *)(v10 + 8);
  if ((int)v13 - 1 >= 0)
    goto LABEL_8;
  v14 = *(_QWORD *)(v11 + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  if ((int)v14 - 1 >= 0)
  {
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + 24));

LABEL_8:
    v15 = *(_OWORD *)v11;
    v16 = *(_OWORD *)(v11 + 32);
    *(_OWORD *)(v10 + 16) = *(_OWORD *)(v11 + 16);
    *(_OWORD *)(v10 + 32) = v16;
    *(_OWORD *)v10 = v15;
    goto LABEL_9;
  }
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
  v45 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v10 + 24) = *(_QWORD *)(v11 + 24);
  swift_bridgeObjectRelease(v45);
  v46 = *(void **)(v10 + 32);
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);

  *(_QWORD *)(v10 + 40) = *(_QWORD *)(v11 + 40);
LABEL_9:
  v17 = (void **)((v10 + 55) & 0xFFFFFFFFFFFFFFF8);
  v18 = (void **)((v11 + 55) & 0xFFFFFFFFFFFFFFF8);
  v19 = *v17;
  *v17 = *v18;

  v20 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (unint64_t *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v25 = v21[1];
      *v20 = v22;
      v20[1] = v25;
      goto LABEL_16;
    }
  }
  else
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v23 = v21[1];
      v24 = v20[1];
      *v20 = v22;
      v20[1] = v23;
      swift_release(v24);
      goto LABEL_16;
    }
    swift_release(v20[1]);
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
LABEL_16:
  v26 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (unint64_t *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = *v27;
  if (*v26 < 0xFFFFFFFFuLL)
  {
    if (v28 >= 0xFFFFFFFF)
    {
      v31 = v27[1];
      *v26 = v28;
      v26[1] = v31;
      goto LABEL_23;
    }
  }
  else
  {
    if (v28 >= 0xFFFFFFFF)
    {
      v29 = v27[1];
      v30 = v26[1];
      *v26 = v28;
      v26[1] = v29;
      swift_release(v30);
      goto LABEL_23;
    }
    swift_release(v26[1]);
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
LABEL_23:
  v32 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v33 = (unint64_t *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v34 = *v33;
  if (*v32 < 0xFFFFFFFFuLL)
  {
    if (v34 >= 0xFFFFFFFF)
    {
      v37 = v33[1];
      *v32 = v34;
      v32[1] = v37;
      goto LABEL_30;
    }
  }
  else
  {
    if (v34 >= 0xFFFFFFFF)
    {
      v35 = v33[1];
      v36 = v32[1];
      *v32 = v34;
      v32[1] = v35;
      swift_release(v36);
      goto LABEL_30;
    }
    swift_release(v32[1]);
  }
  *(_OWORD *)v32 = *(_OWORD *)v33;
LABEL_30:
  v38 = (_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  v39 = (unint64_t *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  v40 = *v39;
  if (*v38 < 0xFFFFFFFFuLL)
  {
    if (v40 >= 0xFFFFFFFF)
    {
      v43 = v39[1];
      *v38 = v40;
      v38[1] = v43;
      return a1;
    }
LABEL_36:
    *(_OWORD *)v38 = *(_OWORD *)v39;
    return a1;
  }
  if (v40 < 0xFFFFFFFF)
  {
    swift_release(v38[1]);
    goto LABEL_36;
  }
  v41 = v39[1];
  v42 = v38[1];
  *v38 = v40;
  v38[1] = v41;
  swift_release(v42);
  return a1;
}

uint64_t sub_C15908(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((char *)&dword_8 + ((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8));
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 23) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_C159B4 + 4 * byte_109D980[v10]))();
  }
}

void sub_C15A38(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
             + 23) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_C15B5C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0xC15BD4);
}

void sub_C15B64(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0xC15B6CLL);
  JUMPOUT(0xC15BD4);
}

void sub_C15BB0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0xC15BD4);
}

void sub_C15BB8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0xC15BD4);
}

uint64_t sub_C15BC0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0xC15BCCLL);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0xC15BD4);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_C15BEC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_C15C10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_C15C54()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FD2BC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  v2[2] = v0 + 16;
  return swift_task_switch(sub_C13E90, 0, 0);
}

uint64_t sub_C15CB4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_14FD2B4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_50F8C;
  v2[2] = v0 + 16;
  return swift_task_switch(sub_C13F20, 0, 0);
}

uint64_t sub_C15D14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t ActionCondition.Result.failure.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a2 == 1)
    v2 = 0;
  else
    v2 = a1;
  sub_210FB4(a1, a2);
  return v2;
}

BOOL ActionCondition.Result.isTrue.getter(uint64_t a1, uint64_t a2)
{
  return a2 == 1;
}

uint64_t static ActionCondition.Result.failure(_:redactLog:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return a1;
}

BOOL sub_C15DE4(uint64_t a1, uint64_t a2)
{
  return _s9MusicCore15ActionConditionV6ResultO21__derived_enum_equalsySbAE_AEtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t ActionCondition.init(_:file:line:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t ActionCondition.init(_:_:redactLog:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t (*a6)()@<X5>, uint64_t (*a7)()@<X6>, uint64_t (*a8)()@<X7>, uint64_t (**a9)()@<X8>)
{
  uint64_t result;

  result = swift_allocObject(&unk_13AE388, 49, 7);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_BYTE *)(result + 48) = a5;
  *a9 = sub_C1613C;
  a9[1] = (uint64_t (*)())result;
  a9[2] = a6;
  a9[3] = a7;
  a9[4] = a8;
  return result;
}

BOOL ActionCondition.isTrue.getter()
{
  uint64_t (**v0)(void);
  uint64_t v1;
  uint64_t v2;
  _BOOL8 v3;

  v1 = (*v0)();
  v3 = v2 == 1;
  sub_1492CC(v1, v2);
  return v3;
}

uint64_t static ActionConditionEvaluator.buildBlock(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v3 = a1 + 32;
    swift_bridgeObjectRetain(a1);
    v4 = 0;
    v15 = v3;
    v16 = v1;
    while (1)
    {
      v5 = *(_QWORD *)(v3 + 8 * v4);
      v6 = *(_QWORD *)(v5 + 16);
      if (v6)
        break;
LABEL_3:
      if (++v4 == v1)
      {
        swift_bridgeObjectRelease(a1);
        return 0;
      }
    }
    swift_bridgeObjectRetain_n(*(_QWORD *)(v3 + 8 * v4), 2);
    v7 = (uint64_t *)(v5 + 56);
    while (1)
    {
      v8 = *v7;
      v9 = (uint64_t (*)(uint64_t))*(v7 - 3);
      v10 = *(v7 - 2);
      swift_retain(v10);
      v11 = swift_bridgeObjectRetain(v8);
      v1 = v9(v11);
      v13 = v12;
      swift_bridgeObjectRelease(v8);
      swift_release(v10);
      if (v13 != 1)
        break;
      v7 += 5;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n(v5, 2);
        v3 = v15;
        v1 = v16;
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease_n(v5, 2);
  }
  return v1;
}

uint64_t static ActionConditionEvaluator.buildExpression(_:)(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD2F0);
  v3 = swift_allocObject(v2, 72, 7);
  v4 = *((_QWORD *)a1 + 1);
  v6 = *a1;
  v8 = a1[1];
  v5 = v8;
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  *(_OWORD *)(v3 + 32) = v6;
  *(_OWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 64) = *((_QWORD *)a1 + 4);
  swift_retain(v4);
  sub_1391E0((uint64_t)&v8);
  return v3;
}

BOOL _s9MusicCore15ActionConditionV6ResultO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  char v9;
  char v10;

  if (a2 == 1)
    return a5 == 1;
  if (a5 == 1)
    return 0;
  if (a2)
  {
    if (a5)
    {
      if (a1 != a4 || a2 != a5)
      {
        v9 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
        v10 = 0;
        if ((v9 & 1) == 0)
          return v10 & 1;
      }
      goto LABEL_14;
    }
  }
  else
  {
    if (!a5)
    {
LABEL_14:
      v10 = ((a3 & 1) == 0) ^ a6;
      return v10 & 1;
    }
    sub_1492CC(a1, 0);
  }
  v10 = 0;
  return v10 & 1;
}

uint64_t sub_C16110()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_C1613C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  if (((*(uint64_t (**)(void))(v0 + 16))() & 1) != 0)
    return 0;
  swift_bridgeObjectRetain(v2);
  return v1;
}

uint64_t destroy for ActionCondition(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for ActionCondition(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for ActionCondition(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ActionCondition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for ActionCondition()
{
  return &type metadata for ActionCondition;
}

uint64_t sub_C162E4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 8);
  if ((int)v4 - 1 < 0)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    swift_bridgeObjectRetain(v3);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for ActionCondition.Result(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 8);
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = *(_QWORD *)(a1 + 8);
  v7 = v6 - 1;
  if (*((_QWORD *)a2 + 1) < 0xFFFFFFFFuLL)
    v5 = *((_QWORD *)a2 + 1);
  v8 = v5 - 1;
  if (v7 < 0)
  {
    if (v8 < 0)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v12 = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 8) = v12;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRelease(v4);
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      return a1;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    v10 = *a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = v10;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v9 = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_bridgeObjectRetain(v9);
  return a1;
}

uint64_t assignWithTake for ActionCondition.Result(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = *(_QWORD *)(a2 + 8);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = *(_QWORD *)(a2 + 8);
    if ((int)v7 - 1 < 0)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v6;
      swift_bridgeObjectRelease(v4);
      goto LABEL_9;
    }
    swift_bridgeObjectRelease(v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_9:
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionCondition.Result(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) >= 2)
    return v4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActionCondition.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_C16534(uint64_t result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionCondition.Result()
{
  return &type metadata for ActionCondition.Result;
}

ValueMetadata *type metadata accessor for ActionConditionEvaluator()
{
  return &type metadata for ActionConditionEvaluator;
}

void *ActionDisplayConfiguration.image.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t ActionDisplayConfiguration.init(title:subtitle:image:attributes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

void *ActionDisplayConfiguration.Attributes.disabled.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.disabled;
}

void *ActionDisplayConfiguration.Attributes.destructive.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.destructive;
}

void *ActionDisplayConfiguration.Attributes.hidden.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.hidden;
}

unint64_t sub_C165E0()
{
  unint64_t result;

  result = qword_14FD2F8;
  if (!qword_14FD2F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionDisplayConfiguration.Attributes, &type metadata for ActionDisplayConfiguration.Attributes);
    atomic_store(result, (unint64_t *)&qword_14FD2F8);
  }
  return result;
}

unint64_t sub_C16628()
{
  unint64_t result;

  result = qword_14FD300;
  if (!qword_14FD300)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionDisplayConfiguration.Attributes, &type metadata for ActionDisplayConfiguration.Attributes);
    atomic_store(result, (unint64_t *)&qword_14FD300);
  }
  return result;
}

unint64_t sub_C16670()
{
  unint64_t result;

  result = qword_14FD308;
  if (!qword_14FD308)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionDisplayConfiguration.Attributes, &type metadata for ActionDisplayConfiguration.Attributes);
    atomic_store(result, (unint64_t *)&qword_14FD308);
  }
  return result;
}

unint64_t sub_C166B8()
{
  unint64_t result;

  result = qword_14FD310[0];
  if (!qword_14FD310[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionDisplayConfiguration.Attributes, &type metadata for ActionDisplayConfiguration.Attributes);
    atomic_store(result, qword_14FD310);
  }
  return result;
}

void destroy for ActionDisplayConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

}

_QWORD *initializeWithCopy for ActionDisplayConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v6 = (void *)a2[4];
  v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v7 = v6;
  return a1;
}

_QWORD *assignWithCopy for ActionDisplayConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (void *)a1[4];
  v9 = (void *)a2[4];
  a1[4] = v9;
  v10 = v9;

  a1[5] = a2[5];
  return a1;
}

_QWORD *assignWithTake for ActionDisplayConfiguration(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(a1[3]);
  v6 = (void *)a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);

  a1[5] = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for ActionDisplayConfiguration()
{
  return &type metadata for ActionDisplayConfiguration;
}

ValueMetadata *type metadata accessor for ActionDisplayConfiguration.Attributes()
{
  return &type metadata for ActionDisplayConfiguration.Attributes;
}

uint64_t ActionList.init(_:lookup:resolver:excluding:)(uint64_t isUniquelyReferenced_nonNull_native, char *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t WitnessTable;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char **v34;
  __int128 v35;
  char *v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD v44[8];
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  __int128 v49;
  _QWORD v50[4];
  _QWORD v51[4];
  _QWORD *v52;

  v8 = a4;
  v9 = isUniquelyReferenced_nonNull_native;
  v10 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
  v11 = _swiftEmptyArrayStorage;
  v47 = a3;
  if (v10)
  {
    v48 = a2;
    *(_QWORD *)&v49 = a4;
    v52 = _swiftEmptyArrayStorage;
    sub_C058D8(0, v10, 0);
    v12 = v9 + 32;
    do
    {
      sub_95094(v12, (uint64_t)v51);
      sub_95094((uint64_t)v51, (uint64_t)v50);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD190);
      v14 = String.init<A>(describing:)(v50, v13);
      v16 = v15;
      v17 = String.components(wrappedToLineLength:bullet:)(80, 62, 0xE100000000000000, v14, v15);
      swift_bridgeObjectRelease(v16);
      __swift_destroy_boxed_opaque_existential_1(v51);
      v11 = v52;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v52);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_C058D8(0, v11[2] + 1, 1);
        v11 = v52;
      }
      v19 = v11[2];
      v18 = v11[3];
      if (v19 >= v18 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_C058D8((_QWORD *)(v18 > 1), v19 + 1, 1);
        v11 = v52;
      }
      v11[2] = v19 + 1;
      v11[v19 + 4] = v17;
      v12 += 32;
      --v10;
    }
    while (v10);
    v20 = v47;
    a2 = v48;
    v8 = v49;
  }
  else
  {
    v20 = a3;
  }
  v51[0] = v11;
  v50[0] = a2;
  __chkstk_darwin(isUniquelyReferenced_nonNull_native);
  v44[2] = a5;
  v44[3] = a6;
  v44[4] = v9;
  v44[5] = v20;
  v44[6] = v8;
  v44[7] = v51;
  type metadata accessor for ActionLookup.Group(255, a5, a6, v21);
  v22 = type metadata accessor for Array(0);
  v24 = type metadata accessor for ActionGroup(0, a5, a6, v23);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  v26 = Sequence.compactMap<A>(_:)(sub_C17180, v44, v22, v24, WitnessTable);
  v27 = v50[0];
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v27);
  v28 = v51[0];
  v29 = swift_bridgeObjectRetain();
  v30 = Array<A>.asciiBoxed()(v29);
  swift_bridgeObjectRelease(v28);
  v31 = *((_QWORD *)v30 + 2);
  if (v31)
  {
    v46 = v26;
    v32 = qword_14F9CA0;
    swift_bridgeObjectRetain();
    if (v32 != -1)
      swift_once(&qword_14F9CA0, sub_C14A2C);
    v33 = type metadata accessor for Logger(0);
    v45 = v30;
    v34 = (char **)(v30 + 40);
    *(_QWORD *)&v35 = 136446210;
    v49 = v35;
    v48 = (char *)&type metadata for Any + 8;
    do
    {
      v36 = *(v34 - 1);
      v37 = *v34;
      __swift_project_value_buffer(v33, (uint64_t)static Logger.actions);
      v38 = swift_bridgeObjectRetain_n(v37, 2);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.default.getter(v39);
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc(12, -1);
        v42 = (_QWORD *)swift_slowAlloc(32, -1);
        v52 = v42;
        *(_DWORD *)v41 = v49;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v41 + 4) = sub_BA95EC(v36, v37, (uint64_t *)&v52);
        swift_bridgeObjectRelease_n(v37, 3);
        _os_log_impl(&dword_0, v39, v40, "%{public}s", (uint8_t *)v41, 0xCu);
        swift_arrayDestroy(v42, 1, v48);
        swift_slowDealloc(v42, -1, -1);
        swift_slowDealloc(v41, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v37, 2);
      }
      v34 += 2;
      --v31;
    }
    while (v31);
    v30 = v45;
    swift_bridgeObjectRelease(v45);
    v26 = v46;
    v20 = v47;
  }
  swift_bridgeObjectRelease(v30);
  __swift_destroy_boxed_opaque_existential_1(v20);
  swift_bridgeObjectRelease(v51[0]);
  return v26;
}

uint64_t sub_C16C80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v14 = *a1;
  v22 = _swiftEmptyArrayStorage;
  sub_55D1C(a3, (uint64_t)v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_C16DB0(v14, a2, v21, a4, (uint64_t)&v22, a6, a7);
  v16 = v22;
  v17 = (_QWORD *)*a5;
  result = swift_isUniquelyReferenced_nonNull_native(*a5);
  *a5 = (uint64_t)v17;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_BCCE6C(0, v17[2] + 1, 1, v17);
    v17 = (_QWORD *)result;
    *a5 = result;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    result = (uint64_t)sub_BCCE6C((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    v17 = (_QWORD *)result;
    *a5 = result;
  }
  v17[2] = v20 + 1;
  v17[v20 + 4] = v16;
  *a8 = v15;
  return result;
}

uint64_t sub_C16DB0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[10];

  v20[9] = a1;
  v20[2] = a6;
  v20[3] = a7;
  v20[4] = a5;
  v20[5] = a4;
  v20[6] = a2;
  v20[7] = a3;
  v13 = type metadata accessor for Array(0);
  v15 = type metadata accessor for AnyAction(0, a6, a7, v14);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v13);
  v17 = Sequence.compactMap<A>(_:)(sub_C17224, v20, v13, v15, WitnessTable);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a4);
  v18 = Array.count.getter(v17);
  __swift_destroy_boxed_opaque_existential_1(a3);
  if (v18 < 1)
  {
    swift_bridgeObjectRelease(v17);
    return 0;
  }
  return v17;
}

uint64_t sub_C16EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a2;
  v37 = a8;
  v14 = *(_QWORD *)(a6 - 8);
  __chkstk_darwin(a1);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v18, v17) & 1) != 0)
  {
    if (qword_14FA618 != -1)
      swift_once(&qword_14FA618, sub_D75398);
    if (static DeviceCapabilities.isInternalInstall != 1)
      goto LABEL_9;
    v38 = 0;
    v39 = 0xE000000000000000;
    _StringGuts.grow(_:)(32);
    v20 = v39;
    v21 = sub_BC0494(a1, a6, *(_QWORD *)(a7 + 8));
    v23 = v22;
    swift_bridgeObjectRelease(v20);
    v38 = v21;
    v39 = v23;
    v24 = 0xD00000000000001ELL;
    v25 = 0x8000000001103D00;
LABEL_8:
    String.append(_:)(*(Swift::String *)&v24);
    v32 = v39;
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v38, v39, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease(v32);
LABEL_9:
    v33 = type metadata accessor for AnyAction(0, a6, a7, v19);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v37, 1, 1, v33);
  }
  v38 = a3;
  v26 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v26);
  if ((Sequence<>.contains(_:)(a1, v26, WitnessTable, *(_QWORD *)(*(_QWORD *)(a7 + 16) + 8)) & 1) != 0)
  {
    v38 = 0;
    v39 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    v28 = v39;
    v29 = sub_BC0494(a1, a6, *(_QWORD *)(a7 + 8));
    v31 = v30;
    swift_bridgeObjectRelease(v28);
    v38 = v29;
    v39 = v31;
    v25 = 0x8000000001103D20;
    v24 = 0xD000000000000016;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a6);
  sub_55D1C(a5, (uint64_t)&v38);
  swift_bridgeObjectRetain();
  return AnyAction.init(identifier:contexts:resolver:logs:)((uint64_t)v16, a4, &v38, v36, a6, a7, v37);
}

uint64_t (*sub_C1712C(uint64_t (*result)(uint64_t a1), unint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a3 + 16) > a2)
  {
    v3 = result;
    v4 = a3 + 16 * a2;
    v5 = *(_QWORD *)(v4 + 40);
    *(_QWORD *)v3 = *(_QWORD *)(v4 + 32);
    *((_QWORD *)v3 + 1) = v5;
    swift_bridgeObjectRetain();
    return destroy for PushNotificationObserver.PushConfiguration;
  }
  __break(1u);
  return result;
}

uint64_t sub_C17180@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_C16C80(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(uint64_t **)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t type metadata accessor for ActionGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionGroup);
}

uint64_t type metadata accessor for ActionList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionList);
}

uint64_t *sub_C171B8(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8)) > a2)
  {
    v4 = swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for PlayAction;
  }
  __break(1u);
  return result;
}

uint64_t sub_C17224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_C16EB4(a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3], a2);
}

void ActionType.isHidden.getter(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_C17274@<X0>(char a1@<W8>)
{
  return a1 & 1;
}

uint64_t sub_C17288()
{
  unint64_t v0;
  char v1;

  v0 = sub_C17354();
  v1 = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v0);
  return sub_C17274(v1 ^ 1u);
}

unint64_t sub_C17310()
{
  unint64_t result;

  result = qword_14FD418;
  if (!qword_14FD418)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.MediaPlayer, &type metadata for Feature.MediaPlayer);
    atomic_store(result, (unint64_t *)&qword_14FD418);
  }
  return result;
}

unint64_t sub_C17354()
{
  unint64_t result;

  result = qword_14FD420;
  if (!qword_14FD420)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.Music, &type metadata for Feature.Music);
    atomic_store(result, (unint64_t *)&qword_14FD420);
  }
  return result;
}

_QWORD *static ActionType.modelActionLookup.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t inited;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  _BYTE v23[40];
  _BYTE v24[32];
  _QWORD v25[12];

  v0 = (_BYTE *)__swift_instantiateConcreteTypeFromMangledName(&qword_14FBF58);
  v1 = swift_allocObject(v0, 40, 7);
  v22 = xmmword_105B360;
  *(_OWORD *)(v1 + 16) = xmmword_105B360;
  v21 = v1;
  *(_QWORD *)(v1 + 32) = &off_13A5100;
  v2 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_105B360;
  v20 = v2;
  *(_QWORD *)(v2 + 32) = &off_13A5128;
  v3 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  *(_QWORD *)(v3 + 32) = &off_13A5150;
  v4 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_105B360;
  *(_QWORD *)(v4 + 32) = &off_13A5178;
  v5 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_105B360;
  *(_QWORD *)(v5 + 32) = &off_13A51A8;
  v6 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_105B360;
  *(_QWORD *)(v6 + 32) = &off_13A51D0;
  v7 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_105B360;
  *(_QWORD *)(v7 + 32) = &off_13A51F8;
  v8 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_105B360;
  *(_QWORD *)(v8 + 32) = &off_13A5220;
  v9 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_105B360;
  *(_QWORD *)(v9 + 32) = &off_13A5248;
  v10 = (_QWORD *)swift_allocObject(v0, 40, 7);
  *((_OWORD *)v10 + 1) = xmmword_105B360;
  v10[4] = &off_13A5270;
  if (qword_14FA618 != -1)
LABEL_25:
    swift_once(&qword_14FA618, sub_D75398);
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    inited = swift_initStackObject(v0, v23);
    *(_OWORD *)(inited + 16) = v22;
    *(_QWORD *)(inited + 32) = &off_13A5298;
    sub_C18800((_QWORD *)inited);
  }
  v0 = v24;
  *(_QWORD *)&v22 = v25;
  v25[0] = v21;
  v25[1] = v20;
  v25[2] = v3;
  v25[3] = v4;
  v25[4] = v5;
  v25[5] = v6;
  v25[6] = v7;
  v25[7] = v8;
  v25[8] = v9;
  v25[9] = v10;
  v7 = 32;
  v25[10] = _swiftEmptyArrayStorage;
  v10 = _swiftEmptyArrayStorage;
  do
  {
    v3 = *(_QWORD *)&v24[v7];
    v4 = *(_QWORD *)(v3 + 16);
    v5 = v10[2];
    v6 = v5 + v4;
    if (__OFADD__(v5, v4))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v10);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v6 <= v10[3] >> 1)
    {
      if (!*(_QWORD *)(v3 + 16))
        goto LABEL_5;
    }
    else
    {
      if (v5 <= v6)
        v13 = v5 + v4;
      else
        v13 = v5;
      v10 = sub_BCCF8C(isUniquelyReferenced_nonNull_native, v13, 1, v10);
      if (!*(_QWORD *)(v3 + 16))
      {
LABEL_5:
        if (v4)
          goto LABEL_22;
        goto LABEL_6;
      }
    }
    v14 = v10[2];
    if ((v10[3] >> 1) - v14 < v4)
      goto LABEL_23;
    v5 = (uint64_t)&v10[v14 + 4];
    v6 = v3 + 32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF60);
    swift_arrayInitWithCopy(v5);
    if (v4)
    {
      v15 = v10[2];
      v16 = __OFADD__(v15, v4);
      v17 = v15 + v4;
      if (v16)
        goto LABEL_24;
      v10[2] = v17;
    }
LABEL_6:
    swift_bridgeObjectRelease(v3);
    v7 += 8;
  }
  while (v7 != 120);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD428);
  swift_arrayDestroy(v25, 11, v18);
  return v10;
}

uint64_t static ActionLookupBuilder.buildExpression(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v5 = type metadata accessor for ActionLookup.Group(255, a2, a3, a4);
  v6 = type metadata accessor for _ContiguousArrayStorage(0, v5);
  v7 = swift_allocObject(v6, 40, 7);
  v8 = static Array._adoptStorage(_:count:)(v7, 1);
  *v9 = a1;
  v10 = sub_9777F0(v8);
  swift_bridgeObjectRetain();
  return v10;
}

uint64_t static ActionLookupBuilder.buildBlock<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_C177FC(a1, a2, a3, a4, a5, (uint64_t)sub_BC14E8);
}

{
  return sub_C177FC(a1, a2, a3, a4, a5, (uint64_t)sub_BC04C8);
}

uint64_t static ActionLookupBuilder.buildOptional<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    v5 = a1;
  }
  else
  {
    v6 = type metadata accessor for ActionLookup.Group(0, a3, a5, a4);
    v5 = static Array._allocateUninitialized(_:)(0, v6);
  }
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_C177FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  _QWORD v12[8];

  v12[7] = a1;
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  type metadata accessor for ActionLookup.Group(255, a3, a5, a4);
  v7 = type metadata accessor for Array(255);
  v8 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  v10 = swift_getWitnessTable(&protocol conformance descriptor for [A], v7);
  return Sequence.flatMap<A>(_:)(a6, v12, v8, v7, WitnessTable, v10);
}

uint64_t static ActionType.socialActionLookup.getter()
{
  int64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD v23[3];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF58);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_105B360;
  *(_QWORD *)(v2 + 32) = &off_13A52C0;
  v3 = v2 + 32;
  v4 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_105B360;
  *(_QWORD *)(v4 + 32) = &off_13A52E8;
  v5 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_105B360;
  *(_QWORD *)(v5 + 32) = &off_13A5310;
  v23[0] = v2;
  v23[1] = v4;
  v23[2] = v5;
  swift_bridgeObjectRetain();
  result = (uint64_t)sub_BCCF8C(0, 1, 1, _swiftEmptyArrayStorage);
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_37;
  v7 = (_QWORD *)result;
  v8 = *(_QWORD *)(result + 16);
  if (v8 >= *(_QWORD *)(result + 24) >> 1)
  {
    __break(1u);
    goto LABEL_11;
  }
  v9 = result + 8 * v8 + 32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF60);
  swift_arrayInitWithCopy(v9);
  ++v7[2];
  swift_bridgeObjectRelease(v2);
  v2 = *(_QWORD *)(v4 + 16);
  v3 = v7[2];
  v0 = v3 + v2;
  if (__OFADD__(v3, v2))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = v7[3];
  result = swift_bridgeObjectRetain();
  if (v0 <= (uint64_t)(v10 >> 1))
  {
    if (v2)
      goto LABEL_6;
LABEL_16:
    if (v2)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
LABEL_17:
    swift_bridgeObjectRelease(v4);
    v15 = *(_QWORD *)(v5 + 16);
    v16 = v7[2];
    v17 = v16 + v15;
    if (__OFADD__(v16, v15))
    {
      __break(1u);
    }
    else
    {
      v18 = v7[3];
      result = swift_bridgeObjectRetain();
      if (v17 <= (uint64_t)(v18 >> 1))
      {
        if (v15)
          goto LABEL_20;
LABEL_29:
        if (!v15)
          goto LABEL_30;
        goto LABEL_32;
      }
    }
    if (v16 <= v17)
      v21 = v16 + v15;
    else
      v21 = v16;
    result = (uint64_t)sub_BCCF8C((int *)((char *)&dword_0 + 1), v21, 1, v7);
    v7 = (_QWORD *)result;
    v16 = *(_QWORD *)(result + 16);
    if (*(_QWORD *)(v5 + 16))
    {
LABEL_20:
      if ((v7[3] >> 1) - v16 >= v15)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF60);
        result = swift_arrayInitWithCopy(&v7[v16 + 4]);
        if (!v15)
        {
LABEL_30:
          swift_bridgeObjectRelease(v5);
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD428);
          swift_arrayDestroy(v23, 3, v22);
          return (uint64_t)v7;
        }
        v19 = v7[2];
        v12 = __OFADD__(v19, v15);
        v20 = v19 + v15;
        if (!v12)
        {
          v7[2] = v20;
          goto LABEL_30;
        }
        goto LABEL_36;
      }
      goto LABEL_34;
    }
    goto LABEL_29;
  }
LABEL_12:
  if (v3 <= v0)
    v14 = v0;
  else
    v14 = v3;
  result = (uint64_t)sub_BCCF8C((int *)((char *)&dword_0 + 1), v14, 1, v7);
  v7 = (_QWORD *)result;
  v3 = *(_QWORD *)(result + 16);
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_16;
LABEL_6:
  if ((v7[3] >> 1) - v3 < v2)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF60);
  result = swift_arrayInitWithCopy(&v7[v3 + 4]);
  if (!v2)
    goto LABEL_17;
  v11 = v7[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v7[2] = v13;
    goto LABEL_17;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t ActionType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C17C00 + 4 * word_109DDCA[a1]))(0x62694C6F54646461, 0xEC00000079726172);
}

unint64_t sub_C17C00()
{
  return 0xD000000000000012;
}

uint64_t sub_C18140()
{
  return 0x6E556C6169636F73;
}

uint64_t sub_C18178()
{
  return 1953656691;
}

uint64_t sub_C18188()
{
  return 0x4C74736567677573;
}

uint64_t sub_C181AC()
{
  return 0x6F7661466F646E75;
}

uint64_t sub_C181CC()
{
  return 0x676775536F646E75;
}

uint64_t sub_C181F0()
{
  return 0x6C6C754677656976;
}

_UNKNOWN **static ActionType.allCases.getter()
{
  return &off_13A58C8;
}

uint64_t sub_C18224(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = ActionType.rawValue.getter(*a1);
  v5 = v4;
  v6 = ActionType.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_C182AC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = ActionType.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_C1830C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = ActionType.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_C1834C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = ActionType.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_C183A8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore10ActionTypeO8rawValueACSgSS_tcfC_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_C183D4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = ActionType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_C183FC()
{
  char *v0;

  ActionType.isHidden.getter(*v0);
}

void sub_C18404(_QWORD *a1@<X8>)
{
  *a1 = &off_13A58C8;
}

uint64_t sub_C18414()
{
  unsigned __int8 *v0;

  return ActionType.rawValue.getter(*v0);
}

uint64_t sub_C1841C(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int64_t v12;

  v2 = *(_QWORD *)(result + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v12 = v4 + v2;
  else
    v12 = v4;
  result = sub_BCC5EC(result, v12, 1, v3);
  v3 = (_QWORD *)result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = v3[2];
  if ((v3[3] >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  result = swift_arrayInitWithCopy((char *)v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v7);
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease(v6);
    *v1 = v3;
    return result;
  }
  v9 = v3[2];
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    v3[2] = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_C18520(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v13 = v4 + v2;
  else
    v13 = v4;
  v3 = sub_BCCBF8(isUniquelyReferenced_nonNull_native, v13, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = (uint64_t)&v3[11 * v8 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF70);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v10 = v3[2];
  v11 = __OFADD__(v10, v2);
  v12 = v10 + v2;
  if (!v11)
  {
    v3[2] = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

_QWORD *sub_C1861C(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int64_t v12;

  v2 = result[2];
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (v6[2])
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v12 = v4 + v2;
  else
    v12 = v4;
  result = sub_BCCE58(result, v12, 1, v3);
  v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = v3[2];
  if ((v3[3] >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = (uint64_t)&v3[5 * v7 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
  result = (_QWORD *)swift_arrayInitWithCopy(v8);
  if (!v2)
  {
LABEL_14:
    result = (_QWORD *)swift_bridgeObjectRelease(v6);
    *v1 = v3;
    return result;
  }
  v9 = v3[2];
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    v3[2] = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_C18718(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v12 = v4 + v2;
  else
    v12 = v4;
  v3 = sub_BCC9AC(isUniquelyReferenced_nonNull_native, v12, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_arrayInitWithCopy(&v3[16 * v8 + 32]);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v9 = *((_QWORD *)v3 + 2);
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    *((_QWORD *)v3 + 2) = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

_QWORD *sub_C18800(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int64_t v12;

  v2 = result[2];
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (v6[2])
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v12 = v4 + v2;
  else
    v12 = v4;
  result = sub_BCCF8C(result, v12, 1, v3);
  v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = v3[2];
  if ((v3[3] >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = (uint64_t)&v3[v7 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF60);
  result = (_QWORD *)swift_arrayInitWithCopy(v8);
  if (!v2)
  {
LABEL_14:
    result = (_QWORD *)swift_bridgeObjectRelease(v6);
    *v1 = v3;
    return result;
  }
  v9 = v3[2];
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    v3[2] = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_C188F8(uint64_t a1)
{
  return sub_6B604(a1, sub_C7E1E8);
}

void sub_C18904(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  size_t isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = (_QWORD *)sub_BCC984(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = v3[2];
  v9 = (v3[3] >> 1) - v8;
  v10 = type metadata accessor for URLQueryItem(0);
  if (v9 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_arrayInitWithCopy((char *)v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v8);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_C18A04(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t (*v27)(uint64_t);
  uint64_t *v28;
  _BYTE v29[32];
  uint64_t v30;
  uint64_t v31;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = *((_QWORD *)v3 + 3) >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_BCC9AC(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    v8 = *((_QWORD *)v3 + 3) >> 1;
  }
  v10 = *((_QWORD *)v3 + 2);
  v11 = v8 - v10;
  v12 = sub_C7DC6C(&v30, &v3[16 * v10 + 32], v8 - v10, a1);
  if (v12 < v2)
    goto LABEL_15;
  if (v12)
  {
    v13 = *((_QWORD *)v3 + 2);
    v14 = __OFADD__(v13, v12);
    v15 = v13 + v12;
    if (v14)
    {
      __break(1u);
      goto LABEL_32;
    }
    *((_QWORD *)v3 + 2) = v15;
  }
  if (v12 != v11)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
LABEL_16:
  if (!v31)
    goto LABEL_13;
  v16 = v31 - 1;
  if (__OFSUB__(v31, 1))
    goto LABEL_34;
  v17 = *((_QWORD *)v3 + 2);
  v18 = v30;
  v19 = sub_C1712C((uint64_t (*)(uint64_t))v29, v31 - 1, v30);
  v22 = *v20;
  v21 = v20[1];
  swift_bridgeObjectRetain();
  ((void (*)(_BYTE *, _QWORD))v19)(v29, 0);
LABEL_20:
  while (1)
  {
    v23 = *((_QWORD *)v3 + 3);
    v24 = v23 >> 1;
    v5 = v17 + 1;
    if ((uint64_t)(v23 >> 1) < v17 + 1)
      break;
    if (v17 < v24)
      goto LABEL_22;
LABEL_19:
    *((_QWORD *)v3 + 2) = v17;
  }
  v3 = sub_BCC9AC((char *)(v23 > 1), v17 + 1, 1, v3);
  v24 = *((_QWORD *)v3 + 3) >> 1;
  if (v17 >= v24)
    goto LABEL_19;
LABEL_22:
  v25 = &v3[16 * v17];
  *((_QWORD *)v25 + 4) = v22;
  *((_QWORD *)v25 + 5) = v21;
  if (!v16)
  {
LABEL_32:
    *((_QWORD *)v3 + 2) = v5;
    goto LABEL_13;
  }
  v26 = v25 + 56;
  while (1)
  {
    v14 = __OFSUB__(v16--, 1);
    if (v14)
      break;
    v27 = sub_C1712C((uint64_t (*)(uint64_t))v29, v16, v18);
    v22 = *v28;
    v21 = v28[1];
    swift_bridgeObjectRetain();
    ((void (*)(_BYTE *, _QWORD))v27)(v29, 0);
    if (v24 == v5)
    {
      v17 = v24;
      *((_QWORD *)v3 + 2) = v24;
      goto LABEL_20;
    }
    *(v26 - 1) = v22;
    *v26 = v21;
    ++v5;
    v26 += 2;
    if (!v16)
      goto LABEL_32;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_C18C10(uint64_t a1)
{
  return sub_6B604(a1, sub_C7E390);
}

void sub_C18C1C(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v12 = v4 + v2;
  else
    v12 = v4;
  v3 = sub_BCD73C(isUniquelyReferenced_nonNull_native, v12, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  memcpy(&v3[32 * v8 + 32], (const void *)(a1 + 32), 32 * v2);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v9 = *((_QWORD *)v3 + 2);
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    *((_QWORD *)v3 + 2) = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_C18CFC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v16 = *v1;
  else
    v16 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease();
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((char *)&dword_18 + (v4 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    sub_C7E548(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v10 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v17 = v4;
    else
      v17 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease();
  }
  if (v10 < 1)
    goto LABEL_19;
  v11 = *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
  v12 = __OFADD__(v11, v10);
  v13 = v11 + v10;
  if (!v12)
  {
    *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8)) = v13;
LABEL_19:
    swift_bridgeObjectRelease();
    specialized Array._endMutation()(v14);
    return;
  }
  __break(1u);
}

uint64_t type metadata accessor for ActionLookup.Group(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionLookup.Group);
}

uint64_t _s9MusicCore10ActionTypeO8rawValueACSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_13A5338, a1, a2, &unk_14FA690);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x3A)
    return 58;
  else
    return v3;
}

unint64_t sub_C18F14()
{
  unint64_t result;

  result = qword_14FD430;
  if (!qword_14FD430)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionType, &type metadata for ActionType);
    atomic_store(result, (unint64_t *)&qword_14FD430);
  }
  return result;
}

unint64_t sub_C18F58(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_C18F84();
  result = sub_C18FC8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_C18F84()
{
  unint64_t result;

  result = qword_14FD438;
  if (!qword_14FD438)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionType, &type metadata for ActionType);
    atomic_store(result, (unint64_t *)&qword_14FD438);
  }
  return result;
}

unint64_t sub_C18FC8()
{
  unint64_t result;

  result = qword_14FD440;
  if (!qword_14FD440)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionType, &type metadata for ActionType);
    atomic_store(result, (unint64_t *)&qword_14FD440);
  }
  return result;
}

unint64_t sub_C19010()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FD448;
  if (!qword_14FD448)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_14FD450);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_14FD448);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xC7)
    goto LABEL_17;
  if (a2 + 57 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 57) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 57;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 57;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 57;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x3A;
  v8 = v6 - 58;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 57 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 57) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC6)
    return ((uint64_t (*)(void))((char *)&loc_C19138 + 4 * byte_109DE43[v4]))();
  *a1 = a2 + 57;
  return ((uint64_t (*)(void))((char *)sub_C1916C + 4 * byte_109DE3E[v4]))();
}

uint64_t sub_C1916C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C19174(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC1917CLL);
  return result;
}

uint64_t sub_C19188(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC19190);
  *(_BYTE *)result = a2 + 57;
  return result;
}

uint64_t sub_C19194(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C1919C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionType()
{
  return &type metadata for ActionType;
}

uint64_t type metadata accessor for ActionLookup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionLookup);
}

uint64_t type metadata accessor for ActionLookupBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionLookupBuilder);
}

_QWORD *sub_C191D0@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(unsigned __int8 *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  _QWORD *result;
  _QWORD *boxed_opaque_existential_1Tm;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  Swift::String v53;
  uint64_t v54;
  void *v55;
  Swift::String v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  Swift::String v63;
  uint64_t v64;
  void *v65;
  Swift::String v66;
  Swift::String v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _QWORD *v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _BYTE v82[128];
  _OWORD v83[9];
  __int128 v84;
  void *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  _OWORD v90[4];
  _QWORD v91[5];
  _BYTE v92[80];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  unsigned __int8 v97[17];

  v97[0] = a1;
  ActionType.isHidden.getter(a1);
  if ((v10 & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    if (qword_14FA618 != -1)
      swift_once(&qword_14FA618, sub_D75398);
    if ((static DeviceCapabilities.isInternalInstall & 1) == 0)
      goto LABEL_17;
    _StringGuts.grow(_:)(32);
    v11 = ActionType.rawValue.getter(a1);
    v13 = v12;
    swift_bridgeObjectRelease(0xE000000000000000);
    *(_QWORD *)v92 = v11;
    *(_QWORD *)&v92[8] = v13;
    v14 = 0xD00000000000001ELL;
    v15 = " - Action identifier is hidden";
    goto LABEL_13;
  }
  v16 = a3[3];
  v17 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v16);
  v18 = *(uint64_t (**)(unsigned __int8 *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v17 + 8);
  v19 = sub_C18FC8();
  v20 = v18(v97, &type metadata for ActionType, v19, v16, v17);
  if (!v20)
  {
    swift_bridgeObjectRelease(a2);
    _StringGuts.grow(_:)(22);
    v32 = ActionType.rawValue.getter(a1);
    v34 = v33;
    swift_bridgeObjectRelease(0xE000000000000000);
    *(_QWORD *)v92 = v32;
    *(_QWORD *)&v92[8] = v34;
    v14 = 0xD000000000000014;
    v15 = " - No implementation";
LABEL_13:
    v35 = (unint64_t)(v15 - 32) | 0x8000000000000000;
    String.append(_:)(*(Swift::String *)&v14);
    v36 = *(_QWORD *)&v92[8];
    v38 = *(_QWORD *)&v92[8];
    v37 = *(_QWORD *)v92;
LABEL_16:
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v37, v38, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease(v36);
LABEL_17:
    __swift_destroy_boxed_opaque_existential_1(a3);
    sub_58ABA8(0, 1, 0, 0, 0);
    sub_5C198(0, 0);
    sub_5C198(0, 0);
    sub_5C198(0, 0);
    sub_5C198(0, 0);
    sub_58A990(v92);
    return (_QWORD *)sub_5C090((uint64_t)v92, a5, &qword_14FD730);
  }
  *(_QWORD *)&v79 = a4;
  v22 = *(_QWORD *)(a2 + 16);
  if (!v22)
  {
    swift_bridgeObjectRelease(a2);
LABEL_15:
    *(_QWORD *)v92 = 0;
    *(_QWORD *)&v92[8] = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    v39 = *(_QWORD *)&v92[8];
    v40 = ActionType.rawValue.getter(v97[0]);
    v42 = v41;
    swift_bridgeObjectRelease(v39);
    *(_QWORD *)v92 = v40;
    *(_QWORD *)&v92[8] = v42;
    v43._countAndFlagsBits = 0xD000000000000016;
    v43._object = (void *)0x8000000001103CC0;
    String.append(_:)(v43);
    v36 = *(_QWORD *)&v92[8];
    v38 = *(_QWORD *)&v92[8];
    v37 = *(_QWORD *)v92;
    goto LABEL_16;
  }
  v23 = v20;
  v24 = v21;
  v76 = a3;
  v77 = a5;
  *(_QWORD *)&v80 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)&v78 = a2;
  v25 = a2 + 32;
  while (1)
  {
    sub_95094(v25, (uint64_t)&v84);
    v26 = type metadata accessor for Optional(0, v23);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = __chkstk_darwin(v26);
    v30 = (char *)&v72 - v29;
    ((void (*)(__int128 *, uint64_t, uint64_t, double))v80)(&v84, v23, v24, v28);
    v31 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v30, 1, v23) != 1)
      break;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
    memset(v92, 0, 40);
    sub_56024((uint64_t)v92, &qword_14FD198);
    v25 += 32;
    if (!--v22)
    {
      swift_bridgeObjectRelease(v78);
      a3 = v76;
      a5 = v77;
      goto LABEL_15;
    }
  }
  *(_QWORD *)&v92[24] = v23;
  *(_QWORD *)&v92[32] = v24;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
  (*(void (**)(_QWORD *, char *, uint64_t))(v31 + 32))(boxed_opaque_existential_1Tm, v30, v23);
  swift_bridgeObjectRelease(v78);
  sub_8B15C((__int128 *)v92, (uint64_t)v91);
  sub_55D1C((uint64_t)v91, (uint64_t)&v84);
  v46 = v97[0];
  result = sub_C198E0(&v84, v97[0], v92);
  v47 = v93;
  if ((_QWORD)v93)
  {
    v48 = *((_QWORD *)&v93 + 1);
    v49 = ((uint64_t (*)(_QWORD *))v93)(result);
    if (v50 != 1)
    {
      v60 = v49;
      v61 = v50;
      if ((v51 & 1) != 0)
      {
        sub_1492CC(v49, v50);
        v64 = *(_QWORD *)&v92[8];
        v65 = *(void **)&v92[16];
      }
      else
      {
        *(_QWORD *)&v84 = ActionType.rawValue.getter(v46);
        *((_QWORD *)&v84 + 1) = v62;
        v63._countAndFlagsBits = 10272;
        v63._object = (void *)0xE200000000000000;
        String.append(_:)(v63);
        v64 = *(_QWORD *)&v92[8];
        v65 = *(void **)&v92[16];
        swift_bridgeObjectRetain();
        v66._countAndFlagsBits = v64;
        v66._object = v65;
        String.append(_:)(v66);
        swift_bridgeObjectRelease(v65);
        v67._countAndFlagsBits = 539828265;
        v67._object = (void *)0xE400000000000000;
        String.append(_:)(v67);
        if (v61)
          v68 = v60;
        else
          v68 = 0xD000000000000013;
        if (v61)
          v69 = v61;
        else
          v69 = 0x8000000001103CE0;
        v70 = v69;
        String.append(_:)(*(Swift::String *)&v68);
        swift_bridgeObjectRelease(v69);
        v71 = *((_QWORD *)&v84 + 1);
        Array<A>.appendStringComponents(_:lineLength:bullet:)(v84, *((uint64_t *)&v84 + 1), 80, 120, 0xE100000000000000);
        swift_bridgeObjectRelease(v71);
      }
      LOBYTE(v84) = v92[0];
      *((_QWORD *)&v84 + 1) = v64;
      v85 = v65;
      v86 = *(_OWORD *)&v92[24];
      v87 = *(_OWORD *)&v92[40];
      v88 = *(_OWORD *)&v92[56];
      *(_QWORD *)&v89 = *(_QWORD *)&v92[72];
      *((_QWORD *)&v89 + 1) = v47;
      *(_QWORD *)&v90[0] = v48;
      *(_OWORD *)((char *)v90 + 8) = v94;
      *(_OWORD *)((char *)&v90[1] + 8) = v95;
      *(_OWORD *)((char *)&v90[2] + 8) = v96;
      sub_58ACF0(&v84);
      __swift_destroy_boxed_opaque_existential_1(v91);
      a3 = v76;
      a5 = v77;
      goto LABEL_17;
    }
    *(_QWORD *)&v84 = ActionType.rawValue.getter(v46);
    *((_QWORD *)&v84 + 1) = v52;
    v53._countAndFlagsBits = 10272;
    v53._object = (void *)0xE200000000000000;
    String.append(_:)(v53);
    v54 = *(_QWORD *)&v92[8];
    v55 = *(void **)&v92[16];
    swift_bridgeObjectRetain();
    v56._countAndFlagsBits = v54;
    v56._object = v55;
    String.append(_:)(v56);
    swift_bridgeObjectRelease(v55);
    v57._countAndFlagsBits = 41;
    v57._object = (void *)0xE100000000000000;
    String.append(_:)(v57);
    v58 = *((_QWORD *)&v84 + 1);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v84, *((uint64_t *)&v84 + 1), 80, 9673954, 0xA300000000000000);
    swift_bridgeObjectRelease(v58);
    __swift_destroy_boxed_opaque_existential_1(v91);
    sub_58ABA8(0, 1, 0, 0, 0);
    sub_5C198(0, 0);
    sub_5C198(0, 0);
    sub_5C198(0, 0);
    sub_5C198(0, 0);
    *(_OWORD *)&v82[16] = *(_OWORD *)&v92[32];
    *(_OWORD *)&v82[32] = *(_OWORD *)&v92[48];
    *(_OWORD *)&v82[48] = *(_OWORD *)&v92[64];
    *(_OWORD *)&v82[64] = v93;
    *(_OWORD *)&v82[80] = v94;
    *(_OWORD *)&v82[96] = v95;
    *(_OWORD *)&v82[112] = v96;
    v81 = *(_OWORD *)v92;
    *(_OWORD *)v82 = *(_OWORD *)&v92[16];
    v80 = *(_OWORD *)&v82[8];
    v79 = *(_OWORD *)&v82[24];
    v78 = *(_OWORD *)&v82[40];
    v83[6] = v94;
    v83[7] = v95;
    v75 = *(_OWORD *)&v82[56];
    v83[8] = v96;
    v83[2] = *(_OWORD *)&v92[32];
    v83[3] = *(_OWORD *)&v92[48];
    v73 = *(_OWORD *)&v82[88];
    v74 = *(_OWORD *)&v82[72];
    v83[4] = *(_OWORD *)&v92[64];
    v83[5] = v93;
    v72 = *(_OWORD *)&v82[104];
    v59 = *((_QWORD *)&v96 + 1);
    v83[0] = *(_OWORD *)v92;
    v83[1] = *(_OWORD *)&v92[16];
    UIScreen.Dimensions.size.getter(*((double *)&v95 + 1));
    sub_5C090((uint64_t)v83, v77, &qword_14FD730);
    sub_58A9AC(&v81);
    __swift_destroy_boxed_opaque_existential_1(v76);
    v84 = *(_OWORD *)v92;
    v86 = v80;
    v87 = v79;
    v88 = v78;
    v89 = v75;
    v90[0] = v74;
    v90[1] = v73;
    v90[2] = v72;
    v85 = *(void **)&v92[16];
    *(_QWORD *)&v90[3] = v59;
    return sub_58ACF0(&v84);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_C198E0@<X0>(_QWORD *a1@<X0>, char a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t DynamicType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  __int128 v34;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)();
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t (*v59)();
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v4 = a1[3];
  v5 = __swift_project_boxed_opaque_existential_1(a1, v4);
  DynamicType = swift_getDynamicType(v5, v4, 1);
  v7 = a1[4];
  *(_QWORD *)&v45 = DynamicType;
  *((_QWORD *)&v45 + 1) = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD2C0);
  v9 = String.init<A>(describing:)(&v45, v8);
  v11 = v10;
  sub_55D1C((uint64_t)a1, (uint64_t)&v45);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD2C8);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD2D0);
  if (swift_dynamicCast(&v61, &v45, v12, v13, 6))
  {
    v14 = *((_QWORD *)&v62 + 1);
    v15 = v63;
    __swift_project_boxed_opaque_existential_1(&v61, *((uint64_t *)&v62 + 1));
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v15 + 8))(&v64, v14, v15);
    v16 = v64;
    v34 = v65;
    v33 = v66;
    v30 = v68;
    v31 = v67;
    __swift_destroy_boxed_opaque_existential_1(&v61);
  }
  else
  {
    v63 = 0;
    v61 = 0u;
    v62 = 0u;
    sub_56024((uint64_t)&v61, &qword_14FD2D8);
    v16 = 0;
    v33 = 0;
    v30 = 0;
    v31 = 0;
    v34 = 1uLL;
  }
  sub_58ABA8(0, 1, 0, 0, 0);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
  sub_55D1C((uint64_t)a1, (uint64_t)&v45);
  v27 = swift_allocObject(&unk_13AE968, 56, 7);
  sub_8B15C(&v45, v27 + 16);
  sub_5C198(0, 0);
  sub_55D1C((uint64_t)a1, (uint64_t)&v45);
  v29 = swift_allocObject(&unk_13AE990, 56, 7);
  sub_8B15C(&v45, v29 + 16);
  sub_5C198(0, 0);
  sub_55D1C((uint64_t)a1, (uint64_t)&v45);
  v28 = swift_allocObject(&unk_13AE9B8, 56, 7);
  sub_8B15C(&v45, v28 + 16);
  sub_5C198(0, 0);
  sub_55D1C((uint64_t)a1, (uint64_t)&v45);
  v20 = swift_allocObject(&unk_13AE9E0, 56, 7);
  sub_8B15C(&v45, v20 + 16);
  sub_5C198(0, 0);
  LOBYTE(v36) = a2;
  *((_QWORD *)&v36 + 1) = v9;
  *(_QWORD *)&v37 = v11;
  *((_QWORD *)&v37 + 1) = v16;
  v38 = v34;
  *(_QWORD *)&v39 = v33;
  *((_QWORD *)&v39 + 1) = v31;
  *(_QWORD *)&v40 = v30;
  *((_QWORD *)&v40 + 1) = v19;
  *(_QWORD *)&v41 = sub_C1E2DC;
  *((_QWORD *)&v41 + 1) = v27;
  *(_QWORD *)&v42 = &unk_14FD2E0;
  *((_QWORD *)&v42 + 1) = v29;
  *(_QWORD *)&v43 = &unk_14FD2E8;
  *((_QWORD *)&v43 + 1) = v28;
  *(_QWORD *)&v44 = sub_C1E2E4;
  *((_QWORD *)&v44 + 1) = v20;
  v21 = v37;
  *a3 = v36;
  a3[1] = v21;
  v22 = v44;
  v23 = v42;
  a3[7] = v43;
  a3[8] = v22;
  v24 = v40;
  a3[5] = v41;
  a3[6] = v23;
  v25 = v38;
  a3[3] = v39;
  a3[4] = v24;
  a3[2] = v25;
  sub_58A9AC(&v36);
  __swift_destroy_boxed_opaque_existential_1(a1);
  LOBYTE(v45) = a2;
  *((_QWORD *)&v45 + 1) = v9;
  v46 = v11;
  v47 = v16;
  v48 = v34;
  v49 = v33;
  v50 = v31;
  v51 = v30;
  v52 = v19;
  v53 = sub_C1E2DC;
  v54 = v27;
  v55 = &unk_14FD2E0;
  v56 = v29;
  v57 = &unk_14FD2E8;
  v58 = v28;
  v59 = sub_C1E2E4;
  v60 = v20;
  return sub_58ACF0(&v45);
}

uint64_t sub_C19C70()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[3] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[5] = v4;
  v1[6] = v5;
  return swift_task_switch(sub_C19CDC, v4, v5);
}

void sub_C19CDC()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  void (*v7)(void);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  BOOL v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(void);
  uint64_t v37[2];

  v1 = *(uint64_t (**)(void))(v0[3] + 80);
  if (v1)
  {
    v2 = v1();
    v4 = v3;
    sub_1492CC(v2, v3);
    if (v4 != 1)
    {
      v8 = swift_release();
      v9 = ((uint64_t (*)(__n128))v1)(v8);
      if (v10 == 1)
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD758);
        v12 = sub_5C150(&qword_14FD760, &qword_14FD758, (uint64_t)&protocol conformance descriptor for AnyAction<A>.Error);
        v13 = swift_allocError(v11, v12, 0, 0);
        v14 = v13;
        *v15 = 0;
        v15[1] = 0;
      }
      else
      {
        v16 = v9;
        v17 = v10;
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD758);
        v19 = sub_5C150(&qword_14FD760, &qword_14FD758, (uint64_t)&protocol conformance descriptor for AnyAction<A>.Error);
        v13 = swift_allocError(v18, v19, 0, 0);
        v14 = v13;
        *v20 = v16;
        v20[1] = v17;
      }
      swift_willThrow(v13);
      if (qword_14F9CA0 != -1)
        swift_once(&qword_14F9CA0, sub_C14A2C);
      v21 = (_QWORD *)v0[3];
      v22 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v22, (uint64_t)static Logger.actions);
      sub_58A9AC(v21);
      swift_errorRetain(v14);
      sub_58A9AC(v21);
      v23 = swift_errorRetain(v14);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.error.getter(v24);
      v26 = os_log_type_enabled(v24, v25);
      v27 = (unsigned __int8 *)v0[3];
      if (v26)
      {
        v28 = swift_slowAlloc(22, -1);
        v29 = swift_slowAlloc(64, -1);
        v37[0] = v29;
        *(_DWORD *)v28 = 136446466;
        v30 = (char *)ActionType.rawValue.getter(*v27);
        *(_QWORD *)(v28 + 4) = sub_BA95EC(v30, v31, v37);
        swift_bridgeObjectRelease();
        sub_58ACF0(v27);
        sub_58ACF0(v27);
        *(_WORD *)(v28 + 12) = 2082;
        v0[2] = v14;
        swift_errorRetain(v14);
        v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
        v33 = (char *)String.init<A>(describing:)(v0 + 2, v32);
        *(_QWORD *)(v28 + 14) = sub_BA95EC(v33, v34, v37);
        swift_bridgeObjectRelease();
        swift_errorRelease(v14);
        swift_errorRelease(v14);
        _os_log_impl(&dword_0, v24, v25, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v28, -1, -1);
      }
      else
      {
        sub_58ACF0((_QWORD *)v0[3]);
        sub_58ACF0(v27);
        swift_errorRelease(v14);
        swift_errorRelease(v14);
      }

      swift_willThrow(v35);
      v7 = (void (*)(void))v0[1];
      goto LABEL_14;
    }
    v5 = *(int **)(v0[3] + 96);
    if (v5)
    {
      v36 = (void (*)(void))((char *)v5 + *v5);
      v6 = (_QWORD *)swift_task_alloc(v5[1]);
      v0[7] = v6;
      *v6 = v0;
      v6[1] = sub_C1A01C;
      v7 = v36;
LABEL_14:
      v7();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_C1A01C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C1A140;
  else
    v4 = sub_C1A07C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

void sub_C1A07C()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  void (*v3)(void);

  v1 = *(int **)(*(_QWORD *)(v0 + 24) + 112);
  if (v1)
  {
    v3 = (void (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 72) = v2;
    *v2 = v0;
    v2[1] = sub_C1A0E0;
    v3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_C1A0E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C1A3B4;
  else
    v4 = sub_C1A368;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_C1A140()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v18[2];

  swift_release();
  v1 = *(_QWORD *)(v0 + 64);
  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v2 = *(_QWORD **)(v0 + 24);
  v3 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v3, (uint64_t)static Logger.actions);
  sub_58A9AC(v2);
  swift_errorRetain(v1);
  sub_58A9AC(v2);
  v4 = swift_errorRetain(v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(unsigned __int8 **)(v0 + 24);
  if (v7)
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v18[0] = v10;
    *(_DWORD *)v9 = 136446466;
    v11 = (char *)ActionType.rawValue.getter(*v8);
    *(_QWORD *)(v9 + 4) = sub_BA95EC(v11, v12, v18);
    swift_bridgeObjectRelease();
    sub_58ACF0(v8);
    sub_58ACF0(v8);
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v14 = (char *)String.init<A>(describing:)(v0 + 16, v13);
    *(_QWORD *)(v9 + 14) = sub_BA95EC(v14, v15, v18);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v5, v6, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    sub_58ACF0(*(_QWORD **)(v0 + 24));
    sub_58ACF0(v8);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  swift_willThrow(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C1A368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void (*v3)(uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  result = swift_release(*(_QWORD *)(v0 + 32));
  v3 = *(void (**)(uint64_t))(v1 + 128);
  if (v3)
  {
    v3(result);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_C1A3B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v18[2];

  swift_release();
  v1 = *(_QWORD *)(v0 + 80);
  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v2 = *(_QWORD **)(v0 + 24);
  v3 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v3, (uint64_t)static Logger.actions);
  sub_58A9AC(v2);
  swift_errorRetain(v1);
  sub_58A9AC(v2);
  v4 = swift_errorRetain(v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(unsigned __int8 **)(v0 + 24);
  if (v7)
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v18[0] = v10;
    *(_DWORD *)v9 = 136446466;
    v11 = (char *)ActionType.rawValue.getter(*v8);
    *(_QWORD *)(v9 + 4) = sub_BA95EC(v11, v12, v18);
    swift_bridgeObjectRelease();
    sub_58ACF0(v8);
    sub_58ACF0(v8);
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v14 = (char *)String.init<A>(describing:)(v0 + 16, v13);
    *(_QWORD *)(v9 + 14) = sub_BA95EC(v14, v15, v18);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v5, v6, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    sub_58ACF0(*(_QWORD **)(v0 + 24));
    sub_58ACF0(v8);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  swift_willThrow(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t property wrapper backing initializer of Actionable.contexts(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD5D8);
  State.init(wrappedValue:)(&v4, &v3, v1);
  return v4;
}

uint64_t sub_C1A618()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD790);
  State.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t sub_C1A65C()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD798);
  Binding.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t Actionable.init(lookup:excluding:resolver:preview:propertyLoader:hasLoadedModelProperties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD v36[2];

  v33 = a6;
  v34 = a7;
  v32 = a5;
  v31 = a10;
  v30 = a9;
  v17 = *(_QWORD *)(a11 - 8);
  __chkstk_darwin(a1);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = _swiftEmptyArrayStorage;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD5D8);
  State.init(wrappedValue:)(v36, &v35, v20);
  v21 = v36[1];
  *(_QWORD *)a8 = v36[0];
  *((_QWORD *)a8 + 1) = v21;
  *((_QWORD *)a8 + 2) = a1;
  *((_QWORD *)a8 + 3) = a2;
  v22 = sub_55D1C((uint64_t)a3, (uint64_t)(a8 + 32));
  a4(v22);
  __swift_destroy_boxed_opaque_existential_1(a3);
  v24 = (int *)type metadata accessor for Actionable(0, a11, a12, v23);
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(&a8[v24[12]], v19, a11);
  v26 = &a8[v24[13]];
  v27 = v33;
  *(_QWORD *)v26 = v32;
  *((_QWORD *)v26 + 1) = v27;
  v28 = &a8[v24[14]];
  v29 = v30;
  *(_QWORD *)v28 = v34;
  *((_QWORD *)v28 + 1) = v29;
  v28[16] = v31;
  return result;
}

uint64_t type metadata accessor for Actionable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Actionable);
}

uint64_t Actionable.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25[16];
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29[16];
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v23 = a1;
  v24 = a3;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Actionable<A>, a2);
  v6 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD5E0);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v6);
  v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD5E8);
  v34 = &type metadata for Bool;
  v35 = sub_C1AA1C();
  v36 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v33, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v11 = *(_QWORD *)(a2 + 24);
  v33 = v6;
  v34 = (void *)v7;
  v35 = v8;
  v36 = (void *)v9;
  v37 = OpaqueTypeConformance2;
  v38 = v11;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v33, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:)>>, 0);
  v22 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v21 - v16;
  v30 = v8;
  v31 = v11;
  v32 = v3;
  v26 = v8;
  v27 = v11;
  v28 = v3;
  v18 = swift_checkMetadataState(0, v6);
  View.contextMenu<A, B>(menuItems:preview:)(sub_C1AB1C, v29, sub_C1B014, v25, v18, v7, v8, v9, OpaqueTypeConformance2, v11);
  v33 = v18;
  v34 = (void *)v7;
  v35 = v8;
  v36 = (void *)v9;
  v37 = OpaqueTypeConformance2;
  v38 = v11;
  swift_getOpaqueTypeConformance2(&v33, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:)>>, 1);
  sub_505E64((uint64_t)v14, OpaqueTypeMetadata2, (uint64_t)v17);
  v19 = *(void (**)(char *, uint64_t))(v22 + 8);
  v19(v14, OpaqueTypeMetadata2);
  sub_4FF1F4((uint64_t)v17, OpaqueTypeMetadata2, v24);
  return ((uint64_t (*)(char *, uint64_t))v19)(v17, OpaqueTypeMetadata2);
}

unint64_t sub_C1AA1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FD5F0;
  if (!qword_14FD5F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD5E8);
    sub_C1AAA0();
    sub_4DD24(&qword_14FD618, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14FD5F0);
  }
  return result;
}

unint64_t sub_C1AAA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FD5F8;
  if (!qword_14FD5F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD600);
    sub_5C150(&qword_14FD608, &qword_14FD610, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_14FD5F8);
  }
  return result;
}

uint64_t sub_C1AB1C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = type metadata accessor for Actionable(0, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1);
  return sub_C1AB50(v4, a2);
}

uint64_t sub_C1AB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double (*v50)(uint64_t, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;

  v49 = a2;
  v48 = type metadata accessor for TaskPriority(0);
  v45 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v46 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v7);
  v8 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD600);
  v44 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v55 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD5E8);
  __chkstk_darwin(v56);
  v42 = v2;
  v43 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = *(_QWORD *)(v2 + 16);
  KeyPath = swift_getKeyPath(&unk_109E018);
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v54(v8, v2, a1);
  v11 = *(unsigned __int8 *)(v5 + 80);
  v12 = (v11 + 32) & ~v11;
  v51 = v12 + v6;
  v13 = v11 | 7;
  v40 = v11 | 7;
  v14 = swift_allocObject(&unk_13AEA30, v12 + v6, v11 | 7);
  v15 = *(_QWORD *)(a1 + 24);
  v52 = *(_QWORD *)(a1 + 16);
  v53 = v15;
  *(_QWORD *)(v14 + 16) = v52;
  *(_QWORD *)(v14 + 24) = v15;
  v39 = v12;
  v50 = *(double (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v50(v14 + v12, v8, a1);
  swift_bridgeObjectRetain();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD428);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD610);
  v18 = sub_5C150(&qword_14FD630, &qword_14FD428, (uint64_t)&protocol conformance descriptor for [A]);
  v19 = sub_1F6F44(&qword_14FD638, qword_14FD450, (void (*)(void))sub_C18FC8, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v20 = sub_5C150(&qword_14FD608, &qword_14FD610, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  ForEach<>.init(_:id:content:)(&v58, KeyPath, sub_C1E4C0, v14, v16, v17, v18, v19, v20);
  v21 = v42;
  v54(v8, v42, a1);
  v22 = swift_allocObject(&unk_13AEA58, v51, v13);
  v23 = v53;
  *(_QWORD *)(v22 + 16) = v52;
  *(_QWORD *)(v22 + 24) = v23;
  v24.n128_f64[0] = v50(v22 + v12, v8, a1);
  v25 = v46;
  static TaskPriority.userInitiated.getter(v24);
  v26 = (uint64_t)v43;
  v27 = &v43[*(int *)(v56 + 36)];
  v28 = type metadata accessor for _TaskModifier(0);
  v29 = v45;
  v30 = v48;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(&v27[*(int *)(v28 + 20)], v25, v48);
  *(_QWORD *)v27 = &unk_14FD780;
  *((_QWORD *)v27 + 1) = v22;
  v31 = v44;
  v32 = v55;
  v33 = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v26, v55, v47);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v30);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  v57 = sub_C1A65C() & 1;
  v54(v8, v21, a1);
  v34 = swift_allocObject(&unk_13AEA80, v51, v40);
  v35 = v53;
  *(_QWORD *)(v34 + 16) = v52;
  *(_QWORD *)(v34 + 24) = v35;
  v50(v34 + v39, v8, a1);
  v36 = sub_C1AA1C();
  View.onChange<A>(of:initial:_:)(&v57, 0, sub_C1E5B0, v34, v56, &type metadata for Bool, v36, &protocol witness table for Bool);
  swift_release();
  return sub_56024(v26, &qword_14FD5E8);
}

uint64_t sub_C1AF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Actionable(0, v9, v10, v11);
  sub_505E64(a1 + *(int *)(v12 + 48), a2, (uint64_t)v8);
  sub_4FF1F4((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_C1B014@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_C1AF68(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

double sub_C1B020@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *, uint64_t);
  double result;
  _QWORD v51[2];
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;

  v59 = a5;
  v9 = type metadata accessor for Divider(0);
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  __chkstk_darwin(v9);
  v56 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v52 = (char *)v51 - v12;
  v14 = type metadata accessor for Actionable(0, a3, a4, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v18 = (char *)v51 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD7A0);
  v54 = *(_QWORD *)(v19 - 8);
  v55 = v19;
  __chkstk_darwin(v19);
  v53 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v60 = (char *)v51 - v22;
  v23 = *a1;
  v24 = swift_allocObject(&unk_13AE8C8, 24, 7);
  *(_QWORD *)(v24 + 16) = _swiftEmptyArrayStorage;
  v61 = v23;
  v51[0] = swift_getKeyPath(&unk_109E100);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a2, v14);
  v25 = *(unsigned __int8 *)(v15 + 80);
  v26 = (v25 + 32) & ~v25;
  v27 = (v16 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject(&unk_13AEAF8, v27 + 8, v25 | 7);
  *(_QWORD *)(v28 + 16) = a3;
  *(_QWORD *)(v28 + 24) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v28 + v26, v18, v14);
  v51[1] = v24;
  *(_QWORD *)(v28 + v27) = v24;
  swift_bridgeObjectRetain();
  swift_retain();
  v29 = __swift_instantiateConcreteTypeFromMangledName(qword_14FD450);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD7A8);
  v31 = sub_5C150(&qword_14FD6E8, qword_14FD450, (uint64_t)&protocol conformance descriptor for [A]);
  v32 = sub_C18FC8();
  v33 = sub_1F6F44(&qword_14FD7B0, &qword_14FD7A8, (void (*)(void))sub_C1DD90, (uint64_t)&protocol conformance descriptor for <A> A?);
  v34 = v60;
  v35 = ForEach<>.init(_:id:content:)(&v61, v51[0], sub_C1E83C, v28, v29, v30, v31, v32, v33);
  v36 = v52;
  Divider.init()(v35);
  v37 = v53;
  v38 = v54;
  v39 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  v40 = v34;
  v41 = v55;
  v39(v53, v40, v55);
  v42 = v56;
  v43 = v57;
  v44 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  v45 = v58;
  v44(v56, v36, v58);
  v46 = v59;
  v39(v59, v37, v41);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD7B8);
  v44(&v46[*(int *)(v47 + 48)], v42, v45);
  v48 = *(void (**)(char *, uint64_t))(v43 + 8);
  v48(v36, v45);
  v49 = *(void (**)(char *, uint64_t))(v38 + 8);
  v49(v60, v41);
  v48(v42, v45);
  v49(v37, v41);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_C1B37C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[18];
  _BYTE v17[144];
  _BYTE v18[144];
  _OWORD v19[9];
  _OWORD v20[9];

  v7 = *a1;
  v8 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_C36950(v7, v8);
  v10 = v9;
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
    goto LABEL_3;
  v11 = a3 + 16;
  v12 = sub_C1A618();
  sub_55D1C(a2 + 32, (uint64_t)v20);
  swift_beginAccess(v11, v16, 33, 0);
  sub_C191D0(v7, v12, v20, v11, (uint64_t)v17);
  swift_endAccess(v16);
  sub_5C090((uint64_t)v17, (uint64_t)v18, &qword_14FD730);
  sub_5C090((uint64_t)v18, (uint64_t)v19, &qword_14FD730);
  if (sub_195990((uint64_t)v19) == 1)
  {
LABEL_3:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD710);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a4, 1, 1, v13);
  }
  else
  {
    v20[6] = v19[6];
    v20[7] = v19[7];
    v20[8] = v19[8];
    v20[2] = v19[2];
    v20[3] = v19[3];
    v20[4] = v19[4];
    v20[5] = v19[5];
    v20[0] = v19[0];
    v20[1] = v19[1];
    sub_5C090((uint64_t)v18, (uint64_t)v16, &qword_14FD730);
    sub_58A9AC(v16);
    sub_C1B51C(a4);
    sub_58AA74((uint64_t)v18);
    sub_58AA74((uint64_t)v18);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD710);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a4, 0, 1, v15);
  }
}

void sub_C1B51C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  void *v16;
  uint64_t (*v17)(uint64_t);
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  void (*v36)(char *, char *, uint64_t, __n128);
  uint64_t v37;
  _QWORD v38[2];
  _QWORD *v39;
  uint64_t v40;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBC70);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD620);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.n128_f64[0] = __chkstk_darwin(v11);
  v14 = (char *)v38 - v13;
  v15 = v1[4];
  if (v15 < 2)
    goto LABEL_8;
  v16 = (void *)v1[7];
  if (!v16)
    goto LABEL_8;
  v40 = a1;
  v17 = (uint64_t (*)(uint64_t))v1[10];
  if (!v17)
  {
    __break(1u);
    return;
  }
  v18 = (_QWORD *)v1[8];
  v38[1] = v1[3];
  v39 = v18;
  v19 = v16;
  v20 = swift_bridgeObjectRetain();
  v21 = v17(v20);
  v23 = v22;
  sub_1492CC(v21, v22);
  if (v23 != 1)
  {
    swift_bridgeObjectRelease(v15);

    a1 = v40;
LABEL_8:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(a1, 1, 1, v7, v12);
    return;
  }
  v24 = (_OWORD *)swift_allocObject(&unk_13AE918, 160, 7);
  v25 = *((_OWORD *)v2 + 7);
  v24[7] = *((_OWORD *)v2 + 6);
  v24[8] = v25;
  v24[9] = *((_OWORD *)v2 + 8);
  v26 = *((_OWORD *)v2 + 3);
  v24[3] = *((_OWORD *)v2 + 2);
  v24[4] = v26;
  v27 = *((_OWORD *)v2 + 5);
  v24[5] = *((_OWORD *)v2 + 4);
  v24[6] = v27;
  v28 = *((_OWORD *)v2 + 1);
  v24[1] = *(_OWORD *)v2;
  v24[2] = v28;
  if ((v39 & 2) != 0)
  {
    sub_58A9AC(v2);
    static ButtonRole.destructive.getter(v6);
    v31 = type metadata accessor for ButtonRole(0);
    v30 = (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v6, 0, 1, v31);
  }
  else
  {
    v29 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 1, 1, v29);
    v30 = sub_58A9AC(v2);
  }
  v39 = v38;
  __chkstk_darwin(v30);
  v38[-4] = v32;
  v38[-3] = v15;
  v38[-2] = v19;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBBC8);
  v34 = sub_5C150(&qword_14FBBC0, &qword_14FBBC8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  Button.init(role:action:label:)(v6, sub_C1E058, v24, sub_C1CFA8, &v38[-6], v33, v34);

  v35 = swift_bridgeObjectRelease(v15);
  v36 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 32);
  v36(v14, v10, v7, v35);
  v37 = v40;
  ((void (*)(uint64_t, char *, uint64_t))v36)(v40, v14, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
}

uint64_t AnyAction.button.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t *v17;
  unint64_t v18;
  void *v19;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBC70);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD620);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  __chkstk_darwin(v10);
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v16.n128_f64[0] = __chkstk_darwin(v13);
  v17 = (uint64_t *)(v2 + *(int *)(a1 + 40));
  v18 = v17[1];
  v19 = (void *)v17[4];
  if (v18 < 2 || v19 == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(a2, 1, 1, v8, v16);
  v43 = v14;
  v44 = v15;
  v46 = a2;
  v22 = *v17;
  v41 = v17[5];
  v42 = v22;
  v45 = v19;
  swift_bridgeObjectRetain();
  v23 = AnyAction.canPerform.getter(a1);
  v25 = v24;
  sub_1492CC(v23, v24);
  if (v25 != 1)
  {
    swift_bridgeObjectRelease();

    a2 = v46;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(a2, 1, 1, v8, v16);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v26 = *(unsigned __int8 *)(v11 + 80);
  v27 = (v26 + 32) & ~v26;
  v28 = swift_allocObject(&unk_13AE820, v27 + v12, v26 | 7);
  *(_OWORD *)(v28 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v28 + v27, (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v29 = v45;
  v30 = v42;
  if ((v41 & 2) != 0)
  {
    static ButtonRole.destructive.getter(v7);
    v33 = type metadata accessor for ButtonRole(0);
    v32 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v7, 0, 1, v33);
  }
  else
  {
    v31 = type metadata accessor for ButtonRole(0);
    v32 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v7, 1, 1, v31);
  }
  __chkstk_darwin(v32);
  *(&v41 - 4) = v30;
  *(&v41 - 3) = v18;
  *(&v41 - 2) = (uint64_t)v29;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBBC8);
  v35 = sub_5C150(&qword_14FBBC0, &qword_14FBBC8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v36 = v44;
  Button.init(role:action:label:)(v7, sub_C1C850, v28, sub_C1CFA8, &v41 - 6, v34, v35);

  v37 = swift_bridgeObjectRelease();
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 32);
  v39 = v43;
  v38(v43, v36, v8, v37);
  v40 = v46;
  ((void (*)(uint64_t, uint64_t, uint64_t))v38)(v46, v39, v8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v40, 0, 1, v8);
}

uint64_t sub_C1BB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[3] = a2;
  v4[4] = a3;
  v4[2] = a1;
  v5 = type metadata accessor for Actionable(0, a2, a3, a4);
  v4[5] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[6] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v4[7] = v7;
  v4[8] = swift_task_alloc((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[9] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_C1BBE0, v10, v11);
}

uint64_t sub_C1BBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t (*)(), uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 16);
  v11 = *(_OWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 72));
  v6 = *(void (**)(uint64_t (*)(), uint64_t))(v5 + *(int *)(v4 + 52));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v4);
  v7 = *(unsigned __int8 *)(v3 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(&unk_13AEAD0, v8 + v2, v7 | 7);
  *(_OWORD *)(v9 + 16) = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v8, v1, v4);
  v6(sub_C1E61C, v9);
  swift_release(v9);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_C1BCC4(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t (*)(), uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = type metadata accessor for Actionable(0, a4, a5, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  result = __chkstk_darwin(v9);
  v14 = (char *)&v19 - v13;
  if ((*a2 & 1) == 0)
  {
    v15 = *(void (**)(uint64_t (*)(), uint64_t))(a3 + *(int *)(v9 + 52));
    (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v14, a3, v9, result);
    v16 = *(unsigned __int8 *)(v10 + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = swift_allocObject(&unk_13AEAA8, v17 + v11, v16 | 7);
    *(_QWORD *)(v18 + 16) = a4;
    *(_QWORD *)(v18 + 24) = a5;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, v14, v9);
    v15(sub_C1E61C, v18);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_C1BDCC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD788);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_105B360;
  sub_95094(a1, v5 + 32);
  v6 = a2[1];
  v9[1] = *a2;
  v9[2] = v6;
  v9[0] = v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD790);
  return State.wrappedValue.setter(v9, v7);
}

uint64_t static Actionable.menuBuilder(lookup:excluding:contexts:resolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15[2];
  uint64_t v16;

  v16 = a1;
  KeyPath = swift_getKeyPath(&unk_109E018);
  sub_55D1C(a4, (uint64_t)v15);
  v8 = swift_allocObject(&unk_13AE848, 72, 7);
  *(_QWORD *)(v8 + 16) = a3;
  sub_8B15C(v15, v8 + 24);
  *(_QWORD *)(v8 + 64) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD428);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD628);
  v11 = sub_5C150(&qword_14FD630, &qword_14FD428, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = sub_1F6F44(&qword_14FD638, qword_14FD450, (void (*)(void))sub_C18FC8, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v13 = sub_5C150(qword_14FD640, &qword_14FD628, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return ForEach<>.init(_:id:content:)(&v16, KeyPath, sub_C1CFE0, v8, v9, v10, v11, v12, v13);
}

double sub_C1BFBC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  void (*v42)(char *, uint64_t);
  double result;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __int128 v52[2];
  uint64_t v53;

  v51 = a5;
  v9 = type metadata accessor for Divider(0);
  v10 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  v50 = v10;
  __chkstk_darwin(v9);
  v48 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - v13;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD6D8);
  v15 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - v18;
  v20 = *a1;
  v21 = swift_allocObject(&unk_13AE8C8, 24, 7);
  *(_QWORD *)(v21 + 16) = _swiftEmptyArrayStorage;
  v45 = v21;
  v53 = v20;
  KeyPath = swift_getKeyPath(&unk_109E100);
  sub_55D1C(a3, (uint64_t)v52);
  v23 = (_QWORD *)swift_allocObject(&unk_13AE8F0, 80, 7);
  v23[2] = a2;
  sub_8B15C(v52, (uint64_t)(v23 + 3));
  v23[8] = v21;
  v23[9] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain(v21);
  swift_bridgeObjectRetain();
  v24 = __swift_instantiateConcreteTypeFromMangledName(qword_14FD450);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD6E0);
  v26 = sub_5C150(&qword_14FD6E8, qword_14FD450, (uint64_t)&protocol conformance descriptor for [A]);
  v27 = sub_C18FC8();
  v28 = sub_1F6F44(&qword_14FD6F0, &qword_14FD6E0, (void (*)(void))sub_C1DD0C, (uint64_t)&protocol conformance descriptor for <A> A?);
  v44 = v19;
  v29 = ForEach<>.init(_:id:content:)(&v53, KeyPath, sub_C1DCFC, v23, v24, v25, v26, v27, v28);
  v30 = v14;
  Divider.init()(v29);
  v31 = v15;
  v32 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v33 = v46;
  v34 = v47;
  v32(v46, v19, v47);
  v35 = v49;
  v36 = v50;
  v37 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  v38 = v48;
  v37(v48, v30, v49);
  v39 = v51;
  v32(v51, v33, v34);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD728);
  v37(&v39[*(int *)(v40 + 48)], v38, v35);
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v30, v35);
  v42 = *(void (**)(char *, uint64_t))(v31 + 8);
  v42(v44, v34);
  v41(v38, v35);
  v42(v33, v34);
  *(_QWORD *)&result = swift_release(v45).n128_u64[0];
  return result;
}

uint64_t sub_C1C2C0@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  Swift::String v19;
  void *object;
  void *v21;
  uint64_t v22;
  Swift::String v23;
  unint64_t v24;
  Swift::String v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD v32[18];
  _OWORD v33[9];
  _OWORD v34[9];
  _QWORD v35[19];

  v29 = a6;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD710);
  __chkstk_darwin(v28);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD700);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  LOBYTE(a1) = *a1;
  sub_55D1C(a3, (uint64_t)v35);
  swift_beginAccess(a4, v33, 33, 0);
  swift_bridgeObjectRetain();
  sub_C191D0(a1, a2, v35, a4, (uint64_t)v34);
  swift_endAccess(v33);
  sub_5C090((uint64_t)v34, (uint64_t)v35, &qword_14FD730);
  sub_C36950(a1, a5);
  if ((v17 & 1) != 0)
  {
    sub_58AA74((uint64_t)v35);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v29, 1, 1, v13);
  }
  sub_5C090((uint64_t)v35, (uint64_t)v33, &qword_14FD730);
  if (sub_195990((uint64_t)v33) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v29, 1, 1, v13);
  v34[6] = v33[6];
  v34[7] = v33[7];
  v34[8] = v33[8];
  v34[2] = v33[2];
  v34[3] = v33[3];
  v34[4] = v33[4];
  v34[5] = v33[5];
  v34[0] = v33[0];
  v34[1] = v33[1];
  sub_5C090((uint64_t)v35, (uint64_t)v32, &qword_14FD730);
  sub_58A9AC(v32);
  sub_C1B51C((uint64_t)v12);
  v30 = 0x2E736E6F69746341;
  v31 = 0xE800000000000000;
  v19._countAndFlagsBits = ActionType.rawValue.getter(v33[0]);
  object = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(object);
  v22 = v30;
  v21 = (void *)v31;
  if (qword_14FA090 != -1)
    swift_once(&qword_14FA090, sub_D634F4);
  v30 = qword_1503D08;
  v31 = unk_1503D10;
  swift_bridgeObjectRetain();
  v23._countAndFlagsBits = 46;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  v24 = v31;
  swift_bridgeObjectRetain();
  v25._countAndFlagsBits = v22;
  v25._object = v21;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v21);
  v26 = v31;
  sub_C1DD90();
  _s7SwiftUI4ViewP9MusicCoreE23accessibilityIdentifieryQrAD013AccessibilityG0VF_0();
  swift_bridgeObjectRelease(v26);
  sub_58AA74((uint64_t)v35);
  sub_58AA74((uint64_t)v35);
  sub_56024((uint64_t)v12, &qword_14FD710);
  v27 = v29;
  sub_5C090((uint64_t)v16, v29, &qword_14FD700);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
}

double sub_C1C5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double result;
  uint64_t v22;

  v7 = type metadata accessor for AnyAction(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)&v22 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  type metadata accessor for MainActor(0);
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 48) & ~v18;
  v20 = (char *)swift_allocObject(&unk_13AEA08, v19 + v9, v18 | 7);
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = a2;
  *((_QWORD *)v20 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v11, v7);
  sub_C51ED8((uint64_t)v14, (uint64_t)&unk_14FD770, (uint64_t)v20);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_C1C730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for AnyAction(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v4 + v9;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v9, v5);
  swift_bridgeObjectRelease();
  v12 = v4 + v9 + v6[10];
  if (*(_QWORD *)(v12 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v11 + v6[12]))
    swift_release();
  if (*(_QWORD *)(v11 + v6[13]))
    swift_release();
  if (*(_QWORD *)(v11 + v6[14]))
    swift_release();
  if (*(_QWORD *)(v11 + v6[15]))
    swift_release();
  return swift_deallocObject(v4, v9 + v10, v8 | 7);
}

double sub_C1C850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnyAction(0, v5, v6, a4) - 8) + 80);
  return sub_C1C5CC(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

uint64_t sub_C1C8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  __n128 v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v4[3] = a4;
  v4[4] = type metadata accessor for MainActor(0);
  v4[5] = static MainActor.shared.getter(v5);
  v8 = (uint64_t (*)(void))((char *)&dword_14FD750 + dword_14FD750);
  v6 = (_QWORD *)swift_task_alloc(unk_14FD754);
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_C1C920;
  return v8();
}

uint64_t sub_C1C920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_C1C9A8;
  else
    v6 = sub_9C57F8;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_C1C9A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;

  swift_release();
  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD **)(v0 + 24);
  v3 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v3, (uint64_t)static Logger.actions);
  sub_58A9AC(v2);
  swift_errorRetain(v1);
  sub_58A9AC(v2);
  v4 = swift_errorRetain(v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(unsigned __int8 **)(v0 + 24);
  if (v7)
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v18 = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(*v9);
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v12, v13, &v18);
    swift_bridgeObjectRelease();
    sub_58ACF0(v9);
    sub_58ACF0(v9);
    *(_WORD *)(v10 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v8;
    swift_errorRetain(v8);
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v15 = (char *)String.init<A>(describing:)(v0 + 16, v14);
    *(_QWORD *)(v10 + 14) = sub_BA95EC(v15, v16, &v18);
    swift_bridgeObjectRelease();
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl(&dword_0, v5, v6, "Action %{public}s failed: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v8);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 56));
    sub_58ACF0(v9);
    sub_58ACF0(v9);
    swift_errorRelease(v8);
    swift_errorRelease(v8);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C1CBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _QWORD *v10;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = type metadata accessor for AnyAction(0, a5, a6, a4);
  v6[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[7] = v8;
  v6[8] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[9] = type metadata accessor for MainActor(0);
  v6[10] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(dword_14FD1AC);
  v6[11] = v10;
  *v10 = v6;
  v10[1] = sub_C1CC8C;
  return AnyAction.execute()(v7);
}

uint64_t sub_C1CC8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_C1CD4C;
  else
    v6 = sub_C1CD14;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_C1CD14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C1CD4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;

  swift_release();
  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v6, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 48);
  if (v10)
  {
    v16 = *(_QWORD *)(v0 + 32);
    v15 = *(_QWORD *)(v0 + 40);
    v17 = swift_slowAlloc(22, -1);
    v25 = swift_slowAlloc(64, -1);
    v26 = v25;
    *(_DWORD *)v17 = 136446466;
    v18 = (char *)sub_BC0494(v13, v16, *(_QWORD *)(v15 + 8));
    *(_QWORD *)(v17 + 4) = sub_BA95EC(v18, v19, &v26);
    v20 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v13, v14, v20);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v11;
    swift_errorRetain(v11);
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v22 = (char *)String.init<A>(describing:)(v0 + 16, v21);
    *(_QWORD *)(v17 + 14) = sub_BA95EC(v22, v23, &v26);
    swift_bridgeObjectRelease();
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl(&dword_0, v8, v9, "Action %{public}s failed: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v11);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    swift_errorRelease(v11);
    swift_errorRelease(v11);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C1CFAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 72, 7);
}

double sub_C1CFE0@<D0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_C1BFBC(a1, *(_QWORD *)(v2 + 16), v2 + 24, *(_QWORD *)(v2 + 64), a2);
}

uint64_t sub_C1CFF0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of Actionable.body(content:)>>, 1);
}

uint64_t sub_C1D024(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_109E0A0;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = &unk_109E0B8;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    v4[5] = (char *)&value witness table for () + 64;
    v4[6] = &unk_109E0D0;
    swift_initStructMetadata(a1, 0, 7, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_C1D0CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v30)(unint64_t, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64) + 7;
  v7 = *(_DWORD *)(v4 + 80) & 0x100000;
  v8 = *a2;
  *a1 = *a2;
  if (v5 > 7
    || v7 != 0
    || ((((v6 + ((v5 + 72) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    v11 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
  }
  else
  {
    v11 = a1;
    v31 = a2[1];
    a1[1] = v31;
    v12 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
    v13 = (uint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = *v13;
    *v12 = *v13;
    v15 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
    v16 = (uint64_t *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
    v17 = *v16;
    *v15 = *v16;
    v18 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
    v19 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v18 + 24) = v20;
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
    v30 = **(void (***)(unint64_t, unint64_t, uint64_t))(v20 - 8);
    v32 = v3;
    swift_bridgeObjectRetain(v8);
    swift_retain(v31);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v17);
    v30(v18, v19, v20);
    v21 = (v18 + v5 + 40) & ~v5;
    v22 = (v19 + v5 + 40) & ~v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v21, v22, v32);
    v23 = (_QWORD *)((v6 + v21) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)((v6 + v22) & 0xFFFFFFFFFFFFFFF8);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    v27 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
    v28 = *(_QWORD *)v27;
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v8 = *(_QWORD *)(v27 + 8);
    *(_QWORD *)(v26 + 8) = v8;
    *(_BYTE *)(v26 + 16) = *(_BYTE *)(v27 + 16);
    swift_retain(v25);
    swift_retain(v28);
  }
  swift_retain(v8);
  return v11;
}

double sub_C1D294(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  double result;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)((((((a1 + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  __swift_destroy_boxed_opaque_existential_1(v4);
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)v4
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)
                                                                                            + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t *sub_C1D344(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
  v8 = (uint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  *v7 = *v8;
  v10 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v11 = (uint64_t *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  v12 = *v11;
  *v10 = *v11;
  v13 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 24) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = **(void (***)(unint64_t, unint64_t, uint64_t))(v15 - 8);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v12);
  v16(v13, v14, v15);
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v18 + 40 + v13) & ~v18;
  v20 = (v18 + 40 + v14) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v19, v20);
  v21 = *(_QWORD *)(v17 + 64) + 7;
  v22 = (_QWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_QWORD *)v26;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v28 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 8) = v28;
  *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
  swift_retain(v24);
  swift_retain(v27);
  swift_retain(v28);
  return a1;
}

_QWORD *sub_C1D490(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8);
  *v6 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  *v8 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  __swift_assign_boxed_opaque_existential_1(v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)v10 + v13 + 40) & ~v13;
  v15 = ((unint64_t)v11 + v13 + 40) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64) + 7;
  v17 = (_QWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  v20 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  swift_retain();
  swift_release();
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  return a1;
}

_OWORD *sub_C1D5FC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  unint64_t v19;
  unint64_t v20;
  char v21;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = ((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_OWORD *)v9;
  v11 = *(_OWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_OWORD *)v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 40 + v8) & ~v13;
  v15 = (v13 + 40 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64) + 7;
  v17 = (_OWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_OWORD *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_BYTE *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = v21;
  return a1;
}

_QWORD *sub_C1D6D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_release();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)v7;
  v7 += 15;
  *v6 = v8;
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (v7 & 0xFFFFFFFFFFFFF8) + 15;
  *v9 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = v10 & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)v11);
  v13 = *(_OWORD *)(v10 & 0xFFFFFFFFFFFFFFF8);
  v14 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_OWORD *)v11 = v13;
  *(_OWORD *)(v11 + 16) = v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 40 + v11) & ~v16;
  v18 = (v16 + 40 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v17, v18);
  v19 = *(_QWORD *)(v15 + 64) + 7;
  v20 = (_OWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = v19 + v18;
  v22 = (v21 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v20 = *(_OWORD *)(v21 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v23 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v23 = *(_QWORD *)v22;
  swift_release();
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v22 + 8);
  swift_release();
  *(_BYTE *)(v23 + 16) = *(_BYTE *)(v22 + 16);
  return a1;
}

uint64_t sub_C1D810(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                        + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                      + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                    + v7
                                                                    + 40) & ~v7);
    }
    else
    {
      v14 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
  }
  else
  {
    v8 = ((((*(_QWORD *)(v4 + 64) + ((v7 + 72) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 17;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_C1D8B0 + 4 * byte_109E008[v12]))();
  }
}

void sub_C1D958(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64)
         + ((*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 17;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X13 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_C1DA90()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0xC1DB14);
}

void sub_C1DA98(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0xC1DAA0);
  JUMPOUT(0xC1DB14);
}

void sub_C1DAB0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0xC1DB14);
}

void sub_C1DAB8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0xC1DB14);
}

void sub_C1DAC0(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0xC1DB10);
      JUMPOUT(0xC1DB08);
    }
    JUMPOUT(0xC1DACCLL);
  }
  JUMPOUT(0xC1DB14);
}

uint64_t sub_C1DB2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *a1;
  v4 = a1[1];
  v6 = type metadata accessor for Actionable(255, *a1, v4, a4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Actionable<A>, v6);
  v8 = type metadata accessor for _ViewModifier_Content(255, v6, WitnessTable);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD5E0);
  v10 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v8);
  v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD5E8);
  v14 = &type metadata for Bool;
  v15 = sub_C1AA1C();
  v16 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v13 = v8;
  v14 = (void *)v9;
  v15 = v5;
  v16 = (void *)v10;
  v17 = OpaqueTypeConformance2;
  v18 = v4;
  return swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:)>>, 1);
}

unint64_t sub_C1DC20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FD6C8;
  if (!qword_14FD6C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD6D0);
    sub_5C150(qword_14FD640, &qword_14FD628, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_14FD6C8);
  }
  return result;
}

uint64_t sub_C1DC9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C1DCC0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_C1DCFC@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_C1C2C0(a1, v2[2], (uint64_t)(v2 + 3), v2[8], v2[9], a2);
}

unint64_t sub_C1DD0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FD6F8;
  if (!qword_14FD6F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD700);
    sub_C1DD90();
    sub_4DD24((unint64_t *)&qword_14FD720, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14FD6F8);
  }
  return result;
}

unint64_t sub_C1DD90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FD708;
  if (!qword_14FD708)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD710);
    sub_5C150(&qword_14FD718, &qword_14FD620, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_14FD708);
  }
  return result;
}

uint64_t sub_C1DE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = a1;
  v9[1] = a2;
  v4 = sub_B9DEC0();
  swift_bridgeObjectRetain();
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v6;
  *(_BYTE *)(a3 + 16) = v7 & 1;
  *(_QWORD *)(a3 + 24) = v8;
  return result;
}

double sub_C1DE74(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  double result;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[7];
  v34 = a1[6];
  v35 = v5;
  v36 = a1[8];
  v6 = a1[3];
  v30 = a1[2];
  v31 = v6;
  v7 = a1[5];
  v32 = a1[4];
  v33 = v7;
  v8 = a1[1];
  v28 = *a1;
  v29 = v8;
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v25 = v34;
  v26 = v35;
  v27 = v36;
  v21 = v30;
  v22 = v31;
  v23 = v32;
  v24 = v33;
  v19 = v28;
  v20 = v29;
  type metadata accessor for MainActor(0);
  sub_58A9AC(&v28);
  v11 = static MainActor.shared.getter(v10);
  v12 = swift_allocObject(&unk_13AE940, 176, 7);
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
  v13 = v26;
  *(_OWORD *)(v12 + 128) = v25;
  *(_OWORD *)(v12 + 144) = v13;
  *(_OWORD *)(v12 + 160) = v27;
  v14 = v22;
  *(_OWORD *)(v12 + 64) = v21;
  *(_OWORD *)(v12 + 80) = v14;
  v15 = v24;
  *(_OWORD *)(v12 + 96) = v23;
  *(_OWORD *)(v12 + 112) = v15;
  v16 = v20;
  *(_OWORD *)(v12 + 32) = v19;
  *(_OWORD *)(v12 + 48) = v16;
  v17 = sub_C51ED8((uint64_t)v4, (uint64_t)&unk_14FD740, v12);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_C1DFCC()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v1 = *(_QWORD *)(v0 + 48);
  if (v1 != 1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));

  }
  if (*(_QWORD *)(v0 + 96))
    swift_release(*(_QWORD *)(v0 + 104));
  if (*(_QWORD *)(v0 + 112))
    swift_release(*(_QWORD *)(v0 + 120));
  if (*(_QWORD *)(v0 + 128))
    swift_release(*(_QWORD *)(v0 + 136));
  if (*(_QWORD *)(v0 + 144))
    swift_release(*(_QWORD *)(v0 + 152));
  return swift_deallocObject(v0, 160, 7);
}

double sub_C1E058()
{
  uint64_t v0;

  return sub_C1DE74((__int128 *)(v0 + 16));
}

uint64_t sub_C1E060()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];
  _BYTE v5[16];
  uint64_t v6;
  uint64_t v7;

  v1 = v0[3];
  v2 = v0[4];
  v6 = v0[2];
  v7 = v1;
  v4[2] = v2;
  return Label.init(title:icon:)(sub_C1E2EC, v5, sub_BC9560, v4, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
}

uint64_t sub_C1E0C4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v8;
  *(_OWORD *)(v4 + 144) = a4[8];
  v9 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_14FD74C);
  *(_QWORD *)(v4 + 160) = v12;
  *v12 = v4;
  v12[1] = sub_C1E15C;
  return sub_C1C8A0(a1, a2, a3, v4 + 16);
}

uint64_t sub_C1E15C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_C1E1A4()
{
  uint64_t v0;
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  v1 = *(_QWORD *)(v0 + 64);
  if (v1 != 1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));

  }
  if (*(_QWORD *)(v0 + 112))
    swift_release(*(_QWORD *)(v0 + 120));
  if (*(_QWORD *)(v0 + 128))
    swift_release(*(_QWORD *)(v0 + 136));
  if (*(_QWORD *)(v0 + 144))
    swift_release(*(_QWORD *)(v0 + 152));
  if (*(_QWORD *)(v0 + 160))
    swift_release(*(_QWORD *)(v0 + 168));
  return swift_deallocObject(v0, 176, 7);
}

uint64_t sub_C1E238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FD73C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FD738 + dword_14FD738))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_C1E2B8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_C1E2DC()
{
  uint64_t v0;

  return sub_C13E38((_QWORD *)(v0 + 16));
}

uint64_t sub_C1E2E4()
{
  uint64_t v0;

  return sub_C13F98((_QWORD *)(v0 + 16));
}

uint64_t sub_C1E2EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_C1DE0C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_C1E2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  char *v12;
  id *v13;

  v5 = *((_QWORD *)v4 + 4);
  v6 = (int *)type metadata accessor for AnyAction(0, v5, *((_QWORD *)v4 + 5), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 48) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = swift_unknownObjectRelease(*((_QWORD *)v4 + 2));
  v12 = &v4[v9];
  (*(void (**)(char *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(&v4[v9], v5, v11);
  swift_bridgeObjectRelease();
  v13 = (id *)&v4[v9 + v6[10]];
  if (v13[1] != (char *)&dword_0 + 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)&v12[v6[12]])
    swift_release();
  if (*(_QWORD *)&v12[v6[13]])
    swift_release();
  if (*(_QWORD *)&v12[v6[14]])
    swift_release();
  if (*(_QWORD *)&v12[v6[15]])
    swift_release();
  return swift_deallocObject(v4, v9 + v10, v8 | 7);
}

uint64_t sub_C1E41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnyAction(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_14FD76C);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_C3150;
  return sub_C1CBDC(a1, v10, v11, v12, v7, v8);
}

double sub_C1E4C0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actionable(0, v6, v7, a2) - 8) + 80);
  return sub_C1B020(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

uint64_t sub_C1E52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actionable(0, v6, v7, a4) - 8) + 80);
  v9 = v4 + ((v8 + 32) & ~v8);
  v10 = (_QWORD *)swift_task_alloc(dword_14FD77C);
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_50F8C;
  return sub_C1BB44(v9, v6, v7, v11);
}

double sub_C1E5B0(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actionable(0, v7, v8, a4) - 8) + 80);
  return sub_C1BCC4(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t objectdestroy_47Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for Actionable(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v8 | 7;
  v12 = v4 + v9;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v12 + 32));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v12 + *(int *)(v6 + 48), v5);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v4, v10, v11);
}

uint64_t sub_C1E6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actionable(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  return sub_C1BDCC(a1, (_QWORD *)(v4 + ((v6 + 32) & ~v6)));
}

uint64_t sub_C1E750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for Actionable(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v8 | 7;
  v11 = ((*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v12 = v4 + v9;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v12 + 32));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v12 + *(int *)(v6 + 48), v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v4, v11, v10);
}

uint64_t sub_C1E83C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;

  v6 = *(_QWORD *)(type metadata accessor for Actionable(0, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_C1B37C(a1, v3 + v7, *(_QWORD *)(v3 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), a3);
}

UIMenu ActionList.menu.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  UIMenuElementSize preferredElementSize;
  Swift::String v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::OpaquePointer v15;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  UIImage_optional v20;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  type metadata accessor for ActionGroup(255, a2, a3, a4);
  v4 = type metadata accessor for Array(0);
  v5 = sub_4E684(0, &qword_14FBCE0, UIMenu_ptr);
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
  v7 = Sequence.compactMap<A>(_:)(sub_C1EA64, v16, v4, v5, WitnessTable);
  swift_bridgeObjectRelease(v19);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v12 = v7;
    else
      v12 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v7);
    if (v13 >= 1)
    {
      v14 = sub_4E684(0, &qword_14FD7C0, UIMenuElement_ptr);
      swift_bridgeObjectRetain();
      preferredElementSize = _bridgeCocoaArray<A>(_:)(v12, v14);
      swift_bridgeObjectRelease(v7);
      goto LABEL_4;
    }
  }
  else if (*(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8)))
  {
    v8 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);
    sub_4E684(0, &qword_14FD7C0, UIMenuElement_ptr);
    preferredElementSize = v7;
LABEL_4:
    swift_bridgeObjectRelease(v7);
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v20.value.super.isa = 0;
    v20.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v10, (Swift::String_optional)0, v20, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v15);
  }
  swift_bridgeObjectRelease(v7);
  return 0;
}

UIMenu sub_C1EA64@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, UIMenu *a3@<X8>)
{
  uint64_t v3;
  UIMenu result;

  result.super.super.isa = ActionGroup.menu.getter(*a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2).super.super.isa;
  a3->super.super.isa = result.super.super.isa;
  return result;
}

UIMenu ActionGroup.menu.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  UIMenuElementSize preferredElementSize;
  Swift::String v8;
  uint64_t v10;
  uint64_t v11;
  Swift::OpaquePointer v12;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  UIImage_optional v17;

  v16 = a1;
  v14 = a2;
  v15 = a3;
  type metadata accessor for AnyAction(255, a2, a3, a4);
  v4 = type metadata accessor for Array(0);
  v5 = sub_4E684(0, &qword_14FD7C0, UIMenuElement_ptr);
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
  preferredElementSize = Sequence.compactMap<A>(_:)(sub_C1F23C, v13, v4, v5, WitnessTable);
  swift_bridgeObjectRelease(v16);
  if ((unint64_t)preferredElementSize >> 62)
  {
    if (preferredElementSize < UIMenuElementSizeSmall)
      v10 = preferredElementSize;
    else
      v10 = preferredElementSize & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(preferredElementSize);
    if (v11 >= 1)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((char *)&dword_10 + (preferredElementSize & 0xFFFFFFFFFFFFF8)) >= 1)
  {
LABEL_3:
    sub_4E684(0, &qword_14FBCE0, UIMenu_ptr);
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v17.value.super.isa = 0;
    v17.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v8, (Swift::String_optional)0, v17, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v12);
  }
  swift_bridgeObjectRelease(preferredElementSize);
  return 0;
}

id ActionList.contextMenuConfiguration(identifier:previewProvider:)(uint64_t a1, void *(*a2)(), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  UIMenu v9;
  Class isa;
  uint64_t v11;
  void *v12;
  void *v13;
  objc_class *v14;
  void *v15;
  id v16;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *(*v22)();
  uint64_t v23;

  v9.super.super.isa = ActionList.menu.getter(a4, a5, a6, a4).super.super.isa;
  if (v9.super.super.isa)
  {
    isa = v9.super.super.isa;
    v11 = swift_allocObject(&unk_13AEB60, 24, 7);
    *(_QWORD *)(v11 + 16) = isa;
    v12 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v22 = a2;
    v23 = a3;
    v18 = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_873228;
    v21 = &block_descriptor_288;
    v13 = _Block_copy(&v18);
    swift_unknownObjectRetain(a1);
    v14 = isa;
    swift_retain_n(a3, 2);
    swift_release();
    v22 = JSSegue.Context.pageDetailsProvider.getter;
    v23 = v11;
    v18 = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_C1F2C0;
    v21 = &block_descriptor_3_12;
    v15 = _Block_copy(&v18);
    swift_retain();
    v16 = objc_msgSend(v12, "configurationWithIdentifier:previewProvider:actionProvider:", a1, v13, v15, swift_release().n128_f64[0]);
    swift_unknownObjectRelease(a1);
    swift_release();
    swift_release();
    _Block_release(v15);
    _Block_release(v13);

  }
  else
  {
    return 0;
  }
  return v16;
}

id AnyAction.menuElement.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t);
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  Swift::String v34;
  void *v35;
  uint64_t v36;
  Swift::String v37;
  unint64_t v38;
  Swift::String v39;
  unint64_t v40;
  NSString v41;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(a1);
  v7 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v43 - v9;
  v11 = (uint64_t *)(v1 + *(int *)(v8 + 40));
  v12 = v11[1];
  if (v12 == 1)
    return 0;
  v13 = *v11;
  v14 = v11[2];
  v15 = v11[3];
  v17 = (void *)v11[4];
  v16 = v11[5];
  v44 = v13;
  v45 = v16;
  v46 = v17;
  v47 = v14;
  v18 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = AnyAction.canPerform.getter(a1);
  v21 = v20;
  sub_1492CC(v19, v20);
  if (v21 != 1)
  {

    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v12);
    return 0;
  }
  v48 = v15;
  v22 = *(void **)(v2 + *(int *)(a1 + 44));
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v23(v10, v2, a1);
  if (!v22)
  {
    if (v12)
      v26 = v44;
    else
      v26 = 0;
    v27 = 0xE000000000000000;
    if (v12)
      v27 = v12;
    v43 = v27;
    v44 = v26;
    if ((v45 & 1) != 0)
    {
      if ((v45 & 2) != 0)
        v28 = 3;
      else
        v28 = 1;
    }
    else
    {
      if ((v45 & 2) == 0)
      {
        v28 = 0;
        if ((v45 & 4) == 0)
          goto LABEL_22;
        goto LABEL_21;
      }
      v28 = 2;
    }
    if ((v45 & 4) == 0)
    {
LABEL_22:
      v45 = sub_4E684(0, &qword_14FF8A0, UIAction_ptr);
      v23(v7, (uint64_t)v10, a1);
      v29 = *(unsigned __int8 *)(v4 + 80);
      v30 = (v29 + 32) & ~v29;
      v31 = swift_allocObject(&unk_13AEBD8, v30 + v5, v29 | 7);
      *(_OWORD *)(v31 + 16) = *(_OWORD *)(a1 + 16);
      (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v31 + v30, v7, a1);
      swift_bridgeObjectRetain();
      v32 = v48;
      swift_bridgeObjectRetain();
      v33 = v18;
      v25 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v44, v43, v47, v32, v46, 0, 0, 0, 0, v28, 0, sub_C1F458, v31);
      v24 = *(void (**)(char *, uint64_t))(v4 + 8);
      goto LABEL_23;
    }
LABEL_21:
    v28 |= 4uLL;
    goto LABEL_22;
  }
  v24 = *(void (**)(char *, uint64_t))(v4 + 8);
  v25 = v22;
LABEL_23:
  v24(v10, a1);
  v49 = 0;
  v50 = 0xE000000000000000;
  v34._countAndFlagsBits = 0x2E736E6F69746341;
  v34._object = (void *)0xE800000000000000;
  String.append(_:)(v34);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8));
  v36 = v49;
  v35 = (void *)v50;
  if (qword_14FA090 != -1)
    swift_once(&qword_14FA090, sub_D634F4);
  v49 = qword_1503D08;
  v50 = unk_1503D10;
  swift_bridgeObjectRetain();
  v37._countAndFlagsBits = 46;
  v37._object = (void *)0xE100000000000000;
  String.append(_:)(v37);
  v38 = v50;
  swift_bridgeObjectRetain();
  v39._countAndFlagsBits = v36;
  v39._object = v35;
  String.append(_:)(v39);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v35);
  v40 = v50;
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v40);
  objc_msgSend(v25, "setAccessibilityIdentifier:", v41);

  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v12);

  return v25;
}

double sub_C1F0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v7 = type metadata accessor for AnyAction(0, a3, a4, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)&v23 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
  type metadata accessor for MainActor(0);
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 48) & ~v18;
  v20 = (char *)swift_allocObject(&unk_13AEC00, v19 + v9, v18 | 7);
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = a3;
  *((_QWORD *)v20 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v11, v7);
  v21 = sub_C51ED8((uint64_t)v14, (uint64_t)&unk_14FD7D0, (uint64_t)v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

id sub_C1F23C@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  id result;

  v4 = type metadata accessor for AnyAction(0, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1);
  result = AnyAction.menuElement.getter(v4);
  *a2 = result;
  return result;
}

uint64_t sub_C1F284()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t block_copy_helper_284(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_284(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_C1F2C0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void *v7;

  v3 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v4 = sub_4E684(0, &qword_14FD7C0, UIMenuElement_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v4);
  v6 = swift_retain();
  v7 = (void *)v3(v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_C1F338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for AnyAction(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v4 + v9;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v9, v5);
  swift_bridgeObjectRelease();
  v12 = v4 + v9 + v6[10];
  if (*(_QWORD *)(v12 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v11 + v6[12]))
    swift_release();
  if (*(_QWORD *)(v11 + v6[13]))
    swift_release();
  if (*(_QWORD *)(v11 + v6[14]))
    swift_release();
  if (*(_QWORD *)(v11 + v6[15]))
    swift_release();
  return swift_deallocObject(v4, v9 + v10, v8 | 7);
}

double sub_C1F458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnyAction(0, v6, v7, a4) - 8) + 80);
  return sub_C1F0D0(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_C1F4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  char *v12;
  id *v13;

  v5 = *((_QWORD *)v4 + 4);
  v6 = (int *)type metadata accessor for AnyAction(0, v5, *((_QWORD *)v4 + 5), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 48) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = swift_unknownObjectRelease(*((_QWORD *)v4 + 2));
  v12 = &v4[v9];
  (*(void (**)(char *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(&v4[v9], v5, v11);
  swift_bridgeObjectRelease();
  v13 = (id *)&v4[v9 + v6[10]];
  if (v13[1] != (char *)&dword_0 + 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)&v12[v6[12]])
    swift_release();
  if (*(_QWORD *)&v12[v6[13]])
    swift_release();
  if (*(_QWORD *)&v12[v6[14]])
    swift_release();
  if (*(_QWORD *)&v12[v6[15]])
    swift_release();
  return swift_deallocObject(v4, v9 + v10, v8 | 7);
}

uint64_t sub_C1F5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnyAction(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_14FD7CC);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_50F8C;
  return sub_C1CBDC(a1, v10, v11, v12, v7, v8);
}

double View.alertPresenting(_:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double result;
  _QWORD v13[2];

  swift_retain();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD7D8);
  v9 = sub_5C150(&qword_14FD7E0, &qword_14FD7D8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v13[0] = ObservedObject.init(wrappedValue:)(a1, v8, v9);
  v13[1] = v10;
  v11 = sub_C1F740();
  View.viewPresenting<A, B>(_:modifier:)(a1, (uint64_t)v13, a2, (uint64_t)&type metadata for Modifier, a3, v11, a4);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

unint64_t sub_C1F740()
{
  unint64_t result;

  result = qword_14FD7E8;
  if (!qword_14FD7E8)
  {
    result = swift_getWitnessTable(&unk_109E134, &type metadata for Modifier);
    atomic_store(result, (unint64_t *)&qword_14FD7E8);
  }
  return result;
}

uint64_t sub_C1F784(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for Modifier);
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD7F0);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_C1F740();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
  sub_5C150(&qword_14FD7F8, &qword_14FD7F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

ValueMetadata *type metadata accessor for Modifier()
{
  return &type metadata for Modifier;
}

uint64_t sub_C1F848(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_12094B8, 1);
}

uint64_t sub_C1F858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t KeyPath;
  _QWORD *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  __n128 v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t OpaqueTypeConformance2;
  uint64_t v85;
  void *v87;
  unint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  void *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  _QWORD v123[3];
  char v124[8];
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  void *v131;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD818);
  v108 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v111 = (char *)&v91 - v10;
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD820);
  __chkstk_darwin(v112);
  v113 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD828);
  v110 = *(uint64_t **)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v109 = (char *)&v91 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD830);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v114 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 96));
  v21 = swift_beginAccess(v20, v124, 0, 0);
  v22 = v20[5];
  if (v22)
  {
    v103 = v12;
    v104 = v18;
    v105 = v17;
    v106 = v6;
    v107 = a3;
    v24 = v20[1];
    v25 = v20[2];
    v26 = v20[3];
    v27 = v20[4];
    v28 = (void *)v20[6];
    v125 = *v20;
    v23 = v125;
    v126 = v24;
    v97 = v25;
    v127 = v25;
    v128 = v26;
    v129 = v27 & 1;
    v130 = v22;
    v131 = v28;
    v29 = v22;
    v101 = v28;
    v30 = v28;
    swift_bridgeObjectRetain();
    v99 = v26;
    swift_bridgeObjectRetain();
    v102 = v29;
    v31 = swift_bridgeObjectRetain();
    v32 = static Color.clear.getter(v31);
    v98 = v23;
    if (v24)
      v33 = v23;
    else
      v33 = 0;
    v34 = 0xE000000000000000;
    if (v24)
      v34 = v24;
    v100 = v27;
    v96 = v32;
    v95 = v24;
    v123[1] = v34;
    v123[2] = v32;
    v123[0] = v33;
    swift_bridgeObjectRetain();
    if ((v27 & 1) != 0)
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD7D8);
      v63 = sub_5C150(&qword_14FD7E0, &qword_14FD7D8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v64 = ObservedObject.projectedValue.getter(a1, a2, v62, v63);
      KeyPath = swift_getKeyPath(&unk_109E188);
      ObservedObject.Wrapper.subscript.getter(&v115, KeyPath, v64, v63);
      swift_release();
      swift_release();
      v110 = &v91;
      v67 = v115;
      v66 = v116;
      v68 = v117;
      __chkstk_darwin(v69);
      __chkstk_darwin(v70);
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD838);
      v92 = v71;
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD840);
      v73 = sub_B9DEC0();
      v93 = v73;
      v74 = sub_C2087C();
      v94 = v74;
      v109 = (char *)sub_C208F8();
      v88 = v74;
      v89 = v109;
      v87 = (void *)v73;
      ((void (*)(_QWORD *, void *, _QWORD *, uint64_t, _QWORD, uint64_t (*)(), void **, uint64_t (*)@<X0>(uint64_t *@<X8>), void **, void *, _QWORD *, uint64_t, uint64_t, void *))View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:))(v123, v67, v66, v68, 0, sub_C20864, &v87, sub_C20B5C, &v87, &type metadata for Color, &type metadata for String, v71, v72, &protocol witness table for Color);
      swift_release();
      swift_release();
      v75 = swift_bridgeObjectRelease();
      v76 = v108;
      v77 = v111;
      v78 = v106;
      (*(void (**)(char *, char *, uint64_t, __n128))(v108 + 32))(v111, v8, v106, v75);
      v79 = v113;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v113, v77, v78);
      swift_storeEnumTagMultiPayload(v79, v112, 1);
      v115 = &type metadata for Color;
      v116 = &type metadata for String;
      v80 = v92;
      v117 = v92;
      v118 = v72;
      v81 = v93;
      v119 = &protocol witness table for Color;
      v120 = v93;
      v82 = v94;
      v83 = v109;
      v121 = v94;
      v122 = v109;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v115, &opaque type descriptor for <<opaque return type of View.alert<A, B, C>(_:isPresented:actions:message:)>>, 1);
      v115 = &type metadata for Color;
      v116 = &type metadata for String;
      v117 = v80;
      v118 = v72;
      v119 = &protocol witness table for Color;
      v120 = v81;
      v121 = v82;
      v122 = v83;
      v85 = swift_getOpaqueTypeConformance2(&v115, &opaque type descriptor for <<opaque return type of View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:)>>, 1);
      v60 = (uint64_t)v114;
      _ConditionalContent<>.init(storage:)(v79, v103, v78, OpaqueTypeConformance2, v85);
      swift_release();
      sub_6A5858(v98, v95, v97, v99, v100, v102, v101);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
    }
    else
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD7D8);
      v36 = sub_5C150(&qword_14FD7E0, &qword_14FD7D8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v37 = ObservedObject.projectedValue.getter(a1, a2, v35, v36);
      v38 = swift_getKeyPath(&unk_109E188);
      ObservedObject.Wrapper.subscript.getter(&v115, v38, v37, v36);
      swift_release();
      swift_release();
      v111 = (char *)&v91;
      v40 = v115;
      v39 = v116;
      LODWORD(v108) = v117;
      __chkstk_darwin(v41);
      __chkstk_darwin(v42);
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD838);
      v91 = v43;
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD840);
      v92 = v44;
      v45 = sub_B9DEC0();
      v93 = v45;
      v46 = sub_C2087C();
      v94 = v46;
      v47 = sub_C208F8();
      v89 = (char *)v46;
      v90 = v47;
      v87 = &protocol witness table for Color;
      v88 = v45;
      ((void (*)(_QWORD *, void *, _QWORD *, _QWORD, uint64_t (*)(), void **, uint64_t (*)@<X0>(uint64_t *@<X8>), void **, void *, _QWORD *, uint64_t, uint64_t))View.alert<A, B, C>(_:isPresented:actions:message:))(v123, v40, v39, v108, sub_C20B58, &v87, sub_C20954, &v87, &type metadata for Color, &type metadata for String, v43, v44);
      swift_release();
      swift_release();
      v48 = swift_bridgeObjectRelease();
      v49 = v110;
      v50 = v109;
      v51 = v14;
      v52 = v103;
      ((void (*)(char *, char *, uint64_t, __n128))v110[4])(v109, v51, v103, v48);
      v53 = v113;
      ((void (*)(char *, char *, uint64_t))v49[2])(v113, v50, v52);
      swift_storeEnumTagMultiPayload(v53, v112, 0);
      v115 = &type metadata for Color;
      v116 = &type metadata for String;
      v54 = v91;
      v55 = v92;
      v117 = v91;
      v118 = v92;
      v56 = v93;
      v119 = &protocol witness table for Color;
      v120 = v93;
      v57 = v94;
      v121 = v94;
      v122 = (char *)v47;
      v58 = swift_getOpaqueTypeConformance2(&v115, &opaque type descriptor for <<opaque return type of View.alert<A, B, C>(_:isPresented:actions:message:)>>, 1);
      v115 = &type metadata for Color;
      v116 = &type metadata for String;
      v117 = v54;
      v118 = v55;
      v119 = &protocol witness table for Color;
      v120 = v56;
      v121 = v57;
      v122 = (char *)v47;
      v59 = swift_getOpaqueTypeConformance2(&v115, &opaque type descriptor for <<opaque return type of View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:)>>, 1);
      v60 = (uint64_t)v114;
      _ConditionalContent<>.init(storage:)(v53, v52, v106, v58, v59);
      swift_release();
      sub_6A5858(v98, v95, v97, v99, v100, v102, v101);
      ((void (*)(char *, uint64_t))v49[1])(v50, v52);
    }
    a3 = v107;
    sub_5C090(v60, v107, &qword_14FD830);
    v61 = 0;
    v17 = v105;
    v18 = v104;
  }
  else
  {
    v61 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56))(a3, v61, 1, v17, v21);
}

uint64_t sub_C201B4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_109E1B0);
  v5 = swift_getKeyPath(&unk_109E1E8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_C20248(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_109E1B0);
  v5 = swift_getKeyPath(&unk_109E1E8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_C202D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v7 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD868);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD858);
  v3 = sub_5C150(&qword_14FD870, &qword_14FD868, (uint64_t)&protocol conformance descriptor for [A]);
  v4 = sub_5C150(&qword_14FD850, &qword_14FD858, (uint64_t)&protocol conformance descriptor for Button<A>);
  v5 = sub_C2096C();
  return ForEach<>.init(_:content:)(&v7, sub_C20428, 0, v1, &type metadata for String, v2, v3, v4, v5);
}

uint64_t sub_C203A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v10[2];

  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    v10[0] = *(_QWORD *)(a1 + 16);
    v10[1] = v3;
    v4 = sub_B9DEC0();
    swift_bridgeObjectRetain();
    result = Text.init<A>(_:)(v10, &type metadata for String, v4);
    v9 = v8 & 1;
  }
  else
  {
    result = 0;
    v6 = 0;
    v9 = 0;
    v7 = 0;
  }
  *a2 = result;
  a2[1] = v6;
  a2[2] = v9;
  a2[3] = v7;
  return result;
}

uint64_t sub_C20428@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  __int128 v29;
  char v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBC70);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD858);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[1];
  v23 = *a1;
  v24 = v11;
  v25 = a1[2];
  v26 = *((_QWORD *)a1 + 6);
  v28 = v11;
  v22 = v11;
  sub_5C090((uint64_t)&v25, (uint64_t)&v27, &qword_14FD880);
  sub_5C090((uint64_t)&v27, (uint64_t)&v30, &qword_14FD880);
  v12 = v30;
  if (v30 == 2)
  {
    v13 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    if ((v12 & 1) != 0)
      static ButtonRole.destructive.getter(v6);
    else
      static ButtonRole.cancel.getter(v14);
    v15 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 0, 1, v15);
  }
  v29 = v23;
  v16 = *((_QWORD *)&v25 + 1);
  v17 = v26;
  v18 = swift_allocObject(&unk_13AECA8, 72, 7);
  v19 = v24;
  *(_OWORD *)(v18 + 16) = v23;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 48) = v25;
  *(_QWORD *)(v18 + 64) = v26;
  sub_1391E0((uint64_t)&v28);
  sub_1391E0((uint64_t)&v29);
  sub_A9DEC(v16, v17);
  v20 = sub_B9DEC0();
  Button<>.init<A>(_:role:action:)(&v22, v6, sub_C209EC, v18, &type metadata for String, v20);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v10, v7);
}

double sub_C2063C(uint64_t a1)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  result = __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 40);
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 48);
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
    type metadata accessor for MainActor(0);
    swift_retain_n(v7, 2);
    v10 = static MainActor.shared.getter(v9);
    v11 = (_QWORD *)swift_allocObject(&unk_13AECD0, 48, 7);
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v6;
    v11[5] = v7;
    sub_C51ED8((uint64_t)v5, (uint64_t)&unk_14FD890, (uint64_t)v11);
    sub_5C198(v6, v7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_C2073C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  __n128 v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v4[2] = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter(v6);
  v9 = (uint64_t (*)(void))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc(a4[1]);
  v4[4] = v7;
  *v7 = v4;
  v7[1] = sub_2B41E4;
  return v9();
}

uint64_t sub_C207B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  v6 = *v2;
  v5 = v2[1];
  v7 = static Alignment.center.getter(a1);
  v9 = v8;
  v10 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FD800) + 36);
  sub_C1F858(v6, v5, v10);
  v11 = (uint64_t *)(v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FD808) + 36));
  *v11 = v7;
  v11[1] = v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD810);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a2, a1, v12);
}

uint64_t sub_C20864()
{
  uint64_t v0;

  return sub_C202D0(*(_QWORD *)(v0 + 16));
}

unint64_t sub_C2087C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FD848;
  if (!qword_14FD848)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD838);
    sub_5C150(&qword_14FD850, &qword_14FD858, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_14FD848);
  }
  return result;
}

unint64_t sub_C208F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FD860;
  if (!qword_14FD860)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD840);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_14FD860);
  }
  return result;
}

uint64_t sub_C20954@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_C203A8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_C2096C()
{
  unint64_t result;

  result = qword_14FD878;
  if (!qword_14FD878)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Alert.Action, &type metadata for Alert.Action);
    atomic_store(result, (unint64_t *)&qword_14FD878);
  }
  return result;
}

uint64_t sub_C209B0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  if (v0[7])
    swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_C209EC()
{
  uint64_t v0;

  return sub_C2063C(v0 + 16);
}

uint64_t sub_C209F4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_C20A20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_14FD88C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_50F8C;
  return sub_C2073C(a1, v4, v5, v6);
}

uint64_t sub_C20AA0()
{
  return 8;
}

_QWORD *sub_C20AAC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_C20ABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FD898;
  if (!qword_14FD898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD800);
    sub_5C150(&qword_14FD8A0, &qword_14FD810, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_5C150(&qword_14FD8A8, &qword_14FD808, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14FD898);
  }
  return result;
}

id static UIAlertController.alertController(with:overrideStyle:)(uint64_t a1, uint64_t a2, char a3)
{
  return sub_C2108C(a1, a2, a3 & 1);
}

double sub_C20B68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  result = __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 40);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 48);
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    type metadata accessor for MainActor(0);
    swift_retain_n(v8, 2);
    v11 = static MainActor.shared.getter(v10);
    v12 = (_QWORD *)swift_allocObject(&unk_13AEDE0, 48, 7);
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = v7;
    v12[5] = v8;
    v13 = sub_C51ED8((uint64_t)v6, (uint64_t)&unk_14FD8B8, (uint64_t)v12);
    sub_5C198(v7, v8);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

id static UIAlertAction.tapToRadar(title:description:screenshots:attachments:keywords:withDevicePrefix:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  id v28;
  NSURL *v29;
  void *v30;
  void *v31;
  unsigned int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  void *v38;
  id v39;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD aBlock[5];
  uint64_t v47;

  v43 = a6;
  v44 = a7;
  v45 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v45 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v45);
  v41 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v42 = (char *)&v41 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v41 - v22;
  if (qword_14FA618 != -1)
    swift_once(&qword_14FA618, sub_D75398);
  if (static DeviceCapabilities.isInternalInstall != 1)
    return 0;
  sub_C81E20(a1, a2, a3, a4, a5, v43, v44, a8 & 1, (uint64_t)v23);
  sub_B9E670((uint64_t)v23, (uint64_t)v20);
  v24 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v20, 1, v45) == 1)
  {
    sub_B9E6B8((uint64_t)v23);
    v25 = (uint64_t)v20;
LABEL_9:
    sub_B9E6B8(v25);
    return 0;
  }
  v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v27 = v42;
  v26(v42, v20, v24);
  v28 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v29);
  v31 = v30;
  v32 = objc_msgSend(v28, "canOpenURL:", v30);

  if (!v32)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v24);
    v25 = (uint64_t)v23;
    goto LABEL_9;
  }
  v33 = v41;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v41, v27, v24);
  v34 = *(unsigned __int8 *)(v14 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = swift_allocObject(&unk_13AED40, v35 + v15, v34 | 7);
  v26((char *)(v36 + v35), v33, v24);
  v37 = String._bridgeToObjectiveC()();
  aBlock[4] = sub_C213CC;
  v47 = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_5FEBC;
  aBlock[3] = &block_descriptor_289;
  v38 = _Block_copy(aBlock);
  swift_release(v47);
  v39 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "actionWithTitle:style:handler:", v37, 0, v38);
  _Block_release(v38);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v24);
  sub_B9E6B8((uint64_t)v23);
  return v39;
}

void sub_C20FB4()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  Class isa;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v1);
  v3 = v2;
  sub_C26514((uint64_t)_swiftEmptyArrayStorage);
  _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
  sub_C129A4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "openURL:options:completionHandler:", v3, isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

}

id Alert.uiAlertController.getter()
{
  uint64_t v0;

  return sub_C2108C(v0, 0, 1);
}

id sub_C2108C(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  void *v21;
  id v22;
  id v24;
  id v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[16];
  _BYTE v31[16];
  _QWORD v32[2];
  _QWORD v33[3];

  if ((a3 & 1) != 0)
    a2 = ~*(unsigned __int8 *)(a1 + 32) & 1;
  sub_C21420(a1, (uint64_t)v31);
  sub_C21420(a1 + 16, (uint64_t)v30);
  sub_C21420((uint64_t)v31, (uint64_t)v32);
  if (v32[1])
  {
    sub_1391E0((uint64_t)v30);
    sub_1391E0((uint64_t)v31);
    v5 = String._bridgeToObjectiveC()();
    sub_8B134((uint64_t)v31);
  }
  else
  {
    sub_1391E0((uint64_t)v30);
    v5 = 0;
  }
  sub_C21420((uint64_t)v30, (uint64_t)v33);
  if (v33[1])
  {
    v6 = String._bridgeToObjectiveC()();
    sub_8B134((uint64_t)v30);
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v5, v6, a2);

  if (!a2)
    objc_msgSend(v7, "setModalPresentationStyle:", 7);
  v8 = *(_QWORD *)(a1 + 40);
  v29 = v8;
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v24 = (id)objc_opt_self(UIAlertAction);
    swift_bridgeObjectRetain();
    v10 = (uint64_t *)(v8 + 40);
    v25 = v7;
    do
    {
      v11 = *(v10 - 1);
      v12 = *v10;
      v14 = v10[1];
      v13 = v10[2];
      v15 = *((unsigned __int8 *)v10 + 24);
      v16 = v10[4];
      v17 = v10[5];
      v18 = 1;
      if ((v15 & 1) != 0)
        v18 = 2;
      if (v15 == 2)
        v18 = 0;
      v26 = v18;
      v19 = swift_allocObject(&unk_13AED90, 72, 7);
      *(_QWORD *)(v19 + 16) = v11;
      *(_QWORD *)(v19 + 24) = v12;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v13;
      *(_BYTE *)(v19 + 48) = v15;
      *(_QWORD *)(v19 + 56) = v16;
      *(_QWORD *)(v19 + 64) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_A9DEC(v16, v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_A9DEC(v16, v17);
      v20 = String._bridgeToObjectiveC()();
      aBlock[4] = sub_C214A4;
      v28 = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_5FEBC;
      aBlock[3] = &block_descriptor_6_18;
      v21 = _Block_copy(aBlock);
      v22 = objc_msgSend(v24, "actionWithTitle:style:handler:", v20, v26, v21, swift_release(v28).n128_f64[0]);
      _Block_release(v21);

      v7 = v25;
      objc_msgSend(v25, "addAction:", v22);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v12);

      sub_5C198(v16, v17);
      v10 += 7;
      --v9;
    }
    while (v9);
    sub_95058(&v29);
  }
  return v7;
}

uint64_t sub_C2136C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_C213CC()
{
  type metadata accessor for URL(0);
  sub_C20FB4();
}

uint64_t block_copy_helper_285(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_285(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_C21420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_C21468()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  if (v0[7])
    swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_C214A4(uint64_t a1)
{
  uint64_t v1;

  return sub_C20B68(a1, v1 + 16);
}

uint64_t sub_C214AC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_C214D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_14FD8B4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_50F8C;
  return sub_C2073C(a1, v4, v5, v6);
}

void Alert.Action.init(id:title:role:perform:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a7;
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    v19 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    a1 = UUID.uuidString.getter(v19);
    a2 = v20;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a5;
  v21 = v23;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = v21;
}

uint64_t Alert.init(title:message:image:style:actions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a6 & 1;
  *(_QWORD *)(a8 + 40) = a7;
  *(_QWORD *)(a8 + 48) = a5;
  return result;
}

uint64_t Alert.Action.role.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t Library.Menu.userSelectedIdentifiers.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
}

uint64_t Alert.Action.perform.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_A9DEC(v1, *(_QWORD *)(v0 + 48));
  return v1;
}

unint64_t sub_C21690()
{
  unint64_t result;

  result = qword_14FD8C0;
  if (!qword_14FD8C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Alert.Style, &type metadata for Alert.Style);
    atomic_store(result, (unint64_t *)&qword_14FD8C0);
  }
  return result;
}

unint64_t sub_C216D8()
{
  unint64_t result;

  result = qword_14FD8C8[0];
  if (!qword_14FD8C8[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Alert.Action.Role, &type metadata for Alert.Action.Role);
    atomic_store(result, qword_14FD8C8);
  }
  return result;
}

void destroy for Alert(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

}

uint64_t initializeWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v7 = v6;
  return a1;
}

uint64_t assignWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  return a1;
}

uint64_t assignWithTake for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for Alert(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Alert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Alert()
{
  return &type metadata for Alert;
}

ValueMetadata *type metadata accessor for Alert.Style()
{
  return &type metadata for Alert.Style;
}

uint64_t destroy for Alert.Action(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(a1[1]);
  result = swift_bridgeObjectRelease(a1[3]);
  if (a1[5])
    return swift_release(a1[6]);
  return result;
}

uint64_t initializeWithCopy for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v8;
    swift_retain(v8);
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  if (!v8)
  {
    if (v9)
    {
      v12 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v12;
      swift_retain(v12);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v9)
  {
    swift_release(*(_QWORD *)(a1 + 48));
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (!v9)
  {
    if (v8)
    {
      v12 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v8;
      *(_QWORD *)(a1 + 48) = v12;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v8)
  {
    swift_release(*(_QWORD *)(a1 + 48));
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v10;
  swift_release(v11);
  return a1;
}

ValueMetadata *type metadata accessor for Alert.Action()
{
  return &type metadata for Alert.Action;
}

uint64_t _s9MusicCore5AlertV5StyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_C21BFC + 4 * byte_109E211[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_C21C30 + 4 * byte_109E20C[v4]))();
}

uint64_t sub_C21C30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C21C38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC21C40);
  return result;
}

uint64_t sub_C21C4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC21C54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_C21C58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C21C60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Alert.Action.Role()
{
  return &type metadata for Alert.Action.Role;
}

uint64_t ArtworkVideoReportingController.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 48, 7);
  ArtworkVideoReportingController.init()();
  return v1;
}

uint64_t *ArtworkVideoReportingController.init()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t TupleTypeMetadata2;
  uint64_t v4;

  v1 = *v0;
  *((_BYTE *)v0 + 16) = 0;
  v0[3] = 0;
  v0[4] = 0;
  v2 = *(_QWORD *)(v1 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v2, &type metadata for ComponentRenderEventSignposts, 0, 0);
  v4 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  v0[5] = Dictionary.init(dictionaryLiteral:)(v4, v2, &type metadata for ComponentRenderEventSignposts, *(_QWORD *)(v1 + 88));
  return v0;
}

uint64_t ArtworkVideoReportingController.isEnabled.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 16);
}

void ArtworkVideoReportingController.isEnabled.setter(char a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 16, v3, 1, 0);
  *(_BYTE *)(v1 + 16) = a1;
}

uint64_t (*CompoundRequestResponseInvalidation.onInvalidation.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 16, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t BindingRequestResponseInvalidation.onInvalidation.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 24, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 24);
  sub_A9DEC(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t BindingRequestResponseInvalidation.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 24, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return sub_5C198(v5, v6);
}

uint64_t (*BindingRequestResponseInvalidation.onInvalidation.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 24, a1, 33, 0);
  return j__swift_endAccess;
}

void ArtworkVideoReportingController.componentWillAppear(at:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  Class isa;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  _BYTE v45[24];
  char *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  unsigned __int8 v52;
  char v53[32];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v1 + 5;
  swift_beginAccess(v1 + 5, v53, 0, 0);
  v12 = v1[5];
  v13 = *(_QWORD *)(v3 + 88);
  swift_bridgeObjectRetain(v12);
  v43 = v13;
  Dictionary.subscript.getter(&v46, a1, v12, v4, &type metadata for ComponentRenderEventSignposts, v13);
  swift_bridgeObjectRelease(v12);
  v14 = v46;
  if (v46 == (_BYTE *)&dword_0 + 1)
  {
    v39 = 0;
    v40 = 0;
    v37 = 0;
    v38 = 0;
    v41 = 0;
    v42 = 4;
LABEL_6:
    v20 = (void *)objc_opt_self(AMSMetrics);
    Date.init()();
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v22 = (char *)objc_msgSend(v20, "serverTimeFromDate:", isa);

    v23 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14 = v22;
    v33 = v7;
    v23(v7, a1, v4);
    v24 = v41;
    v36 = v41;
    v25 = v40;
    v26 = v40;
    v27 = v37;
    v35 = v37;
    v28 = v4;
    v29 = v38;
    v34 = v38;
    v30 = v39;
    v16 = v39;
    v46 = v22;
    v47 = v25;
    v48 = v27;
    v49 = v29;
    v19 = v26;
    v50 = v30;
    v51 = v24;
    v52 = v42;
    v31 = swift_beginAccess(v44, v45, 33, 0);
    v32 = type metadata accessor for Dictionary(0, v28, &type metadata for ComponentRenderEventSignposts, v43, v31);
    v17 = v34;
    Dictionary.subscript.setter(&v46, v33, v32);
    v18 = v35;
    swift_endAccess(v45);
    v15 = v36;
    goto LABEL_7;
  }
  v15 = v51;
  if (!v46)
  {
    v40 = v47;
    v41 = v51;
    v42 = v52;
    v38 = v49;
    v39 = v50;
    v37 = v48;
    goto LABEL_6;
  }
  v16 = v50;
  v17 = v49;
  v18 = v48;
  v19 = v47;
LABEL_7:

}

void ArtworkVideoReportingController.placeholderDidAppear(at:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  __n128 v17;
  Class isa;
  id v19;
  void (*v20)(char *, uint64_t, uint64_t);
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  id v29;
  id v30;
  char *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  int v36;
  id v37;
  uint64_t *v38;
  uint64_t v39;
  _BYTE v40[24];
  char *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  unsigned __int8 v47;
  _BYTE v48[24];
  _BYTE v49[32];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v1 + 2, v49, 0, 0);
  if (*((_BYTE *)v1 + 16) == 1)
  {
    v12 = v1 + 5;
    swift_beginAccess(v1 + 5, v48, 0, 0);
    v13 = v1[5];
    v14 = *(_QWORD *)(v3 + 88);
    swift_bridgeObjectRetain();
    v39 = v14;
    Dictionary.subscript.getter(&v41, a1, v13, v4, &type metadata for ComponentRenderEventSignposts, v14);
    swift_bridgeObjectRelease();
    v15 = v41;
    if (v41 == (_BYTE *)&dword_0 + 1)
    {
      v38 = v12;
      v15 = 0;
      v33 = 0;
      v34 = 0;
      v35 = 0;
      v37 = 0;
      v36 = 4;
    }
    else
    {
      if (v42)
      {
        sub_C239D8(v41, v42, v43, v44, v45, v46);
        return;
      }
      v38 = v12;
      v33 = v43;
      v34 = v44;
      v35 = v45;
      v37 = v46;
      v36 = v47;
    }
    v16 = (void *)objc_opt_self(AMSMetrics);
    Date.init()(v17);
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v19 = objc_msgSend(v16, "serverTimeFromDate:", isa);

    v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v32 = v19;
    v20(v7, a1, v4);
    v21 = v37;
    v29 = v37;
    v31 = v15;
    v22 = v33;
    v30 = v33;
    v23 = v34;
    v24 = v34;
    v25 = v35;
    v26 = v35;
    v41 = v15;
    v42 = v19;
    v43 = v22;
    v44 = v23;
    v45 = v25;
    v46 = v21;
    v47 = v36;
    v27 = swift_beginAccess(v38, v40, 33, 0);
    v28 = type metadata accessor for Dictionary(0, v4, &type metadata for ComponentRenderEventSignposts, v39, v27);
    Dictionary.subscript.setter(&v41, v7, v28);
    swift_endAccess(v40);

  }
}

void ArtworkVideoReportingController.videoArtworkWasSelectedForPlayback(at:isReadyForDisplay:)(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  __int128 v19;
  char v20;
  __int128 v21;
  void *v22;
  __n128 v23;
  Class isa;
  id v25;
  void *v26;
  __int128 v27;
  void *v28;
  __int128 v29;
  __n128 v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  int v39;
  _BYTE v40[24];
  char *v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  char v45;
  char v46[24];
  char *v47;
  __int128 v48;
  __int128 v49;
  void *v50;
  char v51;
  char v52[32];

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v2 + 2, v52, 0, 0);
  if (*((_BYTE *)v2 + 16) == 1)
  {
    v39 = a2;
    v14 = v2 + 5;
    swift_beginAccess(v2 + 5, v46, 0, 0);
    v15 = v2[5];
    v16 = *(_QWORD *)(v5 + 88);
    swift_bridgeObjectRetain();
    v38 = v16;
    Dictionary.subscript.getter(&v41, a1, v15, v6, &type metadata for ComponentRenderEventSignposts, v16);
    swift_bridgeObjectRelease();
    v17 = v41;
    if (v41 == (_BYTE *)&dword_0 + 1)
    {
      v17 = 0;
      v18 = 0;
      v19 = 0uLL;
      v20 = 4;
      v21 = 0uLL;
    }
    else
    {
      v20 = v45;
      v18 = v44;
      v19 = v42;
      v21 = v43;
    }
    v47 = v17;
    v48 = v19;
    v49 = v21;
    v50 = v18;
    v51 = v20;
    v22 = (void *)objc_opt_self(AMSMetrics);
    Date.init()(v23);
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v25 = objc_msgSend(v22, "serverTimeFromDate:", isa);

    *((_QWORD *)&v48 + 1) = v25;
    sub_C2271C();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    v26 = v47;
    v27 = v48;
    v29 = v49;
    v28 = v50;
    v41 = v47;
    v42 = v48;
    v43 = v49;
    v44 = v50;
    v45 = v51;
    v30 = swift_beginAccess(v14, v40, 33, 0);
    v31 = type metadata accessor for Dictionary(0, v6, &type metadata for ComponentRenderEventSignposts, v38, v30);
    v32 = v26;
    v33 = (id)v27;
    v34 = *((id *)&v27 + 1);
    v35 = (id)v29;
    v36 = *((id *)&v29 + 1);
    v37 = v28;
    Dictionary.subscript.setter(&v41, v9, v31);
    swift_endAccess(v40);

  }
}

void sub_C2271C()
{
  __asm { BR              X10 }
}

uint64_t sub_C22758()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  char v4;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C616974726170, 0xE700000000000000, 0x73756F6976657270, 0xEF6E776F6853796CLL, 0);
  result = swift_bridgeObjectRelease(0xE700000000000000);
  if ((v2 & 1) == 0)
  {
    if ((v0 & 1) != 0)
    {
      *(_BYTE *)(v1 + 48) = 0;
      return result;
    }
    if (*(_QWORD *)(v1 + 24))
    {
      v4 = 1;
    }
    else
    {
      if (!*(_QWORD *)(v1 + 8))
        return result;
      v4 = 2;
    }
    *(_BYTE *)(v1 + 48) = v4;
  }
  return result;
}

void ArtworkVideoReportingController.videoArtworkWillBeginLoading(at:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  Class isa;
  id v18;
  char *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  _BYTE v41[24];
  char *v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  char v48;
  char v49[24];
  char v50[32];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v1 + 2, v50, 0, 0);
  if (*((_BYTE *)v1 + 16) == 1)
  {
    v39 = v1 + 5;
    v40 = v7;
    swift_beginAccess(v1 + 5, v49, 0, 0);
    v12 = v1[5];
    v13 = *(_QWORD *)(v3 + 88);
    swift_bridgeObjectRetain(v12);
    v36 = v13;
    Dictionary.subscript.getter(&v42, a1, v12, v4, &type metadata for ComponentRenderEventSignposts, v13);
    swift_bridgeObjectRelease(v12);
    v14 = v42;
    v38 = a1;
    if (v42 == (_BYTE *)&dword_0 + 1)
    {
      v37 = 0;
      v35 = 0;
      v15 = 0;
      v34 = 0;
      v33 = 0;
      v14 = 0;
    }
    else
    {
      v37 = v47;
      v15 = v45;
      v35 = v46;
      v34 = v44;
      v33 = v43;
    }
    v16 = (void *)objc_opt_self(AMSMetrics);
    Date.init()();
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v18 = objc_msgSend(v16, "serverTimeFromDate:", isa);

    v19 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v40, v38, v4);
    v20 = v33;
    v42 = v14;
    v43 = v33;
    v21 = v34;
    v44 = v34;
    v45 = v18;
    v22 = v35;
    v23 = v37;
    v46 = v35;
    v47 = v37;
    v48 = 4;
    v24 = swift_beginAccess(v39, v41, 33, 0);
    v25 = type metadata accessor for Dictionary(0, v4, &type metadata for ComponentRenderEventSignposts, v36, v24);
    v26 = v14;
    v27 = v20;
    v28 = v21;
    v29 = v18;
    v30 = v22;
    v31 = v23;
    Dictionary.subscript.setter(&v42, v19, v25);
    swift_endAccess(v41);

  }
}

void ArtworkVideoReportingController.videoArtworkDidCancelLoading(at:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  __n128 v20;
  Class isa;
  id v22;
  id v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  char *v31;
  void *v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  int v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t *v44;
  _BYTE v45[24];
  char *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  unsigned __int8 v52;
  char v53[24];
  char v54[24];

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v2 + 2, v54, 0, 0);
  if (*((_BYTE *)v2 + 16) == 1)
  {
    v44 = v2 + 5;
    swift_beginAccess(v2 + 5, v53, 0, 0);
    v13 = v2[5];
    v14 = *(_QWORD *)(v4 + 88);
    swift_bridgeObjectRetain();
    v43 = v14;
    Dictionary.subscript.getter(&v46, a1, v13, v5, &type metadata for ComponentRenderEventSignposts, v14);
    swift_bridgeObjectRelease();
    v15 = v46;
    if (v46 != (_BYTE *)&dword_0 + 1)
    {
      v31 = v46;
      v37 = v52;
      v34 = v51;
      v36 = a1;
      v16 = v50;
      v32 = v50;
      v35 = v8;
      v17 = v49;
      v30 = v49;
      v33 = v6;
      v19 = v47;
      v18 = v48;
      v29 = (id)objc_opt_self(AMSMetrics);
      v40 = v16;
      v42 = v15;
      v41 = v19;
      v39 = v18;
      v38 = v17;
      Date.init()(v20);
      isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v22 = objc_msgSend(v29, "serverTimeFromDate:", isa);

      v23 = v22;
      v24 = v35;
      v25 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v35, v36, v5);
      v46 = v31;
      v47 = v19;
      v48 = v18;
      v49 = v30;
      v50 = v32;
      v51 = v22;
      v52 = v37;
      v26 = swift_beginAccess(v44, v45, 33, 0);
      v27 = type metadata accessor for Dictionary(0, v5, &type metadata for ComponentRenderEventSignposts, v43, v26);
      Dictionary.subscript.setter(&v46, v24, v27);
      swift_endAccess(v45);
      sub_C2310C(v25);
      _s9MusicCore31ArtworkVideoReportingControllerC05videoC15DidStopPlayback2atyx_tF_0(v25);

    }
  }
}

void ArtworkVideoReportingController.videoArtworkDidStartPlayback(at:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  __n128 v20;
  Class isa;
  id v22;
  id v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  char *v35;
  uint64_t v36;
  int v37;
  id v38;
  id v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  _BYTE v45[24];
  char *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  unsigned __int8 v52;
  char v53[24];
  char v54[24];

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v2 + 2, v54, 0, 0);
  if (*((_BYTE *)v2 + 16) == 1)
  {
    v44 = v2 + 5;
    swift_beginAccess(v2 + 5, v53, 0, 0);
    v13 = v2[5];
    v14 = *(_QWORD *)(v4 + 88);
    swift_bridgeObjectRetain();
    v43 = v14;
    Dictionary.subscript.getter(&v46, a1, v13, v5, &type metadata for ComponentRenderEventSignposts, v14);
    swift_bridgeObjectRelease();
    v15 = v46;
    if (v46 != (_BYTE *)&dword_0 + 1)
    {
      v37 = v52;
      v16 = v51;
      v34 = v51;
      v33 = v50;
      v36 = a1;
      v17 = v49;
      v30 = v49;
      v35 = v8;
      v18 = v48;
      v31 = v48;
      v32 = v6;
      v19 = v47;
      v29 = (id)objc_opt_self(AMSMetrics);
      v40 = v16;
      v42 = v15;
      v41 = v19;
      v39 = v18;
      v38 = v17;
      Date.init()(v20);
      isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v22 = objc_msgSend(v29, "serverTimeFromDate:", isa);

      v23 = v22;
      v24 = v35;
      v25 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v35, v36, v5);
      v46 = v15;
      v47 = v19;
      v48 = v31;
      v49 = v30;
      v50 = v22;
      v51 = v34;
      v52 = v37;
      v26 = swift_beginAccess(v44, v45, 33, 0);
      v27 = type metadata accessor for Dictionary(0, v5, &type metadata for ComponentRenderEventSignposts, v43, v26);
      Dictionary.subscript.setter(&v46, v24, v27);
      swift_endAccess(v45);
      sub_C2310C(v25);

    }
  }
}

void sub_C2310C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t (*v17)(uint64_t, __n128);
  uint64_t v18;
  __n128 v19;
  NSObject *v20;
  void *v21;
  void *v22;
  char v23;
  char v24;
  NSObject *v25;
  void *v26;
  void *v27;
  id v28;
  NSObject *v29;
  NSObject *v30;
  id v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  NSObject *v38;
  id v39;
  id v40;
  NSObject *v41;
  id v42;
  NSObject *v43;
  id v44;
  id v45;
  NSObject *v46;
  id v47;
  NSObject *v48;
  NSObject *v49;
  os_log_type_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  char *v57;
  char *v58;
  NSObject *v59;
  __n128 v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  __n128 v65;
  os_log_t v66;
  uint64_t v67;
  id v68;
  NSObject *v69;
  NSObject *v70;
  id v71;
  NSObject *v72;
  NSObject *v73;
  id v74;
  id v75;
  NSObject *v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  os_log_t v81;
  uint64_t v82;
  NSObject *v83;
  NSObject *v84;
  NSObject *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  void *v91;
  void *v92;
  id v93;
  int v94;
  uint64_t v95;
  char v96[24];
  char v97[24];
  char v98[24];
  NSObject *v99;
  void *v100;
  void *v101;
  NSObject *v102;
  void *v103;
  void *v104;
  NSObject *v105;
  void *v106;
  id v107;
  char v108;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v78 - v9;
  swift_beginAccess(v1 + 2, v98, 0, 0);
  if (*((_BYTE *)v1 + 16) == 1)
  {
    swift_beginAccess(v1 + 5, v97, 0, 0);
    v11 = v1[5];
    v12 = *(_QWORD *)(v3 + 88);
    swift_bridgeObjectRetain();
    Dictionary.subscript.getter(&v99, a1, v11, v4, &type metadata for ComponentRenderEventSignposts, v12);
    swift_bridgeObjectRelease();
    v13 = v99;
    if (v99 != ((char *)&dword_0 + 1))
    {
      v89 = v7;
      v90 = v10;
      v15 = v100;
      v14 = v101;
      v16 = v102;
      v92 = v103;
      v93 = v104;
      v94 = v105;
      swift_beginAccess(v1 + 3, v96, 0, 0);
      v17 = (uint64_t (*)(_QWORD, __n128))v1[3];
      if (v17)
      {
        v88 = v5;
        v91 = v14;
        v18 = v1[4];
        v19 = swift_retain();
        v20 = v17(a1, v19);
        v22 = v21;
        v24 = v23;
        sub_5C198((uint64_t)v17, v18);
        if (v16)
        {
          v99 = v20;
          v100 = v22;
          v87 = (uint64_t)v22;
          LOBYTE(v101) = v24;
          v25 = v13;
          v102 = v13;
          v103 = v15;
          v14 = v91;
          v104 = v91;
          v105 = v16;
          v26 = v92;
          v106 = v92;
          v107 = v93;
          v108 = v94;
          if (v92)
          {
            v81 = v20;
            v83 = v93;
            v27 = v15;
            v28 = v26;
            v85 = v16;
            v29 = v16;
            v30 = v13;
            v86 = v27;
            v31 = v27;
            v32 = v14;
            objc_msgSend(v28, "doubleValue");
            v34 = v33;
            -[NSObject doubleValue](v29, "doubleValue");
            v36 = v35;
            v84 = v25;
            if (qword_14F9E98 != -1)
              swift_once(&qword_14F9E98, sub_C7B488);
            v37 = type metadata accessor for Logger(0);
            v82 = __swift_project_value_buffer(v37, (uint64_t)static Logger.motion);
            v80 = *(void (**)(_QWORD, _QWORD, _QWORD))(v88 + 16);
            v80(v90, a1, v4);
            swift_bridgeObjectRetain_n(v87, 2);
            v38 = v30;
            v39 = v31;
            v40 = v32;
            v41 = v29;
            v42 = v28;
            v43 = v83;
            v83 = v38;
            v44 = v39;
            v45 = v40;
            v46 = v41;
            v47 = v42;
            v48 = v43;
            v49 = Logger.logObject.getter(v48);
            v50 = static os_log_type_t.debug.getter();
            v51 = v50;
            if (os_log_type_enabled(v49, v50))
            {
              v52 = swift_slowAlloc(32, -1);
              LODWORD(v82) = v51;
              v53 = v52;
              v79 = swift_slowAlloc(64, -1);
              v95 = v79;
              *(_DWORD *)v53 = 136315650;
              v54 = v87;
              swift_bridgeObjectRetain();
              v55 = v45;
              v56 = (char *)Optional<A>.description.getter(v81, v54);
              v81 = v49;
              v58 = v57;
              swift_bridgeObjectRelease();
              *(_QWORD *)(v53 + 4) = sub_BA95EC(v56, v58, &v95);

              v59 = v83;
              swift_bridgeObjectRelease_n(v54, 2);
              v60 = swift_bridgeObjectRelease();
              *(_WORD *)(v53 + 12) = 2080;
              v61 = v89;
              v62 = v90;
              ((void (*)(char *, char *, uint64_t, __n128))v80)(v89, v90, v4, v60);
              v63 = (char *)String.init<A>(describing:)(v61, v4);
              *(_QWORD *)(v53 + 14) = sub_BA95EC(v63, v64, &v95);
              v65 = swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t, __n128))(v88 + 8))(v62, v4, v65);
              *(_WORD *)(v53 + 22) = 2048;
              *(double *)(v53 + 24) = v34 - v36;
              v66 = v81;
              _os_log_impl(&dword_0, v81, (os_log_type_t)v82, "Item with id: %s at index: %s loaded enough data to start playback in %f ms.", (uint8_t *)v53, 0x20u);
              v67 = v79;
              swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v67, -1, -1);
              swift_slowDealloc(v53, -1, -1);

            }
            else
            {

              v76 = v83;
              v77 = swift_bridgeObjectRelease_n(v87, 2);
              (*(void (**)(char *, uint64_t, __n128))(v88 + 8))(v90, v4, v77);

            }
            v15 = v86;
            v14 = v91;
            v26 = v92;
            v69 = v85;
            v70 = v84;
          }
          else
          {
            v71 = v93;
            v72 = v16;
            v73 = v13;
            v74 = v15;
            v75 = v14;
            v69 = v16;
            v70 = v13;
          }
          if (qword_14F9D58 != -1)
            swift_once(&qword_14F9D58, sub_C2C810);
          MetricsReportingController.recordComponentRenderEvent(_:)((uint64_t)&v99);

          swift_bridgeObjectRelease();
          v68 = v93;

        }
        else
        {
          swift_bridgeObjectRelease();
          v69 = 0;
          v14 = v91;
          v26 = v92;
          v68 = v93;
          v70 = v13;
        }
      }
      else
      {
        v26 = v92;
        v68 = v93;
        v69 = v16;
        v70 = v13;
      }
      sub_C239D8((char *)v70, v15, v14, v69, v26, v68);
    }
  }
}

void _s9MusicCore31ArtworkVideoReportingControllerC05videoC15DidStopPlayback2atyx_tF_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  char v14;
  void *v15;
  void *v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  _BYTE v25[24];
  char *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  char v32;
  char v33[24];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1 + 5;
  swift_beginAccess(v1 + 5, v33, 0, 0);
  v9 = v1[5];
  v10 = *(_QWORD *)(v3 + 88);
  swift_bridgeObjectRetain(v9);
  Dictionary.subscript.getter(&v26, a1, v9, v4, &type metadata for ComponentRenderEventSignposts, v10);
  swift_bridgeObjectRelease(v9);
  v11 = v26;
  if (v26 != (_BYTE *)&dword_0 + 1)
  {
    v23 = v27;
    v24 = v29;
    v13 = v30;
    v12 = v31;
    v14 = v32;

    if (v13)
    {

      v14 = 3;
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v16 = v23;
    v15 = v24;
    v26 = v11;
    v27 = v23;
    v28 = 0;
    v29 = v24;
    v30 = 0;
    v31 = 0;
    v32 = v14;
    v17 = swift_beginAccess(v8, v25, 33, 0);
    v18 = type metadata accessor for Dictionary(0, v4, &type metadata for ComponentRenderEventSignposts, v10, v17);
    v19 = v11;
    v20 = v16;
    v21 = v15;
    Dictionary.subscript.setter(&v26, v7, v18);
    swift_endAccess(v25);

  }
}

uint64_t ArtworkVideoReportingController.deinit()
{
  uint64_t v0;

  sub_5C198(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

double ArtworkVideoReportingController.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  sub_5C198(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 48, 7).n128_u64[0];
  return result;
}

void sub_C239D8(char *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  if (a1 != (_BYTE *)&dword_0 + 1)
  {

  }
}

uint64_t sub_C23A38(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = &unk_109E3A0;
  v2[1] = &unk_109E3B8;
  v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 96);
}

uint64_t type metadata accessor for ArtworkVideoReportingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ArtworkVideoReportingController);
}

void destroy for ComponentRenderEventSignposts(id *a1)
{

}

uint64_t initializeWithCopy for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  return a1;
}

uint64_t assignWithCopy for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  v13 = *(void **)(a1 + 24);
  v14 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v14;
  v15 = v14;

  v16 = *(void **)(a1 + 32);
  v17 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v17;
  v18 = v17;

  v19 = *(void **)(a1 + 40);
  v20 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v20;
  v21 = v20;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ComponentRenderEventSignposts(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentRenderEventSignposts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentRenderEventSignposts()
{
  return &type metadata for ComponentRenderEventSignposts;
}

double CarNowPlayingMetrics.Data.timePlayed.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void CarNowPlayingMetrics.Data.timePlayed.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t ApplicationCapabilities.subscriptionCapabilities.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

double UIView.Shadow.radius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void UIView.Shadow.radius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t ApplicationCapabilities.allowedServices.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
}

uint64_t Library.Menu.Revision.selected.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t CarNowPlayingMetrics.Data.init(timePlayed:tracksPlayed:rangeStartTime:sharedSessionIds:sharedSessionMaxParticipants:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(double *)a4 = a5;
  *(_QWORD *)(a4 + 8) = result;
  *(double *)(a4 + 16) = a6;
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = a3;
  return result;
}

uint64_t sub_C23DC4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C23DFC + 4 * byte_109E3F0[a1]))(0x79616C50656D6974, 0xEA00000000006465);
}

uint64_t sub_C23DFC()
{
  return 0x6C50736B63617274;
}

uint64_t sub_C23E1C()
{
  return 0x61745365676E6172;
}

unint64_t sub_C23E40()
{
  return 0xD000000000000010;
}

unint64_t sub_C23E5C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_C23E7C()
{
  unsigned __int8 *v0;

  return sub_C23DC4(*v0);
}

uint64_t sub_C23E84@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_C25458(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_C23EA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_C240C0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C23ED0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_C240C0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CarNowPlayingMetrics.Data.encode(to:)(_QWORD *a1)
{
  double *v1;
  uint64_t v2;
  double *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD958);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_C240C0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CarNowPlayingMetrics.Data.CodingKeys, &type metadata for CarNowPlayingMetrics.Data.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v25 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(&v25, v5, v12);
  if (!v2)
  {
    v13 = *((_QWORD *)v3 + 1);
    v24 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v13, &v24, v5);
    v14 = v3[2];
    v23 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v23, v5, v14);
    v22 = *((_QWORD *)v3 + 3);
    v21 = 3;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD968);
    v16 = sub_C26260(&qword_14FD970, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v21, v5, v15, v16);
    v17 = *((_QWORD *)v3 + 4);
    v20 = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v17, &v20, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_C240C0()
{
  unint64_t result;

  result = qword_14FD960;
  if (!qword_14FD960)
  {
    result = swift_getWitnessTable(&unk_109E5C0, &type metadata for CarNowPlayingMetrics.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_14FD960);
  }
  return result;
}

double CarNowPlayingMetrics.Data.init(from:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_C256B0(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_C24148(_QWORD *a1)
{
  return CarNowPlayingMetrics.Data.encode(to:)(a1);
}

uint64_t static CarNowPlayingMetrics.persistedMetricsData(for:)@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[40];

  sub_C258F8((uint64_t)v3);
  return sub_5C090((uint64_t)v3, a1, &qword_14FD978);
}

uint64_t Logger.carMetrics.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14F9CB0 != -1)
    swift_once(&qword_14F9CB0, sub_C25370);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.carMetrics);
}

void static CarNowPlayingMetrics.storeMetricsData(_:for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  NSString v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Class isa;
  NSString v11;
  _OWORD v12[2];
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  sub_5C090(a1, (uint64_t)&v14, &qword_14FD978);
  if (*((_QWORD *)&v15 + 1))
  {
    v17 = v14;
    v18 = v15;
    v19 = v16;
    v1 = type metadata accessor for JSONEncoder(0);
    v2 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
    JSONEncoder.init()(v2);
    v12[0] = v17;
    v12[1] = v18;
    v13 = v19;
    v3 = sub_C25C9C();
    v6 = dispatch thunk of JSONEncoder.encode<A>(_:)(v12, &type metadata for CarNowPlayingMetrics.Data, v3);
    v8 = v7;
    swift_release();
    v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    isa = Data._bridgeToObjectiveC()().super.isa;
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setValue:forKey:", isa, v11, swift_bridgeObjectRelease().n128_f64[0]);

    sub_50C60(v6, v8);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setValue:forKey:", 0, v5, swift_bridgeObjectRelease().n128_f64[0]);

  }
}

void sub_C245A4(char a1)
{
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  double v34;
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v36;
  double v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  os_log_type_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE v72[40];
  __int128 v73;
  double v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;

  v68 = *v1;
  v2 = a1 & 1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v3);
  v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Calendar(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v67 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v64 - v14;
  if (qword_14F9CB0 != -1)
    swift_once(&qword_14F9CB0, sub_C25370);
  v16 = type metadata accessor for Logger(0);
  v69 = __swift_project_value_buffer(v16, (uint64_t)static Logger.carMetrics);
  v17 = Logger.logObject.getter(v69);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(12, -1);
    v64 = v9;
    v20 = v19;
    v21 = swift_slowAlloc(32, -1);
    v66 = v6;
    v65 = v5;
    v22 = v11;
    v23 = v21;
    *(_QWORD *)&v73 = v21;
    *(_DWORD *)v20 = 136446210;
    v72[0] = v2;
    v24 = (char *)String.init<A>(describing:)(v72, &type metadata for CarNowPlayingMetrics.EventType);
    *(_QWORD *)(v20 + 4) = sub_BA95EC(v24, v25, (uint64_t *)&v73);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v17, v18, "Reporting %{public}s playsSummary event if needed", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v26 = v23;
    v11 = v22;
    v5 = v65;
    v6 = v66;
    swift_slowDealloc(v26, -1, -1);
    v27 = v20;
    v9 = v64;
    swift_slowDealloc(v27, -1, -1);
  }

  if (qword_14F9D58 != -1)
    swift_once(&qword_14F9D58, sub_C2C810);
  *(double *)&v28 = COERCE_DOUBLE(sub_C3108C());
  if ((v29 & 1) != 0)
  {
    if (qword_14F9CA8 != -1)
      swift_once(&qword_14F9CA8, sub_C2535C);
    v30 = *(double *)&qword_14FD950;
  }
  else
  {
    v30 = *(double *)&v28;
  }
  sub_C258F8((uint64_t)v72);
  v31 = sub_5C090((uint64_t)v72, (uint64_t)&v73, &qword_14FD978);
  if ((_QWORD)v75)
  {
    v32 = v74;
    v76 = v75;
    v77 = v73;
    v33 = static Date.now.getter(v31);
    v34 = Date.timeIntervalSince1970.getter(v33);
    v35 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    v36 = v35(v15, v10);
    v37 = (v34 - v32) * 1000.0;
    if (v30 < v37)
    {
      v38 = static Date.now.getter(v36);
      v39 = Date.timeIntervalSince1970.getter(v38);
      v40 = ((double (*)(char *, uint64_t))v35)(v15, v10);
      v41 = static Calendar.current.getter(v40);
      v42 = v67;
      static Date.now.getter(v41);
      Calendar.startOfDay(for:)(v42);
      v35(v42, v10);
      v43 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v44 = Date.timeIntervalSince1970.getter(v43);
      v35(v15, v10);
      v45 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v5, 1, 1, v45);
      type metadata accessor for MainActor(0);
      v47 = static MainActor.shared.getter(v46);
      v48 = swift_allocObject(&unk_13AF3E8, 104, 7);
      *(_QWORD *)(v48 + 16) = v47;
      *(_QWORD *)(v48 + 24) = &protocol witness table for MainActor;
      *(_OWORD *)(v48 + 32) = v77;
      *(double *)(v48 + 48) = v32;
      *(_OWORD *)(v48 + 56) = v76;
      *(double *)(v48 + 72) = v44;
      *(_BYTE *)(v48 + 80) = v2;
      *(double *)(v48 + 88) = v39;
      *(_QWORD *)(v48 + 96) = v68;
      sub_C51ED8((uint64_t)v5, (uint64_t)&unk_14FDA50, v48);
      swift_release();
      return;
    }
    v58 = v2;
    v59 = sub_C260D4((uint64_t)v72);
    v49 = Logger.logObject.getter(v59);
    v60 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v60))
    {
      v51 = swift_slowAlloc(32, -1);
      v61 = swift_slowAlloc(32, -1);
      v71 = v61;
      *(_DWORD *)v51 = 136446722;
      v70 = v58;
      v62 = (char *)String.init<A>(describing:)(&v70, &type metadata for CarNowPlayingMetrics.EventType);
      *(_QWORD *)(v51 + 4) = sub_BA95EC(v62, v63, &v71);
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2050;
      *(double *)(v51 + 14) = v37;
      *(_WORD *)(v51 + 22) = 2050;
      *(double *)(v51 + 24) = v30;
      _os_log_impl(&dword_0, v49, v60, "❌ Failed to configure %{public}s playsSummary event: range=%{public}f ms isn't greater than post frequency=%{public}f ms", (uint8_t *)v51, 0x20u);
      swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
      v57 = v61;
      goto LABEL_19;
    }
  }
  else
  {
    v49 = Logger.logObject.getter(v31);
    v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc(12, -1);
      v52 = swift_slowAlloc(32, -1);
      v53 = v2;
      v54 = v52;
      *(_QWORD *)&v77 = v52;
      *(_DWORD *)v51 = 136446210;
      LOBYTE(v76) = v53;
      v55 = (char *)String.init<A>(describing:)(&v76, &type metadata for CarNowPlayingMetrics.EventType);
      *(_QWORD *)(v51 + 4) = sub_BA95EC(v55, v56, (uint64_t *)&v77);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v49, v50, "❌ Failed to configure %{public}s playsSummary event: no persisted metrics data", (uint8_t *)v51, 0xCu);
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      v57 = v54;
LABEL_19:
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v51, -1, -1);
    }
  }

}

uint64_t sub_C24C24(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v7 + 512) = a7;
  *(double *)(v7 + 488) = a1;
  *(double *)(v7 + 496) = a2;
  *(_QWORD *)(v7 + 480) = a6;
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 504) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_C24C98, v10, v11);
}

uint64_t sub_C24C98()
{
  uint64_t v0;
  char v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;

  swift_release();
  if (qword_14F9D58 != -1)
    swift_once(&qword_14F9D58, sub_C2C810);
  v1 = *(_BYTE *)(v0 + 512);
  v3 = *(double *)(v0 + 488);
  v2 = *(double *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 480);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
  inited = swift_initStackObject(v5, v0 + 16);
  v7 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10613C0;
  strcpy((char *)(inited + 32), "totalDuration");
  *(_WORD *)(inited + 46) = -4864;
  *(double *)(inited + 48) = round(*(double *)v4 * 1000.0);
  *(_QWORD *)(inited + 72) = &type metadata for Double;
  *(_QWORD *)(inited + 80) = 0x6E756F4379616C70;
  *(_QWORD *)(inited + 88) = 0xE900000000000074;
  *(_QWORD *)(inited + 96) = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(inited + 120) = &type metadata for Int;
  *(_QWORD *)(inited + 128) = 0x6D6954746E657665;
  *(_QWORD *)(inited + 136) = 0xE900000000000065;
  *(double *)(inited + 144) = round(v3 * 1000.0);
  *(_QWORD *)(inited + 168) = &type metadata for Double;
  *(_QWORD *)(inited + 176) = 0x707954746E657665;
  *(_QWORD *)(inited + 184) = 0xE900000000000065;
  strcpy((char *)(inited + 192), "playsSummary");
  *(_BYTE *)(inited + 205) = 0;
  *(_WORD *)(inited + 206) = -5120;
  *(_QWORD *)(inited + 216) = &type metadata for String;
  *(_QWORD *)(inited + 224) = 0x6F436E6F69746361;
  v8 = v1 & 1;
  v9 = 0x746F6F7465756C62;
  if (!v8)
    v9 = 0x79616C50726143;
  v10 = 0xE900000000000068;
  if (!v8)
    v10 = 0xE700000000000000;
  *(_QWORD *)(inited + 232) = 0xED0000747865746ELL;
  *(_QWORD *)(inited + 240) = v9;
  *(_QWORD *)(inited + 248) = v10;
  *(_QWORD *)(inited + 264) = &type metadata for String;
  strcpy((char *)(inited + 272), "rangeStartTime");
  *(_BYTE *)(inited + 287) = -18;
  *(double *)(inited + 288) = round(*(double *)(v4 + 16) * 1000.0);
  *(_QWORD *)(inited + 312) = &type metadata for Double;
  strcpy((char *)(inited + 320), "rangeEndTime");
  *(_BYTE *)(inited + 333) = 0;
  *(_WORD *)(inited + 334) = -5120;
  *(double *)(inited + 336) = round(v2 * 1000.0);
  *(_QWORD *)(inited + 360) = &type metadata for Double;
  *(_QWORD *)(inited + 368) = 0xD000000000000013;
  *(_QWORD *)(inited + 376) = 0x8000000001103E60;
  *(_QWORD *)(inited + 384) = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 16);
  *(_QWORD *)(inited + 408) = &type metadata for Int;
  *(_QWORD *)(inited + 416) = 0xD000000000000018;
  *(_QWORD *)(inited + 424) = 0x8000000001103E80;
  v11 = sub_C32BFC(*(_QWORD *)(v4 + 32));
  v7[57] = &type metadata for String;
  v7[54] = v11;
  v7[55] = v12;
  v13 = sub_C263E0((uint64_t)v7);
  v14 = swift_allocObject(&unk_13AF410, 17, 7);
  *(_BYTE *)(v14 + 16) = v8;
  MetricsReportingController.recordCarPlayCustomEvent(with:properties:shouldSuppressUserInfo:completionHandler:)(0xD000000000000014, 0x8000000001103E40, v13, 0, (uint64_t)sub_C261D4, v14);
  swift_release();
  v15 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v15);
}

void sub_C24FAC(uint64_t a1, char a2)
{
  char v2;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  id v22;
  NSString v23;
  NSObject *oslog;
  uint64_t v25;
  uint64_t v26;

  v2 = a2 & 1;
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_14F9CB0 != -1)
      swift_once(&qword_14F9CB0, sub_C25370);
    v4 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v4, (uint64_t)static Logger.carMetrics);
    swift_errorRetain(a1);
    v5 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v5);
    v6 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = swift_slowAlloc(22, -1);
      v8 = swift_slowAlloc(64, -1);
      v26 = v8;
      *(_DWORD *)v7 = 136446466;
      LOBYTE(v25) = v2;
      v9 = (char *)String.init<A>(describing:)(&v25, &type metadata for CarNowPlayingMetrics.EventType);
      *(_QWORD *)(v7 + 4) = sub_BA95EC(v9, v10, &v26);
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      v25 = a1;
      swift_errorRetain(a1);
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
      v12 = (char *)String.init<A>(describing:)(&v25, v11);
      *(_QWORD *)(v7 + 14) = sub_BA95EC(v12, v13, &v26);
      swift_bridgeObjectRelease();
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl(&dword_0, oslog, v6, "❌ Failed to report %{public}s playsSummary event with error=%{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy(v8, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    if (qword_14F9CB0 != -1)
      swift_once(&qword_14F9CB0, sub_C25370);
    v14 = type metadata accessor for Logger(0);
    v15 = __swift_project_value_buffer(v14, (uint64_t)static Logger.carMetrics);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v26 = v19;
      *(_DWORD *)v18 = 136446210;
      LOBYTE(v25) = v2;
      v20 = (char *)String.init<A>(describing:)(&v25, &type metadata for CarNowPlayingMetrics.EventType);
      *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v26);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v16, v17, "✅ Reported %{public}s playsSummary event", (uint8_t *)v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }

    v22 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v22, "setValue:forKey:", 0, v23, swift_bridgeObjectRelease().n128_f64[0]);

  }
}

void sub_C2535C()
{
  qword_14FD950 = 0x4194997000000000;
}

uint64_t sub_C25370()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.carMetrics);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.carMetrics);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x697274654D726143, 0xEA00000000007363);
}

uint64_t static Logger.carMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14F9CB0 != -1)
    swift_once(&qword_14F9CB0, sub_C25370);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.carMetrics);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_C25458(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465)
  {
    v5 = 0xEA00000000006465;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x79616C50656D6974, 0xEA00000000006465, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6C50736B63617274 && a2 == 0xEC00000064657961)
  {
    v7 = 0xEC00000064657961;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C50736B63617274, 0xEC00000064657961, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x61745365676E6172 && a2 == 0xEE00656D69547472)
  {
    v8 = 0xEE00656D69547472;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x61745365676E6172, 0xEE00656D69547472, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0xD000000000000010)
  {
    v9 = 0x8000000001103E00;
    if (a2 == 0x8000000001103E00)
      goto LABEL_25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000001103E00, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000001103E20)
  {
    swift_bridgeObjectRelease(0x8000000001103E20);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x8000000001103E20, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_C256B0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDA60);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_C240C0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CarNowPlayingMetrics.Data.CodingKeys, &type metadata for CarNowPlayingMetrics.Data.CodingKeys, v11, v9, v10);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v26 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
    v13 = v12;
    v25 = 1;
    v14 = KeyedDecodingContainer.decode(_:forKey:)(&v25, v5);
    v24 = 2;
    KeyedDecodingContainer.decode(_:forKey:)(&v24, v5);
    v16 = v15;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD968);
    v23 = 3;
    v18 = sub_C26260(&qword_14FDA68, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v17, &v23, v5, v17, v18);
    v19 = v21[1];
    v22 = 4;
    swift_bridgeObjectRetain();
    v20 = KeyedDecodingContainer.decode(_:forKey:)(&v22, v5);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    *a2 = v13;
    a2[1] = v14;
    a2[2] = v16;
    a2[3] = v19;
    a2[4] = v20;
  }
}

void sub_C258F8(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  _OWORD v18[2];

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "valueForKey:", v3, swift_bridgeObjectRelease().n128_f64[0]);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v18, v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_5C090((uint64_t)v18, (uint64_t)&v13, &qword_14FF2A0);
  if (!v15)
  {
    sub_C261DC((uint64_t)&v13);
    goto LABEL_8;
  }
  if ((swift_dynamicCast(v17, &v13, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_8:
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v9 = 0uLL;
    goto LABEL_9;
  }
  v6 = v17[0];
  v5 = v17[1];
  v7 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  JSONDecoder.init()();
  v8 = sub_C2621C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for CarNowPlayingMetrics.Data, v6, v5, &type metadata for CarNowPlayingMetrics.Data, v8);
  sub_50C60(v6, v5);
  swift_release();
  v9 = v13;
  v10 = v14;
  v11 = v15;
  v12 = v16;
LABEL_9:
  *(_OWORD *)a1 = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v12;
}

unint64_t sub_C25C9C()
{
  unint64_t result;

  result = qword_14FD980;
  if (!qword_14FD980)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CarNowPlayingMetrics.Data, &type metadata for CarNowPlayingMetrics.Data);
    atomic_store(result, (unint64_t *)&qword_14FD980);
  }
  return result;
}

unint64_t sub_C25CE4()
{
  unint64_t result;

  result = qword_14FD988;
  if (!qword_14FD988)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CarNowPlayingMetrics.EventType, &type metadata for CarNowPlayingMetrics.EventType);
    atomic_store(result, (unint64_t *)&qword_14FD988);
  }
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics()
{
  return &type metadata for CarNowPlayingMetrics;
}

uint64_t storeEnumTagSinglePayload for CarNowPlayingMetrics.EventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_C25D84 + 4 * byte_109E3FA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_C25DB8 + 4 * byte_109E3F5[v4]))();
}

uint64_t sub_C25DB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C25DC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC25DC8);
  return result;
}

uint64_t sub_C25DD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC25DDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_C25DE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C25DE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.EventType()
{
  return &type metadata for CarNowPlayingMetrics.EventType;
}

uint64_t destroy for Lyrics.Syllable(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for CarNowPlayingMetrics.Data(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for CarNowPlayingMetrics.Data(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a2[3];
  v5 = a1[3];
  a1[3] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  return a1;
}

_QWORD *assignWithTake for CarNowPlayingMetrics.Data(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRelease(v4);
  a1[4] = a2[4];
  return a1;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.Data()
{
  return &type metadata for CarNowPlayingMetrics.Data;
}

uint64_t type metadata accessor for CarNowPlayingMetrics.Reporter()
{
  return objc_opt_self(_TtCO9MusicCore20CarNowPlayingMetrics8Reporter);
}

uint64_t storeEnumTagSinglePayload for CarNowPlayingMetrics.Data.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_C25F7C + 4 * byte_109E404[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_C25FB0 + 4 * byte_109E3FF[v4]))();
}

uint64_t sub_C25FB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C25FB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC25FC0);
  return result;
}

uint64_t sub_C25FCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC25FD4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_C25FD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C25FE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.Data.CodingKeys()
{
  return &type metadata for CarNowPlayingMetrics.Data.CodingKeys;
}

unint64_t sub_C26000()
{
  unint64_t result;

  result = qword_14FDA30;
  if (!qword_14FDA30)
  {
    result = swift_getWitnessTable(&unk_109E598, &type metadata for CarNowPlayingMetrics.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_14FDA30);
  }
  return result;
}

unint64_t sub_C26048()
{
  unint64_t result;

  result = qword_14FDA38;
  if (!qword_14FDA38)
  {
    result = swift_getWitnessTable(&unk_109E508, &type metadata for CarNowPlayingMetrics.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_14FDA38);
  }
  return result;
}

unint64_t sub_C26090()
{
  unint64_t result;

  result = qword_14FDA40;
  if (!qword_14FDA40)
  {
    result = swift_getWitnessTable(&unk_109E530, &type metadata for CarNowPlayingMetrics.Data.CodingKeys);
    atomic_store(result, &qword_14FDA40);
  }
  return result;
}

uint64_t sub_C260D4(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return a1;
}

uint64_t sub_C260FC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_C26128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  char v7;
  double v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(double *)(v1 + 72);
  v7 = *(_BYTE *)(v1 + 80);
  v8 = *(double *)(v1 + 88);
  v9 = (_QWORD *)swift_task_alloc(dword_14FDA4C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_50F8C;
  return sub_C24C24(v6, v8, a1, v4, v5, v1 + 32, v7);
}

uint64_t sub_C261C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_C261D4(uint64_t a1)
{
  uint64_t v1;

  sub_C24FAC(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_C261DC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF2A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_C2621C()
{
  unint64_t result;

  result = qword_14FDA58;
  if (!qword_14FDA58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CarNowPlayingMetrics.Data, &type metadata for CarNowPlayingMetrics.Data);
    atomic_store(result, (unint64_t *)&qword_14FDA58);
  }
  return result;
}

uint64_t sub_C26260(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FD968);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_C262C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FDB20);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21BAD0(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C263E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDB10);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_5C238(v7, (uint64_t)&v16, &qword_14FDB18);
    v8 = v16;
    v9 = v17;
    result = sub_21BAD0(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_50CA4(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C26514(uint64_t a1)
{
  return sub_197280(a1, &qword_14FDAC8, &qword_14FDAD0, sub_21BB34);
}

unint64_t sub_C26530(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDAF0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 48);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 2);
    v8 = (uint64_t)*(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    v10 = v9;
    result = sub_21BAD0(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v10;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C26648(uint64_t a1)
{
  return sub_C26654(a1, (uint64_t (*)(uint64_t, uint64_t))sub_21BAD0);
}

unint64_t sub_C26654(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t result;
  char v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v6 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDAF8);
  v5 = static _DictionaryStorage.allocate(capacity:)(v3);
  v6 = (_QWORD *)v5;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v6;
  }
  swift_retain(v5);
  v8 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v9 = *(v8 - 3);
    v10 = *(v8 - 2);
    v11 = *(v8 - 1);
    v12 = *v8;
    swift_bridgeObjectRetain();
    sub_50CB4(v11, v12);
    result = a2(v9, v10);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = (_QWORD *)(v6[6] + 16 * result);
    *v15 = v9;
    v15[1] = v10;
    v16 = (uint64_t *)(v6[7] + 16 * result);
    *v16 = v11;
    v16[1] = v12;
    v17 = v6[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v8 += 4;
    v6[2] = v19;
    if (!--v7)
    {
      swift_release(v6);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C2678C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF900);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_5C238(v7, (uint64_t)v16, &qword_14FDB30);
    result = sub_21BFA0((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_50CA4(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C268CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FDB00);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21BAD0(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C269E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDAE8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 2);
    v8 = *((_QWORD *)v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    result = sub_21BAD0(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_BYTE *)(v4[7] + result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 24;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C26AF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDAD8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDAE0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_5C238(v13, (uint64_t)v5, &qword_14FDAD8);
    result = sub_C32760((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = v8[7];
    v21 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    result = sub_C28630(v10, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v17);
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_C26CA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDAC0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    swift_unknownObjectRetain(v7);
    result = sub_C327C4((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C26DAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDA88);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDA90);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_5C238(v13, (uint64_t)v5, &qword_14FDA88);
    v15 = *v5;
    v16 = v5[1];
    result = sub_21BAD0(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for SocialProfile(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C26F4C(uint64_t a1)
{
  return sub_197280(a1, &qword_14FDAA8, (uint64_t *)&unk_14FDAB0, sub_21BB34);
}

unint64_t sub_C26F68(uint64_t a1)
{
  return sub_197280(a1, &qword_14FDA98, &qword_14FDAA0, (uint64_t (*)(uint64_t))sub_C327F4);
}

void *MPModelObject.metricsDictionary.getter()
{
  void *v0;
  id v1;
  char *v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t ObjectType;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v31[2];
  __int128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[104];
  _BYTE v37[176];

  objc_allocWithZone((Class)type metadata accessor for ModelObjectBackedStoreItemMetadata());
  v1 = v0;
  v2 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v1);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "effectiveStorePlatformDictionary");

    if (v4)
    {
      v5 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      swift_bridgeObjectRelease(0);

      return v5;
    }
  }
  objc_opt_self(MPModelGenericObject);
  v6 = (void *)swift_dynamicCastObjCClass(v1);
  if (v6)
  {
    v7 = objc_msgSend(v6, "anyObject");
    goto LABEL_8;
  }
  objc_opt_self(MPModelStoreBrowseContentItem);
  v8 = (void *)swift_dynamicCastObjCClass(v1);
  if (v8)
  {
    v7 = objc_msgSend(v8, "innerObject");
LABEL_8:
    v9 = v7;
    if (v9)
      goto LABEL_10;
  }
  v9 = v1;
LABEL_10:
  ObjectType = swift_getObjectType();
  v11 = objc_msgSend(v9, "identifiers");
  v12 = sub_C27FD8(ObjectType, 2, 0, v11);
  v14 = v13;

  if (v14)
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDA70);
    inited = swift_initStackObject(v15, v36);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataStorePlatformDictionaryKeyStoreID);
    v35 = v17;
    AnyHashable.init<A>(_:)(&v34, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 72) = v12;
    *(_QWORD *)(inited + 80) = v14;
    v5 = (void *)sub_C2678C(inited);
    swift_bridgeObjectRelease(0);
    objc_opt_self(MPModelRadioStation);
    if (swift_dynamicCastObjCClass(v1) && v5)
    {
      *(_QWORD *)&v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataStorePlatformDictionaryKeyKind);
      *((_QWORD *)&v32 + 1) = v18;
      AnyHashable.init<A>(_:)(&v32, &type metadata for String, &protocol witness table for String);
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindRadioStation);
      v33 = &type metadata for String;
      *(_QWORD *)&v32 = v19;
      *((_QWORD *)&v32 + 1) = v20;
      sub_50CA4(&v32, v31);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
      sub_C27504(v31, (uint64_t)&v34, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease(0x8000000000000000);
      sub_55E40((uint64_t)&v34);
    }
  }
  else
  {
    objc_opt_self(MPModelPlaylist);
    v5 = (void *)swift_dynamicCastObjCClass(v1);
    if (v5)
    {
      v22 = MPModelPropertyPlaylistType;
      v23 = v1;
      if (objc_msgSend(v5, "hasLoadedValueForKey:", v22)
        && objc_msgSend(v5, "type") == (char *)&dword_8 + 1)
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDA70);
        v25 = swift_initStackObject(v24, v37);
        *(_OWORD *)(v25 + 16) = xmmword_105F890;
        v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataStorePlatformDictionaryKeyStoreID);
        v35 = v26;
        AnyHashable.init<A>(_:)(&v34, &type metadata for String, &protocol witness table for String);
        *(_QWORD *)(v25 + 96) = &type metadata for String;
        strcpy((char *)(v25 + 72), "FavoriteSongs");
        *(_WORD *)(v25 + 86) = -4864;
        v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataStorePlatformDictionaryKeyKind);
        v35 = v27;
        AnyHashable.init<A>(_:)(&v34, &type metadata for String, &protocol witness table for String);
        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindPlaylist);
        *(_QWORD *)(v25 + 168) = &type metadata for String;
        *(_QWORD *)(v25 + 144) = v28;
        *(_QWORD *)(v25 + 152) = v29;
        v5 = (void *)sub_C2678C(v25);
        swift_bridgeObjectRelease(0);

      }
      else
      {

        return 0;
      }
    }
  }
  return v5;
}

void *sub_C27374()
{
  return MPModelObject.metricsDictionary.getter();
}

void sub_C27394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v6 = v5;
  v12 = *v5;
  v14 = sub_21BAD0(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_D3D9F0();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      *v21 = a1;
      v21[1] = a2;
      swift_bridgeObjectRelease();
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (uint64_t *)(v20[6] + 16 * v14);
    *v24 = a3;
    v24[1] = a4;
    v25 = (_QWORD *)(v20[7] + 16 * v14);
    *v25 = a1;
    v25[1] = a2;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_D3B67C(v17, a5 & 1);
  v22 = sub_21BAD0(a3, a4);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

_OWORD *sub_C27504(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_21BFA0(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_QWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1(v17);
        return sub_50CA4(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_D3DB90();
      goto LABEL_7;
    }
    sub_D3B988(v13, a3 & 1);
    v19 = sub_21BFA0(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_138F24(a2, (uint64_t)v21);
      return sub_1A15D0(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

void sub_C2763C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_21BAD0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_D3DF00();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_D3BF60(v15, a4 & 1);
  v20 = sub_21BAD0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_C27798(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_C32760(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
        return sub_C28674(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_D3E0B4();
      goto LABEL_7;
    }
    sub_D3C274(v17, a3 & 1);
    v24 = sub_C32760(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_C27E6C(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
  return result;
}

_OWORD *sub_C27918(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21BAD0(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1(v19);
        return sub_50CA4(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_D3E37C();
      goto LABEL_7;
    }
    sub_D3C690(v15, a4 & 1);
    v21 = sub_21BAD0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A1474(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_C27A48(uint64_t a1, Swift::UInt a2, Swift::UInt a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  Swift::UInt *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_21C2C4(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_D3E560();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v21 = (Swift::UInt *)(v18[6] + 16 * v12);
    *v21 = a2;
    v21[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return;
    }
    goto LABEL_14;
  }
  sub_D3C98C(v15, a4 & 1);
  v19 = sub_21C2C4(a2, a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = v19;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for MPCPlayerRequestTracklistRange(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v25);
  __break(1u);
}

void sub_C27B80(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v4 = v3;
  v7 = *v3;
  v9 = sub_C327C4((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_D3E6F0();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      swift_unknownObjectRelease(*(_QWORD *)(v16 + 8 * v9));
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_D3CC68(v12, a3 & 1);
  v17 = sub_C327C4((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v24 = sub_4E684(0, &qword_14FDA78, MPCPlayerPath_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

uint64_t sub_C27CE0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_C32760(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_D3E898();
      goto LABEL_7;
    }
    sub_D3CF3C(v17, a3 & 1);
    v24 = sub_C32760(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_C27F1C(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
  return result;
}

uint64_t sub_C27E6C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  result = sub_C28630(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_C27F1C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_C27FD8(uint64_t a1, uint64_t a2, unsigned __int8 a3, void *a4)
{
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  Class isa;
  id v31;

  v5 = a2;
  if (a3 > 1u)
    __asm { BR              X9 }
  v7 = sub_4E684(0, &qword_14FDB38, MPModelPlaylist_ptr);
  if (!swift_dynamicCastMetatype(a1, v7))
  {
    v10 = sub_4E684(0, &qword_14FDB40, MPModelSocialPerson_ptr);
    if (swift_dynamicCastMetatype(a1, v10))
    {
      if ((v5 & 1) != 0)
      {
        v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v11)
          return v8;
      }
      if ((v5 & 2) == 0)
        return 0;
      v17 = objc_msgSend(a4, "universalStore");
      if (!v17)
        return MPIdentifierSet.bestStoreIdentifier.getter();
      v14 = v17;
      v15 = objc_msgSend(v17, "socialProfileID");
      goto LABEL_24;
    }
    v12 = sub_4E684(0, qword_14FDB48, MPModelRadioStation_ptr);
    if (!swift_dynamicCastMetatype(a1, v12))
    {
      if ((v5 & 1) != 0)
      {
        v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v16)
          return v8;
      }
      if ((v5 & 2) == 0)
        return 0;
      return MPIdentifierSet.bestStoreIdentifier.getter();
    }
    if ((v5 & 2) == 0)
      return 0;
    v23 = objc_msgSend(a4, "radio");
    if (!v23)
      return 0;
    v24 = v23;
    v25 = objc_msgSend(v23, "stationStringID");
    if (v25)
    {
      v26 = v25;
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      v29 = HIBYTE(v28) & 0xF;
      if ((v28 & 0x2000000000000000) == 0)
        v29 = v19 & 0xFFFFFFFFFFFFLL;
      if (v29)
      {
LABEL_40:
        swift_unknownObjectRelease(v24);
        return v19;
      }
      swift_bridgeObjectRelease(v28);
    }
    if (!objc_msgSend(v24, "stationID")
      || (objc_msgSend(v24, "stationID"),
          isa = Int64._bridgeToObjectiveC()().super.super.isa,
          v31 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue(),
          isa,
          !v31))
    {
      swift_unknownObjectRelease(v24);
      return 0;
    }
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);

    goto LABEL_40;
  }
  if ((v5 & 1) != 0)
  {
    v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
    if (v9)
      return v8;
  }
  if ((v5 & 2) == 0)
    return 0;
  v13 = objc_msgSend(a4, "universalStore");
  if (!v13)
    return MPIdentifierSet.bestStoreIdentifier.getter();
  v14 = v13;
  v15 = objc_msgSend(v13, "globalPlaylistID");
LABEL_24:
  v18 = v15;
  swift_unknownObjectRelease(v14);
  if (!v18)
    return MPIdentifierSet.bestStoreIdentifier.getter();
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0)
    v22 = v19 & 0xFFFFFFFFFFFFLL;
  if (!v22)
  {
    swift_bridgeObjectRelease(v21);
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  return v19;
}

unint64_t sub_C28450(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1503130);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = sub_21C7E8(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_C28524(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDA80);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  result = sub_21C7E8(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v6;
    v10[1] = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *((_BYTE *)v9 - 16);
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_21C7E8(v4);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_C28630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_C28674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_C286B8(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 96);
}

uint64_t type metadata accessor for MetricsEventSampler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetricsEventSampler);
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:page:snapshotImpressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, unsigned __int16 a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  unsigned int (*v42)(uint64_t *, uint64_t, int *);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t *v53;
  unsigned int v54;
  uint64_t v55;
  char v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  _QWORD *v61;
  _BYTE v62[4];
  int v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t *v71;
  _BYTE *v72;
  uint64_t v73;

  v73 = a8;
  v68 = a6;
  v69 = a7;
  v64 = a5;
  v63 = a4;
  v67 = a12;
  v66 = a11;
  v65 = a10;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v18);
  v70 = &v62[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB9A0);
  __chkstk_darwin(v20);
  v72 = &v62[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  v71 = (uint64_t *)&v62[-v23];
  __chkstk_darwin(v24);
  v26 = (uint64_t *)&v62[-v25];
  __chkstk_darwin(v27);
  v29 = (uint64_t *)&v62[-v28];
  __chkstk_darwin(v30);
  v32 = &v62[-v31];
  __chkstk_darwin(v33);
  v35 = (uint64_t *)&v62[-v34];
  v36 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(_BYTE *)(a9 + v36[18]) = 0;
  v37 = (_QWORD *)(a9 + v36[19]);
  *v37 = 0;
  v37[1] = 0;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 17) = v63;
  sub_5C090(v64, a9 + v36[7], &qword_14FAC20);
  *(_QWORD *)(a9 + v36[8]) = v68;
  v38 = (_QWORD *)(a9 + v36[9]);
  v39 = v73;
  *v38 = v69;
  v38[1] = v39;
  v40 = a9 + v36[10];
  *(_OWORD *)v40 = v65;
  *(_QWORD *)(v40 + 16) = v66;
  *(_WORD *)(v40 + 24) = v67;
  v73 = a13;
  sub_5C238(a13, (uint64_t)v35, &qword_14FB9A0);
  v41 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v42 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(*((_QWORD *)v41 - 1) + 48);
  if (v42(v35, 1, v41) == 1)
  {
    sub_56024((uint64_t)v35, &qword_14FB9A0);
    v43 = 0;
    v44 = 0;
  }
  else
  {
    v43 = *v35;
    v44 = v35[1];
    swift_bridgeObjectRetain();
    sub_5C0DC((uint64_t)v35, type metadata accessor for MetricsEvent.Page);
  }
  v45 = (_QWORD *)(a9 + v36[12]);
  *v45 = v43;
  v45[1] = v44;
  v46 = v73;
  sub_5C238(v73, (uint64_t)v32, &qword_14FB9A0);
  if (v42((uint64_t *)v32, 1, v41) == 1)
  {
    sub_56024((uint64_t)v32, &qword_14FB9A0);
    v47 = 0;
    v48 = 0;
  }
  else
  {
    v47 = *((_QWORD *)v32 + 2);
    v48 = *((_QWORD *)v32 + 3);
    swift_bridgeObjectRetain();
    sub_5C0DC((uint64_t)v32, type metadata accessor for MetricsEvent.Page);
  }
  v49 = (_QWORD *)(a9 + v36[13]);
  *v49 = v47;
  v49[1] = v48;
  sub_5C238(v46, (uint64_t)v29, &qword_14FB9A0);
  if (v42(v29, 1, v41) == 1)
  {
    sub_56024((uint64_t)v29, &qword_14FB9A0);
    v50 = type metadata accessor for URL(0);
    v51 = v70;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v70, 1, 1, v50);
  }
  else
  {
    v51 = v70;
    sub_5C238((uint64_t)v29 + v41[6], (uint64_t)v70, &qword_14FAC20);
    sub_5C0DC((uint64_t)v29, type metadata accessor for MetricsEvent.Page);
  }
  sub_5C090((uint64_t)v51, a9 + v36[14], &qword_14FAC20);
  sub_5C238(v46, (uint64_t)v26, &qword_14FB9A0);
  if (v42(v26, 1, v41) == 1)
  {
    sub_56024((uint64_t)v26, &qword_14FB9A0);
    v52 = 0;
  }
  else
  {
    v52 = *(uint64_t *)((char *)v26 + v41[7]);
    swift_bridgeObjectRetain();
    sub_5C0DC((uint64_t)v26, type metadata accessor for MetricsEvent.Page);
  }
  *(_QWORD *)(a9 + v36[15]) = v52;
  v53 = v71;
  sub_5C238(v46, (uint64_t)v71, &qword_14FB9A0);
  v54 = v42(v53, 1, v41);
  v55 = (uint64_t)v72;
  if (v54 == 1)
  {
    sub_56024((uint64_t)v53, &qword_14FB9A0);
    v56 = 1;
  }
  else
  {
    v56 = *((_BYTE *)v53 + v41[9]);
    sub_5C0DC((uint64_t)v53, type metadata accessor for MetricsEvent.Page);
  }
  *(_BYTE *)(a9 + v36[16]) = v56;
  sub_5C090(v73, v55, &qword_14FB9A0);
  if (v42((uint64_t *)v55, 1, v41) == 1)
  {
    result = sub_56024(v55, &qword_14FB9A0);
    v58 = 0;
    v59 = 0;
  }
  else
  {
    v60 = (uint64_t *)(v55 + v41[8]);
    v58 = *v60;
    v59 = v60[1];
    swift_bridgeObjectRetain();
    result = sub_5C0DC(v55, type metadata accessor for MetricsEvent.Page);
  }
  v61 = (_QWORD *)(a9 + v36[17]);
  *v61 = v58;
  v61[1] = v59;
  *(_QWORD *)(a9 + v36[11]) = a14;
  return result;
}

uint64_t type metadata accessor for MetricsEvent.Click(uint64_t a1)
{
  return sub_6345C(a1, qword_14FDD58, (uint64_t)&nominal type descriptor for MetricsEvent.Click);
}

uint64_t type metadata accessor for MetricsEvent.Page(uint64_t a1)
{
  return sub_6345C(a1, qword_14FDCB0, (uint64_t)&nominal type descriptor for MetricsEvent.Page);
}

uint64_t *MetricsReportingController.shared.unsafeMutableAddressor()
{
  if (qword_14F9D58 != -1)
    swift_once(&qword_14F9D58, sub_C2C810);
  return &static MetricsReportingController.shared;
}

uint64_t MetricsEvent.ComponentRender.init(componentIdentifier:componentType:componentAppearTime:componentPlaceholderAppearTime:componentMotionActivationTime:componentRequestTime:componentEndTime:componentInterruptTime:preloadStatus:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11;
  return result;
}

uint64_t sub_C28CA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id *v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  double v28;
  uint64_t v29;
  void *v30;
  __n128 v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  double v47;
  char *v50;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  double v62;
  char v63;
  char v64[24];

  v61 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v2);
  v59 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v60 = (char *)&v52 - v5;
  __chkstk_darwin(v6);
  v8 = (char *)&v52 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v52 - v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v52 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v52 - v20;
  v22 = (id *)(v1 + 16);
  swift_beginAccess(v1 + 16, v64, 0, 0);
  v23 = *(id *)(v1 + 16);
  v24 = sub_C390E0();

  if ((v24 & 1) != 0)
    return 1;
  v53 = v18;
  v54 = v15;
  v55 = v11;
  v56 = v8;
  v57 = v13;
  v58 = v21;
  v26 = sub_C391B8();
  v25 = 1;
  if (v26)
  {
    v27 = (void *)v26;
    v62 = 0.0;
    v63 = 1;
    static Double._conditionallyBridgeFromObjectiveC(_:result:)(v26, &v62);

    if ((v63 & 1) == 0)
    {
      v28 = v62;
      v29 = sub_C39038();
      if (v29)
      {
        v30 = (void *)v29;
        v62 = 0.0;
        v63 = 1;
        static Double._conditionallyBridgeFromObjectiveC(_:result:)(v29, &v62);

        if ((v63 & 1) == 0)
        {
          v32 = v62;
          Date.init()(v31);
          v33 = *v22;
          v34 = (uint64_t)v56;
          sub_C39180((uint64_t)v56);

          v35 = v57;
          v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
          v37 = v12;
          if (v36(v34, 1, v12))
          {
            sub_56024(v34, &qword_14FDE40);
            v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
            v39 = (uint64_t)v55;
            v38(v55, 1, 1, v37);
          }
          else
          {
            v40 = v54;
            (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v54, v34, v12);
            v41 = sub_56024(v34, &qword_14FDE40);
            v39 = (uint64_t)v55;
            Date.addingTimeInterval(_:)(v41, v32 / 1000.0);
            v42 = *(void (**)(char *, uint64_t))(v35 + 8);
            v42(v40, v12);
            v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
            v38((char *)v39, 0, 1, v37);
            if (v36(v39, 1, v37) != 1)
            {
              v50 = v53;
              (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v53, v39, v37);
              v45 = v58;
              v51 = static Date.< infix(_:_:)(v58, v50);
              v42(v50, v37);
              v43 = (uint64_t)v59;
              v44 = (uint64_t)v60;
              if ((v51 & 1) != 0)
              {
                v25 = 1;
                goto LABEL_20;
              }
LABEL_11:
              v46 = sub_1812F0(0x20000000000001uLL);
              if (v46 == 0x20000000000000)
              {
                if (v28 < 1.0)
                {
LABEL_13:
                  v25 = 0;
LABEL_19:
                  v42 = *(void (**)(char *, uint64_t))(v35 + 8);
LABEL_20:
                  v42(v45, v37);
                  return v25;
                }
              }
              else
              {
                v47 = (double)v46 * 1.11022302e-16 + 0.0;
                if (v47 <= 0.0 || v47 > v28)
                  goto LABEL_13;
              }
              (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v44, v45, v37);
              v25 = 1;
              v38((char *)v44, 0, 1, v37);
              swift_beginAccess(v22, &v62, 33, 0);
              sub_5C238(v44, v43, &qword_14FDE40);
              sub_C3919C(v43);
              swift_endAccess(&v62);
              sub_56024(v44, &qword_14FDE40);
              goto LABEL_19;
            }
          }
          v43 = (uint64_t)v59;
          v44 = (uint64_t)v60;
          sub_56024(v39, &qword_14FDE40);
          v45 = v58;
          goto LABEL_11;
        }
      }
    }
  }
  return v25;
}

uint64_t sub_C290D8(void (*a1)(char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id *v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  double v28;
  uint64_t v29;
  void *v30;
  __n128 v31;
  double v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  int v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  double v50;
  char *v52;
  char v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  double v64;
  char v65;
  char v66[24];

  v63 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v2);
  v61 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v62 = (char *)&v54 - v5;
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v54 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v54 - v20;
  v22 = (id *)(v1 + 16);
  swift_beginAccess(v1 + 16, v66, 0, 0);
  v23 = *(id *)(v1 + 16);
  v24 = sub_C39588();

  if ((v24 & 1) != 0)
    return 1;
  v55 = v18;
  v56 = v15;
  v57 = v11;
  v58 = v8;
  v59 = v21;
  v60 = v13;
  v26 = sub_C32690();
  v25 = 1;
  if (v26)
  {
    v27 = (void *)v26;
    v64 = 0.0;
    v65 = 1;
    static Double._conditionallyBridgeFromObjectiveC(_:result:)(v26, &v64);

    if ((v65 & 1) == 0)
    {
      v28 = v64;
      v29 = sub_C32690();
      if (v29)
      {
        v30 = (void *)v29;
        v64 = 0.0;
        v65 = 1;
        static Double._conditionallyBridgeFromObjectiveC(_:result:)(v29, &v64);

        if ((v65 & 1) == 0)
        {
          v32 = v64;
          v33 = v59;
          Date.init()(v31);
          v34 = *v22;
          v35 = (uint64_t)v58;
          sub_C395A4((uint64_t)v58);

          v36 = v60;
          v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
          v38 = v12;
          v39 = v37(v35, 1, v12);
          v40 = v33;
          if (v39)
          {
            sub_56024(v35, &qword_14FDE40);
            v41 = (uint64_t)v57;
            v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
            v63(v57, 1, 1, v38);
          }
          else
          {
            v42 = v56;
            (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v56, v35, v38);
            v43 = sub_56024(v35, &qword_14FDE40);
            v41 = (uint64_t)v57;
            Date.addingTimeInterval(_:)(v43, v32 / 1000.0);
            v44 = *(void (**)(char *, uint64_t))(v36 + 8);
            v44(v42, v38);
            v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
            v45((char *)v41, 0, 1, v38);
            v46 = v37(v41, 1, v38);
            v63 = v45;
            if (v46 != 1)
            {
              v52 = v55;
              (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v55, v41, v38);
              v53 = static Date.< infix(_:_:)(v40, v52);
              v44(v52, v38);
              v47 = (uint64_t)v61;
              v48 = (uint64_t)v62;
              if ((v53 & 1) != 0)
              {
                v25 = 1;
                goto LABEL_18;
              }
LABEL_11:
              v49 = sub_1812F0(0x20000000000001uLL);
              if (v49 == 0x20000000000000)
              {
                if (v28 < 1.0)
                {
                  v25 = 0;
LABEL_17:
                  v44 = *(void (**)(char *, uint64_t))(v36 + 8);
LABEL_18:
                  v44(v40, v38);
                  return v25;
                }
              }
              else
              {
                v25 = 0;
                v50 = (double)v49 * 1.11022302e-16 + 0.0;
                if (v50 <= 0.0 || v50 > v28)
                  goto LABEL_17;
              }
              (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v48, v40, v38);
              v25 = 1;
              v63((char *)v48, 0, 1, v38);
              swift_beginAccess(v22, &v64, 33, 0);
              sub_5C238(v48, v47, &qword_14FDE40);
              sub_C39688(v47);
              swift_endAccess(&v64);
              sub_56024(v48, &qword_14FDE40);
              goto LABEL_17;
            }
          }
          v47 = (uint64_t)v61;
          v48 = (uint64_t)v62;
          sub_56024(v41, &qword_14FDE40);
          goto LABEL_11;
        }
      }
    }
  }
  return v25;
}

uint64_t MetricsEvent.TargetType.init(contentItem:)(void *a1)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v2 = objc_msgSend(a1, "itemType");
  switch((unint64_t)v2)
  {
    case 1uLL:

      result = 0;
      break;
    case 2uLL:

      result = 3;
      break;
    case 4uLL:

      result = 16;
      break;
    case 7uLL:

      result = 20;
      break;
    default:
      v4 = static os_log_type_t.error.getter(v2);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF50);
      v6 = swift_allocObject(v5, 72, 7);
      *(_OWORD *)(v6 + 16) = xmmword_105B360;
      v12 = objc_msgSend(a1, "itemType");
      _s3__C33MPModelStoreBrowseContentItemTypeOMa_0(0);
      v8 = String.init<A>(describing:)(&v12, v7);
      v10 = v9;
      *(_QWORD *)(v6 + 56) = &type metadata for String;
      *(_QWORD *)(v6 + 64) = sub_C10444();
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v10;
      sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
      v11 = (void *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)(v4, &dword_0, v11, "MPModelStoreBrowseContentItem.Kind.targetType: Returning nil for [targetType for this kind not yet implemented] self=%@", 119, 2, v6);

      swift_bridgeObjectRelease();
      result = 24;
      break;
  }
  return result;
}

uint64_t MetricsEvent.TargetType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C296F0 + 4 * byte_109E6D7[a1]))(0x6D75626C41, 0xE500000000000000);
}

uint64_t sub_C296F0()
{
  return 0x7465446D75626C41;
}

uint64_t sub_C29710()
{
  return 7368801;
}

uint64_t sub_C29720()
{
  return 0x747369747241;
}

uint64_t sub_C29734()
{
  return 0x72656E6E6162;
}

uint64_t sub_C29748()
{
  return 0x6E6F74747562;
}

uint64_t sub_C2975C()
{
  return 0x6954656C62627562;
}

uint64_t sub_C2977C()
{
  return 1685217603;
}

unint64_t sub_C2978C()
{
  return 0xD000000000000011;
}

uint64_t sub_C297A8()
{
  return 0x7265746C6966;
}

uint64_t sub_C297BC()
{
  return 0x7449726564616548;
}

uint64_t sub_C297D8()
{
  return 0x7473694C746E6948;
}

uint64_t sub_C297F8()
{
  return 7955819;
}

uint64_t sub_C29808()
{
  return 1802398060;
}

uint64_t sub_C29818()
{
  return 0x6E694C636972796CLL;
}

uint64_t sub_C29834()
{
  return 0x6D6574497473694CLL;
}

uint64_t sub_C2984C()
{
  return 0x7473696C79616C50;
}

uint64_t sub_C29878()
{
  return 0x4C746E65746E6F43;
}

uint64_t sub_C2989C()
{
  return 0x726564696C73;
}

uint64_t sub_C298B0()
{
  return 1735290707;
}

uint64_t sub_C298C0()
{
  return 0x6C6C65737055;
}

uint64_t sub_C298D4()
{
  return 0x657449666C656853;
}

uint64_t sub_C298F4()
{
  return 0x6D65744964697247;
}

uint64_t sub_C2990C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_435C2C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

Swift::Int sub_C29918(uint64_t a1, uint64_t a2)
{
  return sub_435CC4(a1, a2, (uint64_t (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

uint64_t sub_C29924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_435D34(a1, a2, a3, (uint64_t (*)(_QWORD))MetricsEvent.TargetType.rawValue.getter);
}

Swift::Int sub_C29930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_435D80(a1, a2, a3, (uint64_t (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

uint64_t sub_C2993C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore12MetricsEventV10TargetTypeO8rawValueAESgSS_tcfC_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_C29968@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = MetricsEvent.TargetType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t MetricsEvent.Page.init(pageIdentifier:pageType:pageURL:pageDetails:searchTerm:pageDisplayType:extRefUrl:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, char a10, uint64_t a11, uint64_t a12)
{
  int *v17;
  uint64_t result;
  _QWORD *v19;
  _QWORD *v20;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  v17 = (int *)type metadata accessor for MetricsEvent.Page(0);
  result = sub_5C090(a5, (uint64_t)a9 + v17[6], &qword_14FAC20);
  *(_QWORD *)((char *)a9 + v17[7]) = a6;
  v19 = (_QWORD *)((char *)a9 + v17[8]);
  *v19 = a7;
  v19[1] = a8;
  *((_BYTE *)a9 + v17[9]) = a10 & 1;
  v20 = (_QWORD *)((char *)a9 + v17[10]);
  *v20 = a11;
  v20[1] = a12;
  return result;
}

uint64_t static MetricsEvent.Page.contextualActionMenu(storeID:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  int *v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (a2)
    v4 = a1;
  else
    v4 = 0xD000000000000014;
  if (a2)
    v5 = a2;
  else
    v5 = 0x8000000001103F20;
  v6 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v7 = (char *)a3 + v6[6];
  v8 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *a3 = v4;
  a3[1] = v5;
  a3[2] = 0xD000000000000014;
  a3[3] = 0x8000000001103F20;
  *(unint64_t *)((char *)a3 + v6[7]) = 0;
  v9 = (unint64_t *)((char *)a3 + v6[8]);
  *v9 = 0;
  v9[1] = 0;
  *((_BYTE *)a3 + v6[9]) = 1;
  v10 = (unint64_t *)((char *)a3 + v6[10]);
  *v10 = 0;
  v10[1] = 0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_C29B10()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryMenuSelection);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMenuSelection);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000014;
  v1[1] = 0x8000000001104480;
  v1[2] = 0x7972617262694CLL;
  v1[3] = 0xE700000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryMenuSelection.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9CB8, (uint64_t)static MetricsEvent.Page.libraryMenuSelection, (uint64_t)sub_C29B10);
}

uint64_t static MetricsEvent.Page.libraryMenuSelection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9CB8, (uint64_t)static MetricsEvent.Page.libraryMenuSelection, (uint64_t)sub_C29B10, a1);
}

uint64_t sub_C29C20()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryMenuEdit);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMenuEdit);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0x4D7972617262694CLL;
  v1[1] = 0xEF74696445756E65;
  v1[2] = 0x72656B636950;
  v1[3] = 0xE600000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryMenuEdit.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9CC0, (uint64_t)static MetricsEvent.Page.libraryMenuEdit, (uint64_t)sub_C29C20);
}

uint64_t sub_C29D18(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (*a1 != -1)
    swift_once(a1, a3);
  v4 = type metadata accessor for MetricsEvent.Page(0);
  return __swift_project_value_buffer(v4, a2);
}

uint64_t static MetricsEvent.Page.libraryMenuEdit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9CC0, (uint64_t)static MetricsEvent.Page.libraryMenuEdit, (uint64_t)sub_C29C20, a1);
}

uint64_t sub_C29D74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for MetricsEvent.Page(0);
  v7 = __swift_project_value_buffer(v6, a2);
  return sub_1A9DC0(v7, a4);
}

uint64_t sub_C29DC0()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryMadeForYou);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMadeForYou);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0x59726F466564614DLL;
  v1[1] = 0xEA0000000000756FLL;
  v1[2] = 0x7972617262694CLL;
  v1[3] = 0xE700000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryMadeForYou.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9CC8, (uint64_t)static MetricsEvent.Page.libraryMadeForYou, (uint64_t)sub_C29DC0);
}

uint64_t static MetricsEvent.Page.libraryMadeForYou.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9CC8, (uint64_t)static MetricsEvent.Page.libraryMadeForYou, (uint64_t)sub_C29DC0, a1);
}

uint64_t sub_C29ED0()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryAlbumsList);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryAlbumsList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000011;
  v1[1] = 0x8000000001104460;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryAlbumsList.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9CD0, (uint64_t)static MetricsEvent.Page.libraryAlbumsList, (uint64_t)sub_C29ED0);
}

uint64_t static MetricsEvent.Page.libraryAlbumsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9CD0, (uint64_t)static MetricsEvent.Page.libraryAlbumsList, (uint64_t)sub_C29ED0, a1);
}

uint64_t sub_C29FD8()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryArtistsList);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryArtistsList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000012;
  v1[1] = 0x8000000001104440;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryArtistsList.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9CD8, (uint64_t)static MetricsEvent.Page.libraryArtistsList, (uint64_t)sub_C29FD8);
}

uint64_t static MetricsEvent.Page.libraryArtistsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9CD8, (uint64_t)static MetricsEvent.Page.libraryArtistsList, (uint64_t)sub_C29FD8, a1);
}

uint64_t sub_C2A0E0()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryCompilationsList);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryCompilationsList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000017;
  v1[1] = 0x8000000001104420;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryCompilationsList.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9CE0, (uint64_t)static MetricsEvent.Page.libraryCompilationsList, (uint64_t)sub_C2A0E0);
}

uint64_t static MetricsEvent.Page.libraryCompilationsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9CE0, (uint64_t)static MetricsEvent.Page.libraryCompilationsList, (uint64_t)sub_C2A0E0, a1);
}

uint64_t sub_C2A1E8()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryComposersList);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryComposersList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000014;
  v1[1] = 0x8000000001104400;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryComposersList.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9CE8, (uint64_t)static MetricsEvent.Page.libraryComposersList, (uint64_t)sub_C2A1E8);
}

uint64_t static MetricsEvent.Page.libraryComposersList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9CE8, (uint64_t)static MetricsEvent.Page.libraryComposersList, (uint64_t)sub_C2A1E8, a1);
}

uint64_t sub_C2A2F0()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryGenresList);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryGenresList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000011;
  v1[1] = 0x80000000011043E0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryGenresList.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9CF0, (uint64_t)static MetricsEvent.Page.libraryGenresList, (uint64_t)sub_C2A2F0);
}

uint64_t static MetricsEvent.Page.libraryGenresList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9CF0, (uint64_t)static MetricsEvent.Page.libraryGenresList, (uint64_t)sub_C2A2F0, a1);
}

uint64_t sub_C2A3F8()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryMusicVideosList);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000016;
  v1[1] = 0x80000000011043C0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryMusicVideosList.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9CF8, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList, (uint64_t)sub_C2A3F8);
}

uint64_t static MetricsEvent.Page.libraryMusicVideosList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9CF8, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList, (uint64_t)sub_C2A3F8, a1);
}

uint64_t sub_C2A500()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryPlaylistsList);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000014;
  v1[1] = 0x80000000011043A0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryPlaylistsList.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9D00, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList, (uint64_t)sub_C2A500);
}

uint64_t static MetricsEvent.Page.libraryPlaylistsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9D00, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList, (uint64_t)sub_C2A500, a1);
}

uint64_t sub_C2A608()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.librarySongsList);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.librarySongsList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000010;
  v1[1] = 0x8000000001104380;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.librarySongsList.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9D08, (uint64_t)static MetricsEvent.Page.librarySongsList, (uint64_t)sub_C2A608);
}

uint64_t static MetricsEvent.Page.librarySongsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9D08, (uint64_t)static MetricsEvent.Page.librarySongsList, (uint64_t)sub_C2A608, a1);
}

uint64_t sub_C2A710()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryRecentlyAdded);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000018;
  v1[1] = 0x8000000001104360;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryRecentlyAdded.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9D10, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded, (uint64_t)sub_C2A710);
}

uint64_t static MetricsEvent.Page.libraryRecentlyAdded.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9D10, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded, (uint64_t)sub_C2A710, a1);
}

uint64_t sub_C2A818()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryRecentlyDownloaded);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD00000000000001DLL;
  v1[1] = 0x8000000001104340;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryRecentlyDownloaded.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9D18, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded, (uint64_t)sub_C2A818);
}

uint64_t static MetricsEvent.Page.libraryRecentlyDownloaded.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9D18, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded, (uint64_t)sub_C2A818, a1);
}

uint64_t sub_C2A920()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryAlbumDetail);
  v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail);
  v2 = v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "LibraryAlbum");
  *(_BYTE *)(v1 + 13) = 0;
  *(_WORD *)(v1 + 14) = -5120;
  *(_QWORD *)(v1 + 16) = 0x6D75626C41;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  *(_QWORD *)(v1 + v0[7]) = 0;
  v5 = (_QWORD *)(v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *(_BYTE *)(v1 + v0[9]) = 1;
  v6 = (_QWORD *)(v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryAlbumDetail.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9D20, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail, (uint64_t)sub_C2A920);
}

uint64_t static MetricsEvent.Page.libraryAlbumDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9D20, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail, (uint64_t)sub_C2A920, a1);
}

uint64_t sub_C2AA30()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryArtistDetail);
  v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryArtistDetail);
  v2 = v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "LibraryArtist");
  *(_WORD *)(v1 + 14) = -4864;
  *(_QWORD *)(v1 + 16) = 0x747369747241;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  *(_QWORD *)(v1 + v0[7]) = 0;
  v5 = (_QWORD *)(v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *(_BYTE *)(v1 + v0[9]) = 1;
  v6 = (_QWORD *)(v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryArtistDetail.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9D28, (uint64_t)static MetricsEvent.Page.libraryArtistDetail, (uint64_t)sub_C2AA30);
}

uint64_t static MetricsEvent.Page.libraryArtistDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9D28, (uint64_t)static MetricsEvent.Page.libraryArtistDetail, (uint64_t)sub_C2AA30, a1);
}

uint64_t sub_C2AB44()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryPlaylistDetail);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0x507972617262694CLL;
  v1[1] = 0xEF7473696C79616CLL;
  v1[2] = 0x7473696C79616C50;
  v1[3] = 0xE800000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryPlaylistDetail.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9D30, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail, (uint64_t)sub_C2AB44);
}

uint64_t static MetricsEvent.Page.libraryPlaylistDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9D30, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail, (uint64_t)sub_C2AB44, a1);
}

uint64_t sub_C2AC5C()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryComposerDetail);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryComposerDetail);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0x437972617262694CLL;
  v1[1] = 0xEF7265736F706D6FLL;
  v1[2] = 0x747369747241;
  v1[3] = 0xE600000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryComposerDetail.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9D38, (uint64_t)static MetricsEvent.Page.libraryComposerDetail, (uint64_t)sub_C2AC5C);
}

uint64_t static MetricsEvent.Page.libraryComposerDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9D38, (uint64_t)static MetricsEvent.Page.libraryComposerDetail, (uint64_t)sub_C2AC5C, a1);
}

uint64_t sub_C2AD70()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.libraryGenreDetail);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryGenreDetail);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000012;
  v1[1] = 0x8000000001104320;
  v1[2] = 0x65726E6547;
  v1[3] = 0xE500000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryGenreDetail.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9D40, (uint64_t)static MetricsEvent.Page.libraryGenreDetail, (uint64_t)sub_C2AD70);
}

uint64_t static MetricsEvent.Page.libraryGenreDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9D40, (uint64_t)static MetricsEvent.Page.libraryGenreDetail, (uint64_t)sub_C2AD70, a1);
}

uint64_t sub_C2AE7C()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.playlistCreation);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.playlistCreation);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0x6C79616C5077654ELL;
  v1[1] = 0xEB00000000747369;
  v1[2] = 0x7473696C79616C50;
  v1[3] = 0xE800000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 0;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.playlistCreation.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9D48, (uint64_t)static MetricsEvent.Page.playlistCreation, (uint64_t)sub_C2AE7C);
}

uint64_t static MetricsEvent.Page.playlistCreation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9D48, (uint64_t)static MetricsEvent.Page.playlistCreation, (uint64_t)sub_C2AE7C, a1);
}

uint64_t sub_C2AF8C()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  __swift_allocate_value_buffer((uint64_t)v0, static MetricsEvent.Page.playlistPicker);
  v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)static MetricsEvent.Page.playlistPicker);
  v2 = v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "PlaylistPicker");
  *(_BYTE *)(v1 + 15) = -18;
  *(_QWORD *)(v1 + 16) = 0x72656B636950;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  *(_QWORD *)(v1 + v0[7]) = 0;
  v5 = (_QWORD *)(v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *(_BYTE *)(v1 + v0[9]) = 0;
  v6 = (_QWORD *)(v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.playlistPicker.unsafeMutableAddressor()
{
  return sub_C29D18(&qword_14F9D50, (uint64_t)static MetricsEvent.Page.playlistPicker, (uint64_t)sub_C2AF8C);
}

uint64_t static MetricsEvent.Page.playlistPicker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C29D74(&qword_14F9D50, (uint64_t)static MetricsEvent.Page.playlistPicker, (uint64_t)sub_C2AF8C, a1);
}

void MetricsEvent.Page.metricsPageProperties.getter(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v8 = v1[3];
  v18 = v1[2];
  v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_5C238((uint64_t)v1 + v9[6], (uint64_t)v5, &qword_14FAC20);
  v10 = *(uint64_t *)((char *)v1 + v9[7]);
  v11 = (uint64_t *)((char *)v1 + v9[10]);
  v12 = v11[1];
  v19 = *v11;
  v13 = (int *)type metadata accessor for MetricsPageProperties(0);
  v14 = (uint64_t)a1 + v13[6];
  v15 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = v13[7];
  *(_QWORD *)((char *)a1 + v16) = 0;
  v17 = (_QWORD *)((char *)a1 + v13[8]);
  *v17 = 0;
  v17[1] = 0;
  *a1 = v7;
  a1[1] = v6;
  a1[2] = v18;
  a1[3] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_C32E80((uint64_t)v5, v14);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v16));
  *(_QWORD *)((char *)a1 + v16) = v10;
  swift_bridgeObjectRelease(v17[1]);
  *v17 = v19;
  v17[1] = v12;
}

BOOL MetricsEvent.Page.DisplayType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A5B88, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

uint64_t MetricsEvent.Page.DisplayType.rawValue.getter()
{
  return 0x7765695664726163;
}

Swift::Int sub_C2B25C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x7765695664726163, 0xE800000000000000);
  return Hasher._finalize()();
}

uint64_t sub_C2B2AC(uint64_t a1)
{
  return String.hash(into:)(a1, 0x7765695664726163, 0xE800000000000000);
}

Swift::Int sub_C2B2C4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x7765695664726163, 0xE800000000000000);
  return Hasher._finalize()();
}

uint64_t sub_C2B310@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A5BC0, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_C2B360(_QWORD *a1@<X8>)
{
  *a1 = 0x7765695664726163;
  a1[1] = 0xE800000000000000;
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, __int16 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t result;
  _QWORD *v35;

  v28 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(_BYTE *)(a9 + v28[18]) = 0;
  v29 = (_QWORD *)(a9 + v28[19]);
  *v29 = 0;
  v29[1] = 0;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 17) = a4;
  sub_5C090(a5, a9 + v28[7], &qword_14FAC20);
  *(_QWORD *)(a9 + v28[8]) = a6;
  v30 = (_QWORD *)(a9 + v28[9]);
  *v30 = a7;
  v30[1] = a8;
  v31 = a9 + v28[10];
  *(_OWORD *)v31 = a10;
  *(_QWORD *)(v31 + 16) = a11;
  *(_WORD *)(v31 + 24) = a12;
  v32 = (_QWORD *)(a9 + v28[12]);
  *v32 = a13;
  v32[1] = a14;
  v33 = (_QWORD *)(a9 + v28[13]);
  *v33 = a15;
  v33[1] = a16;
  result = sub_5C090(a17, a9 + v28[14], &qword_14FAC20);
  *(_QWORD *)(a9 + v28[15]) = a18;
  *(_BYTE *)(a9 + v28[16]) = a19 & 1;
  *(_QWORD *)(a9 + v28[11]) = a20;
  v35 = (_QWORD *)(a9 + v28[17]);
  *v35 = a21;
  v35[1] = a22;
  return result;
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, unsigned __int16 a12, uint64_t *a13, uint64_t a14)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t result;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a7;
  v44 = a8;
  v38 = a5;
  v36 = a3;
  v37 = a4;
  v42 = a12;
  v40 = a11;
  v41 = a6;
  v39 = a10;
  v45 = a14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v17);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a13[1];
  v21 = a13[2];
  v22 = a13[3];
  v34 = *a13;
  v35 = v21;
  v23 = type metadata accessor for MetricsPageProperties(0);
  sub_5C238((uint64_t)a13 + *(int *)(v23 + 24), (uint64_t)v19, &qword_14FAC20);
  v24 = *(uint64_t *)((char *)a13 + *(int *)(v23 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_5C0DC((uint64_t)a13, type metadata accessor for MetricsPageProperties);
  v25 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(_BYTE *)(a9 + v25[18]) = 0;
  v26 = (_QWORD *)(a9 + v25[19]);
  *v26 = 0;
  v26[1] = 0;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v36;
  *(_BYTE *)(a9 + 17) = v37;
  sub_5C090(v38, a9 + v25[7], &qword_14FAC20);
  *(_QWORD *)(a9 + v25[8]) = v41;
  v27 = (_QWORD *)(a9 + v25[9]);
  v28 = v44;
  *v27 = v43;
  v27[1] = v28;
  v29 = a9 + v25[10];
  *(_OWORD *)v29 = v39;
  *(_QWORD *)(v29 + 16) = v40;
  *(_WORD *)(v29 + 24) = v42;
  v30 = (_QWORD *)(a9 + v25[12]);
  *v30 = v34;
  v30[1] = v20;
  v31 = (_QWORD *)(a9 + v25[13]);
  *v31 = v35;
  v31[1] = v22;
  result = sub_5C090((uint64_t)v19, a9 + v25[14], &qword_14FAC20);
  *(_QWORD *)(a9 + v25[15]) = v24;
  *(_BYTE *)(a9 + v25[16]) = 1;
  *(_QWORD *)(a9 + v25[11]) = v45;
  v33 = (_QWORD *)(a9 + v25[17]);
  *v33 = 0;
  v33[1] = 0;
  return result;
}

uint64_t MetricsEvent.Click.isSharedContent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 72));
}

uint64_t MetricsEvent.Click.isSharedContent.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MetricsEvent.Click(0);
  *(_BYTE *)(v1 + *(int *)(result + 72)) = a1;
  return result;
}

double (*MetricsEvent.Click.isSharedContent.modify())(double)
{
  type metadata accessor for MetricsEvent.Click(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsEvent.Click.dataRecoDataSetId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 76));
  swift_bridgeObjectRetain();
  return v1;
}

void MetricsEvent.Click.dataRecoDataSetId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 76));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*MetricsEvent.Click.dataRecoDataSetId.modify())(double)
{
  type metadata accessor for MetricsEvent.Click(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsEvent.Click.ActionType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C2B878 + 4 * word_109E6F0[a1]))(0x6E6F69746361, 0xE600000000000000);
}

uint64_t sub_C2B878()
{
  return 0x6574617669746361;
}

uint64_t sub_C2B890()
{
  return 6579297;
}

uint64_t sub_C2B8A0()
{
  return 0x62694C6F54646461;
}

uint64_t sub_C2B8C0()
{
  return 0x6575516F54646461;
}

uint64_t sub_C2B8E0()
{
  return 0x7473756A6461;
}

uint64_t sub_C2B8F0()
{
  return 0x616C506E69676562;
}

uint64_t sub_C2B914()
{
  return 0x6C65636E6163;
}

uint64_t sub_C2B924()
{
  return 0x726F62616C6C6F63;
}

uint64_t sub_C2B944()
{
  return 0x657461657263;
}

uint64_t sub_C2B954()
{
  return 0x7453657461657263;
}

unint64_t sub_C2B978()
{
  return 0xD000000000000015;
}

unint64_t sub_C2BB3C()
{
  return 0xD000000000000012;
}

uint64_t sub_C2BB58()
{
  return 0x6F4374726F706572;
}

uint64_t sub_C2BB7C()
{
  return 0x686372616573;
}

uint64_t sub_C2BB8C()
{
  return 0x7463656C6573;
}

uint64_t sub_C2BB9C()
{
  return 0x6572616873;
}

uint64_t sub_C2BBB0()
{
  return 0x694C646572616873;
}

uint64_t sub_C2BBD4()
{
  return 0x72794C6572616873;
}

uint64_t sub_C2BBF4()
{
  return 0x6972794C776F6873;
}

uint64_t sub_C2BC14()
{
  return 0x74696D627573;
}

uint64_t sub_C2BC24()
{
  return 0x656C67676F74;
}

uint64_t sub_C2BC34()
{
  return 0x75626C4177656976;
}

uint64_t sub_C2BC54()
{
  return 0x6974724177656976;
}

uint64_t sub_C2BC74()
{
  return 0x6465724377656976;
}

uint64_t sub_C2BC94()
{
  return 0x79616C5077656976;
}

uint64_t sub_C2BCB4()
{
  return 0x77656976657270;
}

uint64_t sub_C2BCCC()
{
  return 0x6573756170;
}

uint64_t sub_C2BCE0()
{
  return 0x68736572666572;
}

uint64_t sub_C2BCF8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_435C2C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

Swift::Int sub_C2BD04(uint64_t a1, uint64_t a2)
{
  return sub_435CC4(a1, a2, (uint64_t (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

uint64_t sub_C2BD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_435D34(a1, a2, a3, (uint64_t (*)(_QWORD))MetricsEvent.Click.ActionType.rawValue.getter);
}

Swift::Int sub_C2BD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_435D80(a1, a2, a3, (uint64_t (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

uint64_t sub_C2BD28@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore12MetricsEventV5ClickV10ActionTypeO8rawValueAGSgSS_tcfC_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_C2BD54@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = MetricsEvent.Click.ActionType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t MetricsEvent.Click.ActionContext.rawValue.getter(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = 0x6472616F6279656BLL;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      v2 = 0x79726F7473;
      break;
    case 2uLL:
      v2 = 1701998445;
      break;
    case 3uLL:
      v2 = 0x636972796CLL;
      break;
    case 4uLL:
      v2 = 0x6B63617274;
      break;
    case 5uLL:
    case 8uLL:
      v2 = 0xD000000000000010;
      break;
    case 6uLL:
      v2 = 0xD000000000000015;
      break;
    case 7uLL:
      v2 = 0x6E654D6570697773;
      break;
    default:
      v2 = a1;
      break;
  }
  sub_B09C10(a1, a2);
  return v2;
}

uint64_t sub_C2BE94(uint64_t *a1, uint64_t a2)
{
  return _s9MusicCore12MetricsEventV5ClickV13ActionContextO21__derived_enum_equalsySbAG_AGtFZ_0(*a1, a1[1], *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

void MetricsEvent.Click.ActionDetails.dictionary.getter(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  __asm { BR              X10 }
}

unint64_t sub_C2BEEC()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDBD8);
  inited = swift_initStackObject(v1, &v5);
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  strcpy((char *)(inited + 32), "actionSubType");
  *(_WORD *)(inited + 46) = -4864;
  *(_QWORD *)(inited + 48) = MetricsEvent.Click.ActionType.rawValue.getter(v0);
  *(_QWORD *)(inited + 56) = v3;
  return sub_C262C0(inited);
}

uint64_t MetricsEvent.ComponentRender.PreloadStatus.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C2C3E0 + 4 * byte_109E759[a1]))(1819047270, 0xE400000000000000);
}

uint64_t sub_C2C3E0()
{
  return 0x6C616974726170;
}

uint64_t sub_C2C3F8()
{
  return 0x6C6F686563616C70;
}

uint64_t sub_C2C418()
{
  return 0x73756F6976657270;
}

void sub_C2C43C(char *a1)
{
  sub_BB88E4(*a1);
}

void sub_C2C448()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_C2C48C()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6C616974726170, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

void sub_C2C510()
{
  __asm { BR              X10 }
}

uint64_t sub_C2C544(uint64_t a1)
{
  String.hash(into:)(a1, 0x6C616974726170, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_C2C5B4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_C2C5F4()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6C616974726170, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

unint64_t sub_C2C678@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore12MetricsEventV15ComponentRenderV13PreloadStatusO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_C2C6A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_C2C6CC + 4 * byte_109E769[*v0]))();
}

void sub_C2C6CC(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616974726170;
  a1[1] = 0xE700000000000000;
}

void sub_C2C6E8(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6F686563616C70;
  a1[1] = 0xEB00000000726564;
}

void sub_C2C70C(_QWORD *a1@<X8>)
{
  *a1 = 0x73756F6976657270;
  a1[1] = 0xEF6E776F6853796CLL;
}

void GroupActivitiesManager.Activity.Metadata.previewImage.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

void *MetricsEvent.ComponentRender.componentMotionActivationTime.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

void MetricsEvent.ComponentRender.componentMotionActivationTime.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
}

id PlaylistCovers.Cover.Representation.textColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

void MetricsEvent.ComponentRender.componentEndTime.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
}

void MetricsEvent.ComponentRender.componentInterruptTime.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
}

uint64_t MetricsEvent.ComponentRender.preloadStatus.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t MetricsEvent.ComponentRender.preloadStatus.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  return result;
}

id sub_C2C810()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MetricsReportingController()), "init");
  static MetricsReportingController.shared = (uint64_t)result;
  return result;
}

id static MetricsReportingController.shared.getter()
{
  if (qword_14F9D58 != -1)
    swift_once(&qword_14F9D58, sub_C2C810);
  return (id)static MetricsReportingController.shared;
}

void MetricsReportingController.recordPerformanceMetrics(for:)(void *a1)
{
  id v1;
  id v2;
  MusicCore::MetricsEvent::LoadUrl v3;

  if (a1)
  {
    v1 = objc_msgSend(a1, "performanceMetrics");
    if (v1)
    {
      v2 = v1;
      sub_C32F18(v2, (uint64_t)&v3);
      MetricsReportingController.recordLoadUrlEvent(_:)(&v3);
      sub_C33364(&v3);

    }
  }
}

void MetricsReportingController.recordPageEvent(_:pageContext:sharedListeningContext:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  NSString v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSString v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  Class isa;
  NSString v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  id v51;
  double v52;
  NSString v53;
  uint64_t v54;
  id v55;
  NSDictionary v56;
  NSString v57;
  uint64_t *v58;
  uint64_t v59;
  char **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t inited;
  Class v64;
  uint64_t v65;
  uint64_t v66;
  Class v67;
  unint64_t v68;
  char v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  Class v75;
  Class v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  Class v82;
  void *v83;
  void *v84;
  uint64_t v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100[80];
  _QWORD aBlock[7];

  v91 = a5;
  v94 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v9);
  v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter(v16, v17, v18, v19, v20, v21, v22, v23);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v24 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v24 & 1) != 0)
  {
    v25 = objc_msgSend(objc_allocWithZone((Class)SSMetricsPageEvent), "init");
    v90 = a6;
    v92 = v11;
    v26 = v25;
    if (a3)
      v27 = String._bridgeToObjectiveC()();
    else
      v27 = 0;
    objc_msgSend(v25, "setPageContext:", v27, v90);

    v29 = *a1;
    v28 = a1[1];
    v30 = v25;
    swift_bridgeObjectRetain();
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v30, "setProperty:forBodyKey:", v31, v32);

    v34 = a1[2];
    v33 = a1[3];
    v95 = a1;
    v35 = v30;
    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v35, "setPageType:", v36);

    v93 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration;
    v37 = *(void **)&v96[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    if (v37)
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDBE8);
      v39 = swift_allocObject(v38, 96, 7);
      *(_OWORD *)(v39 + 16) = xmmword_105F890;
      *(_QWORD *)(v39 + 32) = v34;
      *(_QWORD *)(v39 + 40) = v33;
      *(_QWORD *)(v39 + 88) = &type metadata for String;
      *(_QWORD *)(v39 + 56) = &type metadata for String;
      *(_QWORD *)(v39 + 64) = v29;
      *(_QWORD *)(v39 + 72) = v28;
      v40 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41 = v37;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v43 = objc_msgSend(v41, "compoundStringWithElements:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      if (v43)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v43);

        v43 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v44 = v35;
      v43 = 0;
    }
    v45 = v95;
    v46 = (uint64_t)v92;
    objc_msgSend(v35, "setPageDescription:", v43);

    v47 = (int *)type metadata accessor for MetricsEvent.Page(0);
    sub_5C238((uint64_t)v45 + v47[6], v46, &qword_14FAC20);
    v48 = type metadata accessor for URL(0);
    v49 = *(_QWORD *)(v48 - 8);
    v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v46, 1, v48);
    v51 = v35;
    if (v50 == 1)
    {
      sub_56024(v46, &qword_14FAC20);
      v53 = 0;
    }
    else
    {
      _s10Foundation3URLV11MusicJSCoreE12JSSerializedSSvg_0();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v46, v48);
      v53 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v52 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v51, "setPageURL:", v53, v52);

    v54 = *(_QWORD *)((char *)v45 + v47[7]);
    v55 = v51;
    if (v54)
    {
      swift_bridgeObjectRetain();
      v56.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v56.super.isa = 0;
    }
    v57 = String._bridgeToObjectiveC()();
    objc_msgSend(v51, "setProperty:forBodyKey:", v56.super.isa, v57);

    swift_unknownObjectRelease(v56.super.isa);
    v58 = (_QWORD *)((char *)v45 + v47[8]);
    v59 = v58[1];
    v60 = &selRef_isAirPlayingToDevice;
    if (v59)
    {
      v61 = *v58;
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
      inited = swift_initStackObject(v62, &v97);
      *(_OWORD *)(inited + 16) = xmmword_105B360;
      *(_QWORD *)(inited + 32) = 0x6554686372616573;
      *(_QWORD *)(inited + 40) = 0xEA00000000006D72;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 48) = v61;
      *(_QWORD *)(inited + 56) = v59;
      v60 = &selRef_isAirPlayingToDevice;
      swift_bridgeObjectRetain();
      sub_C263E0(inited);
      v64 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v51, "addPropertiesWithDictionary:", v64, swift_bridgeObjectRelease().n128_f64[0]);

    }
    if ((*((_BYTE *)v45 + v47[9]) & 1) == 0)
    {
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
      v66 = swift_initStackObject(v65, &v98);
      *(_OWORD *)(v66 + 16) = xmmword_105B360;
      *(_QWORD *)(v66 + 32) = 0x7073694465676170;
      *(_QWORD *)(v66 + 40) = 0xEF6570795479616CLL;
      *(_QWORD *)(v66 + 72) = &type metadata for String;
      *(_QWORD *)(v66 + 48) = 0x7765695664726163;
      *(_QWORD *)(v66 + 56) = 0xE800000000000000;
      sub_C263E0(v66);
      v67 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v51, v60[102], v67, swift_bridgeObjectRelease().n128_f64[0]);

    }
    if (v54)
    {
      if (*(_QWORD *)(v54 + 16))
      {
        v68 = sub_21BAD0(0x4974655361746164, 0xE900000000000064);
        if ((v69 & 1) != 0)
        {
          v70 = (uint64_t *)(*(_QWORD *)(v54 + 56) + 16 * v68);
          v72 = *v70;
          v71 = v70[1];
          v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
          v74 = swift_initStackObject(v73, &v99);
          *(_OWORD *)(v74 + 16) = xmmword_105B360;
          *(_QWORD *)(v74 + 32) = 0x4974655361746164;
          *(_QWORD *)(v74 + 40) = 0xE900000000000064;
          *(_QWORD *)(v74 + 72) = &type metadata for String;
          *(_QWORD *)(v74 + 48) = v72;
          *(_QWORD *)(v74 + 56) = v71;
          v45 = v95;
          swift_bridgeObjectRetain();
          sub_C263E0(v74);
          v75 = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v51, "addPropertiesWithDictionary:", v75, swift_bridgeObjectRelease().n128_f64[0]);

        }
      }
    }
    if (v94 != 2 && sub_C32D00(v94 & 1, v91, v90))
    {
      v76 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v51, "addPropertiesWithDictionary:", v76, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v77 = (_QWORD *)((char *)v45 + v47[10]);
    v78 = v77[1];
    if (v78)
    {
      v79 = *v77;
      v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
      v81 = swift_initStackObject(v80, v100);
      *(_OWORD *)(v81 + 16) = xmmword_105B360;
      *(_QWORD *)(v81 + 32) = 0x7255666552747865;
      *(_QWORD *)(v81 + 40) = 0xE90000000000006CLL;
      *(_QWORD *)(v81 + 72) = &type metadata for String;
      *(_QWORD *)(v81 + 48) = v79;
      *(_QWORD *)(v81 + 56) = v78;
      swift_bridgeObjectRetain();
      sub_C263E0(v81);
      v82 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v51, "addPropertiesWithDictionary:", v82, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v83 = v96;
    v84 = *(void **)&v96[v93];
    v85 = swift_allocObject(&unk_13AF5B0, 32, 7);
    *(_QWORD *)(v85 + 16) = v83;
    *(_QWORD *)(v85 + 24) = v51;
    aBlock[4] = sub_C33418;
    aBlock[5] = v85;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_42D124;
    aBlock[3] = &block_descriptor_290;
    v86 = _Block_copy(aBlock);
    v87 = v84;
    v88 = v83;
    v89 = v51;
    objc_msgSend(v89, "setStandardPropertiesWith:completionHandler:", v87, v86, swift_release().n128_f64[0]);
    _Block_release(v86);

  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordImpressionsEvent(_:with:pageContext:sharedListeningContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  id v29;
  NSString v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  NSString v33;
  NSString v34;
  double v35;
  NSString v36;
  uint64_t v37;
  uint64_t inited;
  Class isa;
  Class v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD aBlock[6];
  char v54[88];

  v51 = a5;
  v49 = a6;
  v50 = a7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDBF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v48 - v14;
  v16 = type metadata accessor for DispatchPredicate(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (uint64_t *)((char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  *v19 = static OS_dispatch_queue.main.getter(v20, v21, v22, v23, v24, v25, v26, v27);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  v28 = _dispatchPreconditionTest(_:)(v19);
  (*(void (**)(uint64_t *, uint64_t))(v17 + 8))(v19, v16);
  if ((v28 & 1) != 0)
  {
    v29 = objc_msgSend(objc_allocWithZone((Class)SSMetricsBaseEvent), "init");
    if (a4)
      v30 = String._bridgeToObjectiveC()();
    else
      v30 = 0;
    objc_msgSend(v29, "setPageContext:", v30);

    sub_5C238(a2, (uint64_t)v15, &qword_14FDBF0);
    v31 = type metadata accessor for MetricsPageProperties(0);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48);
    if (v32(v15, 1, v31) == 1)
    {
      sub_56024((uint64_t)v15, &qword_14FDBF0);
      v33 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_5C0DC((uint64_t)v15, type metadata accessor for MetricsPageProperties);
      v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    v34 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setProperty:forBodyKey:", v33, v34);
    swift_unknownObjectRelease(v33);

    sub_5C238(a2, (uint64_t)v12, &qword_14FDBF0);
    if (v32(v12, 1, v31) == 1)
    {
      sub_56024((uint64_t)v12, &qword_14FDBF0);
      v36 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_5C0DC((uint64_t)v12, type metadata accessor for MetricsPageProperties);
      v36 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v35 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v29, "setPageType:", v36, v35);

    objc_msgSend(v29, "setEventType:", SSMetricsEventTypeImpressions);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
    inited = swift_initStackObject(v37, v54);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = 0x6973736572706D69;
    *(_QWORD *)(inited + 40) = 0xEB00000000736E6FLL;
    *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDBF8);
    *(_QWORD *)(inited + 48) = a1;
    swift_bridgeObjectRetain();
    sub_C263E0(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v29, "addPropertiesWithDictionary:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    if (v51 != 2)
    {
      if (sub_C32D00(v51 & 1, v49, v50))
      {
        v40 = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v29, "addPropertiesWithDictionary:", v40, swift_bridgeObjectRelease().n128_f64[0]);

      }
    }
    v41 = v52;
    v42 = *(void **)&v52[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    v43 = swift_allocObject(&unk_13AF600, 32, 7);
    *(_QWORD *)(v43 + 16) = v41;
    *(_QWORD *)(v43 + 24) = v29;
    aBlock[4] = sub_C33458;
    aBlock[5] = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_42D124;
    aBlock[3] = &block_descriptor_6_19;
    v44 = _Block_copy(aBlock);
    v45 = v42;
    v46 = v41;
    v47 = v29;
    objc_msgSend(v47, "setStandardPropertiesWith:completionHandler:", v45, v44, swift_release().n128_f64[0]);
    _Block_release(v44);

  }
  else
  {
    __break(1u);
  }
}

double sub_C2D664(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v8;
  id v9;
  id v10;
  double result;

  sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v8 = swift_allocObject(a3, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = a1;
  v10 = a2;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(a4, v8);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void MetricsReportingController.recordSearchEvent(_:pageContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  id v24;
  NSString v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  NSString v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  NSString v37;
  NSString v38;
  NSString v39;
  id v40;
  uint64_t *v41;
  unint64_t v42;
  id v43;
  NSString v44;
  id v45;
  NSString v46;
  id v47;
  NSDictionary v48;
  id v49;
  NSString v50;
  id v51;
  NSString v52;
  id v53;
  NSString v54;
  id v55;
  NSArray v56;
  id v57;
  NSString v58;
  NSString v59;
  void *v60;
  uint64_t v61;
  void *v62;
  id v63;
  char *v64;
  id v65;
  _QWORD aBlock[6];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v7);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (_QWORD *)((char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  *v13 = static OS_dispatch_queue.main.getter(v14, v15, v16, v17, v18, v19, v20, v21);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v22 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v22 & 1) != 0)
  {
    v23 = objc_msgSend(objc_allocWithZone((Class)SSMetricsSearchEvent), "init");
    v24 = v23;
    if (a3)
      v25 = String._bridgeToObjectiveC()();
    else
      v25 = 0;
    objc_msgSend(v23, "setPageContext:", v25);

    v26 = (int *)type metadata accessor for MetricsEvent.Click(0);
    v27 = 0;
    v28 = a1 + v26[10];
    v29 = *(unsigned __int16 *)(v28 + 24);
    if (v29 >> 8 <= 0xFE)
    {
      MetricsEvent.Click.ActionDetails.dictionary.getter(*(_QWORD *)v28, *(_QWORD *)(v28 + 8), *(_QWORD *)(v28 + 16), v29);
      if (v30)
      {
        aBlock[0] = v30;
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDC00);
        v27 = _bridgeAnythingToObjectiveC<A>(_:)(aBlock, v31);
        sub_56024((uint64_t)aBlock, &qword_14FDC00);
      }
      else
      {
        v27 = 0;
      }
    }
    objc_msgSend(v23, "setActionDetails:", v27);
    swift_unknownObjectRelease(v27);
    MetricsEvent.Click.ActionType.rawValue.getter(*(_BYTE *)(a1 + 17));
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setActionType:", v32, swift_bridgeObjectRelease().n128_f64[0]);

    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setTargetIdentifier:", v33);

    sub_5C238(a1 + v26[7], (uint64_t)v9, &qword_14FAC20);
    v34 = type metadata accessor for URL(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v9, 1, v34) == 1)
    {
      sub_56024((uint64_t)v9, &qword_14FAC20);
      v37 = 0;
    }
    else
    {
      _s10Foundation3URLV11MusicJSCoreE12JSSerializedSSvg_0();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v34);
      v37 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v36 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v23, "setTargetURL:", v37, v36);

    MetricsEvent.TargetType.rawValue.getter(*(_BYTE *)(a1 + 16));
    v38 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setTargetType:", v38, swift_bridgeObjectRelease().n128_f64[0]);

    v39 = *(NSString *)(a1 + v26[13] + 8);
    v40 = v23;
    if (v39)
      v39 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setPageType:", v39);

    v41 = (uint64_t *)(a1 + v26[9]);
    v42 = v41[1];
    if (v42 == 9)
    {
      v43 = v23;
      v44 = 0;
    }
    else
    {
      MetricsEvent.Click.ActionContext.rawValue.getter(*v41, v42);
      v45 = v23;
      v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    v46 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v44, v46);

    swift_unknownObjectRelease(v44);
    if (*(_QWORD *)(a1 + v26[15]))
    {
      v47 = v23;
      swift_bridgeObjectRetain();
      v48.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v49 = v23;
      v48.super.isa = 0;
    }
    v50 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v48.super.isa, v50);

    swift_unknownObjectRelease(v48.super.isa);
    if (*(_QWORD *)(a1 + v26[12] + 8))
    {
      v51 = v23;
      swift_bridgeObjectRetain();
      v52 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      v53 = v23;
      v52 = 0;
    }
    v54 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v52, v54);

    swift_unknownObjectRelease(v52);
    if (*(_QWORD *)(a1 + v26[8]))
    {
      v55 = v23;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500A90);
      v56.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v57 = v23;
      v56.super.isa = 0;
    }
    v58 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v56.super.isa, v58);

    swift_unknownObjectRelease(v56.super.isa);
    if (*(_QWORD *)(a1 + v26[17] + 8))
      v59 = String._bridgeToObjectiveC()();
    else
      v59 = 0;
    objc_msgSend(v23, "setSearchTerm:", v59);

    v60 = *(void **)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    v61 = swift_allocObject(&unk_13AF650, 32, 7);
    *(_QWORD *)(v61 + 16) = v4;
    *(_QWORD *)(v61 + 24) = v23;
    aBlock[4] = sub_C33480;
    aBlock[5] = v61;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_42D124;
    aBlock[3] = &block_descriptor_12_15;
    v62 = _Block_copy(aBlock);
    v63 = v60;
    v64 = v4;
    v65 = v23;
    objc_msgSend(v65, "setStandardPropertiesWith:completionHandler:", v63, v62, swift_release().n128_f64[0]);
    _Block_release(v62);

  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordClickEvent(_:pageContext:sharedListeningContext:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  NSString v29;
  NSString v30;
  NSString v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  double v36;
  NSString v37;
  id v38;
  NSArray v39;
  id v40;
  NSString v41;
  uint64_t *v42;
  unint64_t v43;
  id v44;
  NSString v45;
  id v46;
  NSString v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  Class isa;
  uint64_t v55;
  uint64_t inited;
  Class v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  Class v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Class v69;
  Class v70;
  NSString v71;
  id v72;
  id v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  NSString v78;
  NSString v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  NSString v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  Class v91;
  NSString v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  id v97;
  double v98;
  NSString v99;
  id v100;
  NSDictionary v101;
  id v102;
  NSString v103;
  uint64_t v104;
  uint64_t v105;
  Class v106;
  void *v107;
  void *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  id v112;
  id v113;
  id v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(char *, uint64_t, uint64_t);
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127[80];
  _QWORD aBlock[5];
  uint64_t v129;

  v122 = a3;
  v116 = a5;
  v117 = a6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v9);
  v11 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v115 - v13;
  v15 = type metadata accessor for DispatchPredicate(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  *v18 = static OS_dispatch_queue.main.getter(v19, v20, v21, v22, v23, v24, v25, v26);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  v27 = _dispatchPreconditionTest(_:)(v18);
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if ((v27 & 1) != 0)
  {
    v118 = a2;
    v28 = objc_msgSend(objc_allocWithZone((Class)SSMetricsClickEvent), "init");
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setTargetIdentifier:", v29);

    MetricsEvent.TargetType.rawValue.getter(*(_BYTE *)(a1 + 16));
    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setTargetType:", v30, swift_bridgeObjectRelease().n128_f64[0]);

    MetricsEvent.Click.ActionType.rawValue.getter(*(_BYTE *)(a1 + 17));
    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setActionType:", v31, swift_bridgeObjectRelease().n128_f64[0]);

    v32 = (int *)type metadata accessor for MetricsEvent.Click(0);
    sub_5C238(a1 + v32[7], (uint64_t)v14, &qword_14FAC20);
    v33 = type metadata accessor for URL(0);
    v34 = *(_QWORD *)(v33 - 8);
    v119 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v35 = v119(v14, 1, v33);
    v120 = v33;
    v115 = v34;
    if (v35 == 1)
    {
      sub_56024((uint64_t)v14, &qword_14FAC20);
      v37 = 0;
    }
    else
    {
      _s10Foundation3URLV11MusicJSCoreE12JSSerializedSSvg_0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v33);
      v37 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v36 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v28, "setTargetURL:", v37, v36, v115);

    if (*(_QWORD *)(a1 + v32[8]))
    {
      v38 = v28;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500A90);
      v39.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v40 = v28;
      v39.super.isa = 0;
    }
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setProperty:forBodyKey:", v39.super.isa, v41);

    swift_unknownObjectRelease(v39.super.isa);
    v42 = (uint64_t *)(a1 + v32[9]);
    v43 = v42[1];
    if (v43 == 9)
    {
      v44 = v28;
      v45 = 0;
    }
    else
    {
      MetricsEvent.Click.ActionContext.rawValue.getter(*v42, v43);
      v46 = v28;
      v45 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    v47 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setProperty:forBodyKey:", v45, v47);

    swift_unknownObjectRelease(v45);
    v48 = a1 + v32[10];
    v49 = *(unsigned __int16 *)(v48 + 24);
    if (v49 >> 8 <= 0xFE
      && (MetricsEvent.Click.ActionDetails.dictionary.getter(*(_QWORD *)v48, *(_QWORD *)(v48 + 8), *(_QWORD *)(v48 + 16), v49), v50))
    {
      aBlock[0] = v50;
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDC00);
      v52 = _bridgeAnythingToObjectiveC<A>(_:)(aBlock, v51);
      sub_56024((uint64_t)aBlock, &qword_14FDC00);
    }
    else
    {
      v52 = 0;
    }
    objc_msgSend(v28, "setActionDetails:", v52);
    *(_QWORD *)&v53 = swift_unknownObjectRelease(v52).n128_u64[0];
    isa = *(Class *)(a1 + v32[11]);
    v121 = v11;
    if (isa)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE260);
      isa = Array._bridgeToObjectiveC()().super.isa;
    }
    objc_msgSend(v28, "setImpressions:", isa, v53);
    swift_unknownObjectRelease(isa);
    if (*(_BYTE *)(a1 + v32[18]) == 1)
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
      inited = swift_initStackObject(v55, &v124);
      *(_OWORD *)(inited + 16) = xmmword_105B360;
      strcpy((char *)(inited + 32), "sharedContent");
      *(_WORD *)(inited + 46) = -4864;
      *(_QWORD *)(inited + 72) = &type metadata for Bool;
      *(_BYTE *)(inited + 48) = 1;
      sub_C263E0(inited);
      v57 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v28, "addPropertiesWithDictionary:", v57, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v58 = (uint64_t *)(a1 + v32[19]);
    v59 = v58[1];
    if (v59)
    {
      v60 = *v58;
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
      v62 = swift_initStackObject(v61, &v125);
      *(_OWORD *)(v62 + 16) = xmmword_105B360;
      *(_QWORD *)(v62 + 32) = 0xD000000000000013;
      *(_QWORD *)(v62 + 40) = 0x80000000010E6E40;
      *(_QWORD *)(v62 + 72) = &type metadata for String;
      *(_QWORD *)(v62 + 48) = v60;
      *(_QWORD *)(v62 + 56) = v59;
      swift_bridgeObjectRetain();
      sub_C263E0(v62);
      v63 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v28, "addPropertiesWithDictionary:", v63, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v64 = (uint64_t *)(a1 + v32[17]);
    v65 = v64[1];
    if (v65)
    {
      v66 = *v64;
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
      v68 = swift_initStackObject(v67, &v126);
      *(_OWORD *)(v68 + 16) = xmmword_105B360;
      *(_QWORD *)(v68 + 32) = 0x6554686372616573;
      *(_QWORD *)(v68 + 40) = 0xEA00000000006D72;
      *(_QWORD *)(v68 + 72) = &type metadata for String;
      *(_QWORD *)(v68 + 48) = v66;
      *(_QWORD *)(v68 + 56) = v65;
      swift_bridgeObjectRetain();
      sub_C263E0(v68);
      v69 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v28, "addPropertiesWithDictionary:", v69, swift_bridgeObjectRelease().n128_f64[0]);

    }
    if (a4 != 2 && sub_C32D00(a4 & 1, v116, v117))
    {
      v70 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v28, "addPropertiesWithDictionary:", v70, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v71 = (NSString)v122;
    if (v122)
    {
      v72 = v28;
      v71 = String._bridgeToObjectiveC()();
    }
    else
    {
      v73 = v28;
    }
    objc_msgSend(v28, "setPageContext:", v71);

    v74 = (uint64_t *)(a1 + v32[12]);
    v76 = *v74;
    v75 = v74[1];
    if (v75)
    {
      v77 = v28;
      swift_bridgeObjectRetain();
      v78 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v79 = String._bridgeToObjectiveC()();
      objc_msgSend(v77, "setProperty:forBodyKey:", v78, v79);

    }
    v80 = (uint64_t *)(a1 + v32[13]);
    v81 = *v80;
    v82 = v80[1];
    if (v82)
    {
      v83 = v28;
      v84 = String._bridgeToObjectiveC()();
      objc_msgSend(v83, "setPageType:", v84);

    }
    v122 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration;
    v85 = *(void **)&v123[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    if (v85)
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDBE8);
      v87 = swift_allocObject(v86, 96, 7);
      *(_OWORD *)(v87 + 16) = xmmword_105F890;
      v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC108);
      *(_QWORD *)(v87 + 32) = v81;
      *(_QWORD *)(v87 + 40) = v82;
      *(_QWORD *)(v87 + 88) = v88;
      *(_QWORD *)(v87 + 56) = v88;
      *(_QWORD *)(v87 + 64) = v76;
      *(_QWORD *)(v87 + 72) = v75;
      swift_bridgeObjectRetain();
      v89 = v28;
      swift_bridgeObjectRetain();
      v90 = v85;
      v91 = Array._bridgeToObjectiveC()().super.isa;
      v92 = objc_msgSend(v90, "compoundStringWithElements:", v91, swift_bridgeObjectRelease().n128_f64[0]);

      if (v92)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v92);

        v92 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v93 = v28;
      v92 = 0;
    }
    v95 = v120;
    v94 = (uint64_t)v121;
    objc_msgSend(v28, "setPageDescription:", v92);

    sub_5C238(a1 + v32[14], v94, &qword_14FAC20);
    v96 = v119((char *)v94, 1, v95);
    v97 = v28;
    if (v96 == 1)
    {
      sub_56024(v94, &qword_14FAC20);
      v99 = 0;
    }
    else
    {
      _s10Foundation3URLV11MusicJSCoreE12JSSerializedSSvg_0();
      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v94, v95);
      v99 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v98 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v97, "setPageURL:", v99, v98);

    if (*(_QWORD *)(a1 + v32[15]))
    {
      v100 = v97;
      swift_bridgeObjectRetain();
      v101.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v102 = v97;
      v101.super.isa = 0;
    }
    v103 = String._bridgeToObjectiveC()();
    objc_msgSend(v97, "setProperty:forBodyKey:", v101.super.isa, v103);

    swift_unknownObjectRelease(v101.super.isa);
    if ((*(_BYTE *)(a1 + v32[16]) & 1) == 0)
    {
      v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
      v105 = swift_initStackObject(v104, v127);
      *(_OWORD *)(v105 + 16) = xmmword_105B360;
      *(_QWORD *)(v105 + 32) = 0x7073694465676170;
      *(_QWORD *)(v105 + 40) = 0xEF6570795479616CLL;
      *(_QWORD *)(v105 + 72) = &type metadata for String;
      *(_QWORD *)(v105 + 48) = 0x7765695664726163;
      *(_QWORD *)(v105 + 56) = 0xE800000000000000;
      sub_C263E0(v105);
      v106 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v97, "addPropertiesWithDictionary:", v106, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v107 = v123;
    v108 = *(void **)&v123[v122];
    v109 = swift_allocObject(&unk_13AF6A0, 32, 7);
    *(_QWORD *)(v109 + 16) = v107;
    *(_QWORD *)(v109 + 24) = v97;
    aBlock[4] = sub_C334A8;
    v129 = v109;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_42D124;
    aBlock[3] = &block_descriptor_18_8;
    v110 = _Block_copy(aBlock);
    v111 = v129;
    v112 = v108;
    v113 = v107;
    v114 = v97;
    objc_msgSend(v114, "setStandardPropertiesWith:completionHandler:", v112, v110, swift_release(v111).n128_f64[0]);
    _Block_release(v110);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MetricsReportingController.recordLoadUrlEvent(_:)(MusicCore::MetricsEvent::LoadUrl *a1)
{
  char *v1;
  id v3;
  _BOOL8 cachedResponse;
  id v5;
  id v6;
  NSString v7;
  NSString v8;
  NSString v9;
  NSString v10;
  NSString v11;
  NSString v12;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v15;
  uint64_t inited;
  unint64_t v17;
  Class isa;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  char *v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;
  _BYTE v29[16];
  _BYTE v30[16];
  _BYTE v31[16];
  _BYTE v32[16];
  _BYTE v33[16];
  _BYTE v34[16];
  _BYTE v35[16];
  _BYTE v36[16];
  _BYTE v37[16];
  _BYTE v38[16];
  _BYTE v39[16];
  _BYTE v40[16];
  _BYTE v41[16];
  _BYTE v42[16];
  _BYTE v43[16];
  _BYTE v44[16];
  double v45;
  char v46;
  double v47;
  char v48;
  double v49;
  char v50;
  double v51;
  char v52;
  double v53;
  char v54;
  double v55;
  char v56;
  double v57;
  char v58;
  double v59;
  char v60;
  double v61;
  char v62;
  _QWORD v63[2];
  uint64_t v64;
  char v65;
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];

  v3 = objc_msgSend(objc_allocWithZone((Class)SSMetricsLoadURLEvent), "init");
  cachedResponse = a1->cachedResponse;
  objc_msgSend(v3, "setCachedResponse:", cachedResponse);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = objc_msgSend(v5, "bundleIdentifier");

  objc_msgSend(v3, "setOriginalApp:", v6);
  sub_5C090((uint64_t)a1, (uint64_t)v44, &qword_14FDC08);
  sub_5C090((uint64_t)v44, (uint64_t)&v45, &qword_14FDC08);
  if ((v46 & 1) == 0)
    objc_msgSend(v3, "setDomainLookupStartTime:", v45);
  sub_5C090((uint64_t)&a1->domainLookupEndTime, (uint64_t)v43, &qword_14FDC08);
  sub_5C090((uint64_t)v43, (uint64_t)&v47, &qword_14FDC08);
  if ((v48 & 1) == 0)
    objc_msgSend(v3, "setDomainLookupEndTime:", v47);
  sub_5C090((uint64_t)&a1->connectionStartTime, (uint64_t)v42, &qword_14FDC08);
  sub_5C090((uint64_t)v42, (uint64_t)&v49, &qword_14FDC08);
  if ((v50 & 1) == 0)
    objc_msgSend(v3, "setConnectionStartTime:", v49);
  sub_5C090((uint64_t)&a1->secureConnectionStartTime, (uint64_t)v41, &qword_14FDC08);
  sub_5C090((uint64_t)v41, (uint64_t)&v51, &qword_14FDC08);
  if ((v52 & 1) == 0)
    objc_msgSend(v3, "setSecureConnectionStartTime:", v51);
  sub_5C090((uint64_t)&a1->connectionEndTime, (uint64_t)v40, &qword_14FDC08);
  sub_5C090((uint64_t)v40, (uint64_t)&v53, &qword_14FDC08);
  if ((v54 & 1) == 0)
    objc_msgSend(v3, "setConnectionEndTime:", v53);
  sub_5C090((uint64_t)&a1->requestStartTime, (uint64_t)v39, &qword_14FDC08);
  sub_5C090((uint64_t)v39, (uint64_t)&v55, &qword_14FDC08);
  if ((v56 & 1) == 0)
    objc_msgSend(v3, "setRequestStartTime:", v55);
  sub_5C090((uint64_t)&a1->responseStartTime, (uint64_t)v38, &qword_14FDC08);
  sub_5C090((uint64_t)v38, (uint64_t)&v57, &qword_14FDC08);
  if ((v58 & 1) == 0)
    objc_msgSend(v3, "setResponseStartTime:", v57);
  sub_5C090((uint64_t)&a1->responseEndTime, (uint64_t)v37, &qword_14FDC08);
  sub_5C090((uint64_t)v37, (uint64_t)&v59, &qword_14FDC08);
  if ((v60 & 1) == 0)
    objc_msgSend(v3, "setResponseEndTime:", v59);
  sub_5C090((uint64_t)&a1->fetchStartTime, (uint64_t)v36, &qword_14FDC08);
  sub_5C090((uint64_t)v36, (uint64_t)&v61, &qword_14FDC08);
  if ((v62 & 1) == 0)
    objc_msgSend(v3, "setFetchStartTime:", v61);
  sub_5C090((uint64_t)&a1->requestUrl, (uint64_t)v35, &qword_14FC108);
  sub_5C090((uint64_t)v35, (uint64_t)v63, &qword_14FC108);
  if (v63[1])
  {
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setRequestURL:", v7);

  }
  sub_5C090((uint64_t)&a1->redirectCount, (uint64_t)v34, &qword_14FDC10);
  sub_5C090((uint64_t)v34, (uint64_t)&v64, &qword_14FDC10);
  if ((v65 & 1) == 0)
  {
    if (v64 < 0)
      goto LABEL_41;
    objc_msgSend(v3, "setRedirectCount:");
  }
  sub_5C090((uint64_t)&a1->appleTimingApp, (uint64_t)v33, &qword_14FC108);
  sub_5C090((uint64_t)v33, (uint64_t)v66, &qword_14FC108);
  if (v66[1])
  {
    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setAppleTimingApp:", v8);

  }
  sub_5C090((uint64_t)&a1->connectionType, (uint64_t)v32, &qword_14FC108);
  sub_5C090((uint64_t)v32, (uint64_t)v67, &qword_14FC108);
  if (v67[1])
  {
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setConnectionType:", v9);

  }
  sub_5C090((uint64_t)&a1->edgeNodeCacheStatus, (uint64_t)v31, &qword_14FC108);
  sub_5C090((uint64_t)v31, (uint64_t)v68, &qword_14FC108);
  if (v68[1])
  {
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setEdgeNodeCacheStatus:", v10);

  }
  sub_5C090((uint64_t)&a1->responseDate, (uint64_t)v30, &qword_14FC108);
  sub_5C090((uint64_t)v30, (uint64_t)v69, &qword_14FC108);
  if (v69[1])
  {
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setResponseDate:", v11);

  }
  sub_5C090((uint64_t)&a1->resolvedIPAddress, (uint64_t)v29, &qword_14FC108);
  sub_5C090((uint64_t)v29, (uint64_t)v70, &qword_14FC108);
  if (v70[1])
  {
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setResolvedIPAddress:", v12);

  }
  object = a1->environmentDataCenter.value._object;
  if (object)
  {
    countAndFlagsBits = a1->environmentDataCenter.value._countAndFlagsBits;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
    inited = swift_initStackObject(v15, &v26);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = 0xD000000000000015;
    *(_QWORD *)(inited + 40) = 0x8000000001103FA0;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = countAndFlagsBits;
    *(_QWORD *)(inited + 56) = object;
    swift_bridgeObjectRetain();
    v17 = sub_C263E0(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v3, "addPropertiesWithDictionary:", isa);

  }
  objc_msgSend(v3, "setCachedResponse:", cachedResponse);
  objc_msgSend(v3, "setConnectionReused:", a1->connectionReused);
  objc_msgSend(v3, "setStatusCode:", a1->statusCode);
  if (a1->requestMessageSize < 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v3, "setRequestMessageSize:");
    if ((a1->responseMessageSize & 0x8000000000000000) == 0)
    {
      objc_msgSend(v3, "setResponseMessageSize:");
      v19 = *(void **)&v1[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
      v20 = swift_allocObject(&unk_13AF6F0, 32, 7);
      *(_QWORD *)(v20 + 16) = v3;
      *(_QWORD *)(v20 + 24) = v1;
      aBlock[4] = sub_C334D0;
      v28 = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_42D124;
      aBlock[3] = &block_descriptor_24_7;
      v21 = _Block_copy(aBlock);
      v22 = v28;
      v23 = v19;
      v24 = v3;
      v25 = v1;
      objc_msgSend(v24, "setStandardPropertiesWith:completionHandler:", v23, v21, swift_release(v22).n128_f64[0]);
      _Block_release(v21);

      return;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_C2F07C(void *a1)
{
  if (sub_C37640())
    sub_C31E00(a1, (uint64_t)UIScreen.Dimensions.size.getter, 0);
}

void MetricsReportingController.recordComponentRenderEvent(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  NSString v16;
  NSString v17;
  NSString v18;
  NSString v19;
  id v20;
  NSString v21;
  id v22;
  NSString v23;
  id v24;
  NSString v25;
  id v26;
  NSString v27;
  id v28;
  NSString v29;
  id v30;
  NSString v31;
  uint64_t v32;
  char v33;
  char v34;
  unsigned __int8 v35;
  char v36;

  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v6, v7, v8, v9, v10, v11, v12, v13);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v14 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v14 & 1) != 0)
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Music_SSMetricsComponentRenderEvent()), "init");
    if (*(_QWORD *)(a1 + 8))
    {
      swift_bridgeObjectRetain();
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = 0;
    }
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v16, v17);
    swift_unknownObjectRelease(v16);

    sub_5C090(a1 + 16, (uint64_t)&v34, &qword_14FDC18);
    sub_5C090((uint64_t)&v34, (uint64_t)&v35, &qword_14FDC18);
    if (v35 == 24)
    {
      v18 = 0;
    }
    else
    {
      MetricsEvent.TargetType.rawValue.getter(v35);
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v18, v19);
    swift_unknownObjectRelease(v18);

    v20 = *(id *)(a1 + 24);
    v21 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v20, v21);

    v22 = *(id *)(a1 + 32);
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v22, v23);

    v24 = *(id *)(a1 + 40);
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v24, v25);

    v26 = *(id *)(a1 + 48);
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v26, v27);

    v28 = *(id *)(a1 + 56);
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v28, v29);

    v30 = *(id *)(a1 + 64);
    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v30, v31);

    sub_5C090(a1 + 72, (uint64_t)&v33, &qword_14FDC20);
    sub_5C090((uint64_t)&v33, (uint64_t)&v36, &qword_14FDC20);
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0xC2F62CLL);
}

void MetricsReportingController.recordPageRenderEvent<A>(_:pageContext:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  void *v24;
  char v25;
  id v26;
  uint64_t v27;
  double v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  NSString v33;
  uint64_t v34;
  id v35;
  id v36;
  NSString v37;
  uint64_t v38;
  id v39;
  id v40;
  NSString v41;
  uint64_t v42;
  id v43;
  id v44;
  NSString v45;
  uint64_t v46;
  id v47;
  id v48;
  NSString v49;
  uint64_t v50;
  id v51;
  id v52;
  NSString v53;
  uint64_t v54;
  id v55;
  id v56;
  NSString v57;
  double v58;
  id v59;
  id v60;
  uint64_t v61;
  NSString v62;
  double v63;
  id v64;
  id v65;
  uint64_t v66;
  NSString v67;
  NSString v68;
  double v69;
  id v70;
  id v71;
  uint64_t v72;
  NSString v73;
  unsigned __int8 v74;
  NSString v75;
  uint64_t v76;
  NSString v77;
  id *v78;
  id v79;
  uint64_t v80;
  NSString v81;
  id v82;
  uint64_t v83;
  NSString v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  id v92;
  NSString v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  NSString v98;
  uint64_t v99;
  NSString v100;
  void *v101;
  void *v102;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void *v113;
  char *v114;
  uint64_t v115;
  id v116;
  _QWORD v117[3];
  _QWORD v118[3];
  _QWORD v119[3];
  _QWORD v120[3];
  _QWORD v121[3];
  _QWORD v122[3];
  char v123[24];
  char v124[32];

  v4 = v3;
  v111 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v7);
  v9 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  *v13 = static OS_dispatch_queue.main.getter(v14, v15, v16, v17, v18, v19, v20, v21, v110, v111, v112, v113, v114, v115, v116);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v22 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v22 & 1) != 0)
  {
    v112 = v9;
    v114 = v4;
    v23 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Music_SSMetricsPageRenderEvent()), "init");
    swift_beginAccess(a1 + 16, v124, 0, 0);
    v24 = *(void **)(a1 + 16);
    swift_beginAccess(a1 + 24, v123, 0, 0);
    v25 = *(_BYTE *)(a1 + 32);
    v113 = a3;
    if ((v25 & 1) != 0)
    {
      v26 = v24;
      v27 = 0;
    }
    else
    {
      v28 = *(double *)(a1 + 24);
      v29 = (void *)objc_opt_self(AMSMetrics);
      v30 = v24;
      v31 = objc_msgSend(v29, "serverTimeFromTimeInterval:", v28);
      v32 = objc_msgSend(v31, "unsignedLongLongValue");

      v122[0] = v32;
      v27 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v122, &type metadata for UInt64);
    }
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v27, v33);
    swift_unknownObjectRelease(v27);

    swift_beginAccess(a1 + 40, v122, 0, 0);
    v34 = 0;
    if ((*(_BYTE *)(a1 + 48) & 1) == 0)
    {
      v35 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 40));
      v36 = objc_msgSend(v35, "unsignedLongLongValue");

      v121[0] = v36;
      v34 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v121, &type metadata for UInt64);
    }
    v37 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v34, v37);
    swift_unknownObjectRelease(v34);

    swift_beginAccess(a1 + 56, v121, 0, 0);
    v38 = 0;
    if ((*(_BYTE *)(a1 + 64) & 1) == 0)
    {
      v39 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 56));
      v40 = objc_msgSend(v39, "unsignedLongLongValue");

      v120[0] = v40;
      v38 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v120, &type metadata for UInt64);
    }
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v38, v41);
    swift_unknownObjectRelease(v38);

    swift_beginAccess(a1 + 72, v120, 0, 0);
    v42 = 0;
    if ((*(_BYTE *)(a1 + 80) & 1) == 0)
    {
      v43 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 72));
      v44 = objc_msgSend(v43, "unsignedLongLongValue");

      v119[0] = v44;
      v42 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v119, &type metadata for UInt64);
    }
    v45 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v42, v45);
    swift_unknownObjectRelease(v42);

    swift_beginAccess(a1 + 88, v119, 0, 0);
    v46 = 0;
    if ((*(_BYTE *)(a1 + 96) & 1) == 0)
    {
      v47 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 88));
      v48 = objc_msgSend(v47, "unsignedLongLongValue");

      v118[0] = v48;
      v46 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v118, &type metadata for UInt64);
    }
    v49 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v46, v49);
    swift_unknownObjectRelease(v46);

    swift_beginAccess(a1 + 104, v118, 0, 0);
    v50 = 0;
    if ((*(_BYTE *)(a1 + 112) & 1) == 0)
    {
      v51 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 104));
      v52 = objc_msgSend(v51, "unsignedLongLongValue");

      v117[0] = v52;
      v50 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v117, &type metadata for UInt64);
    }
    v53 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v50, v53);
    swift_unknownObjectRelease(v50);

    swift_beginAccess(a1 + 120, v117, 0, 0);
    v54 = 0;
    if ((*(_BYTE *)(a1 + 128) & 1) == 0)
    {
      v55 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 120));
      v56 = objc_msgSend(v55, "unsignedLongLongValue");

      v115 = (uint64_t)v56;
      v54 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v115, &type metadata for UInt64);
    }
    v57 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v54, v57);
    swift_unknownObjectRelease(v54);

    if (v24)
    {
      objc_msgSend(v24, "requestStartTime");
      v59 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", v58);
      v60 = objc_msgSend(v59, "unsignedLongLongValue");

      v115 = (uint64_t)v60;
      v61 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v115, &type metadata for UInt64);
      v62 = String._bridgeToObjectiveC()();
      objc_msgSend(v23, "setProperty:forBodyKey:", v61, v62);
      swift_unknownObjectRelease(v61);

      objc_msgSend(v24, "responseStartTime");
      v64 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", v63);
      v65 = objc_msgSend(v64, "unsignedLongLongValue");

      v115 = (uint64_t)v65;
      v66 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v115, &type metadata for UInt64);
    }
    else
    {
      v67 = String._bridgeToObjectiveC()();
      objc_msgSend(v23, "setProperty:forBodyKey:", 0, v67);

      v66 = 0;
    }
    v68 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v66, v68);
    swift_unknownObjectRelease(v66);

    if (v24)
    {
      objc_msgSend(v24, "responseEndTime");
      v70 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", v69);
      v71 = objc_msgSend(v70, "unsignedLongLongValue");

      v115 = (uint64_t)v71;
      v72 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v115, &type metadata for UInt64);
      v73 = String._bridgeToObjectiveC()();
      objc_msgSend(v23, "setProperty:forBodyKey:", v72, v73);
      swift_unknownObjectRelease(v72);

      v74 = objc_msgSend(v24, "cachedResponse");
    }
    else
    {
      v75 = String._bridgeToObjectiveC()();
      objc_msgSend(v23, "setProperty:forBodyKey:", 0, v75);

      v74 = 0;
    }
    LOBYTE(v115) = v74;
    v76 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v115, &type metadata for Bool);
    v77 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v76, v77);
    swift_unknownObjectRelease(v76);

    v78 = (id *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 160));
    v79 = v78[1];
    v115 = (uint64_t)*v78;
    v116 = v79;
    swift_bridgeObjectRetain_n(v79, 2);
    v80 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v115, &type metadata for String);
    v81 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v80, v81);
    swift_bridgeObjectRelease(v79);
    swift_unknownObjectRelease(v80);

    v82 = v78[3];
    v115 = (uint64_t)v78[2];
    v116 = v82;
    swift_bridgeObjectRetain_n(v82, 2);
    v83 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v115, &type metadata for String);
    v84 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v83, v84);
    swift_bridgeObjectRelease(v82);
    swift_unknownObjectRelease(v83);

    v85 = type metadata accessor for MetricsPageProperties(0);
    v86 = (uint64_t)v112;
    sub_5C238((uint64_t)v78 + *(int *)(v85 + 24), (uint64_t)v112, &qword_14FAC20);
    v87 = type metadata accessor for URL(0);
    v88 = *(_QWORD *)(v87 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87) == 1)
    {
      sub_56024(v86, &qword_14FAC20);
      v89 = 0;
      v90 = 0;
    }
    else
    {
      v91 = _s10Foundation3URLV11MusicJSCoreE12JSSerializedSSvg_0();
      v90 = v92;
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v86, v87);
      v115 = v91;
      v116 = v90;
      swift_bridgeObjectRetain();
      v89 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v115, &type metadata for String);
    }
    v93 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v89, v93);
    swift_bridgeObjectRelease(v90);
    swift_unknownObjectRelease(v89);

    v94 = *(uint64_t *)((char *)v78 + *(int *)(v85 + 28));
    if (v94)
    {
      v115 = *(uint64_t *)((char *)v78 + *(int *)(v85 + 28));
      swift_bridgeObjectRetain_n(v94, 2);
      v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDC00);
      v96 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v115, v95);
    }
    else
    {
      v96 = 0;
    }
    v97 = v113;
    v98 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v96, v98);
    swift_bridgeObjectRelease(v94);
    swift_unknownObjectRelease(v96);

    if (v97)
    {
      v115 = v111;
      v116 = v97;
      swift_bridgeObjectRetain_n(v97, 2);
      v99 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v115, &type metadata for String);
    }
    else
    {
      v99 = 0;
    }
    v100 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v99, v100);
    swift_bridgeObjectRelease(v97);
    swift_unknownObjectRelease(v99);

    v101 = v114;
    v102 = *(void **)&v114[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    v103 = swift_allocObject(&unk_13AF790, 32, 7);
    *(_QWORD *)(v103 + 16) = v101;
    *(_QWORD *)(v103 + 24) = v23;
    v104 = v102;
    v105 = v23;
    v106 = v104;
    v107 = v105;
    swift_retain(v103);
    v108 = v101;
    v109 = v107;
    sub_C3A0AC(v102, v109, v109, (uint64_t)v102, (uint64_t)sub_C33520, v103);

    swift_release_n(v103, 2);
  }
  else
  {
    __break(1u);
  }
}

void sub_C30394(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(void *))
{
  if ((a4(a2) & 1) != 0)
    sub_C31E00(a2, (uint64_t)UIScreen.Dimensions.size.getter, 0);
}

void MetricsReportingController.recordCustomEvent(with:properties:sharedListeningContext:shouldSuppressUserInfo:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  NSString v26;
  Class isa;
  Class v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v31 = a6;
  v30 = a5;
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter(v16, v17, v18, v19, v20, v21, v22, v23);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v24 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v24 & 1) != 0)
  {
    v25 = objc_msgSend(objc_allocWithZone((Class)SSMetricsCustomEvent), "init");
    v26 = String._bridgeToObjectiveC()();
    objc_msgSend(v25, "setTopic:", v26);

    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v25, "addPropertiesWithDictionary:", isa);

    objc_msgSend(v25, "setShouldSuppressUserInfo:", a7 & 1);
    objc_msgSend(v25, "setShouldSuppressDSIDHeader:", a7 & 1);
    if (a4 != 2)
    {
      if (sub_C32D00(a4 & 1, v30, v31))
      {
        v28 = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v25, "addPropertiesWithDictionary:", v28, swift_bridgeObjectRelease().n128_f64[0]);

      }
    }
    sub_C31E00(v25, a8, a9);

  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordCarPlayCustomEvent(with:properties:shouldSuppressUserInfo:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  void *v26;
  Class isa;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Class v34;
  void *v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD aBlock[6];
  char v51[88];

  v48 = a2;
  v46 = a1;
  v47 = a5;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter(v16, v17, v18, v19, v20, v21, v22, v23);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v24 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v24 & 1) != 0)
  {
    v25 = objc_msgSend(objc_allocWithZone((Class)SSMetricsCustomEvent), "init");
    v45 = a6;
    v26 = v25;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v26, "addPropertiesWithDictionary:", isa);

    objc_msgSend(v26, "setShouldSuppressUserInfo:", a4 & 1);
    objc_msgSend(v26, "setShouldSuppressDSIDHeader:", a4 & 1);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
    inited = swift_initStackObject(v28, v51);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    strcpy((char *)(inited + 32), "clientEventId");
    *(_WORD *)(inited + 46) = -4864;
    v30 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v31 = UUID.uuidString.getter(v30);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = v31;
    *(_QWORD *)(inited + 56) = v33;
    sub_C263E0(inited);
    v34 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v26, "addPropertiesWithDictionary:", v34, swift_bridgeObjectRelease().n128_f64[0]);

    v35 = v49;
    v36 = *(void **)&v49[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    v37 = (_QWORD *)swift_allocObject(&unk_13AF7B8, 64, 7);
    v39 = v45;
    v38 = v46;
    v37[2] = v26;
    v37[3] = v38;
    v40 = v47;
    v37[4] = v48;
    v37[5] = v35;
    v37[6] = v40;
    v37[7] = v39;
    aBlock[4] = sub_C33680;
    aBlock[5] = v37;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_42D124;
    aBlock[3] = &block_descriptor_39_9;
    v41 = _Block_copy(aBlock);
    v42 = v36;
    v43 = v26;
    swift_bridgeObjectRetain();
    v44 = v35;
    swift_retain();
    objc_msgSend(v43, "setStandardPropertiesWith:completionHandler:", v42, v41, swift_release().n128_f64[0]);
    _Block_release(v41);

  }
  else
  {
    __break(1u);
  }
}

void sub_C3095C(void *a1, char *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21[6];

  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setTopic:", v12);

  if (qword_14F9CB0 != -1)
    swift_once(&qword_14F9CB0, sub_C25370);
  v13 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v13, (uint64_t)static Logger.carMetrics);
  v14 = swift_bridgeObjectRetain_n(a3, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v21[0] = v18;
    *(_DWORD *)v17 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v17 + 4) = sub_BA95EC(a2, a3, v21);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl(&dword_0, v15, v16, "Inserting carPlay custom event with topic=%{public}s in metrics controller", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  v19 = *(void **)(a4 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController);
  v21[4] = a5;
  v21[5] = a6;
  v21[0] = (uint64_t)_NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = (uint64_t)sub_153944;
  v21[3] = (uint64_t)&block_descriptor_63_7;
  v20 = _Block_copy(v21);
  swift_retain();
  objc_msgSend(v19, "insertEvent:withCompletionHandler:", a1, v20, swift_release().n128_f64[0]);
  _Block_release(v20);
}

Swift::Void __swiftcall MetricsReportingController.reportEventForLocalEvaluation(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  Class isa;
  uint64_t v16;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  *v4 = static OS_dispatch_queue.main.getter(v5, v6, v7, v8, v9, v10, v11, v12);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v13 = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
  if ((v13 & 1) != 0)
  {
    v14 = objc_msgSend(objc_allocWithZone((Class)SSMetricsCustomEvent), "init");
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v14, "addPropertiesWithDictionary:", isa);

  }
  else
  {
    __break(1u);
  }
}

uint64_t MetricsReportingController.flushUnreportedEvents()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch(sub_C30CD4, 0, 0);
}

uint64_t sub_C30CD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_14F9D60 != -1)
    swift_once(&qword_14F9D60, sub_C3CE98);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)qword_1582050);
  v0[16] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "[MetricsReportingController] Attempting to flush unreported events", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = v0 + 2;
  v7 = v0[15];

  v8 = *(void **)(v7 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
  v0[2] = v0;
  v0[3] = sub_C30E24;
  v9 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v10 = v0 + 10;
  v10[1] = 0x40000000;
  v10[2] = sub_C31018;
  v10[3] = &block_descriptor_40_5;
  v10[4] = v9;
  objc_msgSend(v8, "flushUnreportedEventsWithCompletionHandler:", v10);
  return swift_continuation_await(v6);
}

uint64_t sub_C30E24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 136) = v1;
  if (v1)
    v2 = sub_C30E8C;
  else
    v2 = sub_C30E84;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_C30E84()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C30E8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v2 = *(_QWORD *)(v1 + 136);
  swift_willThrow(a1);
  swift_errorRetain(v2);
  v3 = swift_errorRetain(v2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v1 + 136);
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v14 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v1 + 80) = v6;
    swift_errorRetain(v6);
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v10 = (char *)String.init<A>(describing:)(v1 + 80, v9);
    *(_QWORD *)(v7 + 4) = sub_BA95EC(v10, v11, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl(&dword_0, v4, v5, "[MetricsReportingController] Failed to flush unreported events with error=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v6);
  }
  else
  {
    v12 = *(_QWORD *)(v1 + 136);
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    swift_errorRelease(v12);

  }
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_C31018(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 32);
  if (!a2)
    return swift_continuation_throwingResume(*(_QWORD *)(a1 + 32));
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0, 0);
  *v6 = a2;
  v7 = a2;
  return swift_continuation_throwingResumeWithError(v2, v5);
}

uint64_t sub_C3108C()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  _OWORD v6[2];
  __int128 v7;
  __int128 v8;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration);
  if (!v1)
  {
    v7 = 0u;
    v8 = 0u;
LABEL_11:
    sub_56024((uint64_t)&v7, &qword_14FF2A0);
    return 0;
  }
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "valueForConfigurationKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v6, v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_5C090((uint64_t)v6, (uint64_t)&v7, &qword_14FF2A0);
  if (!*((_QWORD *)&v8 + 1))
    goto LABEL_11;
  if (swift_dynamicCast(v6, &v7, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
    return *(_QWORD *)&v6[0];
  else
    return 0;
}

char *sub_C311BC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString *v26;
  uint64_t v27;
  objc_super v29;

  v1 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_componentRenderEventSampler;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FA6F8);
  v3 = swift_allocObject(v2, 24, 7);
  v4 = (void *)objc_opt_self(NSUserDefaults);
  v5 = v0;
  *(_QWORD *)(v3 + 16) = objc_msgSend(v4, "standardUserDefaults");
  *(_QWORD *)&v0[v1] = v3;
  v6 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageRenderEventSampler;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FA700);
  v8 = swift_allocObject(v7, 24, 7);
  *(_QWORD *)(v8 + 16) = objc_msgSend(v4, "standardUserDefaults");
  *(_QWORD *)&v5[v6] = v8;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration] = 0;
  v9 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController;
  *(_QWORD *)&v5[v9] = objc_msgSend(objc_allocWithZone((Class)SSMetricsController), "init");
  v10 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController;
  *(_QWORD *)&v5[v10] = objc_msgSend(objc_allocWithZone((Class)SSMetricsController), "init");
  v11 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carMetricsReporter;
  v12 = type metadata accessor for CarNowPlayingMetrics.Reporter();
  *(_QWORD *)&v5[v11] = swift_allocObject(v12, 16, 7);
  *(_QWORD *)&v5[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_backgroundObserver] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_urlBagObserver] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageHistory] = _swiftEmptyArrayStorage;

  v29.receiver = v5;
  v29.super_class = (Class)type metadata accessor for MetricsReportingController();
  v13 = objc_msgSendSuper2(&v29, "init");
  v14 = qword_14F9E30;
  v15 = (char *)v13;
  if (v14 != -1)
    swift_once(&qword_14F9E30, sub_C4F36C);
  v16 = static BagProvider.shared;
  v17 = swift_allocObject(&unk_13AFDA0, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  v18 = type metadata accessor for BagProvider.Observer();
  v19 = swift_allocObject(v18, 40, 7);
  v20 = swift_weakInit(v19 + 16);
  *(_QWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 32) = 0;
  swift_weakAssign(v20, v16);
  v21 = *(_QWORD *)(v19 + 24);
  v22 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v19 + 24) = sub_C36720;
  *(_QWORD *)(v19 + 32) = v17;
  swift_retain_n(v17, 3);
  v23 = sub_5C198(v21, v22);
  __chkstk_darwin(v23);
  UnfairLock.locked<A>(_:)(sub_C36728);
  sub_C4F74C(0);
  swift_release();
  swift_release_n(v17, 2);
  *(_QWORD *)&v15[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_urlBagObserver] = v19;
  swift_release();
  v24 = swift_allocObject(&unk_13AFDA0, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  v25 = type metadata accessor for NotificationObserver();
  swift_allocObject(v25, 64, 7);
  v26 = UISceneDidEnterBackgroundNotification;
  swift_retain();
  v27 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v26, 0, 1, 1, (uint64_t)sub_C36744, v24);
  swift_release();

  *(_QWORD *)&v15[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_backgroundObserver] = v27;
  swift_release();
  return v15;
}

double sub_C315A8(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  double result;

  sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v4 = swift_allocObject(&unk_13AFE18, 32, 7);
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain();
  v5 = a1;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_C368D4, v4);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_C3162C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_C31A4C(a2);

  }
}

uint64_t sub_C31684(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *Strong;
  _QWORD *v15;
  _BYTE v18[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_14F9D60 != -1)
    swift_once(&qword_14F9D60, sub_C3CE98);
  v6 = type metadata accessor for Logger(0);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1582050);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = a2 + 16;
  static TaskPriority.low.getter();
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 0, 1, v12);
  v13 = swift_allocObject(&unk_13AFDA0, 24, 7);
  swift_beginAccess(v11, v18, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
  swift_unknownObjectWeakInit(v13 + 16);

  v15 = (_QWORD *)swift_allocObject(&unk_13AFDF0, 40, 7);
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v13;
  sub_BBDAAC((uint64_t)v5, (uint64_t)&unk_14FDE30, (uint64_t)v15);
  swift_release();
  return sub_56024((uint64_t)v5, (uint64_t *)&unk_1500E30);
}

uint64_t sub_C3185C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 88) = a4;
  return swift_task_switch(sub_C31874, 0, 0);
}

uint64_t sub_C31874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    swift_retain();

    sub_C245A4(0);
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v4, v0 + 40, 0, 0);
  v5 = swift_unknownObjectWeakLoadStrong(v4);
  if (v5)
  {
    v6 = (void *)v5;
    swift_retain();

    sub_C245A4(1);
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v7, v0 + 64, 0, 0);
  v8 = swift_unknownObjectWeakLoadStrong(v7);
  *(_QWORD *)(v0 + 96) = v8;
  if (!v8)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v9 = v8;
  v10 = (_QWORD *)swift_task_alloc(dword_14FDC2C);
  *(_QWORD *)(v0 + 104) = v10;
  *v10 = v0;
  v10[1] = sub_C319E0;
  v10[15] = v9;
  return swift_task_switch(sub_C30CD4, 0, 0);
}

uint64_t sub_C319E0()
{
  uint64_t *v0;
  void *v1;
  uint64_t v3;

  v1 = *(void **)(*v0 + 96);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));

  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_C31A4C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char isUniquelyReferenced_nonNull_native;
  int v26;
  id v27;
  Class isa;
  id v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  _QWORD v34[2];
  __int128 v35;
  __int128 v36;
  _BYTE v37[40];
  _OWORD v38[2];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_QWORD *)((char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v8, v9, v10, v11, v12, v13, v14, v15);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v16 = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v17 = objc_msgSend(a1, "dictionaryForBagKey:", SSMetricsURLBagKey);
  if (v17)
  {
    v18 = v17;
    v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    if (!*(_QWORD *)(v19 + 16))
    {
      swift_bridgeObjectRelease();
      return;
    }
    v20 = objc_msgSend(a1, "dictionaryForBagKey:", SSVURLBagKeyMusicCommon);
    if (v20)
    {
      v21 = v20;
      v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      *(_QWORD *)&v35 = 0xD000000000000023;
      *((_QWORD *)&v35 + 1) = 0x8000000001104280;
      AnyHashable.init<A>(_:)(&v35, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v22 + 16) && (v23 = sub_21BFA0((uint64_t)v37), (v24 & 1) != 0))
      {
        sub_95094(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v35);
      }
      else
      {
        v35 = 0u;
        v36 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_55E40((uint64_t)v37);
      if (*((_QWORD *)&v36 + 1))
      {
        sub_50CA4(&v35, v38);
        strcpy((char *)&v35, "postFrequency");
        HIWORD(v35) = -4864;
        AnyHashable.init<A>(_:)(&v35, &type metadata for String, &protocol witness table for String);
        sub_95094((uint64_t)v38, (uint64_t)&v35);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
        v34[1] = v19;
        sub_C27504(&v35, (uint64_t)v37, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        sub_55E40((uint64_t)v37);
        __swift_destroy_boxed_opaque_existential_1(v38);
        v26 = 1;
        goto LABEL_14;
      }
      sub_56024((uint64_t)&v35, &qword_14FF2A0);
    }
    v26 = 0;
LABEL_14:
    v27 = objc_allocWithZone((Class)SSMetricsConfiguration);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v29 = objc_msgSend(v27, "initWithGlobalConfiguration:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    if (v29)
    {
      v30 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration) = v29;
      v31 = v29;

      objc_msgSend(v31, "setDisableEventDecoration:", objc_msgSend(v31, "_decorateITMLEvents") ^ 1);
      v32 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
      objc_msgSend(v32, "setGlobalConfiguration:", v31);
      objc_msgSend(v32, "setFlushTimerEnabled:", 1);
      if (v26)
      {
        v33 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController);
        objc_msgSend(v33, "setGlobalConfiguration:", v31);
        objc_msgSend(v33, "setFlushTimerEnabled:", 1);
      }

    }
  }
}

void sub_C31E00(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  Class isa;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void **aBlock;
  uint64_t v39;
  void (*v40)(uint64_t, void *);
  void *v41;
  uint64_t (*v42)();
  uint64_t v43;
  char v44[80];

  v4 = v3;
  v37 = a2;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  *v14 = static OS_dispatch_queue.main.getter(v15, v16, v17, v18, v19, v20, v21, v22, v36, v37, aBlock, v39, v40, v41, v42);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v23 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v23 & 1) != 0)
  {
    sub_C3209C(a1);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
    inited = swift_initStackObject(v24, v44);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    strcpy((char *)(inited + 32), "clientEventId");
    *(_WORD *)(inited + 46) = -4864;
    v26 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v27 = UUID.uuidString.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = v27;
    *(_QWORD *)(inited + 56) = v29;
    v30 = sub_C263E0(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v30);
    objc_msgSend(a1, "addPropertiesWithDictionary:", isa);

    v32 = *(void **)(v4 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
    v33 = swift_allocObject(&unk_13AFE68, 32, 7);
    *(_QWORD *)(v33 + 16) = v37;
    *(_QWORD *)(v33 + 24) = a3;
    v42 = sub_129E54;
    v43 = v33;
    aBlock = _NSConcreteStackBlock;
    v39 = 1107296256;
    v40 = sub_153944;
    v41 = &block_descriptor_69_5;
    v34 = _Block_copy(&aBlock);
    v35 = v43;
    swift_retain(a3);
    objc_msgSend(v32, "insertEvent:withCompletionHandler:", a1, v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_C3209C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class isa;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;

  v2 = v1;
  v4 = objc_msgSend(a1, "eventType");
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(SSMetricsEventTypePage);
    v11 = v15;
    return swift_bridgeObjectRelease(v11);
  }
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v8 = v7;

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(SSMetricsEventTypePage);
  v11 = v10;
  if (!v8)
    return swift_bridgeObjectRelease(v11);
  if (v6 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n(v8, 2);
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
    swift_bridgeObjectRelease(v8);
    result = swift_bridgeObjectRelease(v11);
    if ((v13 & 1) == 0)
      return result;
  }
  v16 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageHistory;
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageHistory);
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setProperty:forBodyKey:", isa, v19);

  result = sub_C37784();
  if (v20)
  {
    v21 = result;
    v22 = v20;
    v23 = *(_QWORD *)(v2 + v16);
    if (*(_QWORD *)(v23 + 16) >= 5uLL)
    {
      swift_bridgeObjectRetain();
      v24 = sub_C322BC(4, v23);
      v25 = *(_QWORD *)(v2 + v16);
      *(_QWORD *)(v2 + v16) = v24;
      swift_bridgeObjectRelease(v25);
      v23 = *(_QWORD *)(v2 + v16);
    }
    result = swift_isUniquelyReferenced_nonNull_native(v23);
    *(_QWORD *)(v2 + v16) = v23;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_BCC9AC(0, *(_QWORD *)(v23 + 16) + 1, 1, (char *)v23);
      v23 = result;
      *(_QWORD *)(v2 + v16) = result;
    }
    v26 = *(_QWORD *)(v23 + 16);
    v27 = *(_QWORD *)(v23 + 24);
    v28 = v26 + 1;
    if (v26 >= v27 >> 1)
    {
      v30 = (char *)v23;
      v31 = *(_QWORD *)(v23 + 16);
      result = (uint64_t)sub_BCC9AC((char *)(v27 > 1), v26 + 1, 1, v30);
      v26 = v31;
      v23 = result;
      *(_QWORD *)(v2 + v16) = result;
    }
    *(_QWORD *)(v23 + 16) = v28;
    v29 = v23 + 16 * v26;
    *(_QWORD *)(v29 + 32) = v21;
    *(_QWORD *)(v29 + 40) = v22;
  }
  return result;
}

uint64_t sub_C322BC(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  unint64_t v15;
  _QWORD *v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;

  if (result < 0)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v3 = result;
  if (!result)
  {
    swift_bridgeObjectRelease(a2);
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  if (*(_QWORD *)(a2 + 16) >= result)
    v4 = result;
  else
    v4 = *(_QWORD *)(a2 + 16);
  sub_C058BC(0, v4, 0);
  v5 = *(_QWORD *)(a2 + 16);
  if (!v5)
    goto LABEL_31;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = 0;
  v8 = -v5;
  v20 = v5;
  do
  {
LABEL_8:
    if (v7 >= *(_QWORD *)(a2 + 16))
      goto LABEL_39;
    v9 = (uint64_t *)(a2 + 32 + 16 * v7);
    v11 = *v9;
    v10 = v9[1];
    v12 = _swiftEmptyArrayStorage[2];
    if ((uint64_t)v12 < v3)
    {
      ++v7;
LABEL_22:
      v15 = _swiftEmptyArrayStorage[3];
      v21 = v12 + 1;
      result = swift_bridgeObjectRetain();
      if (v12 >= v15 >> 1)
        result = (uint64_t)sub_C058BC((char *)(v15 > 1), v21, 1);
      _swiftEmptyArrayStorage[2] = v21;
      v16 = &_swiftEmptyArrayStorage[2 * v12];
      v16[4] = v11;
      v16[5] = v10;
    }
    else
    {
      result = swift_bridgeObjectRetain();
      if (v6 >= v12)
        goto LABEL_40;
      v13 = &_swiftEmptyArrayStorage[2 * v6 + 4];
      result = swift_bridgeObjectRelease(v13[1]);
      *v13 = v11;
      v13[1] = v10;
      if ((uint64_t)++v6 >= v3)
      {
        if (v7 + 1 == v20)
        {
LABEL_30:
          swift_bridgeObjectRelease(a2);
          goto LABEL_31;
        }
        v14 = (uint64_t *)(a2 + 56 + 16 * v7);
        v7 += 2;
        while (v7 - 1 < *(_QWORD *)(a2 + 16))
        {
          v11 = *(v14 - 1);
          v10 = *v14;
          v12 = _swiftEmptyArrayStorage[2];
          if ((uint64_t)v12 < v3)
          {
            v6 = 0;
            goto LABEL_22;
          }
          swift_bridgeObjectRetain();
          result = swift_bridgeObjectRelease(_swiftEmptyArrayStorage[5]);
          _swiftEmptyArrayStorage[4] = v11;
          _swiftEmptyArrayStorage[5] = v10;
          if (v3 > 1)
          {
            v6 = 1;
            if (v8 + v7)
              goto LABEL_8;
            swift_bridgeObjectRelease(a2);
            v6 = 1;
            goto LABEL_34;
          }
          ++v7;
          v14 += 2;
          if (v8 + v7 == 1)
            goto LABEL_30;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      ++v7;
    }
  }
  while (v7 != v20);
  swift_bridgeObjectRelease(a2);
  if (!v6)
  {
LABEL_31:
    swift_bridgeObjectRelease(a2);
    return (uint64_t)_swiftEmptyArrayStorage;
  }
LABEL_34:
  v17 = _swiftEmptyArrayStorage[2];
  result = (uint64_t)sub_C058BC(0, v17, 0);
  if (v17 < (uint64_t)v6)
    goto LABEL_42;
  if ((v6 & 0x8000000000000000) == 0)
  {
    v18 = _swiftEmptyArrayStorage[2];
    if (v18 >= v6 && v18 >= v17)
    {
      v19 = swift_retain(_swiftEmptyArrayStorage);
      sub_C33548(v19, (uint64_t)&_swiftEmptyArrayStorage[4], v6, (2 * v17) | 1);
      swift_bridgeObjectRelease(a2);
      swift_release(_swiftEmptyArrayStorage);
      sub_C33548((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage[4], 0, (2 * v6) | 1);
      swift_release(_swiftEmptyArrayStorage);
      return (uint64_t)_swiftEmptyArrayStorage;
    }
    goto LABEL_44;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

id MetricsReportingController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MetricsReportingController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_C32690()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD v6[2];
  _OWORD v7[2];

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "propertyForBodyKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v6, v2);
    swift_unknownObjectRelease(v2);
    sub_50CA4(v6, v7);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF2A0);
  v4 = sub_4E684(0, &qword_14FDE48, NSNumber_ptr);
  if (swift_dynamicCast(v6, v7, v3, v4, 6))
    return *(_QWORD *)&v6[0];
  else
    return 0;
}

unint64_t sub_C32760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_C367E8(&qword_1501830, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_C328D0(a1, v7);
}

unint64_t sub_C327C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_C32A08(a1, v4);
}

unint64_t sub_C327F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  Hasher.init(_seed:)(v7);
  String.hash(into:)(v7, v2, v4);
  v5 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_21DDE4(a1, v5);
}

unint64_t sub_C32874(unsigned __int8 a1)
{
  Swift::Int v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(a1 + 1);
  v2 = Hasher._finalize()();
  return sub_21E7DC(a1, v2);
}

unint64_t sub_C328D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v19 = a1;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7.n128_f64[0] = __chkstk_darwin(v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      v15 = sub_C367E8(&qword_14FDE38, (uint64_t)&protocol conformance descriptor for UUID);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v19, v5, v15);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_C32A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_4E684(0, &qword_14FDA78, MPCPlayerPath_ptr);
    v7 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v8 = static NSObject.== infix(_:_:)(v7, a1);

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = static NSObject.== infix(_:_:)(v10, a1);

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV13ActionContextO21__derived_enum_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  switch(a2)
  {
    case 0:
      if (a4)
        goto LABEL_24;
      result = 1;
      break;
    case 1:
      if (a4 != 1)
        goto LABEL_24;
      result = 1;
      break;
    case 2:
      if (a4 != 2)
        goto LABEL_24;
      result = 1;
      break;
    case 3:
      if (a4 != 3)
        goto LABEL_24;
      result = 1;
      break;
    case 4:
      if (a4 != 4)
        goto LABEL_24;
      result = 1;
      break;
    case 5:
      if (a4 != 5)
        goto LABEL_24;
      result = 1;
      break;
    case 6:
      if (a4 != 6)
        goto LABEL_24;
      result = 1;
      break;
    case 7:
      if (a4 != 7)
        goto LABEL_24;
      result = 1;
      break;
    case 8:
      if (a4 != 8)
        goto LABEL_24;
      result = 1;
      break;
    default:
      if (a4 < 9)
      {
LABEL_24:
        result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        result = 1;
      }
      else
      {
        result = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0);
      }
      break;
  }
  return result;
}

uint64_t sub_C32BFC(unint64_t a1)
{
  if (a1 <= 1)
    return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  if (a1 - 5 > 0xFFFFFFFFFFFFFFFCLL)
    return 3419442;
  if (a1 - 8 > 0xFFFFFFFFFFFFFFFCLL)
    return 3616053;
  if (a1 - 11 > 0xFFFFFFFFFFFFFFFCLL)
    return 808529208;
  if (a1 - 16 > 0xFFFFFFFFFFFFFFFALL)
    return 0x35312D3131;
  if (a1 - 21 > 0xFFFFFFFFFFFFFFFALL)
    return 0x30322D3631;
  if (a1 - 26 >= 0xFFFFFFFFFFFFFFFBLL)
    return 0x35322D3132;
  return 2831922;
}

unint64_t sub_C32D00(char a1, unint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[80];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
  if ((a1 & 1) != 0)
  {
    inited = swift_initStackObject(v6, &v12);
    *(_OWORD *)(inited + 16) = xmmword_1060460;
    strcpy((char *)(inited + 32), "sharedActivity");
    *(_BYTE *)(inited + 47) = -18;
    *(_BYTE *)(inited + 48) = 1;
    *(_QWORD *)(inited + 72) = &type metadata for Bool;
    *(_QWORD *)(inited + 80) = 0xD00000000000001CLL;
    *(_QWORD *)(inited + 88) = 0x8000000001104300;
    *(_QWORD *)(inited + 96) = sub_C32BFC(a2);
    *(_QWORD *)(inited + 104) = v8;
    *(_QWORD *)(inited + 120) = &type metadata for String;
    *(_QWORD *)(inited + 128) = 0xD000000000000018;
    *(_QWORD *)(inited + 136) = 0x8000000001103E80;
    v9 = sub_C32BFC(a3);
    *(_QWORD *)(inited + 168) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v9;
    *(_QWORD *)(inited + 152) = v10;
  }
  else
  {
    inited = swift_initStackObject(v6, v13);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    strcpy((char *)(inited + 32), "sharedActivity");
    *(_BYTE *)(inited + 47) = -18;
    *(_QWORD *)(inited + 72) = &type metadata for Bool;
    *(_BYTE *)(inited + 48) = 0;
  }
  return sub_C263E0(inited);
}

uint64_t _s9MusicCore12MetricsEventV10TargetTypeO8rawValueAESgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_13A5928, a1, a2, &unk_14FA6A0);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x18)
    return 24;
  else
    return v3;
}

uint64_t sub_C32E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV10ActionTypeO8rawValueAGSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_13A5BF8, a1, a2, &unk_14FA6B0);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x30)
    return 48;
  else
    return v3;
}

double sub_C32F18@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double result;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  unsigned __int8 v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  double v70;

  objc_msgSend(a1, "domainLookupStartTime");
  v70 = v4;
  objc_msgSend(a1, "domainLookupEndTime");
  v6 = v5;
  objc_msgSend(a1, "connectionStartTime");
  v8 = v7;
  objc_msgSend(a1, "secureConnectionStartTime");
  v10 = v9;
  objc_msgSend(a1, "connectionEndTime");
  v12 = v11;
  objc_msgSend(a1, "requestStartTime");
  v14 = v13;
  objc_msgSend(a1, "responseStartTime");
  v16 = v15;
  objc_msgSend(a1, "responseEndTime");
  v18 = v17;
  objc_msgSend(a1, "fetchStartTime");
  v20 = v19;
  v69 = objc_msgSend(a1, "redirectCount");
  v21 = objc_msgSend(a1, "requestUrl");
  if (v21)
  {
    v22 = v21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v67 = v24;
    v68 = v23;

  }
  else
  {
    v67 = 0;
    v68 = 0;
  }
  v66 = objc_msgSend(a1, "cachedResponse");
  v65 = objc_msgSend(a1, "connectionReused");
  v25 = objc_msgSend(a1, "appleTimingApp");
  if (v25)
  {
    v26 = v25;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v63 = v28;
    v64 = v27;

  }
  else
  {
    v63 = 0;
    v64 = 0;
  }
  v29 = objc_msgSend(a1, "connectionType");
  if (v29)
  {
    v30 = v29;
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v61 = v32;
    v62 = v31;

  }
  else
  {
    v61 = 0;
    v62 = 0;
  }
  v33 = objc_msgSend(a1, "edgeNodeCacheStatus");
  if (v33)
  {
    v34 = v33;
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v59 = v36;
    v60 = v35;

  }
  else
  {
    v59 = 0;
    v60 = 0;
  }
  v37 = objc_msgSend(a1, "environmentDataCenter");
  if (v37)
  {
    v38 = v37;
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v55 = v40;
    v57 = v39;

  }
  else
  {
    v55 = 0;
    v57 = 0;
  }
  v41 = objc_msgSend(a1, "responseDate", v55, v57);
  if (v41)
  {
    v42 = v41;
    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v45 = v44;

  }
  else
  {
    v43 = 0;
    v45 = 0;
  }
  v46 = objc_msgSend(a1, "statusCode");
  v47 = objc_msgSend(a1, "requestMessageSize");
  v48 = objc_msgSend(a1, "responseMessageSize");
  v49 = objc_msgSend(a1, "resolvedIPAddress");
  if (v49)
  {
    v50 = v49;
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v53 = v52;

  }
  else
  {

    v51 = 0;
    v53 = 0;
  }
  result = v70;
  *(double *)a2 = v70;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v8;
  *(_BYTE *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v10;
  *(_BYTE *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = v12;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = v14;
  *(_BYTE *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = v16;
  *(_BYTE *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = v18;
  *(_BYTE *)(a2 + 120) = 0;
  *(_QWORD *)(a2 + 128) = v20;
  *(_BYTE *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = v69;
  *(_BYTE *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = v68;
  *(_QWORD *)(a2 + 168) = v67;
  *(_BYTE *)(a2 + 176) = v66;
  *(_BYTE *)(a2 + 177) = v65;
  *(_QWORD *)(a2 + 184) = v64;
  *(_QWORD *)(a2 + 192) = v63;
  *(_QWORD *)(a2 + 200) = v62;
  *(_QWORD *)(a2 + 208) = v61;
  *(_QWORD *)(a2 + 216) = v60;
  *(_QWORD *)(a2 + 224) = v59;
  *(_QWORD *)(a2 + 232) = v58;
  *(_QWORD *)(a2 + 240) = v56;
  *(_QWORD *)(a2 + 248) = v43;
  *(_QWORD *)(a2 + 256) = v45;
  *(_QWORD *)(a2 + 264) = v46;
  *(_QWORD *)(a2 + 272) = v47;
  *(_QWORD *)(a2 + 280) = v48;
  *(_QWORD *)(a2 + 288) = v51;
  *(_QWORD *)(a2 + 296) = v53;
  return result;
}

unint64_t _s9MusicCore12MetricsEventV15ComponentRenderV13PreloadStatusO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6098, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

_QWORD *sub_C33364(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[24];
  v3 = a1[26];
  v4 = a1[28];
  v5 = a1[30];
  v6 = a1[32];
  v7 = a1[37];
  swift_bridgeObjectRelease(a1[21]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t sub_C333EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_C33418()
{
  uint64_t v0;

  return sub_C2D664(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_13AFFA8, (uint64_t (*)(void))sub_C368A4);
}

uint64_t block_copy_helper_286(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_286(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_C33458()
{
  uint64_t v0;

  return sub_C2D664(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_13AFF80, sub_C3694C);
}

double sub_C33480()
{
  uint64_t v0;

  return sub_C2D664(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_13AFF58, sub_C3694C);
}

double sub_C334A8()
{
  uint64_t v0;

  return sub_C2D664(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_13AFF30, sub_C3694C);
}

double sub_C334D0()
{
  uint64_t v0;

  return sub_C2D664(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_13AFF08, (uint64_t (*)(void))sub_C3689C);
}

double sub_C334F8()
{
  uint64_t v0;

  return sub_C2D664(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_13AFEE0, (uint64_t (*)(void))sub_C36874);
}

double sub_C33520()
{
  uint64_t v0;

  return sub_C2D664(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_13AFEB8, (uint64_t (*)(void))sub_C3684C);
}

void sub_C33548(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_18;
  }
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v4);
  *v4 = v7;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v7 + 24) >> 1)
    goto LABEL_8;
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9)
        v12 = v8 + v6;
      else
        v12 = v8;
      isUniquelyReferenced_nonNull_native = sub_C058BC(isUniquelyReferenced_nonNull_native, v12, 1);
      v7 = *v4;
      if (v5 != a3)
        goto LABEL_12;
    }
    goto LABEL_16;
  }
LABEL_12:
  v13 = *(_QWORD *)(v7 + 16);
  if ((*(_QWORD *)(v7 + 24) >> 1) - v13 < v6)
    goto LABEL_19;
  swift_arrayInitWithCopy(v7 + 16 * v13 + 32);
  if (v6 <= 0)
  {
LABEL_16:
    *v4 = v7;
    return;
  }
  v14 = *(_QWORD *)(v7 + 16);
  v15 = __OFADD__(v14, v6);
  v16 = v14 + v6;
  if (!v15)
  {
    *(_QWORD *)(v7 + 16) = v16;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_C33644()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_C33680()
{
  uint64_t v0;

  sub_C3095C(*(void **)(v0 + 16), *(char **)(v0 + 24), *(char **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t type metadata accessor for MetricsReportingController()
{
  return objc_opt_self(_TtC9MusicCore26MetricsReportingController);
}

unint64_t sub_C336B4()
{
  unint64_t result;

  result = qword_14FDC38;
  if (!qword_14FDC38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.TargetType, &type metadata for MetricsEvent.TargetType);
    atomic_store(result, (unint64_t *)&qword_14FDC38);
  }
  return result;
}

unint64_t sub_C336FC()
{
  unint64_t result;

  result = qword_14FDC40;
  if (!qword_14FDC40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Page.DisplayType, &type metadata for MetricsEvent.Page.DisplayType);
    atomic_store(result, (unint64_t *)&qword_14FDC40);
  }
  return result;
}

unint64_t sub_C33744()
{
  unint64_t result;

  result = qword_14FDC48;
  if (!qword_14FDC48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Click.ActionType, &type metadata for MetricsEvent.Click.ActionType);
    atomic_store(result, (unint64_t *)&qword_14FDC48);
  }
  return result;
}

unint64_t sub_C3378C()
{
  unint64_t result;

  result = qword_14FDC50;
  if (!qword_14FDC50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.ComponentRender.PreloadStatus, &type metadata for MetricsEvent.ComponentRender.PreloadStatus);
    atomic_store(result, (unint64_t *)&qword_14FDC50);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent()
{
  return &type metadata for MetricsEvent;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.TargetType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE9)
    goto LABEL_17;
  if (a2 + 23 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 23) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 23;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 23;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 23;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x18;
  v8 = v6 - 24;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.TargetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_C338BC + 4 * byte_109E77B[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_C338F0 + 4 * byte_109E776[v4]))();
}

uint64_t sub_C338F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C338F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC33900);
  return result;
}

uint64_t sub_C3390C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC33914);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_C33918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C33920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.TargetType()
{
  return &type metadata for MetricsEvent.TargetType;
}

_QWORD *initializeBufferWithCopyOfBuffer for MetricsEvent.Page(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v18 = (_QWORD *)((char *)v4 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v22 = (_QWORD *)((char *)v4 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MetricsEvent.Page(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10] + 8));
}

_QWORD *initializeWithCopy for MetricsEvent.Page(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MetricsEvent.Page(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v18 = a3[10];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MetricsEvent.Page(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v14 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  return a1;
}

_QWORD *assignWithTake for MetricsEvent.Page(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Page(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C340D4);
}

uint64_t sub_C340D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Page(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C34160);
}

uint64_t sub_C34160(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_C341D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_109EA78;
  v4[1] = &unk_109EA78;
  sub_C34270(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_109EA90;
    v4[4] = &unk_109EAA8;
    v4[5] = (char *)&value witness table for Builtin.Int8 + 64;
    v4[6] = &unk_109EAA8;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

void sub_C34270(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_15035E0)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_15035E0);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Page.DisplayType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_C34304 + 4 * byte_109E780[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_C34324 + 4 * byte_109E785[v4]))();
}

_BYTE *sub_C34304(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_C34324(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_C3432C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_C34334(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_C3433C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_C34344(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Page.DisplayType()
{
  return &type metadata for MetricsEvent.Page.DisplayType;
}

_QWORD *initializeBufferWithCopyOfBuffer for MetricsEvent.Click(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v8 = a3[7];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v17 = (_QWORD *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = *(uint64_t *)((char *)a2 + v16 + 8);
    swift_bridgeObjectRetain();
    if (v19 > 9)
    {
      *v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
    v20 = a3[10];
    v21 = (char *)v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = *(unsigned __int16 *)(v22 + 24);
    v52 = v13;
    if (v23 >> 8 <= 0xFE)
    {
      v24 = *(id *)v22;
      v25 = *(_QWORD *)(v22 + 8);
      v51 = v11;
      v26 = v12;
      v27 = *(_QWORD *)(v22 + 16);
      sub_805824(*(id *)v22, v25, v27, v23, SBYTE1(v23));
      *(_QWORD *)v21 = v24;
      *((_QWORD *)v21 + 1) = v25;
      *((_QWORD *)v21 + 2) = v27;
      v12 = v26;
      v11 = v51;
      *((_WORD *)v21 + 12) = v23;
    }
    else
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *(_OWORD *)(v21 + 10) = *(_OWORD *)(v22 + 10);
    }
    v28 = a3[12];
    *(_QWORD *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[13];
    v33 = a3[14];
    v34 = (_QWORD *)((char *)v4 + v32);
    v35 = (uint64_t *)((char *)a2 + v32);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = (char *)v4 + v33;
    v38 = (char *)a2 + v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52(v38, 1, v11))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v37, v38, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v37, 0, 1, v11);
    }
    v40 = a3[16];
    *(_QWORD *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *((_BYTE *)v4 + v40) = *((_BYTE *)a2 + v40);
    v41 = a3[17];
    v42 = a3[18];
    v43 = (_QWORD *)((char *)v4 + v41);
    v44 = (uint64_t *)((char *)a2 + v41);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    *((_BYTE *)v4 + v42) = *((_BYTE *)a2 + v42);
    v46 = a3[19];
    v47 = (_QWORD *)((char *)v4 + v46);
    v48 = (uint64_t *)((char *)a2 + v46);
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

double destroy for MetricsEvent.Click(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  double result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 8) >= 0xAuLL)
    swift_bridgeObjectRelease();
  v8 = a1 + a2[10];
  v9 = *(unsigned __int16 *)(v8 + 24);
  if (v9 >> 8 <= 0xFE)
    sub_79B688(*(void **)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), v9, SBYTE1(v9));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = swift_bridgeObjectRelease();
  v11 = a1 + a2[14];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v7)(v11, 1, v5, v10))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v49;
  unsigned int (*v50)(const void *, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = a3[7];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  if (v17 > 9)
  {
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v18 = a3[10];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(unsigned __int16 *)(v20 + 24);
  v50 = v12;
  if (v21 >> 8 <= 0xFE)
  {
    v22 = *(id *)v20;
    v23 = *(_QWORD *)(v20 + 8);
    v49 = v10;
    v24 = v11;
    v25 = *(_QWORD *)(v20 + 16);
    sub_805824(*(id *)v20, v23, v25, v21, SBYTE1(v21));
    *(_QWORD *)v19 = v22;
    *(_QWORD *)(v19 + 8) = v23;
    *(_QWORD *)(v19 + 16) = v25;
    v11 = v24;
    v10 = v49;
    *(_WORD *)(v19 + 24) = v21;
  }
  else
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 10) = *(_OWORD *)(v20 + 10);
  }
  v26 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[13];
  v31 = a3[14];
  v32 = (_QWORD *)(a1 + v30);
  v33 = (_QWORD *)(a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = (void *)(a1 + v31);
  v36 = (const void *)(a2 + v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v50(v36, 1, v10))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v35, v36, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v35, 0, 1, v10);
  }
  v38 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  v39 = a3[17];
  v40 = a3[18];
  v41 = (_QWORD *)(a1 + v39);
  v42 = (_QWORD *)(a2 + v39);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  v44 = a3[19];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  unsigned int v24;
  __int128 v25;
  __int128 v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  __n128 v44;
  uint64_t v45;
  void *v46;
  void *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t (*v58)(void *, uint64_t, uint64_t);
  uint64_t (*v59)(void *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a1 + v15 + 8);
  v19 = *(_QWORD *)(a2 + v15 + 8);
  if (v18 == 9)
  {
    if (v19 >= 0xA)
      goto LABEL_14;
    goto LABEL_18;
  }
  if (v19 == 9)
  {
    sub_9D6DE4(v16);
LABEL_18:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_19;
  }
  if (v18 < 9)
  {
    if (v19 >= 9)
    {
LABEL_14:
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v19 < 9)
  {
    sub_56024(v16, &qword_14FB9C0);
    goto LABEL_18;
  }
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_19:
  v20 = a3[10];
  v21 = a1 + v20;
  v22 = (__int128 *)(a2 + v20);
  v23 = *(unsigned __int16 *)(a2 + v20 + 24);
  v24 = v23 >> 8;
  if (*(unsigned __int8 *)(a1 + v20 + 25) == 255)
  {
    if (v24 <= 0xFE)
    {
      v58 = v11;
      v60 = v10;
      v27 = *(void **)v22;
      v28 = *((_QWORD *)v22 + 1);
      v29 = *((_QWORD *)v22 + 2);
      sub_805824(v27, v28, v29, v23, SBYTE1(v23));
      *(_QWORD *)v21 = v27;
      *(_QWORD *)(v21 + 8) = v28;
      v11 = v58;
      v10 = v60;
      *(_QWORD *)(v21 + 16) = v29;
      *(_WORD *)(v21 + 24) = v23;
    }
    else
    {
      v25 = *v22;
      *(_OWORD *)(v21 + 10) = *(__int128 *)((char *)v22 + 10);
      *(_OWORD *)v21 = v25;
    }
  }
  else if (v24 <= 0xFE)
  {
    v59 = v11;
    v61 = v10;
    v30 = *(void **)v22;
    v31 = *((_QWORD *)v22 + 1);
    v32 = *((_QWORD *)v22 + 2);
    sub_805824(v30, v31, v32, v23, SBYTE1(v23));
    v33 = *(void **)v21;
    v34 = *(_QWORD *)(v21 + 8);
    v35 = *(_QWORD *)(v21 + 16);
    *(_QWORD *)v21 = v30;
    *(_QWORD *)(v21 + 8) = v31;
    v11 = v59;
    v10 = v61;
    *(_QWORD *)(v21 + 16) = v32;
    v36 = *(unsigned __int8 *)(v21 + 24);
    *(_BYTE *)(v21 + 24) = v23;
    v37 = *(_BYTE *)(v21 + 25);
    *(_BYTE *)(v21 + 25) = BYTE1(v23);
    sub_79B688(v33, v34, v35, v36, v37);
  }
  else
  {
    sub_C34ED4(v21);
    v26 = *(__int128 *)((char *)v22 + 10);
    *(_OWORD *)v21 = *v22;
    *(_OWORD *)(v21 + 10) = v26;
  }
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[12];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = a3[13];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  v44 = swift_bridgeObjectRelease();
  v45 = a3[14];
  v46 = (void *)(a1 + v45);
  v47 = (void *)(a2 + v45);
  v48 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v11)(a1 + v45, 1, v9, v44);
  v49 = v11(v47, 1, v9);
  if (!v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v46, v47, v9);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v46, v9);
    goto LABEL_31;
  }
  if (v49)
  {
LABEL_31:
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v46, v47, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v9);
LABEL_32:
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v51 = a3[17];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v54 = a3[19];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (_QWORD *)(a2 + v54);
  *v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_C34ED4(uint64_t a1)
{
  sub_79B688(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_BYTE *)(a1 + 25));
  return a1;
}

uint64_t initializeWithTake for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[10];
  v15 = a3[11];
  v16 = (_OWORD *)(a1 + v14);
  v17 = (_OWORD *)(a2 + v14);
  *v16 = *v17;
  *(_OWORD *)((char *)v16 + 10) = *(_OWORD *)((char *)v17 + 10);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v18 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[14];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  if (v11((const void *)(a2 + v19), 1, v9))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v20, v21, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
  }
  v23 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  return a1;
}

uint64_t assignWithTake for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  void *v42;
  void *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = a3[7];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = (_OWORD *)(a2 + v16);
  v19 = *(_QWORD *)(a1 + v16 + 8);
  v20 = *(_QWORD *)(a2 + v16 + 8);
  if (v19 == 9)
  {
LABEL_13:
    *(_OWORD *)v17 = *v18;
    goto LABEL_14;
  }
  if (v20 == 9)
  {
    sub_9D6DE4(v17);
    goto LABEL_13;
  }
  if (v19 < 9)
    goto LABEL_13;
  if (v20 < 9)
  {
    sub_56024(v17, &qword_14FB9C0);
    goto LABEL_13;
  }
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v20;
  swift_bridgeObjectRelease();
LABEL_14:
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(unsigned __int16 *)(a1 + v21 + 24);
  if (v24 >> 8 > 0xFE)
  {
LABEL_17:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 10) = *(_OWORD *)(v23 + 10);
    goto LABEL_19;
  }
  v25 = *(unsigned __int16 *)(v23 + 24);
  if (v25 >> 8 > 0xFE)
  {
    sub_C34ED4(v22);
    goto LABEL_17;
  }
  v26 = *(_QWORD *)(v23 + 16);
  v27 = *(void **)v22;
  v28 = *(_QWORD *)(v22 + 8);
  v29 = *(_QWORD *)(v22 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_QWORD *)(v22 + 16) = v26;
  *(_WORD *)(v22 + 24) = v25;
  sub_79B688(v27, v28, v29, v24, SBYTE1(v24));
LABEL_19:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v30 = a3[12];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = a3[13];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  v40 = swift_bridgeObjectRelease();
  v41 = a3[14];
  v42 = (void *)(a1 + v41);
  v43 = (void *)(a2 + v41);
  v44 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v12)(a1 + v41, 1, v10, v40);
  v45 = v12(v43, 1, v10);
  if (!v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v42, v43, v10);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v42, v10);
    goto LABEL_24;
  }
  if (v45)
  {
LABEL_24:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v42, v43, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v42, 0, 1, v10);
LABEL_25:
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  v47 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v48 = (_QWORD *)(a1 + v47);
  v49 = (uint64_t *)(a2 + v47);
  v51 = *v49;
  v50 = v49[1];
  *v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  v52 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v53 = (_QWORD *)(a1 + v52);
  v54 = (uint64_t *)(a2 + v52);
  v56 = *v54;
  v55 = v54[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C3544C);
}

uint64_t sub_C3544C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C354D8);
}

uint64_t sub_C354D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_C35550(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  void *v15;
  void *v16;
  void *v17;

  v4[0] = &unk_109EA78;
  v4[1] = &unk_109EAD8;
  v4[2] = &unk_109EAF0;
  sub_C34270(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = &unk_109EA90;
    v7 = &unk_109EB08;
    v8 = &unk_109EB20;
    v9 = &unk_109EA90;
    v10 = &unk_109EAA8;
    v11 = &unk_109EAA8;
    v12 = v5;
    v13 = &unk_109EA90;
    v14 = (char *)&value witness table for Builtin.Int8 + 64;
    v15 = &unk_109EAA8;
    v16 = &unk_109EB38;
    v17 = &unk_109EAA8;
    swift_initStructMetadata(a1, 256, 16, v4, a1 + 16);
  }
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD1)
    goto LABEL_17;
  if (a2 + 47 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 47) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 47;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 47;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 47;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x30;
  v8 = v6 - 48;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 47 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 47) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD0)
    return ((uint64_t (*)(void))((char *)&loc_C35700 + 4 * byte_109E78F[v4]))();
  *a1 = a2 + 47;
  return ((uint64_t (*)(void))((char *)sub_C35734 + 4 * byte_109E78A[v4]))();
}

uint64_t sub_C35734(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C3573C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC35744);
  return result;
}

uint64_t sub_C35750(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC35758);
  *(_BYTE *)result = a2 + 47;
  return result;
}

uint64_t sub_C3575C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C35764(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionType()
{
  return &type metadata for MetricsEvent.Click.ActionType;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionContext(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF6 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483639);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 8;
  if (v4 >= 0xA)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF7)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483639;
    if (a3 >= 0x7FFFFFF7)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF7)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionContext()
{
  return &type metadata for MetricsEvent.Click.ActionContext;
}

double destroy for MetricsEvent.Click.ActionDetails(uint64_t a1)
{
  return sub_79B688(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_BYTE *)(a1 + 25));
}

uint64_t initializeWithCopy for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 25);
  v7 = *(unsigned __int8 *)(a2 + 24);
  sub_805824(*(id *)a2, v4, v5, v7, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v6;
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 25);
  v7 = *(unsigned __int8 *)(a2 + 24);
  sub_805824(*(id *)a2, v4, v5, v7, v6);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v11 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  v12 = *(_BYTE *)(a1 + 25);
  *(_BYTE *)(a1 + 25) = v6;
  sub_79B688(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_WORD *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 25);
  v9 = *(unsigned __int8 *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_79B688(v5, v7, v6, v9, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionDetails(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 26))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 25);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_BYTE *)(result + 25) = -(char)a2;
  }
  return result;
}

uint64_t sub_C35A28(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 25) <= 3u)
    return *(unsigned __int8 *)(a1 + 25);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_C35A40(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
    *(_BYTE *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 25) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails()
{
  return &type metadata for MetricsEvent.Click.ActionDetails;
}

id *destroy for MetricsEvent.Click.ActionDetails.SearchSource(id *result)
{
  id *v1;

  if ((unint64_t)*result >= 0xFFFFFFFF)
  {
    v1 = result;

    return (id *)swift_bridgeObjectRelease(v1[2]);
  }
  return result;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO12SearchSourceOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    v6 = v3;
    swift_bridgeObjectRetain(v5);
  }
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t a1, __int128 *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __int128 v11;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 16) = v9;
      v10 = v5;
      swift_bridgeObjectRetain(v9);
      return a1;
    }
LABEL_7:
    v11 = *a2;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)a1 = v11;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a2 + 2);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

__n128 __swift_memcpy24_8_0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

_QWORD *sub_C35D10(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.SearchSource()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.SearchSource;
}

uint64_t destroy for MetricsEvent.LoadUrl(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[21]);
  swift_bridgeObjectRelease(a1[24]);
  swift_bridgeObjectRelease(a1[26]);
  swift_bridgeObjectRelease(a1[28]);
  swift_bridgeObjectRelease(a1[30]);
  swift_bridgeObjectRelease(a1[32]);
  return swift_bridgeObjectRelease(a1[37]);
}

uint64_t initializeWithCopy for MetricsEvent.LoadUrl(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v3 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v4 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v4;
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  v5 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v5;
  v6 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v6;
  v7 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v7;
  v8 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v8;
  v9 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v9;
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  v10 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v10;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.LoadUrl(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = a2[8];
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = a2[10];
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = a2[12];
  *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = a2[14];
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  *(_QWORD *)(a1 + 112) = v11;
  v12 = a2[16];
  *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
  *(_QWORD *)(a1 + 128) = v12;
  v13 = a2[18];
  *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
  *(_QWORD *)(a1 + 144) = v13;
  *(_QWORD *)(a1 + 160) = a2[20];
  v14 = a2[21];
  v15 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  *(_BYTE *)(a1 + 177) = *((_BYTE *)a2 + 177);
  *(_QWORD *)(a1 + 184) = a2[23];
  v16 = a2[24];
  v17 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(a1 + 200) = a2[25];
  v18 = a2[26];
  v19 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  *(_QWORD *)(a1 + 216) = a2[27];
  v20 = a2[28];
  v21 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *(_QWORD *)(a1 + 232) = a2[29];
  v22 = a2[30];
  v23 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 240) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  *(_QWORD *)(a1 + 248) = a2[31];
  v24 = a2[32];
  v25 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  *(_QWORD *)(a1 + 264) = a2[33];
  *(_QWORD *)(a1 + 272) = a2[34];
  *(_QWORD *)(a1 + 280) = a2[35];
  *(_QWORD *)(a1 + 288) = a2[36];
  v26 = a2[37];
  v27 = *(_QWORD *)(a1 + 296);
  *(_QWORD *)(a1 + 296) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  return a1;
}

void *__swift_memcpy304_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x130uLL);
}

uint64_t assignWithTake for MetricsEvent.LoadUrl(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v5 = *(_QWORD *)(a2 + 168);
  v6 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v5;
  swift_bridgeObjectRelease(v6);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  v7 = *(_QWORD *)(a2 + 192);
  v8 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 208);
  v10 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 224);
  v12 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v11;
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 240);
  v14 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v13;
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(a2 + 256);
  v16 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v15;
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  v17 = *(_QWORD *)(a2 + 296);
  v18 = *(_QWORD *)(a1 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v17;
  swift_bridgeObjectRelease(v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.LoadUrl(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 304))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 168);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.LoadUrl(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 304) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 304) = 0;
    if (a2)
      *(_QWORD *)(result + 168) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.LoadUrl()
{
  return &type metadata for MetricsEvent.LoadUrl;
}

void destroy for MetricsEvent.ComponentRender(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

uint64_t initializeWithCopy for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(void **)(a2 + 40);
  v7 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(void **)(a2 + 56);
  v9 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain(v3);
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  v15 = v9;
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 24);
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = v7;

  v9 = *(void **)(a1 + 32);
  v10 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  v11 = v10;

  v12 = *(void **)(a1 + 40);
  v13 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v13;
  v14 = v13;

  v15 = *(void **)(a2 + 48);
  v16 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v15;
  v17 = v15;

  v18 = *(void **)(a1 + 56);
  v19 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v19;
  v20 = v19;

  v21 = *(void **)(a1 + 64);
  v22 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v22;
  v23 = v22;

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);

  v6 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v7 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  v8 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.ComponentRender(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 73))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.ComponentRender(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.ComponentRender()
{
  return &type metadata for MetricsEvent.ComponentRender;
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.ComponentRender.PreloadStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_C3667C + 4 * byte_109E799[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_C366B0 + 4 * byte_109E794[v4]))();
}

uint64_t sub_C366B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C366B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC366C0);
  return result;
}

uint64_t sub_C366CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC366D4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_C366D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C366E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.ComponentRender.PreloadStatus()
{
  return &type metadata for MetricsEvent.ComponentRender.PreloadStatus;
}

uint64_t sub_C366FC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_C36720(void *a1)
{
  uint64_t v1;

  return sub_C315A8(a1, v1);
}

void sub_C36728()
{
  uint64_t v0;

  sub_C4F8D0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_C36744(uint64_t a1)
{
  uint64_t v1;

  return sub_C31684(a1, v1);
}

void sub_C36750()
{
  uint64_t v0;

  sub_C3162C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_C36758()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_C36784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_14FDE2C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_50F8C;
  v3[11] = v2;
  return swift_task_switch(sub_C31874, 0, 0);
}

uint64_t sub_C367E8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_C36828()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_C3684C()
{
  uint64_t v0;

  sub_C30394(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageRenderEventSampler, (uint64_t (*)(void *))sub_C290D8);
}

void sub_C36874()
{
  uint64_t v0;

  sub_C30394(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&OBJC_IVAR____TtC9MusicCore26MetricsReportingController_componentRenderEventSampler, (uint64_t (*)(void *))sub_C28CA4);
}

void sub_C3689C()
{
  uint64_t v0;

  sub_C2F07C(*(void **)(v0 + 16));
}

void sub_C368A4()
{
  uint64_t v0;

  sub_C31E00(*(void **)(v0 + 24), (uint64_t)UIScreen.Dimensions.size.getter, 0);
}

void sub_C36950(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v5 = ActionType.rawValue.getter(*(_BYTE *)(a2 + 32));
    v7 = v6;
    v8 = ActionType.rawValue.getter(a1);
    if (v5 == v8 && v7 == v9)
    {
LABEL_20:
      swift_bridgeObjectRelease_n(v7, 2);
    }
    else
    {
      v11 = v9;
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) != 0)
      {
LABEL_7:
        swift_bridgeObjectRelease(a2);
      }
      else if (v2 == 1)
      {
LABEL_17:
        swift_bridgeObjectRelease(a2);
      }
      else
      {
        v13 = 33;
        while (1)
        {
          v14 = v13 - 31;
          if (__OFADD__(v13 - 32, 1))
            break;
          v15 = ActionType.rawValue.getter(*(_BYTE *)(a2 + v13));
          v7 = v16;
          v17 = ActionType.rawValue.getter(a1);
          if (v15 == v17 && v7 == v18)
          {
            swift_bridgeObjectRelease(a2);
            goto LABEL_20;
          }
          v20 = v18;
          v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v7, v17, v18, 0);
          swift_bridgeObjectRelease(v7);
          swift_bridgeObjectRelease(v20);
          if ((v21 & 1) != 0)
            goto LABEL_7;
          ++v13;
          if (v14 == v2)
            goto LABEL_17;
        }
        __break(1u);
      }
    }
  }
}

uint64_t sub_C36AA4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain(a2);
    __asm { BR              X9 }
  }
  return 0;
}

double Double.toMilliseconds.getter(double a1)
{
  return a1 * 1000.0;
}

uint64_t MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;

  v16 = (int *)type metadata accessor for MetricsPageProperties(0);
  v17 = (uint64_t)a9 + v16[6];
  v18 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = v16[7];
  *(_QWORD *)((char *)a9 + v19) = 0;
  v20 = (_QWORD *)((char *)a9 + v16[8]);
  *v20 = 0;
  v20[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  sub_C32E80(a5, v17);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a9 + v19));
  *(_QWORD *)((char *)a9 + v19) = a6;
  result = swift_bridgeObjectRelease(v20[1]);
  *v20 = a7;
  v20[1] = a8;
  return result;
}

uint64_t type metadata accessor for MetricsPageProperties(uint64_t a1)
{
  uint64_t result;

  result = qword_14FDEB0;
  if (!qword_14FDEB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetricsPageProperties);
  return result;
}

uint64_t sub_C36EE0(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  __n128 v15;
  void *v16;
  id v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  Swift::String v23;
  uint64_t v24;
  void **aBlock;
  unint64_t v26;
  uint64_t (*v27)(uint64_t);
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;
  unsigned __int8 v31;

  objc_opt_self(MPModelGenericObject);
  v2 = (void *)swift_dynamicCastObjCClass(a1);
  if (v2)
  {
    v3 = objc_msgSend(v2, "innermostModelObject");
LABEL_3:
    v4 = sub_C36EE0(v3);

    v5 = 0;
    v6 = 0;
LABEL_8:
    v31 = v4;
LABEL_9:
    sub_5C198((uint64_t)v5, v6);
    return v4;
  }
  objc_opt_self(MPModelArtist);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 3;
    goto LABEL_8;
  }
  objc_opt_self(MPModelSocialPerson);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 4;
    goto LABEL_8;
  }
  objc_opt_self(MPModelAlbum);
  if (swift_dynamicCastObjCClass(a1))
  {

    v4 = 0;
    v5 = 0;
    v6 = 0;
    v31 = 0;
    goto LABEL_9;
  }
  objc_opt_self(MPModelComposer);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 8;
    goto LABEL_8;
  }
  objc_opt_self(MPModelCurator);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 10;
    goto LABEL_8;
  }
  objc_opt_self(MPModelGenre);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 11;
    goto LABEL_8;
  }
  objc_opt_self(MPModelPlaylist);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 1;
    goto LABEL_8;
  }
  objc_opt_self(MPModelRadioStation);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 12;
    goto LABEL_8;
  }
  objc_opt_self(MPModelSong);
  v8 = swift_dynamicCastObjCClass(a1);
  if (v8)
  {
    v9 = v8;
    v31 = 2;
    v10 = (void *)objc_opt_self(MPModelObject);
    v11 = swift_allocObject(&unk_13B06F8, 32, 7);
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = &v31;
    v12 = swift_allocObject(&unk_13B0720, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_C3C8BC;
    *(_QWORD *)(v12 + 24) = v11;
    v24 = v11;
    v29 = sub_62604;
    v30 = v12;
    aBlock = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_3A1A94;
    v28 = &block_descriptor_129_0;
    v13 = _Block_copy(&aBlock);
    v14 = a1;
    swift_retain();
    objc_msgSend(v10, "performWithoutEnforcement:", v13, swift_release().n128_f64[0]);

    _Block_release(v13);
    LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v12, "", 127, 609, 53, 1, v15);
    swift_release();
    if ((v14 & 1) == 0)
    {
      v5 = sub_C3C8BC;
      v4 = v31;
      v6 = v24;
      goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    objc_opt_self(MPModelTVShow);
    if (swift_dynamicCastObjCClass(a1))
    {

      v5 = 0;
      v6 = 0;
      v4 = 6;
      goto LABEL_8;
    }
    objc_opt_self(MPModelTVEpisode);
    if (swift_dynamicCastObjCClass(a1))
    {

      v5 = 0;
      v6 = 0;
      v4 = 7;
      goto LABEL_8;
    }
    objc_opt_self(MPModelMovie);
    if (swift_dynamicCastObjCClass(a1))
    {

      v5 = 0;
      v6 = 0;
      v4 = 5;
      goto LABEL_8;
    }
    objc_opt_self(MPModelPlaylistEntry);
    v16 = (void *)swift_dynamicCastObjCClass(a1);
    if (v16)
    {
      v17 = objc_msgSend(v16, "innermostModelObject");
      objc_opt_self(MPModelPlaylistEntry);
      if (swift_dynamicCastObjCClass(v17))
      {

        v5 = 0;
        v6 = 0;
        v4 = 17;
        goto LABEL_8;
      }
      v3 = v17;
      goto LABEL_3;
    }
    objc_opt_self(MPModelRecordLabel);
    if (swift_dynamicCastObjCClass(a1))
    {

      v5 = 0;
      v6 = 0;
      v4 = 19;
      goto LABEL_8;
    }
    objc_opt_self(MPModelCreditsArtist);
    if (swift_dynamicCastObjCClass(a1))
    {

      v5 = 0;
      v6 = 0;
      v4 = 9;
      goto LABEL_8;
    }
  }
  aBlock = 0;
  v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  aBlock = (void **)0xD00000000000002BLL;
  v26 = 0x8000000001104870;
  v18 = sub_D55D18((uint64_t)&off_13A49C8);
  MPModelObject.humanDescription(including:)(v18);
  v20 = v19;
  v22 = v21;
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = v20;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, aBlock, v26, "MusicCore/MetricsUtilities.swift", 32, 2, 635, 0);
  __break(1u);
  return result;
}

uint64_t MetricsContentType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C37474 + 4 * byte_109EBEA[a1]))(0x6D75626C61, 0xE500000000000000);
}

uint64_t sub_C37474()
{
  return 0x7473696C79616C70;
}

uint64_t sub_C37600()
{
  return 0x497972617262696CLL;
}

uint64_t sub_C37620()
{
  return 0x614C64726F636572;
}

BOOL sub_C37640()
{
  void *v0;
  uint64_t ObjectType;
  void *v2;
  void *ObjCClassFromMetadata;
  double v4;
  double v5;
  double v6;
  _BOOL8 result;

  ObjectType = swift_getObjectType();
  result = 1;
  if (!objc_msgSend(v0, "cachedResponse")
    || (v2 = (void *)swift_getObjCClassFromMetadata(ObjectType),
        objc_msgSend(v0, "xpSamplingPercentageCachedResponses"),
        (objc_msgSend(v2, "shouldReportCachedEventWithSamplingPercentage:") & 1) == 0))
  {
    if ((objc_msgSend(v0, "cachedResponse") & 1) != 0)
      return 0;
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(ObjectType);
    objc_msgSend(v0, "xpSessionDuration");
    v5 = v4;
    objc_msgSend(v0, "xpSamplingPercentageUsers");
    if ((objc_msgSend(ObjCClassFromMetadata, "shouldCollectTimingDataWithSessionDuration:samplingPercentage:", v5, v6) & 1) == 0)return 0;
  }
  return result;
}

id Double.toMillisecondsInServerTime.getter(double a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", a1);
  v2 = objc_msgSend(v1, "unsignedLongLongValue");

  return v2;
}

uint64_t sub_C37784()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "propertyForBodyKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_C3B070((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_56024((uint64_t)v6, &qword_14FF2A0);
    return 0;
  }
}

uint64_t MetricsPageProperties.pageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MetricsPageProperties(0);
  return sub_5C238(v1 + *(int *)(v3 + 24), a1, &qword_14FAC20);
}

uint64_t MetricsPageProperties.pageURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MetricsPageProperties(0) + 24);
  return sub_C32E80(a1, v3);
}

double (*MetricsPageProperties.pageURL.modify())(double)
{
  type metadata accessor for MetricsPageProperties(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsPageProperties.pageDetails.getter()
{
  type metadata accessor for MetricsPageProperties(0);
  return swift_bridgeObjectRetain();
}

void MetricsPageProperties.pageDetails.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for MetricsPageProperties(0) + 28);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
}

double (*MetricsPageProperties.pageDetails.modify())(double)
{
  type metadata accessor for MetricsPageProperties(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsPageProperties.extRefUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MetricsPageProperties(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

void MetricsPageProperties.extRefUrl.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MetricsPageProperties(0) + 32));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*MetricsPageProperties.extRefUrl.modify())(double)
{
  type metadata accessor for MetricsPageProperties(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t sub_C37A34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = MetricsContentType.rawValue.getter(*a1);
  v5 = v4;
  v6 = MetricsContentType.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_C37ABC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = MetricsContentType.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_C37B1C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = MetricsContentType.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_C37B5C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = MetricsContentType.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_C37BB8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore18MetricsContentTypeO8rawValueACSgSS_tcfC_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_C37BE4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = MetricsContentType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

char *sub_C37C0C()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v17;
  unint64_t v18;
  _BYTE v19[24];
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "valueForConfigurationKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(&v21, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  sub_C3B070((uint64_t)&v21, (uint64_t)v19);
  if (!v20)
  {
    sub_56024((uint64_t)v19, &qword_14FF2A0);
    return 0;
  }
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF58);
  if ((swift_dynamicCast(&v17, v19, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    return 0;
  v4 = *(_QWORD *)(v17 + 16);
  if (v4)
  {
    v5 = v17 + 32;
    v6 = (char *)_swiftEmptyArrayStorage;
    do
    {
      sub_95094(v5, (uint64_t)v19);
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE260);
      if ((swift_dynamicCast(&v21, v19, (char *)&type metadata for Any + 8, v7, 6) & 1) != 0)
      {
        v8 = v21;
        v17 = 0x6D614E646C656966;
        v18 = 0xE900000000000065;
        AnyHashable.init<A>(_:)(&v17, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v8 + 16) && (v9 = sub_21BFA0((uint64_t)v19), (v10 & 1) != 0))
        {
          sub_95094(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v21);
        }
        else
        {
          v21 = 0u;
          v22 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_55E40((uint64_t)v19);
        if (*((_QWORD *)&v22 + 1))
        {
          if ((swift_dynamicCast(&v17, &v21, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
          {
            v11 = v17;
            v12 = v18;
            if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
              v6 = sub_BCC9AC(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
            v14 = *((_QWORD *)v6 + 2);
            v13 = *((_QWORD *)v6 + 3);
            if (v14 >= v13 >> 1)
              v6 = sub_BCC9AC((char *)(v13 > 1), v14 + 1, 1, v6);
            *((_QWORD *)v6 + 2) = v14 + 1;
            v15 = &v6[16 * v14];
            *((_QWORD *)v15 + 4) = v11;
            *((_QWORD *)v15 + 5) = v12;
          }
        }
        else
        {
          sub_56024((uint64_t)&v21, &qword_14FF2A0);
        }
      }
      v5 += 32;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (char *)_swiftEmptyArrayStorage;
  }
  return v6;
}

uint64_t SSMetricsMutableEvent.dictionaryRepresentation.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v4;

  v1 = objc_msgSend(objc_allocWithZone((Class)NSMutableDictionary), "init");
  objc_msgSend(v0, "appendPropertiesToBody:", v1);
  v4 = 0;
  v2 = v1;
  static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();

  return v4;
}

uint64_t sub_C37F68(void *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  void *v2;
  NSString v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v22[2];
  _QWORD v23[3];
  uint64_t v24;

  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setProperty:forBodyKey:", v5, v6);

  if (!a1)
    goto LABEL_7;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(a1, "valueForConfigurationKey:", v7);

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)(v22, v8);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_C3B070((uint64_t)v22, (uint64_t)v23);
  v9 = v24;
  if (v24)
  {
    v10 = __swift_project_boxed_opaque_existential_1(v23, v24);
    v11 = *(_QWORD *)(v9 - 8);
    v12 = __chkstk_darwin(v10);
    v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v11 + 16))(v14, v12);
    v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v9);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    __swift_destroy_boxed_opaque_existential_1(v23);
  }
  else
  {
LABEL_7:
    v15 = 0;
  }
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setProperty:forBodyKey:", v15, v16);
  swift_unknownObjectRelease(v15);

  return a2(v17, v18, v19, v20);
}

double sub_C3816C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD aBlock[6];

  v4 = v3;
  v28 = a2;
  v29 = a3;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS.QoSClass(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchQoS.QoSClass.userInitiated(_:), v13);
  v17 = (void *)static OS_dispatch_queue.global(qos:)(v16);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v18 = (_QWORD *)swift_allocObject(&unk_13B05E0, 48, 7);
  v18[2] = a1;
  v18[3] = v3;
  v19 = v29;
  v18[4] = v28;
  v18[5] = v19;
  aBlock[4] = sub_C3C814;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_42D124;
  aBlock[3] = &block_descriptor_105_3;
  v20 = _Block_copy(aBlock);
  v21 = a1;
  v22 = v4;
  v23 = swift_retain();
  static DispatchQoS.unspecified.getter(v23);
  v33 = _swiftEmptyArrayStorage;
  v24 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
  v26 = sub_C3C820();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v25, v26, v6, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_C383E4(uint64_t a1, void *a2, void (*a3)(__n128))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  double v16;
  id v17;
  id v18;
  NSString v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v44;
  uint64_t *v45;
  void (*v46)(__n128);
  uint64_t v47;
  int64_t v48;
  unint64_t v49;

  v5 = _s9MusicCore18DeviceCapabilitiesO9diskUsageSDyAC04DiskF8CategoryOs5Int64VGvgZ_0();
  v6 = sub_C28524((uint64_t)&off_13A6318);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF50);
  swift_arrayDestroy(&unk_13A6338, 5, v7);
  v46 = a3;
  if (a1 && (v8 = sub_C37C0C()) != 0)
  {
    v9 = v8;
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = (char *)_swiftEmptyArrayStorage;
  }
  v10 = 0;
  v11 = v6 + 64;
  v12 = 1 << *(_BYTE *)(v6 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v6 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  v45 = (uint64_t *)(v9 + 72);
  v48 = v15;
  v49 = v6;
  while (1)
  {
    do
    {
      do
      {
        while (v14)
        {
          v20 = __clz(__rbit64(v14));
          v14 &= v14 - 1;
          v21 = v20 | (v10 << 6);
          if (*(_QWORD *)(v5 + 16))
            goto LABEL_28;
        }
        v22 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        if (v22 >= v15)
          goto LABEL_51;
        v23 = *(_QWORD *)(v11 + 8 * v22);
        ++v10;
        if (!v23)
        {
          v10 = v22 + 1;
          if (v22 + 1 >= v15)
            goto LABEL_51;
          v23 = *(_QWORD *)(v11 + 8 * v10);
          if (!v23)
          {
            v10 = v22 + 2;
            if (v22 + 2 >= v15)
              goto LABEL_51;
            v23 = *(_QWORD *)(v11 + 8 * v10);
            if (!v23)
            {
              v24 = v22 + 3;
              if (v24 >= v15)
              {
LABEL_51:
                swift_bridgeObjectRelease();
                swift_release();
                v44 = swift_bridgeObjectRelease();
                v46(v44);
                return;
              }
              v23 = *(_QWORD *)(v11 + 8 * v24);
              if (!v23)
              {
                while (1)
                {
                  v10 = v24 + 1;
                  if (__OFADD__(v24, 1))
                    goto LABEL_53;
                  if (v10 >= v15)
                    goto LABEL_51;
                  v23 = *(_QWORD *)(v11 + 8 * v10);
                  ++v24;
                  if (v23)
                    goto LABEL_27;
                }
              }
              v10 = v24;
            }
          }
        }
LABEL_27:
        v14 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v10 << 6);
      }
      while (!*(_QWORD *)(v5 + 16));
LABEL_28:
      v25 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v21);
      v27 = *v25;
      v26 = v25[1];
      v28 = sub_21C7E8(*(_BYTE *)(*(_QWORD *)(v6 + 48) + v21));
    }
    while ((v29 & 1) == 0);
    v16 = (double)(*(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v28) / 0x100000);
    v30 = *((_QWORD *)v9 + 2);
    if (v30)
      break;
LABEL_10:
    v17 = objc_allocWithZone((Class)NSNumber);
    swift_bridgeObjectRetain();
    v18 = objc_msgSend(v17, "initWithDouble:", v16);
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "setProperty:forBodyKey:", v18, v19, swift_bridgeObjectRelease().n128_f64[0]);

  }
  v31 = v11;
  v32 = *((_QWORD *)v9 + 4);
  v33 = *((_QWORD *)v9 + 5);
  v34 = v9;
  v35 = v32 == v27 && v33 == v26;
  if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v27, v26, 0) & 1) != 0)
    goto LABEL_8;
  if (v30 == 1)
    goto LABEL_9;
  v36 = *((_QWORD *)v9 + 6);
  v37 = *((_QWORD *)v9 + 7);
  v38 = v36 == v27 && v37 == v26;
  if (v38 || (_stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, v27, v26, 0) & 1) != 0)
  {
LABEL_8:
    v16 = floor(v16 / 100.0) * 100.0;
LABEL_9:
    v9 = v34;
    v11 = v31;
    v15 = v48;
    v6 = v49;
    goto LABEL_10;
  }
  if (v30 == 2)
    goto LABEL_9;
  v39 = v45;
  v40 = 2;
  while (!__OFADD__(v40, 1))
  {
    v41 = *(v39 - 1);
    v42 = *v39;
    if (v41 == v27 && v42 == v26)
      goto LABEL_8;
    v47 = v40 + 1;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, v27, v26, 0) & 1) != 0)
      goto LABEL_8;
    v39 += 2;
    ++v40;
    if (v47 == v30)
      goto LABEL_9;
  }
LABEL_54:
  __break(1u);
}

void sub_C38750(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  void *v4;
  void *v7;
  void (*v9)(void **, _QWORD *);
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD v15[2];
  void *v16;
  uint64_t v17;

  v17 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v7 = v4;
    v9 = *(void (**)(void **, _QWORD *))(a2 + 32);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_BCED68(0, 1);
    v10 = v17;
    v11 = (_QWORD *)swift_allocObject(&unk_13B0568, 56, 7);
    v11[2] = v7;
    v11[3] = a1;
    v11[4] = v10;
    v11[5] = a3;
    v11[6] = a4;
    v16 = a1;
    v12 = swift_allocObject(&unk_13B0590, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_C3C7A0;
    *(_QWORD *)(v12 + 24) = v11;
    v15[0] = sub_AF944;
    v15[1] = v12;
    v13 = a1;
    swift_retain();
    swift_retain();
    v14 = v7;
    v9(&v16, v15);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    a3();
  }
}

uint64_t sub_C38884(void *a1, uint64_t (*a2)(void), uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  Class isa;

  if (a1)
  {
    v6 = objc_msgSend(a1, "eventFields");
    if (v6)
    {
      v7 = v6;
      v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v9 = sub_D7AA34(v8);
      swift_bridgeObjectRelease();
      if (v9)
      {
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(a4, "addPropertiesWithDictionary:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      }
    }
  }
  return a2();
}

double sub_C38960(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t (*)(), uint64_t, __n128))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  double result;

  v4 = *a1;
  v6 = *a2;
  v5 = a2[1];
  v7 = swift_allocObject(&unk_13B0630, 32, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  v8 = swift_retain();
  a3(v4, sub_129E54, v7, v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_C389D4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void *a4)
{
  id v6;
  id v7;
  NSString v8;

  v6 = objc_msgSend((id)objc_opt_self(ICDeviceInfo), "currentDeviceInfo");
  v7 = objc_msgSend(v6, "buildVersion");

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(a4, "setProperty:forBodyKey:", v7, v8);

  return a2();
}

void sub_C38B38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  double v7;
  objc_super v8;
  _QWORD aBlock[6];

  aBlock[4] = a3;
  aBlock[5] = a4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_42D124;
  aBlock[3] = &block_descriptor_30_8;
  v6 = _Block_copy(aBlock);
  swift_retain();
  *(_QWORD *)&v7 = swift_release().n128_u64[0];
  v8.receiver = a1;
  v8.super_class = (Class)SSMetricsBaseEvent;
  objc_msgSendSuper2(&v8, "setStandardPropertiesWith:completionHandler:", a2, v6, v7);
  _Block_release(v6);
}

void ICURLSession.enqueueDataRequestRecordingPerformanceMetrics(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v7 = swift_allocObject(&unk_13B0028, 32, 7);
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v10[4] = sub_C3A6A0;
  v11 = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_21B54C;
  v10[3] = &block_descriptor_291;
  v8 = _Block_copy(v10);
  v9 = v11;
  swift_retain(a3);
  objc_msgSend(v3, "enqueueDataRequest:withCompletionHandler:", a1, v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
}

uint64_t sub_C38D7C(void *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void *, uint64_t);
  void **aBlock;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  void *v37;
  void (*v38)();
  uint64_t v39;

  v32 = a4;
  v33 = a3;
  v31 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter(v12, v13, v14, v15, v16, v17, v18, v19, v30, v31, v32, v33, aBlock, v35, v36);
  v21 = swift_allocObject(&unk_13B0658, 24, 7);
  *(_QWORD *)(v21 + 16) = a1;
  v38 = sub_C3C890;
  v39 = v21;
  aBlock = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_42D124;
  v37 = &block_descriptor_114_2;
  v22 = _Block_copy(&aBlock);
  v23 = v39;
  v24 = a1;
  v25 = swift_release(v23);
  static DispatchQoS.unspecified.getter(v25);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v26 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
  v28 = sub_C3C820();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v27, v28, v5, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v33(a1, v31);
}

void sub_C38F90(id a1)
{
  id v2;
  id v3;
  MusicCore::MetricsEvent::LoadUrl v4;

  if (qword_14F9D58 == -1)
  {
    if (!a1)
      return;
  }
  else
  {
    swift_once(&qword_14F9D58, sub_C2C810);
    if (!a1)
      return;
  }
  v2 = objc_msgSend(a1, "performanceMetrics");
  if (v2)
  {
    v3 = v2;
    sub_C32F18(v3, (uint64_t)&v4);
    MetricsReportingController.recordLoadUrlEvent(_:)(&v4);
    sub_C33364(&v4);

  }
}

uint64_t sub_C39038()
{
  return sub_C391D4();
}

uint64_t sub_C390E0()
{
  return sub_C390FC(0xD00000000000001CLL, 0x80000000011045F0);
}

uint64_t sub_C390FC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _QWORD v4[2];
  _BYTE v5[24];
  uint64_t v6;

  v4[0] = a1;
  v4[1] = a2;
  v2 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)v4, (uint64_t)&type metadata for String, v2, (uint64_t)v5);
  if (v6)
  {
    if ((swift_dynamicCast(v4, v5, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      return LOBYTE(v4[0]);
  }
  else
  {
    sub_56024((uint64_t)v5, &qword_14FF2A0);
  }
  return 0;
}

uint64_t sub_C39180@<X0>(uint64_t a1@<X8>)
{
  return sub_C395C0(0xD00000000000001CLL, 0x8000000001104850, a1);
}

uint64_t sub_C3919C(uint64_t a1)
{
  return sub_C396A4(a1, 0xD00000000000001CLL, 0x8000000001104850);
}

uint64_t sub_C391B8()
{
  return sub_C391D4();
}

uint64_t sub_C391D4()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "propertyForBodyKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v6, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_C3B070((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = sub_4E684(0, &qword_14FDE48, NSNumber_ptr);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_56024((uint64_t)v7, &qword_14FF2A0);
    return 0;
  }
}

double sub_C392E8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  double result;

  v7 = a1;
  swift_retain();
  v8 = v3;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setEventType:", v9);

  v10 = v8;
  v11 = v7;
  swift_retain();
  sub_C3C24C(a1, v10, v10, (uint64_t)a1, a2, a3);

  *(_QWORD *)&result = swift_release_n(a3, 2).n128_u64[0];
  return result;
}

id sub_C3952C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Music_SSMetricsComponentRenderEvent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_C39588()
{
  return sub_C390FC(0xD000000000000017, 0x8000000001104800);
}

uint64_t sub_C395A4@<X0>(uint64_t a1@<X8>)
{
  return sub_C395C0(0xD000000000000026, 0x8000000001104820, a1);
}

uint64_t sub_C395C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  _QWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v9[0] = a1;
  v9[1] = a2;
  v4 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)v9, (uint64_t)&type metadata for String, v4, (uint64_t)v10);
  if (v11)
  {
    v5 = type metadata accessor for Date(0);
    v6 = swift_dynamicCast(a3, v10, (char *)&type metadata for Any + 8, v5, 6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a3, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_56024((uint64_t)v10, &qword_14FF2A0);
    v8 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a3, 1, 1, v8);
  }
}

uint64_t sub_C39688(uint64_t a1)
{
  return sub_C396A4(a1, 0xD000000000000026, 0x8000000001104820);
}

uint64_t sub_C396A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD v14[2];
  __int128 v15;
  __int128 v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v8, &qword_14FDE40);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_56024((uint64_t)v8, &qword_14FDE40);
    v15 = 0u;
    v16 = 0u;
  }
  else
  {
    *((_QWORD *)&v16 + 1) = v9;
    v11 = __swift_allocate_boxed_opaque_existential_1Tm(&v15);
    (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 32))(v11, v8, v9);
  }
  v14[0] = a2;
  v14[1] = a3;
  v12 = sub_B9DEC0();
  NSUserDefaults.subscript.setter((uint64_t)&v15, (uint64_t)v14, (uint64_t)&type metadata for String, v12);
  return sub_56024(a1, &qword_14FDE40);
}

id DeviceCapabilitiesObjC.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "init");
}

id Music_SSMetricsPageRenderEvent.__allocating_init(bodyDictionary:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone(v1);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v5 = objc_msgSend(v3, "initWithBodyDictionary:", isa);

  return v5;
}

id Music_SSMetricsPageRenderEvent.init(bodyDictionary:)(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  Class isa;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, "initWithBodyDictionary:", isa);

  return v5;
}

void sub_C39A84(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  char v27;
  int64_t v28;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v28)
      return;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v28)
        return;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v28)
          return;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v28)
            return;
          v12 = *(_QWORD *)(v5 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_24:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_21BAD0(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    v25 = v24[1];
    if (*v24 == v20 && v25 == v19)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(*v24, v25, v20, v19, 0);
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
        return;
    }
  }
  v13 = v11 + 4;
  if (v13 >= v28)
    return;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v28)
      return;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_36:
  __break(1u);
}

uint64_t _s9MusicCore21MetricsPagePropertiesV23__derived_struct_equalsySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _BYTE v47[4];
  int v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF60);
  __chkstk_darwin(v8);
  v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v11);
  v13 = &v47[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v47[-v15];
  __chkstk_darwin(v17);
  v19 = &v47[-v18];
  v20 = a1[1];
  v21 = a2[1];
  if (*a1 == *a2 && v20 == v21
    || (v22 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v20, *a2, v21, 0), result = 0, (v22 & 1) != 0))
  {
    if ((v24 = a1[2], v25 = a1[3], v26 = a2[2], v27 = a2[3], v24 == v26) && v25 == v27
      || (v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v26, v27, 0), result = 0, (v28 & 1) != 0))
    {
      v51 = v13;
      v49 = v7;
      v29 = type metadata accessor for MetricsPageProperties(0);
      sub_5C238((uint64_t)a1 + *(int *)(v29 + 24), (uint64_t)v19, &qword_14FAC20);
      v50 = v29;
      sub_5C238((uint64_t)a2 + *(int *)(v29 + 24), (uint64_t)v16, &qword_14FAC20);
      v30 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_5C238((uint64_t)v19, (uint64_t)v10, &qword_14FAC20);
      sub_5C238((uint64_t)v16, v30, &qword_14FAC20);
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v31((uint64_t)v10, 1, v4) == 1)
      {
        sub_56024((uint64_t)v16, &qword_14FAC20);
        sub_56024((uint64_t)v19, &qword_14FAC20);
        if (v31(v30, 1, v4) == 1)
        {
          sub_56024((uint64_t)v10, &qword_14FAC20);
LABEL_16:
          v36 = v50;
          v37 = *(int *)(v50 + 28);
          v38 = *(_QWORD *)((char *)a2 + v37);
          if (*(_QWORD *)((char *)a1 + v37))
          {
            if (v38)
            {
              swift_bridgeObjectRetain();
              v39 = swift_bridgeObjectRetain();
              sub_C39A84(v39, v38);
              v41 = v40;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v41 & 1) != 0)
              {
LABEL_21:
                v42 = *(int *)(v36 + 32);
                v43 = (_QWORD *)((char *)a1 + v42);
                v44 = *(_QWORD *)((char *)a1 + v42 + 8);
                v45 = (_QWORD *)((char *)a2 + v42);
                v46 = v45[1];
                if (v44)
                {
                  if (v46
                    && (*v43 == *v45 && v44 == v46
                     || (_stringCompareWithSmolCheck(_:_:expecting:)(*v43, v44, *v45, v46, 0) & 1) != 0))
                  {
                    return 1;
                  }
                }
                else if (!v46)
                {
                  return 1;
                }
              }
            }
          }
          else if (!v38)
          {
            goto LABEL_21;
          }
          return 0;
        }
      }
      else
      {
        v32 = (uint64_t)v51;
        sub_5C238((uint64_t)v10, (uint64_t)v51, &qword_14FAC20);
        if (v31(v30, 1, v4) != 1)
        {
          v33 = v49;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 32))(v49, v30, v4);
          v34 = sub_4DD24(qword_14FDF68, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
          v48 = dispatch thunk of static Equatable.== infix(_:_:)(v32, v33, v4, v34);
          v35 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
          v35(v33, v4);
          sub_56024((uint64_t)v16, &qword_14FAC20);
          sub_56024((uint64_t)v19, &qword_14FAC20);
          v35((_BYTE *)v32, v4);
          sub_56024((uint64_t)v10, &qword_14FAC20);
          if ((v48 & 1) == 0)
            return 0;
          goto LABEL_16;
        }
        sub_56024((uint64_t)v16, &qword_14FAC20);
        sub_56024((uint64_t)v19, &qword_14FAC20);
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v32, v4);
      }
      sub_56024((uint64_t)v10, &qword_14FDF60);
      return 0;
    }
  }
  return result;
}

void sub_C3A0AC(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  char v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  _QWORD *receiver;
  unint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  Class isa;
  void *v29;
  uint64_t v30;
  objc_class *v31;
  objc_class *v32;
  NSString v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  id v38;
  NSString v39;
  void *v40;
  uint64_t v41;
  objc_super v42;
  objc_super v43[2];
  objc_super v44;
  __int128 aBlock;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;

  v12 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v13 = sub_C390FC(0xD000000000000017, 0x8000000001104800);

  LOBYTE(aBlock) = v13 & 1;
  v14 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&aBlock, &type metadata for Bool);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "setProperty:forBodyKey:", v14, v15);
  swift_unknownObjectRelease(v14);

  *(_QWORD *)&aBlock = 0x646E655265676170;
  *((_QWORD *)&aBlock + 1) = 0xEA00000000007265;
  v16 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&aBlock, &type metadata for String);
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "setProperty:forBodyKey:", v16, v17);
  swift_unknownObjectRelease(v16);

  if (!a1)
  {
    aBlock = 0u;
    v46 = 0u;
LABEL_16:
    sub_56024((uint64_t)&aBlock, &qword_14FF2A0);
    goto LABEL_17;
  }
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(a1, "valueForConfigurationKey:", v18);

  if (v19)
  {
    _bridgeAnyObjectToAny(_:)(v43, v19);
    swift_unknownObjectRelease(v19);
  }
  else
  {
    memset(v43, 0, sizeof(v43));
  }
  sub_C3B070((uint64_t)v43, (uint64_t)&aBlock);
  if (!*((_QWORD *)&v46 + 1))
    goto LABEL_16;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500A90);
  if (swift_dynamicCast(v43, &aBlock, (char *)&type metadata for Any + 8, v20, 6))
  {
    receiver = v43[0].receiver;
    if (*((_QWORD *)v43[0].receiver + 2)
      && (v22 = sub_21BAD0(0xD000000000000021, 0x80000000011047B0), (v23 & 1) != 0))
    {
      sub_95094(receiver[7] + 32 * v22, (uint64_t)&aBlock);
      v24 = sub_4E684(0, &qword_14FDE48, NSNumber_ptr);
      if (swift_dynamicCast(v43, &aBlock, (char *)&type metadata for Any + 8, v24, 6))
        v25 = v43[0].receiver;
      else
        v25 = 0;
      if ((v13 & 1) == 0)
        goto LABEL_14;
    }
    else
    {
      v25 = 0;
      if ((v13 & 1) == 0)
      {
LABEL_14:
        if (v25)
        {
          v26 = v25;
          v27 = v25;
          isa = (Class)v25;
        }
        else
        {
          v27 = 0;
          isa = 0;
        }
        goto LABEL_22;
      }
    }
    v27 = v25;
    sub_4E684(0, &qword_14FDE48, NSNumber_ptr);
    isa = NSNumber.init(floatLiteral:)(1.0).super.super.isa;
LABEL_22:
    v32 = isa;
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "setProperty:forBodyKey:", v32, v33);

    if (receiver[2])
    {
      v34 = sub_21BAD0(0xD000000000000019, 0x80000000011047E0);
      if ((v35 & 1) != 0)
      {
        sub_95094(receiver[7] + 32 * v34, (uint64_t)&aBlock);
      }
      else
      {
        aBlock = 0u;
        v46 = 0u;
      }
    }
    else
    {
      aBlock = 0u;
      v46 = 0u;
    }
    swift_bridgeObjectRelease(receiver);
    if (*((_QWORD *)&v46 + 1))
    {
      v36 = sub_4E684(0, &qword_14FDE48, NSNumber_ptr);
      if (swift_dynamicCast(v43, &aBlock, (char *)&type metadata for Any + 8, v36, 6))
      {
        v37 = v43[0].receiver;
LABEL_32:
        v38 = v37;
        v39 = String._bridgeToObjectiveC()();
        objc_msgSend(a2, "setProperty:forBodyKey:", v38, v39);

        v47 = a5;
        v48 = a6;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v46 = sub_42D124;
        *((_QWORD *)&v46 + 1) = &block_descriptor_120_2;
        v40 = _Block_copy(&aBlock);
        v41 = v48;
        swift_retain(a6);
        swift_release(v41);
        v42.receiver = a3;
        v42.super_class = (Class)type metadata accessor for Music_SSMetricsPageRenderEvent();
        objc_msgSendSuper2(&v42, "setStandardPropertiesWith:completionHandler:", a4, v40);
        _Block_release(v40);

        return;
      }
    }
    else
    {
      sub_56024((uint64_t)&aBlock, &qword_14FF2A0);
    }
    v37 = 0;
    goto LABEL_32;
  }
LABEL_17:
  v47 = a5;
  v48 = a6;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v46 = sub_42D124;
  *((_QWORD *)&v46 + 1) = &block_descriptor_117_0;
  v29 = _Block_copy(&aBlock);
  v30 = v48;
  swift_retain(a6);
  swift_release(v30);
  v31 = (objc_class *)type metadata accessor for Music_SSMetricsPageRenderEvent();
  v44.receiver = a3;
  v44.super_class = v31;
  objc_msgSendSuper2(&v44, "setStandardPropertiesWith:completionHandler:", a4, v29);
  _Block_release(v29);
}

uint64_t _s9MusicCore18MetricsContentTypeO8rawValueACSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_13A6118, a1, a2, &unk_14FA6C0);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x14)
    return 20;
  else
    return v3;
}

uint64_t sub_C3A67C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C3A6A0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_C38D7C(a1, a2, *(uint64_t (**)(void *, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t block_copy_helper_287(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_287(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_C3A6C4()
{
  unint64_t result;

  result = qword_14FDE50;
  if (!qword_14FDE50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsContentType, &type metadata for MetricsContentType);
    atomic_store(result, (unint64_t *)&qword_14FDE50);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MetricsPageProperties(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MetricsPageProperties(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
}

_QWORD *initializeWithCopy for MetricsPageProperties(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MetricsPageProperties(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MetricsPageProperties(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

_QWORD *assignWithTake for MetricsPageProperties(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsPageProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C3ADD8);
}

uint64_t sub_C3ADD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsPageProperties(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C3AE64);
}

uint64_t sub_C3AE64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_C3AEDC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_109ED08;
  v4[1] = &unk_109ED08;
  sub_C34270(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_109ED20;
    v4[4] = &unk_109ED38;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_C3AFB0 + 4 * byte_109EC03[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_C3AFE4 + 4 * byte_109EBFE[v4]))();
}

uint64_t sub_C3AFE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C3AFEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC3AFF4);
  return result;
}

uint64_t sub_C3B000(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC3B008);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_C3B00C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C3B014(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsContentType()
{
  return &type metadata for MetricsContentType;
}

uint64_t type metadata accessor for Music_SSMetricsComponentRenderEvent()
{
  return objc_opt_self(_TtC9MusicCore35Music_SSMetricsComponentRenderEvent);
}

uint64_t type metadata accessor for Music_SSMetricsPageRenderEvent()
{
  return objc_opt_self(_TtC9MusicCore30Music_SSMetricsPageRenderEvent);
}

uint64_t sub_C3B070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_C3B0B8(void (*a1)(void))
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  _BOOL8 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  NSString v16;
  NSString v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  id v22;
  id v23;
  unint64_t v24;

  v3 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
  v4 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
  v23 = 0;
  v5 = objc_msgSend(v3, "DSIDForUserIdentity:outError:", v4, &v23);

  v6 = v23;
  if (v5)
  {
    v7 = v23;
    objc_msgSend(v1, "setAccountIdentifier:", v5);
    v8 = objc_msgSend(v5, "longLongValue") != 0;
  }
  else
  {
    v9 = v23;
    v10 = _convertNSErrorToError(_:)(v6);

    swift_willThrow(v11);
    swift_errorRelease(v10);
    objc_msgSend(v1, "setAccountIdentifier:", 0);
    v8 = 1;
  }
  v12 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v8);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setProperty:forBodyKey:", v12, v13);

  v14 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
  v15 = objc_msgSend(v14, "musicSubscriptionStatus");

  if (v15)
  {
    switch((unint64_t)objc_msgSend(v15, "statusType"))
    {
      case 0uLL:
      case 1uLL:
      case 3uLL:

        break;
      case 2uLL:
        objc_msgSend(v15, "reasonType");

        break;
      default:
        v23 = 0;
        v24 = 0xE000000000000000;
        _StringGuts.grow(_:)(24);
        v18._object = (void *)0x80000000010C7B40;
        v18._countAndFlagsBits = 0xD000000000000013;
        String.append(_:)(v18);
        objc_msgSend(v15, "statusType");
        v19._countAndFlagsBits = 0xD00000000000001DLL;
        v19._object = (void *)0x8000000001104770;
        String.append(_:)(v19);
        v20._countAndFlagsBits = 32;
        v20._object = (void *)0xE100000000000000;
        String.append(_:)(v20);
        v22 = objc_msgSend(v15, "statusType");
        type metadata accessor for ICMusicSubscriptionStatusType(0);
        _print_unlocked<A, B>(_:_:)(&v22, &v23, v21, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v23, v24, "MusicCore/MetricsUtilities.swift", 32, 2, 151, 0);
        __break(1u);
        JUMPOUT(0xC3B4DCLL);
    }
  }
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setProperty:forBodyKey:", v16, v17);

  a1();
}

uint64_t sub_C3B4EC(uint64_t (*a1)(void))
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  double v10;
  NSString v11;
  char v12;
  unint64_t v13;
  char v14;
  NSString v15;
  NSString v16;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  v2 = v1;
  swift_getObjectType();
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "Topic");
  objc_msgSend(v2, "setTopic:", v4);

  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = objc_msgSend(v5, "infoDictionary");

  if (!v6
    || (v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String), v6, !v7))
  {
    v7 = 0;
    v19 = 0u;
    v20 = 0u;
    v12 = 1;
LABEL_12:
    sub_56024((uint64_t)&v19, &qword_14FF2A0);
    goto LABEL_13;
  }
  if (!*(_QWORD *)(v7 + 16))
  {
    v12 = 0;
    v19 = 0u;
    v20 = 0u;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v8 = sub_21BAD0(0xD000000000000012, 0x8000000001104720);
  if ((v9 & 1) == 0)
  {
    v19 = 0u;
    v20 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_95094(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
  {
LABEL_11:
    v12 = 0;
    goto LABEL_12;
  }
  if ((swift_dynamicCast(&v18, &v19, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v11 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v10 = swift_bridgeObjectRelease().n128_u64[0];
    v12 = 0;
    goto LABEL_14;
  }
  v12 = 0;
LABEL_13:
  v11 = 0;
LABEL_14:
  objc_msgSend(v2, "setApplicationIdentifier:", v11, v10);

  if ((v12 & 1) != 0)
  {
    v19 = 0u;
    v20 = 0u;
LABEL_23:
    sub_56024((uint64_t)&v19, &qword_14FF2A0);
    goto LABEL_24;
  }
  if (*(_QWORD *)(v7 + 16) && (v13 = sub_21BAD0(0xD00000000000001ALL, 0x8000000001104700), (v14 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v7 + 56) + 32 * v13, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_23;
  if ((swift_dynamicCast(&v18, &v19, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_24:
    v15 = 0;
    goto LABEL_25;
  }
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_25:
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setProperty:forBodyKey:", v15, v16);
  swift_unknownObjectRelease(v15);

  return a1();
}

void sub_C3B7E0(void (*a1)(void))
{
  void *v1;
  NSString v3;
  double v4;
  id v5;
  void *v6;
  id v7;
  __n128 v8;
  NSString v9;
  double v10;
  _QWORD v11[6];

  v3 = objc_msgSend((id)objc_opt_self(ICStoreURLRequest), "currentConnectionTypeHeader");
  if (!v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v3 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v4 = swift_bridgeObjectRelease().n128_u64[0];
  }
  objc_msgSend(v1, "setConnection:", v3, v4);

  v5 = objc_allocWithZone((Class)ICStoreRequestContext);
  v11[4] = UIScreen.Dimensions.size.getter;
  v11[5] = 0;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_23E9F0;
  v11[3] = &block_descriptor_99_0;
  v6 = _Block_copy(v11);
  v7 = objc_msgSend(v5, "initWithBlock:", v6);
  _Block_release(v6);
  v8 = swift_release();
  if ((swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v8) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v9 = objc_msgSend(v7, "userAgent");
    if (!v9)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v9 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v10 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v1, "setUserAgent:", v9, v10);

    a1();
  }
}

double sub_C3B970(void *a1, uint64_t a2, void *a3, void (**a4)(_QWORD))
{
  uint64_t v8;
  void (*v9)(void **, _QWORD *);
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  id v14;
  double result;
  _QWORD v16[2];
  void *v17;
  uint64_t v18;

  v8 = swift_allocObject(&unk_13B04F0, 24, 7);
  *(_QWORD *)(v8 + 16) = a4;
  v18 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v9 = *(void (**)(void **, _QWORD *))(a2 + 32);
    _Block_copy(a4);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_BCED68(0, 1);
    v10 = v18;
    v11 = (_QWORD *)swift_allocObject(&unk_13B0518, 56, 7);
    v11[2] = a3;
    v11[3] = a1;
    v11[4] = v10;
    v11[5] = sub_C3C98C;
    v11[6] = v8;
    v17 = a1;
    v12 = swift_allocObject(&unk_13B0540, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_C3C7A0;
    *(_QWORD *)(v12 + 24) = v11;
    v16[0] = sub_62604;
    v16[1] = v12;
    v13 = a1;
    swift_retain();
    swift_retain();
    v14 = a3;
    v9(&v17, v16);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    _Block_copy(a4);
    a4[2](a4);
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_C3BAD0(void *a1, void *a2, void (**a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBEB8);
  v7 = swift_allocObject(v6, 144, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1060490;
  v8 = swift_allocObject(&unk_13B02C0, 24, 7);
  *(_QWORD *)(v8 + 16) = a2;
  v9 = swift_allocObject(&unk_13B02E8, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_C3C6CC;
  *(_QWORD *)(v9 + 24) = v8;
  *(_QWORD *)(v7 + 32) = sub_C3C6D4;
  *(_QWORD *)(v7 + 40) = v9;
  v10 = swift_allocObject(&unk_13B0310, 24, 7);
  *(_QWORD *)(v10 + 16) = a2;
  v11 = swift_allocObject(&unk_13B0338, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_C3C6DC;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v7 + 48) = sub_C3C988;
  *(_QWORD *)(v7 + 56) = v11;
  v12 = swift_allocObject(&unk_13B0360, 24, 7);
  *(_QWORD *)(v12 + 16) = a2;
  v13 = swift_allocObject(&unk_13B0388, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_C3C6FC;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v7 + 64) = sub_C3C988;
  *(_QWORD *)(v7 + 72) = v13;
  v14 = swift_allocObject(&unk_13B03B0, 24, 7);
  *(_QWORD *)(v14 + 16) = a2;
  v15 = swift_allocObject(&unk_13B03D8, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_C3C724;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v7 + 80) = sub_C3C988;
  *(_QWORD *)(v7 + 88) = v15;
  v16 = swift_allocObject(&unk_13B0400, 24, 7);
  *(_QWORD *)(v16 + 16) = a2;
  v17 = swift_allocObject(&unk_13B0428, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_C3C74C;
  *(_QWORD *)(v17 + 24) = v16;
  *(_QWORD *)(v7 + 96) = sub_C3C988;
  *(_QWORD *)(v7 + 104) = v17;
  v18 = swift_allocObject(&unk_13B0450, 24, 7);
  *(_QWORD *)(v18 + 16) = a2;
  v19 = swift_allocObject(&unk_13B0478, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_C3C76C;
  *(_QWORD *)(v19 + 24) = v18;
  *(_QWORD *)(v7 + 112) = sub_C3C988;
  *(_QWORD *)(v7 + 120) = v19;
  v20 = swift_allocObject(&unk_13B04A0, 24, 7);
  *(_QWORD *)(v20 + 16) = a2;
  v21 = swift_allocObject(&unk_13B04C8, 32, 7);
  *(_QWORD *)(v21 + 16) = sub_C3C774;
  *(_QWORD *)(v21 + 24) = v20;
  *(_QWORD *)(v7 + 128) = sub_C3C988;
  *(_QWORD *)(v7 + 136) = v21;
  sub_C3B970(a1, v7, a2, a3);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_C3BD58(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  NSString v7;
  id v8;
  NSString v9;
  uint64_t v10;
  double result;

  v3 = v2;
  v6 = objc_msgSend(v3, "windowHeight");
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setProperty:forBodyKey:", v6, v7);

  v8 = objc_msgSend(v3, "windowWidth");
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setProperty:forBodyKey:", v8, v9);

  sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v10 = swift_allocObject(&unk_13B0270, 32, 7);
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  swift_retain();
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_129E54, v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_C3BE9C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  char v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  void *v24;
  double v25;
  __int128 v26;
  __int128 v27;
  objc_super v28;
  __int128 aBlock;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v12 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v13 = sub_C390FC(0xD000000000000017, 0x8000000001104680);

  objc_msgSend(a2, "setXPSamplingForced:", v13 & 1);
  if (!a1)
  {
    aBlock = 0u;
    v30 = 0u;
LABEL_23:
    sub_56024((uint64_t)&aBlock, &qword_14FF2A0);
    goto LABEL_24;
  }
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(a1, "valueForConfigurationKey:", v14);

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)(&v26, v15);
    swift_unknownObjectRelease(v15);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_C3B070((uint64_t)&v26, (uint64_t)&aBlock);
  if (!*((_QWORD *)&v30 + 1))
    goto LABEL_23;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500A90);
  if (!swift_dynamicCast(&v26, &aBlock, (char *)&type metadata for Any + 8, v16, 6))
    goto LABEL_24;
  v17 = v26;
  if (*(_QWORD *)(v26 + 16))
  {
    v18 = sub_21BAD0(0xD000000000000017, 0x8000000001104630);
    if ((v19 & 1) != 0)
    {
      sub_95094(*(_QWORD *)(v17 + 56) + 32 * v18, (uint64_t)&aBlock);
      if (swift_dynamicCast(&v26, &aBlock, (char *)&type metadata for Any + 8, &type metadata for Double, 6))objc_msgSend(a2, "setXPSamplingPercentageUsers:", *(double *)&v26);
    }
  }
  if (*(_QWORD *)(v17 + 16))
  {
    v20 = sub_21BAD0(0x446E6F6973736573, 0xEF6E6F6974617275);
    if ((v21 & 1) != 0)
    {
      sub_95094(*(_QWORD *)(v17 + 56) + 32 * v20, (uint64_t)&aBlock);
      if (swift_dynamicCast(&v26, &aBlock, (char *)&type metadata for Any + 8, &type metadata for Double, 6))objc_msgSend(a2, "setXPSessionDuration:", *(double *)&v26);
    }
  }
  if (*(_QWORD *)(v17 + 16) && (v22 = sub_21BAD0(0xD000000000000021, 0x8000000001104650), (v23 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v17 + 56) + 32 * v22, (uint64_t)&aBlock);
  }
  else
  {
    aBlock = 0u;
    v30 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v30 + 1))
    goto LABEL_23;
  if ((swift_dynamicCast(&v26, &aBlock, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
    objc_msgSend(a2, "setXPSamplingPercentageCachedResponses:", *(double *)&v26);
LABEL_24:
  if (objc_msgSend(a2, "xpSamplingForced", v26, v27))
  {
    objc_msgSend(a2, "setXPSamplingPercentageUsers:", 1.0);
    objc_msgSend(a2, "setXPSamplingPercentageCachedResponses:", 1.0);
  }
  v31 = a5;
  v32 = a6;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v30 = sub_42D124;
  *((_QWORD *)&v30 + 1) = &block_descriptor_17_10;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  *(_QWORD *)&v25 = swift_release().n128_u64[0];
  v28.receiver = a3;
  v28.super_class = (Class)SSMetricsLoadURLEvent;
  objc_msgSendSuper2(&v28, "setStandardPropertiesWith:completionHandler:", a4, v24, v25);
  _Block_release(v24);
}

void sub_C3C24C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  char v13;
  Class isa;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  _QWORD *receiver;
  unint64_t v20;
  char v21;
  uint64_t v22;
  int v23;
  id v24;
  id v25;
  NSString v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  int v30;
  id v31;
  id v32;
  NSString v33;
  void *v34;
  objc_class *v35;
  objc_super v36[2];
  objc_super v37;
  __int128 aBlock;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v12 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v13 = sub_C390FC(0xD00000000000001CLL, 0x80000000011045F0);

  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "setProperty:forBodyKey:", isa, v15);

  if (!a1)
  {
    aBlock = 0u;
    v39 = 0u;
LABEL_10:
    sub_56024((uint64_t)&aBlock, &qword_14FF2A0);
    goto LABEL_29;
  }
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(a1, "valueForConfigurationKey:", v16);

  if (v17)
  {
    _bridgeAnyObjectToAny(_:)(v36, v17);
    swift_unknownObjectRelease(v17);
  }
  else
  {
    memset(v36, 0, sizeof(v36));
  }
  sub_C3B070((uint64_t)v36, (uint64_t)&aBlock);
  if (!*((_QWORD *)&v39 + 1))
    goto LABEL_10;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500A90);
  if (!swift_dynamicCast(v36, &aBlock, (char *)&type metadata for Any + 8, v18, 6))
    goto LABEL_29;
  receiver = v36[0].receiver;
  if ((v13 & 1) != 0)
  {
    *((_QWORD *)&v39 + 1) = &type metadata for Double;
    *(_QWORD *)&aBlock = 0x3FF0000000000000;
    goto LABEL_14;
  }
  if (*((_QWORD *)v36[0].receiver + 2))
  {
    v20 = sub_21BAD0(0xD000000000000026, 0x8000000001104580);
    if ((v21 & 1) != 0)
    {
      sub_95094(receiver[7] + 32 * v20, (uint64_t)&aBlock);
LABEL_14:
      v22 = sub_4E684(0, &qword_14FDE48, NSNumber_ptr);
      v23 = swift_dynamicCast(v36, &aBlock, (char *)&type metadata for Any + 8, v22, 6);
      v24 = v36[0].receiver;
      if (!v23)
        v24 = 0;
      goto LABEL_18;
    }
  }
  aBlock = 0u;
  v39 = 0u;
  sub_56024((uint64_t)&aBlock, &qword_14FF2A0);
  v24 = 0;
LABEL_18:
  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "setProperty:forBodyKey:", v25, v26);

  if (receiver[2])
  {
    v27 = sub_21BAD0(0xD00000000000001ELL, 0x80000000011045B0);
    if ((v28 & 1) != 0)
    {
      sub_95094(receiver[7] + 32 * v27, (uint64_t)&aBlock);
    }
    else
    {
      aBlock = 0u;
      v39 = 0u;
    }
  }
  else
  {
    aBlock = 0u;
    v39 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v39 + 1))
  {
    v29 = sub_4E684(0, &qword_14FDE48, NSNumber_ptr);
    v30 = swift_dynamicCast(v36, &aBlock, (char *)&type metadata for Any + 8, v29, 6);
    v31 = v36[0].receiver;
    if (!v30)
      v31 = 0;
  }
  else
  {
    sub_56024((uint64_t)&aBlock, &qword_14FF2A0);
    v31 = 0;
  }
  v32 = v31;
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "setProperty:forBodyKey:", v32, v33);

LABEL_29:
  v40 = a5;
  v41 = a6;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v39 = sub_42D124;
  *((_QWORD *)&v39 + 1) = &block_descriptor_10_27;
  v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v35 = (objc_class *)type metadata accessor for Music_SSMetricsComponentRenderEvent();
  v37.receiver = a3;
  v37.super_class = v35;
  objc_msgSendSuper2(&v37, "setStandardPropertiesWith:completionHandler:", a4, v34);
  _Block_release(v34);
}

uint64_t sub_C3C698()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_C3C6C0()
{
  uint64_t v0;

  sub_C38B38(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_C3C6CC(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v3;

  return sub_C38884(a1, a2, a3, *(void **)(v3 + 16));
}

double sub_C3C6D4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_C38960(a1, a2, *(void (**)(uint64_t, uint64_t (*)(), uint64_t, __n128))(v2 + 16));
}

uint64_t sub_C3C6DC(void *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  return sub_C37F68(a1, a2);
}

void sub_C3C6FC(uint64_t a1, void (*a2)(void))
{
  sub_C3B0B8(a2);
}

uint64_t sub_C3C724(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_C3B4EC(a2);
}

double sub_C3C74C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_C3816C(a1, a2, a3);
}

uint64_t sub_C3C76C(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v3;

  return sub_C389D4(a1, a2, a3, *(void **)(v3 + 16));
}

void sub_C3C774(uint64_t a1, void (*a2)(void))
{
  sub_C3B7E0(a2);
}

uint64_t objectdestroy_84Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_C3C7E4()
{
  uint64_t v0;

  sub_C38750(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(void))(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_C3C814()
{
  uint64_t v0;

  sub_C383E4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(__n128))(v0 + 32));
}

unint64_t sub_C3C820()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FF8D0;
  if (!qword_14FF8D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FDF48);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_14FF8D0);
  }
  return result;
}

uint64_t sub_C3C86C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_C3C890()
{
  uint64_t v0;

  sub_C38F90(*(id *)(v0 + 16));
}

uint64_t sub_C3C898()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C3C8BC()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;

  v1 = *(_BYTE **)(v0 + 24);
  result = sub_68C0E8((uint64_t)objc_msgSend(*(id *)(v0 + 16), "cloudStatus"), (uint64_t)&off_13A63B0);
  if ((result & 1) != 0)
    *v1 = 18;
  return result;
}

uint64_t sub_C3C8FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void static MusicCoreAnalytics.sendEvent<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t, __n128);
  uint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_BYTE *, uint64_t);
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  void *v42;
  __n128 v43;
  _BYTE v44[4];
  int v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  void (*v49)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v50;
  uint64_t aBlock[6];

  v5 = a1;
  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(a1);
  v50 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v44[-v9];
  __chkstk_darwin(v11);
  v13 = &v44[-v12];
  if (qword_14F9D60 != -1)
    swift_once(&qword_14F9D60, sub_C3CE98);
  v14 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v14, (uint64_t)qword_1582050);
  v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
  v15(v13, v5, a2);
  v49 = v15;
  v16 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v15)(v10, v5, a2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc(22, -1);
    v46 = v17;
    v21 = a3;
    v22 = v20;
    v47 = swift_slowAlloc(64, -1);
    aBlock[0] = v47;
    *(_DWORD *)v22 = 136315395;
    v48 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    v45 = v19;
    v23 = (char *)v48(a2, v21);
    *(_QWORD *)(v22 + 4) = sub_BA95EC(v23, v24, aBlock);
    v25 = swift_bridgeObjectRelease();
    v26 = v5;
    v27 = *(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8);
    v27(v13, a2, v25);
    *(_WORD *)(v22 + 12) = 2081;
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(a2, v21);
    ((void (*)(_BYTE *, uint64_t))v27)(v10, a2);
    v5 = v26;
    v29 = sub_C3CFB4();
    v30 = (char *)Dictionary.description.getter(v28, &type metadata for String, v29, &protocol witness table for String);
    v32 = v31;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v22 + 14) = sub_BA95EC(v30, v32, aBlock);
    swift_bridgeObjectRelease();
    v33 = v46;
    _os_log_impl(&dword_0, v46, (os_log_type_t)v45, "Send analytics event: %s, payload: %{private}s", (uint8_t *)v22, 0x16u);
    v34 = v47;
    swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    v35 = v22;
    a3 = v21;
    swift_slowDealloc(v35, -1, -1);

    v48(a2, v21);
  }
  else
  {
    v36 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v36(v10, a2);
    v36(v13, a2);

    (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  }
  v37 = v50;
  v49(v50, v5, a2);
  v38 = *(unsigned __int8 *)(v6 + 80);
  v39 = (v38 + 32) & ~v38;
  v40 = swift_allocObject(&unk_13B07D0, v39 + v7, v38 | 7);
  *(_QWORD *)(v40 + 16) = a2;
  *(_QWORD *)(v40 + 24) = a3;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v40 + v39, v37, a2);
  v41 = String._bridgeToObjectiveC()();
  aBlock[4] = (uint64_t)sub_C3CF64;
  aBlock[5] = v40;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_C3CE24;
  aBlock[3] = (uint64_t)&block_descriptor_292;
  v42 = _Block_copy(aBlock);
  swift_retain();
  v43 = swift_release();
  AnalyticsSendEventLazy(v41, v42, v43);
  _Block_release(v42);
  swift_release();
  swift_bridgeObjectRelease();

}

void static MusicCoreAnalytics.sendEvent(eventName:eventPayload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6;
  void *v7;
  __n128 v8;
  _QWORD v9[6];

  v6 = String._bridgeToObjectiveC()();
  v9[4] = a3;
  v9[5] = a4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_C3CE24;
  v9[3] = &block_descriptor_3_13;
  v7 = _Block_copy(v9);
  swift_retain();
  v8 = swift_release();
  AnalyticsSendEventLazy(v6, v7, v8);
  _Block_release(v7);

}

Class sub_C3CE24(uint64_t a1)
{
  uint64_t (*v1)(__n128);
  __n128 v2;
  uint64_t v3;
  NSDictionary v4;

  v1 = *(uint64_t (**)(__n128))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_C3CFB4();
    v4.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.isa = 0;
  }
  return v4.super.isa;
}

uint64_t sub_C3CE98()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_1582050);
  __swift_project_value_buffer(v0, (uint64_t)qword_1582050);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x7363697274654DLL, 0xE700000000000000);
}

uint64_t sub_C3CF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_C3CF64()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 24) + 16))();
}

uint64_t block_copy_helper_288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_288(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_C3CFB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FF000;
  if (!qword_14FF000)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_14FF000);
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicCoreAnalytics()
{
  return &type metadata for MusicCoreAnalytics;
}

void *MetricsEvent.PageRender.performanceMetrics.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 16, v4, 0, 0);
  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t MetricsEvent.PageRender.onScreenResourcesAppearEndTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return *(_QWORD *)(v0 + 24);
}

uint64_t MetricsEvent.PageRender.pageUserInteractiveTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 40, v2, 0, 0);
  return *(_QWORD *)(v0 + 40);
}

uint64_t MetricsEvent.PageRender.resourceRequestStartTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 56, v2, 0, 0);
  return *(_QWORD *)(v0 + 56);
}

uint64_t MetricsEvent.PageRender.pageEndTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 72, v2, 0, 0);
  return *(_QWORD *)(v0 + 72);
}

uint64_t MetricsEvent.PageRender.pageInterruptTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 0, 0);
  return *(_QWORD *)(v0 + 88);
}

uint64_t MetricsEvent.PageRender.pageAppearTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 104, v2, 0, 0);
  return *(_QWORD *)(v0 + 104);
}

uint64_t MetricsEvent.PageRender.pageRequestTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 120, v2, 0, 0);
  return *(_QWORD *)(v0 + 120);
}

uint64_t MetricsEvent.PageRender.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 152);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t MetricsEvent.PageRender.request.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 152);
  swift_beginAccess(v4, v7, 33, 0);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
  return swift_endAccess(v7);
}

uint64_t (*MetricsEvent.PageRender.request.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152), a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t MetricsEvent.PageRender.pageProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5FFD54(v1 + *(_QWORD *)(*(_QWORD *)v1 + 160), a1);
}

uint64_t MetricsEvent.PageRender.__allocating_init(pageProperties:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  MetricsEvent.PageRender.init(pageProperties:)(a1);
  return v3;
}

uint64_t *MetricsEvent.PageRender.init(pageProperties:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  v1[2] = 0;
  v1[3] = 0;
  *((_BYTE *)v1 + 32) = 1;
  v1[5] = 0;
  *((_BYTE *)v1 + 48) = 1;
  v1[7] = 0;
  *((_BYTE *)v1 + 64) = 1;
  v1[9] = 0;
  *((_BYTE *)v1 + 80) = 1;
  v1[11] = 0;
  *((_BYTE *)v1 + 96) = 1;
  v1[13] = 0;
  *((_BYTE *)v1 + 112) = 1;
  v1[15] = 0;
  *((_BYTE *)v1 + 128) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 56))((uint64_t)v1 + *(_QWORD *)(v3 + 152), 1, 1);
  *((_BYTE *)v1 + *(_QWORD *)(*v1 + 168)) = 0;
  sub_12B948(a1, (uint64_t)v1 + *(_QWORD *)(*v1 + 160));
  return v1;
}

void MetricsEvent.PageRender.updatePerformanceMetrics(_:with:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];
  _BYTE v14[24];

  swift_beginAccess(v3 + 16, v13, 1, 0);
  v7 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = a1;
  v8 = a1;

  v9 = *(void **)(v3 + 16);
  if (v9)
  {
    objc_msgSend(v9, "responseEndTime");
    v11 = v10;
    swift_beginAccess(v3 + 24, v14, 0, 0);
    if ((*(_BYTE *)(v3 + 32) & 1) == 0)
    {
      swift_beginAccess(v3 + 72, v12, 1, 0);
      *(_QWORD *)(v3 + 72) = v11;
      *(_BYTE *)(v3 + 80) = 0;
      sub_C3D494(a2, a3);
    }
  }
}

double sub_C3D494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  double result;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  if ((*(_BYTE *)(v2 + v3) & 1) == 0)
  {
    *(_BYTE *)(v2 + v3) = 1;
    sub_BF3848();
    v6 = (_QWORD *)swift_allocObject(&unk_13B0948, 40, 7);
    v6[2] = v2;
    v6[3] = a1;
    v6[4] = a2;
    swift_bridgeObjectRetain();
    swift_retain(v2);
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_C3DC0C, (uint64_t)v6);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageAppear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;
  double v8;
  _BYTE v10[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = swift_beginAccess(v1 + 104, v10, 1, 0);
  if (*(_BYTE *)(v1 + 112) == 1)
  {
    v7 = Date.init()(v6);
    v8 = Date.timeIntervalSince1970.getter(v7);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(double *)(v1 + 104) = v8;
    *(_BYTE *)(v1 + 112) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageRequest()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;
  double v8;
  _BYTE v10[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = swift_beginAccess(v1 + 120, v10, 1, 0);
  if (*(_BYTE *)(v1 + 128) == 1)
  {
    v7 = Date.init()(v6);
    v8 = Date.timeIntervalSince1970.getter(v7);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(double *)(v1 + 120) = v8;
    *(_BYTE *)(v1 + 128) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageAsUserInteractive()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;
  double v8;
  _BYTE v10[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = swift_beginAccess(v1 + 40, v10, 1, 0);
  if (*(_BYTE *)(v1 + 48) == 1)
  {
    v7 = Date.init()(v6);
    v8 = Date.timeIntervalSince1970.getter(v7);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(double *)(v1 + 40) = v8;
    *(_BYTE *)(v1 + 48) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markResourceRequestStartTime()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;
  double v8;
  _BYTE v10[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = swift_beginAccess(v1 + 56, v10, 1, 0);
  if (*(_BYTE *)(v1 + 64) == 1)
  {
    v7 = Date.init()(v6);
    v8 = Date.timeIntervalSince1970.getter(v7);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(double *)(v1 + 56) = v8;
    *(_BYTE *)(v1 + 64) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markOnScreenResourcesAppearEndTime(with:)(Swift::String_optional with)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  double v11;
  double v12;
  void *v13;
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];

  v2 = v1;
  object = with.value._object;
  countAndFlagsBits = with.value._countAndFlagsBits;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = swift_beginAccess(v2 + 24, v17, 1, 0);
  if (*(_BYTE *)(v2 + 32) == 1)
  {
    v10 = Date.init()(v9);
    v11 = Date.timeIntervalSince1970.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(double *)(v2 + 24) = v11;
    *(_BYTE *)(v2 + 32) = 0;
    *(_QWORD *)&v12 = swift_beginAccess(v2 + 16, v16, 0, 0).n128_u64[0];
    v13 = *(void **)(v2 + 16);
    if (v13)
    {
      objc_msgSend(v13, "responseEndTime", v12);
      swift_beginAccess(v2 + 72, v15, 1, 0);
      *(double *)(v2 + 72) = v11;
      *(_BYTE *)(v2 + 80) = 0;
      sub_C3D494(countAndFlagsBits, (uint64_t)object);
    }
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageDisappearanceAndRecordIfNecessary(with:)(Swift::String_optional with)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __n128 v9;
  uint64_t v10;
  double v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v2 = v1;
  object = with.value._object;
  countAndFlagsBits = with.value._countAndFlagsBits;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(v2 + 72, v13, 0, 0);
  if (*(_BYTE *)(v2 + 80) == 1)
  {
    v9 = swift_beginAccess(v2 + 88, v12, 1, 0);
    if (*(_BYTE *)(v2 + 96) == 1)
    {
      v10 = Date.init()(v9);
      v11 = Date.timeIntervalSince1970.getter(v10);
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
      *(double *)(v2 + 88) = v11;
      *(_BYTE *)(v2 + 96) = 0;
    }
  }
  sub_C3D494(countAndFlagsBits, (uint64_t)object);
}

void sub_C3DA20(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_14F9D58 != -1)
    swift_once(&qword_14F9D58, sub_C2C810);
  MetricsReportingController.recordPageRenderEvent<A>(_:pageContext:)(a1, a2, a3);
}

id *MetricsEvent.PageRender.deinit()
{
  id *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v1 = *v0;

  v2 = (char *)v0 + *((_QWORD *)*v0 + 19);
  v3 = type metadata accessor for Optional(0, v1[10]);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_1BC340((uint64_t)v0 + *((_QWORD *)*v0 + 20));
  return v0;
}

double MetricsEvent.PageRender.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  MetricsEvent.PageRender.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_C3DB20(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[11];

  v5[0] = "\b";
  v5[1] = &unk_109EE98;
  v5[2] = &unk_109EE98;
  v5[3] = &unk_109EE98;
  v5[4] = &unk_109EE98;
  v5[5] = &unk_109EE98;
  v5[6] = &unk_109EE98;
  v5[7] = &unk_109EE98;
  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v5[8] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for MetricsPageProperties(319);
    if (v4 <= 0x3F)
    {
      v5[9] = *(_QWORD *)(result - 8) + 64;
      v5[10] = &unk_109EEB0;
      result = swift_initClassMetadata2(a1, 0, 11, v5, a1 + 88);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MetricsEvent.PageRender(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetricsEvent.PageRender);
}

uint64_t sub_C3DBE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_C3DC0C()
{
  uint64_t v0;

  sub_C3DA20(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

__n128 static ApplicationCapabilities.shared.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __n128 result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v2 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_109EFA8);
  v4 = swift_getKeyPath(&unk_109EFD0);
  static Published.subscript.getter(&v16, v2, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = BYTE1(v16);
  v6 = BYTE2(v16);
  v7 = v22;
  v8 = v23;
  v9 = v24;
  v10 = v25;
  v12 = v17;
  result = v18;
  v13 = v19;
  v14 = v20;
  v15 = v21;
  *(_BYTE *)a1 = v16;
  *(_BYTE *)(a1 + 1) = v5;
  *(_BYTE *)(a1 + 2) = v6;
  *(_OWORD *)(a1 + 8) = v12;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v13;
  *(_OWORD *)(a1 + 56) = v14;
  *(_OWORD *)(a1 + 72) = v15;
  *(_BYTE *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  return result;
}

uint64_t *ApplicationCapabilities.Controller.shared.unsafeMutableAddressor()
{
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  return &static ApplicationCapabilities.Controller.shared;
}

__n128 ApplicationCapabilities.Controller.capabilities.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __n128 result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  KeyPath = swift_getKeyPath(&unk_109EFA8);
  v4 = swift_getKeyPath(&unk_109EFD0);
  static Published.subscript.getter(&v16, v1, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  v5 = BYTE1(v16);
  v6 = BYTE2(v16);
  v7 = v22;
  v8 = v23;
  v9 = v24;
  v10 = v25;
  v12 = v17;
  result = v18;
  v13 = v19;
  v14 = v20;
  v15 = v21;
  *(_BYTE *)a1 = v16;
  *(_BYTE *)(a1 + 1) = v5;
  *(_BYTE *)(a1 + 2) = v6;
  *(_OWORD *)(a1 + 8) = v12;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v13;
  *(_OWORD *)(a1 + 56) = v14;
  *(_OWORD *)(a1 + 72) = v15;
  *(_BYTE *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  return result;
}

uint64_t ApplicationCapabilities.hasNetworkConnectivity.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ApplicationCapabilities.isCloudLibraryEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t ApplicationCapabilities.Service.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C3DE58 + 4 * byte_109EED0[a1]))(0x636973756DLL, 0xE500000000000000);
}

uint64_t sub_C3DE58()
{
  return 0x646956636973756DLL;
}

unint64_t sub_C3DE78()
{
  return 0xD000000000000013;
}

uint64_t ApplicationCapabilities.Service.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C3DF8C + 4 * byte_109EEDB[a1]))(0x636973756DLL, 0xE500000000000000);
}

uint64_t sub_C3DF8C()
{
  return 0x646956636973756DLL;
}

unint64_t sub_C3DFAC()
{
  return 0xD000000000000013;
}

Swift::Int sub_C3E094()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = ApplicationCapabilities.Service.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_C3E0F4(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = ApplicationCapabilities.Service.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_C3E134()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = ApplicationCapabilities.Service.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_C3E190@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore23ApplicationCapabilitiesV7ServiceO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_C3E1BC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = ApplicationCapabilities.Service.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_C3E1E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = ApplicationCapabilities.Service.rawValue.getter(*a1);
  v5 = v4;
  v6 = ApplicationCapabilities.Service.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_C3E26C()
{
  unsigned __int8 *v0;

  return ApplicationCapabilities.Service.rawValue.getter(*v0);
}

Swift::Void __swiftcall ApplicationCapabilities.setServiceEnabled(_:service:)(Swift::Bool _, MusicCore::ApplicationCapabilities::Service service)
{
  if (objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection"))
    __asm { BR              X11 }
  __break(1u);
  JUMPOUT(0xC3E36CLL);
}

uint64_t ApplicationCapabilities.ratingWarning.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  swift_bridgeObjectRetain(v3);
  return swift_bridgeObjectRetain(v2);
}

uint64_t ApplicationCapabilities.RatingWarning.threshold.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ApplicationCapabilities.RatingWarning.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t ApplicationCapabilities.RatingWarning.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  _QWORD v23[2];

  v1 = v0;
  strcpy((char *)v23, "RatingWarning(");
  HIBYTE(v23[1]) = -18;
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 10;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = 0x6C6F687365726874;
  v5._object = (void *)0xEA00000000003D64;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(0xEA00000000003D64);
  v6 = v0[1];
  v7 = v1[2];
  swift_bridgeObjectRetain(v7);
  v8 = Optional<A>.description.getter(v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease(v7);
  v11._countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v10);
  v12._countAndFlagsBits = 10;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0x3D656C746974;
  v13._object = (void *)0xE600000000000000;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(0xE600000000000000);
  v15 = v1[3];
  v14 = v1[4];
  swift_bridgeObjectRetain(v14);
  v16 = Optional<A>.description.getter(v15, v14);
  v18 = v17;
  swift_bridgeObjectRelease(v14);
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v18);
  v20._countAndFlagsBits = 10;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x3D6567617373656DLL;
  v21._object = (void *)0xE800000000000000;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(0xE800000000000000);
  return v23[0];
}

uint64_t sub_C3E5D8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return _s9MusicCore23ApplicationCapabilitiesV13RatingWarningV23__derived_struct_equalsySbAE_AEtFZ_0(v5, v7) & 1;
}

uint64_t ApplicationCapabilities.subscriptionState.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

MusicCore::ApplicationCapabilities::SubscriptionState_optional __swiftcall ApplicationCapabilities.SubscriptionState.init(rawValue:)(Swift::String rawValue)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &off_13A6508;
  return (MusicCore::ApplicationCapabilities::SubscriptionState_optional)sub_C484C8(rawValue, v1);
}

uint64_t ApplicationCapabilities.SubscriptionState.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C3E680 + 4 * byte_109EEE6[a1]))(0x6564696365646E75, 0xE900000000000064);
}

uint64_t sub_C3E680()
{
  return 0x63697373616C63;
}

uint64_t sub_C3E698()
{
  return 0x6269726373627573;
}

uint64_t sub_C3E6B4()
{
  return 0x6275536563696F76;
}

uint64_t sub_C3E6D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_BB7E80(*a1, *a2);
}

void sub_C3E6E4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_C3E734()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x63697373616C63, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

void sub_C3E7B4()
{
  __asm { BR              X10 }
}

uint64_t sub_C3E7F4(uint64_t a1)
{
  String.hash(into:)(a1, 0x63697373616C63, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_C3E860()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_C3E8AC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x63697373616C63, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

unint64_t sub_C3E92C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_13A6508;
  result = sub_C484C8(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_C3E960()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_C3E994 + 4 * byte_109EEF6[*v0]))();
}

void sub_C3E994(_QWORD *a1@<X8>)
{
  *a1 = 0x63697373616C63;
  a1[1] = 0xE700000000000000;
}

void sub_C3E9B0(_QWORD *a1@<X8>)
{
  *a1 = 0x6269726373627573;
  a1[1] = 0xEA00000000007265;
}

void sub_C3E9D0(_QWORD *a1@<X8>)
{
  *a1 = 0x6275536563696F76;
  a1[1] = 0xEF72656269726373;
}

uint64_t sub_C3E9F8(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  sub_BB8034(*(_BYTE *)a1);
  return v4 & ~(v2 ^ v3) & 1;
}

uint64_t ApplicationCapabilities.Tabs.description.getter(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  char v19;
  Swift::String v20;
  uint64_t v21;
  unint64_t v22;

  v21 = 0x2873626154;
  v22 = 0xE500000000000000;
  v3 = swift_bridgeObjectRetain();
  v4 = Array.description.getter(v3, &type metadata for TabIdentifier);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 10;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = v4;
  v8._object = v6;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0xD000000000000010;
  v20._object = (void *)0x8000000001104910;
  v19 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE028);
  v10._countAndFlagsBits = String.init<A>(describing:)(&v19, v9);
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 10;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0xD000000000000012;
  v20._object = (void *)0x8000000001104930;
  v12 = swift_bridgeObjectRetain();
  v13 = Array.description.getter(v12, &type metadata for ApplicationCapabilities.Tabs.Configuration);
  v15 = v14;
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 10;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t static ApplicationCapabilities.Tabs.__derived_struct_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v10;

  if ((sub_C3EF94(a1, a4) & 1) == 0)
    return 0;
  if (a2 != 6)
  {
    if (a5 == 6)
      return 0;
    sub_BB7E84(a2);
    if ((v10 & 1) == 0)
      return 0;
    return sub_C3F1A0(a3, a6);
  }
  if (a5 == 6)
    return sub_C3F1A0(a3, a6);
  return 0;
}

uint64_t sub_C3EC84(uint64_t a1, uint64_t a2)
{
  return sub_C3F450(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (unint64_t *)&qword_14FE2A0, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
}

uint64_t sub_C3ECA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_C3EF94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_C3F1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

id sub_C3F3F8(uint64_t a1, uint64_t a2)
{
  return sub_30DB98(a1, a2, (uint64_t)&qword_14FE280, NSSortDescriptor_ptr);
}

id sub_C3F40C(uint64_t a1, uint64_t a2)
{
  return sub_30DB98(a1, a2, (uint64_t)&qword_14FE288, MPIdentifierSet_ptr);
}

id sub_C3F420(uint64_t a1, uint64_t a2)
{
  return sub_30DB98(a1, a2, (uint64_t)&qword_14FE290, MPModelObject_ptr);
}

uint64_t sub_C3F434(uint64_t a1, uint64_t a2)
{
  return sub_C3F450(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, &qword_14FE298, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
}

uint64_t sub_C3F450(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, unint64_t, uint64_t);
  uint64_t v22;
  unint64_t *v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t, uint64_t);
  BOOL v30;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, unint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);

  v10 = a3(0);
  __chkstk_darwin(v10);
  v14.n128_f64[0] = __chkstk_darwin(v11);
  v16 = (char *)&v32 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 == *(_QWORD *)(a2 + 16))
  {
    if (!v17 || a1 == a2)
    {
      v27 = 1;
    }
    else
    {
      v35 = v13;
      v36 = v12;
      v37 = a3;
      v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v32 = *(_QWORD *)(v12 + 72);
      v33 = a1;
      v34 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
      v19 = v17 - 1;
      v20 = v13;
      do
      {
        v21 = v34;
        ((void (*)(char *, unint64_t, uint64_t, __n128))v34)(v16, a1 + v18, v10, v14);
        v22 = a2;
        v21(v20, a2 + v18, v10);
        v23 = a4;
        v24 = a4;
        v25 = a5;
        v26 = sub_4DD24(v24, v37, a5);
        v27 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v20, v10, v26);
        v28 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
        v28(v20, v10);
        v28((uint64_t)v16, v10);
        v30 = v19-- != 0;
        if ((v27 & 1) == 0)
          break;
        v18 += v32;
        a5 = v25;
        a4 = v23;
        a2 = v22;
        a1 = v33;
      }
      while (v30);
    }
  }
  else
  {
    v27 = 0;
  }
  return v27 & 1;
}

uint64_t sub_C3F5F4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if ((sub_C3EF94(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  if (v2 != 6)
  {
    if (v4 == 6)
      return 0;
    sub_BB7E84(v2);
    if ((v6 & 1) == 0)
      return 0;
    return sub_C3F1A0(v3, v5);
  }
  if (v4 == 6)
    return sub_C3F1A0(v3, v5);
  return 0;
}

uint64_t sub_C3F684()
{
  uint64_t v0;

  return ApplicationCapabilities.Tabs.description.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t ApplicationCapabilities.tabs.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  return v1;
}

void sub_C3F6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[512];
  _BYTE v22[8];
  id v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _BYTE v27[16];
  _BYTE v28[32];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
  inited = swift_initStackObject(v2, v21);
  *(_OWORD *)(inited + 16) = xmmword_10612D0;
  *(_QWORD *)(inited + 32) = 0x64656E6769537369;
  *(_QWORD *)(inited + 40) = 0xEA00000000006E49;
  *(_BYTE *)(inited + 48) = *(_BYTE *)v0;
  *(_QWORD *)(inited + 72) = &type metadata for Bool;
  *(_QWORD *)(inited + 80) = 0xD000000000000016;
  *(_QWORD *)(inited + 88) = 0x80000000010C2F60;
  *(_BYTE *)(inited + 96) = *(_BYTE *)(v0 + 1);
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  *(_QWORD *)(inited + 128) = 0xD000000000000015;
  *(_QWORD *)(inited + 136) = 0x80000000010D1F40;
  *(_BYTE *)(inited + 144) = *(_BYTE *)(v0 + 2);
  *(_QWORD *)(inited + 168) = &type metadata for Bool;
  *(_QWORD *)(inited + 176) = 0xD000000000000018;
  *(_QWORD *)(inited + 184) = 0x8000000001105090;
  sub_C3FBA4(v0, (uint64_t *)(inited + 192));
  *(_QWORD *)(inited + 224) = 0x536465776F6C6C61;
  *(_QWORD *)(inited + 232) = 0xEF73656369767265;
  v4 = *(_QWORD *)(v0 + 24);
  v5 = sub_C482D8();
  v6 = swift_bridgeObjectRetain();
  v7 = Set.description.getter(v6, &type metadata for ApplicationCapabilities.Service, v5);
  v9 = v8;
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(inited + 240) = v7;
  *(_QWORD *)(inited + 248) = v9;
  *(_QWORD *)(inited + 264) = &type metadata for String;
  *(_QWORD *)(inited + 272) = 0xD000000000000012;
  *(_QWORD *)(inited + 280) = 0x80000000011050B0;
  v10 = *(_QWORD *)(v1 + 32);
  v11 = swift_bridgeObjectRetain();
  v12 = Set.description.getter(v11, &type metadata for ApplicationCapabilities.Service, v5);
  v14 = v13;
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(inited + 288) = v12;
  *(_QWORD *)(inited + 296) = v14;
  *(_QWORD *)(inited + 312) = &type metadata for String;
  strcpy((char *)(inited + 320), "ratingWarning");
  *(_WORD *)(inited + 334) = -4864;
  v15 = *(_OWORD *)(v1 + 56);
  v24 = *(_OWORD *)(v1 + 40);
  v25 = v15;
  v26 = *(_QWORD *)(v1 + 72);
  sub_5C090((uint64_t)&v24 + 8, (uint64_t)v28, &qword_14FC108);
  sub_5C090((uint64_t)&v25 + 8, (uint64_t)v27, &qword_14FC108);
  sub_1391E0((uint64_t)v28);
  sub_1391E0((uint64_t)v27);
  v16 = ApplicationCapabilities.RatingWarning.description.getter();
  v18 = v17;
  sub_8B134((uint64_t)v28);
  sub_8B134((uint64_t)v27);
  *(_QWORD *)(inited + 336) = v16;
  *(_QWORD *)(inited + 344) = v18;
  *(_QWORD *)(inited + 360) = &type metadata for String;
  *(_QWORD *)(inited + 368) = 0xD000000000000012;
  *(_QWORD *)(inited + 376) = 0x80000000010CFCE0;
  sub_5C090(v1 + 80, (uint64_t)&v23, (uint64_t *)&unk_14FE2F0);
  sub_5C090((uint64_t)&v23, (uint64_t)v22, (uint64_t *)&unk_14FE2F0);
  sub_5F430(&v23);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE2F0);
  *(_QWORD *)(inited + 384) = String.init<A>(describing:)(v22, v19);
  *(_QWORD *)(inited + 392) = v20;
  *(_QWORD *)(inited + 408) = &type metadata for String;
  *(_QWORD *)(inited + 416) = 0xD000000000000011;
  *(_QWORD *)(inited + 424) = 0x80000000011050D0;
  __asm { BR              X12 }
}

unint64_t sub_C3F9C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;

  v0[54] = 0x63697373616C63;
  v0[55] = 0xE700000000000000;
  v0[57] = v2;
  v0[58] = 1935827316;
  v0[59] = 0xE400000000000000;
  v4 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v3 - 192) = v4;
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_C058BC(0, v5, 0);
    __asm { BR              X9 }
  }
  v0[63] = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
  v0[60] = _swiftEmptyArrayStorage;
  return sub_C263E0((uint64_t)v0);
}

void sub_C3FBA4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  Swift::String v5;
  void *object;
  Swift::String v7;

  v3 = 0xE700000000000000;
  v4 = 0x6E776F6E6B6E75;
  switch(*(_QWORD *)(a1 + 16))
  {
    case 0:
      break;
    case 1:
      v4 = 0x64656C62616E65;
      break;
    case 2:
      v3 = 0xE800000000000000;
      v4 = 0x64656C6261736964;
      break;
    case 3:
      v3 = 0xE500000000000000;
      v4 = 0x6564696C67;
      break;
    default:
      v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease(object);
      v7._countAndFlagsBits = 62;
      v7._object = (void *)0xE100000000000000;
      String.append(_:)(v7);
      v4 = 0x3C6E776F6E6B6E75;
      v3 = 0xE800000000000000;
      break;
  }
  a2[3] = (uint64_t)&type metadata for String;
  *a2 = v4;
  a2[1] = v3;
}

BOOL sub_C3FCB8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[7];
  uint64_t v13;
  _OWORD v14[7];
  uint64_t v15;

  v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  v13 = *(_QWORD *)(a1 + 112);
  v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v15 = *((_QWORD *)a2 + 14);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return _s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)v12, (unsigned __int8 *)v14);
}

uint64_t sub_C3FD38()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for ApplicationCapabilities.Controller(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_C3FDB4();
  static ApplicationCapabilities.Controller.shared = result;
  return result;
}

double static ApplicationCapabilities.Controller.shared.getter()
{
  double result;

  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_C3FDB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  NSString v25;
  uint64_t v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _BYTE v39[32];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v1 = v0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate) = 0;
  v2 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_stateHandler;
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
  v3 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_lock;
  v4 = type metadata accessor for UnfairLock();
  swift_allocObject(v4, 24, 7);
  *(_QWORD *)(v0 + v3) = UnfairLock.init()();
  v5 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag;
  if (qword_14F9E30 != -1)
    swift_once(&qword_14F9E30, sub_C4F36C);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2B0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_B9DEA8);
  *(_QWORD *)(v0 + v5) = v40;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bagObserver) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bindings) = _swiftEmptyArrayStorage;
  result = UIApp;
  if (UIApp)
  {
    *(_BYTE *)(v0 + 16) = objc_msgSend(UIApp, "launchedToTest");
    v7 = type metadata accessor for MusicTabsDictionaryProvider();
    swift_allocObject(v7, 56, 7);
    v8 = sub_D7B69C(0x626154636973756DLL, 0xE900000000000073, (uint64_t)sub_C401BC, 0);
    *(_QWORD *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_musicTabsDictionaryProvider) = v8;
    swift_retain(v8);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_B9DEA8);
    v9 = *(_BYTE *)(v0 + 16);
    swift_retain(v8);
    sub_C467E4((void *)v40, (uint64_t)v8, v9, (uint64_t)&v40);
    v10 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities;
    v11 = v45;
    *(_OWORD *)(v10 + 64) = v44;
    *(_OWORD *)(v10 + 80) = v11;
    *(_OWORD *)(v10 + 96) = v46;
    *(_QWORD *)(v10 + 112) = v47;
    v12 = v41;
    *(_OWORD *)v10 = v40;
    *(_OWORD *)(v10 + 16) = v12;
    v13 = v43;
    v14 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities;
    *(_OWORD *)(v10 + 32) = v42;
    *(_OWORD *)(v10 + 48) = v13;
    swift_beginAccess(v14, v39, 33, 0);
    v35 = v44;
    v36 = v45;
    v37 = v46;
    v38 = v47;
    v31 = v40;
    v32 = v41;
    v33 = v42;
    v34 = v43;
    sub_10EA74((uint64_t)&v40);
    Published.init(initialValue:)(&v31, &type metadata for ApplicationCapabilities);
    swift_endAccess(v39);
    v15 = swift_allocObject(&unk_13B0D60, 24, 7);
    swift_weakInit(v15 + 16, v1);
    swift_retain(v15);
    sub_D7B55C((uint64_t)sub_C4828C, v15);
    swift_release_n(v15, 2);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C47F20);
    sub_C40384();
    v16 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
    v24 = (void *)static OS_dispatch_queue.main.getter(v16, v17, v18, v19, v20, v21, v22, v23, v31, *((_QWORD *)&v31 + 1), v32, *((_QWORD *)&v32 + 1), v33, *((_QWORD *)&v33 + 1), v34);
    v25 = String._bridgeToObjectiveC()();
    v26 = swift_allocObject(&unk_13B0D60, 24, 7);
    swift_weakInit(v26 + 16, v1);
    *(_QWORD *)&v33 = sub_C48294;
    *((_QWORD *)&v33 + 1) = v26;
    *(_QWORD *)&v31 = _NSConcreteStackBlock;
    *((_QWORD *)&v31 + 1) = 1107296256;
    *(_QWORD *)&v32 = sub_C40C98;
    *((_QWORD *)&v32 + 1) = &block_descriptor_293;
    v27 = _Block_copy(&v31);
    v28 = swift_release(*((_QWORD *)&v33 + 1));
    v29 = MSVLogAddStateHandler(v24, v25, v27, v28);
    swift_release(v8);
    _Block_release(v27);

    v30 = v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_stateHandler;
    *(_QWORD *)v30 = v29;
    *(_BYTE *)(v30 + 8) = 0;
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_C401BC()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = sub_C40208();

  return v1;
}

uint64_t sub_C40208()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;

  LOBYTE(v4) = 1;
  v0 = sub_C4806C();
  v1 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)&_s3KeyON, v0, v1, (uint64_t)v5);
  if (v6)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE308);
    if (swift_dynamicCast(&v4, v5, (char *)&type metadata for Any + 8, v2, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_56024((uint64_t)v5, &qword_14FF2A0);
    return 0;
  }
}

uint64_t property wrapper backing initializer of ApplicationCapabilities.Controller.capabilities(uint64_t a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  _OWORD v5[7];
  uint64_t v6;

  v1 = *(_OWORD *)(a1 + 80);
  v5[4] = *(_OWORD *)(a1 + 64);
  v5[5] = v1;
  v5[6] = *(_OWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 112);
  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v3 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v3;
  return Published.init(initialValue:)(v5, &type metadata for ApplicationCapabilities);
}

double sub_C40300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C47F20);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_C40384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  double v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  double v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t inited;
  void *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  double result;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  ValueMetadata *v111;
  _UNKNOWN **v112;

  v1 = v0;
  v2 = type metadata accessor for Whitetail.Binding();
  v3 = (void *)ICUserIdentityStoreDidChangeNotification;
  v4 = (void *)objc_opt_self(ICUserIdentityStore);
  v5 = v3;
  v6 = objc_msgSend(v4, "defaultIdentityStore");
  UIScreen.Dimensions.size.getter(v7);
  v111 = &type metadata for NotificationTrigger;
  v112 = &protocol witness table for NotificationTrigger;
  v109 = v8;
  v110 = v9;
  v10 = swift_allocObject(&unk_13B0D60, 24, 7);
  v105 = v1;
  swift_weakInit(v10 + 16, v1);
  v107 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&v109, 1, (uint64_t)sub_C4831C, v10);
  v11 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
  v12 = (void *)MPCloudServiceStatusControllerSubscriptionStatusDidChangeNotification;
  UIScreen.Dimensions.size.getter(v13);
  v111 = &type metadata for NotificationTrigger;
  v112 = &protocol witness table for NotificationTrigger;
  v109 = v14;
  v110 = v15;
  v16 = swift_allocObject(&unk_13B0D60, 24, 7);
  swift_weakInit(v16 + 16, v1);
  v17 = v12;
  v102 = v11;
  v106 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&v109, 1, (uint64_t)sub_C48324, v16);
  v103 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE300);
  inited = swift_initStackObject(v18, &v108);
  *(_OWORD *)(inited + 16) = xmmword_1063AB0;
  v20 = (void *)MPPlaybackUserDefaultsPreferredResolutionsDidChangeNotification;
  v21 = UIScreen.Dimensions.size.getter(COERCE_DOUBLE(5));
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 32) = v22;
  *(_QWORD *)(inited + 40) = v23;
  v24 = (void *)MPCloudControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification;
  v25 = UIScreen.Dimensions.size.getter(v21);
  *(_QWORD *)(inited + 96) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 104) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 72) = v26;
  *(_QWORD *)(inited + 80) = v27;
  v28 = (void *)RadioAvailabilityControllerRadioAvailableDidChangeNotification;
  v29 = UIScreen.Dimensions.size.getter(v25);
  *(_QWORD *)(inited + 136) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 144) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 112) = v30;
  *(_QWORD *)(inited + 120) = v31;
  v32 = (void *)MPCloudServiceStatusControllerSubscriptionAvailabilityDidChangeNotification;
  v33 = UIScreen.Dimensions.size.getter(v29);
  *(_QWORD *)(inited + 176) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 184) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 152) = v34;
  *(_QWORD *)(inited + 160) = v35;
  v36 = (void *)MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification;
  UIScreen.Dimensions.size.getter(v33);
  *(_QWORD *)(inited + 216) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 224) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 192) = v37;
  *(_QWORD *)(inited + 200) = v38;
  v39 = swift_allocObject(&unk_13B0D60, 24, 7);
  swift_weakInit(v39 + 16, v105);
  v101 = v2;
  swift_allocObject(v2, 48, 7);
  v40 = v20;
  v104 = v103;
  v41 = v24;
  v42 = v28;
  v43 = v32;
  v44 = v36;
  v45 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_C48324, v39);
  v46 = (uint64_t *)(v105 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bindings);
  swift_beginAccess(v105 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bindings, &v109, 33, 0);
  v47 = *v46;
  if ((unint64_t)*v46 >> 62)
  {
    if (v47 < 0)
      v100 = *v46;
    else
      v100 = v47 & 0xFFFFFFFFFFFFFF8;
    v49 = v107;
    swift_retain(v107);
    v50 = v106;
    swift_retain(v106);
    swift_retain(v45);
    swift_bridgeObjectRetain();
    v48 = _CocoaArrayWrapper.endIndex.getter(v100);
    swift_bridgeObjectRelease(v47);
    v52 = v48 + 3;
    if (!__OFADD__(v48, 3))
    {
LABEL_3:
      v53 = sub_86617C(v52, 1);
      specialized Array._endMutation()(v53);
      v54 = swift_retain(v49);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
      v48 = *(_QWORD *)((char *)&dword_10 + (*v46 & 0xFFFFFFFFFFFFFF8));
      v51 = *(_QWORD *)((char *)&dword_18 + (*v46 & 0xFFFFFFFFFFFFFF8));
      if (v48 < v51 >> 1)
        goto LABEL_4;
      goto LABEL_24;
    }
  }
  else
  {
    v48 = *(_QWORD *)((char *)&dword_10 + (v47 & 0xFFFFFFFFFFFFF8));
    v49 = v107;
    swift_retain(v107);
    v50 = v106;
    swift_retain(v106);
    swift_retain(v45);
    v52 = v48 + 3;
    if (!__OFADD__(v48, 3))
      goto LABEL_3;
  }
  __break(1u);
LABEL_24:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v48 + 1, 1);
LABEL_4:
  v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v49);
  specialized Array._endMutation()(v55);
  v56 = swift_retain(v50);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
  v58 = *(_QWORD *)((char *)&dword_10 + (*v46 & 0xFFFFFFFFFFFFFF8));
  v57 = *(_QWORD *)((char *)&dword_18 + (*v46 & 0xFFFFFFFFFFFFFF8));
  if (v58 >= v57 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
  v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v50);
  specialized Array._endMutation()(v59);
  v60 = swift_retain(v45);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
  v62 = *(_QWORD *)((char *)&dword_10 + (*v46 & 0xFFFFFFFFFFFFFF8));
  v61 = *(_QWORD *)((char *)&dword_18 + (*v46 & 0xFFFFFFFFFFFFFF8));
  if (v62 >= v61 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
  v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v45);
  specialized Array._endMutation()(v63);
  swift_endAccess(&v109);
  swift_release(v49);
  swift_release(v45);
  v64 = v50;
  swift_release(v50);
  v65 = sub_C48028();
  v67 = UserDefaultsKeyValueTrigger.init<A>(suiteName:key:)(0xD000000000000014, 0x80000000011050F0, v66, (uint64_t)&type metadata for NSUserDefaults.MobileiPod, v65);
  v69 = v68;
  v71 = v70;
  v73 = v72;
  v111 = &type metadata for UserDefaultsKeyValueTrigger;
  v112 = &protocol witness table for UserDefaultsKeyValueTrigger;
  v74 = (_QWORD *)swift_allocObject(&unk_13B0E78, 48, 7);
  v109 = v74;
  v74[2] = v67;
  v74[3] = v69;
  v74[4] = v71;
  v74[5] = v73;
  v75 = swift_allocObject(&unk_13B0D60, 24, 7);
  swift_weakInit(v75 + 16, v105);
  v76 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&v109, 1, (uint64_t)sub_C48324, v75);
  swift_beginAccess(v46, &v109, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v77);
  v79 = *(_QWORD *)((char *)&dword_10 + (*v46 & 0xFFFFFFFFFFFFFF8));
  v78 = *(_QWORD *)((char *)&dword_18 + (*v46 & 0xFFFFFFFFFFFFFF8));
  if (v79 >= v78 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v78 > 1, v79 + 1, 1);
  v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v76);
  specialized Array._endMutation()(v80);
  swift_endAccess(&v109);
  v81 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ApplicationCapabilities.Controller.ProfileObserver()), "init", v101);
  v82 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver;
  v83 = *(void **)(v105 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver);
  *(_QWORD *)(v105 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver) = v81;

  v84 = *(_QWORD *)(v105 + v82);
  if (v84)
    swift_weakAssign(v84+ OBJC_IVAR____TtCCV9MusicCore23ApplicationCapabilities10ControllerP33_3C92A9FA31E0FE3D8D536795352BB0D115ProfileObserver_controller, v105);
  v85 = v64;
  if (qword_14F9E30 != -1)
    swift_once(&qword_14F9E30, sub_C4F36C);
  v86 = static BagProvider.shared;
  v87 = swift_allocObject(&unk_13B0D60, 24, 7);
  swift_weakInit(v87 + 16, v105);
  v88 = type metadata accessor for BagProvider.Observer();
  v89 = swift_allocObject(v88, 40, 7);
  v90 = swift_weakInit(v89 + 16, 0);
  *(_QWORD *)(v89 + 24) = 0;
  *(_QWORD *)(v89 + 32) = 0;
  swift_weakAssign(v90, v86);
  v91 = *(_QWORD *)(v89 + 24);
  v92 = *(_QWORD *)(v89 + 32);
  *(_QWORD *)(v89 + 24) = sub_C48370;
  *(_QWORD *)(v89 + 32) = v87;
  swift_retain_n(v87, 3);
  v93 = sub_5C198(v91, v92);
  v109 = 0;
  __chkstk_darwin(v93);
  UnfairLock.locked<A>(_:)(sub_C36728);
  if (v109)
  {
    v94 = v109;
    sub_C42C20(v94, v87);

    v95 = v94;
    v96 = v94;
    v97 = v107;
  }
  else
  {
    sub_C4F74C(0);
    v97 = v107;
    v96 = v102;
    v95 = v104;
  }

  swift_release_n(v87, 2);
  swift_release(v45);
  swift_release(v85);
  swift_release(v97);
  swift_release(v87);
  v98 = *(_QWORD *)(v105 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bagObserver);
  *(_QWORD *)(v105 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bagObserver) = v89;
  *(_QWORD *)&result = swift_release(v98).n128_u64[0];
  return result;
}

uint64_t sub_C40B74(char a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[7];
  uint64_t v16;
  _BYTE v17[24];
  _OWORD v18[7];
  uint64_t v19;

  if ((a1 & 1) == 0)
    return 0;
  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (!Strong)
    return 0;
  v7 = Strong;
  KeyPath = swift_getKeyPath(&unk_109EFA8);
  v9 = swift_getKeyPath(&unk_109EFD0);
  static Published.subscript.getter(v15, v7, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  v18[4] = v15[4];
  v18[5] = v15[5];
  v18[6] = v15[6];
  v19 = v16;
  v18[0] = v15[0];
  v18[1] = v15[1];
  v18[2] = v15[2];
  v18[3] = v15[3];
  sub_C3F6DC();
  v11 = v10;
  sub_A9008(v18);
  v12 = sub_C82B70(v11);
  swift_bridgeObjectRelease(v11);
  v13 = a2(v12);
  swift_release(v7);
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_C40C98(uint64_t a1, char a2, void *aBlock)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t (*)(uint64_t), uint64_t);
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2 & 1;
  v5 = *(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = _Block_copy(aBlock);
  v7 = swift_allocObject(&unk_13B0E50, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  swift_retain(v4);
  v8 = v5(v3, sub_5233E0, v7);
  swift_release(v4);
  swift_release(v7);
  return v8;
}

__n128 sub_C40D24@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __n128 result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __n128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_109EFA8);
  v5 = swift_getKeyPath(&unk_109EFD0);
  static Published.subscript.getter(&v17, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = BYTE1(v17);
  v7 = BYTE2(v17);
  v8 = v23;
  v9 = v24;
  v10 = v25;
  v11 = v26;
  v13 = v18;
  result = v19;
  v14 = v20;
  v15 = v21;
  v16 = v22;
  *(_BYTE *)a2 = v17;
  *(_BYTE *)(a2 + 1) = v6;
  *(_BYTE *)(a2 + 2) = v7;
  *(_OWORD *)(a2 + 8) = v13;
  *(__n128 *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v15;
  *(_OWORD *)(a2 + 72) = v16;
  *(_BYTE *)(a2 + 88) = v8;
  *(_QWORD *)(a2 + 96) = v9;
  *(_BYTE *)(a2 + 104) = v10;
  *(_QWORD *)(a2 + 112) = v11;
  return result;
}

uint64_t sub_C40DF4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  _BYTE v24[8];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v2 = *a1;
  v19 = a1[2];
  v20 = a1[1];
  v3 = *((_QWORD *)a1 + 3);
  v17 = *((_QWORD *)a1 + 2);
  v18 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 4);
  v16 = *((_QWORD *)a1 + 5);
  v6 = *((_QWORD *)a1 + 6);
  v5 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  v7 = *((_QWORD *)a1 + 9);
  v9 = (void *)*((_QWORD *)a1 + 10);
  v10 = *((_QWORD *)a1 + 12);
  v14 = a1[104];
  v15 = a1[88];
  v11 = *((_QWORD *)a1 + 14);
  v21 = *a2;
  KeyPath = swift_getKeyPath(&unk_109EFA8);
  v22 = swift_getKeyPath(&unk_109EFD0);
  v24[0] = v2;
  v24[1] = v20;
  v24[2] = v19;
  v25 = v18;
  v26 = v17;
  v27 = v3;
  v28 = v4;
  v29 = v16;
  v30 = v6;
  v31 = v5;
  v32 = v8;
  v33 = v7;
  v34 = v9;
  v35 = v15;
  v36 = v10;
  v37 = v14;
  v38 = v11;
  v12 = v9;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_retain(v21);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  return static Published.subscript.setter(v24, v21, KeyPath, v22);
}

uint64_t ApplicationCapabilities.Controller.$capabilities.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE030);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

double sub_C40FA0(_QWORD *a1)
{
  uint64_t v1;
  double result;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE030);
  Published.projectedValue.getter(v1);
  *(_QWORD *)&result = swift_endAccess(v3).n128_u64[0];
  return result;
}

uint64_t sub_C41004(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, double);
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _BYTE v18[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500E40);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v18[-v10 - 8];
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16);
  v12(&v18[-v10 - 8], a1, v4, v9);
  v13 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v12)(v7, v11, v4);
  swift_beginAccess(v13 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, v18, 33, 0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE030);
  Published.projectedValue.setter(v7, v14);
  v15 = swift_endAccess(v18);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v11, v4, v15);
}

Swift::Void __swiftcall ApplicationCapabilities.Controller.setNeedsNetworkReachabilityUpdate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE v9[16];
  uint64_t v10;
  char *v11;
  char v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = 0;
  v10 = v0;
  v11 = &v12;
  UnfairLock.locked<A>(_:)(sub_C473F8);
  if (v12 == 1)
  {
    static TaskPriority.userInitiated.getter(v5);
    v6 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 0, 1, v6);
    v7 = (_QWORD *)swift_allocObject(&unk_13B0978, 40, 7);
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = v1;
    swift_retain(v1);
    v8 = sub_BBDAAC((uint64_t)v4, (uint64_t)&unk_14FE050, (uint64_t)v7);
    swift_release(v8);
    sub_56024((uint64_t)v4, (uint64_t *)&unk_1500E30);
  }
}

uint64_t sub_C41238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_C41250, 0, 0);
}

uint64_t sub_C41250()
{
  uint64_t v0;

  UnfairLock.locked<A>(_:)(sub_C48204);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_C412AC(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  void *v12;
  unsigned int v13;
  uint64_t KeyPath;
  uint64_t v15;
  int v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  void *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  _QWORD *v45;
  uint8_t *v46;
  _QWORD v47[2];
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  _BYTE v55[32];
  _BYTE v56[48];
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v3);
  v5 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate;
  if (a1[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate] == 1)
  {
    v54 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    v60 = v1;
    if (qword_14F9D80 != -1)
      swift_once(&qword_14F9D80, sub_C44A88);
    v6 = type metadata accessor for Logger(0);
    v7 = __swift_project_value_buffer(v6, (uint64_t)qword_14FE008);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_0, v8, v9, "Needs Network Reachability Update", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    a1[v5] = 0;
    v11 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
    if (v11)
    {
      v12 = v11;
      if ((objc_msgSend(v11, "shouldProhibitMusicActionForCurrentNetworkConditions") & 1) != 0)
        v13 = 0;
      else
        v13 = objc_msgSend(v12, "hasProperNetworkConditionsToShowCloudMedia");

    }
    else
    {
      v13 = 0;
    }
    KeyPath = swift_getKeyPath(&unk_109EFA8);
    v15 = swift_getKeyPath(&unk_109EFD0);
    v53 = a1;
    static Published.subscript.getter(v55, a1, KeyPath, v15);
    swift_release();
    swift_release();
    v16 = v55[1];
    v17 = (void *)v57;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    v21 = os_log_type_enabled(v19, v20);
    if (v13 == v16)
    {
      if (v21)
      {
        v46 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_0, v19, v20, "Network Reachability status does not differ from currently known capabilities.", v46, 2u);
        swift_slowDealloc(v46, -1, -1);
      }

    }
    else
    {
      v22 = v13;
      if (v21)
      {
        v23 = swift_slowAlloc(12, -1);
        v24 = swift_slowAlloc(32, -1);
        *(_QWORD *)v55 = v24;
        *(_DWORD *)v23 = 136315138;
        if (v13)
          v25 = 0x1000000000000012;
        else
          v25 = 0x1000000000000016;
        if (v13)
          v26 = (char *)0x8000000001105070;
        else
          v26 = (char *)0x8000000001105050;
        *(_QWORD *)(v23 + 4) = sub_BA95EC((char *)v25, v26, (uint64_t *)v55);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v19, v20, "Updating Network Reachability to: %s", (uint8_t *)v23, 0xCu);
        swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v24, -1, -1);
        swift_slowDealloc(v23, -1, -1);
      }

      v27 = v53;
      v28 = &v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities];
      v29 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96];
      v30 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64];
      v57 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80];
      v58 = v29;
      v32 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16];
      v31 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32];
      *(_OWORD *)v55 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities];
      *(_OWORD *)&v55[16] = v32;
      v59 = *(_QWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112];
      v33 = v59;
      v34 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48];
      *(_OWORD *)v56 = v31;
      *(_OWORD *)&v56[16] = v34;
      *(_OWORD *)&v56[32] = v30;
      v35 = BYTE8(v57);
      v36 = (void *)v57;
      v37 = *(_QWORD *)&v55[24];
      v38 = v55[2];
      v39 = *(_QWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 24];
      v49 = *(_QWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32];
      v50 = v39;
      v40 = *(_QWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 72];
      v51 = *(_QWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 56];
      v52 = v40;
      v53 = *(char **)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80];
      v47[1] = *((_QWORD *)v28 + 12);
      *v28 = v55[0];
      v28[1] = v22;
      v28[2] = v38;
      *(_OWORD *)(v28 + 8) = *(_OWORD *)&v55[8];
      *((_QWORD *)v28 + 3) = v37;
      *((_QWORD *)v28 + 4) = v31;
      *(_OWORD *)(v28 + 40) = *(_OWORD *)&v56[8];
      v48 = *(_OWORD *)&v56[24];
      *(_OWORD *)(v28 + 56) = *(_OWORD *)&v56[24];
      *((_QWORD *)v28 + 9) = *((_QWORD *)&v30 + 1);
      *((_QWORD *)v28 + 10) = v36;
      v28[88] = v35;
      *((_QWORD *)v28 + 12) = v29;
      v28[104] = BYTE8(v29);
      *((_QWORD *)v28 + 14) = v33;
      sub_10EA74((uint64_t)v55);
      sub_10EA74((uint64_t)v55);
      *(_QWORD *)&v48 = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_C419C8((uint64_t)v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_A9008(v55);
      v41 = type metadata accessor for TaskPriority(0);
      v42 = (uint64_t)v54;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v54, 1, 1, v41);
      type metadata accessor for MainActor(0);
      v43 = swift_retain();
      v44 = static MainActor.shared.getter(v43);
      v45 = (_QWORD *)swift_allocObject(&unk_13B0E00, 40, 7);
      v45[2] = v44;
      v45[3] = &protocol witness table for MainActor;
      v45[4] = v27;
      sub_C51ED8(v42, (uint64_t)&unk_14FE2C0, (uint64_t)v45);
      swift_release();
    }
  }
}

uint64_t sub_C41880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_C418EC, v7, v8);
}

uint64_t sub_C418EC()
{
  uint64_t v0;
  id v1;

  swift_release();
  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_14F9DD8 != -1)
    swift_once(&qword_14F9DD8, sub_C44E28);
  objc_msgSend(v1, "postNotificationName:object:", static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange, *(_QWORD *)(v0 + 16));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor()
{
  if (qword_14F9DD8 != -1)
    swift_once(&qword_14F9DD8, sub_C44E28);
  return &static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange;
}

_QWORD *sub_C419C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  id v38[4];
  void *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v4);
  v6 = (char *)&v38[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = &_swiftEmptySetSingleton;
  v7 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v44 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64);
  v45 = v7;
  v46 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  v47 = *(_QWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112);
  v8 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16);
  v40 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities);
  v41 = v8;
  v9 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48);
  v42 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  v43 = v9;
  sub_10EA74((uint64_t)&v40);
  if (qword_14F9EC0 != -1)
    swift_once(&qword_14F9EC0, sub_C7E81C);
  if (static NSUserDefaults.mobileiPod)
  {
    v10 = sub_C48028();
    v11 = sub_B9DEC0();
    NSUserDefaults.subscript.getter((uint64_t)&type metadata for NSUserDefaults.MobileiPod, v10, v11, (uint64_t)v38);
    if (v38[3])
    {
      if ((swift_dynamicCast((char *)&v37 + 7, v38, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0
        && (v37 & 0x100000000000000) != 0)
      {
        __asm { BR              X10 }
      }
    }
    else
    {
      sub_56024((uint64_t)v38, &qword_14FF2A0);
    }
  }
  if (!_s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)&v40, (unsigned __int8 *)a1))
  {
    if ((v40 & 1) != (*(_BYTE *)a1 & 1))
    {
      if (qword_14F9DD0 != -1)
        swift_once(&qword_14F9DD0, sub_C44DD8);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.activeAccountDidChange);

    }
    v12 = *((_QWORD *)&v41 + 1);
    v13 = sub_C521F8(5u, *((uint64_t *)&v41 + 1)) & 1;
    v14 = *(_QWORD *)(a1 + 24);
    if (v13 != (sub_C521F8(5u, v14) & 1))
    {
      if (qword_14F9D88 != -1)
        swift_once(&qword_14F9D88, sub_C44B08);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange);

    }
    v15 = sub_C521F8(0, v12) & 1;
    if (v15 != (sub_C521F8(0, v14) & 1))
    {
      if (qword_14F9D90 != -1)
        swift_once(&qword_14F9D90, sub_C44B58);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange);

    }
    v16 = sub_C521F8(3u, v12) & 1;
    if (v16 != (sub_C521F8(3u, v14) & 1))
    {
      if (qword_14F9D98 != -1)
        swift_once(&qword_14F9D98, sub_C44BA8);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange);

    }
    v17 = sub_C521F8(9u, v12) & 1;
    if (v17 != (sub_C521F8(9u, v14) & 1))
    {
      if (qword_14F9DB8 != -1)
        swift_once(&qword_14F9DB8, sub_C44CE8);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange);

    }
    v18 = sub_C521F8(4u, v12) & 1;
    if (v18 != (sub_C521F8(4u, v14) & 1))
    {
      if (qword_14F9DA0 != -1)
        swift_once(&qword_14F9DA0, sub_C44BF8);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange);

    }
    v19 = sub_C521F8(2u, v12) & 1;
    if (v19 != (sub_C521F8(2u, v14) & 1))
    {
      if (qword_14F9DA8 != -1)
        swift_once(&qword_14F9DA8, sub_C44C48);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange);

    }
    v20 = sub_C521F8(0xAu, v12) & 1;
    if (v20 != (sub_C521F8(0xAu, v14) & 1))
    {
      if (qword_14F9DB0 != -1)
        swift_once(&qword_14F9DB0, sub_C44C98);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.mliEnabledDidChange);

    }
    if ((BYTE1(v40) & 1) != (*(_BYTE *)(a1 + 1) & 1))
    {
      if (qword_14F9DD8 != -1)
        swift_once(&qword_14F9DD8, sub_C44E28);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange);

    }
    if ((BYTE2(v40) & 1) != (*(_BYTE *)(a1 + 2) & 1))
    {
      if (qword_14F9DE8 != -1)
        swift_once(&qword_14F9DE8, sub_C44EC8);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange);

    }
    if (*((_QWORD *)&v42 + 1) != *(_QWORD *)(a1 + 40))
    {
      if (qword_14F9DE0 != -1)
        swift_once(&qword_14F9DE0, sub_C44E78);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange);

    }
    if ((sub_BB7E80(BYTE8(v45), *(unsigned __int8 *)(a1 + 88)) & 1) == 0)
    {
      if (qword_14F9DC8 != -1)
        swift_once(&qword_14F9DC8, sub_C44D88);
      sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange);

    }
    v21 = BYTE8(v46);
    v22 = v47;
    v23 = *(unsigned __int8 *)(a1 + 104);
    v24 = *(_QWORD *)(a1 + 112);
    if ((sub_C3EF94(v46, *(_QWORD *)(a1 + 96)) & 1) == 0)
      goto LABEL_65;
    if (v21 == 6)
    {
      if (v23 != 6)
        goto LABEL_65;
    }
    else
    {
      if (v23 == 6)
        goto LABEL_65;
      sub_BB7E84(v21);
      if ((v25 & 1) == 0)
        goto LABEL_65;
    }
    if ((sub_C3F1A0(v22, v24) & 1) != 0)
    {
LABEL_68:
      if (*((_QWORD *)&v40 + 1) != *(_QWORD *)(a1 + 8))
      {
        if (qword_14F9DF0 != -1)
          swift_once(&qword_14F9DF0, sub_C44F18);
        sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange);

      }
      goto LABEL_72;
    }
LABEL_65:
    if (qword_14F9DC0 != -1)
      swift_once(&qword_14F9DC0, sub_C44D38);
    sub_CBCFA4(v38, (id)static ApplicationCapabilities.NotificationNames.supportedTabsDidChange);

    goto LABEL_68;
  }
LABEL_72:
  if (_s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)&v40, (unsigned __int8 *)a1))
  {
    swift_bridgeObjectRelease(v39);
  }
  else
  {
    v26 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 1, 1, v26);
    v27 = v39;
    type metadata accessor for MainActor(0);
    sub_10EA74((uint64_t)&v40);
    swift_retain(v2);
    v29 = static MainActor.shared.getter(v28);
    v30 = swift_allocObject(&unk_13B0D38, 168, 7);
    v31 = v45;
    *(_OWORD *)(v30 + 104) = v44;
    *(_OWORD *)(v30 + 120) = v31;
    *(_OWORD *)(v30 + 136) = v46;
    v32 = v41;
    *(_OWORD *)(v30 + 40) = v40;
    *(_OWORD *)(v30 + 56) = v32;
    v33 = v43;
    *(_OWORD *)(v30 + 72) = v42;
    *(_QWORD *)(v30 + 16) = v29;
    *(_QWORD *)(v30 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v30 + 32) = v2;
    v34 = v47;
    *(_OWORD *)(v30 + 88) = v33;
    *(_QWORD *)(v30 + 152) = v34;
    *(_QWORD *)(v30 + 160) = v27;
    v35 = sub_C51ED8((uint64_t)v6, (uint64_t)&unk_14FE250, v30);
    swift_release(v35);
  }
  return sub_A9008(&v40);
}

uint64_t *ApplicationCapabilities.NotificationNames.activeAccountDidChange.unsafeMutableAddressor()
{
  if (qword_14F9DD0 != -1)
    swift_once(&qword_14F9DD0, sub_C44DD8);
  return &static ApplicationCapabilities.NotificationNames.activeAccountDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange.unsafeMutableAddressor()
{
  if (qword_14F9D88 != -1)
    swift_once(&qword_14F9D88, sub_C44B08);
  return &static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange.unsafeMutableAddressor()
{
  if (qword_14F9D90 != -1)
    swift_once(&qword_14F9D90, sub_C44B58);
  return &static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange.unsafeMutableAddressor()
{
  if (qword_14F9D98 != -1)
    swift_once(&qword_14F9D98, sub_C44BA8);
  return &static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange.unsafeMutableAddressor()
{
  if (qword_14F9DB8 != -1)
    swift_once(&qword_14F9DB8, sub_C44CE8);
  return &static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange.unsafeMutableAddressor()
{
  if (qword_14F9DA0 != -1)
    swift_once(&qword_14F9DA0, sub_C44BF8);
  return &static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange.unsafeMutableAddressor()
{
  if (qword_14F9DA8 != -1)
    swift_once(&qword_14F9DA8, sub_C44C48);
  return &static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.mliEnabledDidChange.unsafeMutableAddressor()
{
  if (qword_14F9DB0 != -1)
    swift_once(&qword_14F9DB0, sub_C44C98);
  return &static ApplicationCapabilities.NotificationNames.mliEnabledDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange.unsafeMutableAddressor()
{
  if (qword_14F9DE8 != -1)
    swift_once(&qword_14F9DE8, sub_C44EC8);
  return &static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange.unsafeMutableAddressor()
{
  if (qword_14F9DE0 != -1)
    swift_once(&qword_14F9DE0, sub_C44E78);
  return &static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange.unsafeMutableAddressor()
{
  if (qword_14F9DC8 != -1)
    swift_once(&qword_14F9DC8, sub_C44D88);
  return &static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.supportedTabsDidChange.unsafeMutableAddressor()
{
  if (qword_14F9DC0 != -1)
    swift_once(&qword_14F9DC0, sub_C44D38);
  return &static ApplicationCapabilities.NotificationNames.supportedTabsDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange.unsafeMutableAddressor()
{
  if (qword_14F9DF0 != -1)
    swift_once(&qword_14F9DF0, sub_C44F18);
  return &static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange;
}

uint64_t sub_C426A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[18] = a5;
  v6[19] = a6;
  v6[17] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[20] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_C42718, v9, v10);
}

uint64_t sub_C42718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __n128 v12;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_109EFA8);
  v5 = swift_getKeyPath(&unk_109EFD0);
  v6 = *(_OWORD *)(v3 + 48);
  v8 = *(_OWORD *)v3;
  v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v0 + 64) = v6;
  *(_OWORD *)(v0 + 16) = v8;
  *(_OWORD *)(v0 + 32) = v7;
  v10 = *(_OWORD *)(v3 + 80);
  v9 = *(_OWORD *)(v3 + 96);
  v11 = *(_OWORD *)(v3 + 64);
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v3 + 112);
  *(_OWORD *)(v0 + 96) = v10;
  *(_OWORD *)(v0 + 112) = v9;
  *(_OWORD *)(v0 + 80) = v11;
  sub_10EA74(v3);
  swift_retain();
  static Published.subscript.setter(v0 + 16, v2, KeyPath, v5);
  swift_retain();
  sub_C47038(v1, v2);
  v12 = swift_release();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v12);
}

_QWORD *sub_C427F4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  char v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v23[7];
  uint64_t v24;
  _OWORD v25[7];
  uint64_t v26;

  v2 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_musicTabsDictionaryProvider);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = v2;
  swift_retain(v3);
  sub_C467E4(v2, v3, v4, (uint64_t)v23);
  v6 = a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities;
  v7 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64);
  v8 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  v25[5] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v25[6] = v8;
  v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112);
  v9 = v26;
  v10 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16);
  v25[0] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities);
  v11 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  v25[1] = v10;
  v25[2] = v11;
  v25[3] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48);
  v25[4] = v7;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 24);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 56);
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 72);
  v16 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  v18 = v23[3];
  *(_OWORD *)(v6 + 32) = v23[2];
  *(_OWORD *)(v6 + 48) = v18;
  v19 = v23[1];
  *(_OWORD *)v6 = v23[0];
  *(_OWORD *)(v6 + 16) = v19;
  *(_QWORD *)(v6 + 112) = v24;
  v20 = v23[6];
  v21 = v23[4];
  *(_OWORD *)(v6 + 80) = v23[5];
  *(_OWORD *)(v6 + 96) = v20;
  *(_OWORD *)(v6 + 64) = v21;
  sub_10EA74((uint64_t)v25);
  sub_10EA74((uint64_t)v23);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v15);

  sub_C419C8((uint64_t)v25);
  sub_A9008(v23);
  return sub_A9008(v25);
}

double sub_C42958(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  id v5;
  id v6;
  char v7;
  char v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD v13[3];
  void *v14;
  _BYTE v15[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
    v6 = sub_C42A94();
    v8 = v7;

    v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    if ((v8 & 1) != 0)
    {
      v6 = 0;
      v13[1] = 0;
      v13[2] = 0;
      v14 = 0;
    }
    else
    {
      v14 = &type metadata for UInt64;
    }
    v13[0] = v6;
    v12 = 2;
    v10 = sub_C4806C();
    v11 = sub_B9DEC0();
    NSUserDefaults.subscript.setter((uint64_t)v13, (uint64_t)&v12, (uint64_t)&_s3KeyON, v10, v11);

    UnfairLock.locked<A>(_:)((void (*)(void))sub_C47F20);
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

id sub_C42A94()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char v10;

  v1 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
  v9 = 0;
  v2 = objc_msgSend(v0, "DSIDForUserIdentity:outError:", v1, &v9);

  v3 = v9;
  if (v2)
  {
    v9 = 0;
    v10 = 1;
    v4 = v3;
    static UInt64._conditionallyBridgeFromObjectiveC(_:result:)(v2, &v9);

    return v9;
  }
  else
  {
    v6 = v9;
    v7 = _convertNSErrorToError(_:)(v3);

    swift_willThrow(v8);
    swift_errorRelease(v7);
    return 0;
  }
}

double sub_C42B9C(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    UnfairLock.locked<A>(_:)(a2);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void sub_C42C20(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_lock);
    __chkstk_darwin(Strong);
    swift_retain(v6);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C48378);
    swift_release(v6);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C47F20);
    v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(a1, "dictionaryForBagKey:", v8);

    if (v9
      && (v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v9, v11 = sub_D7AE04(v10), swift_bridgeObjectRelease(v10), v11))
    {
      *((_QWORD *)&v16 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE308);
      *(_QWORD *)&v15 = v11;
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    v14 = 1;
    v12 = sub_C4806C();
    v13 = sub_B9DEC0();
    NSUserDefaults.subscript.setter((uint64_t)&v15, (uint64_t)&v14, (uint64_t)&_s3KeyON, v12, v13);
    swift_release(v5);

  }
}

uint64_t ApplicationCapabilities.Controller.updated()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = v1;
  return swift_task_switch(sub_C42E28, 0, 0);
}

uint64_t sub_C42E28()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_C42EB0;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0x2864657461647075, 0xE900000000000029, sub_C47484, *(_QWORD *)(v0 + 144), &type metadata for ApplicationCapabilities);
}

uint64_t sub_C42EB0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_C42F04, 0, 0);
}

uint64_t sub_C42F04()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v1 = *(_BYTE *)(v0 + 17);
  v2 = *(_BYTE *)(v0 + 18);
  v3 = *(_BYTE *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_BYTE *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_OWORD *)(v0 + 40);
  v9 = *(_OWORD *)(v0 + 24);
  v10 = *(_OWORD *)(v0 + 56);
  v11 = *(_OWORD *)(v0 + 72);
  v12 = *(_OWORD *)(v0 + 88);
  *(_BYTE *)v6 = *(_BYTE *)(v0 + 16);
  *(_BYTE *)(v6 + 1) = v1;
  *(_BYTE *)(v6 + 2) = v2;
  *(_OWORD *)(v6 + 8) = v9;
  *(_OWORD *)(v6 + 24) = v8;
  *(_OWORD *)(v6 + 40) = v10;
  *(_OWORD *)(v6 + 56) = v11;
  *(_OWORD *)(v6 + 72) = v12;
  *(_BYTE *)(v6 + 88) = v3;
  *(_QWORD *)(v6 + 96) = v4;
  *(_BYTE *)(v6 + 104) = v5;
  *(_QWORD *)(v6 + 112) = v7;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_C42F6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  uint64_t v27;
  char *v28;
  void *v29;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2A8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - v7;
  if (qword_14F9E30 != -1)
    swift_once(&qword_14F9E30, sub_C4F36C);
  v9 = static BagProvider.shared;
  v10 = swift_allocObject(&unk_13B0D60, 24, 7);
  swift_weakInit(v10 + 16);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v8, a1, v2);
  v11(v5, (uint64_t)v8, v2);
  v12 = *(unsigned __int8 *)(v3 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = swift_allocObject(&unk_13B0D88, v13 + v4, v12 | 7);
  *(_QWORD *)(v14 + 16) = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v14 + v13, v8, v2);
  swift_retain_n(v10, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2B0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_B9DEA8);
  v15 = v29;
  if (v29)
  {
    sub_C4325C(v29, v10);
    swift_release();
    swift_release();

  }
  else
  {
    v17 = type metadata accessor for BagProvider.Observer();
    v18 = swift_allocObject(v17, 40, 7);
    v19 = swift_weakInit(v18 + 16);
    *(_QWORD *)(v18 + 24) = 0;
    *(_QWORD *)(v18 + 32) = 0;
    swift_weakAssign(v19, v9);
    v20 = swift_allocObject(&unk_13B0DB0, 24, 7);
    v28 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    v21 = v20;
    swift_weakInit(v20 + 16);
    v22 = (_QWORD *)swift_allocObject(&unk_13B0DD8, 48, 7);
    v22[2] = sub_C4814C;
    v22[3] = v14;
    v22[4] = v21;
    v22[5] = v18;
    v23 = *(_QWORD *)(v18 + 24);
    v24 = *(_QWORD *)(v18 + 32);
    *(_QWORD *)(v18 + 24) = sub_C481C4;
    *(_QWORD *)(v18 + 32) = v22;
    swift_retain();
    swift_retain();
    v25 = sub_5C198(v23, v24);
    __chkstk_darwin(v25);
    *(&v27 - 2) = v9;
    *(&v27 - 1) = v18;
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C481D0);
    v5 = v28;
    sub_C4F74C(0);
    swift_release();
    swift_release();
    v16 = swift_release();
  }
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_C4325C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  _OWORD v10[7];
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[7];
  uint64_t v14;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, &v12, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = *(_QWORD *)(Strong
                   + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_musicTabsDictionaryProvider);
    v7 = *(_BYTE *)(Strong + 16);
    a1;
    swift_retain();
    v8 = sub_C467E4(a1, v6, v7, (uint64_t)v13);
    __chkstk_darwin(v8);
    swift_retain();
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C481E8);
    swift_release();
    v10[4] = v13[4];
    v10[5] = v13[5];
    v10[6] = v13[6];
    v11 = v14;
    v10[0] = v13[0];
    v10[1] = v13[1];
    v10[2] = v13[2];
    v10[3] = v13[3];
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2A8);
    CheckedContinuation.resume(returning:)(v10, v9);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_C433BC(uint64_t a1, void *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  id v15;
  void *v17;
  _OWORD v18[7];
  uint64_t v19;

  v6 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag);
  *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag) = a2;

  v7 = a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities;
  v8 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v18[4] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64);
  v18[5] = v8;
  v18[6] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112);
  v9 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16);
  v18[0] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities);
  v18[1] = v9;
  v10 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48);
  v18[2] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  v18[3] = v10;
  v17 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v11 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v7 + 48) = v11;
  v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v7 = *(_OWORD *)a3;
  *(_OWORD *)(v7 + 16) = v12;
  *(_QWORD *)(v7 + 112) = *(_QWORD *)(a3 + 112);
  v13 = *(_OWORD *)(a3 + 96);
  v14 = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v7 + 96) = v13;
  *(_OWORD *)(v7 + 64) = v14;
  sub_10EA74(a3);
  sub_10EA74(a3);
  v15 = a2;
  sub_10EA74((uint64_t)v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_C419C8((uint64_t)v18);
  sub_A9008((_QWORD *)a3);
  return sub_A9008(v18);
}

uint64_t ApplicationCapabilities.Controller.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE030);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  v3 = *(void **)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

double ApplicationCapabilities.Controller.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  ApplicationCapabilities.Controller.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

Swift::Bool __swiftcall ApplicationCapabilities.Tabs.shouldShowLoadingUpsellBanner(for:)(MusicCore::TabIdentifier a1)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v1 + 16))
  {
    v2 = v1;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return 0;
}

BOOL sub_C43858(_BOOL8 a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  _BYTE v14[24];
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9EC0 != -1)
    swift_once(&qword_14F9EC0, sub_C7E81C);
  if (!static NSUserDefaults.mobileiPod)
    goto LABEL_10;
  v7 = sub_C48028();
  v8 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)&type metadata for NSUserDefaults.MobileiPod, v7, v8, (uint64_t)v14);
  if (!v15)
  {
    sub_56024((uint64_t)v14, &qword_14FF2A0);
LABEL_10:
    a1 = 1;
    goto LABEL_11;
  }
  if ((swift_dynamicCast(&v13, v14, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0
    || v13 != 1)
  {
    goto LABEL_10;
  }
  if (a1)
    a1 = objc_msgSend((id)a1, "statusType") == (char *)&dword_0 + 1;
LABEL_11:
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.applicationScriptURL.getter((uint64_t)v6);

  v10 = type metadata accessor for URL(0);
  LODWORD(v9) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10);
  sub_56024((uint64_t)v6, &qword_14FAC20);
  if ((_DWORD)v9 == 1 && objc_msgSend(a2, "hasLoadedSubscriptionAvailability"))
    return objc_msgSend(a2, "isSubscriptionAvailable") & a1;
  return a1;
}

uint64_t sub_C43A2C(void *a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  _BOOL4 v7;
  NSString v8;
  id v9;
  id v10;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  unsigned __int8 v16;
  _BYTE v17[24];
  uint64_t v18;

  if (a1)
  {
    v3 = a1;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureMusicArtistActivityAllowed);
    v5 = v4;
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    LODWORD(v3) = objc_msgSend(v3, "effectiveBoolValueForSetting:", v6);

    v7 = (_DWORD)v3 == 2;
    if (!a2)
      goto LABEL_12;
  }
  else
  {
    v7 = 1;
    if (!a2)
      goto LABEL_12;
  }
  if (qword_14F9D70 != -1)
    swift_once(&qword_14F9D70, sub_C44224);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(a2, "dictionaryForBagKey:", v8);

  if (v9)
  {

    sub_4E684(0, &qword_14FE278, ICUserIdentityStore_ptr);
    v10 = static ICUserIdentityStore.activeAccountDSID.getter();

    if (v10 && !v7)
      return 1;
  }
LABEL_12:
  if (qword_14FA618 != -1)
    swift_once(&qword_14FA618, sub_D75398);
  if (static DeviceCapabilities.isInternalInstall != 1)
    return 0;
  v12 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v16 = 3;
  v13 = sub_C4806C();
  v14 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)&_s3KeyON, v13, v14, (uint64_t)v17);

  if (!v18)
  {
    sub_56024((uint64_t)v17, &qword_14FF2A0);
    return 0;
  }
  result = swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
  if ((_DWORD)result)
    return v16;
  return result;
}

uint64_t sub_C43C40()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD v11[2];
  unsigned __int8 v12[40];
  __int128 v13;
  __int128 v14;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dictionaryForBagKey:", v1);

  if (!v2
    || (v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v2, !v3))
  {
    v13 = 0u;
    v14 = 0u;
LABEL_7:
    sub_56024((uint64_t)&v13, &qword_14FF2A0);
LABEL_8:
    v13 = 0u;
    v14 = 0u;
LABEL_9:
    sub_56024((uint64_t)&v13, &qword_14FF2A0);
    return 2;
  }
  v11[0] = 6909037;
  v11[1] = 0xE300000000000000;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_21BFA0((uint64_t)v12), (v5 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_55E40((uint64_t)v12);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_7;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE260);
  if ((swift_dynamicCast(v12, &v13, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    goto LABEL_8;
  v8 = *(_QWORD *)v12;
  if (!*(_QWORD *)v12)
    goto LABEL_8;
  strcpy((char *)v11, "ismliEnabled");
  BYTE5(v11[1]) = 0;
  HIWORD(v11[1]) = -5120;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_21BFA0((uint64_t)v12), (v10 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease(v8);
  sub_55E40((uint64_t)v12);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_9;
  if (swift_dynamicCast(v12, &v13, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    return v12[0];
  else
    return 2;
}

uint64_t sub_C43E6C()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[5];
  __int128 v14;
  __int128 v15;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dictionaryForBagKey:", v1);

  if (!v2
    || (v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v2, !v3))
  {
    v14 = 0u;
    v15 = 0u;
LABEL_7:
    sub_56024((uint64_t)&v14, &qword_14FF2A0);
LABEL_8:
    v14 = 0u;
    v15 = 0u;
LABEL_9:
    sub_56024((uint64_t)&v14, &qword_14FF2A0);
    return 0;
  }
  v11 = 6909037;
  v12 = 0xE300000000000000;
  AnyHashable.init<A>(_:)(&v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_21BFA0((uint64_t)v13), (v5 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v14);
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_55E40((uint64_t)v13);
  if (!*((_QWORD *)&v15 + 1))
    goto LABEL_7;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE260);
  if ((swift_dynamicCast(v13, &v14, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    goto LABEL_8;
  v8 = v13[0];
  if (!v13[0])
    goto LABEL_8;
  v11 = 0xD000000000000011;
  v12 = 0x8000000001104AC0;
  AnyHashable.init<A>(_:)(&v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_21BFA0((uint64_t)v13), (v10 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v14);
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease(v8);
  sub_55E40((uint64_t)v13);
  if (!*((_QWORD *)&v15 + 1))
    goto LABEL_9;
  result = swift_dynamicCast(v13, &v14, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((_DWORD)result)
  {
    swift_bridgeObjectRelease(v13[1]);
    return 1;
  }
  return result;
}

void sub_C44094(char a1)
{
  __asm { BR              X10 }
}

_UNKNOWN **sub_C440DC()
{
  return &off_13A4AB8;
}

uint64_t sub_C44224()
{
  uint64_t result;
  uint64_t v1;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreSocialBagKey);
  qword_14FDFF0 = result;
  *(_QWORD *)algn_14FDFF8 = v1;
  return result;
}

uint64_t sub_C44250@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t result;
  unsigned __int8 v9;
  unint64_t v10;
  char v11;
  __int16 v12;
  __int16 v13;
  __int16 v14;
  Swift::String v15;
  _BYTE v16[40];
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v5 = *a1;
  v15._countAndFlagsBits = 25705;
  v15._object = (void *)0xE200000000000000;
  AnyHashable.init<A>(_:)(&v15, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_21BFA0((uint64_t)v16), (v7 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  sub_55E40((uint64_t)v16);
  if (*((_QWORD *)&v18 + 1))
  {
    result = swift_dynamicCast(&v15, &v17, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if ((result & 1) != 0)
    {
      result = sub_C51954(v15);
      if (result != 7)
      {
        v9 = result;
        v15._countAndFlagsBits = 0xD000000000000012;
        v15._object = (void *)0x8000000001104AE0;
        AnyHashable.init<A>(_:)(&v15, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v5 + 16) && (v10 = sub_21BFA0((uint64_t)v16), (v11 & 1) != 0))
        {
          sub_95094(*(_QWORD *)(v5 + 56) + 32 * v10, (uint64_t)&v17);
        }
        else
        {
          v17 = 0u;
          v18 = 0u;
        }
        sub_55E40((uint64_t)v16);
        if (*((_QWORD *)&v18 + 1))
        {
          result = swift_dynamicCast(&v15, &v17, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
          if ((result & 1) != 0)
          {
            if (LOBYTE(v15._countAndFlagsBits) != 2)
            {
              v13 = v9;
              if ((v15._countAndFlagsBits & 1) != 0)
                v14 = 256;
              else
                v14 = 0;
LABEL_26:
              v12 = v14 | v13;
              goto LABEL_13;
            }
LABEL_22:
            if (*(_QWORD *)(a2 + 16))
            {
              swift_bridgeObjectRetain();
              v19 = a2;
              __asm { BR              X9 }
            }
            v14 = 0;
            v13 = v9;
            goto LABEL_26;
          }
        }
        else
        {
          result = sub_56024((uint64_t)&v17, &qword_14FF2A0);
        }
        LOBYTE(v15._countAndFlagsBits) = 2;
        goto LABEL_22;
      }
    }
  }
  else
  {
    result = sub_56024((uint64_t)&v17, &qword_14FF2A0);
  }
  v12 = 512;
LABEL_13:
  *a3 = v12;
  return result;
}

id sub_C4471C()
{
  void *v0;
  id result;
  void *v2;
  objc_super v3;

  result = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "unregisterObserver:", v0);

    v3.receiver = v0;
    v3.super_class = (Class)type metadata accessor for ApplicationCapabilities.Controller.ProfileObserver();
    return objc_msgSendSuper2(&v3, "dealloc");
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_C4485C(char *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void))
{
  char *v8;
  double result;
  id v10;

  if (a4)
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  if (swift_weakLoadStrong(&a1[OBJC_IVAR____TtCCV9MusicCore23ApplicationCapabilities10ControllerP33_3C92A9FA31E0FE3D8D536795352BB0D115ProfileObserver_controller]))
  {
    v10 = a3;
    v8 = a1;
    UnfairLock.locked<A>(_:)(a5);
    swift_release();
    swift_bridgeObjectRelease();

  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

id sub_C44954()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)RadioAvailabilityController), "init");
  qword_14FE000 = (uint64_t)result;
  return result;
}

uint64_t sub_C44984(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_C449C4 + 4 * byte_109EF63[a1]))(0xD00000000000001FLL, 0x8000000001102C80);
}

uint64_t sub_C449C4()
{
  uint64_t v0;

  return v0 + 16;
}

unint64_t sub_C449EC()
{
  return 0xD000000000000014;
}

void sub_C44A08(char *a1)
{
  sub_BB7500(*a1);
}

void sub_C44A14()
{
  char *v0;

  sub_C49F3C(*v0);
}

void sub_C44A1C(uint64_t a1)
{
  char *v1;

  sub_C4A414(a1, *v1);
}

void sub_C44A24(uint64_t a1)
{
  char *v1;

  sub_C4A9BC(a1, *v1);
}

unint64_t sub_C44A2C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_13A6588;
  result = sub_C484C8(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_C44A60@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_C44984(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_C44A88()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_14FE008);
  __swift_project_value_buffer(v0, (uint64_t)qword_14FE008);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x6261706143707041, 0xEF73656974696C69);
}

NSString sub_C44B08()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange.getter()
{
  return sub_C44F68(&qword_14F9D88, (id *)&static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange, (uint64_t)sub_C44B08);
}

NSString sub_C44B58()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange.getter()
{
  return sub_C44F68(&qword_14F9D90, (id *)&static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange, (uint64_t)sub_C44B58);
}

NSString sub_C44BA8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange.getter()
{
  return sub_C44F68(&qword_14F9D98, (id *)&static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange, (uint64_t)sub_C44BA8);
}

NSString sub_C44BF8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange.getter()
{
  return sub_C44F68(&qword_14F9DA0, (id *)&static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange, (uint64_t)sub_C44BF8);
}

NSString sub_C44C48()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange.getter()
{
  return sub_C44F68(&qword_14F9DA8, (id *)&static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange, (uint64_t)sub_C44C48);
}

NSString sub_C44C98()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.mliEnabledDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.mliEnabledDidChange.getter()
{
  return sub_C44F68(&qword_14F9DB0, (id *)&static ApplicationCapabilities.NotificationNames.mliEnabledDidChange, (uint64_t)sub_C44C98);
}

NSString sub_C44CE8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange.getter()
{
  return sub_C44F68(&qword_14F9DB8, (id *)&static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange, (uint64_t)sub_C44CE8);
}

NSString sub_C44D38()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.supportedTabsDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.supportedTabsDidChange.getter()
{
  return sub_C44F68(&qword_14F9DC0, (id *)&static ApplicationCapabilities.NotificationNames.supportedTabsDidChange, (uint64_t)sub_C44D38);
}

NSString sub_C44D88()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange.getter()
{
  return sub_C44F68(&qword_14F9DC8, (id *)&static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange, (uint64_t)sub_C44D88);
}

NSString sub_C44DD8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.activeAccountDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.activeAccountDidChange.getter()
{
  return sub_C44F68(&qword_14F9DD0, (id *)&static ApplicationCapabilities.NotificationNames.activeAccountDidChange, (uint64_t)sub_C44DD8);
}

NSString sub_C44E28()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.getter()
{
  return sub_C44F68(&qword_14F9DD8, (id *)&static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange, (uint64_t)sub_C44E28);
}

NSString sub_C44E78()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange.getter()
{
  return sub_C44F68(&qword_14F9DE0, (id *)&static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange, (uint64_t)sub_C44E78);
}

NSString sub_C44EC8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange.getter()
{
  return sub_C44F68(&qword_14F9DE8, (id *)&static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange, (uint64_t)sub_C44EC8);
}

NSString sub_C44F18()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange.getter()
{
  return sub_C44F68(&qword_14F9DF0, (id *)&static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange, (uint64_t)sub_C44F18);
}

id sub_C44F68(_QWORD *a1, id *a2, uint64_t a3)
{
  if (*a1 != -1)
    swift_once(a1, a3);
  return *a2;
}

uint64_t _s9MusicCore23ApplicationCapabilitiesV13RatingWarningV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*a1 != *a2)
    return 0;
  v4 = a1[2];
  v5 = a2[2];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_11;
  }
  if (!v5)
    return 0;
  v6 = a1[1];
  v7 = a2[1];
  v8 = v6 == v7 && v4 == v5;
  if (v8 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v4, v7, v5, 0), result = 0, (v9 & 1) != 0))
  {
LABEL_11:
    v11 = a1[4];
    v12 = a2[4];
    if (v11)
    {
      if (v12)
      {
        v13 = a1[3];
        v14 = a2[3];
        if (v13 == v14 && v11 == v12)
          return 1;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v13, v11, v14, v12, 0) & 1) != 0)
          return 1;
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  _OWORD v19[2];
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;

  if (((*a1 ^ *a2) & 1) != 0)
    return 0;
  if (((a1[1] ^ a2[1]) & 1) != 0)
    return 0;
  if (((a1[2] ^ a2[2]) & 1) != 0)
    return 0;
  if (*((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1))
    return 0;
  if (*((_QWORD *)a1 + 2) != *((_QWORD *)a2 + 2))
    return 0;
  if ((sub_CB7250(*((_QWORD *)a1 + 3), *((_QWORD *)a2 + 3)) & 1) == 0)
    return 0;
  if ((sub_CB7250(*((_QWORD *)a1 + 4), *((_QWORD *)a2 + 4)) & 1) == 0)
    return 0;
  v4 = *(_OWORD *)(a1 + 56);
  v21[0] = *(_OWORD *)(a1 + 40);
  v21[1] = v4;
  v22 = *((_QWORD *)a1 + 9);
  v5 = *(_OWORD *)(a2 + 56);
  v19[0] = *(_OWORD *)(a2 + 40);
  v19[1] = v5;
  v20 = *((_QWORD *)a2 + 9);
  if ((_s9MusicCore23ApplicationCapabilitiesV13RatingWarningV23__derived_struct_equalsySbAE_AEtFZ_0(v21, v19) & 1) == 0)
    return 0;
  v6 = (void *)*((_QWORD *)a1 + 10);
  v7 = (void *)*((_QWORD *)a2 + 10);
  if (v6)
  {
    if (!v7)
      return 0;
    sub_4E684(0, &qword_1503900, ICMusicSubscriptionStatus_ptr);
    v8 = v7;
    v9 = v6;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if ((sub_BB7E80(a1[88], a2[88]) & 1) == 0)
    return 0;
  v11 = *((_QWORD *)a1 + 12);
  v12 = a1[104];
  v13 = *((_QWORD *)a1 + 14);
  v14 = *((_QWORD *)a2 + 12);
  v15 = a2[104];
  v16 = *((_QWORD *)a2 + 14);
  if ((sub_C3EF94(v11, v14) & 1) == 0)
    return 0;
  if (v12 == 6)
  {
    if (v15 != 6)
      return 0;
  }
  else
  {
    if (v15 == 6)
      return 0;
    sub_BB7E84(v12);
    if ((v17 & 1) == 0)
      return 0;
  }
  return (sub_C3F1A0(v13, v16) & 1) != 0;
}

char *sub_C45208(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v11;
  _BYTE v12[24];
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (char *)_swiftEmptyArrayStorage;
    v4 = 32;
    do
    {
      v5 = *(_BYTE *)(a1 + v4);
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_BCC768(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
      v7 = *((_QWORD *)v3 + 2);
      v6 = *((_QWORD *)v3 + 3);
      if (v7 >= v6 >> 1)
        v3 = sub_BCC768((char *)(v6 > 1), v7 + 1, 1, v3);
      *((_QWORD *)v3 + 2) = v7 + 1;
      v3[v7 + 32] = 0x5040302010100uLL >> (8 * v5);
      v4 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = (char *)_swiftEmptyArrayStorage;
  }
  if (qword_14F9EC0 != -1)
    swift_once(&qword_14F9EC0, sub_C7E81C);
  if (static NSUserDefaults.mobileiPod)
  {
    v8 = sub_C48028();
    v9 = sub_B9DEC0();
    NSUserDefaults.subscript.getter((uint64_t)&type metadata for NSUserDefaults.MobileiPod, v8, v9, (uint64_t)v12);
    if (v13)
    {
      if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      {
        if (!*((_QWORD *)v3 + 2))
          return v3;
LABEL_19:
        swift_bridgeObjectRetain();
        __asm { BR              X10 }
      }
    }
    else
    {
      sub_56024((uint64_t)v12, &qword_14FF2A0);
    }
  }
  if (*((_QWORD *)v3 + 2))
    goto LABEL_19;
  return v3;
}

uint64_t sub_C45538(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[9];

  if (!*(_QWORD *)(a1 + 16))
    return 1;
  if (*(_QWORD *)(a2 + 16))
  {
    v3 = *(_BYTE *)(a1 + 32);
    Hasher.init(_seed:)(v9);
    v4 = ApplicationCapabilities.Service.rawValue.getter(v3);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

void sub_C4593C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a1)
  {
    v3 = a1;
    v4 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend(v3, "numberForBagKey:", v4);

    if (v5)
    {
      v19 = 0;
      v20 = 1;
      static Int._conditionallyBridgeFromObjectiveC(_:result:)(v5, &v19);

      if (v20)
        v6 = 0x7FFFFFFFFFFFFFFFLL;
      else
        v6 = v19;
    }
    else
    {

      v6 = 0x7FFFFFFFFFFFFFFFLL;
    }
    v11 = v3;
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "stringForBagKey:", v12);

    if (v13)
    {
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v10 = v14;

    }
    else
    {

      v9 = 0;
      v10 = 0;
    }
    v15 = v11;
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v15, "stringForBagKey:", v16);

    if (v17)
    {
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v8 = v18;

    }
    else
    {

      v7 = 0;
      v8 = 0;
    }
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v6 = 0x7FFFFFFFFFFFFFFFLL;
  }
  *a2 = v6;
  a2[1] = v9;
  a2[2] = v10;
  a2[3] = v7;
  a2[4] = v8;
}

void sub_C45B24(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  int64_t v19;

  if (!a2)
  {
LABEL_25:
    sub_C44094(a1);
    return;
  }
  v18 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v19 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v7 >= v19)
      goto LABEL_23;
    v11 = *(_QWORD *)(v18 + 8 * v7);
    if (!v11)
      break;
LABEL_17:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_18:
    v13 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v9);
    v14 = *v13;
    v15 = (void *)v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17._countAndFlagsBits = v14;
    v17._object = v15;
    _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A4BD0, v17);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v16);
  }
  v12 = v7 + 1;
  if (v7 + 1 >= v19)
    goto LABEL_23;
  v11 = *(_QWORD *)(v18 + 8 * v12);
  if (v11)
    goto LABEL_16;
  v12 = v7 + 2;
  if (v7 + 2 >= v19)
    goto LABEL_23;
  v11 = *(_QWORD *)(v18 + 8 * v12);
  if (v11)
  {
LABEL_16:
    v7 = v12;
    goto LABEL_17;
  }
  v12 = v7 + 3;
  if (v7 + 3 < v19)
  {
    v11 = *(_QWORD *)(v18 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        v7 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        if (v7 >= v19)
          goto LABEL_23;
        v11 = *(_QWORD *)(v18 + 8 * v7);
        ++v12;
        if (v11)
          goto LABEL_17;
      }
LABEL_27:
      __break(1u);
      JUMPOUT(0xC45FDCLL);
    }
    goto LABEL_16;
  }
LABEL_23:
  swift_release(a2);
  if (!_swiftEmptyArrayStorage[2])
  {
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    goto LABEL_25;
  }
}

_QWORD *sub_C45FFC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  unsigned __int8 v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unsigned __int8 v23;
  uint64_t v24;
  _QWORD v25[9];
  _QWORD *v26;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v3 = a2;
  v4 = 0;
  v5 = _swiftEmptyArrayStorage;
  v24 = a1 + 32;
  v20 = *(_QWORD *)(a1 + 16);
  do
  {
    if (v4 <= v2)
      v6 = v2;
    else
      v6 = v4;
    v21 = v6;
    v22 = v5;
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
        JUMPOUT(0xC46760);
      }
      v7 = (unsigned __int8 *)(v24 + 2 * v4);
      v8 = *v7;
      ++v4;
      if (v8 == 2)
      {
        v9 = *(_QWORD *)(v3 + 24);
        if (!*(_QWORD *)(v9 + 16))
          goto LABEL_9;
        Hasher.init(_seed:)(v25);
        swift_bridgeObjectRetain();
        String.hash(into:)(v25, 0xD000000000000013, 0x80000000010E8C50);
        v11 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
        if (((*(_QWORD *)(v9 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
          __asm { BR              X9 }
        goto LABEL_7;
      }
      if (v8 == 6)
      {
        v9 = *(_QWORD *)(v3 + 24);
        if (!*(_QWORD *)(v9 + 16))
          goto LABEL_9;
        Hasher.init(_seed:)(v25);
        swift_bridgeObjectRetain();
        String.hash(into:)(v25, 0x646956636973756DLL, 0xEB00000000736F65);
        v12 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
        if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
          __asm { BR              X9 }
LABEL_7:
        v2 = v20;
        v5 = v22;
        goto LABEL_8;
      }
      if (v8 != 4)
        break;
      v9 = *(_QWORD *)(v3 + 24);
      if (!*(_QWORD *)(v9 + 16))
        goto LABEL_9;
      Hasher.init(_seed:)(v25);
      swift_bridgeObjectRetain();
      String.hash(into:)(v25, 0x6F69646172, 0xE500000000000000);
      v10 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
      if (((*(_QWORD *)(v9 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
        __asm { BR              X9 }
      v3 = a2;
LABEL_8:
      v6 = v21;
      swift_bridgeObjectRelease(v9);
LABEL_9:
      if (v4 == v2)
        return v5;
    }
    v23 = v7[1];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
    v26 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_C05868(0, v5[2] + 1, 1);
      v5 = v26;
    }
    v14 = v23;
    v16 = v5[2];
    v15 = v5[3];
    if (v16 >= v15 >> 1)
    {
      sub_C05868((char *)(v15 > 1), v16 + 1, 1);
      v14 = v23;
      v5 = v26;
    }
    v5[2] = v16 + 1;
    v17 = (char *)v5 + 2 * v16;
    v17[32] = v8;
    v17[33] = v14;
  }
  while (v4 != v2);
  return v5;
}

id sub_C467E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  void *v7;
  id result;
  void *v9;
  unsigned __int8 v10;
  void *v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  char v20;
  char v21;
  id v22;
  id v23;
  NSString v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  id v45;
  char v46;
  char v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  id v54;
  unsigned __int8 v55;
  unsigned __int8 v56;
  id v57;
  _QWORD *v58;
  _QWORD *v59;
  os_unfair_lock_s *v60;
  os_unfair_lock_s *v61;
  os_unfair_lock_s *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  char v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  unsigned int v79;
  id v80;
  char v81;
  id v83;
  uint64_t v84;
  BOOL v85;
  unsigned __int8 v86;
  unsigned __int8 v87;
  __int128 v88;
  __int128 v89;
  _BYTE v90[40];
  void *v91;
  char v92;
  char *v93;
  char v94;
  uint64_t v95;
  _OWORD v96[2];
  uint64_t v97;

  v7 = (void *)objc_opt_self(MPCloudController);
  result = objc_msgSend(v7, "sharedCloudController");
  if (result)
  {
    v9 = result;
    v10 = objc_msgSend(result, "hasProperNetworkConditionsToShowCloudMedia");

    v86 = v10;
    v87 = 0;
    v88 = 0uLL;
    *(_QWORD *)&v89 = &_swiftEmptySetSingleton;
    *((_QWORD *)&v89 + 1) = &_swiftEmptySetSingleton;
    *(_QWORD *)v90 = 0x7FFFFFFFFFFFFFFFLL;
    memset(&v90[8], 0, 32);
    v11 = (void *)objc_opt_self(MPCloudServiceStatusController);
    v12 = objc_msgSend(v11, "sharedController");
    v80 = objc_msgSend(v12, "musicSubscriptionStatus");

    v92 = 1;
    v93 = sub_C45208((uint64_t)_swiftEmptyArrayStorage);
    v94 = v13;
    v95 = v14;
    v15 = objc_msgSend(v11, "sharedController");
    v16 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
    v83 = objc_msgSend(v7, "sharedCloudController");
    v17 = objc_msgSend(v15, "musicSubscriptionStatus");
    v18 = v17;
    v81 = a3;
    if (v17)
      v79 = objc_msgSend(v17, "capabilities") & 1;
    else
      v79 = 0;
    v19 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
    sub_C42A94();
    v21 = v20;

    v85 = (v21 & 1) == 0;
    if (v18)
    {
      v22 = v18;
      *((_QWORD *)&v88 + 1) = objc_msgSend(v22, "statusType");
      v23 = objc_msgSend(v22, "capabilities");

      *(_QWORD *)&v88 = v23;
    }
    if (sub_C43858((_BOOL8)v18, v15))
      sub_CBC900((unsigned __int8 *)v96, 2u);
    if (qword_14F9D78 != -1)
      swift_once(&qword_14F9D78, sub_C44954);
    if (objc_msgSend((id)qword_14FE000, "isRadioAvailable"))
      sub_CBC900((unsigned __int8 *)v96, 4u);
    if ((sub_C43A2C(v16, a1) & 1) != 0)
      sub_CBC900((unsigned __int8 *)v96, 3u);
    if (a1)
    {
      v24 = String._bridgeToObjectiveC()();
      v25 = objc_msgSend(a1, "BOOLValueForBagKey:", v24);

      if (v25)
        sub_CBC900((unsigned __int8 *)v96, 9u);
    }
    if (v16)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureGroupActivityAllowed);
      v27 = v26;
      v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v27);
      LODWORD(v27) = objc_msgSend(v16, "effectiveBoolValueForSetting:", v28);

      if ((_DWORD)v27 != 2)
        sub_CBC900((unsigned __int8 *)v96, 6u);
      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureMusicServiceAllowed);
      v30 = v29;
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30);
      LODWORD(v30) = objc_msgSend(v16, "effectiveBoolValueForSetting:", v31);

      if ((_DWORD)v30 != 2)
        sub_CBC900((unsigned __int8 *)v96, 0);
      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureMusicVideosAllowed);
      v33 = v32;
      v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v33);
      LODWORD(v33) = objc_msgSend(v16, "effectiveBoolValueForSetting:", v34);

      if ((_DWORD)v33 != 2)
        sub_CBC900((unsigned __int8 *)v96, 1u);
      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureITunesAllowed);
      v36 = v35;
      v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v36);
      LODWORD(v36) = objc_msgSend(v16, "effectiveBoolValueForSetting:", v37);

      if ((_DWORD)v36 != 2)
        sub_CBC900((unsigned __int8 *)v96, 5u);
      v91 = v18;
      v38 = v18;

      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureAccountModificationAllowed);
      v40 = v39;
      v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v40);
      LODWORD(v40) = objc_msgSend(v16, "effectiveBoolValueForSetting:", v41);

      if ((_DWORD)v40 != 2)
        sub_CBC900((unsigned __int8 *)v96, 8u);
      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureExplicitContentAllowed);
      v43 = v42;
      v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v43);
      LODWORD(v43) = objc_msgSend(v16, "isBoolSettingLockedDownByRestrictions:", v44);

      if ((_DWORD)v43)
        sub_CBC900((unsigned __int8 *)v96, 7u);
    }
    else
    {
      v91 = v18;
      v45 = v18;

    }
    swift_bridgeObjectRetain();
    v46 = sub_C45538((uint64_t)&off_13A4C50, v89);
    swift_bridgeObjectRelease(v89);
    if ((v46 & 1) != 0)
    {
      v47 = v79 ? 2 : 0;
      v92 = v47;
      if (v18)
      {
        v48 = v18;
        if (objc_msgSend(v48, "statusType") == (char *)&dword_0 + 3)
        {
          if (qword_14F9D80 != -1)
            swift_once(&qword_14F9D80, sub_C44A88);
          v49 = type metadata accessor for Logger(0);
          v50 = __swift_project_value_buffer(v49, (uint64_t)qword_14FE008);
          v51 = Logger.logObject.getter(v50);
          v52 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v51, v52))
          {
            v53 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v53 = 0;
            _os_log_impl(&dword_0, v51, v52, "Unexpectedly found a Voice subscriber! 😡", v53, 2u);
            swift_slowDealloc(v53, -1, -1);
          }

        }
      }
    }
    if (a1 && (v88 & 1) != 0 && (sub_C43C40() & 1) != 0 && (sub_C43E6C() & 1) != 0)
      sub_CBC900((unsigned __int8 *)v96, 0xAu);
    if (v83)
    {
      v54 = v83;
      if ((objc_msgSend(v54, "shouldProhibitMusicActionForCurrentNetworkConditions") & 1) != 0)
        v55 = 0;
      else
        v55 = objc_msgSend(v54, "hasProperNetworkConditionsToShowCloudMedia");

    }
    else
    {
      v55 = 0;
    }
    v86 = v55;
    v56 = objc_msgSend(v15, "isCloudLibraryEnabled");
    v87 = v56;
    v57 = a1;
    sub_C4593C(a1, (uint64_t *)v96);
    swift_bridgeObjectRelease(*(_QWORD *)&v90[16]);
    swift_bridgeObjectRelease(*(_QWORD *)&v90[32]);
    *(_OWORD *)v90 = v96[0];
    *(_OWORD *)&v90[16] = v96[1];
    *(_QWORD *)&v90[32] = v97;
    if ((v81 & 1) != 0)
    {
      sub_C44094(2);
      v59 = v58;
    }
    else
    {
      v60 = *(os_unfair_lock_s **)(a2 + 16);
      v61 = v60 + 4;
      v62 = v60 + 11;
      os_unfair_lock_lock(v60 + 11);
      sub_D7C3AC(v61, a1, a2, &v84);
      os_unfair_lock_unlock(v62);
      v63 = v84;
      if (v84)
      {
        sub_C45B24(v92, v84);
        v65 = v64;
        swift_bridgeObjectRelease(v63);
      }
      else
      {
        sub_C44094(v92);
        v65 = v66;
      }
      v59 = sub_C45FFC(v65, (uint64_t)&v85);
      swift_bridgeObjectRelease(v65);
      v55 = v86;
      v56 = v87;
    }
    v67 = sub_C45208((uint64_t)v59);
    v69 = v68;
    v71 = v70;

    swift_release(a2);
    swift_bridgeObjectRelease(v93);
    result = (id)swift_bridgeObjectRelease(v95);
    v72 = *(_QWORD *)&v90[32];
    v73 = v91;
    v74 = v92;
    v76 = v88;
    v75 = v89;
    v77 = *(_OWORD *)v90;
    v78 = *(_OWORD *)&v90[16];
    *(_BYTE *)a4 = v85;
    *(_BYTE *)(a4 + 1) = v55;
    *(_BYTE *)(a4 + 2) = v56;
    *(_OWORD *)(a4 + 8) = v76;
    *(_OWORD *)(a4 + 24) = v75;
    *(_OWORD *)(a4 + 40) = v77;
    *(_OWORD *)(a4 + 56) = v78;
    *(_QWORD *)(a4 + 72) = v72;
    *(_QWORD *)(a4 + 80) = v73;
    *(_BYTE *)(a4 + 88) = v74;
    *(_QWORD *)(a4 + 96) = v67;
    *(_BYTE *)(a4 + 104) = v69;
    *(_QWORD *)(a4 + 112) = v71;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_C47038(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t *v8;
  _UNKNOWN **v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _UNKNOWN **v29;
  id v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  id v38;
  uint64_t v39;

  v3 = a1;
  v34 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v35 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = &qword_14F8FF0[2];
  v33 = a2;
  v9 = MPCloudController_ptr;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v12 = (v6 - 1) & v6;
      v37 = v7;
      v13 = v11 | (v7 << 6);
      goto LABEL_24;
    }
    v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v35)
      goto LABEL_28;
    v15 = *(_QWORD *)(v34 + 8 * v14);
    v16 = v7 + 1;
    if (!v15)
    {
      v16 = v7 + 2;
      if (v7 + 2 >= v35)
        goto LABEL_28;
      v15 = *(_QWORD *)(v34 + 8 * v16);
      if (!v15)
      {
        v16 = v7 + 3;
        if (v7 + 3 >= v35)
          goto LABEL_28;
        v15 = *(_QWORD *)(v34 + 8 * v16);
        if (!v15)
        {
          v16 = v7 + 4;
          if (v7 + 4 >= v35)
            goto LABEL_28;
          v15 = *(_QWORD *)(v34 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v12 = (v15 - 1) & v15;
    v37 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    v36 = v12;
    v18 = v8[432];
    v19 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
    if (v18 != -1)
      swift_once(&qword_14F9D80, sub_C44A88);
    v20 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v20, (uint64_t)qword_14FE008);
    v21 = v19;
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v39 = v25;
      *(_DWORD *)v24 = 136446210;
      v38 = v21;
      _s3__C4NameVMa_0(0);
      v26 = v3;
      v28 = v27;
      v29 = v9;
      v30 = v21;
      v31 = (char *)String.init<A>(describing:)(&v38, v28);
      *(_QWORD *)(v24 + 4) = sub_BA95EC(v31, v32, &v39);

      v9 = v29;
      v3 = v26;
      a2 = v33;
      v8 = qword_14F8FF0 + 16;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v22, v23, "Notifying changes for '%{public}s'", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

    }
    v6 = v36;
    v7 = v37;
    v10 = objc_msgSend((id)objc_opt_self(v9[223]), "defaultCenter");
    objc_msgSend(v10, "postNotificationName:object:", v21, a2);

  }
  v17 = v7 + 5;
  if (v7 + 5 >= v35)
  {
LABEL_28:
    swift_release();
    return;
  }
  v15 = *(_QWORD *)(v34 + 8 * v17);
  if (v15)
  {
    v16 = v7 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v35)
      goto LABEL_28;
    v15 = *(_QWORD *)(v34 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
}

unint64_t _s9MusicCore23ApplicationCapabilitiesV7ServiceO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A63E0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xB)
    return 11;
  else
    return v3;
}

void sub_C473F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate) & 1) == 0)
  {
    **(_BYTE **)(v0 + 24) = 1;
    *(_BYTE *)(v1 + v2) = 1;
  }
}

uint64_t sub_C47424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_14FE04C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[2] = v2;
  return swift_task_switch(sub_C41250, 0, 0);
}

double sub_C47484(uint64_t a1)
{
  return sub_C42F6C(a1);
}

unint64_t sub_C47490()
{
  unint64_t result;

  result = qword_14FE090;
  if (!qword_14FE090)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplicationCapabilities.Service, &type metadata for ApplicationCapabilities.Service);
    atomic_store(result, (unint64_t *)&qword_14FE090);
  }
  return result;
}

unint64_t sub_C474D8()
{
  unint64_t result;

  result = qword_14FE098;
  if (!qword_14FE098)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplicationCapabilities.SubscriptionState, &type metadata for ApplicationCapabilities.SubscriptionState);
    atomic_store(result, (unint64_t *)&qword_14FE098);
  }
  return result;
}

uint64_t destroy for ApplicationCapabilities(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 112));
}

uint64_t initializeWithCopy for ApplicationCapabilities(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ApplicationCapabilities(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = *(void **)(a1 + 80);
  v9 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = v9;

  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v11 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 112);
  v13 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t assignWithTake for ApplicationCapabilities(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  v6 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Symbol(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Symbol(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities()
{
  return &type metadata for ApplicationCapabilities;
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities.Service(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_C47918 + 4 * byte_109EF88[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_C4794C + 4 * byte_109EF83[v4]))();
}

uint64_t sub_C4794C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C47954(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC4795CLL);
  return result;
}

uint64_t sub_C47968(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC47970);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_C47974(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4797C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.Service()
{
  return &type metadata for ApplicationCapabilities.Service;
}

uint64_t destroy for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for ApplicationCapabilities.RatingWarning(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ApplicationCapabilities.RatingWarning(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[3] = a2[3];
  v5 = a2[4];
  v6 = a1[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t assignWithTake for ApplicationCapabilities.RatingWarning(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplicationCapabilities.RatingWarning(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities.RatingWarning(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.RatingWarning()
{
  return &type metadata for ApplicationCapabilities.RatingWarning;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.SubscriptionState()
{
  return &type metadata for ApplicationCapabilities.SubscriptionState;
}

uint64_t destroy for ApplicationCapabilities.Tabs(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[2]);
}

uint64_t _s9MusicCore23ApplicationCapabilitiesV4TabsVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ApplicationCapabilities.Tabs(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = a2[2];
  v6 = a1[2];
  a1[2] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t *assignWithTake for ApplicationCapabilities.Tabs(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.Tabs()
{
  return &type metadata for ApplicationCapabilities.Tabs;
}

uint64_t sub_C47CD4()
{
  return type metadata accessor for ApplicationCapabilities.Controller(0);
}

uint64_t type metadata accessor for ApplicationCapabilities.Controller(uint64_t a1)
{
  uint64_t result;

  result = qword_14FE0D8;
  if (!qword_14FE0D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ApplicationCapabilities.Controller);
  return result;
}

void sub_C47D18(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_109F2C0;
  sub_C47DD0();
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_109F2C0;
    v4[3] = &unk_109F2D8;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = &unk_109F2F0;
    v4[6] = &unk_109F308;
    v4[7] = &unk_109F2F0;
    v4[8] = &unk_109F2F0;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

void sub_C47DD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_14FE0E8)
  {
    v0 = type metadata accessor for Published(0, &type metadata for ApplicationCapabilities);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_14FE0E8);
  }
}

uint64_t type metadata accessor for ApplicationCapabilities.Controller.ProfileObserver()
{
  return objc_opt_self(_TtCCV9MusicCore23ApplicationCapabilities10ControllerP33_3C92A9FA31E0FE3D8D536795352BB0D115ProfileObserver);
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.NotificationNames()
{
  return &type metadata for ApplicationCapabilities.NotificationNames;
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities.Tabs.Configuration(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_C47EA0 + 4 * byte_109EF92[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_C47ED4 + 4 * byte_109EF8D[v4]))();
}

uint64_t sub_C47ED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_C47EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0xC47EE4);
  return result;
}

uint64_t sub_C47EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0xC47EF8);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_C47EFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_C47F04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.Tabs.Configuration()
{
  return &type metadata for ApplicationCapabilities.Tabs.Configuration;
}

_QWORD *sub_C47F20()
{
  uint64_t v0;

  return sub_C427F4(v0);
}

uint64_t sub_C47F38()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
  return swift_deallocObject(v0, 168, 7);
}

uint64_t sub_C47FA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (uint64_t)(v1 + 5);
  v8 = v1[20];
  v9 = (_QWORD *)swift_task_alloc(dword_14FE24C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_50F8C;
  return sub_C426A8(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_C48028()
{
  unint64_t result;

  result = qword_14FE258;
  if (!qword_14FE258)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NSUserDefaults.MobileiPod, &type metadata for NSUserDefaults.MobileiPod);
    atomic_store(result, (unint64_t *)&qword_14FE258);
  }
  return result;
}

unint64_t sub_C4806C()
{
  unint64_t result;

  result = qword_14FE270;
  if (!qword_14FE270)
  {
    result = swift_getWitnessTable(&unk_109F3E4, &_s3KeyON);
    atomic_store(result, (unint64_t *)&qword_14FE270);
  }
  return result;
}

uint64_t sub_C480B0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C480D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2A8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

double sub_C4814C(void *a1)
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2A8);
  return sub_C4325C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_C48190()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

double sub_C481C4(uint64_t a1)
{
  uint64_t v1;

  return sub_C4F498(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_C481D0()
{
  uint64_t v0;

  return sub_C4F6A8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

_QWORD *sub_C481E8()
{
  uint64_t v0;

  return sub_C433BC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_C48204()
{
  char *v0;

  sub_C412AC(v0);
}

uint64_t sub_C48220(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_14FE2BC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_C41880(a1, v4, v5, v6);
}

double sub_C4828C(uint64_t a1)
{
  uint64_t v1;

  return sub_C40300(a1, v1);
}

uint64_t sub_C48294(char a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;

  return sub_C40B74(a1, a2, a3, v3);
}

uint64_t block_copy_helper_289(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_289(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_C482B4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_C482D8()
{
  unint64_t result;

  result = qword_14FE2E0;
  if (!qword_14FE2E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplicationCapabilities.Service, &type metadata for ApplicationCapabilities.Service);
    atomic_store(result, (unint64_t *)&qword_14FE2E0);
  }
  return result;
}

double sub_C4831C()
{
  uint64_t v0;

  return sub_C42958(v0);
}

double sub_C48324()
{
  uint64_t v0;

  return sub_C42B9C(v0, (void (*)(void))sub_C47F20);
}

uint64_t sub_C48344()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_C48370(void *a1)
{
  uint64_t v1;

  sub_C42C20(a1, v1);
}

id sub_C48378()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag) = v2;

  return v2;
}

uint64_t _s9MusicCore23ApplicationCapabilitiesV17SubscriptionStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_C48400 + 4 * byte_109EF9C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_C48434 + 4 * byte_109EF97[v4]))();
}

uint64_t sub_C48434(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4843C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC48444);
  return result;
}

uint64_t sub_C48450(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC48458);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_C4845C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C48464(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s3KeyOMa()
{
  return &_s3KeyON;
}

unint64_t sub_C48484()
{
  unint64_t result;

  result = qword_14FE310;
  if (!qword_14FE310)
  {
    result = swift_getWitnessTable(&unk_109F3BC, &_s3KeyON);
    atomic_store(result, (unint64_t *)&qword_14FE310);
  }
  return result;
}

unint64_t sub_C484C8(Swift::String string, Swift::OpaquePointer cases)
{
  void *object;
  Swift::String v3;
  unint64_t v5;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  if (v5 >= 4)
    return 4;
  else
    return v5;
}

void *BackgroundFetchManager.httpHeader.unsafeMutableAddressor()
{
  return &static BackgroundFetchManager.httpHeader;
}

unint64_t static BackgroundFetchManager.httpHeader.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_C48538()
{
  uint64_t Manager;
  uint64_t result;

  Manager = type metadata accessor for BackgroundFetchManager();
  result = swift_initStaticObject(Manager, &unk_14FA6D8);
  static BackgroundFetchManager.shared = result;
  return result;
}

uint64_t *BackgroundFetchManager.shared.unsafeMutableAddressor()
{
  if (qword_14F9DF8 != -1)
    swift_once(&qword_14F9DF8, sub_C48538);
  return &static BackgroundFetchManager.shared;
}

uint64_t static BackgroundFetchManager.shared.getter()
{
  uint64_t v0;

  return swift_initStaticObject(v0, &unk_14FA6D8);
}

void BackgroundFetchManager.subscript.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v13[2];
  __int128 v14;
  __int128 v15;

  swift_bridgeObjectRetain();
  v6 = sub_C48DB8();
  if (!*(_QWORD *)(v6 + 16) || (v7 = sub_21BAD0(a1, a2), (v8 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v9 + 16) || (v10 = sub_21BAD0(7107189, 0xE300000000000000), (v11 & 1) == 0))
  {
    v14 = 0u;
    v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_95094(*(_QWORD *)(v9 + 56) + 32 * v10, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v15 + 1))
  {
LABEL_10:
    sub_56024((uint64_t)&v14, &qword_14FF2A0);
    goto LABEL_11;
  }
  if ((swift_dynamicCast(v13, &v14, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    URL.init(string:)(v13[0], v13[1]);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_11:
  v12 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 1, 1, v12);
}

void (*BackgroundFetchManager.subscript.modify(uint64_t *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  size_t v6;
  void *v7;

  *a1 = a2;
  a1[1] = a3;
  v6 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20) - 8) + 64);
  a1[2] = (uint64_t)malloc(v6);
  v7 = malloc(v6);
  a1[3] = (uint64_t)v7;
  BackgroundFetchManager.subscript.getter(a2, a3, (uint64_t)v7);
  return sub_C48788;
}

void sub_C48788(uint64_t *a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)a1[2];
  v3 = (void *)a1[3];
  v5 = *a1;
  v4 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_B9E670(a1[3], (uint64_t)v2);
    swift_bridgeObjectRetain();
    _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0((uint64_t)v2, v5, v4);
    sub_56024((uint64_t)v3, &qword_14FAC20);
  }
  else
  {
    swift_bridgeObjectRetain();
    _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0((uint64_t)v3, v5, v4);
  }
  free(v3);
  free(v2);
}

Swift::Void __swiftcall BackgroundFetchManager.removeAll()()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "removeObjectForKey:", v1);

}

void sub_C48894(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), int a4, int a5, int a6, dispatch_group_t group)
{
  if (a3)
    a1 = a3(a1, a2);
  if (a2)
  {
    __chkstk_darwin(a1);
    swift_errorRetain(a2);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C49F14);
    swift_errorRelease(a2);
  }
  dispatch_group_leave(group);
}

uint64_t sub_C48950(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  _BYTE v8[24];

  swift_beginAccess(a1, v8, 1, 0);
  v4 = (_QWORD *)*a1;
  swift_errorRetain(a2);
  result = swift_isUniquelyReferenced_nonNull_native(v4);
  *a1 = (uint64_t)v4;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_BCD0AC(0, v4[2] + 1, 1, v4);
    v4 = (_QWORD *)result;
    *a1 = result;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    result = (uint64_t)sub_BCD0AC((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    v4 = (_QWORD *)result;
    *a1 = result;
  }
  v4[2] = v7 + 1;
  v4[v7 + 4] = a2;
  return result;
}

double sub_C48A20(uint64_t a1, uint64_t a2, void (*a3)())
{
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_14FE3C8);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_C49EBC);
  a3();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_C48A9C()
{
  void *v0;
  char v1;
  uint64_t v2;
  void *v3;
  char v4;

  if (qword_14F9E30 != -1)
    swift_once(&qword_14F9E30, sub_C4F36C);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2B0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_B9DEA8);
  v0 = v3;
  if (v3 && (sub_C48B78(v3, (uint64_t)&v3), v0, (v4 & 1) == 0))
  {
    v1 = 0;
    v2 = (uint64_t)v3;
  }
  else
  {
    v1 = 1;
    v2 = 0x4122750000000000;
  }
  qword_14FE320 = v2;
  byte_14FE328 = v1;
}

uint64_t sub_C48B78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  __int128 *v17;
  char v18;
  _QWORD v19[2];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicCommon);
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(a1, "valueForBagKey:", v6, swift_bridgeObjectRelease(v5).n128_f64[0]);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)(&v22, v7);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_C3B070((uint64_t)&v22, (uint64_t)&v20);
  if (!*((_QWORD *)&v21 + 1))
    goto LABEL_15;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500A90);
  result = swift_dynamicCast(&v22, &v20, (char *)&type metadata for Any + 8, v8, 6);
  if ((result & 1) == 0)
  {
LABEL_17:
    *(_QWORD *)a2 = 0;
    v18 = 1;
    goto LABEL_18;
  }
  v10 = v22;
  if (*(_QWORD *)(v22 + 16) && (v11 = sub_21BAD0(0xD00000000000001ELL, 0x8000000001105180), (v12 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease(v10);
  if (!*((_QWORD *)&v21 + 1))
  {
LABEL_15:
    v17 = &v20;
LABEL_16:
    result = sub_56024((uint64_t)v17, &qword_14FF2A0);
    goto LABEL_17;
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE260);
  result = swift_dynamicCast(&v22, &v20, (char *)&type metadata for Any + 8, v13, 6);
  if ((result & 1) == 0)
    goto LABEL_17;
  v14 = v22;
  v19[0] = 0xD000000000000021;
  v19[1] = 0x80000000011051A0;
  AnyHashable.init<A>(_:)(v19, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_21BFA0((uint64_t)&v20), (v16 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  swift_bridgeObjectRelease(v14);
  sub_55E40((uint64_t)&v20);
  if (!*((_QWORD *)&v23 + 1))
  {
    v17 = &v22;
    goto LABEL_16;
  }
  result = swift_dynamicCast(a2, &v22, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  if ((result & 1) == 0)
    *(_QWORD *)a2 = 0;
  v18 = result ^ 1;
LABEL_18:
  *(_BYTE *)(a2 + 8) = v18;
  return result;
}

unint64_t sub_C48DB8()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dictionaryForKey:", v1);

  if (v2)
  {
    v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    sub_D7B1DC(v3);
    v5 = v4;

    swift_bridgeObjectRelease(v3);
    if (v5)
      return v5;
  }
  else
  {

  }
  v7 = sub_C268CC((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(0);
  return v7;
}

void _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  Class isa;
  NSString v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  __n128 v19;
  unint64_t v20;
  unint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  id v23;
  Class v24;
  NSString v25;
  _BYTE v27[128];
  unint64_t v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_B9E670(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_56024((uint64_t)v8, &qword_14FAC20);
    v28 = sub_C48DB8();
    sub_D0A5B0(a2, a3);
    swift_bridgeObjectRelease();
    v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500A90);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setObject:forKey:", isa, v15);

    sub_56024(a1, &qword_14FAC20);
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503EC0);
    inited = swift_initStackObject(v16, v27);
    *(_OWORD *)(inited + 16) = xmmword_105F890;
    *(_QWORD *)(inited + 32) = 7107189;
    *(_QWORD *)(inited + 40) = 0xE300000000000000;
    *(_QWORD *)(inited + 48) = _s10Foundation3URLV11MusicJSCoreE12JSSerializedSSvg_0();
    *(_QWORD *)(inited + 56) = v18;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 80) = 1702125924;
    *(_QWORD *)(inited + 88) = 0xE400000000000000;
    *(_QWORD *)(inited + 120) = type metadata accessor for Date(0);
    __swift_allocate_boxed_opaque_existential_1Tm((_QWORD *)(inited + 96));
    Date.init()(v19);
    v20 = sub_C263E0(inited);
    v21 = sub_C48DB8();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
    v28 = v21;
    sub_C2763C(v20, a2, a3, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500A90);
    v24 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setObject:forKey:", v24, v25);

    sub_56024(a1, &qword_14FAC20);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void _s9MusicCore22BackgroundFetchManagerC14updateURLCache5queue20onDidReceiveResponse10completionySo012OS_dispatch_H0C_ySo13ICURLResponseCSg_s5Error_pSgtcSgySaysAM_pGctF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  dispatch_group_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  __n128 v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  void (**v49)(dispatch_group_t, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  __n128 v52;
  char *v53;
  double v54;
  char *v55;
  Swift::String v56;
  Swift::String v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  void *v64;
  __n128 v65;
  id v66;
  Class isa;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  NSObject *v75;
  double v76;
  void *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  __n128 v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  dispatch_group_t v90;
  _QWORD *v91;
  _QWORD *v92;
  char *v93;
  void (*v94)(char *, uint64_t);
  id v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  dispatch_group_t v118;
  char *v119;
  dispatch_group_t v120;
  uint64_t v121;
  void (**v122)(dispatch_group_t, uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  int64_t v127;
  __int128 aBlock;
  __int128 v129;
  void *v130;
  _QWORD *v131;
  _QWORD v132[2];

  v103 = a5;
  v102 = a4;
  v99 = a3;
  v98 = a2;
  v106 = a1;
  v110 = type metadata accessor for DispatchWorkItemFlags(0);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v108 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for DispatchQoS(0);
  v105 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v104 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for URLRequest(0);
  v112 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v113 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v92 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v11);
  v13 = (dispatch_group_t)((char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for Date(0);
  v122 = *(void (***)(dispatch_group_t, uint64_t, uint64_t, uint64_t))(v14 - 8);
  v123 = v14;
  __chkstk_darwin(v14);
  v115 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v92 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v19);
  v21 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for URL(0);
  v22 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v101 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v124 = (char *)&v92 - v25;
  v118 = dispatch_group_create();
  v26 = type metadata accessor for UnfairLock();
  swift_allocObject(v26, 24, 7);
  v116 = UnfairLock.init()();
  v117 = swift_allocObject(&unk_13B0FC8, 24, 7);
  *(_QWORD *)(v117 + 16) = _swiftEmptyArrayStorage;
  if (qword_14F9E00 != -1)
LABEL_45:
    swift_once(&qword_14F9E00, sub_C48A9C);
  v27 = *(double *)&qword_14FE320;
  v28 = sub_C48DB8();
  v29 = v28;
  v30 = 0;
  v31 = v28 + 64;
  v32 = 1 << *(_BYTE *)(v28 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & *(_QWORD *)(v28 + 64);
  v127 = (unint64_t)(v32 + 63) >> 6;
  v126 = (char *)&type metadata for Any + 8;
  v100 = (void *)0x8000000001105110;
  v120 = v13;
  v119 = v18;
  v111 = v21;
  v121 = v22;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          do
          {
            if (v34)
            {
              v35 = __clz(__rbit64(v34));
              v34 &= v34 - 1;
              v36 = v35 | (v30 << 6);
            }
            else
            {
              v37 = v30 + 1;
              if (__OFADD__(v30, 1))
              {
                __break(1u);
LABEL_44:
                __break(1u);
                goto LABEL_45;
              }
              if (v37 >= v127)
                goto LABEL_42;
              v38 = *(_QWORD *)(v31 + 8 * v37);
              ++v30;
              if (!v38)
              {
                v30 = v37 + 1;
                if (v37 + 1 >= v127)
                  goto LABEL_42;
                v38 = *(_QWORD *)(v31 + 8 * v30);
                if (!v38)
                {
                  v30 = v37 + 2;
                  if (v37 + 2 >= v127)
                    goto LABEL_42;
                  v38 = *(_QWORD *)(v31 + 8 * v30);
                  if (!v38)
                  {
                    v30 = v37 + 3;
                    if (v37 + 3 >= v127)
                      goto LABEL_42;
                    v38 = *(_QWORD *)(v31 + 8 * v30);
                    if (!v38)
                    {
                      v39 = v37 + 4;
                      if (v39 >= v127)
                      {
LABEL_42:
                        swift_release(v29);
                        v78 = (_QWORD *)swift_allocObject(&unk_13B1068, 48, 7);
                        v79 = v116;
                        v80 = v117;
                        v78[2] = v116;
                        v78[3] = v80;
                        v81 = v103;
                        v78[4] = v102;
                        v78[5] = v81;
                        v130 = sub_C49E68;
                        v131 = v78;
                        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                        *((_QWORD *)&aBlock + 1) = 1107296256;
                        *(_QWORD *)&v129 = sub_42D124;
                        *((_QWORD *)&v129 + 1) = &block_descriptor_12_16;
                        v82 = _Block_copy(&aBlock);
                        swift_retain(v79);
                        swift_retain(v80);
                        v83 = swift_retain(v81);
                        v84 = v104;
                        static DispatchQoS.unspecified.getter(v83);
                        v132[0] = _swiftEmptyArrayStorage;
                        v85 = sub_C49E74();
                        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
                        v87 = sub_C3C820();
                        v88 = v108;
                        v89 = v110;
                        dispatch thunk of SetAlgebra.init<A>(_:)(v132, v86, v87, v110, v85);
                        v90 = v118;
                        OS_dispatch_group.notify(qos:flags:queue:execute:)(v84, v88, v106, v82);
                        _Block_release(v82);
                        swift_release(v79);

                        (*(void (**)(char *, uint64_t))(v109 + 8))(v88, v89);
                        (*(void (**)(char *, uint64_t))(v105 + 8))(v84, v107);
                        v91 = v131;
                        swift_release(v80);
                        swift_release(v91);
                        return;
                      }
                      v38 = *(_QWORD *)(v31 + 8 * v39);
                      if (!v38)
                      {
                        while (1)
                        {
                          v30 = v39 + 1;
                          if (__OFADD__(v39, 1))
                            goto LABEL_44;
                          if (v30 >= v127)
                            goto LABEL_42;
                          v38 = *(_QWORD *)(v31 + 8 * v30);
                          ++v39;
                          if (v38)
                            goto LABEL_23;
                        }
                      }
                      v30 = v39;
                    }
                  }
                }
              }
LABEL_23:
              v34 = (v38 - 1) & v38;
              v36 = __clz(__rbit64(v38)) + (v30 << 6);
            }
            v40 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v36);
          }
          while (!*(_QWORD *)(v40 + 16));
          swift_bridgeObjectRetain();
          v41 = sub_21BAD0(7107189, 0xE300000000000000);
          if ((v42 & 1) != 0)
          {
            sub_95094(*(_QWORD *)(v40 + 56) + 32 * v41, (uint64_t)&aBlock);
            if ((swift_dynamicCast(v132, &aBlock, v126, &type metadata for String, 6) & 1) != 0)
              break;
          }
          swift_bridgeObjectRelease();
        }
        URL.init(string:)(v132[0], v132[1]);
        v43 = swift_bridgeObjectRelease();
        v18 = (char *)v125;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v22 + 48))(v21, 1, v125, v43) != 1)
          break;
        swift_bridgeObjectRelease();
        sub_56024((uint64_t)v21, &qword_14FAC20);
      }
      (*(void (**)(char *, char *, char *))(v22 + 32))(v124, v21, v18);
      if (*(_QWORD *)(v40 + 16) && (v44 = sub_21BAD0(1702125924, 0xE400000000000000), (v45 & 1) != 0))
      {
        sub_95094(*(_QWORD *)(v40 + 56) + 32 * v44, (uint64_t)&aBlock);
      }
      else
      {
        aBlock = 0u;
        v129 = 0u;
      }
      v13 = (dispatch_group_t)v124;
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v129 + 1))
        break;
      sub_56024((uint64_t)&aBlock, &qword_14FF2A0);
      v46 = (uint64_t)v120;
      v122[7](v120, 1, 1, v123);
LABEL_39:
      v22 = v121;
      (*(void (**)(dispatch_group_t, uint64_t))(v121 + 8))(v13, v125);
      sub_56024(v46, &qword_14FDE40);
    }
    v46 = (uint64_t)v120;
    v47 = v123;
    v48 = swift_dynamicCast(v120, &aBlock, (char *)&type metadata for Any + 8, v123, 6);
    v18 = (char *)v122;
    v122[7]((dispatch_group_t)v46, v48 ^ 1u, 1, v47);
    if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v18 + 6))(v46, 1, v47) == 1)
      goto LABEL_39;
    v49 = v122;
    v50 = v123;
    v51 = v119;
    v52.n128_f64[0] = ((double (*)(char *, uint64_t, uint64_t))v122[4])(v119, v46, v123);
    v53 = v115;
    Date.init()(v52);
    v54 = Date.timeIntervalSince(_:)(v51);
    v18 = (char *)v49[1];
    ((void (*)(char *, uint64_t))v18)(v53, v50);
    if (v54 < v27)
      break;
    ((void (*)(char *, uint64_t))v18)(v51, v50);
    v22 = v121;
    (*(void (**)(dispatch_group_t, uint64_t))(v121 + 8))(v13, v125);
LABEL_41:
    v21 = v111;
  }
  v97 = v18;
  v55 = v101;
  (*(void (**)(char *, dispatch_group_t, uint64_t))(v121 + 16))(v101, v13, v125);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v55, 0, 60.0);
  v56._countAndFlagsBits = 1702195828;
  v56._object = (void *)0xE400000000000000;
  v57._countAndFlagsBits = 0xD00000000000001ALL;
  v57._object = v100;
  URLRequest.addValue(_:forHTTPHeaderField:)(v56, v57);
  v58 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
  v96 = v10;
  v59 = v114;
  v58(v113, v10, v114);
  v60 = objc_allocWithZone((Class)ICMusicKitRequestContext);
  v130 = sub_C7FF3C;
  v131 = 0;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v129 = sub_23E9F0;
  *((_QWORD *)&v129 + 1) = &block_descriptor_294;
  v61 = _Block_copy(&aBlock);
  v62 = objc_msgSend(v60, "initWithBlock:", v61);
  v63 = v59;
  v64 = v62;
  _Block_release(v61);
  v65 = swift_release(v131);
  if ((swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v65) & 1) == 0)
  {
    v66 = objc_allocWithZone((Class)ICMusicKitURLRequest);
    isa = URLRequest._bridgeToObjectiveC()().super.isa;
    v95 = objc_msgSend(v66, "initWithURLRequest:requestContext:", isa, v64);

    v94 = *(void (**)(char *, uint64_t))(v112 + 8);
    v94(v113, v63);
    v13 = v118;
    dispatch_group_enter(v118);
    v93 = (char *)objc_msgSend((id)objc_opt_self(ICURLSessionManager), "highPrioritySession");
    v68 = (_QWORD *)swift_allocObject(&unk_13B1018, 56, 7);
    v69 = v98;
    v70 = v99;
    v68[2] = v98;
    v68[3] = v70;
    v71 = v116;
    v72 = v117;
    v68[4] = v116;
    v68[5] = v72;
    v68[6] = v13;
    v130 = sub_C49E24;
    v131 = v68;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v129 = sub_21B54C;
    *((_QWORD *)&v129 + 1) = &block_descriptor_6_20;
    v73 = _Block_copy(&aBlock);
    v92 = v131;
    sub_A9DEC(v69, v70);
    v74 = v71;
    v22 = v121;
    swift_retain(v74);
    swift_retain(v72);
    v75 = v13;
    *(_QWORD *)&v76 = swift_release(v92).n128_u64[0];
    v18 = v93;
    v77 = v95;
    objc_msgSend(v93, "enqueueDataRequest:withCompletionHandler:", v95, v73, v76);
    _Block_release(v73);

    v10 = v96;
    v94(v96, v114);
    ((void (*)(char *, uint64_t))v97)(v119, v123);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v124, v125);
    goto LABEL_41;
  }
  __break(1u);
}

uint64_t type metadata accessor for BackgroundFetchManager()
{
  return objc_opt_self(_TtC9MusicCore22BackgroundFetchManager);
}

uint64_t sub_C49DA4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t block_copy_helper_290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_290(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_C49DE0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

void sub_C49E24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_C48894(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(dispatch_group_t *)(v2 + 48));
}

uint64_t sub_C49E34()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

double sub_C49E68()
{
  uint64_t v0;

  return sub_C48A20(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)())(v0 + 32));
}

unint64_t sub_C49E74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FF8C0;
  if (!qword_14FF8C0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_14FF8C0);
  }
  return result;
}

uint64_t sub_C49EBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE v5[24];

  v3 = *(_QWORD **)(v1 + 16);
  swift_beginAccess(v3, v5, 0, 0);
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_C49F14()
{
  uint64_t v0;

  return sub_C48950(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_C49F3C(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

Swift::Int sub_C49F9C()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 + 16, 0x8000000001102CA0);
  swift_bridgeObjectRelease(0x8000000001102CA0);
  return Hasher._finalize()();
}

Swift::Int sub_C4A00C(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  if ((a1 & 1) != 0)
    v2 = 0xD000000000000018;
  else
    v2 = 0xD000000000000019;
  if ((a1 & 1) != 0)
    v3 = 0x8000000001102D40;
  else
    v3 = 0x8000000001102D20;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

void sub_C4A090(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

Swift::Int sub_C4A0EC()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 + 11, 0x8000000001102D90);
  swift_bridgeObjectRelease(0x8000000001102D90);
  return Hasher._finalize()();
}

void sub_C4A15C(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

Swift::Int sub_C4A1AC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6F4E6E657473696CLL, 0xE900000000000077);
  swift_bridgeObjectRelease(0xE900000000000077);
  return Hasher._finalize()();
}

Swift::Int sub_C4A240(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  if ((a1 & 1) != 0)
    v2 = 0xD00000000000001CLL;
  else
    v2 = 0xD00000000000001DLL;
  if ((a1 & 1) != 0)
    v3 = 0x8000000001102FA0;
  else
    v3 = 0x8000000001102F80;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

void sub_C4A2C4(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

Swift::Int sub_C4A318()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6E776F6E6B6E75, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

Swift::Int sub_C4A390(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  if ((a1 & 1) != 0)
    v2 = 0xD000000000000015;
  else
    v2 = 0xD000000000000019;
  if ((a1 & 1) != 0)
    v3 = 0x80000000010F8DC0;
  else
    v3 = 0x80000000010F8DE0;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

void sub_C4A414(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_C4A460(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, v1 + 16, 0x8000000001102CA0);
  return swift_bridgeObjectRelease(0x8000000001102CA0);
}

void sub_C4A4B8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_C4A500(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, v1 + 11, 0x8000000001102D90);
  return swift_bridgeObjectRelease(0x8000000001102D90);
}

void sub_C4A558(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  __asm { BR              X10 }
}

Swift::Int sub_C4A5A4()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6F4E6E657473696CLL, 0xE900000000000077);
  swift_bridgeObjectRelease(0xE900000000000077);
  return Hasher._finalize()();
}

Swift::Int sub_C4A638(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  if ((a2 & 1) != 0)
    v3 = 0xD000000000000015;
  else
    v3 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v4 = 0x80000000010F8DC0;
  else
    v4 = 0x80000000010F8DE0;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

void sub_C4A6B8(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  __asm { BR              X10 }
}

Swift::Int sub_C4A708()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6E776F6E6B6E75, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

void sub_C4A780(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  __asm { BR              X10 }
}

Swift::Int sub_C4A7CC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x756F795F726F66, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

Swift::Int sub_C4A874(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  if ((a2 & 1) != 0)
    v3 = 0xD000000000000018;
  else
    v3 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v4 = 0x8000000001102D40;
  else
    v4 = 0x8000000001102D20;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

void sub_C4A8F4(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  __asm { BR              X10 }
}

Swift::Int sub_C4A94C()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 + 11, 0x8000000001102D90);
  swift_bridgeObjectRelease(0x8000000001102D90);
  return Hasher._finalize()();
}

void sub_C4A9BC(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  __asm { BR              X10 }
}

Swift::Int sub_C4AA18()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 + 16, 0x8000000001102CA0);
  swift_bridgeObjectRelease(0x8000000001102CA0);
  return Hasher._finalize()();
}

Swift::Int sub_C4AA88(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  if ((a2 & 1) != 0)
    v3 = 0xD00000000000001CLL;
  else
    v3 = 0xD00000000000001DLL;
  if ((a2 & 1) != 0)
    v4 = 0x8000000001102FA0;
  else
    v4 = 0x8000000001102F80;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

id sub_C4AB08()
{
  uint64_t refreshed;
  _QWORD *v1;
  id result;

  refreshed = type metadata accessor for BackgroundRefreshController();
  v1 = (_QWORD *)swift_allocObject(refreshed, 40, 7);
  v1[2] = 0;
  v1[3] = 0;
  result = objc_msgSend(objc_allocWithZone((Class)ICCloudClient), "init");
  v1[4] = result;
  static BackgroundRefreshController.shared = (uint64_t)v1;
  return result;
}

uint64_t *BackgroundRefreshController.shared.unsafeMutableAddressor()
{
  if (qword_14F9E08 != -1)
    swift_once(&qword_14F9E08, sub_C4AB08);
  return &static BackgroundRefreshController.shared;
}

double static BackgroundRefreshController.shared.getter()
{
  double result;

  if (qword_14F9E08 != -1)
    swift_once(&qword_14F9E08, sub_C4AB08);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t CompoundRequestResponseInvalidation.onInvalidation.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 16, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 16);
  sub_A9DEC(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t CompoundRequestResponseInvalidation.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 16, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_5C198(v5, v6);
}

uint64_t (*BackgroundRefreshController.performanceMetricsRecorder.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 16, a1, 33, 0);
  return j__swift_endAccess;
}

Swift::Void __swiftcall BackgroundRefreshController.registerAllTasks()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  void *v5;
  id v6;
  NSString v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  NSString v13;
  _QWORD aBlock[6];

  v0 = static os_log_type_t.default.getter();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF50);
  v2 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v2 + 16) = xmmword_105B360;
  *(_QWORD *)(v2 + 56) = &type metadata for String;
  v3 = sub_C10444();
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = 0xD00000000000002FLL;
  *(_QWORD *)(v2 + 40) = 0x8000000001105200;
  sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
  v4 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v0, &dword_0, v4, "BackgroundRefreshController: REGISTER TASK: %@", 46, 2, v2);
  swift_bridgeObjectRelease();

  v5 = (void *)objc_opt_self(BGTaskScheduler);
  v6 = objc_msgSend(v5, "sharedScheduler");
  v7 = String._bridgeToObjectiveC()();
  aBlock[4] = sub_C4AF2C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_5FEBC;
  aBlock[3] = &block_descriptor_295;
  v8 = _Block_copy(aBlock);
  objc_msgSend(v6, "registerForTaskWithIdentifier:usingQueue:launchHandler:", v7, 0, v8);
  _Block_release(v8);

  v9 = static os_log_type_t.default.getter();
  v10 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_105B360;
  *(_QWORD *)(v10 + 56) = &type metadata for String;
  *(_QWORD *)(v10 + 64) = v3;
  *(_QWORD *)(v10 + 32) = 0xD000000000000041;
  *(_QWORD *)(v10 + 40) = 0x8000000001105290;
  v11 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v9, &dword_0, v11, "BackgroundRefreshController: CANCEL DEPRECATED TASK: %@", 55, 2, v10);
  swift_bridgeObjectRelease();

  v12 = objc_msgSend(v5, "sharedScheduler");
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "cancelTaskRequestWithIdentifier:", v13);

}

double sub_C4AF2C(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  if (qword_14F9E08 != -1)
    swift_once(&qword_14F9E08, sub_C4AB08);
  v2 = objc_opt_self(BGAppRefreshTask);
  v3 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v2, 0, 0, 0);
  return sub_C4AFA0(v3);
}

double sub_C4AFA0(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  double result;

  v3 = *v1;
  v4 = static os_log_type_t.default.getter(a1);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF50);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_105B360;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  *(_QWORD *)(v6 + 64) = sub_C10444();
  *(_QWORD *)(v6 + 32) = 0xD00000000000002FLL;
  *(_QWORD *)(v6 + 40) = 0x8000000001105200;
  sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
  v7 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v4, &dword_0, v7, "BackgroundRefreshController: EXECUTING REFRESH SUBTASKS: %@", 59, 2, v6);
  swift_bridgeObjectRelease();

  v8 = swift_allocObject(&unk_13B1240, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = v3;
  v9 = a1;
  sub_C4C290((uint64_t)sub_C4E48C, v8);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t block_copy_helper_291(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_291(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

Swift::Void __swiftcall BackgroundRefreshController.scheduleAllTasks()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int *v32;
  char *v33;
  char *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  int *v38;
  char *v39;
  double v40;
  char v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  char *v50;
  double (*v51)(char *, uint64_t);
  __n128 v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  char v60;
  id v61;
  unint64_t v62;
  unint64_t v63;
  char v64;
  char *v65;
  char *v66;
  __n128 v67;
  char *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  id v72;
  NSString v73;
  id v74;
  id v75;
  Class isa;
  uint64_t v77;
  void *v78;
  id v79;
  __n128 v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  int *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t *v103;
  id v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  _QWORD *v111;
  _QWORD aBlock[3];
  void *v113;
  void (*v114)();
  uint64_t v115;

  v92 = *v0;
  v98 = type metadata accessor for DispatchWorkItemFlags(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v89 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for DispatchQoS(0);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v93 = (char *)&v89 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v106 = (char *)&v89 - v7;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v99 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v101 = (char *)&v89 - v12;
  __chkstk_darwin(v13);
  v108 = (char *)&v89 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v89 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v89 - v19;
  __chkstk_darwin(v21);
  v23 = (int *)((char *)&v89 - v22);
  __chkstk_darwin(v24);
  v107 = (char *)&v89 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v89 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v89 - v30;
  if (qword_14F9E18 != -1)
LABEL_47:
    swift_once(&qword_14F9E18, sub_C4DB78);
  v32 = off_14FE3D8;
  ((void (*)(void))static Date.distantFuture.getter)();
  v110 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v110(v28, v31, v8);
  v33 = *(char **)((char *)&dword_10 + (_QWORD)v32);
  v109 = v9;
  v100 = v33;
  if (v33)
  {
    v90 = v31;
    v105 = v17;
    v103 = v5;
    v104 = (id)objc_opt_self(NSUserDefaults);
    swift_bridgeObjectRetain();
    v91 = v32;
    v34 = (char *)v32 + 49;
    v102 = (char *)&type metadata for Any + 8;
    v35 = v33;
    do
    {
      v40 = *(double *)(v34 - 9);
      v41 = *v34;
      v42 = objc_msgSend(v104, "standardUserDefaults");
      LOBYTE(v111) = v41;
      v43 = sub_C4DC70();
      v44 = sub_B9DEC0();
      NSUserDefaults.subscript.getter((uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey, v43, v44, (uint64_t)aBlock);

      if (v113)
      {
        v45 = (uint64_t)v106;
        v46 = swift_dynamicCast(v106, aBlock, v102, v8, 6);
        v47 = v109;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v109 + 56))(v45, v46 ^ 1u, 1, v8);
      }
      else
      {
        sub_56024((uint64_t)aBlock, &qword_14FF2A0);
        v47 = v109;
        v45 = (uint64_t)v106;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v109 + 56))(v106, 1, 1, v8);
      }
      v48 = (uint64_t)v103;
      sub_C4DCB4(v45, (uint64_t)v103);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v48, 1, v8) == 1)
      {
        v50 = v105;
        Date.init()(v49);
        sub_56024(v48, &qword_14FDE40);
      }
      else
      {
        v50 = v105;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v105, v48, v8);
      }
      sub_56024(v45, &qword_14FDE40);
      static Date.+ infix(_:_:)(v50, v40);
      v51 = *(double (**)(char *, uint64_t))(v47 + 8);
      v52.n128_f64[0] = v51(v50, v8);
      v53 = v108;
      Date.init()(v52);
      if ((static Date.< infix(_:_:)(v20, v53) & 1) != 0)
      {
        v54 = v101;
        static Date.+ infix(_:_:)(v53, 3600.0);
        v51(v53, v8);
        v51(v20, v8);
        v36 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
        v36(v20, v54, v8);
      }
      else
      {
        v51(v53, v8);
        v36 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      }
      v34 += 24;
      v36((char *)v23, v20, v8);
      v37 = sub_4DD24(&qword_14FE418, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      if ((dispatch thunk of static Comparable.< infix(_:_:)(v23, v28, v8, v37) & 1) != 0)
        v38 = v23;
      else
        v38 = (int *)v28;
      v39 = v107;
      v110(v107, (char *)v38, v8);
      v51((char *)v23, v8);
      v51(v28, v8);
      v36(v28, v39, v8);
      --v35;
    }
    while (v35);
    v32 = v91;
    swift_bridgeObjectRelease(v91);
    v9 = v109;
    v33 = v100;
    v31 = v90;
  }
  v55 = swift_allocBox(v8);
  v56 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v108 = v57;
  v56(v57, v28, v8);
  v58 = *(char **)(v9 + 8);
  ((void (*)(char *, uint64_t))v58)(v31, v8);
  if (!v33)
  {
    v65 = v101;
    v66 = v99;
    goto LABEL_36;
  }
  v28 = v33;
  v106 = v58;
  v107 = (char *)v55;
  v23 = v32;
  swift_bridgeObjectRetain();
  LOBYTE(v9) = 0;
  v31 = (_BYTE *)(&stru_20 + 18);
  v17 = (_BYTE *)(&dword_0 + 1);
  v20 = (char *)&type metadata for Bool;
  v5 = &qword_14FF2A0;
  while (1)
  {
    if ((v9 & 1) != 0)
    {
      if (v28 == v17)
      {
        v67 = swift_bridgeObjectRelease(v32);
LABEL_33:
        v65 = v101;
        Date.init()(v67);
        v68 = v108;
        (*(void (**)(char *, char *, uint64_t))(v109 + 40))(v108, v65, v8);
        LOBYTE(v33) = 1;
        v66 = v99;
        v58 = v106;
        v55 = (uint64_t)v107;
        goto LABEL_37;
      }
      v9 = 1;
      goto LABEL_21;
    }
    v60 = v31[(_QWORD)v32];
    v61 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    LOBYTE(v111) = v60;
    v62 = sub_C4DC70();
    v63 = sub_B9DEC0();
    NSUserDefaults.subscript.getter((uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey, v62, v63, (uint64_t)aBlock);

    if (!v113)
    {
      sub_56024((uint64_t)aBlock, &qword_14FF2A0);
      v28 = v100;
      if (v100 == v17)
      {
LABEL_34:
        swift_bridgeObjectRelease(v32);
        goto LABEL_35;
      }
      goto LABEL_30;
    }
    v64 = swift_dynamicCast(&v111, aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    v28 = v100;
    if ((v64 & 1) == 0)
    {
      if (v100 == v17)
        goto LABEL_34;
LABEL_30:
      v9 = 0;
      goto LABEL_21;
    }
    v9 = v111;
    if (v100 == v17)
      break;
LABEL_21:
    v31 += 24;
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
  }
  v67 = swift_bridgeObjectRelease(v32);
  if ((_DWORD)v9)
    goto LABEL_33;
LABEL_35:
  LOBYTE(v33) = 0;
  v65 = v101;
  v66 = v99;
  v58 = v106;
  v55 = (uint64_t)v107;
LABEL_36:
  v68 = v108;
LABEL_37:
  v69 = ((uint64_t (*)(char *, char *, uint64_t))v110)(v65, v68, v8);
  static Date.distantFuture.getter(v69);
  v70 = static Date.< infix(_:_:)(v65, v66);
  ((void (*)(char *, uint64_t))v58)(v66, v8);
  ((void (*)(char *, uint64_t))v58)(v65, v8);
  if ((v33 & 1) != 0 || (v70 & 1) != 0)
  {
    v72 = objc_allocWithZone((Class)BGAppRefreshTaskRequest);
    v73 = String._bridgeToObjectiveC()();
    v74 = objc_msgSend(v72, "initWithIdentifier:", v73);

    v110(v65, v68, v8);
    v75 = v74;
    isa = Date._bridgeToObjectiveC()().super.isa;
    ((void (*)(char *, uint64_t))v58)(v65, v8);
    objc_msgSend(v75, "setEarliestBeginDate:", isa);

    if (qword_14F9E10 != -1)
      swift_once(&qword_14F9E10, sub_C4D95C);
    v77 = swift_allocObject(&unk_13B10E0, 48, 7);
    *(_QWORD *)(v77 + 16) = v75;
    *(_QWORD *)(v77 + 24) = v55;
    *(_BYTE *)(v77 + 32) = (_BYTE)v33;
    *(_QWORD *)(v77 + 40) = v92;
    v114 = sub_C4DD28;
    v115 = v77;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_42D124;
    v113 = &block_descriptor_3_14;
    v78 = _Block_copy(aBlock);
    v79 = v75;
    v80 = swift_retain(v55);
    v81 = v93;
    static DispatchQoS.unspecified.getter(v80);
    v111 = _swiftEmptyArrayStorage;
    v82 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
    v84 = sub_15BF84((unint64_t *)&qword_14FF8D0, &qword_14FDF48);
    v85 = v96;
    v86 = v83;
    v87 = v98;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v111, v86, v84, v98, v82);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v81, v85, v78);
    _Block_release(v78);

    (*(void (**)(char *, uint64_t))(v97 + 8))(v85, v87);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v81, v95);
    v88 = v115;
    swift_release(v55);
    v71 = v88;
  }
  else
  {
    v71 = v55;
  }
  swift_release(v71);
}

void sub_C4BAE0(void *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  double v19;
  void *v20;
  void *v21;
  id v22;
  unsigned int v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  NSString v44;
  __int128 v45;
  uint64_t v46;
  int v47;
  id v48;
  _BYTE v49[24];

  v47 = a3;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_projectBox(a2);
  v10 = static os_log_type_t.default.getter(v9);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF50);
  v11 = swift_allocObject(v46, 112, 7);
  v45 = xmmword_105F890;
  *(_OWORD *)(v11 + 16) = xmmword_105F890;
  v12 = objc_msgSend(a1, "identifier");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  *(_QWORD *)(v11 + 56) = &type metadata for String;
  v16 = sub_C10444();
  *(_QWORD *)(v11 + 64) = v16;
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v15;
  v17 = swift_beginAccess(v9, v49, 0, 0);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, v9, v5, v17);
  v19 = Date.timeIntervalSince1970.getter(v18);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if (v19 >= 9.22337204e18)
    goto LABEL_12;
  *(_QWORD *)(v11 + 96) = &type metadata for Int;
  *(_QWORD *)(v11 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 72) = (uint64_t)v19;
  sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
  v20 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v10, &dword_0, v20, "BackgroundRefreshController: SCHEDULING TASK: %@ EARLIEST BEGIN DATE %{time_t}d", 79, 2, v11);
  swift_bridgeObjectRelease(v11);

  v21 = (void *)objc_opt_self(BGTaskScheduler);
  v22 = objc_msgSend(v21, "sharedScheduler");
  v48 = 0;
  v23 = objc_msgSend(v22, "submitTaskRequest:error:", a1, &v48);

  v24 = v48;
  if (v23)
  {
    v25 = v48;
    if ((v47 & 1) == 0)
      return;
  }
  else
  {
    v26 = v48;
    v27 = (void *)_convertNSErrorToError(_:)(v24);

    v29 = swift_willThrow(v28);
    v30 = static os_log_type_t.error.getter(v29);
    v31 = swift_allocObject(v46, 112, 7);
    *(_OWORD *)(v31 + 16) = v45;
    v32 = objc_msgSend(a1, "identifier");
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    *(_QWORD *)(v31 + 56) = &type metadata for String;
    *(_QWORD *)(v31 + 64) = v16;
    *(_QWORD *)(v31 + 32) = v33;
    *(_QWORD *)(v31 + 40) = v35;
    v48 = v27;
    swift_errorRetain(v27);
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v37 = String.init<A>(describing:)(&v48, v36);
    *(_QWORD *)(v31 + 96) = &type metadata for String;
    *(_QWORD *)(v31 + 104) = v16;
    *(_QWORD *)(v31 + 72) = v37;
    *(_QWORD *)(v31 + 80) = v38;
    v39 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v30, &dword_0, v39, "BackgroundRefreshController: SCHEDULING TASK: %@ ERROR %@", 57, 2, v31);
    swift_bridgeObjectRelease(v31);

    v25 = (id)swift_errorRelease(v27);
    if ((v47 & 1) == 0)
      return;
  }
  v40 = static os_log_type_t.default.getter(v25);
  v41 = swift_allocObject(v46, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_105B360;
  *(_QWORD *)(v41 + 56) = &type metadata for String;
  *(_QWORD *)(v41 + 64) = v16;
  *(_QWORD *)(v41 + 32) = 0xD00000000000002FLL;
  *(_QWORD *)(v41 + 40) = 0x8000000001105200;
  v42 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v40, &dword_0, v42, "BackgroundRefreshController: FORCING TASK: %@", 45, 2, v41);
  swift_bridgeObjectRelease(v41);

  v43 = objc_msgSend(v21, "sharedScheduler");
  v44 = String._bridgeToObjectiveC()();
  objc_msgSend(v43, "_simulateLaunchForTaskWithIdentifier:", v44);

}

double sub_C4BF48(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9E10 != -1)
    swift_once(&qword_14F9E10, sub_C4D95C);
  v13 = swift_allocObject(&unk_13B13A8, 40, 7);
  *(_QWORD *)(v13 + 16) = a2;
  *(_BYTE *)(v13 + 24) = a1 & 1;
  *(_QWORD *)(v13 + 32) = a3;
  aBlock[4] = sub_C4E670;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_42D124;
  aBlock[3] = &block_descriptor_40_6;
  v14 = _Block_copy(aBlock);
  v15 = a2;
  static DispatchQoS.unspecified.getter(v16);
  v22 = _swiftEmptyArrayStorage;
  v17 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
  v19 = sub_15BF84((unint64_t *)&qword_14FF8D0, &qword_14FDF48);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v18, v19, v6, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

void sub_C4C168(void *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;

  if ((a2 & 1) != 0)
    v2 = 1702195828;
  else
    v2 = 0x65736C6166;
  if ((a2 & 1) != 0)
    v3 = 0xE400000000000000;
  else
    v3 = 0xE500000000000000;
  v4 = static os_log_type_t.error.getter(objc_msgSend(a1, "setTaskCompletedWithSuccess:", a2 & 1));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF50);
  v6 = swift_allocObject(v5, 112, 7);
  *(_OWORD *)(v6 + 16) = xmmword_105F890;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  v7 = sub_C10444();
  *(_QWORD *)(v6 + 32) = 0xD00000000000002FLL;
  *(_QWORD *)(v6 + 40) = 0x8000000001105200;
  *(_QWORD *)(v6 + 96) = &type metadata for String;
  *(_QWORD *)(v6 + 104) = v7;
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 72) = v2;
  *(_QWORD *)(v6 + 80) = v3;
  sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
  v8 = (id)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v4, &dword_0, v8, "BackgroundRefreshController: COMPLETED REFRESH SUBTASKS: %@ SUCCESS: %@", 71, 2, v6);
  swift_bridgeObjectRelease();

}

void sub_C4C290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  int v35;
  char *v36;
  char *v37;
  unint64_t v38;
  _QWORD aBlock[11];
  unsigned __int8 v40;

  v25[2] = a2;
  v25[1] = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v27 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0);
  v25[4] = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v25[3] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v5);
  v32 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v8 = type metadata accessor for Date(0);
  v33 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v29 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v37 = (char *)v25 - v11;
  __chkstk_darwin(v12);
  v36 = (char *)v25 - v13;
  __chkstk_darwin(v14);
  v31 = (char *)v25 - v15;
  __chkstk_darwin(v16);
  v30 = (char *)v25 - v17;
  __chkstk_darwin(v18);
  v34 = (char *)v25 - v19;
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v38 = 0xEA00000000007265;
  v20 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_109F5C0);
  v22 = swift_getKeyPath(&unk_109F5E8);
  static Published.subscript.getter(aBlock, v20, KeyPath, v22);
  swift_release(KeyPath);
  swift_release(v22);
  v23 = (void *)aBlock[10];
  v24 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v35 = 1;
  __asm { BR              X9 }
}

void sub_C4CD98(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  UnfairLock.locked<A>(_:)(sub_C4E5DC);
  dispatch_group_leave(a4);
}

void sub_C4CDFC(_BYTE *a1, char a2)
{
  char v4;
  uint64_t v5;
  _BYTE v6[24];

  swift_beginAccess(a1, v6, 0, 0);
  v4 = *a1 & a2;
  swift_beginAccess(a1, &v5, 1, 0);
  *a1 = v4;
}

void sub_C4CE64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  int v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  id v13;
  _QWORD *boxed_opaque_existential_1Tm;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[3];
  void *v33;
  uint64_t (*v34)(uint64_t, __n128);
  uint64_t v35;
  char v36;

  v31 = a1;
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5.n128_f64[0] = __chkstk_darwin(v3);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9E20 != -1)
    swift_once(&qword_14F9E20, sub_C4DE7C);
  v8 = word_14FE3E0;
  v9 = HIBYTE(word_14FE3E0);
  v10 = qword_14FE3E8;
  v11 = word_14FE3F0;
  v12 = HIBYTE(word_14FE3F0);
  HIDWORD(v29) = byte_14FE3F2;
  Date.init()(v5);
  v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v33 = (void *)v3;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(aBlock);
  (*(void (**)(_QWORD *, char *, uint64_t))(v4 + 16))(boxed_opaque_existential_1Tm, v7, v3);
  v36 = v12;
  v15 = sub_C4DC70();
  v16 = sub_B9DEC0();
  NSUserDefaults.subscript.setter((uint64_t)aBlock, (uint64_t)&v36, (uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey, v15, v16);

  v17 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v18 = static os_log_type_t.default.getter(v17);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF50);
  v20 = swift_allocObject(v19, 72, 7);
  v21 = v20;
  *(_OWORD *)(v20 + 16) = xmmword_105B360;
  if (v8)
    v22 = 0xD000000000000018;
  else
    v22 = 0xD000000000000019;
  if (v8)
    v23 = 0x8000000001102D40;
  else
    v23 = 0x8000000001102D20;
  *(_QWORD *)(v20 + 56) = &type metadata for String;
  *(_QWORD *)(v20 + 64) = sub_C10444();
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v23;
  sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
  v24 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v18, &dword_0, v24, "BackgroundRefreshController: EXECUTING SUBTASK: %@", 50, 2, v21);
  swift_bridgeObjectRelease(v21);

  v25 = *(void **)(v30 + 32);
  v26 = swift_allocObject(&unk_13B1330, 56, 7);
  *(_BYTE *)(v26 + 16) = v8;
  *(_BYTE *)(v26 + 17) = v9;
  *(_QWORD *)(v26 + 24) = v10;
  *(_BYTE *)(v26 + 32) = v11;
  *(_BYTE *)(v26 + 33) = v12;
  *(_BYTE *)(v26 + 34) = BYTE4(v29);
  *(_QWORD *)(v26 + 40) = v31;
  *(_QWORD *)(v26 + 48) = a2;
  v34 = sub_C4E580;
  v35 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_153944;
  v33 = &block_descriptor_31_11;
  v27 = _Block_copy(aBlock);
  v28 = v35;
  swift_retain(a2);
  objc_msgSend(v25, "updatePinnedSubscribedPlaylistsWithCompletion:", v27, swift_release(v28).n128_f64[0]);
  _Block_release(v27);
}

void sub_C4D14C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  int v10;
  char v11;
  uint64_t v12;
  char v13;
  id v14;
  _QWORD *boxed_opaque_existential_1Tm;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  char v32;
  _QWORD v33[4];

  v3 = v2;
  v31 = a1;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7.n128_f64[0] = __chkstk_darwin(v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9E28 != -1)
    swift_once(&qword_14F9E28, sub_C4DF3C);
  v10 = word_14FE3F8;
  v11 = HIBYTE(word_14FE3F8);
  v12 = qword_14FE400;
  v13 = byte_14FE409;
  v29 = byte_14FE40A;
  v30 = byte_14FE408;
  Date.init()(v7);
  v14 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v33[3] = v5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v33);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(boxed_opaque_existential_1Tm, v9, v5);
  v32 = v13;
  v16 = sub_C4DC70();
  v17 = sub_B9DEC0();
  NSUserDefaults.subscript.setter((uint64_t)v33, (uint64_t)&v32, (uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey, v16, v17);

  v18 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v19 = static os_log_type_t.default.getter(v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF50);
  v21 = swift_allocObject(v20, 72, 7);
  v22 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_105B360;
  if (v10)
    v23 = 0xD000000000000018;
  else
    v23 = 0xD000000000000019;
  if (v10)
    v24 = 0x8000000001102D40;
  else
    v24 = 0x8000000001102D20;
  *(_QWORD *)(v21 + 56) = &type metadata for String;
  *(_QWORD *)(v21 + 64) = sub_C10444();
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v24;
  sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
  v25 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v19, &dword_0, v25, "BackgroundRefreshController: EXECUTING SUBTASK: %@", 50, 2, v22);
  swift_bridgeObjectRelease();

  if (qword_14F9DF8 != -1)
    swift_once(&qword_14F9DF8, sub_C48538);
  if (qword_14F9E10 != -1)
    swift_once(&qword_14F9E10, sub_C4D95C);
  v26 = qword_14FE3D0;
  v27 = swift_allocObject(&unk_13B1380, 56, 7);
  *(_BYTE *)(v27 + 16) = v10;
  *(_BYTE *)(v27 + 17) = v11;
  *(_QWORD *)(v27 + 24) = v12;
  *(_BYTE *)(v27 + 32) = v30;
  *(_BYTE *)(v27 + 33) = v13;
  *(_BYTE *)(v27 + 34) = v29;
  *(_QWORD *)(v27 + 40) = v31;
  *(_QWORD *)(v27 + 48) = a2;
  swift_retain(v3);
  swift_retain(a2);
  _s9MusicCore22BackgroundFetchManagerC14updateURLCache5queue20onDidReceiveResponse10completionySo012OS_dispatch_H0C_ySo13ICURLResponseCSg_s5Error_pSgtcSgySaysAM_pGctF_0(v26, (uint64_t)sub_C4E58C, v3, (uint64_t)sub_C4E594, v27);
  swift_release(v3);
  swift_release(v27);
}

uint64_t sub_C4D45C(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(BOOL))
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v28;

  v7 = 0xD000000000000018;
  if (a1)
  {
    v8 = swift_errorRetain(a1);
    v9 = static os_log_type_t.error.getter(v8);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF50);
    v11 = swift_allocObject(v10, 112, 7);
    v12 = (_QWORD *)v11;
    *(_OWORD *)(v11 + 16) = xmmword_105F890;
    if ((a2 & 1) != 0)
    {
      v13 = 0x8000000001102D40;
    }
    else
    {
      v7 = 0xD000000000000019;
      v13 = 0x8000000001102D20;
    }
    *(_QWORD *)(v11 + 56) = &type metadata for String;
    v14 = sub_C10444();
    v12[8] = v14;
    v12[4] = v7;
    v12[5] = v13;
    v28 = a1;
    swift_errorRetain(a1);
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v16 = String.init<A>(describing:)(&v28, v15);
    v12[12] = &type metadata for String;
    v12[13] = v14;
    v12[9] = v16;
    v12[10] = v17;
    sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
    v18 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v9, &dword_0, v18, "BackgroundRefreshController: COMPLETED SUBTASK: %@ ERROR %@", 59, 2, v12);
    swift_bridgeObjectRelease(v12);

    swift_errorRelease(a1);
  }
  else
  {
    v19 = static os_log_type_t.error.getter(0);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF50);
    v21 = swift_allocObject(v20, 72, 7);
    v22 = v21;
    *(_OWORD *)(v21 + 16) = xmmword_105B360;
    v23 = (a2 & 1) == 0;
    if ((a2 & 1) != 0)
      v24 = 0xD000000000000018;
    else
      v24 = 0xD000000000000019;
    if (v23)
      v25 = 0x8000000001102D20;
    else
      v25 = 0x8000000001102D40;
    *(_QWORD *)(v21 + 56) = &type metadata for String;
    *(_QWORD *)(v21 + 64) = sub_C10444();
    *(_QWORD *)(v22 + 32) = v24;
    *(_QWORD *)(v22 + 40) = v25;
    sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
    v26 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v19, &dword_0, v26, "BackgroundRefreshController: COMPLETED SUBTASK: %@ SUCCESS", 58, 2, v22);
    swift_bridgeObjectRelease(v22);

  }
  return a4(a1 == 0);
}

void sub_C4D6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t);
  uint64_t v6;
  _BYTE v7[24];

  swift_beginAccess(a3 + 16, v7, 0, 0);
  v5 = *(void (**)(uint64_t))(a3 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(a3 + 24);
    swift_retain(v6);
    v5(a1);
    swift_release(v6);
  }
}

uint64_t sub_C4D70C(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;

  v7 = static os_log_type_t.default.getter(a1);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF50);
  v9 = swift_allocObject(v8, 72, 7);
  v10 = (_QWORD *)v9;
  *(_OWORD *)(v9 + 16) = xmmword_105B360;
  v11 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v12 = 0xD000000000000018;
  else
    v12 = 0xD000000000000019;
  if (v11)
    v13 = 0x8000000001102D20;
  else
    v13 = 0x8000000001102D40;
  *(_QWORD *)(v9 + 56) = &type metadata for String;
  v14 = sub_C10444();
  v10[8] = v14;
  v10[4] = v12;
  v10[5] = v13;
  v15 = v13;
  sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
  v16 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v7, &dword_0, v16, "BackgroundRefreshController: COMPLETED SUBTASK: %@", 50, 2, v10);
  swift_bridgeObjectRelease();

  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v30 = a4;
    swift_bridgeObjectRetain();
    v18 = 0;
    v31 = v8;
    do
    {
      v19 = *(_QWORD *)(a1 + 8 * v18++ + 32);
      v20 = swift_errorRetain(v19);
      v21 = v17;
      v22 = static os_log_type_t.error.getter(v20);
      v23 = swift_allocObject(v31, 112, 7);
      *(_OWORD *)(v23 + 16) = xmmword_105F890;
      *(_QWORD *)(v23 + 56) = &type metadata for String;
      *(_QWORD *)(v23 + 64) = v14;
      *(_QWORD *)(v23 + 32) = v12;
      *(_QWORD *)(v23 + 40) = v15;
      v32 = v19;
      swift_errorRetain(v19);
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
      v25 = String.init<A>(describing:)(&v32, v24);
      *(_QWORD *)(v23 + 96) = &type metadata for String;
      *(_QWORD *)(v23 + 104) = v14;
      *(_QWORD *)(v23 + 72) = v25;
      *(_QWORD *)(v23 + 80) = v26;
      v27 = (void *)static OS_os_log.default.getter();
      v28 = v22;
      v17 = v21;
      os_log(_:dso:log:_:_:)(v28, &dword_0, v27, "BackgroundRefreshController: ERROR EXECUTING SUBTASK: %@ ERROR %@", 65, 2, v23);
      swift_bridgeObjectRelease();

      swift_errorRelease(v19);
    }
    while (v21 != v18);
    swift_bridgeObjectRelease();
    a4 = v30;
  }
  return a4(v17 == 0);
}

uint64_t sub_C4D95C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_4DD24(&qword_14FE4D0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE4D8);
  v13 = sub_15BF84(&qword_14FE4E0, &qword_14FE4D8);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000003ELL, 0x8000000001105400, v9, v6, v3, 0);
  qword_14FE3D0 = result;
  return result;
}

uint64_t BackgroundRefreshController.deinit()
{
  uint64_t v0;

  sub_5C198(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));

  return v0;
}

double BackgroundRefreshController.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  sub_5C198(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));

  *(_QWORD *)&result = swift_deallocClassInstance(v0, 40, 7).n128_u64[0];
  return result;
}

double sub_C4DB78()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  __int16 v5;
  char v6;
  double result;
  char v8;
  __int16 v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE4E8);
  v1 = swift_allocObject(v0, 80, 7);
  *(_OWORD *)(v1 + 16) = xmmword_105F890;
  if (qword_14F9E20 != -1)
    swift_once(&qword_14F9E20, sub_C4DE7C);
  v2 = HIBYTE(word_14FE3E0);
  v3 = qword_14FE3E8;
  v4 = word_14FE3F0;
  v5 = *(__int16 *)((char *)&word_14FE3F0 + 1);
  *(_BYTE *)(v1 + 32) = word_14FE3E0;
  *(_BYTE *)(v1 + 33) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 48) = v4;
  *(_WORD *)(v1 + 49) = v5;
  if (qword_14F9E28 != -1)
    swift_once(&qword_14F9E28, sub_C4DF3C);
  v6 = HIBYTE(word_14FE3F8);
  result = *(double *)&qword_14FE400;
  v8 = byte_14FE408;
  v9 = *(_WORD *)&byte_14FE409;
  *(_BYTE *)(v1 + 56) = word_14FE3F8;
  *(_BYTE *)(v1 + 57) = v6;
  *(double *)(v1 + 64) = result;
  *(_BYTE *)(v1 + 72) = v8;
  *(_WORD *)(v1 + 73) = v9;
  off_14FE3D8 = (int *)v1;
  return result;
}

unint64_t sub_C4DC70()
{
  unint64_t result;

  result = qword_14FE410;
  if (!qword_14FE410)
  {
    result = swift_getWitnessTable(&unk_109F584, &type metadata for BackgroundTaskConfiguration.UserDefaultsKey);
    atomic_store(result, (unint64_t *)&qword_14FE410);
  }
  return result;
}

uint64_t sub_C4DCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_C4DCFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

void sub_C4DD28()
{
  uint64_t v0;

  sub_C4BAE0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t type metadata accessor for BackgroundRefreshController()
{
  return objc_opt_self(_TtC9MusicCore27BackgroundRefreshController);
}

ValueMetadata *type metadata accessor for BackgroundRefreshController.PerformanceMetricsRecorder()
{
  return &type metadata for BackgroundRefreshController.PerformanceMetricsRecorder;
}

uint64_t storeEnumTagSinglePayload for BackgroundTaskConfiguration.UserDefaultsKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_C4DDB4 + 4 * byte_109F488[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_C4DDE8 + 4 * byte_109F483[v4]))();
}

uint64_t sub_C4DDE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4DDF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC4DDF8);
  return result;
}

uint64_t sub_C4DE04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC4DE0CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_C4DE10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4DE18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration.UserDefaultsKey()
{
  return &type metadata for BackgroundTaskConfiguration.UserDefaultsKey;
}

unint64_t sub_C4DE38()
{
  unint64_t result;

  result = qword_14FE4C8;
  if (!qword_14FE4C8)
  {
    result = swift_getWitnessTable(&unk_109F55C, &type metadata for BackgroundTaskConfiguration.UserDefaultsKey);
    atomic_store(result, (unint64_t *)&qword_14FE4C8);
  }
  return result;
}

void sub_C4DE7C()
{
  void *v0;

  if (qword_14F9E30 != -1)
    swift_once(&qword_14F9E30, sub_C4F36C);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2B0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_B9DEA8);

  word_14FE3E0 = 256;
  qword_14FE3E8 = 0x40E5180000000000;
  word_14FE3F0 = 257;
  byte_14FE3F2 = 0;
}

void sub_C4DF3C()
{
  void *v0;
  char v1;
  uint64_t v2;
  void *v3;
  char v4;

  if (qword_14F9E30 != -1)
    swift_once(&qword_14F9E30, sub_C4F36C);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2B0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_B9DEA8);
  v0 = v3;
  if (v3 && (sub_C4E028(v3, (uint64_t)&v3), v0, (v4 & 1) == 0))
  {
    v1 = 0;
    v2 = (uint64_t)v3;
  }
  else
  {
    v1 = 1;
    v2 = 0x40D5180000000000;
  }
  word_14FE3F8 = 257;
  qword_14FE400 = v2;
  byte_14FE408 = v1;
  *(_WORD *)&byte_14FE409 = 515;
}

void sub_C4E028(void *a1@<X0>, uint64_t a2@<X8>)
{
  NSString v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(a1, "dictionaryForBagKey:", v4);

  if (!v5)
    goto LABEL_12;
  v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v7 = sub_D7AA34(v6);
  swift_bridgeObjectRelease(v6);
  if (!v7)
    goto LABEL_12;
  if (!*(_QWORD *)(v7 + 16) || (v8 = sub_21BAD0(0xD00000000000001ELL, 0x8000000001105180), (v9 & 1) == 0))
  {
    v17 = 0u;
    v18 = 0u;
    swift_bridgeObjectRelease(v7);
    goto LABEL_11;
  }
  sub_95094(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v17);
  swift_bridgeObjectRelease(v7);
  if (!*((_QWORD *)&v18 + 1))
    goto LABEL_11;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500A90);
  if ((swift_dynamicCast(&v16, &v17, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
  {
LABEL_12:
    *(_QWORD *)a2 = 0;
    v14 = 1;
    goto LABEL_13;
  }
  v11 = v16;
  if (*(_QWORD *)(v16 + 16) && (v12 = sub_21BAD0(0xD00000000000001DLL, 0x8000000001105440), (v13 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  swift_bridgeObjectRelease(v11);
  if (!*((_QWORD *)&v18 + 1))
  {
LABEL_11:
    sub_56024((uint64_t)&v17, &qword_14FF2A0);
    goto LABEL_12;
  }
  v15 = swift_dynamicCast(a2, &v17, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  if ((v15 & 1) == 0)
    *(_QWORD *)a2 = 0;
  v14 = v15 ^ 1;
LABEL_13:
  *(_BYTE *)(a2 + 8) = v14;
}

uint64_t sub_C4E20C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_C4E248 + 4 * byte_109F48D[a1]))(0xD00000000000002FLL, 0x8000000001102D60);
}

uint64_t sub_C4E248()
{
  uint64_t v0;

  return v0 + 11;
}

unint64_t sub_C4E270()
{
  return 0xD000000000000027;
}

uint64_t sub_C4E28C(char *a1, char *a2)
{
  return sub_BB7DD8(*a1, *a2);
}

Swift::Int sub_C4E298()
{
  char *v0;

  return sub_C4A00C(*v0);
}

uint64_t sub_C4E2A0(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000018;
  else
    v2 = 0xD000000000000019;
  if (*v1)
    v3 = 0x8000000001102D40;
  else
    v3 = 0x8000000001102D20;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_C4E300(uint64_t a1)
{
  char *v1;

  return sub_C4A874(a1, *v1);
}

uint64_t sub_C4E308@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6608, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_C4E364(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000018;
  else
    v2 = 0xD000000000000019;
  v3 = 0x8000000001102D20;
  if (*v1)
    v3 = 0x8000000001102D40;
  *a1 = v2;
  a1[1] = v3;
}

void sub_C4E3A8(char *a1)
{
  sub_BB7C8C(*a1);
}

void sub_C4E3B4()
{
  char *v0;

  sub_C4A090(*v0);
}

void sub_C4E3BC(uint64_t a1)
{
  char *v1;

  sub_C4A4B8(a1, *v1);
}

void sub_C4E3C4(uint64_t a1)
{
  char *v1;

  sub_C4A8F4(a1, *v1);
}

unint64_t sub_C4E3CC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_C4E420(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_C4E3F8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_C4E20C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_C4E420(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6658, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t sub_C4E468()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_C4E48C(char a1)
{
  uint64_t v1;

  return sub_C4BF48(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_C4E49C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_C4E4AC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_C4E4E0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  unsigned __int8 v3;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 32);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_C4E5F8);
  return v1(v3);
}

void sub_C4E54C(uint64_t a1)
{
  uint64_t v1;

  sub_C4CD98(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_C4E55C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_C4E580(uint64_t a1, __n128 a2)
{
  return sub_C4E5A0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, __n128))sub_C4D45C, a2);
}

void sub_C4E58C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_C4D6A4(a1, a2, v2);
}

uint64_t sub_C4E594(uint64_t a1, __n128 a2)
{
  return sub_C4E5A0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, __n128))sub_C4D70C, a2);
}

uint64_t sub_C4E5A0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, __n128), __n128 a3)
{
  uint64_t v3;
  int v4;

  if (*(_BYTE *)(v3 + 17))
    v4 = 256;
  else
    v4 = 0;
  a3.n128_u64[0] = *(_QWORD *)(v3 + 24);
  return a2(a1, v4 | *(unsigned __int8 *)(v3 + 16), *(unsigned __int8 *)(v3 + 32) | (*(unsigned __int8 *)(v3 + 33) << 8) | (*(unsigned __int8 *)(v3 + 34) << 16), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), a3);
}

void sub_C4E5DC()
{
  uint64_t v0;

  sub_C4CDFC(*(_BYTE **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_C4E5F8(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = *(_BYTE **)(v1 + 16);
  swift_beginAccess(v3, v4, 0, 0);
  *a1 = *v3;
}

uint64_t sub_C4E64C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_C4E670()
{
  uint64_t v0;

  sub_C4C168(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BackgroundTaskConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[19])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundTaskConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 19) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration()
{
  return &type metadata for BackgroundTaskConfiguration;
}

uint64_t storeEnumTagSinglePayload for BackgroundTaskConfiguration.Identifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_C4E77C + 4 * byte_109F496[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_C4E7B0 + 4 * byte_109F491[v4]))();
}

uint64_t sub_C4E7B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4E7B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC4E7C0);
  return result;
}

uint64_t sub_C4E7CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC4E7D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_C4E7D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4E7E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration.Identifier()
{
  return &type metadata for BackgroundTaskConfiguration.Identifier;
}

unint64_t sub_C4E800()
{
  unint64_t result;

  result = qword_14FE4F0;
  if (!qword_14FE4F0)
  {
    result = swift_getWitnessTable(&unk_109F68C, &type metadata for BackgroundTaskConfiguration.Identifier);
    atomic_store(result, (unint64_t *)&qword_14FE4F0);
  }
  return result;
}

uint64_t BagControlledValue.init(fallback:reader:)@<X0>(uint64_t a1@<X0>, void (*a2)(void *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void *);
  uint64_t v22;
  void *v23;

  v21 = a2;
  v22 = a1;
  v6 = type metadata accessor for Optional(0, a3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - v8;
  v10 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9E30 != -1)
    swift_once(&qword_14F9E30, sub_C4F36C);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2B0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_B9DEA8);
  v16 = v23;
  if (!v23)
    goto LABEL_6;
  v21(v23);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_6:
    *(_BYTE *)(a4 + *(int *)(type metadata accessor for BagControlledValue(0, a3, v14, v15) + 28)) = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a4, v22, a3);
  }
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v22, a3);
  v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v18(v13, v9, a3);
  *(_BYTE *)(a4 + *(int *)(type metadata accessor for BagControlledValue(0, a3, v19, v20) + 28)) = 0;
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(a4, v13, a3);
}

uint64_t type metadata accessor for BagControlledValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BagControlledValue);
}

uint64_t sub_C4EA58(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for BagControlledValue<A>.Source, a1);
}

uint64_t sub_C4EA68(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_109F768;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 24);
    return 0;
  }
  return result;
}

_QWORD *sub_C4EADC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
  }
  else
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v7 + 16) & ~v7));
    swift_retain(v10);
  }
  return v4;
}

uint64_t sub_C4EB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_C4EBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_C4EBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_C4EC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_C4EC88(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = v7 + 1;
  v10 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 >= 0xFE)
        return (*(uint64_t (**)(void))(v4 + 48))();
      v15 = *(unsigned __int8 *)(v7 + a1);
      if (v15 >= 2)
        return v15 - 1;
      else
        return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if ((_DWORD)v7 == -1)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_C4ED50 + 4 * byte_109F6C0[(v9 - 1)]))();
}

void sub_C4EDB0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + 1;
  if (a3 > v6)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = &dword_4;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = &dword_0 + 1;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v7 != -1)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v7 + 1);
        if (v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if (v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_C4EF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

uint64_t sub_C4EF8C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_C4EFD8 + 4 * byte_109F6D3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_C4F00C + 4 * byte_109F6CE[v4]))();
}

uint64_t sub_C4F00C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4F014(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC4F01CLL);
  return result;
}

uint64_t sub_C4F028(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC4F030);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_C4F034(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4F03C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for BagControlledValue.Source(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BagControlledValue.Source);
}

uint64_t *BagProvider.shared.unsafeMutableAddressor()
{
  if (qword_14F9E30 != -1)
    swift_once(&qword_14F9E30, sub_C4F36C);
  return &static BagProvider.shared;
}

uint64_t BagProvider.createObserver(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = type metadata accessor for BagProvider.Observer();
  v6 = swift_allocObject(v5, 40, 7);
  v7 = swift_weakInit(v6 + 16);
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  swift_weakAssign(v7, v2);
  v8 = *(_QWORD *)(v6 + 24);
  v9 = *(_QWORD *)(v6 + 32);
  *(_QWORD *)(v6 + 24) = a1;
  *(_QWORD *)(v6 + 32) = a2;
  swift_retain(a2);
  sub_5C198(v8, v9);
  UnfairLock.locked<A>(_:)(sub_C36728);
  sub_C4F74C(0);
  return v6;
}

uint64_t BagProvider.bag.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2B0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_C4F988);
  return v1;
}

double BagProvider.getBag(completion:)(void (*a1)(), uint64_t a2)
{
  uint64_t v2;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2B0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_C4F988);
  if (v14)
  {
    a1();

  }
  else
  {
    v6 = type metadata accessor for BagProvider.Observer();
    v7 = swift_allocObject(v6, 40, 7);
    v8 = swift_weakInit(v7 + 16, 0);
    *(_QWORD *)(v7 + 24) = 0;
    *(_QWORD *)(v7 + 32) = 0;
    swift_weakAssign(v8, v2);
    v9 = swift_allocObject(&unk_13B1670, 24, 7);
    swift_weakInit(v9 + 16, v2);
    v10 = (_QWORD *)swift_allocObject(&unk_13B1698, 48, 7);
    v10[2] = a1;
    v10[3] = a2;
    v10[4] = v9;
    v10[5] = v7;
    v11 = *(_QWORD *)(v7 + 24);
    v12 = *(_QWORD *)(v7 + 32);
    *(_QWORD *)(v7 + 24) = sub_C481C4;
    *(_QWORD *)(v7 + 32) = v10;
    swift_retain(a2);
    swift_retain(v7);
    v13 = sub_5C198(v11, v12);
    __chkstk_darwin(v13);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C481D0);
    sub_C4F74C(0);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_C4F36C()
{
  void *v0;
  uint64_t v1;
  uint64_t result;

  if (qword_14F9EC8 != -1)
    swift_once(&qword_14F9EC8, sub_C7F8F8);
  v0 = (void *)static ICClientInfo.music;
  v1 = type metadata accessor for BagProvider(0);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  result = sub_C4FBFC(v0);
  static BagProvider.shared = result;
  return result;
}

uint64_t type metadata accessor for BagProvider.Observer()
{
  return objc_opt_self(_TtCC9MusicCore11BagProvider8Observer);
}

double static BagProvider.shared.getter()
{
  double result;

  if (qword_14F9E30 != -1)
    swift_once(&qword_14F9E30, sub_C4F36C);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

_BYTE *sub_C4F440@<X0>(_BYTE *result@<X0>, _QWORD *a2@<X8>)
{
  id *v3;
  id v4;

  v3 = (id *)&result[OBJC_IVAR____TtC9MusicCore11BagProvider_result];
  if (result[OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8] == 1)
  {
    v4 = *v3;
    result = *v3;
  }
  else
  {
    v4 = 0;
  }
  *a2 = v4;
  return result;
}

double sub_C4F498(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[31];

  v4 = a4 + 16;
  a2();
  swift_beginAccess(v4, v10, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9MusicCore11BagProvider_lock);
    swift_retain(v8);
    swift_release(v7);
    __chkstk_darwin(v9);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE890);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C50FB8);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

void sub_C4F578(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  v7 = Strong;
  if (!Strong)
    goto LABEL_5;
  v8 = (unint64_t *)(Strong + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers);
  swift_beginAccess(Strong + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers, v13, 33, 0);
  swift_retain(a2);
  v9 = sub_C51004(v8, a2);
  swift_release(a2);
  v10 = *v8;
  if (*v8 >> 62)
  {
    if (v10 < 0)
      v12 = *v8;
    else
      v12 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v10);
    if (v11 >= v9)
      goto LABEL_4;
  }
  else
  {
    v11 = *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8));
    if (v11 >= v9)
    {
LABEL_4:
      sub_BCEE8C(v9, v11);
      swift_endAccess(v13);
      swift_release(v7);
LABEL_5:
      *a3 = v7 == 0;
      return;
    }
  }
  __break(1u);
}

uint64_t sub_C4F6A8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers, v9, 33, 0);
  v4 = swift_retain(a2);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
  v6 = *(_QWORD *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8));
  v5 = *(_QWORD *)((char *)&dword_18 + (*v3 & 0xFFFFFFFFFFFFFF8));
  if (v6 >= v5 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
  v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, a2);
  specialized Array._endMutation()(v7);
  return swift_endAccess(v9);
}

void sub_C4F74C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  _QWORD aBlock[5];
  uint64_t v10;

  v2 = v1;
  UnfairLock.locked<A>(_:)((void (*)(void))sub_C5131C);
  if (LOBYTE(aBlock[0]) == 1)
  {
    UnfairLock.locked<A>(_:)(sub_C51354);
    v4 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
    v5 = objc_msgSend(objc_allocWithZone((Class)ICStoreRequestContext), "initWithIdentity:clientInfo:", v4, *(_QWORD *)(v1 + 16));

    v6 = objc_msgSend((id)objc_opt_self(ICURLBagProvider), "sharedBagProvider");
    aBlock[4] = sub_C51368;
    v10 = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21B54C;
    aBlock[3] = &block_descriptor_296;
    v7 = _Block_copy(aBlock);
    v8 = v10;
    swift_retain(v2);
    objc_msgSend(v6, "getBagForRequestContext:forceRefetch:withCompletionHandler:", v5, a1 & 1, v7, swift_release(v8).n128_f64[0]);
    _Block_release(v7);

  }
}

void sub_C4F8D0(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v6;
  id v7;
  id *v8;
  id v9;
  void *v10;
  _BYTE v11[24];

  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_durableObservers, v11, 33, 0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE888);
  WeakArray.append(_:)(a2, v6);
  swift_endAccess(v11);
  v7 = 0;
  v8 = (id *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) == 1)
  {
    v7 = *v8;
    v9 = *v8;
  }
  v10 = *a3;
  *a3 = v7;

}

id sub_C4F988@<X0>(_QWORD *a1@<X8>)
{
  return sub_C4F99C(a1);
}

id sub_C4F99C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id *v3;
  id v4;
  id result;

  v3 = (id *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) == 1)
  {
    v4 = *v3;
    result = *v3;
  }
  else
  {
    v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_C4F9F4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C4FA18()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_C4FA4C@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE620);
  v4 = __chkstk_darwin(v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v14[-v7];
  v9 = v1 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost, v15, 0, 0);
  sub_C513C0(v9, (uint64_t)v8);
  v10 = type metadata accessor for Signpost(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_EB6F8((uint64_t)v8, (uint64_t)a1);
  sub_C50DA8((uint64_t)v8);
  if (qword_14F9E80 != -1)
    swift_once(&qword_14F9E80, sub_C7B288);
  v12 = (id)static OS_os_log.musicBag;
  swift_retain(v1);
  Signpost.init(name:object:log:)((uint64_t)"Bag", 3, 2, v1, v12, a1);
  sub_EB66C((uint64_t)a1, (uint64_t)v6);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v14, 33, 0);
  sub_C51408((uint64_t)v6, v9);
  return swift_endAccess(v14);
}

uint64_t sub_C4FBFC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  double v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v28[5];

  v2 = v1;
  v4 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 56))(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost, 1, 1);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_bindings) = _swiftEmptyArrayStorage;
  v8 = OBJC_IVAR____TtC9MusicCore11BagProvider_lock;
  v9 = type metadata accessor for UnfairLock();
  swift_allocObject(v9, 24, 7);
  *(_QWORD *)(v1 + v8) = UnfairLock.init()();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers) = _swiftEmptyArrayStorage;
  v10 = OBJC_IVAR____TtC9MusicCore11BagProvider_durableObservers;
  v11 = type metadata accessor for BagProvider.Observer();
  *(_QWORD *)(v2 + v10) = WeakArray.init(_:)((uint64_t)_swiftEmptyArrayStorage, v11);
  if (qword_14F9E80 != -1)
    swift_once(&qword_14F9E80, sub_C7B288);
  Logger.init(_:)((id)static OS_os_log.musicBag);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_deferReload) = 0;
  v12 = OBJC_IVAR____TtC9MusicCore11BagProvider_retry;
  *(_QWORD *)(v2 + v12) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BagProvider.Retry()), "init");
  *(_QWORD *)(v2 + 16) = a1;
  v13 = v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_result;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 2;
  v14 = a1;
  sub_C4FA4C(v6);
  Signpost.begin(dso:)((uint64_t)&dword_0);
  sub_EB570((uint64_t)v6);
  sub_C4F74C(0);
  type metadata accessor for Whitetail.Binding();
  if (qword_14F9E38 != -1)
    swift_once(&qword_14F9E38, sub_C50FD0);
  v16 = (void *)qword_14FE600;
  UIScreen.Dimensions.size.getter(v15);
  v28[3] = &type metadata for DistributedNotificationTrigger;
  v28[4] = &protocol witness table for DistributedNotificationTrigger;
  v28[0] = v17;
  v18 = swift_allocObject(&unk_13B1670, 24, 7);
  swift_weakInit(v18 + 16, v2);
  v19 = v16;
  v20 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(v28, 0, (uint64_t)sub_C51450, v18);
  v21 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_bindings);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_bindings, v28, 33, 0);
  v22 = swift_retain(v20);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
  v24 = *(_QWORD *)((char *)&dword_10 + (*v21 & 0xFFFFFFFFFFFFFF8));
  v23 = *(_QWORD *)((char *)&dword_18 + (*v21 & 0xFFFFFFFFFFFFFF8));
  if (v24 >= v23 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
  v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v20);
  specialized Array._endMutation()(v25);
  swift_endAccess(v28);
  swift_release(v20);

  return v2;
}

double sub_C4FEEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    sub_C4FF40();
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

void sub_C4FF40()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  char v6;

  UnfairLock.locked<A>(_:)((void (*)(void))sub_C51458);

  if (v6 == 1)
  {
    UnfairLock.locked<A>(_:)(sub_C51498);
    __chkstk_darwin(v0);
    UnfairLock.locked<A>(_:)(sub_C5139C);
    v1 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v2 = Logger.logObject.getter(v1);
    v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_0, v2, v3, "Notification triggered to update bag: storefrontChanged", v4, 2u);
      swift_slowDealloc(v4, -1, -1);
    }

    sub_C4F74C(1);
  }
}

void sub_C500B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)();
  void *v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void *);
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  char v25;
  uint64_t *v26;
  _QWORD v27[2];
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v6);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9MusicCore11BagProvider_lock);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_C51388);
  if ((v30 & 1) != 0)
  {
    sub_C4F74C(1);
    v11 = sub_C514D8;
LABEL_23:
    UnfairLock.locked<A>(_:)(v11);
    return;
  }
  v12 = a1;
  if (!a1)
  {
    if (!a2)
      goto LABEL_25;
    swift_errorRetain(a2);
    v12 = (void *)_convertErrorToNSError(_:)(a2);
    v10 = swift_errorRelease(a2);
  }
  v30 = (uint64_t)_swiftEmptyArrayStorage;
  __chkstk_darwin(v10);
  v27[-4] = a3;
  v27[-3] = v12;
  v24 = v13;
  v25 = 1;
  v26 = &v30;
  v14 = a1;
  UnfairLock.locked<A>(_:)(sub_C5139C);
  if (!a1)
  {
LABEL_22:
    swift_bridgeObjectRelease(v30);
    sub_C4FA4C(v8);
    Signpost.end(dso:)((uint64_t)&dword_0);

    sub_EB570((uint64_t)v8);
    v11 = sub_C513B0;
    goto LABEL_23;
  }
  v15 = v30;
  v28 = v8;
  v29 = v9;
  v27[1] = (char *)&type metadata for () + 8;
  if ((unint64_t)v30 >> 62)
  {
    if (v30 < 0)
      v22 = v30;
    else
      v22 = v30 & 0xFFFFFFFFFFFFFF8;
    v23 = v12;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v22);
    if (v16)
      goto LABEL_9;
    goto LABEL_21;
  }
  v16 = *(_QWORD *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFF8));
  v17 = v12;
  swift_bridgeObjectRetain();
  if (!v16)
  {
LABEL_21:

    swift_bridgeObjectRelease(v15);
    v8 = v28;
    goto LABEL_22;
  }
LABEL_9:
  if (v16 >= 1)
  {
    v18 = 0;
    while ((v15 & 0xC000000000000001) == 0)
    {
      v19 = *(_QWORD *)(v15 + 8 * v18 + 32);
      swift_retain(v19);
      v20 = *(void (**)(void *))(v19 + 24);
      if (v20)
        goto LABEL_16;
LABEL_11:
      ++v18;
      swift_release(v19);
      if (v16 == v18)
        goto LABEL_21;
    }
    v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v15);
    v20 = *(void (**)(void *))(v19 + 24);
    if (!v20)
      goto LABEL_11;
LABEL_16:
    v21 = *(_QWORD *)(v19 + 32);
    swift_retain(v21);
    v20(v12);
    sub_5C198((uint64_t)v20, v21);
    goto LABEL_11;
  }
  __break(1u);
LABEL_25:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000001105790, "MusicCore/BagProvider.swift", 27, 2, 149, 0);
  __break(1u);
}

double sub_C503C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];

  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_durableObservers, v5, 33, 0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE888);
  WeakArray.remove(_:)(a2, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

double sub_C5043C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t Strong;
  char *v19;
  double result;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  if (!*(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8))
  {
    v12 = v2;
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc(12, -1);
      *(_DWORD *)v15 = 134217984;
      *(_QWORD *)(v15 + 4) = objc_msgSend(v12, "code");

      _os_log_impl(&dword_0, v13, v14, "Error retrieving bag: %ld", (uint8_t *)v15, 0xCu);
      swift_slowDealloc(v15, -1, -1);
    }
    else
    {

    }
    v16 = *(char **)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_retry);
    v17 = &v16[OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider];
    Strong = swift_weakLoadStrong(&v16[OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider]);
    swift_weakAssign(v17, v1);
    v19 = v16;
    swift_retain(v1);
    sub_C5090C(Strong);

    swift_release(Strong);
    v11 = v1;
    goto LABEL_11;
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) == 1)
  {
    v3 = v2;
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_0, v4, v5, "Successfully loaded a bag from iTunesCloud", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    v7 = *(char **)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_retry);
    v8 = &v7[OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider];
    v9 = swift_weakLoadStrong(&v7[OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider]);
    swift_weakAssign(v8, 0);
    v10 = v7;
    sub_C5090C(v9);

    v11 = v9;
LABEL_11:
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

void sub_C5067C(uint64_t a1, void *a2, char a3, char a4, uint64_t *a5)
{
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20[24];
  char v21[24];

  v8 = a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result;
  v9 = *(void **)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  *(_QWORD *)v8 = a2;
  *(_BYTE *)(v8 + 8) = a3;
  v10 = a2;

  sub_C5043C();
  if ((a4 & 1) != 0)
  {
    v11 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_durableObservers);
    swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_durableObservers, v21, 0, 0);
    v12 = *v11;
    v13 = type metadata accessor for BagProvider.Observer();
    v14 = swift_bridgeObjectRetain();
    v17 = WeakArray.allElements.getter(v14, v13, v15, v16);
    swift_bridgeObjectRelease(v12);
    swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers, v20, 0, 0);
    v18 = swift_bridgeObjectRetain();
    sub_C188F8(v18);
    v19 = *a5;
    *a5 = v17;
    swift_bridgeObjectRelease(v19);
  }
}

uint64_t BagProvider.Observer.deinit()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong(v0 + 16);
  if (Strong)
  {
    __chkstk_darwin(Strong);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C50834);
    swift_release();
  }
  swift_weakDestroy(v0 + 16);
  sub_5C198(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return v0;
}

double sub_C50834()
{
  uint64_t v0;

  return sub_C503C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double BagProvider.Observer.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t Strong;
  double result;

  Strong = swift_weakLoadStrong(v0 + 16);
  if (Strong)
  {
    __chkstk_darwin(Strong);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C514EC);
    swift_release();
  }
  swift_weakDestroy(v0 + 16);
  sub_5C198(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 40, 7).n128_u64[0];
  return result;
}

void sub_C5090C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char **v21;
  uint64_t v22;
  os_log_type_t v23;
  id v24;
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v25 - v9;
  v11 = v2 + OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider;
  Strong = swift_weakLoadStrong(v2 + OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider);
  v13 = Strong;
  if (!a1)
  {
    if (!Strong)
      return;
    swift_release(Strong);
LABEL_7:
    v14 = swift_weakLoadStrong(v11);
    swift_release(v14);
    v15 = swift_weakLoadStrong(v11);
    v16 = v15;
    if (v14)
    {
      if (v15)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v15 + OBJC_IVAR____TtC9MusicCore11BagProvider_logger, v4);
        v17 = swift_release(v16);
        v18 = Logger.logObject.getter(v17);
        v19 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v18, v19))
        {
          v21 = &selRef_registerObserver_;
          goto LABEL_19;
        }
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_0, v18, v19, "Beginning observation to retry loading bag", v20, 2u);
        v21 = &selRef_registerObserver_;
LABEL_14:
        swift_slowDealloc(v20, -1, -1);
LABEL_19:

        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        goto LABEL_20;
      }
      v21 = &selRef_registerObserver_;
    }
    else
    {
      if (v15)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v15 + OBJC_IVAR____TtC9MusicCore11BagProvider_logger, v4);
        v22 = swift_release(v16);
        v18 = Logger.logObject.getter(v22);
        v23 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v18, v23))
        {
          v21 = &selRef_unregisterObserver_;
          v10 = v8;
          goto LABEL_19;
        }
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_0, v18, v23, "Stopping observation to retry loading bag", v20, 2u);
        v21 = &selRef_unregisterObserver_;
        v10 = v8;
        goto LABEL_14;
      }
      v21 = &selRef_unregisterObserver_;
    }
LABEL_20:
    v24 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
    objc_msgSend(v24, *v21, v2);

    return;
  }
  if (!Strong)
    goto LABEL_7;
  swift_release(Strong);
  if (v13 != a1)
    goto LABEL_7;
}

id sub_C50C80()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BagProvider.Retry();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t BagProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_C50DA8(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_logger;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_C50DA8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE620);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double BagProvider.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  BagProvider.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_C50E0C()
{
  return type metadata accessor for BagProvider(0);
}

uint64_t type metadata accessor for BagProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_14FE690;
  if (!qword_14FE690)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BagProvider);
  return result;
}

void sub_C50E50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[11];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_C50F20(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4 = type metadata accessor for Logger(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      v6[7] = "\t";
      v6[8] = &unk_109F7E8;
      v6[9] = &unk_109F7E8;
      v6[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 11, v6, a1 + 80);
    }
  }
}

void sub_C50F20(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14FE6A0)
  {
    v2 = type metadata accessor for Signpost(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14FE6A0);
  }
}

uint64_t type metadata accessor for BagProvider.Retry()
{
  return objc_opt_self(_TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry);
}

uint64_t __swift_memcpy9_8_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for BagProvider.Result()
{
  return &type metadata for BagProvider.Result;
}

void sub_C50FB8(BOOL *a1@<X8>)
{
  uint64_t v1;

  sub_C4F578(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

NSString sub_C50FD0()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_14FE600 = (uint64_t)result;
  return result;
}

uint64_t sub_C51004(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t i;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *a1;
  v6 = swift_bridgeObjectRetain();
  v7 = sub_397814(v6, a2);
  v9 = v8;
  swift_bridgeObjectRelease(v5);
  if (v2)
    return v7;
  if ((v9 & 1) == 0)
  {
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_57;
    v9 = *a1;
    if (*a1 >> 62)
    {
LABEL_58:
      if ((v9 & 0x8000000000000000) != 0)
        v29 = v9;
      else
        v29 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v30 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v9);
      if (v10 != v30)
        goto LABEL_6;
    }
    else if (v10 != *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8)))
    {
LABEL_6:
      for (i = v7 + 5; ; ++i)
      {
        v9 = i - 4;
        v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
          break;
        if ((v9 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        if (v9 >= *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8)))
          goto LABEL_48;
        if (*(_QWORD *)(v12 + 8 * i) != a2)
          goto LABEL_11;
LABEL_31:
        v10 = i - 3;
        if (__OFADD__(v9, 1))
          goto LABEL_49;
        v23 = *a1;
        if (*a1 >> 62)
        {
          if (v23 < 0)
            v26 = *a1;
          else
            v26 = v23 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v24 = _CocoaArrayWrapper.endIndex.getter(v26);
          swift_bridgeObjectRelease(v23);
        }
        else
        {
          v24 = *(_QWORD *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFF8));
        }
        if (v10 == v24)
          return v7;
      }
      v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v12);
      swift_unknownObjectRelease(v25);
      if (v25 == a2)
        goto LABEL_31;
LABEL_11:
      if (v9 == v7)
      {
LABEL_30:
        if (__OFADD__(v7++, 1))
          goto LABEL_50;
        goto LABEL_31;
      }
      v10 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, *a1);
        v10 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_16:
          if ((v9 & 0x8000000000000000) != 0)
            goto LABEL_53;
          if (v9 >= *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8)))
            goto LABEL_54;
          v14 = *(_QWORD *)(v10 + 8 * i);
          swift_retain(v14);
          goto LABEL_19;
        }
      }
      else
      {
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_51;
        if (v7 >= *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8)))
          goto LABEL_52;
        v13 = *(_QWORD *)(v10 + 8 * v7 + 32);
        swift_retain(v13);
        if ((v10 & 0xC000000000000001) == 0)
          goto LABEL_16;
      }
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v10);
      v10 = *a1;
LABEL_19:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v10);
      *a1 = v10;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v10 < 0 || (v10 & 0x4000000000000000) != 0)
      {
        v10 = sub_710708(v10);
        *a1 = v10;
      }
      v16 = *(_QWORD *)((char *)&stru_20.cmd + 8 * v7 + (v10 & 0xFFFFFFFFFFFFFF8));
      *(_QWORD *)((char *)&stru_20.cmd + 8 * v7 + (v10 & 0xFFFFFFFFFFFFFF8)) = v14;
      swift_release(v16);
      specialized Array._endMutation()(v17);
      v10 = *a1;
      v18 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
      *a1 = v10;
      if (!v18 || v10 < 0 || (v10 & 0x4000000000000000) != 0)
      {
        v10 = sub_710708(v10);
        *a1 = v10;
      }
      if ((v9 & 0x8000000000000000) != 0)
        goto LABEL_55;
      v19 = v10 & 0xFFFFFFFFFFFFFF8;
      if (v9 >= *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8)))
        goto LABEL_56;
      v20 = *(_QWORD *)(v19 + 8 * i);
      *(_QWORD *)(v19 + 8 * i) = v13;
      swift_release(v20);
      specialized Array._endMutation()(v21);
      goto LABEL_30;
    }
    return v7;
  }
  v27 = *a1;
  if (!((unint64_t)v27 >> 62))
    return *(_QWORD *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFF8));
  if (v27 < 0)
    v31 = v27;
  else
    v31 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v27);
  return v32;
}

void sub_C5131C(BOOL *a1@<X8>)
{
  uint64_t v1;

  *a1 = (*(_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) & 1) == 0
     && *(_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) != 1;
}

void sub_C51354()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) = 1;
}

void sub_C51368(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_C500B4(a1, a2, v2);
}

uint64_t block_copy_helper_292(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_292(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_C51388(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_deferReload);
}

void sub_C5139C()
{
  sub_C514B4();
}

void sub_C513B0()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) = 0;
}

uint64_t sub_C513C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_C51408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_C51450()
{
  uint64_t v0;

  return sub_C4FEEC(v0);
}

id sub_C51458@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

void sub_C51498()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_deferReload) = *(_BYTE *)(v0
                                                                                  + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching);
}

void sub_C514B4()
{
  uint64_t v0;

  sub_C5067C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32), *(_BYTE *)(v0 + 33), *(uint64_t **)(v0 + 40));
}

void sub_C514D8()
{
  sub_C513B0();
}

double sub_C514EC()
{
  return sub_C50834();
}

uint64_t TabIdentifier.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C51534 + 4 * byte_109F830[a1]))(0x7972617262696CLL, 0xE700000000000000);
}

uint64_t sub_C51534()
{
  return 0x6F4E6E657473696CLL;
}

uint64_t sub_C51550()
{
  return 0x6573776F7262;
}

uint64_t sub_C51564()
{
  return 0x6F69646172;
}

uint64_t sub_C51578()
{
  return 0x686372616573;
}

uint64_t sub_C5158C()
{
  return 0x736F65646976;
}

_UNKNOWN **static TabIdentifier.allCases.getter()
{
  return &off_13A6788;
}

void sub_C515B0(char *a1)
{
  sub_BB7E84(*a1);
}

void sub_C515BC()
{
  char *v0;

  sub_C4A15C(*v0);
}

void sub_C515C4()
{
  __asm { BR              X10 }
}

uint64_t sub_C51600(uint64_t a1)
{
  String.hash(into:)(a1, 0x6F4E6E657473696CLL, 0xE900000000000077);
  return swift_bridgeObjectRelease(0xE900000000000077);
}

void sub_C51680(uint64_t a1)
{
  char *v1;

  sub_C4A558(a1, *v1);
}

unint64_t sub_C51688@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore13TabIdentifierO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_C516B4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_C516E4 + 4 * byte_109F83C[*v0]))();
}

void sub_C516E4(_QWORD *a1@<X8>)
{
  *a1 = 0x6F4E6E657473696CLL;
  a1[1] = 0xE900000000000077;
}

void sub_C51704(_QWORD *a1@<X8>)
{
  *a1 = 0x6573776F7262;
  a1[1] = 0xE600000000000000;
}

void sub_C5171C(_QWORD *a1@<X8>)
{
  *a1 = 0x6F69646172;
  a1[1] = 0xE500000000000000;
}

void sub_C51734(_QWORD *a1@<X8>)
{
  *a1 = 0x686372616573;
  a1[1] = 0xE600000000000000;
}

void sub_C5174C(_QWORD *a1@<X8>)
{
  *a1 = 0x736F65646976;
  a1[1] = 0xE600000000000000;
}

void sub_C51764(_QWORD *a1@<X8>)
{
  *a1 = &off_13A6788;
}

void sub_C51774(char *a1)
{
  sub_BB8034(*a1);
}

void sub_C51780()
{
  char *v0;

  sub_C4A780(0, *v0);
}

void sub_C5178C()
{
  __asm { BR              X10 }
}

uint64_t sub_C517C8(uint64_t a1)
{
  String.hash(into:)(a1, 0x756F795F726F66, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_C5185C(uint64_t a1)
{
  char *v1;

  sub_C4A780(a1, *v1);
}

unint64_t sub_C51864@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_C51954(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_C51890()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_C518C0 + 4 * byte_109F849[*v0]))();
}

void sub_C518C0(_QWORD *a1@<X8>)
{
  *a1 = 0x756F795F726F66;
  a1[1] = 0xE700000000000000;
}

void sub_C518DC(_QWORD *a1@<X8>)
{
  *a1 = 0x6E5F6E657473696CLL;
  a1[1] = 0xEA0000000000776FLL;
}

void sub_C518FC(_QWORD *a1@<X8>)
{
  *a1 = 0x6573776F7262;
  a1[1] = 0xE600000000000000;
}

void sub_C51914(_QWORD *a1@<X8>)
{
  *a1 = 0x6F69646172;
  a1[1] = 0xE500000000000000;
}

unint64_t sub_C51954(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A4B08, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

unint64_t _s9MusicCore13TabIdentifierO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A66D8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

unint64_t sub_C519E8()
{
  unint64_t result;

  result = qword_14FE8A0;
  if (!qword_14FE8A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabIdentifier, &type metadata for TabIdentifier);
    atomic_store(result, (unint64_t *)&qword_14FE8A0);
  }
  return result;
}

unint64_t sub_C51A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FE8A8;
  if (!qword_14FE8A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FE8B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_14FE8A8);
  }
  return result;
}

unint64_t sub_C51A80()
{
  unint64_t result;

  result = qword_14FE8B8;
  if (!qword_14FE8B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabIdentifier, &type metadata for TabIdentifier);
    atomic_store(result, (unint64_t *)&qword_14FE8B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TabIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_C51B10 + 4 * byte_109F855[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_C51B44 + 4 * byte_109F850[v4]))();
}

uint64_t sub_C51B44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C51B4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC51B54);
  return result;
}

uint64_t sub_C51B60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC51B68);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_C51B6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C51B74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TabIdentifier()
{
  return &type metadata for TabIdentifier;
}

uint64_t storeEnumTagSinglePayload for BagTabIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_C51BDC + 4 * byte_109F85F[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_C51C10 + 4 * byte_109F85A[v4]))();
}

uint64_t sub_C51C10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C51C18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC51C20);
  return result;
}

uint64_t sub_C51C2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC51C34);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_C51C38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C51C40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BagTabIdentifier()
{
  return &type metadata for BagTabIdentifier;
}

unint64_t sub_C51C60()
{
  unint64_t result;

  result = qword_14FE8C0;
  if (!qword_14FE8C0)
  {
    result = swift_getWitnessTable(&unk_109FA1C, &type metadata for BagTabIdentifier);
    atomic_store(result, (unint64_t *)&qword_14FE8C0);
  }
  return result;
}

uint64_t Playlist.hasActiveCollaboration.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v20;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE8F0);
  __chkstk_darwin(v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE8F8);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v20 - v8;
  Playlist.collaboration.getter(v7);
  v10 = type metadata accessor for Playlist.Collaboration(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) == 1)
  {
    sub_56024((uint64_t)v2, &qword_14FE8F0);
    v12 = type metadata accessor for Playlist.Collaborator.Status(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
LABEL_13:
    v18 = 0;
    goto LABEL_14;
  }
  Playlist.Collaboration.collaboratorStatus.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
  v13 = type metadata accessor for Playlist.Collaborator.Status(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
    goto LABEL_13;
  sub_5C238((uint64_t)v9, (uint64_t)v5, &qword_14FE8F8);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v5, v13);
  if (v15 != enum case for Playlist.Collaborator.Status.host(_:)
    && v15 != enum case for Playlist.Collaborator.Status.joined(_:)
    && v15 != enum case for Playlist.Collaborator.Status.pending(_:))
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v13);
    goto LABEL_13;
  }
  v18 = 1;
LABEL_14:
  sub_56024((uint64_t)v9, &qword_14FE8F8);
  return v18;
}

uint64_t static Collaboration.Setup.contextualImageName(active:)(char a1)
{
  if ((a1 & 1) != 0)
    return 0x322E6E6F73726570;
  else
    return 0xD000000000000011;
}

uint64_t sub_C51ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_C51F30(a1, a2, a3, (uint64_t)&unk_13B1D38, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_14FECF0);
}

uint64_t sub_C51EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_C5209C(a1, a2, a3, (uint64_t)&unk_13B1F40, (uint64_t *)&unk_14FE890, (uint64_t)&unk_14FEE00);
}

uint64_t sub_C51F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_C51F30(a1, a2, a3, (uint64_t)&unk_13B1CE8, (uint64_t)&type metadata for Bool, (uint64_t)&unk_14FECC8);
}

uint64_t sub_C51F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v26[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12);
  if ((_DWORD)v14 == 1)
  {
    sub_56024(a1, (uint64_t *)&unk_1500E30);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v16);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      v21 = v20;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter(v14);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v22 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  if (v21 | v19)
  {
    v26[0] = 0;
    v26[1] = 0;
    v24 = v26;
    v26[2] = v19;
    v26[3] = v21;
  }
  else
  {
    v24 = 0;
  }
  return swift_task_create(v15, v24, a5, a6, v23);
}

uint64_t sub_C52080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_C5209C(a1, a2, a3, (uint64_t)&unk_13B1D10, &qword_14FECE0, (uint64_t)&unk_14FECD8);
}

uint64_t sub_C5209C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v27[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12);
  if ((_DWORD)v14 == 1)
  {
    sub_56024(a1, (uint64_t *)&unk_1500E30);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v16);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      v21 = v20;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter(v14);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v22 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  v24 = __swift_instantiateConcreteTypeFromMangledName(a5);
  if (v21 | v19)
  {
    v27[0] = 0;
    v27[1] = 0;
    v25 = v27;
    v27[2] = v19;
    v27[3] = v21;
  }
  else
  {
    v25 = 0;
  }
  return swift_task_create(v15, v25, v24, a6, v23);
}

uint64_t sub_C521F8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v9);
    v4 = ApplicationCapabilities.Service.rawValue.getter(a1);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_C525C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for AudioVariant(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_4DD24(&qword_14FED28, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_4DD24(&qword_14FED30, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_C52748(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[10];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v9);
    v4 = Library.Menu.Identifier.rawValue.getter(a1);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_C52AAC(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  Hasher.init(_seed:)(&v25);
  v4 = SortOptions.ContentType.identifier.getter(a1);
  v6 = v5;
  String.hash(into:)(&v25, v4, v5);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()();
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    return 0;
  v10 = ~v8;
  while (1)
  {
    v11 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v9);
    v12 = v11 >> 6;
    if (v11 >> 6)
      break;
    if (a1 >= 0x40u)
    {
      Hasher.init(_seed:)(&v25);
      v22 = v27;
      v23 = v28;
      v24 = v29;
      v20 = v25;
      v21 = v26;
      v15 = (v11 & 1) == 0;
      if ((v11 & 1) != 0)
        v16 = 0xD000000000000011;
      else
        v16 = 0x646956636973756DLL;
      v17 = 0xEB00000000736F65;
      v14 = 0x8000000001105AB0;
      goto LABEL_34;
    }
    if (((v11 ^ a1) & 1) == 0)
      return 1;
LABEL_4:
    v9 = (v9 + 1) & v10;
    if (((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      return 0;
  }
  if (v12 == 1)
  {
    if ((a1 & 0xC0) != 0x40)
    {
      Hasher.init(_seed:)(&v25);
      v22 = v27;
      v23 = v28;
      v24 = v29;
      v20 = v25;
      v21 = v26;
      __asm { BR              X9 }
    }
    if (((v11 ^ a1) & 0x3F) == 0)
      return 1;
    goto LABEL_4;
  }
  if (v12 != 3)
  {
    Hasher.init(_seed:)(&v25);
    v22 = v27;
    v23 = v28;
    v24 = v29;
    v20 = v25;
    v21 = v26;
    if ((v11 & 1) != 0)
      v16 = 0xD000000000000018;
    else
      v16 = 0x7473696C79616C70;
    if ((v11 & 1) != 0)
      v18 = 0x8000000001105A70;
    else
      v18 = 0xE900000000000073;
    goto LABEL_37;
  }
  if (v11 != 192 || a1 != 192)
  {
    Hasher.init(_seed:)(&v25);
    v22 = v27;
    v23 = v28;
    v24 = v29;
    v20 = v25;
    v21 = v26;
    v13 = 0x7473696C79616C70;
    if (v11 == 193)
      v13 = 0x736569766F6DLL;
    v14 = 0xEE006C6961746544;
    if (v11 == 193)
      v14 = 0xE600000000000000;
    v15 = v11 == 192;
    if (v11 == 192)
      v16 = 0x73676E6F73;
    else
      v16 = v13;
    v17 = 0xE500000000000000;
LABEL_34:
    if (v15)
      v18 = v17;
    else
      v18 = v14;
LABEL_37:
    String.hash(into:)(&v20, v16, v18);
    swift_bridgeObjectRelease(v18);
    Hasher._finalize()();
    Hasher.init(_seed:)(&v20);
    __asm { BR              X8 }
  }
  return 1;
}

void sub_C53028()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;

  v0 = type metadata accessor for Collaboration.ArtworkCachingReference();
  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000027;
  *(_QWORD *)(v1 + 24) = 0x8000000001103020;
  v2 = (void *)objc_opt_self(MPArtworkCatalog);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setCacheLimit:forCacheIdentifier:cacheReference:", 100, v3, v1);

  static Collaboration.artworkCaching = v1;
}

uint64_t *Collaboration.artworkCaching.unsafeMutableAddressor()
{
  if (qword_14F9E40 != -1)
    swift_once(&qword_14F9E40, sub_C53028);
  return &static Collaboration.artworkCaching;
}

double static Collaboration.artworkCaching.getter()
{
  double result;
  _BYTE v1[24];

  if (qword_14F9E40 != -1)
    swift_once(&qword_14F9E40, sub_C53028);
  swift_beginAccess(&static Collaboration.artworkCaching, v1, 0, 0);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

double static Collaboration.artworkCaching.setter(uint64_t a1)
{
  double result;
  _BYTE v3[24];

  if (qword_14F9E40 != -1)
    swift_once(&qword_14F9E40, sub_C53028);
  swift_beginAccess(&static Collaboration.artworkCaching, v3, 1, 0);
  static Collaboration.artworkCaching = a1;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t (*static Collaboration.artworkCaching.modify(uint64_t a1))(_QWORD)
{
  if (qword_14F9E40 != -1)
    swift_once(&qword_14F9E40, sub_C53028);
  swift_beginAccess(&static Collaboration.artworkCaching, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_C53250()
{
  id result;

  result = sub_C5326C();
  static Collaboration.requiredProperties = (uint64_t)result;
  return result;
}

id sub_C5326C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  id v23;
  unint64_t v24;
  id v25;
  Class v26;
  Class v27;
  id v28;
  _BYTE v30[56];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v1 = swift_allocObject(v0, 272, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1076290;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistArtwork);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistIsOwner);
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistEditorialArtwork);
  *(_QWORD *)(v1 + 72) = v4;
  *(_QWORD *)(v1 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
  *(_QWORD *)(v1 + 88) = v5;
  *(_QWORD *)(v1 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistType);
  *(_QWORD *)(v1 + 104) = v6;
  *(_QWORD *)(v1 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistUserEditableComponents);
  *(_QWORD *)(v1 + 120) = v7;
  *(_QWORD *)(v1 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistVisiblePlaylist);
  *(_QWORD *)(v1 + 136) = v8;
  *(_QWORD *)(v1 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCuratorPlaylist);
  *(_QWORD *)(v1 + 152) = v9;
  *(_QWORD *)(v1 + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistSubscribed);
  *(_QWORD *)(v1 + 168) = v10;
  *(_QWORD *)(v1 + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistIsCollaborative);
  *(_QWORD *)(v1 + 184) = v11;
  *(_QWORD *)(v1 + 192) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCollaboratorStatus);
  *(_QWORD *)(v1 + 200) = v12;
  *(_QWORD *)(v1 + 208) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCollaborationMode);
  *(_QWORD *)(v1 + 216) = v13;
  *(_QWORD *)(v1 + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCollaboratorPermissions);
  *(_QWORD *)(v1 + 232) = v14;
  *(_QWORD *)(v1 + 240) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCollaborationInvitationURL);
  *(_QWORD *)(v1 + 248) = v15;
  *(_QWORD *)(v1 + 256) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCollaborationInvitationURLExpirationDate);
  *(_QWORD *)(v1 + 264) = v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
  inited = swift_initStackObject(v17, v30);
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistCurator);
  *(_QWORD *)(inited + 40) = v19;
  v20 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_105B360;
  *(_QWORD *)(v20 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorName);
  *(_QWORD *)(v20 + 40) = v21;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  v23 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v23;
  v24 = sub_C26530(inited);
  v25 = objc_allocWithZone((Class)MPPropertySet);
  v26 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v1);
  sub_4E684(0, (unint64_t *)&qword_14FEFF0, MPPropertySet_ptr);
  v27 = Dictionary._bridgeToObjectiveC()().super.isa;
  v28 = objc_msgSend(v25, "initWithProperties:relationships:", v26, v27, swift_bridgeObjectRelease(v24).n128_f64[0]);

  return v28;
}

uint64_t *Collaboration.requiredProperties.unsafeMutableAddressor()
{
  if (qword_14F9E48 != -1)
    swift_once(&qword_14F9E48, sub_C53250);
  return &static Collaboration.requiredProperties;
}

id static Collaboration.requiredProperties.getter()
{
  _BYTE v1[24];

  if (qword_14F9E48 != -1)
    swift_once(&qword_14F9E48, sub_C53250);
  swift_beginAccess(&static Collaboration.requiredProperties, v1, 0, 0);
  return (id)static Collaboration.requiredProperties;
}

void static Collaboration.requiredProperties.setter(uint64_t a1)
{
  void *v2;
  _BYTE v3[24];

  if (qword_14F9E48 != -1)
    swift_once(&qword_14F9E48, sub_C53250);
  swift_beginAccess(&static Collaboration.requiredProperties, v3, 1, 0);
  v2 = (void *)static Collaboration.requiredProperties;
  static Collaboration.requiredProperties = a1;

}

uint64_t (*static Collaboration.requiredProperties.modify(uint64_t a1))(_QWORD)
{
  if (qword_14F9E48 != -1)
    swift_once(&qword_14F9E48, sub_C53250);
  swift_beginAccess(&static Collaboration.requiredProperties, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t static Collaboration.Setup.imageName(active:)(char a1)
{
  if ((a1 & 1) != 0)
    return 0x322E6E6F73726570;
  else
    return 0xD000000000000016;
}

void Collaboration.Error.errorDescription.getter(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_C5374C()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD v6[8];

  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  swift_errorRetain(v0);
  _StringGuts.grow(_:)(25);
  v2._object = (void *)0x80000000011058A0;
  v2._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v2);
  v5 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  _print_unlocked<A, B>(_:_:)(&v5, v6, v3, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  sub_7A285C(v0, v1, 0);
  return v6[0];
}

uint64_t sub_C538C4()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)&loc_C538B0 + 4 * byte_109FA92[v0]))(0x636120726F6E694DLL, 0xED0000746E756F63);
}

void sub_C538FC()
{
  JUMPOUT(0xC538B0);
}

void sub_C53918()
{
  JUMPOUT(0xC538B0);
}

double static Collaboration.Error.tapToRadarAlert()()
{
  uint64_t v0;
  double result;
  uint64_t v2;
  _BYTE *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[56];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  result = __chkstk_darwin(v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_14FA618 != -1)
    swift_once(&qword_14FA618, sub_D75398);
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    v4 = sub_C26648((uint64_t)_swiftEmptyArrayStorage);
    sub_C69FA0(0xD00000000000001FLL, 0x8000000001105930, 0xD000000000000032, 0x8000000001103C60, (uint64_t)_swiftEmptyArrayStorage, v4, (uint64_t)_swiftEmptyArrayStorage, 1, (uint64_t)v9);
    swift_bridgeObjectRelease(v4);
    v5 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
    v6 = swift_allocObject(&unk_13B1930, 88, 7);
    *(_QWORD *)(v6 + 16) = 0;
    *(_QWORD *)(v6 + 24) = 0;
    sub_5C090((uint64_t)v9, v6 + 32, &qword_14FE918);
    v7 = sub_C5209C((uint64_t)v3, (uint64_t)&unk_14FE920, v6, (uint64_t)&unk_13B1F40, (uint64_t *)&unk_14FE890, (uint64_t)&unk_14FEE00);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_C53B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a4;
  return swift_task_switch(sub_C53B88, 0, 0);
}

uint64_t sub_C53B88()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  sub_5C090(*(_QWORD *)(v0 + 80), v0 + 16, &qword_14FE918);
  if (*(_QWORD *)(v0 + 24) && (v1 = *(int **)(v0 + 56)) != 0)
  {
    v4 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 88) = v2;
    *v2 = v0;
    v2[1] = sub_C53C20;
    return v4();
  }
  else
  {
    **(_BYTE **)(v0 + 72) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C53C20()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_task_switch(sub_C53C74, 0, 0);
}

uint64_t sub_C53C74()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 72) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_C53C84()
{
  uint64_t v0;

  Collaboration.Error.errorDescription.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t Collaboration.Object.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_C5E078(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    v9 = _s8MusicKit8PlaylistV0A11ApplicationE10storyTitleSSSgvg_0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v10 = *v8;
    v11 = objc_msgSend(*v8, "name");
    if (v11)
    {
      v12 = v11;
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);

    }
    else
    {

      return 0;
    }
  }
  return v9;
}

uint64_t Collaboration.Object.storeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t ObjectType;
  id v19;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (void **)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_C5E078(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) != 1)
  {
    v13 = *v8;
    objc_opt_self(MPModelGenericObject);
    v14 = (void *)swift_dynamicCastObjCClass(v13);
    if (v14)
    {
      v15 = objc_msgSend(v14, "anyObject");
    }
    else
    {
      objc_opt_self(MPModelStoreBrowseContentItem);
      v16 = (void *)swift_dynamicCastObjCClass(v13);
      if (!v16)
        goto LABEL_10;
      v15 = objc_msgSend(v16, "innerObject");
    }
    v17 = v15;
    if (v17)
    {
LABEL_11:
      ObjectType = swift_getObjectType();
      v19 = objc_msgSend(v17, "identifiers");
      v10 = sub_C27FD8(ObjectType, 3, 2u, v19);

      return v10;
    }
LABEL_10:
    v17 = v13;
    goto LABEL_11;
  }
  v9 = (*(uint64_t (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
  v10 = Playlist.catalogID.getter(v9);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v12)
    return 0;
  return v10;
}

uint64_t Collaboration.Object.hasActiveCollaboration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  char active;
  id v10;
  char *v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_C5E078(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    active = Playlist.hasActiveCollaboration.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v10 = *v8;
    v11 = (char *)objc_msgSend(*v8, "collaboratorStatus");

    active = (unint64_t)(v11 - 2) < 3;
  }
  return active & 1;
}

BOOL MPModelPlaylist.hasActiveCollaboration.getter()
{
  void *v0;

  return (char *)objc_msgSend(v0, "collaboratorStatus") - 2 < (_BYTE *)&dword_0 + 3;
}

uint64_t Collaboration.Object.isOpenInvitation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  char *v17;
  uint64_t v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE8F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v9);
  v11 = (id *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_C5E078(v1, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload(v11, v9) == 1)
  {
    v12 = (*(double (**)(char *, id *, uint64_t))(v6 + 32))(v8, v11, v5);
    Playlist.collaboration.getter(v12);
    v13 = type metadata accessor for Playlist.Collaboration(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_56024((uint64_t)v4, &qword_14FE8F0);
      v15 = 0;
    }
    else
    {
      v15 = Playlist.Collaboration.isOpenInvitation.getter();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
    }
  }
  else
  {
    v16 = *v11;
    v17 = (char *)objc_msgSend(*v11, "collaborationMode");

    v15 = v17 == (_BYTE *)&dword_0 + 1;
  }
  return v15 & 1;
}

uint64_t Playlist.Collaboration.isOpenInvitation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  int v19;
  uint64_t *v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;

  v0 = type metadata accessor for Playlist.Collaboration.InvitationMode(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE928);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE930);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - v11;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v25 - v15;
  Playlist.Collaboration.invitationMode.getter(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v12, enum case for Playlist.Collaboration.InvitationMode.open(_:), v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  v17 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_5C238((uint64_t)v16, (uint64_t)v6, &qword_14FE930);
  sub_5C238((uint64_t)v12, v17, &qword_14FE930);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v18((uint64_t)v6, 1, v0) == 1)
  {
    sub_56024((uint64_t)v12, &qword_14FE930);
    sub_56024((uint64_t)v16, &qword_14FE930);
    v19 = v18(v17, 1, v0);
    if (v19 == 1)
      v20 = &qword_14FE930;
    else
      v20 = &qword_14FE928;
    if (v19 == 1)
      v21 = -1;
    else
      v21 = 0;
  }
  else
  {
    sub_5C238((uint64_t)v6, (uint64_t)v9, &qword_14FE930);
    if (v18(v17, 1, v0) == 1)
    {
      sub_56024((uint64_t)v12, &qword_14FE930);
      sub_56024((uint64_t)v16, &qword_14FE930);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
      v21 = 0;
      v20 = &qword_14FE928;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      v22 = sub_4DD24((unint64_t *)&unk_14FE938, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaboration.InvitationMode, (uint64_t)&protocol conformance descriptor for Playlist.Collaboration.InvitationMode);
      v21 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v3, v0, v22);
      v23 = *(void (**)(char *, uint64_t))(v1 + 8);
      v23(v3, v0);
      v20 = &qword_14FE930;
      sub_56024((uint64_t)v12, &qword_14FE930);
      sub_56024((uint64_t)v16, &qword_14FE930);
      v23(v9, v0);
    }
  }
  sub_56024((uint64_t)v6, v20);
  return v21 & 1;
}

uint64_t Collaboration.Object.collaborationURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE8F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v14);
  v16 = (id *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_C5E078(v2, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
  {
    v17 = (*(double (**)(char *, id *, uint64_t))(v8 + 32))(v10, v16, v7);
    Playlist.collaboration.getter(v17);
    v18 = type metadata accessor for Playlist.Collaboration(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_56024((uint64_t)v6, &qword_14FE8F0);
      v20 = type metadata accessor for URL(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
    }
    else
    {
      Playlist.Collaboration.invitationURL.getter();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v6, v18);
    }
  }
  else
  {
    v22 = *v16;
    v23 = objc_msgSend(*v16, "collaborationInvitationURL");
    if (v23)
    {
      v24 = v23;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v23);

      v25 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v13, 0, 1, v25);
    }
    else
    {

      v26 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v13, 1, 1, v26);
    }
    return sub_5C090((uint64_t)v13, a1, &qword_14FAC20);
  }
}

void Collaboration.Object.artwork.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v8);
  v10 = (void **)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_C5E078(v2, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v10, v4);
    _s8MusicKit8PlaylistV0A11ApplicationE12storyArtworkAA0F0VSgvg_0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v11 = *v10;
    v12 = MPModelPlaylist.preferredArtworkCatalog.getter();
    if (v12)
    {
      Artwork.init(_:)(v12);

      v13 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 0, 1, v13);
    }
    else
    {
      v14 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 1, 1, v14);

    }
  }
}

void Collaboration.Object.lpImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void (*v15)(char *, void **, uint64_t);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  __n128 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  double v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  double v44;
  NSString v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  char *v50;
  char v51[24];
  void **aBlock;
  uint64_t v53;
  double (*v54)(uint64_t, void *, uint64_t, uint64_t);
  void *v55;
  void *v56;
  uint64_t v57;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v1);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v50 = (char *)&v48 - v7;
  v8 = type metadata accessor for UTType(0, v6);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v12);
  v14 = (void **)((char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  sub_C5E078(v0, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v15 = *(void (**)(char *, void **, uint64_t))(v2 + 32);
    v15(v50, v14, v1);
    v17 = static UTType.png.getter(v16);
    UTType.identifier.getter(v17);
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v20 = String._bridgeToObjectiveC()();
    v21 = swift_bridgeObjectRelease(v19);
    v22 = v50;
    (*(void (**)(char *, char *, uint64_t, __n128))(v2 + 16))(v4, v50, v1, v21);
    v23 = *(unsigned __int8 *)(v2 + 80);
    v24 = (v23 + 16) & ~v23;
    v25 = swift_allocObject(&unk_13B1958, v24 + v3, v23 | 7);
    v15((char *)(v25 + v24), (void **)v4, v1);
    v56 = sub_C5E11C;
    v57 = v25;
    aBlock = _NSConcreteStackBlock;
    v53 = 1107296256;
    v54 = sub_C5508C;
    v55 = &block_descriptor_297;
    v26 = _Block_copy(&aBlock);
    *(_QWORD *)&v27 = swift_release(v57).n128_u64[0];
    v28 = v49;
    objc_msgSend(v49, "registerItemForTypeIdentifier:loadHandler:", v20, v26, v27);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v22, v1);
  }
  else
  {
    v29 = v8;
    v30 = v49;
    v31 = *v14;
    v32 = MPModelPlaylist.preferredArtworkCatalog.getter();
    if (v32)
    {
      v33 = v32;
      if (qword_14F9E40 != -1)
        swift_once(&qword_14F9E40, sub_C53028);
      swift_beginAccess(&static Collaboration.artworkCaching, v51, 0, 0);
      v34 = static Collaboration.artworkCaching;
      v35 = swift_retain(static Collaboration.artworkCaching);
      v36 = static UTType.png.getter(v35);
      UTType.identifier.getter(v36);
      v38 = v37;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v29);
      v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v38);
      v40 = swift_allocObject(&unk_13B19A8, 32, 7);
      *(_QWORD *)(v40 + 16) = v33;
      *(_QWORD *)(v40 + 24) = v34;
      v56 = sub_C5E1C4;
      v57 = v40;
      aBlock = _NSConcreteStackBlock;
      v53 = 1107296256;
      v54 = sub_C5508C;
      v55 = &block_descriptor_10_28;
      v41 = _Block_copy(&aBlock);
      v42 = v57;
      swift_retain(v34);
      v43 = v33;
      *(_QWORD *)&v44 = swift_release(v42).n128_u64[0];
      v28 = v30;
      objc_msgSend(v30, "registerItemForTypeIdentifier:loadHandler:", v39, v41, v44);
      _Block_release(v41);

      swift_release(v34);
    }
    else
    {

      v28 = v30;
    }
  }
  v45 = String._bridgeToObjectiveC()();
  v46 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v45);

  if (v46)
  {
    v47 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithPlatformImage:", v46);

    objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithItemProvider:properties:placeholderImage:", v28, 0, v47);
  }
  else
  {
    __break(1u);
  }
}

