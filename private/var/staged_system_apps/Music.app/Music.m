_QWORD *sub_100007E68(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100007E8C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t _s5Music18DragDropToPlaylistV6OriginVwxx_0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_100008CA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000093B4()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011EC9A8)
  {
    v4 = off_1010A8990;
    v5 = 0;
    qword_1011EC9A8 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011EC9A8;
  v1 = v3;
  if (!qword_1011EC9A8)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_1000099F8(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "setPlayActivityFeatureNameSourceViewController:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "navigationController"));
  objc_msgSend(v2, "pushViewController:animated:", *(_QWORD *)(a1 + 32), 1);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "contentManager"));
  objc_msgSend(v3, "clearActivityIndicatorForSelectedIndexPath");

}

void *sub_100009F74(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011EC9D0)
  {
    v6 = off_1010A89F8;
    v7 = 0;
    qword_1011EC9D0 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011EC9D0;
    if (qword_1011EC9D0)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011EC9D0;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011EC9C8 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10000A7AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000A7C8(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id *v10;
  id v11;
  id WeakRetained;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  _BOOL8 v22;
  void *v23;
  void *v24;
  double v25;
  double v26;
  void *v27;
  id v28;

  v8 = a4;
  v9 = a5;
  v10 = (id *)(a1 + 32);
  v11 = a2;
  WeakRetained = objc_loadWeakRetained(v10);
  v28 = v8;
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[MusicCarPlayManager sharedManager](MusicCarPlayManager, "sharedManager"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "nowPlayingContentManager"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "currentPlayingSong"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "artist"));

  if (v16)
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "identifiers"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "library"));
    v19 = objc_msgSend(v18, "persistentID");
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "identifiers"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "library"));
    v22 = v19 == objc_msgSend(v21, "persistentID");

  }
  else
  {
    v22 = 0;
  }
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "window"));
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "screen"));
  objc_msgSend(v24, "scale");
  v26 = v25;
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contentManager"));
  objc_msgSend(v11, "configureWithArtist:currentlyPlaying:artworkScale:contentAvailable:", v28, v22, objc_msgSend(v27, "itemIsPlayable:", v28), v26);

}

void sub_10000ABC0(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "length"))
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);

}

void *sub_10000AC04(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011EC9E0)
  {
    v6 = off_1010A8A60;
    v7 = 0;
    qword_1011EC9E0 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011EC9E0;
    if (qword_1011EC9E0)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011EC9E0;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011EC9D8 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10000AFC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000AFE4(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  id WeakRetained;
  id v21;
  unsigned int v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  unsigned int v48;
  id v49;
  void *v50;
  void *v51;
  _Unwind_Exception *v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  void *v58;

  v11 = a2;
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  v16 = v13;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "traitCollection"));
  objc_msgSend(v17, "displayScale");
  v19 = v18;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  switch((unint64_t)objc_msgSend(v16, "itemType"))
  {
    case 1uLL:
      v21 = v12;
      v22 = objc_msgSend(WeakRetained, "displayRankings");
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "album"));
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "album"));
      v25 = objc_msgSend(WeakRetained, "_contentItemIsPlaying:", v24);
      if (v22)
        objc_msgSend(v11, "configureWithAlbum:currentlyPlaying:artworkScale:ranking:", v23, v25, (char *)objc_msgSend(v15, "row") + 1, v19);
      else
        objc_msgSend(v11, "configureWithAlbum:currentlyPlaying:artworkScale:", v23, v25, v19);
      goto LABEL_16;
    case 3uLL:
      v54 = v12;
      v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "curator"));
      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "shortName"));
      v30 = objc_msgSend(v29, "length");
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "curator"));
      v32 = v31;
      if (v30)
        v33 = objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "shortName"));
      else
        v33 = objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "name"));
      v50 = (void *)v33;
      v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "textLabel"));
      objc_msgSend(v51, "setText:", v50);

      objc_msgSend(v11, "setAccessoryType:", 1);
      goto LABEL_19;
    case 4uLL:
      v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "playlist"));
      v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "playlist"));
      objc_msgSend(v11, "configureWithPlaylist:currentlyPlaying:artworkScale:showCurator:", v34, objc_msgSend(WeakRetained, "_contentItemIsPlaying:", v35), 1, v19);

      break;
    case 5uLL:
      v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "radioStation"));
      v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "name"));
      v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "textLabel"));
      objc_msgSend(v38, "setText:", v37);

      v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "radioStation"));
      v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "artworkCatalog"));
      v55 = 0;
      v56 = &v55;
      v57 = 0x2020000000;
      v41 = off_1011EC9E8;
      v58 = off_1011EC9E8;
      if (!off_1011EC9E8)
      {
        v42 = (void *)sub_10000BA70();
        v41 = dlsym(v42, "MCDCarDisplayBundle");
        v56[3] = (uint64_t)v41;
        off_1011EC9E8 = v41;
      }
      v53 = v39;
      v54 = v12;
      _Block_object_dispose(&v55, 8);
      if (!v41)
      {
        v52 = (_Unwind_Exception *)sub_100DE9368();
        _Block_object_dispose(&v55, 8);
        _Unwind_Resume(v52);
      }
      v43 = ((uint64_t (*)(void))v41)();
      v44 = (void *)objc_claimAutoreleasedReturnValue(v43);
      v45 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen _carScreen](UIScreen, "_carScreen"));
      v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "traitCollection"));
      v47 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageNamed:inBundle:compatibleWithTraitCollection:](UIImage, "imageNamed:inBundle:compatibleWithTraitCollection:", CFSTR("CarDisplayRadioTab"), v44, v46));
      objc_msgSend(v11, "setArtworkCatalog:andScale:fallbackImage:", v40, v47, v19);

LABEL_19:
      v12 = v54;
      break;
    case 7uLL:
      v21 = v12;
      v48 = objc_msgSend(WeakRetained, "displayRankings");
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "song"));
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "song"));
      v49 = objc_msgSend(WeakRetained, "_contentItemIsPlaying:", v24);
      if (v48)
        objc_msgSend(v11, "configureWithSong:currentlyPlaying:artworkScale:ranking:", v23, v49, (char *)objc_msgSend(v15, "row") + 1, v19);
      else
        objc_msgSend(v11, "configureWithSong:currentlyPlaying:artworkScale:contentAvailable:", v23, v49, 1, v19);
LABEL_16:

      v12 = v21;
      break;
    default:
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "textLabel"));
      objc_msgSend(v26, "setText:", 0);

      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "detailTextLabel"));
      objc_msgSend(v27, "setText:", 0);

      objc_msgSend(v11, "setAccessoryType:", 0);
      break;
  }

}

void sub_10000B89C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10000B8BC(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v15 = a2;
  v8 = a4;
  v9 = a5;
  v11 = objc_opt_class(MPModelPlaylist, v10);
  if ((objc_opt_isKindOfClass(v8, v11) & 1) != 0)
  {
    v12 = objc_msgSend(*(id *)(a1 + 32), "_contentItemIsPlaying:", v8);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "window"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "screen"));
    objc_msgSend(v14, "scale");
    objc_msgSend(v15, "configureWithPlaylist:currentlyPlaying:artworkScale:showCurator:", v8, v12, 1);

  }
}

uint64_t sub_10000BA70()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011EC9F0)
  {
    v4 = off_1010A8AA0;
    v5 = 0;
    qword_1011EC9F0 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011EC9F0;
  v1 = v3;
  if (!qword_1011EC9F0)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_10000BC30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000BC4C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id WeakRetained;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;

  v37 = a2;
  v6 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v8 = v6;
  if (objc_msgSend(v8, "hasLoadedValueForKey:", MPModelStoreBrowseSectionRelationshipRadioStation))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "radioStation"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "name"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@Music"), CFSTR(" ")));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "stringByReplacingOccurrencesOfString:withString:", CFSTR("Apple Music"), v11));

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "textLabel"));
    objc_msgSend(v13, "setText:", v12);

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "radioStation"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "currentStationEvent"));

    if (v15)
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dateIntervalFormatter"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "startTime"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "endTime"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "stringFromDate:toDate:", v17, v18));

      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](NSLocale, "currentLocale"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "localeIdentifier"));
      LODWORD(v18) = objc_msgSend(v21, "isEqualToString:", CFSTR("en_US"));

      if ((_DWORD)v18)
      {
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "stringByReplacingOccurrencesOfString:withString:", CFSTR(":00"), &stru_101122068));

        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "stringByReplacingOccurrencesOfString:withString:", CFSTR(" "), &stru_101122068));
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "stringByReplacingOccurrencesOfString:withString:", CFSTR(" "), &stru_101122068));

      }
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "title"));
      v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@ · %@"), v24, v19));
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "detailTextLabel"));
      objc_msgSend(v26, "setText:", v25);

    }
    if ((objc_msgSend(v8, "displaysAsGridCellInCarPlay") & 1) == 0)
      objc_msgSend(v37, "setAccessoryType:", 0);
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "radioStation"));
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "artworkCatalog"));
    v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "traitCollection"));
    objc_msgSend(v29, "displayScale");
    objc_msgSend(v37, "setArtworkCatalog:andScale:fallbackImage:", v28, 0);

  }
  else
  {
    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "title"));
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "textLabel"));
    objc_msgSend(v31, "setText:", v30);

    v32 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor _labelColor](UIColor, "_labelColor"));
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "textLabel"));
    objc_msgSend(v33, "setTextColor:", v32);

    v34 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor _carSystemFocusLabelColor](UIColor, "_carSystemFocusLabelColor"));
    v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "textLabel"));
    objc_msgSend(v35, "setHighlightedTextColor:", v34);

    v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "detailTextLabel"));
    objc_msgSend(v36, "setText:", 0);

    if ((objc_msgSend(v8, "displaysAsGridCellInCarPlay") & 1) == 0)
    {
      objc_msgSend(v37, "setAccessoryView:", 0);
      objc_msgSend(v37, "setAccessoryType:", 1);
    }
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "traitCollection"));
    objc_msgSend(v12, "displayScale");
    objc_msgSend(v37, "setArtworkCatalog:andScale:fallbackImage:", 0, 0);
  }

}

void sub_10000C5BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10000C710(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSDateIntervalFormatter);
  v2 = (void *)qword_1011ECA00;
  qword_1011ECA00 = (uint64_t)v1;

  objc_msgSend((id)qword_1011ECA00, "setDateStyle:", 0);
  objc_msgSend((id)qword_1011ECA00, "setTimeStyle:", 1);
  _objc_msgSend((id)qword_1011ECA00, "setBoundaryStyle:", 2);
}

void sub_10000C8A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000C8C4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_updateRadioShowCells");
  objc_msgSend(WeakRetained, "_resetTimerForShowsUpdate");

}

void *sub_10000C998(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECA18)
  {
    v6 = off_1010A8B20;
    v7 = 0;
    qword_1011ECA18 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECA18;
    if (qword_1011ECA18)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECA18;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECA10 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10000CF00(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *i;
  void *v13;
  void *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v5 = a2;
  v6 = a3;
  if ((objc_msgSend(*(id *)(a1 + 32), "isCancelled") & 1) == 0)
  {
    if (v6)
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
    }
    else if (objc_msgSend(v5, "isFinalResponse"))
    {
      v7 = objc_msgSend(objc_alloc((Class)MPStoreModelSongBuilder), "initWithRequestedPropertySet:", *(_QWORD *)(a1 + 40));
      v16 = 0u;
      v17 = 0u;
      v18 = 0u;
      v19 = 0u;
      v8 = *(id *)(a1 + 48);
      v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v17;
        do
        {
          for (i = 0; i != v10; i = (char *)i + 1)
          {
            if (*(_QWORD *)v17 != v11)
              objc_enumerationMutation(v8);
            v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "storeItemMetadataForItemIdentifier:", *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i)));
            if (v13)
            {
              v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userIdentity"));
              v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "modelObjectWithStoreItemMetadata:userIdentity:", v13, v14));

              if (v15)
              {
                objc_msgSend(*(id *)(a1 + 56), "appendItem:", v15);

              }
            }

          }
          v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
        }
        while (v10);
      }

      objc_msgSend(*(id *)(a1 + 64), "setResults:", *(_QWORD *)(a1 + 56));
      (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();

      v6 = 0;
    }
  }

}

uint64_t sub_10000D450()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECA28)
  {
    v4 = off_1010A8B60;
    v5 = 0;
    qword_1011ECA28 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECA28;
  v1 = v3;
  if (!qword_1011ECA28)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_10000DA5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_10000DA94(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id WeakRetained;
  id v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  void *v18;
  unsigned int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  unsigned int v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;

  v34 = a2;
  v9 = a3;
  v10 = a4;
  v11 = a5;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v13 = v10;
  v14 = v9;
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "traitCollection"));

  objc_msgSend(v15, "displayScale");
  v17 = v16;

  switch((unint64_t)objc_msgSend(v13, "itemType"))
  {
    case 1uLL:
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "album"));
      v19 = objc_msgSend(v14, "shouldDisplayUtterances");
      if (v19)
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "utterance"));
      else
        v20 = 0;
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "album"));
      objc_msgSend(v34, "configureWithAlbum:utterance:currentlyPlaying:artworkScale:", v18, v20, objc_msgSend(WeakRetained, "_contentItemIsPlaying:", v26), v17);
      goto LABEL_14;
    case 2uLL:
      v24 = objc_msgSend(*(id *)(a1 + 32), "groupType");
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "playlist"));
      v25 = objc_msgSend(v14, "shouldDisplayUtterances");
      if (v25)
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "utterance"));
      else
        v20 = 0;
      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "playlist"));
      objc_msgSend(v34, "configureWithPlaylist:utterance:currentlyPlaying:artworkScale:showCurator:", v18, v20, objc_msgSend(WeakRetained, "_contentItemIsPlaying:", v33), v24 != (id)1, v17);

      if (!v25)
        goto LABEL_16;
      goto LABEL_15;
    case 3uLL:
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "radioStation"));
      v19 = objc_msgSend(v14, "shouldDisplayUtterances");
      if (v19)
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "utterance"));
      else
        v20 = 0;
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "radioStation"));
      objc_msgSend(v34, "configureWithRadioStation:utterance:currentlyPlaying:artworkScale:", v18, v20, objc_msgSend(WeakRetained, "_contentItemIsPlaying:", v26), v17);
LABEL_14:

      if (v19)
LABEL_15:

      goto LABEL_16;
    case 4uLL:
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "subgroup"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "title"));
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "textLabel"));
      objc_msgSend(v23, "setText:", v22);

      objc_msgSend(v34, "setAccessoryType:", 1);
      goto LABEL_17;
    default:
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "textLabel"));
      objc_msgSend(v18, "setText:", 0);
LABEL_16:

LABEL_17:
      v27 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "reason"));
      if (v27)
      {
        v28 = (void *)v27;
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "reason"));
        v30 = objc_msgSend(v29, "length");

        if (v30)
        {
          v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "reason"));
          v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "detailTextLabel"));
          objc_msgSend(v32, "setText:", v31);

        }
      }

      return;
  }
}

void *sub_10000DF8C(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECA48)
  {
    v6 = off_1010A8BA0;
    v7 = 0;
    qword_1011ECA48 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECA48;
    if (qword_1011ECA48)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECA48;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECA40 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10000E5A0(id a1)
{
  id v1;
  void *v2;

  v1 = -[MusicCarPlayManager _init]([MusicCarPlayManager alloc], "_init");
  v2 = (void *)qword_1011ECA50;
  qword_1011ECA50 = (uint64_t)v1;

}

void *sub_10000EAA0(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECA68)
  {
    v6 = off_1010A8BD8;
    v7 = 0;
    qword_1011ECA68 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECA68;
    if (qword_1011ECA68)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECA68;
LABEL_5:
  result = dlsym(v2, "MCDMusicBundleIdentifier");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  qword_1011ECA60 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10000EE00(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contentManager"));
  objc_msgSend(v1, "performRefresh");

}

void sub_10000EE44(id a1, UITableViewCell *a2, MPModelObject *a3, MPModelObject *a4, UITableView *a5, NSIndexPath *a6)
{
  MPModelObject *v9;
  MPModelObject *v10;
  UITableView *v11;
  uint64_t v12;
  uint64_t v13;
  MPModelObject *v14;
  MPModelObject *v15;
  uint64_t v16;
  uint64_t v17;
  MPModelObject *v18;
  MPModelObject *v19;
  void *v20;
  double v21;
  double v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  MPModelObject *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  UITableViewCell *v35;

  v35 = a2;
  v9 = a3;
  v10 = a4;
  v11 = a5;
  v13 = objc_opt_class(MPModelForYouRecommendationGroup, v12);
  if ((objc_opt_isKindOfClass(v10, v13) & 1) != 0)
    v14 = v10;
  else
    v14 = 0;
  v15 = v14;
  v17 = objc_opt_class(MPModelForYouRecommendationItem, v16);
  if ((objc_opt_isKindOfClass(v10, v17) & 1) != 0)
    v18 = v10;
  else
    v18 = 0;
  v19 = v18;
  v20 = (void *)objc_claimAutoreleasedReturnValue(-[UITableView traitCollection](v11, "traitCollection"));

  objc_msgSend(v20, "displayScale");
  v22 = v21;

  -[UITableViewCell setAccessoryType:](v35, "setAccessoryType:", 0);
  if (v15)
  {
    v23 = -[MPModelObject groupType](v15, "groupType");
    v24 = objc_claimAutoreleasedReturnValue(-[MPModelObject title](v15, "title"));
    v25 = (void *)v24;
    if (v23 == (id)4)
    {
      v26 = (void *)v24;
      if (!v24)
      {
        v23 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "localizedStringForKey:value:table:", CFSTR("Recently Played"), &stru_101122068, 0));
      }
      v27 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell textLabel](v35, "textLabel"));
      objc_msgSend(v27, "setText:", v26);

      if (!v25)
      {

      }
    }
    else
    {
      v31 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell textLabel](v35, "textLabel"));
      objc_msgSend(v31, "setText:", v25);

      -[UITableViewCell setAccessoryType:](v35, "setAccessoryType:", 1);
    }
    v28 = v10;
LABEL_20:
    if ((-[MPModelObject displaysAsGridCellInCarPlay](v28, "displaysAsGridCellInCarPlay") & 1) == 0)
      -[UITableViewCell setAccessoryType:](v35, "setAccessoryType:", 1);
    goto LABEL_35;
  }
  if (!v19)
  {
    v28 = 0;
    goto LABEL_35;
  }
  v28 = v9;
  switch((unint64_t)-[MPModelObject itemType](v19, "itemType"))
  {
    case 1uLL:
      v29 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject album](v19, "album"));
      if ((-[MPModelObject shouldDisplayUtterances](v28, "shouldDisplayUtterances") & 1) != 0)
      {
        v30 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject utterance](v19, "utterance"));
        -[UITableViewCell configureWithAlbum:utterance:currentlyPlaying:artworkScale:](v35, "configureWithAlbum:utterance:currentlyPlaying:artworkScale:", v29, v30, 0, v22);
        goto LABEL_30;
      }
      -[UITableViewCell configureWithAlbum:utterance:currentlyPlaying:artworkScale:](v35, "configureWithAlbum:utterance:currentlyPlaying:artworkScale:", v29, 0, 0, v22);
      break;
    case 2uLL:
      v29 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject playlist](v19, "playlist"));
      if ((-[MPModelObject shouldDisplayUtterances](v28, "shouldDisplayUtterances") & 1) != 0)
      {
        v30 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject utterance](v19, "utterance"));
        -[UITableViewCell configureWithPlaylist:utterance:currentlyPlaying:artworkScale:showCurator:](v35, "configureWithPlaylist:utterance:currentlyPlaying:artworkScale:showCurator:", v29, v30, 0, 0, v22);
        goto LABEL_30;
      }
      -[UITableViewCell configureWithPlaylist:utterance:currentlyPlaying:artworkScale:showCurator:](v35, "configureWithPlaylist:utterance:currentlyPlaying:artworkScale:showCurator:", v29, 0, 0, 0, v22);
      break;
    case 3uLL:
      v29 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject radioStation](v19, "radioStation"));
      if ((-[MPModelObject shouldDisplayUtterances](v28, "shouldDisplayUtterances") & 1) != 0)
      {
        v30 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject utterance](v19, "utterance"));
        -[UITableViewCell configureWithRadioStation:utterance:currentlyPlaying:artworkScale:](v35, "configureWithRadioStation:utterance:currentlyPlaying:artworkScale:", v29, v30, 0, v22);
LABEL_30:

      }
      else
      {
        -[UITableViewCell configureWithRadioStation:utterance:currentlyPlaying:artworkScale:](v35, "configureWithRadioStation:utterance:currentlyPlaying:artworkScale:", v29, 0, 0, v22);
      }
      break;
    case 4uLL:
      v32 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject subgroup](v19, "subgroup"));
      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "title"));
      v34 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell textLabel](v35, "textLabel"));
      objc_msgSend(v34, "setText:", v33);

      -[UITableViewCell setAccessoryType:](v35, "setAccessoryType:", 1);
      if (v28)
        goto LABEL_20;
      goto LABEL_35;
    default:
      v29 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell textLabel](v35, "textLabel"));
      objc_msgSend(v29, "setText:", 0);
      break;
  }

  if (v28)
    goto LABEL_20;
LABEL_35:

}

void *sub_10000F370(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECA78)
  {
    v6 = off_1010A8C58;
    v7 = 0;
    qword_1011ECA78 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECA78;
    if (qword_1011ECA78)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECA78;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECA70 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10000FF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000FF6C(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id *v10;
  id v11;
  id WeakRetained;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  _BOOL8 v21;
  void *v22;
  void *v23;
  double v24;
  double v25;
  void *v26;
  id v27;

  v8 = a4;
  v9 = a5;
  v10 = (id *)(a1 + 32);
  v11 = a2;
  WeakRetained = objc_loadWeakRetained(v10);
  v27 = v8;
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[MusicCarPlayManager sharedManager](MusicCarPlayManager, "sharedManager"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "nowPlayingContentManager"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "currentPlayingSong"));

  if (v15)
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "identifiers"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "library"));
    v18 = objc_msgSend(v17, "persistentID");
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "identifiers"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "library"));
    v21 = v18 == objc_msgSend(v20, "persistentID");

  }
  else
  {
    v21 = 0;
  }
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "window"));
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "screen"));
  objc_msgSend(v23, "scale");
  v25 = v24;
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contentManager"));
  objc_msgSend(v11, "configureWithSong:currentlyPlaying:artworkScale:contentAvailable:", v27, v21, objc_msgSend(v26, "itemIsPlayable:", v27), v25);

}

void sub_100010224(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "length"))
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);

}

void *sub_1000103A4(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECA88)
  {
    v6 = off_1010A8C70;
    v7 = 0;
    qword_1011ECA88 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECA88;
    if (qword_1011ECA88)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECA88;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECA80 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100010624(id a1, UITableViewCell *a2, MPModelObject *a3, MPModelObject *a4, UITableView *a5, NSIndexPath *a6)
{
  UITableViewCell *v7;
  void *v8;
  void *v9;
  MPModelObject *v10;

  v10 = a4;
  v7 = a2;
  v8 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject title](v10, "title"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell textLabel](v7, "textLabel"));
  objc_msgSend(v9, "setText:", v8);

  -[UITableViewCell setAccessoryType:](v7, "setAccessoryType:", 1);
}

void *sub_100010ABC(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECA98)
  {
    v6 = off_1010A8CA8;
    v7 = 0;
    qword_1011ECA98 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECA98;
    if (qword_1011ECA98)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECA98;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECA90 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100010BD4(id a1)
{
  objc_class *v1;
  _QWORD *v2;
  void (*v3)(void);
  objc_method *InstanceMethod;
  const char *TypeEncoding;
  IMP v6;
  _QWORD *v7;
  void (*v8)(void);
  objc_method *v9;
  const char *v10;
  IMP v11;
  _QWORD v12[6];
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[6];
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (objc_class *)objc_opt_class(SSVSubscriptionStatusCoordinator);
  v18 = 0;
  v19 = &v18;
  v20 = 0x2020000000;
  v21 = 0;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100010D64;
  v17[3] = &unk_1010A8D28;
  v17[4] = &v18;
  v17[5] = "getStatusWithOptions:statusBlock:";
  v2 = objc_retainBlock(v17);
  v3 = imp_implementationWithBlock(v2);
  InstanceMethod = class_getInstanceMethod(v1, "getStatusWithOptions:statusBlock:");
  TypeEncoding = method_getTypeEncoding(InstanceMethod);
  v6 = class_replaceMethod(v1, "getStatusWithOptions:statusBlock:", v3, TypeEncoding);

  v19[3] = (uint64_t)v6;
  v13 = 0;
  v14 = &v13;
  v15 = 0x2020000000;
  v16 = 0;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100010E3C;
  v12[3] = &unk_1010A8D70;
  v12[4] = &v13;
  v12[5] = "modifyLastKnownStatusUsingBlock:";
  v7 = objc_retainBlock(v12);
  v8 = imp_implementationWithBlock(v7);
  v9 = class_getInstanceMethod(v1, "modifyLastKnownStatusUsingBlock:");
  v10 = method_getTypeEncoding(v9);
  v11 = class_replaceMethod(v1, "modifyLastKnownStatusUsingBlock:", v8, v10);

  v14[3] = (uint64_t)v11;
  _Block_object_dispose(&v13, 8);
  _Block_object_dispose(&v18, 8);
}

void sub_100010D4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100010D64(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void *v9;
  unsigned int v10;
  void *v11;
  void (*v12)(id, _QWORD, id, id);
  id v13;

  v13 = a2;
  v7 = a3;
  v8 = a4;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", SSVSubscriptionStatusOptionIgnoreCache));
  v10 = objc_msgSend(v9, "BOOLValue");

  if (v10)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[ICMusicSubscriptionStatusController sharedStatusController](ICMusicSubscriptionStatusController, "sharedStatusController"));
    objc_msgSend(v11, "invalidateCachedSubscriptionStatusWithCompletionHandler:", &stru_1010A8D00);

  }
  v12 = *(void (**)(id, _QWORD, id, id))(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  if (v12)
    v12(v13, *(_QWORD *)(a1 + 40), v7, v8);

}

void sub_100010E3C(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t, _QWORD);
  id v3;

  v2 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  if (v2)
    v2(a2, *(_QWORD *)(a1 + 40));
  v3 = (id)objc_claimAutoreleasedReturnValue(+[ICMusicSubscriptionStatusController sharedStatusController](ICMusicSubscriptionStatusController, "sharedStatusController"));
  objc_msgSend(v3, "invalidateCachedSubscriptionStatusWithCompletionHandler:", &stru_1010A8D48);

}

void sub_100010EDC(id a1)
{
  MCDBrowserIdentifiers *v1;
  void *v2;

  v1 = objc_alloc_init(MCDBrowserIdentifiers);
  v2 = (void *)qword_1011ECAA8;
  qword_1011ECAA8 = (uint64_t)v1;

}

id sub_100011024()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  _QWORD v14[6];

  v0 = sub_100011930();
  v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  v14[0] = v1;
  v2 = sub_1000119C8();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v14[1] = v3;
  v4 = sub_100011A60();
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v14[2] = v5;
  v6 = sub_100011C28();
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v14[3] = v7;
  v8 = sub_100011AF8();
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v14[4] = v9;
  v10 = sub_100011DF0();
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  v14[5] = v11;
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v14, 6));

  return v12;
}

id sub_100011188()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  _QWORD v42[10];
  _QWORD v43[10];

  v0 = sub_100011898();
  v41 = (void *)objc_claimAutoreleasedReturnValue(v0);
  v42[0] = v41;
  v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "localizedStringForKey:value:table:", CFSTR("Recently Added"), &stru_101122068, 0));
  v43[0] = v39;
  v1 = sub_100011930();
  v38 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v42[1] = v38;
  v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "localizedStringForKey:value:table:", CFSTR("Playlists"), &stru_101122068, 0));
  v43[1] = v36;
  v2 = sub_1000119C8();
  v35 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v42[2] = v35;
  v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "localizedStringForKey:value:table:", CFSTR("Artists"), &stru_101122068, 0));
  v43[2] = v33;
  v3 = sub_100011A60();
  v32 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v42[3] = v32;
  v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "localizedStringForKey:value:table:", CFSTR("Albums"), &stru_101122068, 0));
  v43[3] = v30;
  v4 = sub_100011AF8();
  v29 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v42[4] = v29;
  v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "localizedStringForKey:value:table:", CFSTR("Songs"), &stru_101122068, 0));
  v43[4] = v27;
  v5 = sub_100011B90();
  v26 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v42[5] = v26;
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "localizedStringForKey:value:table:", CFSTR("Made for You"), &stru_101122068, 0));
  v43[5] = v24;
  v6 = sub_100011C28();
  v23 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v42[6] = v23;
  v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "localizedStringForKey:value:table:", CFSTR("Genres"), &stru_101122068, 0));
  v43[6] = v7;
  v8 = sub_100011CC0();
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v42[7] = v9;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("Composers"), &stru_101122068, 0));
  v43[7] = v11;
  v12 = sub_100011D58();
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  v42[8] = v13;
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("Compilations"), &stru_101122068, 0));
  v43[8] = v15;
  v16 = sub_100011DF0();
  v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  v42[9] = v17;
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("Downloaded"), &stru_101122068, 0));
  v43[9] = v19;
  v21 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v43, v42, 10));

  return v21;
}

void sub_1000115D0(id a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  _QWORD v33[10];
  _QWORD v34[10];

  v1 = sub_100011898();
  v32 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v33[0] = v32;
  v31 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](UIImage, "_systemImageNamed:", CFSTR("clock")));
  v34[0] = v31;
  v2 = sub_100011930();
  v30 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v33[1] = v30;
  v29 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](UIImage, "_systemImageNamed:", CFSTR("music.note.list")));
  v34[1] = v29;
  v3 = sub_1000119C8();
  v28 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v33[2] = v28;
  v27 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](UIImage, "_systemImageNamed:", CFSTR("music.mic")));
  v34[2] = v27;
  v4 = sub_100011A60();
  v26 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v33[3] = v26;
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](UIImage, "_systemImageNamed:", CFSTR("square.stack")));
  v34[3] = v25;
  v5 = sub_100011AF8();
  v24 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v33[4] = v24;
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](UIImage, "_systemImageNamed:", CFSTR("music.note")));
  v34[4] = v23;
  v6 = sub_100011B90();
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v33[5] = v7;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](UIImage, "_systemImageNamed:", CFSTR("person.crop.square")));
  v34[5] = v8;
  v9 = sub_100011C28();
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v33[6] = v10;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](UIImage, "_systemImageNamed:", CFSTR("guitars")));
  v34[6] = v11;
  v12 = sub_100011CC0();
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  v33[7] = v13;
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](UIImage, "_systemImageNamed:", CFSTR("music.quarternote.3")));
  v34[7] = v14;
  v15 = sub_100011D58();
  v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  v33[8] = v16;
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](UIImage, "_systemImageNamed:", CFSTR("person.2.crop.square.stack")));
  v34[8] = v17;
  v18 = sub_100011DF0();
  v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  v33[9] = v19;
  v20 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:](UIImage, "_systemImageNamed:", CFSTR("arrow.down.circle")));
  v34[9] = v20;
  v21 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v34, v33, 10));
  v22 = (void *)qword_1011ECAB8;
  qword_1011ECAB8 = v21;

}

id sub_100011898()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECAC8;
  v7 = qword_1011ECAC8;
  if (!qword_1011ECAC8)
  {
    v1 = (void *)sub_1000147A4();
    v0 = (id *)dlsym(v1, "MCDRecentlyAddedControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECAC8 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100011930()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECAD8;
  v7 = qword_1011ECAD8;
  if (!qword_1011ECAD8)
  {
    v1 = (void *)sub_1000147A4();
    v0 = (id *)dlsym(v1, "MCDPlaylistsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECAD8 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_1000119C8()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECAE0;
  v7 = qword_1011ECAE0;
  if (!qword_1011ECAE0)
  {
    v1 = (void *)sub_1000147A4();
    v0 = (id *)dlsym(v1, "MCDArtistsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECAE0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100011A60()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECAE8;
  v7 = qword_1011ECAE8;
  if (!qword_1011ECAE8)
  {
    v1 = (void *)sub_1000147A4();
    v0 = (id *)dlsym(v1, "MCDAlbumsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECAE8 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100011AF8()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECAF0;
  v7 = qword_1011ECAF0;
  if (!qword_1011ECAF0)
  {
    v1 = (void *)sub_1000147A4();
    v0 = (id *)dlsym(v1, "MCDSongsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECAF0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100011B90()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECAF8;
  v7 = qword_1011ECAF8;
  if (!qword_1011ECAF8)
  {
    v1 = (void *)sub_1000147A4();
    v0 = (id *)dlsym(v1, "MCDMadeForYouViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECAF8 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100011C28()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECB00;
  v7 = qword_1011ECB00;
  if (!qword_1011ECB00)
  {
    v1 = (void *)sub_1000147A4();
    v0 = (id *)dlsym(v1, "MCDGenresViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECB00 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100011CC0()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECB08;
  v7 = qword_1011ECB08;
  if (!qword_1011ECB08)
  {
    v1 = (void *)sub_1000147A4();
    v0 = (id *)dlsym(v1, "MCDComposersViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECB08 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100011D58()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECB10;
  v7 = qword_1011ECB10;
  if (!qword_1011ECB10)
  {
    v1 = (void *)sub_1000147A4();
    v0 = (id *)dlsym(v1, "MCDCompilationsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECB10 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100011DF0()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECB18;
  v7 = qword_1011ECB18;
  if (!qword_1011ECB18)
  {
    v1 = (void *)sub_1000147A4();
    v0 = (id *)dlsym(v1, "MCDDownloadedMusicViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECB18 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

void sub_1000125C4(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[MCDBrowserIdentifiers sharedInstance](MCDBrowserIdentifiers, "sharedInstance"));
  v3 = objc_msgSend(v2, "_identifiersDidChange");

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[MCDBrowserIdentifiers sharedInstance](MCDBrowserIdentifiers, "sharedInstance"));
    objc_msgSend(v4, "_updateCellIdentifiersOrdering");

    objc_msgSend(*(id *)(a1 + 32), "_loadCellIdentifiers");
  }
}

void sub_1000130C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_100013514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100013544(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "recentlyAddedContentManager"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForItem:inSection:](NSIndexPath, "indexPathForItem:inSection:", a2, 0));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "itemAtIndexPath:", v4));

  objc_msgSend(WeakRetained, "_initiatePlaybackForItem:", v5);
}

void sub_1000135D4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
  objc_msgSend(v2, "selectRowAtIndexPath:animated:scrollPosition:", *(_QWORD *)(a1 + 32), 0, 0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "delegate"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
  objc_msgSend(v4, "tableView:didSelectRowAtIndexPath:", v5, *(_QWORD *)(a1 + 32));

}

void sub_100013B54(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000147A4()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECAD0)
  {
    v4 = off_1010A8E48;
    v5 = 0;
    qword_1011ECAD0 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECAD0;
  v1 = v3;
  if (!qword_1011ECAD0)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

MCDCompilationsTableViewController *sub_100014854(uint64_t a1)
{
  MCDCompilationsTableViewController *result;
  MCDCompilationsTableViewController *v3;
  SEL v4;
  id v5;
  BOOL v6;
  BOOL v7;

  sub_1000147A4();
  result = (MCDCompilationsTableViewController *)objc_getClass("MCDNoContentView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECB20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (MCDCompilationsTableViewController *)sub_100DE9424();
    return -[MCDCompilationsTableViewController initWithIdentifier:limitedUI:showLocalContent:](v3, v4, v5, v6, v7);
  }
  return result;
}

void *sub_100014AB8(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECB40)
  {
    v6 = off_1010A8E60;
    v7 = 0;
    qword_1011ECB40 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECB40;
    if (qword_1011ECB40)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECB40;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECB38 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100014CB8(id a1, UITableViewCell *a2, MPModelObject *a3, MPModelObject *a4, UITableView *a5, NSIndexPath *a6)
{
  MPModelObject *v8;
  UITableViewCell *v9;
  void *v10;
  id v11;

  v8 = a4;
  v9 = a2;
  v11 = (id)objc_claimAutoreleasedReturnValue(-[UITableView window](a5, "window"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "screen"));
  objc_msgSend(v10, "scale");
  -[UITableViewCell configureWithComposer:currentlyPlaying:artworkScale:](v9, "configureWithComposer:currentlyPlaying:artworkScale:", v8, 0);

}

void sub_100014F6C(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "length"))
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);

}

void *sub_100014FB0(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECB50)
  {
    v6 = off_1010A8E98;
    v7 = 0;
    qword_1011ECB50 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECB50;
    if (qword_1011ECB50)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECB50;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECB48 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1000153B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000153D0(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id *v10;
  id v11;
  id WeakRetained;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  double v22;
  double v23;
  void *v24;
  id v25;

  v8 = a2;
  v9 = a4;
  v10 = (id *)(a1 + 32);
  v11 = a5;
  WeakRetained = objc_loadWeakRetained(v10);
  v13 = v9;
  v25 = v8;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "identifiers"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[MusicCarPlayManager sharedManager](MusicCarPlayManager, "sharedManager"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "nowPlayingContentManager"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "currentPlayingPlaylist"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "identifiers"));
  v19 = objc_msgSend(v14, "intersectsSet:", v18);

  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "window"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "screen"));
  objc_msgSend(v21, "scale");
  v23 = v22;
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contentManager"));
  objc_msgSend(v25, "configureWithPlaylist:utterance:currentlyPlaying:artworkScale:showCurator:contentAvailable:", v13, 0, v19, 1, objc_msgSend(v24, "itemIsPlayable:", v13), v23);

}

uint64_t sub_100015788()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECB60)
  {
    v4 = off_1010A8EB0;
    v5 = 0;
    qword_1011ECB60 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECB60;
  v1 = v3;
  if (!qword_1011ECB60)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_100015B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100015B58(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  id WeakRetained;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  double v26;
  double v27;
  void *v28;
  void *v29;
  id v30;

  v8 = a2;
  v9 = a4;
  v10 = a5;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v12 = v9;
  v30 = v8;
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[MusicCarPlayManager sharedManager](MusicCarPlayManager, "sharedManager"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "nowPlayingContentManager"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "currentPlayingPlaylistEntry"));

  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "identifiers"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "identifiers"));
  v18 = objc_msgSend(v16, "intersectsSet:", v17);

  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "socialContributor"));
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "artworkCatalog"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "window"));
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "screen"));
  objc_msgSend(v22, "scale");
  objc_msgSend(v30, "configureWithAttributionArtwork:artworkScale:", v20);

  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "song"));
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "window"));

  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "screen"));
  objc_msgSend(v25, "scale");
  v27 = v26;
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contentManager"));
  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "song"));

  objc_msgSend(v30, "configureWithSong:currentlyPlaying:artworkScale:contentAvailable:", v23, v18, objc_msgSend(v28, "itemIsPlayable:", v29), v27);
}

void *sub_100015E44(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECB78)
  {
    v6 = off_1010A8EC8;
    v7 = 0;
    qword_1011ECB78 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECB78;
    if (qword_1011ECB78)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECB78;
LABEL_5:
  result = dlsym(v2, "MCDPlaylistTracksViewControllerIdentifier");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  qword_1011ECB70 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100016D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100016D90(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "filterButtonTapped");

}

id sub_1000172F0()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECB80;
  v7 = qword_1011ECB80;
  if (!qword_1011ECB80)
  {
    v1 = (void *)sub_100018CD0();
    v0 = (id *)dlsym(v1, "MCDAlbumsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECB80 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100017388()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECB90;
  v7 = qword_1011ECB90;
  if (!qword_1011ECB90)
  {
    v1 = (void *)sub_100018CD0();
    v0 = (id *)dlsym(v1, "MCDPlaylistsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECB90 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100017420()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECB98;
  v7 = qword_1011ECB98;
  if (!qword_1011ECB98)
  {
    v1 = (void *)sub_100018CD0();
    v0 = (id *)dlsym(v1, "MCDArtistsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECB98 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_1000174B8()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECBA0;
  v7 = qword_1011ECBA0;
  if (!qword_1011ECBA0)
  {
    v1 = (void *)sub_100018CD0();
    v0 = (id *)dlsym(v1, "MCDCompilationsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECBA0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100017550()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECBA8;
  v7 = qword_1011ECBA8;
  if (!qword_1011ECBA8)
  {
    v1 = (void *)sub_100018CD0();
    v0 = (id *)dlsym(v1, "MCDSongsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECBA8 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_1000175E8()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECBB0;
  v7 = qword_1011ECBB0;
  if (!qword_1011ECBB0)
  {
    v1 = (void *)sub_100018CD0();
    v0 = (id *)dlsym(v1, "MCDMadeForYouViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECBB0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

void sub_100017990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  uint64_t v25;

  _Block_object_dispose((const void *)(v25 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1000179DC(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;
  id WeakRetained;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentManager"));
  v3 = objc_msgSend(v2, "showFavoriteContent");

  if (v3)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "filteringPreferenceKey"));
    +[LibraryFilterOptionsController updateFavoriteFilter:storageKey:](_TtC5Music30LibraryFilterOptionsController, "updateFavoriteFilter:storageKey:", 0, v4);

  }
}

void sub_100017A74(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  void *v4;
  id WeakRetained;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentManager"));
  v3 = objc_msgSend(v2, "showFavoriteContent");

  if ((v3 & 1) == 0)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "filteringPreferenceKey"));
    +[LibraryFilterOptionsController updateFavoriteFilter:storageKey:](_TtC5Music30LibraryFilterOptionsController, "updateFavoriteFilter:storageKey:", 1, v4);

  }
}

void sub_1000180D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id sub_100018874()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1011ECBC8;
  v7 = qword_1011ECBC8;
  if (!qword_1011ECBC8)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100018DD4;
    v3[3] = &unk_1010A89D8;
    v3[4] = &v4;
    sub_100018DD4((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100018914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100018CD0()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECB88)
  {
    v4 = off_1010A8F30;
    v5 = 0;
    qword_1011ECB88 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECB88;
  v1 = v3;
  if (!qword_1011ECB88)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

Class sub_100018D80(uint64_t a1)
{
  Class result;
  uint64_t v3;

  sub_100018CD0();
  result = objc_getClass("MCDAlertController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECBB8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = sub_100DE9448();
    return (Class)sub_100018DD4(v3);
  }
  return result;
}

MCDAlbumTracksDataSource *sub_100018DD4(uint64_t a1)
{
  MCDAlbumTracksDataSource *result;
  MCDAlbumTracksDataSource *v3;
  SEL v4;
  BOOL v5;
  id v6;
  BOOL v7;

  sub_100018CD0();
  result = (MCDAlbumTracksDataSource *)objc_getClass("MCDNoContentView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECBC8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (MCDAlbumTracksDataSource *)sub_100DE9424();
    return -[MCDAlbumTracksDataSource initWithLimitedUI:album:storeContent:](v3, v4, v5, v6, v7);
  }
  return result;
}

id sub_100019CEC()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECBD0;
  v7 = qword_1011ECBD0;
  if (!qword_1011ECBD0)
  {
    v1 = (void *)sub_10001A344();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyPlayed");
    v5[3] = (uint64_t)v0;
    qword_1011ECBD0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100019D84()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECBE0;
  v7 = qword_1011ECBE0;
  if (!qword_1011ECBE0)
  {
    v1 = (void *)sub_10001A344();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyAdded");
    v5[3] = (uint64_t)v0;
    qword_1011ECBE0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100019E1C()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECBE8;
  v7 = qword_1011ECBE8;
  if (!qword_1011ECBE8)
  {
    v1 = (void *)sub_10001A344();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyUpdated");
    v5[3] = (uint64_t)v0;
    qword_1011ECBE8 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_100019EB4()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECBF0;
  v7 = qword_1011ECBF0;
  if (!qword_1011ECBF0)
  {
    v1 = (void *)sub_10001A344();
    v0 = (id *)dlsym(v1, "MCDSortByTitle");
    v5[3] = (uint64_t)v0;
    qword_1011ECBF0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

uint64_t sub_10001A344()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECBD8)
  {
    v4 = off_1010A8F48;
    v5 = 0;
    qword_1011ECBD8 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECBD8;
  v1 = v3;
  if (!qword_1011ECBD8)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

id sub_10001ABD4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_10001ABE0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
}

void sub_10001B734(uint64_t a1, void *a2)
{
  id v3;

  if ((objc_msgSend(a2, "isCancelled") & 1) == 0)
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    sub_10001B790(v3, *(unsigned __int8 *)(a1 + 40));

  }
}

void sub_10001B790(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  _Unwind_Exception *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;

  v3 = a1;
  v7 = 0;
  v8 = &v7;
  v9 = 0x2020000000;
  v4 = off_1011ECC10;
  v10 = off_1011ECC10;
  if (!off_1011ECC10)
  {
    v5 = (void *)sub_10001BD2C();
    v4 = dlsym(v5, "MCDClearTableViewSelection");
    v8[3] = (uint64_t)v4;
    off_1011ECC10 = v4;
  }
  _Block_object_dispose(&v7, 8);
  if (!v4)
  {
    v6 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v7, 8);
    _Unwind_Resume(v6);
  }
  ((void (*)(id, uint64_t))v4)(v3, a2);

}

id *sub_10001BA8C(id *result, char a2)
{
  if ((a2 & 1) == 0)
    return (id *)_objc_msgSend(result[4], "_itemDidChange");
  return result;
}

uint64_t sub_10001BD2C()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECC00)
  {
    v4 = off_1010A8FB0;
    v5 = 0;
    qword_1011ECC00 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECC00;
  v1 = v3;
  if (!qword_1011ECC00)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_10001BF64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10001BF7C()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECC28;
  v7 = qword_1011ECC28;
  if (!qword_1011ECC28)
  {
    v1 = (void *)sub_10001C068();
    v0 = (id *)dlsym(v1, "MCDMusicBundleIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECC28 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

Class sub_10001C014(uint64_t a1)
{
  Class result;

  sub_10001C068();
  result = objc_getClass("MCDNowPlayingViewController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECC18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_100DE946C();
    return (Class)sub_10001C068();
  }
  return result;
}

uint64_t sub_10001C068()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECC20)
  {
    v4 = off_1010A8FC8;
    v5 = 0;
    qword_1011ECC20 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECC20;
  v1 = v3;
  if (!qword_1011ECC20)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_10001CE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10001CEB4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = off_1011ECC50;
  v9 = off_1011ECC50;
  if (!off_1011ECC50)
  {
    v1 = (void *)sub_10001D794();
    v0 = dlsym(v1, "MCDMusicGeneralLogging");
    v7[3] = (uint64_t)v0;
    off_1011ECC50 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

uint64_t sub_10001CF50(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10001CF60(uint64_t a1)
{

}

id sub_10001CF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "_processRefreshResponse:error:", a2, a3);
}

void sub_10001D1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10001D200(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;
  uint64_t v8;
  char isKindOfClass;
  void *v10;
  void *v11;
  void *v12;
  unsigned int v13;
  id v14;

  v7 = a2;
  v8 = objc_opt_class(MPModelForYouRecommendationGroup);
  isKindOfClass = objc_opt_isKindOfClass(v7, v8);
  v10 = v7;
  if ((isKindOfClass & 1) != 0)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "hrefURL"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "hrefURL"));
    v13 = objc_msgSend(v11, "isEqual:", v12);

    v10 = v7;
    if (v13)
    {
      *a4 = 1;
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a3;
      v10 = *(void **)(a1 + 32);
    }
  }
  v14 = v10;

  return v14;
}

void sub_10001D2D0(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  if (objc_msgSend(*(id *)(a1 + 32), "offlineMode"))
  {
    v2 = sub_10001CEB4();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_100DE9620();
LABEL_7:

    return;
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastReceivedResponse"));
  v5 = *(void **)(a1 + 40);

  if (v4 != v5)
  {
    v6 = sub_10001CEB4();
    v3 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_100DE964C();
    goto LABEL_7;
  }
  v7 = objc_msgSend(*(id *)(a1 + 48), "copy");
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastReceivedResponse"));
  objc_msgSend(v8, "setResults:", v7);

  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v9, "reloadData");

}

void sub_10001D534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10001D560(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v10 = a2;
  v6 = objc_opt_class(MPModelForYouRecommendationGroup);
  if ((objc_opt_isKindOfClass(v10, v6) & 1) != 0 && objc_msgSend(v10, "groupType") == (id)4)
  {
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "hrefURL"));
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    *a4 = 1;
  }

}

uint64_t sub_10001D794()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECC38)
  {
    v4 = off_1010A9080;
    v5 = 0;
    qword_1011ECC38 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECC38;
  v1 = v3;
  if (!qword_1011ECC38)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_10001D844(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_10001D854(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_10001DE88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001DEA0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10001DEB0(uint64_t a1)
{

}

id sub_10001DEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "_processResponse:error:", a2, a3);
}

void sub_10001E0D0(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  void *v12;
  char v13;

  v2 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
  v3 = v2;
  if (*(_QWORD *)(a1 + 32) && !*(_QWORD *)(a1 + 40))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "transformedResponse:"));
    objc_msgSend(v3, "setLastReceivedResponse:", v6);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastReceivedResponse"));
    objc_msgSend(v3, "receivedResponse:", v7);

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v8, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 48), "modelResponseDidInvalidate:", MPModelResponseDidInvalidateNotification, *(_QWORD *)(a1 + 32));

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "delegate"));
    v10 = objc_opt_respondsToSelector(v9, "hasLoadedStoreContent");

    if ((v10 & 1) != 0)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "delegate"));
      objc_msgSend(v11, "setHasLoadedStoreContent:", 1);

    }
    objc_msgSend(v3, "showContentScreen");
    if ((objc_msgSend(*(id *)(a1 + 32), "isValid") & 1) == 0)
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "delegate"));
      v13 = objc_opt_respondsToSelector(v12, "showErrorScreen");

      if ((v13 & 1) != 0)
        objc_msgSend(v3, "performRequest");
    }
  }
  else
  {
    objc_msgSend(v2, "showErrorScreen");
    v4 = sub_10001E254();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_100DE96C4(a1, v5);

  }
}

id sub_10001E254()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = off_1011ECC58;
  v9 = off_1011ECC58;
  if (!off_1011ECC58)
  {
    v1 = (void *)sub_1000204A4();
    v0 = dlsym(v1, "MCDMusicGeneralLogging");
    v7[3] = (uint64_t)v0;
    off_1011ECC58 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

id sub_10001E498(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v3 = MPModelResponseDidInvalidateNotification;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "object"));
  objc_msgSend(v2, "removeObserver:name:object:", v4, v3, v5);

  return objc_msgSend(*(id *)(a1 + 32), "performRequest");
}

void sub_10001EB1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  id *v28;
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001EB68(uint64_t a1, uint64_t a2)
{
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a2));
  objc_msgSend(WeakRetained, "_initiatePlaybackForItem:", v4);

}

void sub_10001EBC4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
  objc_msgSend(v2, "selectRowAtIndexPath:animated:scrollPosition:", *(_QWORD *)(a1 + 32), 0, 0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "delegate"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
  objc_msgSend(v4, "tableView:didSelectRowAtIndexPath:", v5, *(_QWORD *)(a1 + 32));

}

void sub_10001EFA8(id a1, BOOL a2)
{
  _BOOL4 v2;
  id v3;
  NSObject *v4;
  const __CFString *v5;
  int v6;
  const __CFString *v7;

  v2 = a2;
  v3 = sub_10001E254();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = CFSTR("Unsuccessfully");
    if (v2)
      v5 = CFSTR("Successfully");
    v6 = 138412290;
    v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Activated Siri %@", (uint8_t *)&v6, 0xCu);
  }

}

void sub_10001F38C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001F3A8(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "showLoadingScreen");
    WeakRetained = v2;
  }

}

void sub_10001F4F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10001F5DC()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1011ECC78;
  v7 = qword_1011ECC78;
  if (!qword_1011ECC78)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1000205A8;
    v3[3] = &unk_1010A89D8;
    v3[4] = &v4;
    sub_1000205A8((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_10001F67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10001FD60(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_updateViewForNetwork");
}

uint64_t sub_10001FDC0(uint64_t a1)
{
  void *v2;
  void *v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = off_1011ECC88;
  v9 = off_1011ECC88;
  if (!off_1011ECC88)
  {
    v3 = (void *)sub_1000204A4();
    v2 = dlsym(v3, "MCDNetworkConnectionAvailable");
    v7[3] = (uint64_t)v2;
    off_1011ECC88 = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (!v2)
  {
    v5 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t sub_10001FE68(uint64_t a1)
{
  void *v2;
  void *v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = off_1011ECC90;
  v9 = off_1011ECC90;
  if (!off_1011ECC90)
  {
    v3 = (void *)sub_1000204A4();
    v2 = dlsym(v3, "MCDNetworkRestrictedCellularData");
    v7[3] = (uint64_t)v2;
    off_1011ECC90 = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (!v2)
  {
    v5 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t sub_1000204A4()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECC60)
  {
    v4 = off_1010A9150;
    v5 = 0;
    qword_1011ECC60 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECC60;
  v1 = v3;
  if (!qword_1011ECC60)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

Class sub_100020554(uint64_t a1)
{
  Class result;
  uint64_t v3;

  sub_1000204A4();
  result = objc_getClass("MCDLoadingContentView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECC70 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = sub_100DE973C();
    return (Class)sub_1000205A8(v3);
  }
  return result;
}

Class sub_1000205A8(uint64_t a1)
{
  Class result;
  uint64_t v3;

  sub_1000204A4();
  result = objc_getClass("MCDErrorLoadingView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECC78 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = sub_100DE9760();
    return (Class)sub_1000205FC(v3);
  }
  return result;
}

MCDAlbumsDataSource *sub_1000205FC(uint64_t a1)
{
  MCDAlbumsDataSource *result;
  MCDAlbumsDataSource *v3;
  SEL v4;
  BOOL v5;
  id v6;

  sub_1000204A4();
  result = (MCDAlbumsDataSource *)objc_getClass("MCDNoContentView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECC98 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (MCDAlbumsDataSource *)sub_100DE9424();
    return -[MCDAlbumsDataSource initWithLimitedUI:person:](v3, v4, v5, v6);
  }
  return result;
}

void sub_100020E38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100020E64()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECCA8;
  v7 = qword_1011ECCA8;
  if (!qword_1011ECCA8)
  {
    v1 = (void *)sub_10002106C();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyPlayed");
    v5[3] = (uint64_t)v0;
    qword_1011ECCA8 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

uint64_t sub_10002106C()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECCB0)
  {
    v4 = off_1010A9168;
    v5 = 0;
    qword_1011ECCB0 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECCB0;
  v1 = v3;
  if (!qword_1011ECCB0)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

id sub_10002129C()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECCD8;
  v7 = qword_1011ECCD8;
  if (!qword_1011ECCD8)
  {
    v1 = (void *)sub_100021B60();
    v0 = (id *)dlsym(v1, "MCDAlbumsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECCD8 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

void sub_1000214D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000214F4(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id *v10;
  id v11;
  id WeakRetained;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  _BOOL8 v22;
  void *v23;
  void *v24;
  double v25;
  double v26;
  void *v27;
  id v28;

  v8 = a4;
  v9 = a5;
  v10 = (id *)(a1 + 32);
  v11 = a2;
  WeakRetained = objc_loadWeakRetained(v10);
  v28 = v8;
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[MusicCarPlayManager sharedManager](MusicCarPlayManager, "sharedManager"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "nowPlayingContentManager"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "currentPlayingSong"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "album"));

  if (v16)
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "identifiers"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "library"));
    v19 = objc_msgSend(v18, "persistentID");
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "identifiers"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "library"));
    v22 = v19 == objc_msgSend(v21, "persistentID");

  }
  else
  {
    v22 = 0;
  }
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "window"));
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "screen"));
  objc_msgSend(v24, "scale");
  v26 = v25;
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contentManager"));
  objc_msgSend(v11, "configureWithAlbum:utterance:currentlyPlaying:artworkScale:contentAvailable:", v28, 0, v22, objc_msgSend(v27, "itemIsPlayable:", v28), v26);

}

void sub_100021AC4(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "length"))
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);

}

uint64_t sub_100021B60()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECCE0)
  {
    v4 = off_1010A9180;
    v5 = 0;
    qword_1011ECCE0 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECCE0;
  v1 = v3;
  if (!qword_1011ECCE0)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_100022310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id sub_100022334()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECCF0;
  v7 = qword_1011ECCF0;
  if (!qword_1011ECCF0)
  {
    v1 = (void *)sub_1000223D4();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyPlayed");
    v5[3] = (uint64_t)v0;
    qword_1011ECCF0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

uint64_t sub_1000223D4()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECCF8)
  {
    v4 = off_1010A9198;
    v5 = 0;
    qword_1011ECCF8 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECCF8;
  v1 = v3;
  if (!qword_1011ECCF8)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_100023698(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000237FC()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECD18)
  {
    v4 = off_1010A91B0;
    v5 = 0;
    qword_1011ECD18 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECD18;
  v1 = v3;
  if (!qword_1011ECD18)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_1000239BC(id a1, UITableViewCell *a2, MPModelObject *a3, MPModelObject *a4, UITableView *a5, NSIndexPath *a6)
{
  MPModelObject *v8;
  UITableViewCell *v9;
  void *v10;
  id v11;

  v8 = a4;
  v9 = a2;
  v11 = (id)objc_claimAutoreleasedReturnValue(-[UITableView window](a5, "window"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "screen"));
  objc_msgSend(v10, "scale");
  -[UITableViewCell configureWithGenre:artworkScale:](v9, "configureWithGenre:artworkScale:", v8);

}

id sub_100023AC0()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  _Unwind_Exception *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (uint64_t (*)(void))off_1011ECD28;
  v8 = off_1011ECD28;
  if (!off_1011ECD28)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100023BE0;
    v4[3] = &unk_1010A89D8;
    v4[4] = &v5;
    sub_100023BE0((uint64_t)v4);
    v0 = (uint64_t (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v3);
  }
  v1 = v0();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

void *sub_100023BE0(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECD30)
  {
    v6 = off_1010A91E8;
    v7 = 0;
    qword_1011ECD30 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECD30;
    if (qword_1011ECD30)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECD30;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECD28 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100023D10(id a1)
{
  MusicCarPlayApplicationCapabilitiesController *v1;
  void *v2;

  v1 = objc_alloc_init(MusicCarPlayApplicationCapabilitiesController);
  v2 = (void *)qword_1011ECD38;
  qword_1011ECD38 = (uint64_t)v1;

}

void sub_100024E54(id a1, BOOL a2)
{
  _BOOL4 v2;
  id v3;
  NSObject *v4;
  const __CFString *v5;
  int v6;
  const __CFString *v7;

  v2 = a2;
  v3 = sub_100024F0C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = CFSTR("Unsuccessfully");
    if (v2)
      v5 = CFSTR("Successfully");
    v6 = 138412290;
    v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Activated Siri %@", (uint8_t *)&v6, 0xCu);
  }

}

id sub_100024F0C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = off_1011ECD58;
  v9 = off_1011ECD58;
  if (!off_1011ECD58)
  {
    v1 = (void *)sub_1000268DC();
    v0 = dlsym(v1, "MCDMusicGeneralLogging");
    v7[3] = (uint64_t)v0;
    off_1011ECD58 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

void sub_1000259C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000259EC(uint64_t a1, void *a2, void *a3)
{
  id *v4;
  id v5;
  id v6;
  id WeakRetained;

  v4 = (id *)(a1 + 32);
  v5 = a3;
  v6 = a2;
  WeakRetained = objc_loadWeakRetained(v4);
  objc_msgSend(WeakRetained, "_processResponse:error:", v6, v5);

}

void sub_100025CB8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "contentManager:didFailWithError:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

id sub_100025CF8(uint64_t a1)
{
  void *v2;
  void *v3;
  char v4;
  void *v5;
  id result;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 48), *(id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), "modelResponseDidInvalidate:", MPModelResponseDidInvalidateNotification, 0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  v4 = objc_opt_respondsToSelector(v3, "contentManager:didReceiveResponse:");

  if ((v4 & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
    objc_msgSend(v5, "contentManager:didReceiveResponse:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

  }
  result = objc_msgSend(*(id *)(a1 + 40), "isValid");
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "_performRequest");
  return result;
}

id sub_100026684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "_processResponse:error:", a2, a3);
}

uint64_t sub_1000268DC()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECD50)
  {
    v4 = off_1010A9298;
    v5 = 0;
    qword_1011ECD50 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECD50;
  v1 = v3;
  if (!qword_1011ECD50)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

id sub_100026D64()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  _Unwind_Exception *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (uint64_t (*)(void))off_1011ECD70;
  v8 = off_1011ECD70;
  if (!off_1011ECD70)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100027EA4;
    v4[3] = &unk_1010A89D8;
    v4[4] = &v5;
    sub_100027EA4((uint64_t)v4);
    v0 = (uint64_t (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v3);
  }
  v1 = v0();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

void sub_100026F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100026F78(uint64_t a1)
{
  void (**v1)(void);
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "updateBlock"));
  v1[2]();

}

void sub_100027298(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  id v16;
  __int16 v17;
  id v18;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = sub_100026D64();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "debugDescription"));
      v13 = 138543874;
      v14 = v12;
      v15 = 2114;
      v16 = v5;
      v17 = 2114;
      v18 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to add %{public}@ to Music Library with:\n - resultingObjects: %{public}@\n - error: %{public}@", (uint8_t *)&v13, 0x20u);

    }
  }
  v9 = sub_100026D64();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "debugDescription"));
    v13 = 138543618;
    v14 = v11;
    v15 = 2114;
    v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Added %{public}@ to Music Library, resultingObjects: %{public}@", (uint8_t *)&v13, 0x16u);

  }
}

void *sub_100027EA4(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECD78)
  {
    v6 = off_1010A92D8;
    v7 = 0;
    qword_1011ECD78 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECD78;
    if (qword_1011ECD78)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECD78;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECD70 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100027F94(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_1000281A0(id a1, UITableViewCell *a2, MPModelObject *a3, UITableView *a4, MusicAttributionMetadata *a5)
{
  MPModelObject *v8;
  UITableView *v9;
  MPModelObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  unsigned __int8 v15;
  void *v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  double v26;
  double v27;
  void *v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  void *v34;
  void *v35;
  double v36;
  double v37;
  void *v38;
  double v39;
  double v40;
  uint64_t v41;
  UITableViewCell *v42;

  v42 = a2;
  v8 = a3;
  v9 = a4;
  v10 = v8;
  v11 = (void *)objc_claimAutoreleasedReturnValue(-[MusicAttributionMetadata artworkCatalog](a5, "artworkCatalog"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(-[UITableView window](v9, "window"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "screen"));
  objc_msgSend(v13, "scale");
  -[UITableViewCell configureWithAttributionArtwork:artworkScale:](v42, "configureWithAttributionArtwork:artworkScale:", v11);

  v14 = (void *)objc_claimAutoreleasedReturnValue(+[MusicCarPlayApplicationCapabilitiesController sharedController](MusicCarPlayApplicationCapabilitiesController, "sharedController"));
  v15 = objc_msgSend(v14, "subscriptionCapabilities");

  switch((unint64_t)-[MPModelObject type](v10, "type"))
  {
    case 1uLL:
      v16 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject song](v10, "song"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(-[UITableView window](v9, "window"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "screen"));
      objc_msgSend(v18, "scale");
      v20 = v19;
      if ((v15 & 1) == 0)
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject song](v10, "song"));
        -[UITableViewCell configureWithSong:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithSong:currentlyPlaying:artworkScale:contentAvailable:", v16, 0, objc_msgSend(v21, "isLibraryAdded"), v20);
        goto LABEL_12;
      }
      -[UITableViewCell configureWithSong:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithSong:currentlyPlaying:artworkScale:contentAvailable:", v16, 0, 1, v19);
      goto LABEL_25;
    case 5uLL:
      v22 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject playlistEntry](v10, "playlistEntry"));
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "song"));

      v24 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject playlistEntry](v10, "playlistEntry"));
      v16 = v24;
      if (v23)
      {
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "song"));
        v18 = (void *)objc_claimAutoreleasedReturnValue(-[UITableView window](v9, "window"));
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "screen"));
        objc_msgSend(v25, "scale");
        v27 = v26;
        if ((v15 & 1) != 0)
        {
          -[UITableViewCell configureWithSong:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithSong:currentlyPlaying:artworkScale:contentAvailable:", v17, 0, 1, v26);
          goto LABEL_24;
        }
        v28 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject playlistEntry](v10, "playlistEntry"));
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "song"));
        -[UITableViewCell configureWithSong:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithSong:currentlyPlaying:artworkScale:contentAvailable:", v17, 0, objc_msgSend(v29, "isLibraryAdded"), v27);
        goto LABEL_23;
      }
      v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "tvEpisode"));

      v35 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject playlistEntry](v10, "playlistEntry"));
      v16 = v35;
      if (v34)
      {
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "tvEpisode"));
        v18 = (void *)objc_claimAutoreleasedReturnValue(-[UITableView window](v9, "window"));
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "screen"));
        objc_msgSend(v25, "scale");
        v37 = v36;
        if ((v15 & 1) == 0)
        {
          v28 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject playlistEntry](v10, "playlistEntry"));
          v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "tvEpisode"));
          -[UITableViewCell configureWithTVEpisode:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithTVEpisode:currentlyPlaying:artworkScale:contentAvailable:", v17, 0, objc_msgSend(v29, "isLibraryAdded"), v37);
LABEL_23:

          goto LABEL_24;
        }
        -[UITableViewCell configureWithTVEpisode:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithTVEpisode:currentlyPlaying:artworkScale:contentAvailable:", v17, 0, 1, v36);
      }
      else
      {
        v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "movie"));

        if (!v38)
          goto LABEL_27;
        v16 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject playlistEntry](v10, "playlistEntry"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "movie"));
        v18 = (void *)objc_claimAutoreleasedReturnValue(-[UITableView window](v9, "window"));
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "screen"));
        objc_msgSend(v25, "scale");
        v40 = v39;
        if ((v15 & 1) == 0)
        {
          v28 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject playlistEntry](v10, "playlistEntry"));
          v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "movie"));
          -[UITableViewCell configureWithMovie:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithMovie:currentlyPlaying:artworkScale:contentAvailable:", v17, 0, objc_msgSend(v29, "isLibraryAdded"), v40);
          goto LABEL_23;
        }
        -[UITableViewCell configureWithMovie:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithMovie:currentlyPlaying:artworkScale:contentAvailable:", v17, 0, 1, v39);
      }
LABEL_24:

LABEL_25:
LABEL_26:

LABEL_27:
      if (-[UITableViewCell isContentUnavailable](v42, "isContentUnavailable"))
        v41 = 0;
      else
        v41 = 3;
      -[UITableViewCell setSelectionStyle:](v42, "setSelectionStyle:", v41);

      return;
    case 6uLL:
      v16 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject tvEpisode](v10, "tvEpisode"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(-[UITableView window](v9, "window"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "screen"));
      objc_msgSend(v18, "scale");
      v31 = v30;
      if ((v15 & 1) == 0)
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject tvEpisode](v10, "tvEpisode"));
        -[UITableViewCell configureWithTVEpisode:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithTVEpisode:currentlyPlaying:artworkScale:contentAvailable:", v16, 0, objc_msgSend(v21, "isLibraryAdded"), v31);
        goto LABEL_12;
      }
      -[UITableViewCell configureWithTVEpisode:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithTVEpisode:currentlyPlaying:artworkScale:contentAvailable:", v16, 0, 1, v30);
      goto LABEL_25;
    case 9uLL:
      v16 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject movie](v10, "movie"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(-[UITableView window](v9, "window"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "screen"));
      objc_msgSend(v18, "scale");
      v33 = v32;
      if ((v15 & 1) != 0)
      {
        -[UITableViewCell configureWithMovie:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithMovie:currentlyPlaying:artworkScale:contentAvailable:", v16, 0, 1, v32);
      }
      else
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject movie](v10, "movie"));
        -[UITableViewCell configureWithMovie:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithMovie:currentlyPlaying:artworkScale:contentAvailable:", v16, 0, objc_msgSend(v21, "isLibraryAdded"), v33);
LABEL_12:

      }
      goto LABEL_25;
    default:
      v16 = (void *)objc_claimAutoreleasedReturnValue(-[UITableView window](v9, "window"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "screen"));
      objc_msgSend(v17, "scale");
      -[UITableViewCell configureWithSong:currentlyPlaying:artworkScale:contentAvailable:](v42, "configureWithSong:currentlyPlaying:artworkScale:contentAvailable:", 0, 0, 1);
      goto LABEL_26;
  }
}

void sub_100028A00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_100028A30(uint64_t a1)
{
  void *v1;
  _QWORD *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contentManagerDelegate"));
  objc_msgSend(v1, "contentManagerReloadData:", WeakRetained[6]);

}

void sub_1000290AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000290CC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = off_1011ECD90;
  v9 = off_1011ECD90;
  if (!off_1011ECD90)
  {
    v1 = (void *)sub_10002E740();
    v0 = dlsym(v1, "MCDMusicGeneralLogging");
    v7[3] = (uint64_t)v0;
    off_1011ECD90 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

void sub_100029578(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  uint64_t v5;

  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 80));
  objc_destroyWeak((id *)(v5 - 72));
  _Unwind_Resume(a1);
}

void sub_1000295BC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id to;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_copyWeak(&to, (id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentAttributionMetadata"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "placeholderArtworkCatalog"));
  objc_msgSend(WeakRetained, "setCurrentAttributionCatalog:", v4);

  objc_destroyWeak(&to);
}

void sub_10002963C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100029650(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  v4 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10002970C;
  block[3] = &unk_1010A9360;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  objc_copyWeak(&v9, (id *)(a1 + 40));
  v7 = v4;
  v5 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v9);
  objc_destroyWeak(&v8);
}

void sub_10002970C(uint64_t a1)
{
  id WeakRetained;
  id v3;
  void *v4;
  unsigned int v5;
  void *v6;
  void *v7;
  id to;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_copyWeak(&to, (id *)(a1 + 48));
  v3 = objc_loadWeakRetained(&to);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentAttributionCatalog"));
  v5 = objc_msgSend(v3, "isArtworkVisuallyIdenticalToCatalog:", v4);

  if (v5)
  {
    objc_msgSend(WeakRetained, "setArtworkTimer:", 0);
    objc_msgSend(WeakRetained, "setCurrentAttributionImage:", *(_QWORD *)(a1 + 32));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "impl"));
    objc_msgSend(v6, "contentManagerReloadData:", v7);

  }
  objc_destroyWeak(&to);

}

void sub_1000297E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100029ED4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = off_1011ECDA0;
  v9 = off_1011ECDA0;
  if (!off_1011ECDA0)
  {
    v1 = (void *)sub_10002E740();
    v0 = dlsym(v1, "MCDCarDisplayBundle");
    v7[3] = (uint64_t)v0;
    off_1011ECDA0 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

void sub_10002BD00(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

id sub_10002BD44()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1011ECDA8;
  v7 = qword_1011ECDA8;
  if (!qword_1011ECDA8)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10002E7F0;
    v3[3] = &unk_1010A89D8;
    v3[4] = &v4;
    sub_10002E7F0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_10002BDE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10002BDFC(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "libraryAddObserver"));
  objc_msgSend(v1, "addSongToLibrary");

}

void sub_10002BE40(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "libraryAddObserver"));
  objc_msgSend(v1, "addAlbumToLibrary");

}

void sub_10002BE84(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "libraryAddObserver"));
  objc_msgSend(v1, "addPlaylistToLibrary");

}

void sub_10002C6F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_10002C768(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "nowPlayingViewControllerAlbumArtistButtonTapped:", *(_QWORD *)(a1 + 32));

}

void sub_10002C7A4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_addItemsToLibrary");

}

id sub_10002C7D0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performPlaybackRequestWithCommand:", *(_QWORD *)(a1 + 40));
}

id sub_10002C7DC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "performFavoriteChangeRequestFor:action:", *(_QWORD *)(a1 + 40), 1);
}

id sub_10002C7EC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "performFavoriteChangeRequestFor:action:", *(_QWORD *)(a1 + 40), 0);
}

void sub_10002D560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10002D578(uint64_t a1, uint64_t a2, void *a3, _BYTE *a4)
{
  void *v6;
  id v7;
  void *v8;
  void *v9;
  unsigned int v10;

  v6 = *(void **)(a1 + 32);
  v7 = a3;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "currentPlayingSong"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "identifiers"));
  v10 = objc_msgSend(v9, "intersectsSet:", v7);

  if (v10)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_10002D788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002D7A4(id *a1, void *a2)
{
  _QWORD *WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "currentPlayingAlbum"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "identifiers"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "identifiers"));
  v7 = objc_msgSend(v5, "intersectsSet:", v6);

  if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "results"));
    objc_msgSend(WeakRetained, "setIsCurrentPlayingAlbumInLibrary:", objc_msgSend(WeakRetained, "currentPlayingSongFoundIn:", v8));

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contentManagerDelegate"));
    objc_msgSend(v9, "contentManagerReloadData:", WeakRetained[6]);

  }
}

void sub_10002D960(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  id v10;

  v3 = a2;
  if (v3)
  {
    v4 = sub_1000290CC();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = 134218242;
      v8 = v6;
      v9 = 2112;
      v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Failed favoriteChangeRequestAction=%ld with error=%@", (uint8_t *)&v7, 0x16u);
    }

  }
}

NSMutableDictionary *__cdecl sub_10002E1F0(id a1, NSDictionary *a2)
{
  id v2;
  void *v3;

  v2 = -[NSDictionary mutableCopy](a2, "mutableCopy");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIFont systemFontOfSize:weight:design:](UIFont, "systemFontOfSize:weight:design:", UIFontDescriptorSystemDesignRounded, 13.0, UIFontWeightHeavy));
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, NSFontAttributeName);

  return (NSMutableDictionary *)v2;
}

void sub_10002E670(id *a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a2;
  if (objc_msgSend(a1[4], "containsObject:"))
  {
    objc_msgSend(a1[5], "appendSection:", v7);
    v5 = a1[5];
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "itemsInSectionAtIndex:", a3));
    objc_msgSend(v5, "appendItems:", v6);

  }
}

Class sub_10002E6EC(uint64_t a1)
{
  Class result;

  sub_10002E740();
  result = objc_getClass("_MCDNowPlayingContentManager");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECD80 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_100DE9918();
    return (Class)sub_10002E740();
  }
  return result;
}

uint64_t sub_10002E740()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECD88)
  {
    v4 = off_1010A94F8;
    v5 = 0;
    qword_1011ECD88 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECD88;
  v1 = v3;
  if (!qword_1011ECD88)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_10002E7F0(uint64_t a1)
{
  MCDTabBarController *v2;
  SEL v3;

  sub_10002E740();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MCDAlertController");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECDA8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v2 = (MCDTabBarController *)sub_100DE9448();
    -[MCDTabBarController viewDidLoad](v2, v3);
  }
}

void sub_10002ED50(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[CRSOpenApplicationService defaultService](CRSOpenApplicationService, "defaultService"));
  objc_msgSend(v1, "openApplication:completion:", CFSTR("com.apple.CarPlayApp"), &stru_1010A9530);

}

void sub_10002ED94(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;

  v2 = a2;
  if (v2)
  {
    v3 = sub_10002EDE8();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_100DE993C((uint64_t)v2, v4);

  }
}

id sub_10002EDE8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = off_1011ECDC8;
  v9 = off_1011ECDC8;
  if (!off_1011ECDC8)
  {
    v1 = (void *)sub_100031474();
    v0 = dlsym(v1, "MCDMusicGeneralLogging");
    v7[3] = (uint64_t)v0;
    off_1011ECDC8 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

id sub_10002F12C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateNowPlayingVisibility");
}

id sub_10002F684()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECDE0;
  v7 = qword_1011ECDE0;
  if (!qword_1011ECDE0)
  {
    v1 = (void *)sub_100031474();
    v0 = (id *)dlsym(v1, "MCDRadioViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECDE0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_10002F71C()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECDE8;
  v7 = qword_1011ECDE8;
  if (!qword_1011ECDE8)
  {
    v1 = (void *)sub_100031474();
    v0 = (id *)dlsym(v1, "MCDLibraryViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECDE8 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_10002F7B4()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECDF0;
  v7 = qword_1011ECDF0;
  if (!qword_1011ECDF0)
  {
    v1 = (void *)sub_100031474();
    v0 = (id *)dlsym(v1, "MCDForYouTableViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECDF0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_10002F84C()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECDF8;
  v7 = qword_1011ECDF8;
  if (!qword_1011ECDF8)
  {
    v1 = (void *)sub_100031474();
    v0 = (id *)dlsym(v1, "MCDBrowseViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECDF8 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_10002F8E4()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECE00;
  v7 = qword_1011ECE00;
  if (!qword_1011ECE00)
  {
    v1 = (void *)sub_100031474();
    v0 = (id *)dlsym(v1, "MCDPlaylistsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    qword_1011ECE00 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id sub_10002FA54()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1011ECE08;
  v7 = qword_1011ECE08;
  if (!qword_1011ECE08)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100031524;
    v3[3] = &unk_1010A89D8;
    v3[4] = &v4;
    sub_100031524((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_10002FAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10002FEA4(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  unsigned __int8 *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[MPMediaLibrary defaultMediaLibrary](MPMediaLibrary, "defaultMediaLibrary"));
  v3 = objc_msgSend(v2, "hasSongs");

  v4 = *(unsigned __int8 **)(a1 + 32);
  if (v4[10] != v3)
  {
    objc_msgSend(v4, "_reloadTabsViewControllers");
    v4 = *(unsigned __int8 **)(a1 + 32);
  }
  return objc_msgSend(v4, "refreshNavigationPath");
}

void sub_1000307D4(id a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  _QWORD v45[3];
  _QWORD v46[3];
  _QWORD v47[3];
  _QWORD v48[4];
  _QWORD v49[4];
  _QWORD v50[4];
  _QWORD v51[5];
  _QWORD v52[5];

  v51[0] = CFSTR("listenNow");
  v1 = sub_10002F7B4();
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v52[0] = v2;
  v51[1] = CFSTR("browse");
  v3 = sub_10002F84C();
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v52[1] = v4;
  v51[2] = CFSTR("radio");
  v5 = sub_10002F684();
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v52[2] = v6;
  v51[3] = CFSTR("library");
  v7 = sub_10002F71C();
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  v52[3] = v8;
  v51[4] = CFSTR("playlists");
  v9 = sub_10002F8E4();
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v52[4] = v10;
  v11 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v52, v51, 5));
  v12 = (void *)qword_1011ECDB0;
  qword_1011ECDB0 = v11;

  v49[0] = &off_1011263E0;
  v13 = sub_10002F7B4();
  v44 = (void *)objc_claimAutoreleasedReturnValue(v13);
  v48[0] = v44;
  v14 = sub_10002F84C();
  v43 = (void *)objc_claimAutoreleasedReturnValue(v14);
  v48[1] = v43;
  v15 = sub_10002F684();
  v42 = (void *)objc_claimAutoreleasedReturnValue(v15);
  v48[2] = v42;
  v16 = sub_10002F71C();
  v41 = (void *)objc_claimAutoreleasedReturnValue(v16);
  v48[3] = v41;
  v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v48, 4));
  v50[0] = v40;
  v49[1] = &off_1011263F8;
  v17 = sub_10002F7B4();
  v39 = (void *)objc_claimAutoreleasedReturnValue(v17);
  v47[0] = v39;
  v18 = sub_10002F684();
  v38 = (void *)objc_claimAutoreleasedReturnValue(v18);
  v47[1] = v38;
  v19 = sub_10002F71C();
  v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
  v47[2] = v20;
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v47, 3));
  v50[1] = v21;
  v49[2] = &off_101126410;
  v22 = sub_10002F71C();
  v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
  v46[0] = v23;
  v24 = sub_10002F8E4();
  v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
  v46[1] = v25;
  v26 = sub_10002F684();
  v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
  v46[2] = v27;
  v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v46, 3));
  v50[2] = v28;
  v49[3] = &off_101126428;
  v29 = sub_10002F71C();
  v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
  v45[0] = v30;
  v31 = sub_10002F8E4();
  v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
  v45[1] = v32;
  v33 = sub_10002F684();
  v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
  v45[2] = v34;
  v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v45, 3));
  v50[3] = v35;
  v36 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v50, v49, 4));
  v37 = (void *)qword_1011ECDB8;
  qword_1011ECDB8 = v36;

}

void sub_100030FC4(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *j;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  _BYTE v24[128];

  v2 = objc_msgSend(*(id *)(a1 + 32), "_limitedUIEnabled");
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "viewControllers"));
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v20 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i);
        if ((objc_opt_respondsToSelector(v8, "setLimitedUI:") & 1) != 0)
          objc_msgSend(v8, "setLimitedUI:", v2);
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
    }
    while (v5);
  }

  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewControllers", 0));
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v15, v23, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v16;
    do
    {
      for (j = 0; j != v11; j = (char *)j + 1)
      {
        if (*(_QWORD *)v16 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)j);
        if ((objc_opt_respondsToSelector(v14, "setLimitedUI:") & 1) != 0)
          objc_msgSend(v14, "setLimitedUI:", v2);
      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v15, v23, 16);
    }
    while (v11);
  }

}

void sub_10003128C(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000312E8;
  block[3] = &unk_1010A8DD8;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_1000312E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_setAppropriateViewControllers");
}

uint64_t sub_100031474()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECDD0)
  {
    v4 = off_1010A9598;
    v5 = 0;
    qword_1011ECDD0 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECDD0;
  v1 = v3;
  if (!qword_1011ECDD0)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

MCDRootController *sub_100031524(uint64_t a1)
{
  MCDRootController *result;
  MCDRootController *v3;
  SEL v4;
  id v5;

  sub_100031474();
  result = (MCDRootController *)objc_getClass("MCDNowPlayingViewController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECE08 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (MCDRootController *)sub_100DE946C();
    return -[MCDRootController initWithWindow:](v3, v4, v5);
  }
  return result;
}

void *sub_1000317F0(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECE20)
  {
    v6 = off_1010A95B0;
    v7 = 0;
    qword_1011ECE20 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECE20;
    if (qword_1011ECE20)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECE20;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECE18 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100031F24()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECE30)
  {
    v4 = off_1010A95C8;
    v5 = 0;
    qword_1011ECE30 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECE30;
  v1 = v3;
  if (!qword_1011ECE30)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_1000322B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000322D0(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  id WeakRetained;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t (*v43)(void);
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  _Unwind_Exception *v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  _QWORD v57[5];
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  void *v61;

  v11 = a2;
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  v16 = v13;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "traitCollection"));
  objc_msgSend(v17, "displayScale");
  v19 = v18;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  switch((unint64_t)objc_msgSend(v16, "itemType"))
  {
    case 1uLL:
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "album"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "album"));
      objc_msgSend(v11, "configureWithAlbum:currentlyPlaying:artworkScale:", v21, objc_msgSend(WeakRetained, "_contentItemIsPlaying:", v22), v19);
      goto LABEL_10;
    case 3uLL:
      v55 = v12;
      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "curator"));
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "shortName"));
      v27 = objc_msgSend(v26, "length");
      v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "curator"));
      v29 = v28;
      if (v27)
        v30 = objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "shortName"));
      else
        v30 = objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "name"));
      v50 = (void *)v30;
      v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "textLabel"));
      objc_msgSend(v51, "setText:", v50);

      objc_msgSend(v11, "setAccessoryType:", 1);
      v12 = v55;
      break;
    case 4uLL:
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "playlist"));
      v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "playlist"));
      objc_msgSend(v11, "configureWithPlaylist:currentlyPlaying:artworkScale:showCurator:", v31, objc_msgSend(WeakRetained, "_contentItemIsPlaying:", v32), 1, v19);

      break;
    case 5uLL:
      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "radioStation"));
      v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "name"));
      v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "textLabel"));
      objc_msgSend(v35, "setText:", v34);

      v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "radioStation"));
      v37 = objc_msgSend(v36, "subtype");

      if (v37 == (id)1)
      {
        v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "radioStation"));
        v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "editorNotes"));
        v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "detailTextLabel"));
        objc_msgSend(v40, "setText:", v39);

      }
      else
      {
        v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "detailTextLabel"));
        objc_msgSend(v38, "setText:", 0);
      }

      v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "radioStation"));
      v42 = objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "artworkCatalog"));
      v58 = 0;
      v59 = &v58;
      v60 = 0x2020000000;
      v43 = (uint64_t (*)(void))off_1011ECE48;
      v61 = off_1011ECE48;
      if (!off_1011ECE48)
      {
        v57[0] = _NSConcreteStackBlock;
        v57[1] = 3221225472;
        v57[2] = sub_100032834;
        v57[3] = &unk_1010A89D8;
        v57[4] = &v58;
        sub_100032834((uint64_t)v57);
        v43 = (uint64_t (*)(void))v59[3];
      }
      v53 = v15;
      v54 = v41;
      v44 = (void *)v42;
      v56 = v12;
      _Block_object_dispose(&v58, 8);
      if (!v43)
      {
        v52 = (_Unwind_Exception *)sub_100DE9368();
        _Block_object_dispose(&v58, 8);
        _Unwind_Resume(v52);
      }
      v45 = v43();
      v46 = (void *)objc_claimAutoreleasedReturnValue(v45);
      v47 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen _carScreen](UIScreen, "_carScreen"));
      v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v47, "traitCollection"));
      v49 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageNamed:inBundle:compatibleWithTraitCollection:](UIImage, "imageNamed:inBundle:compatibleWithTraitCollection:", CFSTR("CarDisplayRadioTab"), v46, v48));
      objc_msgSend(v11, "setArtworkCatalog:andScale:fallbackImage:", v44, v49, v19);

      v12 = v56;
      v15 = v53;
      break;
    case 7uLL:
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "song"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "song"));
      objc_msgSend(v11, "configureWithSong:currentlyPlaying:artworkScale:contentAvailable:", v21, objc_msgSend(WeakRetained, "_contentItemIsPlaying:", v22), 1, v19);
LABEL_10:

      break;
    default:
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "textLabel"));
      objc_msgSend(v23, "setText:", 0);

      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "detailTextLabel"));
      objc_msgSend(v24, "setText:", 0);

      objc_msgSend(v11, "setAccessoryType:", 0);
      break;
  }

}

void *sub_100032834(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECE50)
  {
    v6 = off_1010A95E0;
    v7 = 0;
    qword_1011ECE50 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECE50;
    if (qword_1011ECE50)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECE50;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECE48 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100032E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100032E4C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100032E5C(uint64_t a1)
{

}

void sub_100032E64(uint64_t a1, void *a2)
{
  unsigned int v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  id v22;

  v22 = a2;
  v3 = objc_msgSend(v22, "hasLoadedValueForKey:", MPModelStoreBrowseSectionRelationshipRadioStation);
  v4 = v22;
  if (v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "radioStation"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "currentStationEvent"));

    v7 = v22;
    if (!v6)
      goto LABEL_8;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "radioStation"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "currentStationEvent"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "endTime"));

    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    if (*(_QWORD *)(v11 + 40))
    {
      objc_msgSend(v10, "timeIntervalSinceNow");
      v13 = v12;
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "timeIntervalSinceNow");
      if (v13 >= v14)
      {
LABEL_7:

        v7 = v22;
LABEL_8:
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "radioStation"));
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "upcomingStationEvent"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "startTime"));

        v18 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
        if (*(_QWORD *)(v18 + 40))
        {
          objc_msgSend(v17, "timeIntervalSinceNow");
          v20 = v19;
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "timeIntervalSinceNow");
          if (v20 >= v21)
          {
LABEL_12:

            v4 = v22;
            goto LABEL_13;
          }
          v18 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
        }
        objc_storeStrong((id *)(v18 + 40), v17);
        goto LABEL_12;
      }
      v11 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    }
    objc_storeStrong((id *)(v11 + 40), v10);
    goto LABEL_7;
  }
LABEL_13:

}

uint64_t sub_100032FDC()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECE60)
  {
    v4 = off_1010A9620;
    v5 = 0;
    qword_1011ECE60 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECE60;
  v1 = v3;
  if (!qword_1011ECE60)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_1000333D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000333F4()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECE78;
  v7 = qword_1011ECE78;
  if (!qword_1011ECE78)
  {
    v1 = (void *)sub_100033494();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyPlayed");
    v5[3] = (uint64_t)v0;
    qword_1011ECE78 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

uint64_t sub_100033494()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECE80)
  {
    v4 = off_1010A9638;
    v5 = 0;
    qword_1011ECE80 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECE80;
  v1 = v3;
  if (!qword_1011ECE80)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_10003385C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003387C(uint64_t a1)
{
  void *v1;
  void (**v2)(_QWORD, _QWORD);
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "actionHandler"));

  if (v1)
  {
    v2 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "actionHandler"));
    ((void (**)(_QWORD, id))v2)[2](v2, WeakRetained);

  }
  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);

}

void sub_100033B58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100033B80(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_dismissAlertController");

  return 1;
}

uint64_t sub_100033CCC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_100034ABC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

id sub_1000357A4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = off_1011ECE98;
  v9 = off_1011ECE98;
  if (!off_1011ECE98)
  {
    v1 = (void *)sub_1000380E0();
    v0 = dlsym(v1, "MCDCarDisplayBundle");
    v7[3] = (uint64_t)v0;
    off_1011ECE98 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

id sub_100035B60()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)qword_1011ECEA8;
  v7 = qword_1011ECEA8;
  if (!qword_1011ECEA8)
  {
    v1 = (void *)sub_1000380E0();
    v0 = (id *)dlsym(v1, "MCDPlaybackStateChangedNotification");
    v5[3] = (uint64_t)v0;
    qword_1011ECEA8 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

void sub_1000360DC(uint64_t a1, void *a2)
{
  double v3;
  double v4;
  id v5;
  objc_class *v6;
  NSString *v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  char v12;

  v3 = *(double *)(a1 + 48);
  v4 = *(double *)(a1 + 56);
  v5 = a2;
  objc_msgSend(v5, "setFittingSize:", v3, v4);
  objc_msgSend(v5, "setDestinationScale:", *(double *)(a1 + 64));
  v6 = (objc_class *)objc_opt_class(*(_QWORD *)(a1 + 32));
  v7 = NSStringFromClass(v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  objc_msgSend(v5, "setCacheIdentifier:forRequestingContext:", v8, *(_QWORD *)(a1 + 32));

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000361B8;
  v10[3] = &unk_1010A96D0;
  v12 = *(_BYTE *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 32);
  v11 = *(id *)(a1 + 40);
  objc_msgSend(v5, "setDestination:configurationBlock:", v9, v10);

}

void sub_1000361B8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a2;
  v5 = a3;
  if (v5)
  {
    if (*(_BYTE *)(a1 + 40))
    {
      objc_msgSend(v7, "setArtworkImage:", v5);
    }
    else
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "artworkImages"));
      objc_msgSend(v6, "addObject:", v5);

    }
  }
  else
  {
    objc_msgSend(v7, "setPlaceholderImage:", *(_QWORD *)(a1 + 32));
  }
  objc_msgSend(v7, "setNeedsLayout");

}

id sub_100036720()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  _Unwind_Exception *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;

  v0 = objc_alloc_init((Class)UILabel);
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIFont systemFontOfSize:](UIFont, "systemFontOfSize:", 15.0));
  objc_msgSend(v0, "setFont:", v1);

  v11 = 0;
  v12 = &v11;
  v13 = 0x2020000000;
  v2 = off_1011ECEB0;
  v14 = off_1011ECEB0;
  if (!off_1011ECEB0)
  {
    v3 = (void *)sub_1000380E0();
    v2 = dlsym(v3, "MCDLocalizedExplicitString");
    v12[3] = (uint64_t)v2;
    off_1011ECEB0 = v2;
  }
  _Block_object_dispose(&v11, 8);
  if (!v2)
  {
    v10 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v11, 8);
    _Unwind_Resume(v10);
  }
  v5 = ((uint64_t (*)(uint64_t))v2)(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  objc_msgSend(v0, "setText:", v6, v11);

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor _carSystemSecondaryColor](UIColor, "_carSystemSecondaryColor"));
  objc_msgSend(v0, "setTextColor:", v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor _carSystemFocusSecondaryColor](UIColor, "_carSystemFocusSecondaryColor"));
  objc_msgSend(v0, "setHighlightedTextColor:", v8);

  objc_msgSend(v0, "sizeToFit");
  return v0;
}

id sub_100036860()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = off_1011ECEB8;
  v9 = off_1011ECEB8;
  if (!off_1011ECEB8)
  {
    v1 = (void *)sub_1000380E0();
    v0 = dlsym(v1, "MCDFavoriteIcon");
    v7[3] = (uint64_t)v0;
    off_1011ECEB8 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

void sub_100037E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,char a21)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100037E7C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100037E8C(uint64_t a1)
{

}

void sub_100037E94(uint64_t a1, uint64_t a2, void *a3)
{
  id WeakRetained;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  id v21;

  v21 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = v21;
  v6 = WeakRetained;
  v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  if (v21)
  {
    if (!v7)
    {
      v8 = objc_msgSend(objc_alloc((Class)UIImageView), "initWithFrame:", 39.0, 0.0, 36.0, 36.0);
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
      v10 = *(void **)(v9 + 40);
      *(_QWORD *)(v9 + 40) = v8;

      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setTag:", 1000);
      v5 = v21;
      v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    }
    objc_msgSend(v7, "setImage:", v5);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setClipsToBounds:", 1);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "_setContinuousCornerRadius:", 4.5);
    v11 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    objc_msgSend(v11, "frame");
    v16 = UIRectCenteredYInRect(v12, v13, v14, v15, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
    objc_msgSend(v11, "setFrame:", MPURectByApplyingUserInterfaceLayoutDirectionInRect(v17, v16, v18, v19, v20, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)));
    objc_msgSend(v6, "addSubview:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40));
  }
  else
  {
    objc_msgSend(v7, "removeFromSuperview");
  }

}

uint64_t sub_1000380E0()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECEA0)
  {
    v4 = off_1010A9740;
    v5 = 0;
    qword_1011ECEA0 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECEA0;
  v1 = v3;
  if (!qword_1011ECEA0)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_1000387E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100038804(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id *v7;
  id v8;
  id WeakRetained;
  void *v10;
  void *v11;
  void *v12;
  unsigned int v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  _BOOL8 v21;
  void *v22;
  void *v23;
  id v24;

  v6 = a4;
  v7 = (id *)(a1 + 32);
  v8 = a2;
  WeakRetained = objc_loadWeakRetained(v7);
  v24 = v6;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[MusicCarPlayManager sharedManager](MusicCarPlayManager, "sharedManager"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "nowPlayingContentManager"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "currentPlayingSong"));

  if (v12)
  {
    v13 = objc_msgSend(WeakRetained, "storeContent");
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "identifiers"));
    v15 = v14;
    if (v13)
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "universalStore"));
      v17 = objc_msgSend(v16, "adamID");
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "identifiers"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "universalStore"));
      v20 = objc_msgSend(v19, "adamID");
    }
    else
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "library"));
      v17 = objc_msgSend(v16, "persistentID");
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "identifiers"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "library"));
      v20 = objc_msgSend(v19, "persistentID");
    }
    v21 = v17 == v20;

  }
  else
  {
    v21 = 0;
  }
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "album"));
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contentManager"));
  objc_msgSend(v8, "configureWithAlbumTrack:currentlyPlaying:album:contentAvailable:", v24, v21, v22, objc_msgSend(v23, "itemIsPlayable:", v24));

}

void sub_100038AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100038AD4(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_showLoadingScreen");
    WeakRetained = v2;
  }

}

void sub_100038C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100038F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100038F78(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id WeakRetained;
  void *v9;
  _QWORD v10[5];
  id v11;
  _QWORD *v12;
  _QWORD v13[5];
  _QWORD v14[4];

  v5 = a2;
  v6 = a3;
  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x2020000000;
  v14[3] = 0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "results"));
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1000390B4;
  v13[3] = &unk_1010A9760;
  v13[4] = v14;
  objc_msgSend(v7, "enumerateItemsUsingBlock:", v13);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v9 = WeakRetained;
  if (WeakRetained)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1000390EC;
    v10[3] = &unk_1010A9788;
    v10[4] = WeakRetained;
    v11 = *(id *)(a1 + 32);
    v12 = v14;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

  }
  _Block_object_dispose(v14, 8);

}

void sub_10003909C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double sub_1000390B4(uint64_t a1, void *a2)
{
  uint64_t v3;
  double v4;
  double result;

  objc_msgSend(a2, "duration");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  result = v4 + *(double *)(v3 + 24);
  *(double *)(v3 + 24) = result;
  return result;
}

void sub_1000390EC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "album"));
  v3 = *(void **)(a1 + 40);

  if (v2 == v3)
  {
    objc_msgSend(*(id *)(a1 + 32), "setAlbumDuration:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    objc_msgSend(v4, "reloadData");

  }
}

void sub_100039364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void sub_10003976C(id a1, MCDAlbumsDetailTableHeaderView *a2, UIImage *a3)
{
  if (a3)
    -[MCDAlbumsDetailTableHeaderView setArtworkImage:](a2, "setArtworkImage:");
  else
    -[MCDAlbumsDetailTableHeaderView setTemplateArtworkImage:](a2, "setTemplateArtworkImage:");
}

void sub_10003977C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentManager"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "playbackManager"));
  v3 = *(_QWORD *)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "lastReceivedResponse"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "combinedPlayActivityFeatureName"));
  objc_msgSend(v2, "initiatePlaybackForAlbum:lastResponse:shuffled:playActivityFeatureName:", v3, v5, 1, v6);

}

void sub_100039ADC(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "titleViewLabel"));
  objc_msgSend(v2, "setAlpha:", v1);

}

uint64_t sub_100039DF0()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1011ECED0)
  {
    v4 = off_1010A9860;
    v5 = 0;
    qword_1011ECED0 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1011ECED0;
  v1 = v3;
  if (!qword_1011ECED0)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

Class sub_100039EA0(uint64_t a1)
{
  Class result;
  uint64_t v3;

  sub_100039DF0();
  result = objc_getClass("MCDLoadingContentView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECED8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = sub_100DE973C();
    return (Class)sub_100039EF4(v3);
  }
  return result;
}

MCDPlaybackManager *sub_100039EF4(uint64_t a1)
{
  MCDPlaybackManager *result;
  MCDPlaybackManager *v3;
  SEL v4;
  id v5;

  sub_100039DF0();
  result = (MCDPlaybackManager *)objc_getClass("MCDErrorLoadingView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1011ECEE8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (MCDPlaybackManager *)sub_100DE9760();
    return -[MCDPlaybackManager initWithDelegate:](v3, v4, v5);
  }
  return result;
}

uint64_t sub_10003A094(uint64_t result, uint64_t a2)
{
  if (a2)
    return (*(uint64_t (**)(void))(*(_QWORD *)(result + 32) + 16))();
  return result;
}

void sub_10003A154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003A170(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10003A214;
  v5[3] = &unk_1010A8E28;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_10003A214(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  void *v7;
  char v8;
  id v9;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32);
  v9 = WeakRetained;
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  v5 = (void *)v4;
  if (v3)
  {
    v6 = objc_opt_respondsToSelector(v4, "playbackManager:shouldShowError:");

    if ((v6 & 1) != 0)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "delegate"));
      objc_msgSend(v7, "playbackManager:shouldShowError:", v9, *(_QWORD *)(a1 + 32));
LABEL_6:

    }
  }
  else
  {
    v8 = objc_opt_respondsToSelector(v4, "playbackManagerShouldShowNowPlaying:");

    if ((v8 & 1) != 0)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "delegate"));
      objc_msgSend(v7, "playbackManagerShouldShowNowPlaying:", v9);
      goto LABEL_6;
    }
  }

}

void sub_10003A614(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = objc_msgSend(objc_alloc((Class)MPModelAlbum), "initWithIdentifiers:block:", v4, &stru_1010A98E8);

  objc_msgSend(*(id *)(a1 + 32), "addObject:", v5);
}

id sub_10003AFAC()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  _Unwind_Exception *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (uint64_t (*)(void))off_1011ECF00;
  v8 = off_1011ECF00;
  if (!off_1011ECF00)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10003C140;
    v4[3] = &unk_1010A89D8;
    v4[4] = &v5;
    sub_10003C140((uint64_t)v4);
    v0 = (uint64_t (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v3);
  }
  v1 = v0();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

void sub_10003B068(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *(void **)(a1 + 32);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "tracklist"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "resetCommand"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "replaceWithPlaybackIntent:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v3, "performPlaybackRequestWithCommand:", v5);

}

void sub_10003B244(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *(void **)(a1 + 32);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "tracklist"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "resetCommand"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "replaceWithPlaybackIntent:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v3, "performPlaybackRequestWithCommand:", v5);

}

void sub_10003B704(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *(void **)(a1 + 32);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "tracklist"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "resetCommand"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "replaceWithPlaybackIntent:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v3, "performPlaybackRequestWithCommand:", v5);

}

id sub_10003B888(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "results"));
  v4 = (uint64_t)objc_msgSend(v3, "totalItemCount");

  v5 = *(_QWORD *)(a1 + 32);
  if (v4 < 1)
    return objc_msgSend(*(id *)(a1 + 56), "_initiatePlaybackForItem:shouldShuffle:playActivityFeatureName:", v5, *(unsigned __int8 *)(a1 + 64), *(_QWORD *)(a1 + 48));
  v6 = *(unsigned __int8 *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v10.receiver = *(id *)(a1 + 56);
  v10.super_class = (Class)MCDStorePlaybackManager;
  return objc_msgSendSuper2(&v10, "initiatePlaybackForPlaylist:lastResponse:shuffled:playActivityFeatureName:", v5, v7, v6, v8);
}

void sub_10003BA04(_QWORD *a1, void *a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = a1[4];
  v4 = a2;
  v9 = (id)objc_claimAutoreleasedReturnValue(+[MPCPlaybackIntent radioPlaybackIntentWithStation:](MPCPlaybackIntent, "radioPlaybackIntentWithStation:", v3));
  objc_msgSend(v9, "setPlayActivityFeatureName:", a1[5]);
  v5 = (void *)a1[6];
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "tracklist"));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "resetCommand"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "replaceWithPlaybackIntent:", v9));
  objc_msgSend(v5, "performPlaybackRequestWithCommand:", v8);

}

void sub_10003BBB0(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v3 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6 = a2;
  v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_setupPlaybackIntentForContentItem:shouldShuffle:", v4, v5));
  objc_msgSend(v10, "setPlayActivityFeatureName:", *(_QWORD *)(a1 + 48));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "tracklist"));

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "resetCommand"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "replaceWithPlaybackIntent:", v10));

  objc_msgSend(*(id *)(a1 + 32), "performPlaybackRequestWithCommand:", v9);
}

void *sub_10003C140(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECF08)
  {
    v6 = off_1010A99D0;
    v7 = 0;
    qword_1011ECF08 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECF08;
    if (qword_1011ECF08)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECF08;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECF00 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10003C480(id a1, UITableViewCell *a2, MPModelObject *a3, MPModelObject *a4, UITableView *a5, NSIndexPath *a6)
{
  UITableViewCell *v10;
  MPModelObject *v11;
  MPModelObject *v12;
  UITableView *v13;
  NSIndexPath *v14;
  MPModelObject *v15;
  uint64_t (*v16)(MPModelObject *);
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  MPModelObject *v23;
  void *v24;
  NSIndexPath *v25;
  UITableView *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  _Unwind_Exception *v48;
  unsigned int v49;
  void *v50;
  UITableViewCell *v51;
  NSIndexPath *v52;
  _QWORD v53[5];
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  void *v57;

  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = a5;
  v14 = a6;
  v15 = v12;
  v54 = 0;
  v55 = &v54;
  v56 = 0x2020000000;
  v16 = (uint64_t (*)(MPModelObject *))off_1011ECF10;
  v57 = off_1011ECF10;
  if (!off_1011ECF10)
  {
    v53[0] = _NSConcreteStackBlock;
    v53[1] = 3221225472;
    v53[2] = sub_10003CA20;
    v53[3] = &unk_1010A89D8;
    v53[4] = &v54;
    sub_10003CA20((uint64_t)v53);
    v16 = (uint64_t (*)(MPModelObject *))v55[3];
  }
  _Block_object_dispose(&v54, 8);
  if (!v16)
  {
    v48 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v54, 8);
    _Unwind_Resume(v48);
  }
  v17 = v16(v15);
  v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

  v19 = objc_opt_class(MPModelAlbum);
  if ((objc_opt_isKindOfClass(v18, v19) & 1) != 0)
  {
    v20 = v18;
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "identifiers"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(+[MusicCarPlayManager sharedManager](MusicCarPlayManager, "sharedManager"));
    v51 = v10;
    v23 = v11;
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "nowPlayingContentManager"));
    v25 = v14;
    v26 = v13;
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "currentPlayingSong"));
    v50 = v18;
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "album"));
    v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "identifiers"));
    v49 = objc_msgSend(v21, "intersectsSet:", v29);

    v13 = v26;
    v14 = v25;

    v11 = v23;
    v10 = v51;

    v30 = (void *)objc_claimAutoreleasedReturnValue(-[UITableView window](v13, "window"));
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "screen"));
    objc_msgSend(v31, "scale");
    -[UITableViewCell configureWithAlbum:currentlyPlaying:artworkScale:](v51, "configureWithAlbum:currentlyPlaying:artworkScale:", v20, v49);

    v18 = v50;
    if (objc_msgSend(v20, "trackCount") != (id)1)
    {
LABEL_13:

      goto LABEL_14;
    }
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "representativeSong"));
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "title"));
    v34 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell textLabel](v51, "textLabel"));
    objc_msgSend(v34, "setText:", v33);
    goto LABEL_11;
  }
  v35 = objc_opt_class(MPModelPlaylist);
  if ((objc_opt_isKindOfClass(v18, v35) & 1) != 0)
  {
    v52 = v14;
    v36 = v18;
    v37 = v18;
    v38 = (void *)objc_claimAutoreleasedReturnValue(+[MusicCarPlayManager sharedManager](MusicCarPlayManager, "sharedManager"));
    v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "nowPlayingContentManager"));
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "currentPlayingPlaylist"));

    v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "identifiers"));
    v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "identifiers"));
    v42 = objc_msgSend(v40, "intersectsSet:", v41);

    v43 = (void *)objc_claimAutoreleasedReturnValue(-[UITableView window](v13, "window"));
    v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "screen"));
    objc_msgSend(v44, "scale");
    -[UITableViewCell configureWithPlaylist:currentlyPlaying:artworkScale:showCurator:](v10, "configureWithPlaylist:currentlyPlaying:artworkScale:showCurator:", v37, v42, 1);

    v45 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell detailTextLabel](v10, "detailTextLabel"));
    v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "text"));

    if (v46)
    {
      v14 = v52;
      v18 = v36;
LABEL_12:

      goto LABEL_13;
    }
    v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "localizedStringForKey:value:table:", CFSTR("Playlist"), &stru_101122068, 0));
    v47 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell detailTextLabel](v10, "detailTextLabel"));
    objc_msgSend(v47, "setText:", v34);

    v14 = v52;
    v18 = v36;
LABEL_11:

    goto LABEL_12;
  }
LABEL_14:

}

void *sub_10003CA20(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECF18)
  {
    v6 = off_1010A9A08;
    v7 = 0;
    qword_1011ECF18 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECF18;
    if (qword_1011ECF18)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECF18;
LABEL_5:
  result = dlsym(v2, "MCDMPModelObjectForGenericObject");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECF10 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id sub_10003CCF4()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  _Unwind_Exception *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (uint64_t (*)(void))off_1011ECF20;
  v8 = off_1011ECF20;
  if (!off_1011ECF20)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10003E204;
    v4[3] = &unk_1010A89D8;
    v4[4] = &v5;
    sub_10003E204((uint64_t)v4);
    v0 = (uint64_t (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_100DE9368();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v3);
  }
  v1 = v0();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

void **sub_10003E0F4(void **result, void *a2)
{
  if (result[4] == a2)
    return (void **)objc_msgSend(a2, "setImage:");
  return result;
}

void *sub_10003E204(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECF28)
  {
    v6 = off_1010A9A48;
    v7 = 0;
    qword_1011ECF28 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECF28;
    if (qword_1011ECF28)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECF28;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECF20 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10003E8B0(id a1, UITableViewCell *a2, MPModelObject *a3, MPModelObject *a4, UITableView *a5, NSIndexPath *a6)
{
  UITableViewCell *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  MPModelObject *v14;

  v14 = a4;
  v7 = a2;
  v8 = (void *)objc_claimAutoreleasedReturnValue(-[MPModelObject title](v14, "title"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell textLabel](v7, "textLabel"));
  objc_msgSend(v9, "setText:", v8);

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor _labelColor](UIColor, "_labelColor"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell textLabel](v7, "textLabel"));
  objc_msgSend(v11, "setTextColor:", v10);

  v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor _carSystemFocusLabelColor](UIColor, "_carSystemFocusLabelColor"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell textLabel](v7, "textLabel"));
  objc_msgSend(v13, "setHighlightedTextColor:", v12);

  -[UITableViewCell setAccessoryView:](v7, "setAccessoryView:", 0);
  -[UITableViewCell setAccessoryType:](v7, "setAccessoryType:", 1);

}

void *sub_10003EA98(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1011ECF38)
  {
    v6 = off_1010A9A80;
    v7 = 0;
    qword_1011ECF38 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1011ECF38;
    if (qword_1011ECF38)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1011ECF38;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1011ECF30 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id sub_10003F9C4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_setRequestType:", *(_QWORD *)(a1 + 40));
}

void sub_10003FABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10003FAD4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "_requestType");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_10003FE6C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *i;
  void *v13;
  void *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v5 = a2;
  v6 = a3;
  if ((objc_msgSend(*(id *)(a1 + 32), "isCancelled") & 1) == 0)
  {
    if (v6)
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 80) + 16))();
    }
    else if (objc_msgSend(v5, "isFinalResponse"))
    {
      v7 = objc_msgSend(objc_alloc((Class)MPStoreModelPlaylistBuilder), "initWithRequestedPropertySet:", *(_QWORD *)(a1 + 40));
      v16 = 0u;
      v17 = 0u;
      v18 = 0u;
      v19 = 0u;
      v8 = *(id *)(a1 + 48);
      v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v17;
        do
        {
          for (i = 0; i != v10; i = (char *)i + 1)
          {
            if (*(_QWORD *)v17 != v11)
              objc_enumerationMutation(v8);
            v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "storeItemMetadataForItemIdentifier:", *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i)));
            if (v13)
            {
              v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userIdentity"));
              v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "modelObjectWithStoreItemMetadata:userIdentity:", v13, v14));

              if (v15)
              {
                objc_msgSend(*(id *)(a1 + 56), "appendItem:", v15);

              }
            }

          }
          v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
        }
        while (v10);
      }

      objc_msgSend(*(id *)(a1 + 64), "setResults:", *(_QWORD *)(a1 + 56));
      objc_msgSend(*(id *)(a1 + 64), "setAdditionalPlaylistIdentifiers:", *(_QWORD *)(a1 + 72));
      (*(void (**)(void))(*(_QWORD *)(a1 + 80) + 16))();

      v6 = 0;
    }
  }

}

id sub_100040444(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "setInsertedItemIndexPaths:", *(_QWORD *)(a1 + 32));
}

void sub_100040470()
{
  uint64_t v0;
  uint64_t *v1;
  int v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  NSObject *oslog;
  uint64_t v18;
  uint64_t v19;

  v1 = (uint64_t *)v0;
  v2 = *(unsigned __int8 *)(v0 + 32);
  switch(v2)
  {
    case 1:
      KeyPath = swift_getKeyPath(&unk_100EA6260);
      v4 = sub_100007E8C(&qword_10119D2D0);
      v5 = KeyPath;
      v6 = 0;
      goto LABEL_7;
    case 2:
      v7 = swift_getKeyPath(&unk_100EA6210);
      v8 = sub_100007E8C(&qword_10119D2D0);
      MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v7, 0, v8);
      swift_release(v7);
      v5 = swift_getKeyPath(&unk_100EA6238);
      KeyPath = v5;
      v6 = 0;
      v4 = v8;
      goto LABEL_7;
    case 3:
      KeyPath = swift_getKeyPath(&unk_100EA6238);
      v4 = sub_100007E8C(&qword_10119D2D0);
      v5 = KeyPath;
      v6 = 1;
LABEL_7:
      MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v5, v6, v4);
      swift_release(KeyPath);
      return;
  }
  if (qword_10119C028 != -1)
    swift_once(&qword_10119C028, sub_10046477C);
  v9 = type metadata accessor for Logger(0);
  sub_100048B14(v9, (uint64_t)static Logger.libraryView);
  sub_100048B2C((_QWORD *)v0);
  v10 = sub_100048B2C((_QWORD *)v0);
  oslog = Logger.logObject.getter(v10);
  v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(oslog, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v19 = v13;
    *(_DWORD *)v12 = 136446210;
    LOBYTE(v18) = v2;
    v14 = String.init<A>(describing:)(&v18, &_s11ContentSortV6OptionON);
    v16 = v15;
    v18 = sub_100322200(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    swift_bridgeObjectRelease(v16);
    sub_100048B98(v1);
    sub_100048B98(v1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Tried to apply unhandled sortOption=%{public}s to movies request.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {
    sub_100048B98((uint64_t *)v0);
    sub_100048B98((uint64_t *)v0);

  }
}

uint64_t sub_10004072C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryMusicMovieSortProperties.title.getter, a2);
}

uint64_t sub_100040738@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryMusicMovieSortProperties.libraryAddedDate.getter, a2);
}

uint64_t sub_100040744@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryMusicMovieSortProperties.releaseDate.getter, a2);
}

uint64_t sub_100040750@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v5 = a1[3];
  v6 = a1[4];
  sub_100007E68(a1, v5);
  result = a2(v5, v6);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t sub_1000407A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v22[5];
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v5 = sub_100007E8C(&qword_10119D2D0);
  __chkstk_darwin(v5);
  v29 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C(&qword_10119D3A0);
  __chkstk_darwin(v28);
  v27 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - v10;
  v31 = v5;
  *(_QWORD *)&v32 = sub_100049F28(&qword_10119D388, &qword_10119D2D0, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  sub_100049F68(&v30);
  v12 = type metadata accessor for TitledSection(0);
  v13 = type metadata accessor for MusicMovie(0);
  v14 = sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  v26 = v12;
  v25 = v14;
  MusicLibrarySectionedRequest.init()(v12, v13, &protocol witness table for TitledSection, v14);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v15, v5);
  v16 = *(unsigned __int8 *)(v2 + 8);
  v24 = *(unsigned __int8 *)(v2 + 8);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v16, v5);
  v17._object = *(void **)(v2 + 24);
  v23 = *(_QWORD *)(v2 + 16);
  v17._countAndFlagsBits = v23;
  v22[4] = v17._object;
  MusicLibrarySectionedRequest.filterItems(text:)(v17);
  sub_100040470();
  sub_10004A160(a1, (uint64_t)v11, &qword_10119D3A0);
  v18 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v13) == 1)
  {
    sub_100049FA4((uint64_t)v11);
    v33 = 0u;
    v34 = 0u;
    v35 = 0;
  }
  else
  {
    *((_QWORD *)&v34 + 1) = v13;
    v35 = sub_100048748(&qword_10119D3A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
    v19 = sub_100049F68(&v33);
    (*(void (**)(_QWORD *, char *, uint64_t))(v18 + 32))(v19, v11, v13);
  }
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(&v30, &v33);
  v20 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 0, 1, v20);
}

uint64_t sub_100040E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  Swift::String v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[5];
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD v32[6];
  _OWORD v33[2];
  uint64_t v34;

  v3 = v2;
  v29 = a2;
  v5 = type metadata accessor for MusicMovie(0);
  v25[4] = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v25[3] = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119D2D0);
  v31 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v25[1] = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v25 - v10;
  v12 = type metadata accessor for TitledSection(0);
  v28 = v12;
  v27 = sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  MusicLibrarySectionedRequest.init()(v12, v5, &protocol witness table for TitledSection, v27);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v13, v7);
  v14 = *(unsigned __int8 *)(v3 + 8);
  v26 = *(unsigned __int8 *)(v3 + 8);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v14, v7);
  v15 = *(_QWORD *)(v3 + 16);
  v16 = *(void **)(v3 + 24);
  v17._countAndFlagsBits = v15;
  v17._object = v16;
  MusicLibrarySectionedRequest.filterItems(text:)(v17);
  sub_100040470();
  KeyPath = swift_getKeyPath(&unk_100EA6288);
  v25[2] = a1;
  v32[0] = MusicMovie.id.getter(KeyPath);
  v32[1] = v19;
  v30 = v11;
  MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(KeyPath, v32, v7, &protocol witness table for MusicItemID);
  swift_bridgeObjectRelease();
  swift_release();
  v32[3] = v7;
  v32[4] = sub_100049F28(&qword_10119D388, &qword_10119D2D0, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  sub_100049F68(v32);
  MusicLibrarySectionedRequest.init()(v28, v5, &protocol witness table for TitledSection, v27);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v20, v7);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v26, v7);
  v21._countAndFlagsBits = v15;
  v21._object = v16;
  v22 = v29;
  MusicLibrarySectionedRequest.filterItems(text:)(v21);
  sub_100040470();
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(v32, v33);
  v23 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v30, v7);
}

void sub_1000414EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = type metadata accessor for MusicLibrary(0);
  v5 = sub_100048748((unint64_t *)&qword_10119D2D8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
  Hasher._combine(_:)(*(_BYTE *)(v1 + 8) & 1);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  __asm { BR              X10 }
}

uint64_t sub_1000415D4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease(0x8000000100E2B550);
  Hasher._combine(_:)(v2 & 1);
  return ((uint64_t (*)())((char *)sub_1000416B0 + 4 * byte_100EA5597[*(unsigned __int8 *)(v1 + 34)]))();
}

uint64_t sub_1000416B0()
{
  __int128 *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease(0x8000000100E2B550);
  Hasher._combine(_:)(v1 & 1);
  v3 = *(_QWORD *)(v2 + 40);
  v4 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  String.hash(into:)(v0, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(v2 + 56);
  swift_bridgeObjectRetain();
  sub_100045DAC(v0, v5);
  swift_bridgeObjectRelease(v5);
  v6 = *(unsigned __int8 *)(v2 + 64);
  if ((_DWORD)v6 != 7)
  {
    Hasher._combine(_:)(1u);
    __asm { BR              X9 }
  }
  Hasher._combine(_:)(0);
  v7 = *(_QWORD *)(v2 + 72);
  v8 = *(_QWORD *)(v2 + 80);
  swift_bridgeObjectRetain();
  String.hash(into:)(v0, v7, v8);
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(v2 + 88);
  swift_bridgeObjectRetain();
  sub_100046164((uint64_t)v0, v9);
  return swift_bridgeObjectRelease(v9);
}

void sub_100041914()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  Swift::String v6;

  v5 = *v0;
  v6 = (Swift::String)v0[1];
  v1 = type metadata accessor for TitledSection(0);
  v2 = type metadata accessor for MusicMovie(0);
  v3 = sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  MusicLibrarySectionedRequest.init()(v1, v2, &protocol witness table for TitledSection, v3);
  swift_retain(v5);
  v4 = sub_100007E8C(&qword_10119D2D0);
  MusicLibrarySectionedRequest.library.setter(v5, v4);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(BYTE8(v5), v4);
  MusicLibrarySectionedRequest.filterItems(text:)(v6);
  sub_100040470();
}

Swift::Int sub_1000419F8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1000414EC((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100041A38(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1000414EC((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100041A70(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[6];
  _OWORD v10[6];

  v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_1000466AC((uint64_t)v9, (uint64_t)v10) & 1;
}

uint64_t static MPCPlayerRequestTracklistRange.nowPlayingItem.getter()
{
  return 0;
}

uint64_t static MPMediaLibraryFilteringOptions.none.getter()
{
  return 0;
}

unint64_t sub_100041ADC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D1F8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10004A160(v7, (uint64_t)&v16, &qword_10119D200);
    v8 = v16;
    v9 = v17;
    result = sub_10079C2C4(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_100048ABC(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100041C10(uint64_t a1)
{
  return sub_100043490(a1, &qword_1011AD4E0, &qword_10119D350, (uint64_t (*)(uint64_t))sub_10079C328);
}

unint64_t sub_100041C2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v18 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v18);
    return (unint64_t)v4;
  }
  sub_100007E8C(&qword_10119D218);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    goto LABEL_9;
  v6 = v3 + 64;
  v19 = a1;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10004A160(v7, (uint64_t)&v20, (uint64_t *)&unk_10119D220);
    v8 = v20;
    v9 = v21;
    v10 = v22;
    v11 = v23;
    result = sub_10079C32C(v20, v21, v22, v23);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v14 = (uint64_t *)(v4[6] + 32 * result);
    *v14 = v8;
    v14[1] = v9;
    v14[2] = v10;
    v14[3] = v11;
    result = sub_100048ACC((uint64_t)&v24, v4[7] + 8 * result);
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_12;
    v4[2] = v17;
    v7 += 40;
    if (!--v5)
    {
      swift_release(v4);
      v18 = v19;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100041D74(uint64_t a1)
{
  return sub_10004207C(a1, &qword_10119D210);
}

unint64_t sub_100041D80(uint64_t a1)
{
  return sub_10004207C(a1, &qword_10119D208);
}

unint64_t sub_100041D8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_100007E8C(&qword_10119D1D8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  sub_100007E8C(&qword_10119D1E0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10004A160(v13, (uint64_t)v5, &qword_10119D1D8);
    result = sub_10079C3DC((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for EditorialVideoArtworkFlavor(0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = v8[7];
    v21 = type metadata accessor for VideoArtwork(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v17, v10, v21);
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100041F44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C((uint64_t *)&unk_10119D260);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_10079C2C4(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100042064(uint64_t a1)
{
  return sub_10004207C(a1, &qword_10119D238);
}

unint64_t sub_100042070(uint64_t a1)
{
  return sub_10004207C(a1, &qword_10119D230);
}

unint64_t sub_10004207C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain();
    swift_retain(v10);
    result = sub_10079C1D4(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100042190(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D240);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10004A160(v7, (uint64_t)&v16, &qword_10119D248);
    v8 = v16;
    v9 = v17;
    result = sub_10079C1D4(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_100048ABC(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000422C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D1E8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 48);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 2);
    v8 = (uint64_t)*(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    v10 = v9;
    result = sub_10079C2C4(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v10;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000423DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C((uint64_t *)&unk_10119D250);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10004A160(v7, (uint64_t)v16, &qword_1011E7760);
    result = sub_10079C294((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_100048ABC(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004251C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D5A0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    result = sub_10079C2C4(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004262C(uint64_t a1)
{
  return sub_100042AA4(a1, (uint64_t *)&unk_10119D370);
}

unint64_t sub_100042638(uint64_t a1)
{
  return sub_100042AA4(a1, &qword_10119D368);
}

unint64_t sub_100042644(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D8E8);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v6 = *((_QWORD *)v5 - 2);
    v7 = *((_QWORD *)v5 - 1);
    v14 = *v5;
    swift_bridgeObjectRetain();
    result = sub_10079C2C4(v6, v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v3[6] + 16 * result);
    *v10 = v6;
    v10[1] = v7;
    *(_OWORD *)(v3[7] + 16 * result) = v14;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100042760(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D428);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *(v5 - 1);
    v6 = *v5;
    sub_10004A06C(v7);
    swift_bridgeObjectRetain();
    result = sub_10079C5FC(v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100042868(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C((uint64_t *)&unk_10119D460);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 2);
    v8 = *((_QWORD *)v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    result = sub_10079C2C4(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_BYTE *)(v4[7] + result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 24;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100042978(uint64_t a1)
{
  return sub_100043C8C(a1, &qword_10119D588, (uint64_t (*)(id))sub_10079C248);
}

unint64_t sub_10004298C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id *v6;
  char v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D620);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (id *)(a1 + 40);
  while (1)
  {
    v7 = *((_BYTE *)v6 - 8);
    v8 = *v6;
    result = sub_10079C780(v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v4[6] + result) = v7;
    *(_QWORD *)(v4[7] + 8 * result) = v8;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100042A8C(uint64_t a1)
{
  return sub_100042E80(a1, &qword_10119D580);
}

unint64_t sub_100042A98(uint64_t a1)
{
  return sub_100042AA4(a1, &qword_10119D578);
}

unint64_t sub_100042AA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_10079C2C4(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100042BB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_100007E8C(&qword_10119D5F0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v24 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v24);
    return (unint64_t)v8;
  }
  sub_100007E8C(&qword_10119D5F8);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10004A160(v13, (uint64_t)v5, &qword_10119D5F0);
    v15 = *v5;
    result = sub_10079C8AC(*v5);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v8[6] + result) = v15;
    v19 = v8[7];
    v20 = type metadata accessor for DisplayRepresentation(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v10, v20);
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_12;
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v24 = v26;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100042D50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D3C0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    swift_unknownObjectRetain(v7, v9);
    result = sub_10079C328(v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v8;
    *(_QWORD *)(v4[7] + v12) = v7;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100042E58(uint64_t a1)
{
  return sub_10004402C(a1, &qword_10119D5E0, &qword_10119D5E8, sub_10079C934);
}

unint64_t sub_100042E74(uint64_t a1)
{
  return sub_100042E80(a1, &qword_1011A8F80);
}

unint64_t sub_100042E80(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_10079C1D4(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100042F94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C((uint64_t *)&unk_10119D490);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 2);
    v8 = *((_QWORD *)v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    result = sub_10079C1D4(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_BYTE *)(v4[7] + result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 24;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000430A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C((uint64_t *)&unk_10119D340);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    result = sub_10079C1D4(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000431B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D4A0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_10079C1D4(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000432D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_100007E8C(&qword_10119D560);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  sub_100007E8C(&qword_10119D568);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10004A160(v13, (uint64_t)v5, &qword_10119D560);
    v15 = *v5;
    v16 = v5[1];
    result = sub_10079C1D4(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for Album(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100043474(uint64_t a1)
{
  return sub_100043490(a1, &qword_10119D4C0, &qword_10119D4C8, sub_10079C328);
}

unint64_t sub_100043490(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_10004A160(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_100048ABC(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000435B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_100007E8C(&qword_10119D4D8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_100007E8C(&qword_10119D4E0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10004A160(v13, (uint64_t)v5, &qword_10119D4D8);
    result = sub_10079C5A4((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for SidebarMenu.Item(0);
    result = sub_10004A0B4((uint64_t)v5, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100043744(uint64_t a1)
{
  return sub_100043490(a1, &qword_10119D610, &qword_10119D618, sub_10079C328);
}

unint64_t sub_100043760(uint64_t a1)
{
  return sub_100043490(a1, &qword_10119D600, &qword_10119D608, sub_10079C328);
}

unint64_t sub_10004377C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C((uint64_t *)&unk_1011C5BC0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_10079C2C4(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100043894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_100007E8C(&qword_10119D438);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_100007E8C((uint64_t *)&unk_10119D440);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10004A160(v13, (uint64_t)v5, &qword_10119D438);
    result = sub_10079CA8C((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for IndexPath(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

void sub_100043A28(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  char v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2
    && (sub_100007E8C(&qword_10119D4D0),
        v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2),
        (v4 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v5 = (_OWORD *)(a1 + 40);
    while (1)
    {
      v6 = *((_BYTE *)v5 - 8);
      v12 = *v5;
      swift_retain();
      swift_retain();
      sub_10079C474(v6);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      *(_BYTE *)(v3[6] + v7) = v6;
      *(_OWORD *)(v3[7] + 16 * v7) = v12;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      v5 = (_OWORD *)((char *)v5 + 24);
      if (!--v4)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease(a1);
  }
}

unint64_t sub_100043B44(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D418);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (_BYTE *)(a1 + 56);
  while (1)
  {
    v6 = *((_QWORD *)v5 - 3);
    v7 = *((_QWORD *)v5 - 2);
    v8 = *((_QWORD *)v5 - 1);
    v9 = *v5;
    swift_bridgeObjectRetain();
    result = sub_10079C1D4(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    v13 = v3[7] + 16 * result;
    *(_QWORD *)v13 = v8;
    *(_BYTE *)(v13 + 8) = v9;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v3[2] = v16;
    v5 += 32;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100043C64(uint64_t a1)
{
  return sub_1000442F0(a1, &qword_10119D4B8, (uint64_t (*)(id))sub_10079C248);
}

unint64_t sub_100043C78(uint64_t a1)
{
  return sub_100043C8C(a1, &qword_10119D5D8, (uint64_t (*)(id))sub_10079CBD4);
}

unint64_t sub_100043C8C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(a2);
  v6 = static _DictionaryStorage.allocate(capacity:)(v4);
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v7;
  }
  swift_retain(v6);
  v9 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v10 = *v9;
    v11 = (id)*(v9 - 1);
    swift_bridgeObjectRetain();
    result = a3(v11);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = 8 * result;
    *(_QWORD *)(v7[6] + v14) = v11;
    *(_QWORD *)(v7[7] + v14) = v10;
    v15 = v7[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v7[2] = v17;
    v9 += 2;
    if (!--v8)
    {
      swift_release(v7);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100043D9C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  unsigned __int8 v6;
  char v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D4B0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (char *)(a1 + 40);
  while (1)
  {
    v6 = *(v5 - 8);
    v7 = *v5;
    v15 = *(_OWORD *)(v5 + 8);
    v16 = *(_OWORD *)(v5 + 24);
    v8 = *((_QWORD *)v5 + 5);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    result = sub_10079CB24(v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v6;
    v11 = v3[7] + 48 * result;
    *(_BYTE *)v11 = v7;
    *(_OWORD *)(v11 + 8) = v15;
    *(_OWORD *)(v11 + 24) = v16;
    *(_QWORD *)(v11 + 40) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100043EEC(uint64_t a1)
{
  return sub_100043490(a1, &qword_10119D3E8, (uint64_t *)&unk_10119D3F0, sub_10079C328);
}

void sub_100043F08(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  char v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2
    && (sub_100007E8C((uint64_t *)&unk_10119D480),
        v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2),
        (v4 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v5 = (_OWORD *)(a1 + 40);
    while (1)
    {
      v6 = *((_BYTE *)v5 - 8);
      v12 = *v5;
      sub_10079C474(v6);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      *(_BYTE *)(v3[6] + v7) = v6;
      *(_OWORD *)(v3[7] + 16 * v7) = v12;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      v5 = (_OWORD *)((char *)v5 + 24);
      if (!--v4)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_100044010(uint64_t a1)
{
  return sub_10004402C(a1, &qword_10119D5C0, &qword_10119D5C8, (uint64_t (*)(_QWORD))sub_10079CC04);
}

unint64_t sub_10004402C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);

  v31 = a4;
  v7 = sub_100007E8C(a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
    v13 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v29 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v29);
    return (unint64_t)v13;
  }
  sub_100007E8C(a3);
  v12 = static _DictionaryStorage.allocate(capacity:)(v11);
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    goto LABEL_9;
  v15 = &v10[*(int *)(v7 + 48)];
  v16 = v12 + 64;
  v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v30 = a1;
  v18 = a1 + v17;
  v19 = *(_QWORD *)(v8 + 72);
  swift_retain(v12);
  while (1)
  {
    sub_10004A160(v18, (uint64_t)v10, a2);
    v20 = *v10;
    result = v31(*v10);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v13[6] + result) = v20;
    v24 = v13[7];
    v25 = type metadata accessor for DisplayRepresentation(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v15, v25);
    v26 = v13[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_12;
    v13[2] = v28;
    v18 += v19;
    if (!--v14)
    {
      swift_release(v13);
      v29 = v30;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1000441C4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_10119D3C8);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_10079C1D4(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000442DC(uint64_t a1)
{
  return sub_1000442F0(a1, (uint64_t *)&unk_1011CE790, (uint64_t (*)(id))sub_10079CCB8);
}

unint64_t sub_1000442F0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  void **v8;
  void *v9;
  id v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    v6 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(a2);
  v6 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v4);
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v6;
  }
  swift_retain();
  v8 = (void **)(a1 + 40);
  while (1)
  {
    v9 = *v8;
    v10 = *(v8 - 1);
    v11 = v9;
    result = a3(v10);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = 8 * result;
    *(_QWORD *)(v6[6] + v14) = v10;
    *(_QWORD *)(v6[7] + v14) = v11;
    v15 = v6[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6[2] = v17;
    v8 += 2;
    if (!--v7)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100044400(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C((uint64_t *)&unk_10119D3B0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    swift_retain();
    result = sub_10079CCB8((uint64_t)v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100044508(uint64_t a1)
{
  return sub_10004402C(a1, &qword_10119D5A8, &qword_10119D5B0, (uint64_t (*)(_QWORD))sub_10079CD04);
}

void sub_100044524(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_10004456C(uint64_t a1)
{
  uint64_t v1;

  ((void (*)(uint64_t, uint64_t, unint64_t))String.hash(into:))(a1, v1 - 12, 0x8000000100E2B240);
  return ((uint64_t (*)(unint64_t))swift_bridgeObjectRelease)(0x8000000100E2B240);
}

void sub_1000445D0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_100044614(uint64_t a1)
{
  ((void (*)(uint64_t, unint64_t, unint64_t))String.hash(into:))(a1, 0xD000000000000010, 0x8000000100E2B550);
  return ((uint64_t (*)(unint64_t))swift_bridgeObjectRelease)(0x8000000100E2B550);
}

uint64_t sub_1000446C8(uint64_t a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;

  v2 = a2;
  if (a2)
  {
    if (a2 == 1)
      v3 = 0xD00000000000001CLL;
    else
      v3 = 0xD000000000000029;
    if (v2 == 1)
      v4 = 0x8000000100E2B610;
    else
      v4 = 0x8000000100E2B630;
  }
  else
  {
    v3 = 0xD00000000000002CLL;
    v4 = 0x8000000100E2B5E0;
  }
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

void sub_100044744(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10004477C(uint64_t a1)
{
  String.hash(into:)(a1, 0x75516C65636E6163, 0xEB00000000797265);
  return swift_bridgeObjectRelease(0xEB00000000797265);
}

void sub_100044830(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_100044868(uint64_t a1)
{
  String.hash(into:)(a1, 0x69536E6565726373, 0xEA0000000000657ALL);
  return swift_bridgeObjectRelease(0xEA0000000000657ALL);
}

uint64_t sub_10004495C(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = 0xD000000000000016;
  if (a2)
  {
    if (a2 == 1)
      v3 = 0xD00000000000001ELL;
    else
      v3 = 0xD000000000000017;
    if (a2 == 1)
      v4 = 0x8000000100E2B6B0;
    else
      v4 = 0x8000000100E2B6D0;
  }
  else
  {
    v4 = 0x8000000100E2B690;
  }
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

void sub_1000449D8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_100044A20(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, v1 + 2, 0x8000000100E2B450);
  return swift_bridgeObjectRelease(0x8000000100E2B450);
}

uint64_t sub_100044A78(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = 0xD00000000000001FLL;
  if (a2)
  {
    if (a2 == 1)
      v4 = 0x8000000100E2AC10;
    else
      v4 = 0x8000000100E2AC30;
  }
  else
  {
    v3 = 0xD000000000000020;
    v4 = 0x8000000100E2ABE0;
  }
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_100044AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for SourcedPlaybackIntent(0, a1, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a4, 1, 1, v5);
}

uint64_t variable initialization expression of PlaybackSelection._pathObserver(uint64_t a1, uint64_t a2)
{
  return sub_100044BB8(a1, a2, (uint64_t *)&unk_10119CBE0, &qword_1011C5B90, (uint64_t)&unk_100EC0A50);
}

uint64_t sub_100044B54(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t variable initialization expression of PlaybackSelection._seguePresentedViewState(uint64_t a1, uint64_t a2)
{
  return sub_100044BB8(a1, a2, &qword_10119CBF8, (unint64_t *)&unk_10119CC00, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
}

uint64_t sub_100044BB8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_100007E8C(a3);
  v9 = sub_100049F28(a4, a3, a5);
  return EnvironmentObject.init()(v8, v9);
}

uint64_t variable initialization expression of PlaybackButton._playbackController()
{
  return swift_getKeyPath(&unk_100EA55D0);
}

uint64_t variable initialization expression of PlaybackSelection._alertViewState(uint64_t a1, uint64_t a2)
{
  return sub_100044BB8(a1, a2, (uint64_t *)&unk_1011B4E40, (unint64_t *)&unk_10119CC10, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
}

uint64_t variable initialization expression of PlaybackButton._rootViewFeatureName()
{
  return swift_getKeyPath(&unk_100EA55F8);
}

uint64_t variable initialization expression of PlaybackButton._recommendationData()
{
  return swift_getKeyPath(&unk_100EA5620);
}

uint64_t variable initialization expression of PlaybackButton._playabilityStatus@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = swift_getKeyPath(&unk_100EA5648);
  v2 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  return swift_storeEnumTagMultiPayload(a1, v2, 0);
}

uint64_t variable initialization expression of UnifiedMessages.Coordinator.serviceType()
{
  return 0x636973756DLL;
}

id variable initialization expression of UnifiedMessages.Coordinator.bag()
{
  id v0;
  NSString v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;

  v0 = objc_allocWithZone((Class)AMSProcessInfo);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithBundleIdentifier:", v1);

  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(AMSBag), "bagForProfile:profileVersion:processInfo:", v3, v4, v2);

  return v5;
}

Swift::Int variable initialization expression of UnifiedMessages.Coordinator.observedPlacements()
{
  return sub_100047E68((uint64_t)&off_1010AA7E0);
}

id variable initialization expression of UnifiedMessages.Coordinator.userDefaults()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;

  v0 = *((_QWORD *)UnifiedMessages.groupDefaultsSuiteName.unsafeMutableAddressor() + 1);
  v1 = objc_allocWithZone((Class)NSUserDefaults);
  swift_bridgeObjectRetain();
  v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v0);
  v3 = objc_msgSend(v1, "initWithSuiteName:", v2);

  return v3;
}

unint64_t variable initialization expression of UnifiedMessages.Coordinator._inlineBubbleTipRequests()
{
  return sub_10004298C((uint64_t)_swiftEmptyArrayStorage);
}

void *variable initialization expression of Library.Context.playlistVariants()
{
  return &_swiftEmptyArrayStorage;
}

void *variable initialization expression of Library.Menu.Request.excludedIdentifiers()
{
  return &_swiftEmptySetSingleton;
}

double variable initialization expression of GroupActivitiesManager.SuggestionProvider.containerItemSuggestion@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t UIViewController.playActivityRecommendationData.getter()
{
  return 0;
}

uint64_t variable initialization expression of SourcedPlaybackIntent.enqueueMode@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a2, a1, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a3, 1, 1, AssociatedTypeWitness);
  v7 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v5, v6);
  return swift_storeEnumTagMultiPayload(a3, v7, 0);
}

uint64_t static MPIdentifierSet.Purpose.Options.catalog.getter()
{
  return 2;
}

uint64_t static MPCPlayerCommandRequest.isAvailable(in:)()
{
  return 1;
}

uint64_t variable initialization expression of PrivacyDisclaimerPresenter.welcomeViewModel@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for WelcomeViewModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t _s5Music17PlaybackSelectionV04_tabC7Manager33_A4D4CEA8F3B168407ABA3C8EDFD6FBB7LL7SwiftUI17EnvironmentObjectVyAA03TabcE0CGvpfi_0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for TabSelectionManager(0);
  v1 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  return EnvironmentObject.init()(v0, v1);
}

uint64_t sub_100044FAC(uint64_t a1, uint64_t a2)
{
  return sub_100045C38(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_100044FC4(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_100044FCC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_100044FE0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_100044FF4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_100045008@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100045034@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_100045058(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_10004506C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_100045080(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_100045094@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1000450A8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000450BC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1000450D0(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1000450E4()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1000450F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_10004510C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_10004512C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

BOOL sub_100045154(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

BOOL sub_100045184(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_100045198@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1000451A8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_1000451B8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_1000451CC()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100045210()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100045238(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

_QWORD *sub_100045278@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100045284(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1000452F8(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_100045374@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5;
  return result;
}

uint64_t sub_1000453B4(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EA6AD4, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_1000453F0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EA6AD4, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_100045438(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, a1);
  WitnessTable = swift_getWitnessTable(&unk_100EA6AD4, a2);
  _CFObject.hash(into:)(v5, a2, WitnessTable);
  return Hasher._finalize()();
}

uint64_t sub_100045490@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_100049EEC(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

unsigned __int8 *sub_1000454CC@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1000454DC(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1000454E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_10119D850, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerResponseTracklistDisplaySection, (uint64_t)&unk_100EA736C);
  v3 = sub_100048748(&qword_10119D858, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerResponseTracklistDisplaySection, (uint64_t)&unk_100EA7314);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10004556C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_100EA6AD4, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

uint64_t sub_1000455B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_10119D830, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100EA75D0);
  v3 = sub_100048748(&qword_10119D838, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100EA7570);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10004563C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_10119D8B0, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_100EA6A08);
  v3 = sub_100048748(&qword_10119D8B8, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_100EA69A8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000456C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748((unint64_t *)&qword_10119D8C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EA7920);
  v3 = sub_100048748(&qword_10119D8C8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EA6894);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100045744(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748((unint64_t *)&unk_1011E7680, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_100EA5DD8);
  v3 = sub_100048748(&qword_10119D310, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_100EA5D80);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000457C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_10119D870, (uint64_t (*)(uint64_t))type metadata accessor for Role, (uint64_t)&unk_100EA6F04);
  v3 = sub_100048748(&qword_10119D878, (uint64_t (*)(uint64_t))type metadata accessor for Role, (uint64_t)&unk_100EA6EA4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10004584C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_10119D880, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_100EA7810);
  v3 = sub_100048748(&qword_10119D888, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_100EA6D90);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000458D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_10119D860, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100EA77CC);
  v3 = sub_100048748(&qword_10119D868, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100EA6FFC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100045954(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748((unint64_t *)&qword_10119D840, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EA7788);
  v3 = sub_100048748(&qword_10119D848, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EA745C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000459D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_10119D330, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_100EA5984);
  v3 = sub_100048748(&qword_10119D338, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_100EA5924);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100045A5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748((unint64_t *)&qword_10119D320, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100EA61CC);
  v3 = sub_100048748(&qword_10119D328, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100EA5A7C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100045AE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_10119D890, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_100EA7854);
  v3 = sub_100048748(&qword_10119D898, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_100EA6C7C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100045B64@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_100045BA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748((unint64_t *)&qword_10119D8A0, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_100EA7898);
  v3 = sub_100048748(&qword_10119D8A8, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_100EA6B68);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100045C2C(uint64_t a1, uint64_t a2)
{
  return sub_100045C38(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100045C38(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100045C74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100045CB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_100045D24(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

void sub_100045DAC(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  Swift::UInt v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v19;
  int64_t v20;
  int v21;
  _QWORD v22[9];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v3 = *((_QWORD *)a1 + 8);
  v4 = a1[1];
  v23 = *a1;
  v24 = v4;
  v5 = a1[3];
  v25 = a1[2];
  v26 = v5;
  v27 = v3;
  v6 = Hasher._finalize()();
  v7 = a2 + 56;
  v8 = 1 << *(_BYTE *)(a2 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a2 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  v12 = 0;
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v13++, 1))
      goto LABEL_25;
    if (v13 >= v11)
    {
LABEL_23:
      swift_release(a2);
      Hasher._combine(_:)(v12);
      return;
    }
    v19 = *(_QWORD *)(v7 + 8 * v13);
    if (!v19)
      break;
LABEL_18:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_19:
    v21 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v17);
    Hasher.init(_seed:)(v22, v6);
    if (v21)
    {
      if (v21 == 1)
        v14 = 0x657469726F766166;
      else
        v14 = 0x64616F6C6E776F64;
      v15 = 0xE900000000000073;
    }
    else
    {
      v15 = 0xE300000000000000;
      v14 = 7105633;
    }
    String.hash(into:)(v22, v14, v15);
    swift_bridgeObjectRelease(v15);
    v12 ^= Hasher._finalize()();
  }
  v20 = v13 + 1;
  if (v13 + 1 >= v11)
    goto LABEL_23;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    ++v13;
    goto LABEL_18;
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v11)
      goto LABEL_23;
    v19 = *(_QWORD *)(v7 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_18;
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_100045F74(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  Swift::UInt v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v25;
  int64_t v26;
  __int128 *v27;
  Swift::Int v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v4 = type metadata accessor for Playlist.Variant(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *((_QWORD *)a1 + 8);
  v9 = a1[1];
  v29 = *a1;
  v30 = v9;
  v10 = a1[2];
  v11 = a1[3];
  v27 = a1;
  v31 = v10;
  v32 = v11;
  v33 = v8;
  v28 = Hasher._finalize()();
  v12 = a2 + 56;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(a2 + 56);
  v16 = (unint64_t)(v13 + 63) >> 6;
  v17 = a2;
  swift_bridgeObjectRetain();
  v18 = 0;
  v19 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v19++, 1))
      goto LABEL_19;
    if (v19 >= v16)
    {
LABEL_17:
      swift_release(v17);
      Hasher._combine(_:)(v18);
      return;
    }
    v25 = *(_QWORD *)(v12 + 8 * v19);
    if (!v25)
      break;
LABEL_16:
    v15 = (v25 - 1) & v25;
    v21 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v17 + 48) + *(_QWORD *)(v5 + 72) * v21, v4);
    v22 = sub_100048748((unint64_t *)&unk_1011A3930, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    v23 = dispatch thunk of Hashable._rawHashValue(seed:)(v28, v4, v22);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v18 ^= v23;
  }
  v26 = v19 + 1;
  if (v19 + 1 >= v16)
    goto LABEL_17;
  v25 = *(_QWORD *)(v12 + 8 * v26);
  if (v25)
  {
    ++v19;
    goto LABEL_16;
  }
  while (1)
  {
    v19 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v19 >= v16)
      goto LABEL_17;
    v25 = *(_QWORD *)(v12 + 8 * v19);
    ++v26;
    if (v25)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_100046164(uint64_t a1, uint64_t a2)
{
  Swift::UInt v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = *(_QWORD *)(a2 + 16);
  Hasher._combine(_:)(v4);
  if (v4)
  {
    v5 = (unsigned __int8 *)(a2 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if (v7 == 1)
        v8 = 0x657469726F766166;
      else
        v8 = 0x64616F6C6E776F64;
      if (v6)
        v9 = v8;
      else
        v9 = 7105633;
      if (v6)
        v10 = 0xE900000000000073;
      else
        v10 = 0xE300000000000000;
      String.hash(into:)(a1, v9, v10);
      swift_bridgeObjectRelease(v10);
      --v4;
    }
    while (v4);
  }
}

void sub_100046220(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3;

  v3 = *(_QWORD *)(a2 + 16);
  Hasher._combine(_:)(v3);
  if (v3)
    __asm { BR              X9 }
}

void sub_100046364(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  unsigned int v9;
  int v10;
  uint64_t v11;

  v4 = type metadata accessor for MusicLibrary(0);
  v5 = static MusicLibrary.shared.getter(v4);
  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = objc_msgSend(v6, "standardUserDefaults", swift_retain().n128_f64[0]);
  v8 = sub_100049FE4();
  sub_10004A028();
  NSUserDefaults.decodeValue<A>(_:forKey:)((uint64_t)&_s11ContentSortVN, v8, &v11);

  v9 = (unsigned __int16)v11;
  if ((v11 & 0xFF00) != 0x200)
  {
    swift_release();
    goto LABEL_5;
  }
  v9 = sub_100464874(0xC1u);
  swift_release();
  if ((v9 & 0xFF00) != 0x200)
  {
LABEL_5:
    v10 = (v9 >> 8) & 1;
    goto LABEL_6;
  }
  LOBYTE(v10) = 1;
  LOBYTE(v9) = 3;
LABEL_6:
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = a1 & 1;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0xE000000000000000;
  *(_BYTE *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 33) = v10;
  *(_WORD *)(a2 + 34) = 259;
  *(_QWORD *)(a2 + 40) = 0xD000000000000011;
  *(_QWORD *)(a2 + 48) = 0x8000000100E2B7E0;
  *(_QWORD *)(a2 + 56) = &_swiftEmptySetSingleton;
  *(_BYTE *)(a2 + 64) = 7;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0xE000000000000000;
  *(_QWORD *)(a2 + 88) = _swiftEmptyArrayStorage;
}

void sub_1000464D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  char v18;
  id v19;
  int v20;
  _QWORD v21[7];
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  swift_retain();
  swift_release();
  *(_QWORD *)v1 = a1;
  v4 = *(_BYTE *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(unsigned __int8 *)(v1 + 33);
  v8 = *(_BYTE *)(v1 + 34);
  v9 = *(_BYTE *)(v1 + 35);
  v10 = *(_QWORD *)(v1 + 40);
  v11 = *(_QWORD *)(v1 + 48);
  v12 = *(_QWORD *)(v1 + 56);
  v13 = *(_BYTE *)(v1 + 64);
  v14 = *(_QWORD *)(v1 + 72);
  v15 = *(_QWORD *)(v1 + 80);
  v16 = *(_QWORD *)(v1 + 88);
  v21[6] = a1;
  v22 = v4;
  v23 = v5;
  v24 = v6;
  v25 = *(_BYTE *)(v1 + 32);
  v26 = v7;
  v27 = v8;
  v28 = v9;
  v29 = v10;
  v30 = v11;
  v31 = v12;
  v32 = v13;
  v20 = v7;
  v33 = v14;
  v34 = v15;
  v35 = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_10016AEBC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  *(_BYTE *)(v2 + 32) = v17;
  *(_BYTE *)(v2 + 33) = BYTE1(v17) & 1;
  sub_1005CFF5C(v17);
  if ((v18 & 1) == 0 || ((v20 ^ (v17 >> 8) & 1) & 1) != 0)
  {
    v19 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v21[3] = &_s11ContentSortVN;
    v21[4] = sub_100049FE4();
    v21[5] = sub_10004A028();
    LOBYTE(v21[0]) = v17;
    BYTE1(v21[0]) = (unsigned __int16)(v17 & 0x100) >> 8;
    NSUserDefaults.encodeValue(_:forKey:)(v21);

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v21);
  }
}

uint64_t sub_1000466AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  int v9;
  int v10;
  char v11;
  int v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  type metadata accessor for MusicLibrary(0);
  if ((static MusicLibrary.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0
    || ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) != 0)
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = v4 == v6 && v5 == v7;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0) & 1) == 0)
    return 0;
  v9 = *(unsigned __int8 *)(a1 + 33);
  v10 = *(unsigned __int8 *)(a2 + 33);
  sub_1005CFF5C(*(_BYTE *)(a1 + 32));
  if ((v11 & 1) == 0)
    return 0;
  if (((v9 ^ v10) & 1) != 0)
    return 0;
  v12 = *(unsigned __int8 *)(a1 + 35);
  v13 = *(unsigned __int8 *)(a2 + 35);
  sub_1005CFF5C(*(_BYTE *)(a1 + 34));
  if ((v14 & 1) == 0 || ((v12 ^ v13) & 1) != 0)
    return 0;
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a2 + 40);
  v18 = *(_QWORD *)(a2 + 48);
  if ((v15 != v17 || v16 != v18) && (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v17, v18, 0) & 1) == 0)
    return 0;
  if ((sub_10016CD08(*(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56)) & 1) == 0)
    return 0;
  v19 = *(unsigned __int8 *)(a1 + 64);
  v20 = *(unsigned __int8 *)(a2 + 64);
  if ((_DWORD)v19 == 7)
  {
    if ((_DWORD)v20 != 7)
      return 0;
  }
  else if ((_DWORD)v20 == 7 || (sub_1005CFF58(v19, v20) & 1) == 0)
  {
    return 0;
  }
  v21 = *(_QWORD *)(a1 + 72);
  v22 = *(_QWORD *)(a1 + 80);
  v23 = *(_QWORD *)(a2 + 72);
  v24 = *(_QWORD *)(a2 + 80);
  if (v21 == v23 && v22 == v24 || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0) & 1) != 0)
    return sub_1002EBFA4(*(_QWORD *)(a1 + 88), *(_QWORD *)(a2 + 88));
  return 0;
}

unint64_t sub_100046800(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  Swift::UInt v4;
  void *v5;
  unint64_t result;
  char v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  char v16;
  id v17;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100007E8C(&qword_10119D598);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = a1[4];
  v5 = (void *)a1[5];
  result = sub_10079C6C0(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v17 = v5;
    return (unint64_t)v3;
  }
  v8 = (void **)(a1 + 7);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v4;
    *(_QWORD *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = (Swift::UInt)*(v8 - 1);
    v14 = *v8;
    v15 = v5;
    result = sub_10079C6C0(v4);
    v8 = v13;
    v5 = v14;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1000468F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100007E8C(&qword_10119D1F0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 41);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  result = sub_10079C718(v4);
  if ((v10 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  v11 = (uint64_t *)(a1 + 88);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v12 = v3[7] + 24 * result;
    *(_BYTE *)v12 = v5;
    *(_BYTE *)(v12 + 1) = v6 & 1;
    *(_QWORD *)(v12 + 8) = v7;
    *(_QWORD *)(v12 + 16) = v8;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      break;
    v3[2] = v15;
    sub_100048AAC(v7, v8);
    if (!--v1)
      return (unint64_t)v3;
    v4 = *((_BYTE *)v11 - 24);
    v5 = *((_BYTE *)v11 - 16);
    v6 = *((_BYTE *)v11 - 15);
    v7 = *(v11 - 1);
    v8 = *v11;
    result = sub_10079C718(v4);
    v11 += 4;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_100046A14(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100007E8C(&qword_10119D360);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  result = sub_10079C56C(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_10079C56C(v4);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_100046B20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C(&qword_10119D318);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = sub_10079C82C(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_100046BF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  unsigned __int8 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  __int128 v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C(&qword_10119D5B8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (uint64_t *)(a1 + 40); ; i += 7)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      v7 = *((_BYTE *)i + 8);
      v16 = *((_OWORD *)i + 1);
      v8 = i[4];
      v9 = i[5];
      result = sub_10079C718(v5);
      if ((v11 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      v12 = v3[7] + 48 * result;
      *(_QWORD *)v12 = v6;
      *(_BYTE *)(v12 + 8) = v7;
      *(_OWORD *)(v12 + 16) = v16;
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = v9;
      v13 = v3[2];
      v14 = __OFADD__(v13, 1);
      v15 = v13 + 1;
      if (v14)
        goto LABEL_10;
      v3[2] = v15;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_100046D10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100007E8C(&qword_10119D550);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  result = sub_10079C718(v4);
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  v10 = (uint64_t *)(a1 + 88);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v11 = v3[7] + 24 * result;
    *(_BYTE *)v11 = v5 & 1;
    *(_QWORD *)(v11 + 8) = v6;
    *(_QWORD *)(v11 + 16) = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v3[2] = v14;
    sub_100048AAC(v6, v7);
    if (!--v1)
      return (unint64_t)v3;
    v4 = *((_BYTE *)v10 - 24);
    v5 = *((_BYTE *)v10 - 16);
    v6 = *(v10 - 1);
    v7 = *v10;
    result = sub_10079C718(v4);
    v10 += 4;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_100046E24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100007E8C(&qword_10119D5D0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  LOBYTE(v4) = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_10079C718(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((unsigned __int8 *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_10079C718(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_100046F24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 *v12;
  char v13;
  __int128 v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100007E8C(&qword_10119D570);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  LOBYTE(v4) = *(_BYTE *)(a1 + 32);
  v14 = *(_OWORD *)(a1 + 40);
  result = sub_10079C718(v4);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain(result);
    return (unint64_t)v3;
  }
  v7 = (__int128 *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v8 = *((_QWORD *)&v14 + 1);
    *(_OWORD *)(v3[7] + 16 * result) = v14;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    result = *((_QWORD *)&v14 + 1);
    if (!--v1)
      goto LABEL_8;
    v12 = (__int128 *)((char *)v7 + 24);
    v4 = *((unsigned __int8 *)v7 - 8);
    v14 = *v7;
    swift_retain(v8);
    result = sub_10079C718(v4);
    v7 = v12;
    if ((v13 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

Swift::Int sub_100047028(uint64_t a1)
{
  return sub_100047594(a1, &qword_10119D358);
}

void *sub_100047034(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_100007E8C((uint64_t *)&unk_1011A3940);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_100048748((unint64_t *)&unk_1011A3930, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v5, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_100048748(&qword_10119D380, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v5, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

Swift::Int sub_10004729C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int result;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD v12[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C((uint64_t *)&unk_10119D400);
    v2 = static _SetStorage.allocate(capacity:)(v1);
    v3 = v2 + 56;
    while (1)
    {
      Hasher.init(_seed:)(v12, *(_QWORD *)(v2 + 40));
      Hasher._combine(_:)(0);
      result = Hasher._finalize()();
      v5 = result & ~(-1 << *(_BYTE *)(v2 + 32));
      v6 = v5 >> 6;
      v7 = *(_QWORD *)(v3 + 8 * (v5 >> 6));
      v8 = 1 << v5;
      if ((v8 & v7) == 0)
      {
        *(_QWORD *)(v3 + 8 * v6) = v8 | v7;
        v9 = *(_QWORD *)(v2 + 16);
        v10 = __OFADD__(v9, 1);
        v11 = v9 + 1;
        if (v10)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v2 + 16) = v11;
      }
      if (!--v1)
        return v2;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void *sub_100047374(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::UInt v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD v21[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return &_swiftEmptySetSingleton;
  sub_100007E8C(&qword_10119D590);
  v3 = static _SetStorage.allocate(capacity:)(v1);
  v4 = 0;
  v5 = v3 + 56;
  v6 = a1 + 32;
  do
  {
    v7 = *(unsigned __int8 *)(v6 + v4);
    Hasher.init(_seed:)(v21, *(_QWORD *)(v3 + 40));
    if ((v7 - 3) >= 7u)
    {
      Hasher._combine(_:)(6uLL);
      v8 = v7;
    }
    else
    {
      v8 = qword_100EA7A10[(char)(v7 - 3)];
    }
    Hasher._combine(_:)(v8);
    v9 = Hasher._finalize()();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = v9 & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    v15 = *(_QWORD *)(v3 + 48);
    if (((1 << v11) & v13) != 0)
    {
      v16 = ~v10;
      while (2)
      {
        switch(*(_BYTE *)(v15 + v11))
        {
          case 3:
            if ((_DWORD)v7 != 3)
              goto LABEL_10;
            break;
          case 4:
            if ((_DWORD)v7 != 4)
              goto LABEL_10;
            break;
          case 5:
            if ((_DWORD)v7 != 5)
              goto LABEL_10;
            break;
          case 6:
            if ((_DWORD)v7 != 6)
              goto LABEL_10;
            break;
          case 7:
            if ((_DWORD)v7 != 7)
              goto LABEL_10;
            break;
          case 8:
            if ((_DWORD)v7 != 8)
              goto LABEL_10;
            break;
          case 9:
            if ((_DWORD)v7 != 9)
              goto LABEL_10;
            break;
          default:
            if ((v7 - 10) > 0xF8u || *(unsigned __int8 *)(v15 + v11) != (_DWORD)v7)
            {
LABEL_10:
              v11 = (v11 + 1) & v16;
              v12 = v11 >> 6;
              v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
              v14 = 1 << v11;
              if ((v13 & (1 << v11)) == 0)
                goto LABEL_27;
              continue;
            }
            break;
        }
        break;
      }
    }
    else
    {
LABEL_27:
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_BYTE *)(v15 + v11) = v7;
      v17 = *(_QWORD *)(v3 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        JUMPOUT(0x100047560);
      }
      *(_QWORD *)(v3 + 16) = v19;
    }
    ++v4;
  }
  while (v4 != v1);
  return (void *)v3;
}

Swift::Int sub_10004757C(uint64_t a1)
{
  return sub_100047594(a1, &qword_1011A3CE0);
}

Swift::Int sub_100047588(uint64_t a1)
{
  return sub_100047594(a1, &qword_1011A3B60);
}

Swift::Int sub_100047594(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD v20[9];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007E8C(a2);
    v4 = static _SetStorage.allocate(capacity:)(v2);
    v5 = 0;
    v6 = v4 + 56;
    v7 = a1 + 32;
    while (1)
    {
      v8 = *(unsigned __int8 *)(v7 + v5);
      Hasher.init(_seed:)(v20, *(_QWORD *)(v4 + 40));
      Hasher._combine(_:)(v8);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v4 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      v15 = *(_QWORD *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(unsigned __int8 *)(v15 + v11) == (_DWORD)v8)
          goto LABEL_3;
        v16 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v16;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          if (*(unsigned __int8 *)(v15 + v11) == (_DWORD)v8)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v6 + 8 * v12) = v14 | v13;
      *(_BYTE *)(v15 + v11) = v8;
      v17 = *(_QWORD *)(v4 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2)
        return v4;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void *sub_1000476D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_100007E8C(&qword_10119D2F0);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_100048748(&qword_10119D2F8, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit, (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle.Unit);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v6, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_100048748((unint64_t *)&unk_10119D300, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit, (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle.Unit);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v6, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void sub_100047938(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      sub_100007E8C((uint64_t *)&unk_10119D3D0);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v26 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v26 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v25 = v5;
  while ((v26 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v26);
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v27 = v10;
    v29 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for AnyCancellable(0);
    v14 = sub_100048748(&qword_1011A4010, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v16 = -1 << *((_BYTE *)v4 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      v21 = ~v16;
      v22 = sub_100048748(&qword_10119D3E0, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v28 = *(_QWORD *)(v4[6] + 8 * v17);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v29, v13, v22) & 1) != 0)
        {
          swift_release(v27);
          v5 = v25;
          goto LABEL_17;
        }
        v17 = (v17 + 1) & v21;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
        v20 = 1 << v17;
      }
      while ((v19 & (1 << v17)) != 0);
      v5 = v25;
    }
    *(_QWORD *)&v9[8 * v18] = v20 | v19;
    *(_QWORD *)(v4[6] + 8 * v17) = v27;
    v23 = v4[2];
    v11 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v24;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_34;
  swift_retain(*(_QWORD *)(v26 + 32 + 8 * v8));
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

Swift::Int sub_100047BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (Swift::Int)&_swiftEmptySetSingleton;
  sub_100007E8C(&qword_10119D4E8);
  v3 = static _SetStorage.allocate(capacity:)(v1);
  v4 = 0;
  v5 = v3 + 56;
  v28 = v1;
  v29 = a1 + 32;
  v30 = v3;
  while (2)
  {
    v6 = (uint64_t *)(v29 + 32 * v4);
    v7 = v6[1];
    v31 = *v6;
    v8 = v6[2];
    v9 = v6[3];
    Hasher.init(_seed:)(v33, *(_QWORD *)(v3 + 40));
    v32 = v8;
    if (v9)
    {
      if (v9 == 1)
      {
        Hasher._combine(_:)(2uLL);
      }
      else
      {
        Hasher._combine(_:)(0);
        if (v7)
        {
          Hasher._combine(_:)(1u);
          sub_10004A12C(v31, v7, v8, v9);
          swift_bridgeObjectRetain();
          String.hash(into:)(v33, v31, v7);
          swift_bridgeObjectRelease(v7);
        }
        else
        {
          Hasher._combine(_:)(0);
          swift_bridgeObjectRetain();
        }
        String.hash(into:)(v33, v8, v9);
      }
    }
    else
    {
      Hasher._combine(_:)(1uLL);
    }
    result = Hasher._finalize()();
    v11 = ~(-1 << *(_BYTE *)(v3 + 32));
    v12 = result & v11;
    v13 = (result & (unint64_t)v11) >> 6;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    v15 = 1 << (result & v11);
    v16 = *(_QWORD *)(v3 + 48);
    if ((v15 & v14) == 0)
    {
      v17 = v30;
      goto LABEL_38;
    }
    do
    {
      v18 = (_QWORD *)(v16 + 32 * v12);
      v19 = v18[3];
      if (v19)
      {
        if (v19 == 1)
        {
          if (v9 == 1)
            goto LABEL_4;
        }
        else
        {
          if (v9 < 2)
            goto LABEL_16;
          v20 = v18[1];
          v21 = v18[2];
          if (v20)
          {
            if (!v7)
              goto LABEL_16;
            if (*v18 != v31 || v20 != v7)
            {
              result = _stringCompareWithSmolCheck(_:_:expecting:)(*v18, v20, v31, v7, 0);
              if ((result & 1) == 0)
                goto LABEL_16;
            }
          }
          else if (v7)
          {
            goto LABEL_16;
          }
          v23 = v21 == v32 && v19 == v9;
          if (v23 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v19, v32, v9, 0), (result & 1) != 0))
          {
            sub_10004A0F8(v31, v7, v32, v9);
            goto LABEL_4;
          }
        }
      }
      else if (!v9)
      {
        goto LABEL_4;
      }
LABEL_16:
      v12 = (v12 + 1) & v11;
      v13 = v12 >> 6;
      v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
      v15 = 1 << v12;
    }
    while ((v14 & (1 << v12)) != 0);
    v17 = v30;
    v16 = *(_QWORD *)(v30 + 48);
LABEL_38:
    *(_QWORD *)(v5 + 8 * v13) = v15 | v14;
    v24 = (uint64_t *)(v16 + 32 * v12);
    *v24 = v31;
    v24[1] = v7;
    v24[2] = v32;
    v24[3] = v9;
    v25 = *(_QWORD *)(v17 + 16);
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v17 + 16) = v27;
LABEL_4:
      ++v4;
      v3 = v30;
      if (v4 != v28)
        continue;
      return v3;
    }
    return result;
  }
}

Swift::Int sub_100047E68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C(&qword_10119D628);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v24 = v1;
    v25 = a1 + 32;
    while (1)
    {
      v6 = *(unsigned __int8 *)(v25 + v4);
      Hasher.init(_seed:)(v26, *(_QWORD *)(v3 + 40));
      if (v6)
        v7 = 0x6F4E6E657473696CLL;
      else
        v7 = 0x487972617262696CLL;
      if (v6)
        v8 = 0xEF72656461654877;
      else
        v8 = 0xED00007265646165;
      String.hash(into:)(v26, v7, v8);
      swift_bridgeObjectRelease(v8);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v23 = v6;
        v15 = ~v10;
        do
        {
          if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + v11))
            v16 = 0x6F4E6E657473696CLL;
          else
            v16 = 0x487972617262696CLL;
          if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + v11))
            v17 = 0xEF72656461654877;
          else
            v17 = 0xED00007265646165;
          if (v16 == v7 && v17 == v8)
          {
            swift_bridgeObjectRelease_n(v8, 2);
            goto LABEL_4;
          }
          v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v7, v8, 0);
          swift_bridgeObjectRelease(v17);
          result = swift_bridgeObjectRelease(v8);
          if ((v19 & 1) != 0)
            goto LABEL_4;
          v11 = (v11 + 1) & v15;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
        }
        while ((v13 & (1 << v11)) != 0);
        LOBYTE(v6) = v23;
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_BYTE *)(*(_QWORD *)(v3 + 48) + v11) = v6;
      v20 = *(_QWORD *)(v3 + 16);
      v21 = __OFADD__(v20, 1);
      v22 = v20 + 1;
      if (v21)
        break;
      *(_QWORD *)(v3 + 16) = v22;
LABEL_4:
      if (++v4 == v24)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return result;
}

void type metadata accessor for NSTextAlignment(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119CFE0, (uint64_t)&unk_1010ADC78);
}

uint64_t _s6MoviesVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t _s6MoviesVwxx(_QWORD *a1)
{
  swift_release(*a1);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[10]);
  return swift_bridgeObjectRelease(a1[11]);
}

uint64_t _s6MoviesVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v4 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  v5 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v5;
  v6 = a2[7];
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  v7 = a2[10];
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_QWORD *)(a1 + 80) = v7;
  v8 = a2[11];
  *(_QWORD *)(a1 + 88) = v8;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t *_s6MoviesVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  *((_BYTE *)a1 + 33) = *((_BYTE *)a2 + 33);
  *((_BYTE *)a1 + 34) = *((_BYTE *)a2 + 34);
  *((_BYTE *)a1 + 35) = *((_BYTE *)a2 + 35);
  a1[5] = a2[5];
  v8 = a2[6];
  v9 = a1[6];
  a1[6] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
  a1[9] = a2[9];
  v12 = a2[10];
  v13 = a1[10];
  a1[10] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = a2[11];
  v15 = a1[11];
  a1[11] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

__n128 _s6MoviesVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t *_s6MoviesVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = a2[3];
  v6 = a1[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease(v6);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  *((_BYTE *)a1 + 33) = *((_BYTE *)a2 + 33);
  *((_BYTE *)a1 + 34) = *((_BYTE *)a2 + 34);
  *((_BYTE *)a1 + 35) = *((_BYTE *)a2 + 35);
  a1[5] = a2[5];
  swift_bridgeObjectRelease(a1[6]);
  v7 = a1[7];
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
  a1[9] = a2[9];
  swift_bridgeObjectRelease(a1[10]);
  v8 = a1[11];
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t _s6MoviesVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s6MoviesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s6MoviesVMa()
{
  return &_s6MoviesVN;
}

__n128 _s10DimensionsVwcp(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119CFE8, (uint64_t)&unk_1010ADD90);
}

void type metadata accessor for UIStatusBarStyle(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119CFF0, (uint64_t)&unk_1010ADDC0);
}

void type metadata accessor for DisplayMode(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119CFF8, (uint64_t)&unk_1010ADDE0);
}

void type metadata accessor for Style(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D000, (uint64_t)&unk_1010ADE00);
}

void type metadata accessor for MPRepeatType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D008, (uint64_t)&unk_1010ADE20);
}

void type metadata accessor for MPShuffleType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D010, (uint64_t)&unk_1010ADE40);
}

void type metadata accessor for MPCPlayerState(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D018, (uint64_t)&unk_1010ADE60);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D020, (uint64_t)&unk_1010ADE80);
}

__n128 initializeWithTake for RelatedContentSpacing(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D028, (uint64_t)&unk_1010ADF08);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D030, (uint64_t)&unk_1010ADF30);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D038, (uint64_t)&unk_1010ADFB0);
}

uint64_t _s10DimensionsVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s10DimensionsVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D040, (uint64_t)&unk_1010AE030);
}

void type metadata accessor for Column(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D048, (uint64_t)&unk_1010AE060);
}

void type metadata accessor for State(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D050, (uint64_t)&unk_1010AE080);
}

{
  sub_10004AAF8(a1, &qword_1011DC3D8, (uint64_t)&unk_1010FF6E0);
}

__n128 initializeWithCopy for ContextualPreview.Highlight(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1000485E0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_100048634(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

void type metadata accessor for MPCPlayerItemDurationSnapshot(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D058, (uint64_t)&unk_1010AE100);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D060, (uint64_t)&unk_1010AE148);
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D068, (uint64_t)&unk_1010AE170);
}

uint64_t getEnumTagSinglePayload for VenueElement.Attributes.Geo(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VenueElement.Attributes.Geo(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D070, (uint64_t)&unk_1010AE1F0);
}

uint64_t sub_10004871C()
{
  return sub_100048748(&qword_10119D078, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_100EA58E8);
}

uint64_t sub_100048748(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100048788()
{
  return sub_100048748(&qword_10119D080, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_100EA58BC);
}

uint64_t sub_1000487B4()
{
  return sub_100048748(&qword_10119D088, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_100EA5958);
}

uint64_t sub_1000487E0()
{
  return sub_100048748(&qword_10119D090, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100EA5A40);
}

uint64_t sub_10004880C()
{
  return sub_100048748(&qword_10119D098, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100EA5A14);
}

uint64_t sub_100048838()
{
  return sub_100048748(&qword_10119D0A0, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_100EA61A0);
}

uint64_t sub_100048864()
{
  return sub_100048748(&qword_10119D0A8, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_100EA5B28);
}

uint64_t sub_100048890()
{
  return sub_100048748(&qword_10119D0B0, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_100EA5B5C);
}

uint64_t sub_1000488BC()
{
  return sub_100048748(&qword_10119D0B8, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_100EA5B98);
}

uint64_t sub_1000488E8()
{
  return sub_100048748(&qword_10119D0C0, (uint64_t (*)(uint64_t))type metadata accessor for Column, (uint64_t)&unk_100EA6174);
}

uint64_t sub_100048914()
{
  return sub_100048748(&qword_10119D0C8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_100EA5D48);
}

uint64_t sub_100048940()
{
  return sub_100048748(&qword_10119D0D0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_100EA5D20);
}

uint64_t sub_10004896C()
{
  return sub_100048748(&qword_10119D0D8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_100EA5DB0);
}

unint64_t sub_10004899C()
{
  unint64_t result;

  result = qword_10119D0E0;
  if (!qword_10119D0E0)
  {
    result = swift_getWitnessTable(&unk_100EA60F0, &_s6MoviesVN);
    atomic_store(result, (unint64_t *)&qword_10119D0E0);
  }
  return result;
}

uint64_t sub_1000489E0()
{
  return sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
}

void *sub_100048A0C()
{
  return &protocol witness table for TitledSection;
}

unint64_t sub_100048A18(uint64_t a1)
{
  unint64_t result;

  result = sub_100048A3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100048A3C()
{
  unint64_t result;

  result = qword_10119D1C8;
  if (!qword_10119D1C8)
  {
    result = swift_getWitnessTable(&unk_100EA6118, &_s6MoviesVN);
    atomic_store(result, (unint64_t *)&qword_10119D1C8);
  }
  return result;
}

uint64_t sub_100048A80()
{
  return sub_100048748(&qword_10119D1D0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100EA5AB0);
}

uint64_t sub_100048AAC(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

_OWORD *sub_100048ABC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100048ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011B8D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100048B14(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_QWORD *sub_100048B2C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[6];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[11];
  swift_retain(*a1);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t *sub_100048B98(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[7];
  v6 = a1[10];
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_release(v2);
  return a1;
}

Swift::Int sub_100048C04(uint64_t a1)
{
  return sub_100047594(a1, &qword_10119D4A8);
}

Swift::Int sub_100048C10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C(&qword_10119D558);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_QWORD *)(v6 + 8 * v4);
      Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_QWORD *)(v14 + 8 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_QWORD *)(v14 + 8 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_QWORD *)(v14 + 8 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_100048D50(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::UInt v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::UInt v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[9];

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      sub_100007E8C(&qword_10119D430);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    while (1)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      v11 = __OFADD__(v9++, 1);
      if (v11)
        break;
      v12 = v10;
      Hasher.init(_seed:)(v35, v4[5]);
      v13 = sub_10047E924();
      Hasher._combine(_:)(v13);
      v14 = Hasher._finalize()();
      v15 = ~(-1 << *((_BYTE *)v4 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)&v8[8 * v17];
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        while (sub_10047E924() != *(_QWORD *)(v12 + 56))
        {
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)&v8[8 * (v16 >> 6)];
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            goto LABEL_22;
        }
        swift_unknownObjectRelease(v12);
        if (v9 == v5)
          return;
      }
      else
      {
LABEL_22:
        *(_QWORD *)&v8[8 * v17] = v19 | v18;
        *(_QWORD *)(v4[6] + 8 * v16) = v12;
        v20 = v4[2];
        v11 = __OFADD__(v20, 1);
        v21 = v20 + 1;
        if (v11)
          goto LABEL_34;
        v4[2] = v21;
        if (v9 == v5)
          return;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
  }
  else
  {
    v22 = 0;
    v34 = a1 + 32;
    v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v22 != v23)
    {
      v24 = *(_QWORD *)(v34 + 8 * v22);
      Hasher.init(_seed:)(v35, v4[5]);
      v25 = sub_10047E924();
      Hasher._combine(_:)(v25);
      v26 = Hasher._finalize()();
      v27 = ~(-1 << *((_BYTE *)v4 + 32));
      v28 = v26 & v27;
      v29 = (v26 & (unint64_t)v27) >> 6;
      v30 = *(_QWORD *)&v8[8 * v29];
      v31 = 1 << (v26 & v27);
      if ((v31 & v30) != 0)
      {
        while (sub_10047E924() != *(_QWORD *)(v24 + 56))
        {
          v28 = (v28 + 1) & v27;
          v29 = v28 >> 6;
          v30 = *(_QWORD *)&v8[8 * (v28 >> 6)];
          v31 = 1 << v28;
          if ((v30 & (1 << v28)) == 0)
            goto LABEL_31;
        }
      }
      else
      {
LABEL_31:
        *(_QWORD *)&v8[8 * v29] = v31 | v30;
        *(_QWORD *)(v4[6] + 8 * v28) = v24;
        v32 = v4[2];
        v11 = __OFADD__(v32, 1);
        v33 = v32 + 1;
        if (v11)
          goto LABEL_36;
        v4[2] = v33;
        swift_retain();
      }
      if (++v22 == v5)
        return;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

Swift::Int sub_10004901C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C((uint64_t *)&unk_1011A3CC0);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28, *(_QWORD *)(v3 + 40));
      swift_bridgeObjectRetain();
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_1000491BC(uint64_t a1)
{
  sub_100049848(a1, &qword_1011A3CD0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
}

void *sub_1000491D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[10];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C((uint64_t *)&unk_10119D2E0);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = *(unsigned __int8 *)(a1 + 32);
    Hasher.init(_seed:)(v6, *(_QWORD *)(v3 + 40));
    __asm { BR              X8 }
  }
  return &_swiftEmptySetSingleton;
}

Swift::Int sub_1000496EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C(&qword_10119D828);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if ((_DWORD)v7 == *(unsigned __int8 *)(v14 + v10))
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if ((_DWORD)v7 == *(unsigned __int8 *)(v14 + v10))
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_10004982C(uint64_t a1)
{
  sub_100049848(a1, &qword_10119D450, &qword_10119D458, _UITab_ptr);
}

void sub_100049848(uint64_t a1, uint64_t *a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  id v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  uint64_t v41;
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v50;

  v5 = a1;
  v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_3:
      sub_100007E8C(a2);
      v8 = (_QWORD *)static _SetStorage.allocate(capacity:)(v7);
      if (!v6)
        goto LABEL_4;
LABEL_11:
      if (v5 < 0)
        v11 = v5;
      else
        v11 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v9 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease();
      if (!v9)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
  }
  v8 = &_swiftEmptySetSingleton;
  if (v6)
    goto LABEL_11;
LABEL_4:
  v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    return;
LABEL_15:
  v12 = (char *)(v8 + 7);
  v50 = v9;
  if ((v5 & 0xC000000000000001) != 0)
  {
    v13 = 0;
    v46 = v5;
    while (1)
    {
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v5);
      v15 = __OFADD__(v13++, 1);
      if (v15)
      {
        __break(1u);
        goto LABEL_43;
      }
      v16 = v14;
      v17 = NSObject._rawHashValue(seed:)(v8[5]);
      v18 = -1 << *((_BYTE *)v8 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      v21 = *(_QWORD *)&v12[8 * (v19 >> 6)];
      v22 = 1 << v19;
      if (((1 << v19) & v21) != 0)
      {
        sub_10004A07C(0, a3, a4);
        v23 = *(id *)(v8[6] + 8 * v19);
        v24 = static NSObject.== infix(_:_:)(v23, v16);

        if ((v24 & 1) != 0)
        {
LABEL_17:
          swift_unknownObjectRelease(v16);
          v5 = v46;
          goto LABEL_18;
        }
        v25 = ~v18;
        while (1)
        {
          v19 = (v19 + 1) & v25;
          v20 = v19 >> 6;
          v21 = *(_QWORD *)&v12[8 * (v19 >> 6)];
          v22 = 1 << v19;
          if ((v21 & (1 << v19)) == 0)
            break;
          v26 = *(id *)(v8[6] + 8 * v19);
          v27 = static NSObject.== infix(_:_:)(v26, v16);

          if ((v27 & 1) != 0)
            goto LABEL_17;
        }
        v5 = v46;
      }
      *(_QWORD *)&v12[8 * v20] = v22 | v21;
      *(_QWORD *)(v8[6] + 8 * v19) = v16;
      v28 = v8[2];
      v15 = __OFADD__(v28, 1);
      v29 = v28 + 1;
      if (v15)
        goto LABEL_44;
      v8[2] = v29;
LABEL_18:
      if (v13 == v50)
        return;
    }
  }
  v30 = 0;
  v47 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v30 != v47)
  {
    v31 = v8[5];
    v32 = *(id *)(v5 + 32 + 8 * v30);
    v33 = NSObject._rawHashValue(seed:)(v31);
    v34 = -1 << *((_BYTE *)v8 + 32);
    v35 = v33 & ~v34;
    v36 = v35 >> 6;
    v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
    v38 = 1 << v35;
    if (((1 << v35) & v37) != 0)
    {
      sub_10004A07C(0, a3, a4);
      v39 = *(id *)(v8[6] + 8 * v35);
      v40 = static NSObject.== infix(_:_:)(v39, v32);

      if ((v40 & 1) != 0)
        goto LABEL_30;
      v41 = ~v34;
      v35 = (v35 + 1) & v41;
      v36 = v35 >> 6;
      v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
      v38 = 1 << v35;
      if ((v37 & (1 << v35)) != 0)
      {
        while (1)
        {
          v42 = *(id *)(v8[6] + 8 * v35);
          v43 = static NSObject.== infix(_:_:)(v42, v32);

          if ((v43 & 1) != 0)
            break;
          v35 = (v35 + 1) & v41;
          v36 = v35 >> 6;
          v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
          v38 = 1 << v35;
          if ((v37 & (1 << v35)) == 0)
            goto LABEL_38;
        }
LABEL_30:

        v9 = v50;
        goto LABEL_31;
      }
LABEL_38:
      v9 = v50;
    }
    *(_QWORD *)&v12[8 * v36] = v38 | v37;
    *(_QWORD *)(v8[6] + 8 * v35) = v32;
    v44 = v8[2];
    v15 = __OFADD__(v44, 1);
    v45 = v44 + 1;
    if (v15)
      goto LABEL_45;
    v8[2] = v45;
LABEL_31:
    if (++v30 == v9)
      return;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

void sub_100049BAC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  _QWORD v40[9];

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_3:
      sub_100007E8C(&qword_10119D420);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease();
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v39 = (char *)(v4 + 7);
  v36 = v1;
  v37 = v1 & 0xC000000000000001;
  v33 = v1 + 32;
  v34 = v1 & 0xFFFFFFFFFFFFFF8;
  v35 = v5;
  while (v37)
  {
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v1);
    v10 = __OFADD__(v8++, 1);
    if (v10)
      goto LABEL_38;
LABEL_24:
    Hasher.init(_seed:)(v40, v4[5]);
    v11 = objc_msgSend(*(id *)(v9 + 16), "_identifier");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    String.hash(into:)(v40, v12, v14);
    swift_bridgeObjectRelease();
    v15 = Hasher._finalize()();
    v16 = ~(-1 << *((_BYTE *)v4 + 32));
    v17 = v15 & v16;
    v18 = (v15 & (unint64_t)v16) >> 6;
    v19 = *(_QWORD *)&v39[8 * v18];
    v20 = 1 << (v15 & v16);
    if ((v20 & v19) != 0)
    {
      v38 = v8;
      while (1)
      {
        v21 = objc_msgSend(*(id *)(*(_QWORD *)(v4[6] + 8 * v17) + 16), "_identifier", swift_retain().n128_f64[0]);
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        v25 = objc_msgSend(*(id *)(v9 + 16), "_identifier");
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v28 = v27;

        if (v22 == v26 && v24 == v28)
        {
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n(v24, 2);
          goto LABEL_17;
        }
        v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v28, 0);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
          break;
        v17 = (v17 + 1) & v16;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v39[8 * (v17 >> 6)];
        v20 = 1 << v17;
        if ((v19 & (1 << v17)) == 0)
        {
          v5 = v35;
          v1 = v36;
          v8 = v38;
          goto LABEL_33;
        }
      }
      swift_release();
LABEL_17:
      v5 = v35;
      v1 = v36;
      v8 = v38;
      if (v38 == v35)
        return;
    }
    else
    {
LABEL_33:
      *(_QWORD *)&v39[8 * v18] = v20 | v19;
      *(_QWORD *)(v4[6] + 8 * v17) = v9;
      v31 = v4[2];
      v10 = __OFADD__(v31, 1);
      v32 = v31 + 1;
      if (v10)
        goto LABEL_39;
      v4[2] = v32;
      if (v8 == v5)
        return;
    }
  }
  if (v8 >= *(_QWORD *)(v34 + 16))
    goto LABEL_40;
  v9 = *(_QWORD *)(v33 + 8 * v8);
  swift_retain();
  v10 = __OFADD__(v8++, 1);
  if (!v10)
    goto LABEL_24;
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

uint64_t sub_100049EEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_100049F28(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_100049F68(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_100049FA4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_10119D3A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100049FE4()
{
  unint64_t result;

  result = qword_1011B5700;
  if (!qword_1011B5700)
  {
    result = swift_getWitnessTable(&unk_100EBC2D0, &_s11ContentSortVN);
    atomic_store(result, (unint64_t *)&qword_1011B5700);
  }
  return result;
}

unint64_t sub_10004A028()
{
  unint64_t result;

  result = qword_10119D410;
  if (!qword_10119D410)
  {
    result = swift_getWitnessTable(&unk_100EBC2A8, &_s11ContentSortVN);
    atomic_store(result, (unint64_t *)&qword_10119D410);
  }
  return result;
}

uint64_t sub_10004A06C(uint64_t result)
{
  if (result < 0)
    return swift_retain(result & 0x7FFFFFFFFFFFFFFFLL);
  return result;
}

uint64_t sub_10004A07C(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10004A0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SidebarMenu.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004A0F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a4 >= 2)
  {
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a2);
  }
  return result;
}

uint64_t sub_10004A12C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a4 >= 2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_10004A160(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100007E8C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

__n128 sub_10004A1A4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for JSContainerDetail.LyricsSnippetData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JSContainerDetail.LyricsSnippetData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D630, (uint64_t)&unk_1010AE270);
}

void type metadata accessor for MPCPlayerAudioFormatTier(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D638, (uint64_t)&unk_1010AE2A0);
}

void type metadata accessor for MPNowPlayingAudioFormatBadging(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D640, (uint64_t)&unk_1010AE2C0);
}

void type metadata accessor for MRGroupSessionRouteType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D648, (uint64_t)&unk_1010AE2E0);
}

void type metadata accessor for UIActivityViewControllerSharingStyle(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D650, (uint64_t)&unk_1010AE300);
}

void type metadata accessor for MPRemoteCommandDisabledReason(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D658, (uint64_t)&unk_1010AE320);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D660, (uint64_t)&unk_1010AE340);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D668, (uint64_t)&unk_1010AE368);
}

void type metadata accessor for MPCPlayerResponseTracklistDisplaySection(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D670, (uint64_t)&unk_1010AE390);
}

void type metadata accessor for AMSParserURLType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D678, (uint64_t)&unk_1010AE3B8);
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D680, (uint64_t)&unk_1010AE3D8);
}

void type metadata accessor for ActivationState(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D688, (uint64_t)&unk_1010AE400);
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D690, (uint64_t)&unk_1010AE420);
}

void type metadata accessor for Role(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D698, (uint64_t)&unk_1010AE448);
}

void type metadata accessor for OpenURLOptionsKey(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6A0, (uint64_t)&unk_1010AE470);
}

void type metadata accessor for InfoKey(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6A8, (uint64_t)&unk_1010AE498);
}

void type metadata accessor for OptionsKey(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6B0, (uint64_t)&unk_1010AE4C0);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6B8, (uint64_t)&unk_1010AE4E8);
}

void type metadata accessor for MPCReportingLyricsViewEventDisplayType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6C0, (uint64_t)&unk_1010AE518);
}

void type metadata accessor for TextStyle(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6C8, (uint64_t)&unk_1010AE538);
}

__n128 initializeWithCopy for Window.Dimensions(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Window.Dimensions(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Window.Dimensions(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6D0, (uint64_t)&unk_1010AE5B8);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6D8, (uint64_t)&unk_1010AE5F0);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6E0, (uint64_t)&unk_1010AE618);
}

void type metadata accessor for SourceType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6E8, (uint64_t)&unk_1010AE648);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6F0, (uint64_t)&unk_1010AE668);
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D6F8, (uint64_t)&unk_1010AE688);
}

void type metadata accessor for TimeControlStatus(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D700, (uint64_t)&unk_1010AE6A8);
}

uint64_t sub_10004A48C()
{
  return sub_100048748(&qword_10119D708, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EA6858);
}

uint64_t sub_10004A4B8()
{
  return sub_100048748(&qword_10119D710, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EA682C);
}

uint64_t sub_10004A4E4()
{
  return sub_100048748(&qword_10119D718, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_100EA696C);
}

uint64_t sub_10004A510()
{
  return sub_100048748(&qword_10119D720, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_100EA6940);
}

uint64_t sub_10004A53C()
{
  return sub_100048748(&qword_10119D728, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_100EA69DC);
}

uint64_t sub_10004A568()
{
  return sub_100048748((unint64_t *)&qword_10119D730, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100EA78DC);
}

uint64_t sub_10004A594()
{
  return sub_100048748(&qword_10119D738, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_100EA6B2C);
}

uint64_t sub_10004A5C0()
{
  return sub_100048748(&qword_10119D740, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_100EA6B00);
}

uint64_t sub_10004A5EC()
{
  return sub_100048748(&qword_10119D748, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_100EA6C40);
}

uint64_t sub_10004A618()
{
  return sub_100048748(&qword_10119D750, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_100EA6C14);
}

uint64_t sub_10004A644()
{
  return sub_100048748(&qword_10119D758, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_100EA6D54);
}

uint64_t sub_10004A670()
{
  return sub_100048748(&qword_10119D760, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_100EA6D28);
}

uint64_t sub_10004A69C()
{
  return sub_100048748(&qword_10119D768, (uint64_t (*)(uint64_t))type metadata accessor for Role, (uint64_t)&unk_100EA6E68);
}

uint64_t sub_10004A6C8()
{
  return sub_100048748(&qword_10119D770, (uint64_t (*)(uint64_t))type metadata accessor for Role, (uint64_t)&unk_100EA6E3C);
}

uint64_t sub_10004A6F4()
{
  return sub_100048748(&qword_10119D778, (uint64_t (*)(uint64_t))type metadata accessor for Role, (uint64_t)&unk_100EA6ED8);
}

uint64_t sub_10004A720()
{
  return sub_100048748(&qword_10119D780, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100EA6FC0);
}

uint64_t sub_10004A74C()
{
  return sub_100048748(&qword_10119D788, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100EA6F94);
}

uint64_t sub_10004A778()
{
  return sub_100048748(&qword_10119D790, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_100EA7144);
}

uint64_t sub_10004A7A4()
{
  return sub_100048748(&qword_10119D798, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_100EA7110);
}

uint64_t sub_10004A7D0()
{
  return sub_100048748(&qword_10119D7A0, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_100EA7170);
}

uint64_t sub_10004A7FC()
{
  return sub_100048748(&qword_10119D7A8, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_100EA71AC);
}

uint64_t sub_10004A828()
{
  return sub_100048748(&qword_10119D7B0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerResponseTracklistDisplaySection, (uint64_t)&unk_100EA72DC);
}

uint64_t sub_10004A854()
{
  return sub_100048748(&qword_10119D7B8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerResponseTracklistDisplaySection, (uint64_t)&unk_100EA72B4);
}

uint64_t sub_10004A880()
{
  return sub_100048748(&qword_10119D7C0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerResponseTracklistDisplaySection, (uint64_t)&unk_100EA7344);
}

uint64_t sub_10004A8AC()
{
  return sub_100048748(&qword_10119D7C8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EA7420);
}

uint64_t sub_10004A8D8()
{
  return sub_100048748(&qword_10119D7D0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EA73F4);
}

uint64_t sub_10004A904()
{
  return sub_100048748(&qword_10119D7D8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100EA7534);
}

uint64_t sub_10004A930()
{
  return sub_100048748(&qword_10119D7E0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100EA7508);
}

uint64_t sub_10004A95C()
{
  return sub_100048748(&qword_10119D7E8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100EA75A4);
}

uint64_t sub_10004A988()
{
  return sub_100048748(&qword_10119D7F0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EA7490);
}

uint64_t sub_10004A9B4()
{
  return sub_100048748(&qword_10119D7F8, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100EA7030);
}

uint64_t sub_10004A9E0()
{
  return sub_100048748(&qword_10119D800, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_100EA6DC4);
}

uint64_t sub_10004AA0C()
{
  return sub_100048748(&qword_10119D808, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_100EA6CB0);
}

uint64_t sub_10004AA38()
{
  return sub_100048748(&qword_10119D810, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_100EA6B9C);
}

uint64_t sub_10004AA64()
{
  return sub_100048748(&qword_10119D818, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100EA6AA8);
}

uint64_t sub_10004AA90()
{
  return sub_100048748(&qword_10119D820, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EA68C8);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D8D0, (uint64_t)&unk_1010AE6C8);
}

void type metadata accessor for MPCPlayerDirection(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D8D8, (uint64_t)&unk_1010AE6F0);
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_10119D8E0, (uint64_t)&unk_1010AE710);
}

void sub_10004AAF8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

NSString sub_10004ABB0()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10124C6C0 = (uint64_t)result;
  return result;
}

id Window.__allocating_init(windowScene:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithWindowScene:", a1);

  return v3;
}

id Window.init(windowScene:)(void *a1)
{
  id v2;

  v2 = sub_10004B8F4(a1);

  return v2;
}

id UIStackView.SpacerView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

char *Window.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  void *v11;
  char *v12;
  id v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  char *v22;
  id v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  objc_super v33;

  v9 = &v4[OBJC_IVAR____TtC5Music6Window_screenDimensionsDidChangeHandler];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v4[OBJC_IVAR____TtC5Music6Window_boundsSizeDidChangeHandler];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music6Window_overrideTraitCollection] = 0;
  v11 = (void *)objc_opt_self(UIScreen);
  v12 = v4;
  v13 = objc_msgSend(v11, "mainScreen");
  v14 = UIScreen.dimensions.getter();
  v16 = v15;
  v18 = v17;
  v20 = v19;

  v21 = (double *)&v12[OBJC_IVAR____TtC5Music6Window_lastSeenDimensions];
  *v21 = a3;
  v21[1] = a4;
  v21[2] = v14;
  *((_QWORD *)v21 + 3) = v16;
  *((_QWORD *)v21 + 4) = v18;
  *((_QWORD *)v21 + 5) = v20;

  v33.receiver = v12;
  v33.super_class = (Class)type metadata accessor for Window();
  v22 = (char *)objc_msgSendSuper2(&v33, "initWithFrame:", a1, a2, a3, a4);
  v23 = objc_msgSend(v22, "screen");
  v24 = UIScreen.dimensions.getter();
  v26 = v25;
  v28 = v27;
  v30 = v29;

  v31 = (double *)&v22[OBJC_IVAR____TtC5Music6Window_lastSeenDimensions];
  v31[2] = v24;
  *((_QWORD *)v31 + 3) = v26;
  *((_QWORD *)v31 + 4) = v28;
  *((_QWORD *)v31 + 5) = v30;
  return v22;
}

id UIStackView.SpacerView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

void Window.init(coder:)()
{
  char *v0;
  char *v1;
  char *v2;

  v1 = &v0[OBJC_IVAR____TtC5Music6Window_screenDimensionsDidChangeHandler];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC5Music6Window_boundsSizeDidChangeHandler];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music6Window_overrideTraitCollection] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/Window.swift", 18, 2, 38, 0);
  __break(1u);
}

uint64_t Window.screenDimensionsDidChangeHandler.getter()
{
  return sub_10004B034(&OBJC_IVAR____TtC5Music6Window_screenDimensionsDidChangeHandler, (void (*)(_QWORD, _QWORD))sub_10004BA50);
}

uint64_t Window.screenDimensionsDidChangeHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_10004B0A8(a1, a2, &OBJC_IVAR____TtC5Music6Window_screenDimensionsDidChangeHandler, sub_10004BA54);
}

void *Window.screenDimensionsDidChangeHandler.modify(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music6Window_screenDimensionsDidChangeHandler, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t Window.boundsSizeDidChangeHandler.getter()
{
  return sub_10004B034(&OBJC_IVAR____TtC5Music6Window_boundsSizeDidChangeHandler, (void (*)(_QWORD, _QWORD))sub_100048AAC);
}

uint64_t sub_10004B034(_QWORD *a1, void (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (_QWORD *)(v2 + *a1);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t Window.boundsSizeDidChangeHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_10004B0A8(a1, a2, &OBJC_IVAR____TtC5Music6Window_boundsSizeDidChangeHandler, sub_10004BA30);
}

uint64_t sub_10004B0A8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess(v8, v12, 1, 0);
  v9 = *v8;
  v10 = v8[1];
  *v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

void *Window.boundsSizeDidChangeHandler.modify(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music6Window_boundsSizeDidChangeHandler, a1, 33, 0);
  return &j_j__swift_endAccess;
}

double Window.boundsSize.getter()
{
  void *v0;
  double v1;

  objc_msgSend(v0, "bounds");
  return v1;
}

id Window.rootElementScreen.getter()
{
  void *v0;

  return objc_msgSend(v0, "screen");
}

Swift::Void __swiftcall Window.sendEvent(_:)(UIEvent a1)
{
  void *v1;
  id v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for Window();
  objc_msgSendSuper2(&v4, "sendEvent:", a1.super.isa);
  v3 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_10119B7D0 != -1)
    swift_once(&qword_10119B7D0, sub_10004ABB0);
  objc_msgSend(v3, "postNotificationName:object:", qword_10124C6C0, v1);

}

Swift::Void __swiftcall Window.layoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double *v10;
  __n128 v11;
  __n128 v12;
  char *v13;
  void (*v14)(double, double, double, double);
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  char *v21;
  void (*v22)(double, double);
  uint64_t v23;
  __int128 v24;
  _QWORD v25[2];
  char v26[24];
  objc_super v27;

  v1 = v0;
  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for Window();
  objc_msgSendSuper2(&v27, "layoutSubviews");
  v2 = objc_msgSend(v0, "screen");
  v3 = UIScreen.dimensions.getter();
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v10 = (double *)&v1[OBJC_IVAR____TtC5Music6Window_lastSeenDimensions];
  v11.n128_u64[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music6Window_lastSeenDimensions + 16];
  v12.n128_u64[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music6Window_lastSeenDimensions + 24];
  if ((static UIScreen.Dimensions.== infix(_:_:)(v11, v12, *(double *)&v1[OBJC_IVAR____TtC5Music6Window_lastSeenDimensions + 32], *(double *)&v1[OBJC_IVAR____TtC5Music6Window_lastSeenDimensions + 40], v3, v5, v7, v9) & 1) == 0)
  {
    v10[2] = v3;
    v10[3] = v5;
    v10[4] = v7;
    v10[5] = v9;
    v13 = &v1[OBJC_IVAR____TtC5Music6Window_screenDimensionsDidChangeHandler];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Music6Window_screenDimensionsDidChangeHandler], v26, 0, 0);
    v14 = *(void (**)(double, double, double, double))v13;
    if (*(_QWORD *)v13)
    {
      v15 = *((_QWORD *)v13 + 1);
      swift_retain(v15);
      v14(v3, v5, v7, v9);
      sub_10004BA30((uint64_t)v14, v15);
    }
  }
  objc_msgSend(v1, "bounds");
  v17 = v16;
  v19 = v18;
  type metadata accessor for CGSize(0);
  v24 = *(_OWORD *)v10;
  *(double *)v25 = v17;
  *(double *)&v25[1] = v19;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v24, v25, v20) & 1) != 0)
  {
    *v10 = v17;
    v10[1] = v19;
    v21 = &v1[OBJC_IVAR____TtC5Music6Window_boundsSizeDidChangeHandler];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Music6Window_boundsSizeDidChangeHandler], &v24, 0, 0);
    v22 = *(void (**)(double, double))v21;
    if (*(_QWORD *)v21)
    {
      v23 = *((_QWORD *)v21 + 1);
      swift_retain(v23);
      v22(v17, v19);
      sub_10004BA30((uint64_t)v22, v23);
    }
  }
}

Swift::Void __swiftcall Window._updateTraitsAndNotify(_:)(Swift::Bool a1)
{
  char *v1;
  void *v3;
  objc_super v4;

  v3 = *(void **)&v1[OBJC_IVAR____TtC5Music6Window_overrideTraitCollection];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music6Window_overrideTraitCollection] = 0;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for Window();
  objc_msgSendSuper2(&v4, "_updateWindowTraitsAndNotify:", a1);
}

Swift::Void __swiftcall Window.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  Class isa;
  void *v3;
  objc_super v4;

  isa = a1.value.super.isa;
  v3 = *(void **)&v1[OBJC_IVAR____TtC5Music6Window_overrideTraitCollection];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music6Window_overrideTraitCollection] = 0;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for Window();
  objc_msgSendSuper2(&v4, "traitCollectionDidChange:", isa);
}

id Window.__allocating_init(contentRect:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithContentRect:", a1, a2, a3, a4);
}

void Window.init(contentRect:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.Window", 12, "init(contentRect:)", 18, 0);
  __break(1u);
}

id Window.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Window();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10004B7A0(uint64_t a1, uint64_t a2)
{
  return sub_10004B7DC(a1, a2, &OBJC_IVAR____TtC5Music6Window_screenDimensionsDidChangeHandler, (void (*)(_QWORD, _QWORD))sub_10004BA50);
}

uint64_t sub_10004B7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004B850(a1, a2, a3, a4, &OBJC_IVAR____TtC5Music6Window_screenDimensionsDidChangeHandler, sub_10004BA54);
}

uint64_t sub_10004B7C8(uint64_t a1, uint64_t a2)
{
  return sub_10004B7DC(a1, a2, &OBJC_IVAR____TtC5Music6Window_boundsSizeDidChangeHandler, (void (*)(_QWORD, _QWORD))sub_100048AAC);
}

uint64_t sub_10004B7DC(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(_QWORD, _QWORD))
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  _BYTE v9[24];

  v6 = (_QWORD *)(v4 + *a3);
  swift_beginAccess(v6, v9, 0, 0);
  v7 = *v6;
  a4(*v6, v6[1]);
  return v7;
}

uint64_t sub_10004B83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004B850(a1, a2, a3, a4, &OBJC_IVAR____TtC5Music6Window_boundsSizeDidChangeHandler, sub_10004BA30);
}

uint64_t sub_10004B850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v10 = (uint64_t *)(v6 + *a5);
  swift_beginAccess(v10, v14, 1, 0);
  v11 = *v10;
  v12 = v10[1];
  *v10 = a1;
  v10[1] = a2;
  return a6(v11, v12);
}

void *sub_10004B8AC(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music6Window_boundsSizeDidChangeHandler, a1, 33, 0);
  return &j__swift_endAccess;
}

id sub_10004B8F4(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  objc_super v21;

  v3 = &v1[OBJC_IVAR____TtC5Music6Window_screenDimensionsDidChangeHandler];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = &v1[OBJC_IVAR____TtC5Music6Window_boundsSizeDidChangeHandler];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music6Window_overrideTraitCollection] = 0;
  v5 = v1;
  v6 = objc_msgSend(a1, "coordinateSpace");
  objc_msgSend(v6, "bounds");
  v8 = v7;
  v10 = v9;
  v11 = objc_msgSend(a1, "screen", swift_unknownObjectRelease(v6).n128_f64[0]);
  v12 = UIScreen.dimensions.getter();
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v19 = (double *)&v5[OBJC_IVAR____TtC5Music6Window_lastSeenDimensions];
  *(_QWORD *)v19 = v8;
  *((_QWORD *)v19 + 1) = v10;
  v19[2] = v12;
  *((_QWORD *)v19 + 3) = v14;
  *((_QWORD *)v19 + 4) = v16;
  *((_QWORD *)v19 + 5) = v18;

  v21.receiver = v5;
  v21.super_class = (Class)type metadata accessor for Window();
  return objc_msgSendSuper2(&v21, "initWithWindowScene:", a1);
}

uint64_t type metadata accessor for Window()
{
  return objc_opt_self(_TtC5Music6Window);
}

uint64_t sub_10004BA30(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

ValueMetadata *type metadata accessor for Window.Dimensions()
{
  return &type metadata for Window.Dimensions;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10004BA5C()
{
  specialized Array._endMutation()();
}

void sub_10004BA90(uint64_t a1, char a2)
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v6;
  double v8;
  id v9;
  CGFloat *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  _QWORD aBlock[5];
  uint64_t v22;
  CGRect v23;
  char v24;
  CGRect v25;

  if ((a2 & 1) == 0)
  {
    v6 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
    return;
  }
  v8 = Int.seconds.getter(18);
  sub_10004D580(a1, (uint64_t)&v23);
  if ((v24 & 1) != 0
    || (x = v23.origin.x, y = v23.origin.y, width = v23.size.width, height = v23.size.height, CGRectIsEmpty(v23)))
  {
    if (objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", v8))
      return;
    __break(1u);
  }
  v25.origin.x = x;
  v25.origin.y = y;
  v25.size.width = width;
  v25.size.height = height;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", 1.0, CGRectGetHeight(v25));
  v10 = (CGFloat *)swift_allocObject(&unk_1010AEA60, 48, 7);
  v10[2] = x;
  v10[3] = y;
  v10[4] = width;
  v10[5] = height;
  v11 = swift_allocObject(&unk_1010AEA88, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_10004D5D8;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_10004D5F4;
  v22 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004BF88;
  aBlock[3] = &unk_1010AEAA0;
  v12 = _Block_copy(aBlock);
  v13 = v22;
  swift_retain(v11);
  v14 = objc_msgSend(v9, "imageWithActions:", v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v11, "", 94, 31, 44, 1);
  *(_QWORD *)&v15 = swift_release(v11).n128_u64[0];
  if ((v12 & 1) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v14, "size", v15);
  v17 = v16;
  v19 = v18;
  v20 = (id)objc_opt_self(UIBlurEffect);
  if (v17 != 0.0 || v19 != 0.0)
  {
LABEL_12:
    if (objc_msgSend(v20, "effectWithVariableBlurRadius:imageMask:", v14, v8))
      goto LABEL_13;
LABEL_16:
    __break(1u);
    return;
  }
  v20 = objc_msgSend(v20, "effectWithBlurRadius:", v8);
  if (!v20)
  {
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  swift_release(v10);

}

void sub_10004BD58(void *a1, double a2, double a3, double a4, double a5)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  Class isa;
  id v22;

  v10 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v11 = sub_100007E8C(&qword_10119E430);
  v12 = swift_allocObject(v11, 96, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EA7A80;
  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "blackColor");
  v15 = objc_msgSend(v14, "colorWithAlphaComponent:", 0.0);

  v16 = objc_msgSend(v15, "CGColor");
  type metadata accessor for CGColor(0);
  v18 = v17;
  *(_QWORD *)(v12 + 56) = v17;
  *(_QWORD *)(v12 + 32) = v16;
  v19 = objc_msgSend(v13, "blackColor");
  v20 = objc_msgSend(v19, "CGColor");

  *(_QWORD *)(v12 + 88) = v18;
  *(_QWORD *)(v12 + 64) = v20;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v10, "setColors:", isa);

  objc_msgSend(v10, "setStartPoint:", 0.5, 1.0);
  objc_msgSend(v10, "setStartPoint:", 0.5, 0.0);
  objc_msgSend(v10, "setFrame:", a2, a3, a4, a5);
  v22 = objc_msgSend(a1, "CGContext");
  objc_msgSend(v10, "renderInContext:", v22);

}

uint64_t sub_10004BF68(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_10004BF88(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

BOOL sub_10004BFBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10004BFD4()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10004C018()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10004C040(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

char *sub_10004C080(char a1)
{
  char *v1;
  uint64_t ObjectType;
  int v4;
  CGFloat *v5;
  double left;
  double bottom;
  double right;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  double v16;
  char *result;
  id v18;
  void *v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  objc_super v39;
  __n128 v40[4];

  ObjectType = swift_getObjectType();
  v4 = a1 & 1;
  v5 = (CGFloat *)&v1[OBJC_IVAR____TtC5Music20PaletteContainerView_contentInsets];
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *v5 = UIEdgeInsetsZero.top;
  v5[1] = left;
  v5[2] = bottom;
  v5[3] = right;
  v9 = OBJC_IVAR____TtC5Music20PaletteContainerView_contentView;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music20PaletteContainerView_contentView] = 0;
  v10 = &v1[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = &v1[OBJC_IVAR____TtC5Music20PaletteContainerView_lastSeenBounds];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v12 = OBJC_IVAR____TtC5Music20PaletteContainerView_containerView;
  type metadata accessor for PaletteContainerView.ContainerView();
  v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v14 = v1;
  *(_QWORD *)&v1[v12] = objc_msgSend(v13, "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC5Music20PaletteContainerView____lazy_storage___separator] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC5Music20PaletteContainerView_gradientView] = 0;
  v14[OBJC_IVAR____TtC5Music20PaletteContainerView_style] = a1 & 1;
  if ((a1 & 1) != 0)
  {
    v16 = Int.seconds.getter(18);
    result = (char *)objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", v16);
    v15 = result;
    if (!result)
    {
      __break(1u);
      return result;
    }
  }
  else
  {
    v15 = (char *)objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
  }
  v18 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v15);

  *(_QWORD *)&v14[OBJC_IVAR____TtC5Music20PaletteContainerView_backgroundView] = v18;
  v19 = *(void **)&v1[v12];
  v20 = *(void **)&v1[v9];
  *(_QWORD *)&v1[v9] = v19;
  v21 = v19;

  v39.receiver = v14;
  v39.super_class = (Class)type metadata accessor for PaletteContainerView();
  v22 = (char *)objc_msgSendSuper2(&v39, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v23 = *(_QWORD *)&v22[OBJC_IVAR____TtC5Music20PaletteContainerView_backgroundView];
  v24 = v22;
  objc_msgSend(v24, "addSubview:", v23);
  if (v4)
  {
    v25 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v26 = swift_allocObject(v25, 40, 7);
    *(_OWORD *)(v26 + 16) = xmmword_100EA7A90;
    v27 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    *(_QWORD *)(v26 + 32) = v27;
    v40[0].n128_u64[0] = v26;
    specialized Array._endMutation()(v27);
    v28 = v40[0].n128_u64[0];
    static Gradient.vertical(colors:locations:interpolations:)(v40[0].n128_u64[0], 0, 0, v40);
    swift_bridgeObjectRelease(v28);
    v29 = objc_allocWithZone((Class)type metadata accessor for Gradient.View());
    v30 = Gradient.View.init(configuration:)((uint64_t)v40);
    v31 = *(void **)&v24[OBJC_IVAR____TtC5Music20PaletteContainerView_gradientView];
    *(_QWORD *)&v24[OBJC_IVAR____TtC5Music20PaletteContainerView_gradientView] = v30;
    v32 = v30;

    sub_10004CEA0();
    objc_msgSend(v24, "addSubview:", v32);

  }
  v33 = *(char **)&v24[OBJC_IVAR____TtC5Music20PaletteContainerView_containerView];
  objc_msgSend(v24, "addSubview:", v33);
  objc_msgSend(v24, "setInsetsLayoutMarginsFromSafeArea:", 0);
  objc_msgSend(v33, "setInsetsLayoutMarginsFromSafeArea:", 0);
  v34 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v34) & 1) != 0)
    objc_msgSend(v33, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  else
    objc_msgSend(v33, "setPreservesSuperviewLayoutMargins:", 1);
  swift_unknownObjectWeakAssign(&v33[OBJC_IVAR____TtCC5Music20PaletteContainerViewP33_4102CA4C1991271B5A0CD003095D64DF13ContainerView_layoutDelegate], v24);
  v35 = sub_100007E8C(&qword_1011A1750);
  v36 = swift_allocObject(v35, 48, 7);
  *(_OWORD *)(v36 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v36 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v36 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v37 = v24;
  v38 = UIView.registerForTraitChanges<A>(_:handler:)(v36, sub_10004D680, 0, ObjectType);
  swift_unknownObjectRelease(v38);
  swift_bridgeObjectRelease(v36);

  return v37;
}

void sub_10004C4AC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  Class isa;

  v2 = v1;
  v4 = objc_msgSend(a1, "superview");
  v5 = *(void **)(v1 + OBJC_IVAR____TtC5Music20PaletteContainerView_containerView);
  if (v4)
  {
    v6 = v4;
    sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
    v7 = v5;
    v8 = v6;
    LOBYTE(v6) = static NSObject.== infix(_:_:)(v8, v7);

    if ((v6 & 1) != 0)
      objc_msgSend(a1, "removeFromSuperview");
  }
  v9 = *(void **)(v2 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView);
  if (v9)
  {
    v10 = v9;
    v11 = UIView.forAutolayout.getter();
    objc_msgSend(v5, "addSubview:", v11);

    v12 = (void *)objc_opt_self(NSLayoutConstraint);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v14 = swift_allocObject(v13, 64, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100EA7AB0;
    v15 = objc_msgSend(v10, "topAnchor");
    v16 = objc_msgSend(v5, "topAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

    *(_QWORD *)(v14 + 32) = v17;
    v18 = objc_msgSend(v10, "bottomAnchor");
    v19 = objc_msgSend(v5, "bottomAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    *(_QWORD *)(v14 + 40) = v20;
    v21 = objc_msgSend(v10, "leadingAnchor");
    v22 = objc_msgSend(v5, "layoutMarginsGuide");
    v23 = objc_msgSend(v22, "leadingAnchor");

    v24 = objc_msgSend(v21, "constraintEqualToAnchor:", v23);
    *(_QWORD *)(v14 + 48) = v24;
    v25 = objc_msgSend(v10, "trailingAnchor");
    v26 = objc_msgSend(v5, "layoutMarginsGuide");
    v27 = objc_msgSend(v26, "trailingAnchor");

    v28 = objc_msgSend(v25, "constraintEqualToAnchor:", v27);
    *(_QWORD *)(v14 + 56) = v28;
    specialized Array._endMutation()(v29);
    sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v14);
    objc_msgSend(v12, "activateConstraints:", isa);

  }
}

void sub_10004C810()
{
  char *v0;
  char *v1;
  CGFloat *v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double *v24;
  int v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  double v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  double Height;
  double v46;
  char *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  __int128 v51;
  id v52;
  void *v53;
  double v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  objc_super v59;
  _QWORD v60[4];
  __int128 v61;
  __int128 v62;
  _QWORD v63[4];
  char v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;

  v1 = v0;
  v59.receiver = v0;
  v59.super_class = (Class)type metadata accessor for PaletteContainerView();
  objc_msgSendSuper2(&v59, "layoutSubviews");
  v2 = (CGFloat *)&v0[OBJC_IVAR____TtC5Music20PaletteContainerView_lastSeenBounds];
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  v6 = v2[3];
  objc_msgSend(v1, "bounds");
  v68.origin.x = v7;
  v68.origin.y = v8;
  v68.size.width = v9;
  v68.size.height = v10;
  v65.origin.x = v3;
  v65.origin.y = v4;
  v65.size.width = v5;
  v65.size.height = v6;
  v11 = CGRectEqualToRect(v65, v68);
  objc_msgSend(v1, "bounds");
  *(_QWORD *)v2 = v12;
  *((_QWORD *)v2 + 1) = v13;
  *((_QWORD *)v2 + 2) = v14;
  *((_QWORD *)v2 + 3) = v15;
  objc_msgSend(v1, "bounds");
  v20 = sub_10004D6A0(v16, v17, v18, v19, *(double *)&v1[OBJC_IVAR____TtC5Music20PaletteContainerView_contentInsets], *(double *)&v1[OBJC_IVAR____TtC5Music20PaletteContainerView_contentInsets + 8]);
  v24 = (double *)&v1[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
  if ((v1[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth + 8] & 1) != 0 || *v24 >= v22)
  {
    v25 = 0;
  }
  else
  {
    v25 = 1;
    v22 = *v24;
  }
  v26 = *(void **)&v1[OBJC_IVAR____TtC5Music20PaletteContainerView_containerView];
  objc_msgSend(v26, "setFrame:", CGRect.centeringAlong(axes:in:)(1, v20, v21, v22, v23));
  if ((v25 & 1) != 0 || !v11)
  {
    v27 = *(void **)&v1[OBJC_IVAR____TtC5Music20PaletteContainerView_backgroundView];
    objc_msgSend(v1, "bounds");
    objc_msgSend(v27, "setFrame:");
    if ((v1[OBJC_IVAR____TtC5Music20PaletteContainerView_style] & 1) == 0)
    {
      v29 = objc_msgSend(v1, "traitCollection");
      objc_msgSend(v29, "displayScale");
      v31 = v30;

      v32 = sub_10004CC0C();
      objc_msgSend(v1, "bounds");
      objc_msgSend(v32, "setFrame:", 0.0, 0.0, CGRectGetWidth(v66), 1.0 / v31);
LABEL_18:

      return;
    }
    if ((v25 & 1) != 0)
    {
      v28 = 0;
    }
    else
    {
      objc_msgSend(v1, "bounds");
      v63[0] = v33;
      v63[1] = v34;
      v63[2] = v35;
      v63[3] = v36;
      v64 = 0;
      sub_10004BA90((uint64_t)v63, 1);
      v28 = v37;
    }
    objc_msgSend(v27, "setEffect:", v28);

    v38 = OBJC_IVAR____TtC5Music20PaletteContainerView_gradientView;
    v39 = *(void **)&v1[OBJC_IVAR____TtC5Music20PaletteContainerView_gradientView];
    if (v39)
    {
      v40 = 1.0;
      if (v25)
        v40 = 0.0;
      objc_msgSend(v39, "setAlpha:", v40);
      v41 = *(void **)&v1[v38];
      if (v41)
      {
        v42 = sub_100007E8C(&qword_1011AE320);
        v43 = swift_allocObject(v42, 56, 7);
        *(_OWORD *)(v43 + 16) = xmmword_100EA7AC0;
        *(_QWORD *)(v43 + 32) = 0;
        v44 = v41;
        objc_msgSend(v26, "frame");
        Height = CGRectGetHeight(v67);
        objc_msgSend(v1, "bounds");
        *(double *)(v43 + 40) = Height / v46;
        *(_QWORD *)(v43 + 48) = 0x3FF0000000000000;
        v47 = &v44[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
        swift_beginAccess(&v44[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration], &v58, 0, 0);
        v48 = *((_QWORD *)v47 + 1);
        v50 = *((_QWORD *)v47 + 3);
        v60[0] = *(_QWORD *)v47;
        v49 = (void *)v60[0];
        v60[1] = v48;
        v60[2] = v43;
        v60[3] = v50;
        v51 = *((_OWORD *)v47 + 3);
        v61 = *((_OWORD *)v47 + 2);
        v62 = v51;
        swift_bridgeObjectRetain();
        v52 = v49;
        swift_bridgeObjectRetain();
        Gradient.View.typedConfiguration.setter((uint64_t)v60);

        v53 = *(void **)&v1[v38];
        if (v53)
        {
          v32 = v53;
          objc_msgSend(v1, "bounds");
          objc_msgSend(v32, "setFrame:", v54, v55, v56, v57);
          goto LABEL_18;
        }
      }
    }
  }
}

id sub_10004CC0C()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music20PaletteContainerView____lazy_storage___separator;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Music20PaletteContainerView____lazy_storage___separator];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC5Music20PaletteContainerView____lazy_storage___separator];
  }
  else
  {
    v4 = sub_10004CC6C(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10004CC6C(_BYTE *a1)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _QWORD aBlock[5];
  uint64_t v18;
  _QWORD v19[4];
  char v20;

  v2 = a1[OBJC_IVAR____TtC5Music20PaletteContainerView_style];
  objc_msgSend(a1, "bounds");
  v19[0] = v3;
  v19[1] = v4;
  v19[2] = v5;
  v19[3] = v6;
  v20 = 0;
  sub_10004BA90((uint64_t)v19, v2);
  v8 = v7;
  v9 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v7, 7);

  v10 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v9);
  v11 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_10004CE04;
  v18 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100264780;
  aBlock[3] = &unk_1010AEAC8;
  v12 = _Block_copy(aBlock);
  v13 = v10;
  v14 = objc_msgSend(v11, "initWithDynamicProvider:", v12);
  _Block_release(v12);
  objc_msgSend(v13, "setBackgroundColor:", v14, swift_release(v18).n128_f64[0]);

  v15 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Music20PaletteContainerView_backgroundView], "contentView");
  objc_msgSend(v15, "addSubview:", v13);

  return v13;
}

id sub_10004CE04(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  if (v1 != (id)2)
    return objc_msgSend(v2, "_barHairlineShadowColor");
  v3 = objc_msgSend(v2, "whiteColor");
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.3);

  return v4;
}

void sub_10004CEA0()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  id v15;
  id v16;
  id v17;
  char v18[24];
  _QWORD v19[4];
  __int128 v20;
  __int128 v21;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceStyle");

  if (v3 == (id)2)
  {
    v4 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v17 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.8);

  }
  else
  {
    sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
    v17 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(230, 230, 230, 0.8);
  }
  v5 = *(void **)&v1[OBJC_IVAR____TtC5Music20PaletteContainerView_gradientView];
  if (v5)
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v7 = swift_allocObject(v6, 56, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100EA7AD0;
    v8 = v5;
    *(_QWORD *)(v7 + 32) = objc_msgSend(v17, "colorWithAlphaComponent:", 0.0);
    *(_QWORD *)(v7 + 40) = v17;
    *(_QWORD *)(v7 + 48) = v17;
    v19[0] = v7;
    specialized Array._endMutation()(v17);
    v9 = v7;
    v10 = &v8[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
    swift_beginAccess(&v8[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration], v18, 0, 0);
    v12 = *((_QWORD *)v10 + 2);
    v13 = *((_QWORD *)v10 + 3);
    v19[0] = *(_QWORD *)v10;
    v11 = (void *)v19[0];
    v19[1] = v9;
    v19[2] = v12;
    v19[3] = v13;
    v14 = *((_OWORD *)v10 + 3);
    v20 = *((_OWORD *)v10 + 2);
    v21 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v17;
    v16 = v11;
    Gradient.View.typedConfiguration.setter((uint64_t)v19);

  }
  else
  {

  }
}

id sub_10004D1E4()
{
  return sub_10004D23C(0, type metadata accessor for PaletteContainerView.ContainerView);
}

id sub_10004D230(uint64_t a1)
{
  return sub_10004D23C(a1, type metadata accessor for PaletteContainerView);
}

id sub_10004D23C(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for PaletteContainerView()
{
  return objc_opt_self(_TtC5Music20PaletteContainerView);
}

uint64_t type metadata accessor for PaletteContainerView.ContainerView()
{
  return objc_opt_self(_TtCC5Music20PaletteContainerViewP33_4102CA4C1991271B5A0CD003095D64DF13ContainerView);
}

_BYTE *_s11ContentSortV6OptionOwCP(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PaletteContainerView.Style(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PaletteContainerView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10004D3FC + 4 * byte_100EA7AE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10004D430 + 4 * byte_100EA7AE0[v4]))();
}

uint64_t sub_10004D430(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004D438(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10004D440);
  return result;
}

uint64_t sub_10004D44C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10004D454);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10004D458(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004D460(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004D46C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_10004D474(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PaletteContainerView.Style()
{
  return &type metadata for PaletteContainerView.Style;
}

unint64_t sub_10004D494()
{
  unint64_t result;

  result = qword_10119DB58;
  if (!qword_10119DB58)
  {
    result = swift_getWitnessTable(&unk_100EA7B5C, &type metadata for PaletteContainerView.Style);
    atomic_store(result, (unint64_t *)&qword_10119DB58);
  }
  return result;
}

void *sub_10004D4D8()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView);
  v2 = v1;
  return v1;
}

void sub_10004D508(void *a1)
{
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *v1;
  v3 = *(void **)(v2 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView) = a1;
  v4 = a1;
  sub_10004C4AC(v3);

}

id sub_10004D558(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, "convertRect:toView:", a1);
}

uint64_t sub_10004D56C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = (2 * a2) | 1;
  return result;
}

uint64_t sub_10004D580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A22F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004D5C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_10004D5D8(void *a1)
{
  double *v1;

  sub_10004BD58(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10004D5E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004D5F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10004D614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004D624(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10004D62C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

unint64_t sub_10004D63C()
{
  unint64_t result;

  result = qword_1011A2210;
  if (!qword_1011A2210)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.Music, &type metadata for Feature.Music);
    atomic_store(result, (unint64_t *)&qword_1011A2210);
  }
  return result;
}

void sub_10004D680()
{
  sub_10004CEA0();
}

double sub_10004D6A0(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

void sub_10004D6BC()
{
  char *v0;
  char *v1;
  __int128 v2;
  char *v3;
  char *v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC5Music20PaletteContainerView_contentInsets];
  v2 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v1 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v1 + 1) = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20PaletteContainerView_contentView] = 0;
  v3 = &v0[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = &v0[OBJC_IVAR____TtC5Music20PaletteContainerView_lastSeenBounds];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v5 = OBJC_IVAR____TtC5Music20PaletteContainerView_containerView;
  type metadata accessor for PaletteContainerView.ContainerView();
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20PaletteContainerView____lazy_storage___separator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20PaletteContainerView_gradientView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/PaletteContainerView.swift", 32, 2, 79, 0);
  __break(1u);
}

uint64_t sub_10004D7C4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  uint64_t v6;
  int v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;

  v2 = (void *)v0[1];
  v1 = v0[2];
  if (v1)
  {
    sub_1000502A4();
    KeyPath = swift_getKeyPath(&unk_100EA7CB8);
    __chkstk_darwin(KeyPath);
    v4 = swift_getKeyPath(&unk_100EA7CF0);
    v5 = v2;
    swift_retain(v1);
    static Published.subscript.getter(&v14, v6, KeyPath, v4);
    swift_release(v1);
    swift_release(KeyPath);
    swift_release(v4);
    v7 = v14;
    v8 = objc_allocWithZone((Class)type metadata accessor for CommerceNavigationController());
    return sub_10004DA34(v5, v7);
  }
  else
  {
    v10 = v0[3];
    v11 = type metadata accessor for TabSelectionManager(0);
    v12 = sub_10005023C();
    v13 = v2;
    result = EnvironmentObject.error()(0, v10, v11, v12);
    __break(1u);
  }
  return result;
}

uint64_t sub_10004D920(uint64_t a1, char a2)
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)(a1, a2 & 1);
}

uint64_t sub_10004D958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1000501F8();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10004D9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1000501F8();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10004D9F8()
{
  return static View._viewListCount(inputs:)();
}

void sub_10004DA10(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000501F8();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_10004DA34(void *a1, int a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  NSURL *v19;
  void *v20;
  void *v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t result;
  uint64_t MetatypeMetadata;
  Swift::String v35;
  void *object;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  id v41;
  int v42;
  objc_class *v43;
  void **aBlock;
  unint64_t v45;
  void (*v46)(uint64_t, void *, void *);
  void *v47;
  double (*v48)(void *, uint64_t);
  uint64_t v49;
  objc_class *v50;
  objc_super v51;

  v3 = v2;
  v42 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v40 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - v13;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Music28CommerceNavigationController_segue] = a1;
  v51.receiver = v3;
  v51.super_class = ObjectType;
  v43 = ObjectType;
  v41 = a1;
  v15 = objc_msgSendSuper2(&v51, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v15, "setModalPresentationStyle:", 2);
  JSStoreFlowSegue.url.getter(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, &qword_10119E460);
    aBlock = 0;
    v45 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease(v45);
    aBlock = (void **)0xD000000000000020;
    v45 = 0x8000000100E2BBE0;
    v50 = v43;
    MetatypeMetadata = swift_getMetatypeMetadata(v43);
    v35._countAndFlagsBits = String.init<A>(describing:)(&v50, MetatypeMetadata);
    object = v35._object;
    String.append(_:)(v35);
    swift_bridgeObjectRelease(object);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, aBlock, v45, "Music/CommerceView.swift", 24, 2, 50, 0);
    __break(1u);
  }
  else
  {
    v39 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v39(v14, v8, v9);
    sub_10004A07C(0, (unint64_t *)&qword_10119DC80, ICStoreRequestContext_ptr);
    v16 = (void *)static ICStoreRequestContext.storeFlow.getter();
    v17 = objc_msgSend(objc_allocWithZone((Class)ICAMSBagAdapter), "initWithRequestContext:", v16);

    v18 = objc_msgSend(objc_allocWithZone((Class)AMSURLParser), "initWithBag:", v17);
    URL._bridgeToObjectiveC()(v19);
    v21 = v20;
    v22 = objc_msgSend(v18, "typeForURL:", v20);

    v23 = v40;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v14, v9);
    v24 = *(unsigned __int8 *)(v10 + 80);
    v25 = (v24 + 24) & ~v24;
    v38 = v14;
    v26 = (v25 + v11 + 23) & 0xFFFFFFFFFFFFFFF8;
    v27 = swift_allocObject(&unk_1010AEB40, v26 + 8, v24 | 7);
    *(_QWORD *)(v27 + 16) = v15;
    v39((char *)(v27 + v25), v23, v9);
    v28 = v27 + ((v25 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)v28 = v17;
    *(_BYTE *)(v28 + 8) = v42;
    *(_QWORD *)(v27 + v26) = v43;
    v48 = sub_10004ED10;
    v49 = v27;
    aBlock = _NSConcreteStackBlock;
    v45 = 1107296256;
    v46 = sub_10004E2F4;
    v47 = &unk_1010AEB58;
    v29 = _Block_copy(&aBlock);
    v30 = v49;
    v31 = v15;
    v32 = v17;
    objc_msgSend(v22, "addFinishBlock:", v29, swift_release(v30).n128_f64[0]);

    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v38, v9);
    return (uint64_t)v31;
  }
  return result;
}

double sub_10004DE24(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, int a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  id v21;
  double result;
  _BYTE v23[12];
  int v24;
  uint64_t v25;
  void *v26;

  v25 = a7;
  v26 = a5;
  v24 = a6;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  if (a1)
    v13 = (uint64_t)objc_msgSend(a1, "integerValue");
  else
    v13 = 1;
  sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(&v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v10);
  v14 = *(unsigned __int8 *)(v11 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = (v15 + v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(&unk_1010AEB90, v16 + 8, v14 | 7);
  *(_QWORD *)(v17 + 16) = v13;
  *(_QWORD *)(v17 + 24) = a3;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(v17 + v15, &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], v10);
  v18 = v17 + ((v15 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = v26;
  *(_QWORD *)v18 = v26;
  *(_BYTE *)(v18 + 8) = v24;
  *(_QWORD *)(v17 + v16) = v25;
  v20 = a3;
  v21 = v19;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_10004EE38, v17);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

void sub_10004DF90(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(void (*)(uint64_t), uint64_t);
  _QWORD *v19;
  id v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;

  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && a1 != 2)
  {
    if (a1 == 1)
    {
      if (qword_10119B7D8 != -1)
        swift_once(&qword_10119B7D8, sub_10004E730);
      v22 = type metadata accessor for Logger(0);
      sub_100048B14(v22, (uint64_t)qword_10119DB60);
      v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(12, -1);
        v27 = swift_slowAlloc(32, -1);
        v34 = v27;
        *(_DWORD *)v26 = 136315138;
        v28 = URL.absoluteString.getter();
        v30 = v29;
        v33 = sub_100322200(v28, v29, &v34);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
        swift_bridgeObjectRelease(v30);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Legacy Web URL not handled: '%s'", v26, 0xCu);
        swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v27, -1, -1);
        swift_slowDealloc(v26, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      }

    }
    else
    {
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x8000000100E2BC30, "Music/CommerceView.swift", 24, 2, 71, 0);
      __break(1u);
    }
  }
  else
  {
    sub_10004F400(a1, a3, a4, a5);
    if (v14)
    {
      v15 = v14;
      v16 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
      v17 = swift_allocObject(&unk_1010AEBB8, 32, 7);
      *(_QWORD *)(v17 + 16) = v15;
      *(_QWORD *)(v17 + 24) = a2;
      v18 = *(void (**)(void (*)(uint64_t), uint64_t))((swift_isaMask & *v16) + 0xD8);
      v19 = v16;
      v32 = v15;
      v20 = a2;
      v18(sub_10004FA38, v17);

      *(_QWORD *)&v21 = swift_release(v17).n128_u64[0];
      objc_msgSend(v20, "pushViewController:animated:", v32, 0, v21);

    }
    else
    {
      objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
    }
  }
}

void sub_10004E2F4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_10004E48C(uint64_t a1, char *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  v17 = *(id *)(a1 + 112);
  v3 = objc_msgSend(a2, "viewControllers");
  v4 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v9 = v5;
    else
      v9 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v5);
    if (v10)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v5);
    goto LABEL_14;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_25:
      if (v4 < 0)
        v15 = v4;
      else
        v15 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v16 = _CocoaArrayWrapper.endIndex.getter(v15);
      swift_bridgeObjectRelease(v4);
      if (v16)
        goto LABEL_16;
LABEL_29:

      swift_bridgeObjectRelease(v4);
      return;
    }
    v6 = *(id *)(v5 + 32);
  }
  v7 = v6;
  swift_bridgeObjectRelease(v5);
  objc_opt_self(AMSUIWebViewController);
  v8 = swift_dynamicCastObjCClass(v7);
  if (v8)
  {
    JSStoreFlowPresentationCoordinator.viewControllerDidDismiss(_:from:)(v8, *(void **)&a2[OBJC_IVAR____TtC5Music28CommerceNavigationController_segue]);

LABEL_22:
    return;
  }

LABEL_14:
  v11 = objc_msgSend(a2, "viewControllers");
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v4);

  if ((unint64_t)v4 >> 62)
    goto LABEL_25;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_29;
LABEL_16:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    goto LABEL_19;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v4 + 32);
LABEL_19:
    v13 = v12;
    swift_bridgeObjectRelease(v4);
    objc_opt_self(AMSUIDynamicViewController);
    v14 = swift_dynamicCastObjCClass(v13);
    if (v14)
      JSStoreFlowPresentationCoordinator.viewControllerDidDismiss(_:from:)(v14, *(void **)&a2[OBJC_IVAR____TtC5Music28CommerceNavigationController_segue]);

    goto LABEL_22;
  }
  __break(1u);
}

void sub_10004E6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;

  v4 = *(void **)(a3 + OBJC_IVAR____TtC5Music28CommerceNavigationController_segue);
  v5 = *(id *)(a1 + 112);
  JSStoreFlowPresentationCoordinator.viewControllerWillPresent(_:from:)(a2, v4);

}

uint64_t sub_10004E730()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10119DB60);
  sub_100048B14(v0, (uint64_t)qword_10119DB60);
  sub_10004A07C(0, (unint64_t *)&qword_10119DCB8, OS_os_log_ptr);
  v1 = OS_os_log.init(musicCategory:)(0xD00000000000001CLL, 0x8000000100EA7BA0);
  return Logger.init(_:)(v1);
}

void sub_10004E7B4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for CommerceNavigationController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v2 = objc_msgSend(v1, "bundleIdentifier");

  if (v2)
  {
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  qword_10119DB78 = v3;
  qword_10119DB80 = v5;
}

id GroupActivitiesManager.SuggestionProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CommerceNavigationController()
{
  return objc_opt_self(_TtC5Music28CommerceNavigationController);
}

uint64_t sub_10004EC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + 7) & 0xFFFFFFFFFFFFF8;
  v8 = ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v8, v6);
}

double sub_10004ED10(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_10004DE24(a1, a2, *(void **)(v2 + 16), v2 + v6, *(void **)(v2 + ((v6 + *(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v2 + ((v6 + *(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v2 + ((v6 + *(_QWORD *)(v5 + 64) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10004ED88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004ED98(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10004EDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + 7) & 0xFFFFFFFFFFFFF8;
  v8 = ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v8, v6);
}

void sub_10004EE38()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + *(_QWORD *)(v1 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10004DF90(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + v3), *(_BYTE *)(v0 + v3 + 8));
}

uint64_t sub_10004EE90@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_10004FA40((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

void sub_10004EED0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t i;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[2];
  _OWORD v48[2];
  __int128 v49;
  _OWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v9 = -1 << *(_BYTE *)(a1 + 32);
  v10 = ~v9;
  v11 = *(_QWORD *)(a1 + 64);
  v12 = -v9;
  v51 = a1;
  v52 = a1 + 64;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  else
    v13 = -1;
  v53 = v10;
  v54 = 0;
  v55 = v13 & v11;
  v56 = a2;
  v57 = a3;
  swift_bridgeObjectRetain();
  swift_retain(a3);
  sub_10004F224(&v49);
  v14 = *((_QWORD *)&v49 + 1);
  if (!*((_QWORD *)&v49 + 1))
    goto LABEL_27;
  v15 = v49;
  sub_100048ABC(v50, v48);
  v16 = *(_QWORD **)a5;
  v18 = sub_10079C2C4(v15, v14);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v22 = v17;
  if (v16[3] >= v21)
  {
    if ((a4 & 1) != 0)
    {
      if ((v17 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_1007A636C();
      if ((v22 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v26 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    v27 = (uint64_t *)(v26[6] + 16 * v18);
    *v27 = v15;
    v27[1] = v14;
    sub_100048ABC(v48, (_OWORD *)(v26[7] + 32 * v18));
    v28 = v26[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v26[2] = v30;
LABEL_16:
    sub_10004F224(&v49);
    for (i = *((_QWORD *)&v49 + 1); *((_QWORD *)&v49 + 1); i = *((_QWORD *)&v49 + 1))
    {
      v33 = v49;
      sub_100048ABC(v50, v48);
      v34 = *(_QWORD **)a5;
      v36 = sub_10079C2C4(v33, i);
      v37 = v34[2];
      v38 = (v35 & 1) == 0;
      v39 = v37 + v38;
      if (__OFADD__(v37, v38))
        goto LABEL_28;
      v40 = v35;
      if (v34[3] < v39)
      {
        sub_10079EB98(v39, 1);
        v41 = sub_10079C2C4(v33, i);
        if ((v40 & 1) != (v42 & 1))
          goto LABEL_30;
        v36 = v41;
      }
      if ((v40 & 1) != 0)
      {
        sub_10004FA40((uint64_t)v48, (uint64_t)v47);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v48);
        swift_bridgeObjectRelease(i);
        v32 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v36);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v32);
        sub_100048ABC(v47, v32);
      }
      else
      {
        v43 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v36 >> 6) + 64) |= 1 << v36;
        v44 = (uint64_t *)(v43[6] + 16 * v36);
        *v44 = v33;
        v44[1] = i;
        sub_100048ABC(v48, (_OWORD *)(v43[7] + 32 * v36));
        v45 = v43[2];
        v29 = __OFADD__(v45, 1);
        v46 = v45 + 1;
        if (v29)
          goto LABEL_29;
        v43[2] = v46;
      }
      sub_10004F224(&v49);
    }
LABEL_27:
    swift_release(a3);
    swift_bridgeObjectRelease(a1);
    sub_10004FA7C(v51);
    swift_release(v57);
    return;
  }
  sub_10079EB98(v21, a4 & 1);
  v23 = sub_10079C2C4(v15, v14);
  if ((v22 & 1) == (v24 & 1))
  {
    v18 = v23;
    if ((v22 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_10004FA40((uint64_t)v48, (uint64_t)v47);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v48);
    swift_bridgeObjectRelease(v14);
    v25 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v18);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v25);
    sub_100048ABC(v47, v25);
    goto LABEL_16;
  }
LABEL_30:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_10004F224@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  _OWORD v22[3];
  __int128 v23;
  _OWORD v24[2];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_10004FA40(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(_QWORD *)&v23 = v13;
    *((_QWORD *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  memset(v24, 0, sizeof(v24));
  v23 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_10004FA84((uint64_t)&v23, (uint64_t)v22);
  if (*((_QWORD *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_10004FF60((uint64_t)v21, &qword_10119DCB0);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

void sub_10004F400(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  void *v14;
  _BYTE v15[232];

  sub_10004A07C(0, (unint64_t *)&unk_10119DC90, ICUserIdentityStore_ptr);
  v5 = static ICUserIdentityStore.activeAccountDSID.getter();
  v6 = v5;
  if (v5)
  {
    v7 = objc_msgSend(v5, "longLongValue");

  }
  else
  {
    v7 = 0;
  }
  v8 = sub_100007E8C((uint64_t *)&unk_1011AD3E0);
  inited = swift_initStackObject(v8, v15);
  *(_OWORD *)(inited + 16) = xmmword_100EA7BA0;
  *(_QWORD *)(inited + 32) = 7368801;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  if (qword_10119B7E0 != -1)
    swift_once(&qword_10119B7E0, sub_10004E7B4);
  v11 = qword_10119DB78;
  v10 = qword_10119DB80;
  v12 = sub_100007E8C(&qword_10119DCA0);
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v10;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = 0x6369706F74;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 96) = 0xD000000000000011;
  *(_QWORD *)(inited + 104) = 0x8000000100E2BC50;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 128) = 1682535268;
  *(_QWORD *)(inited + 136) = 0xE400000000000000;
  if (v6)
  {
    v14 = &type metadata for Int64;
    *(_QWORD *)&v13 = v7;
    sub_100048ABC(&v13, (_OWORD *)(inited + 144));
  }
  else
  {
    *(_QWORD *)(inited + 168) = &type metadata for String;
    *(_QWORD *)(inited + 144) = 0;
    *(_QWORD *)(inited + 152) = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 176) = 0x746E6F4365676170;
  *(_QWORD *)(inited + 184) = 0xEB00000000747865;
  __asm { BR              X12 }
}

uint64_t sub_10004FA0C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10004FA38(uint64_t a1)
{
  uint64_t v1;

  sub_10004E6DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10004FA40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10004FA7C(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10004FA84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119DCA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10004FACC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_10004FB0C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t result;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint8_t *v33;
  uint64_t v34[2];
  uint64_t v35[5];
  __int128 v36;
  __int128 v37;
  _QWORD v38[3];
  _BYTE v39[8];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v34[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v34[-1] - v9;
  if (a1)
  {
    JSStoreFlowSegue.didCompleteSubscriptionPurchase.setter(1);
    v11 = objc_msgSend(a1, "responseDictionary");
    if (v11)
    {
      v12 = v11;
      v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v11, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v34[0] = 0xD000000000000012;
      v34[1] = 0x8000000100E2BC70;
      AnyHashable.init<A>(_:)(v34, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v13 + 16) && (v14 = sub_10079C294((uint64_t)v35), (v15 & 1) != 0))
      {
        sub_10004FA40(*(_QWORD *)(v13 + 56) + 32 * v14, (uint64_t)&v36);
      }
      else
      {
        v36 = 0u;
        v37 = 0u;
      }
      swift_bridgeObjectRelease(v13);
      sub_10004FF2C((uint64_t)v35);
      if (*((_QWORD *)&v37 + 1))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011A3090);
        if ((swift_dynamicCast(v34, &v36, (char *)&type metadata for Any + 8, v26, 6) & 1) != 0)
          JSStoreFlowSegue.subscriptionStatus.setter(v34[0]);
      }
      else
      {
        sub_10004FF60((uint64_t)&v36, &qword_10119DCC0);
      }
    }
    v27 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
    objc_msgSend(v27, "refreshMusicSubscriptionStatus");

    v28 = (id)*OS_os_log.scripting.unsafeMutableAddressor();
    v29 = Logger.init(_:)(v28);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[CommerceNavigationController] Did complete subscription purchase.", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
    result = JSStoreFlowSegue.didCompleteSubscriptionPurchase.setter(0);
    if (a2)
    {
      swift_errorRetain(a2);
      v17 = (id)*OS_os_log.scripting.unsafeMutableAddressor();
      Logger.init(_:)(v17);
      swift_errorRetain(a2);
      v18 = swift_errorRetain(a2);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(12, -1);
        v22 = swift_slowAlloc(32, -1);
        v35[0] = v22;
        *(_DWORD *)v21 = 136315138;
        v33 = v21 + 4;
        swift_getErrorValue(a2, v39, v38);
        v23 = Error.localizedDescription.getter(v38[1], v38[2]);
        v25 = v24;
        *(_QWORD *)&v36 = sub_100322200(v23, v24, v35);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, (char *)&v36 + 8);
        swift_bridgeObjectRelease(v25);
        swift_errorRelease(a2);
        swift_errorRelease(a2);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "[CommerceNavigationController] Subscription purchase failed with error: %s", v21, 0xCu);
        swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v21, -1, -1);

        swift_errorRelease(a2);
      }
      else
      {
        swift_errorRelease(a2);
        swift_errorRelease(a2);
        swift_errorRelease(a2);

      }
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  return result;
}

uint64_t sub_10004FF2C(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_10004FF60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100007E8C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10004FF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100537624(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10004FFA4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004FFC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10004FFEC(uint64_t a1)
{
  uint64_t v1;

  sub_10004E48C(a1, *(char **)(v1 + 16));
}

uint64_t destroy for CommerceView(uint64_t a1)
{

  return swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *initializeWithCopy for CommerceView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  v6 = v3;
  swift_retain(v5);
  return a1;
}

_QWORD *assignWithCopy for CommerceView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  v7 = a1[2];
  v8 = a2[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v7);
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for CommerceView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;

  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommerceView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommerceView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CommerceView()
{
  return &type metadata for CommerceView;
}

unint64_t sub_1000501A8()
{
  unint64_t result;

  result = qword_10119DCC8;
  if (!qword_10119DCC8)
  {
    result = swift_getWitnessTable(&unk_100EA7C64, &type metadata for CommerceView);
    atomic_store(result, (unint64_t *)&qword_10119DCC8);
  }
  return result;
}

void *sub_1000501EC()
{
  return &protocol witness table for Never;
}

unint64_t sub_1000501F8()
{
  unint64_t result;

  result = qword_10119DCD0;
  if (!qword_10119DCD0)
  {
    result = swift_getWitnessTable("-q ", &type metadata for CommerceView);
    atomic_store(result, (unint64_t *)&qword_10119DCD0);
  }
  return result;
}

unint64_t sub_10005023C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119CBF0;
  if (!qword_10119CBF0)
  {
    v1 = type metadata accessor for TabSelectionManager(255);
    result = swift_getWitnessTable(&unk_100EBC860, v1);
    atomic_store(result, (unint64_t *)&qword_10119CBF0);
  }
  return result;
}

uint64_t sub_10005028C()
{
  return 16;
}

__n128 sub_100050298(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1000502A4()
{
  unint64_t result;

  result = qword_10119DCE0;
  if (!qword_10119DCE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabIdentifier, &type metadata for TabIdentifier);
    atomic_store(result, (unint64_t *)&qword_10119DCE0);
  }
  return result;
}

uint64_t JSMediaItem.mappingContent.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v42)(void);
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, char *, uint64_t);
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(void);

  v2 = v1;
  v96 = a1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v4 = __chkstk_darwin(v3);
  v93 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v94 = (char *)&v88 - v6;
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v91 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v92 = (char *)&v88 - v11;
  v12 = sub_100007E8C(&qword_10119DCF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v88 - v16;
  v18 = type metadata accessor for MusicLibraryMapping.ItemKind(0);
  v97 = *(_QWORD *)(v18 - 8);
  v98 = v18;
  v19 = __chkstk_darwin(v18);
  v95 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v88 - v22;
  v99 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE8);
  v24 = (_QWORD *)((uint64_t (*)(uint64_t))v99)(v21);
  if (v24)
  {
    v25 = v24;
    v26 = (*(uint64_t (**)(void))((swift_isaMask & *v24) + 0x100))();
    v28 = v27;

    if (v28)
    {
      v89 = v26;
      v29 = (_QWORD *)v99();
      v90 = v7;
      if (v29)
      {
        v30 = v29;
        sub_100051330(v29, (uint64_t)v17);
      }
      else
      {
        v31 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x100))();
        if (!v31)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v17, 1, 1, v98);
LABEL_10:
          swift_bridgeObjectRelease(v28);
          sub_10004FF60((uint64_t)v17, &qword_10119DCF0);
          v7 = v90;
          goto LABEL_11;
        }
        v30 = v31;
        sub_100051488(v31, (uint64_t)v17);
      }
      v32 = v97;

      v33 = v98;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v17, 1, v98) != 1)
      {
        v34 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v34(v23, v17, v33);
        v35 = sub_100007E8C(&qword_1011B6470);
        v36 = v96;
        v37 = (char *)v96 + *(int *)(v35 + 48);
        *v36 = MusicItemID.init(_:)(v89, v28);
        v36[1] = v38;
        v34(v37, v23, v33);
        v39 = enum case for MusicLibraryMapping.ItemContent.unfetchedItem<A>(_:);
        v40 = sub_100007E8C(&qword_10119DCF8);
        return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v36, v39, v40);
      }
      goto LABEL_10;
    }
  }
LABEL_11:
  v42 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x100);
  v43 = (void *)v42();
  if (v43)
  {
    v44 = v43;
    v45 = objc_msgSend(v43, "effectiveStorePlatformDictionary");

    if (v45)
    {
      v46 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v45, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v47 = sub_100050AA8(v46);
      v43 = (void *)swift_bridgeObjectRelease(v46);
      if (v47)
      {
        v48 = (uint64_t)v94;
        GenericMusicItem.init(_:)(v47);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v48, 1, v7) != 1)
        {
          v76 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
          v77 = v92;
          v76(v92, v48, v7);
          goto LABEL_37;
        }
        v43 = (void *)sub_10004FF60(v48, (uint64_t *)&unk_1011A20D0);
      }
    }
  }
  v49 = (_QWORD *)(*(uint64_t (**)(void *))((swift_isaMask & *v2) + 0x238))(v43);
  if (v49)
  {
    v50 = v49;
    v51 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v49) + 0x78))();

    if (v51)
    {
      v52 = objc_msgSend(v51, "effectiveStorePlatformDictionary");

      if (v52)
      {
        v53 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v52, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v54 = sub_100050AA8(v53);
        v49 = (_QWORD *)swift_bridgeObjectRelease(v53);
        if (v54)
        {
          v55 = (uint64_t)v93;
          GenericMusicItem.init(_:)(v54);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v55, 1, v7) == 1)
          {
            v49 = (_QWORD *)sub_10004FF60(v55, (uint64_t *)&unk_1011A20D0);
            goto LABEL_22;
          }
          v76 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
          v77 = v91;
          v76(v91, v55, v7);
LABEL_37:
          v81 = v96;
          v76((char *)v96, (uint64_t)v77, v7);
          goto LABEL_38;
        }
      }
    }
  }
LABEL_22:
  v56 = (_QWORD *)((uint64_t (*)(_QWORD *))v99)(v49);
  if (v56)
  {
    v57 = v56;
    sub_100051330(v56, (uint64_t)v15);
    goto LABEL_26;
  }
  v58 = (void *)v42();
  if (v58)
  {
    v57 = v58;
    sub_100051488(v58, (uint64_t)v15);
LABEL_26:
    v59 = v98;

    v60 = v97;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v15, 1, v59) != 1)
    {
      v61 = *(uint64_t (**)(char *, char *, uint64_t))(v60 + 32);
      v62 = v95;
      v63 = v61(v95, v15, v59);
      v64 = (_QWORD *)((uint64_t (*)(uint64_t))v99)(v63);
      if (v64)
      {
        v65 = v64;
        v66 = sub_100051B04(v64);
      }
      else
      {
        v68 = (void *)v42();
        if (!v68)
        {
          v85 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
          v86 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier + 8);
          swift_bridgeObjectRetain();
          v69 = MusicItemID.init(_:)(v85, v86);
          v70 = v87;
          goto LABEL_32;
        }
        v65 = v68;
        v66 = sub_100051C94(v68);
      }
      v69 = v66;
      v70 = v67;

LABEL_32:
      v71 = sub_100007E8C(&qword_1011B6470);
      v72 = v96;
      v73 = (char *)v96 + *(int *)(v71 + 48);
      *v96 = v69;
      v72[1] = v70;
      v61(v73, v62, v59);
      v74 = enum case for MusicLibraryMapping.ItemContent.unfetchedItem<A>(_:);
      v75 = sub_100007E8C(&qword_10119DCF8);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 104))(v72, v74, v75);
    }
    goto LABEL_35;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v15, 1, 1, v98);
LABEL_35:
  sub_10004FF60((uint64_t)v15, &qword_10119DCF0);
  v78 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
  v79 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier + 8);
  swift_bridgeObjectRetain();
  v80 = MusicItemID.init(_:)(v78, v79);
  v81 = v96;
  *v96 = v80;
  v81[1] = v82;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v81, enum case for GenericMusicItem.other(_:), v7);
LABEL_38:
  v83 = enum case for MusicLibraryMapping.ItemContent.fetchedCatalogItem<A>(_:);
  v84 = sub_100007E8C(&qword_10119DCF8);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 104))(v81, v83, v84);
}

void JSMediaItem.kind.getter(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE8))();
  if (v3)
  {
    v6 = v3;
    sub_100051330(v3, a1);
LABEL_5:

    return;
  }
  v4 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x100))();
  if (v4)
  {
    v6 = v4;
    sub_100051488(v4, a1);
    goto LABEL_5;
  }
  v5 = type metadata accessor for MusicLibraryMapping.ItemKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
}

unint64_t sub_100050AA8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];
  __int128 v31;
  _OWORD v32[2];
  _OWORD v33[2];
  _OWORD v34[2];
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007E8C(&qword_10119D1F8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v26 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = (v6 - 1) & v6;
      v12 = __clz(__rbit64(v6)) | (v8 << 6);
      v13 = v8;
    }
    else
    {
      v14 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_37;
      if (v14 >= v25)
      {
LABEL_33:
        sub_10004FA7C(a1);
        return (unint64_t)v3;
      }
      v15 = *(_QWORD *)(v26 + 8 * v14);
      v13 = v8 + 1;
      if (!v15)
      {
        v13 = v8 + 2;
        if (v8 + 2 >= v25)
          goto LABEL_33;
        v15 = *(_QWORD *)(v26 + 8 * v13);
        if (!v15)
        {
          v13 = v8 + 3;
          if (v8 + 3 >= v25)
            goto LABEL_33;
          v15 = *(_QWORD *)(v26 + 8 * v13);
          if (!v15)
          {
            v13 = v8 + 4;
            if (v8 + 4 >= v25)
              goto LABEL_33;
            v15 = *(_QWORD *)(v26 + 8 * v13);
            if (!v15)
            {
              v16 = v8 + 5;
              if (v8 + 5 >= v25)
                goto LABEL_33;
              v15 = *(_QWORD *)(v26 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v13 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_38;
                  if (v13 >= v25)
                    goto LABEL_33;
                  v15 = *(_QWORD *)(v26 + 8 * v13);
                  ++v16;
                  if (v15)
                    goto LABEL_26;
                }
              }
              v13 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v11 = (v15 - 1) & v15;
      v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    sub_100051FEC(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)v37);
    sub_10004FA40(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v38 + 8);
    v35[0] = v38[0];
    v35[1] = v38[1];
    v36 = v39;
    v34[0] = v37[0];
    v34[1] = v37[1];
    sub_100051FEC((uint64_t)v34, (uint64_t)v29);
    if (!swift_dynamicCast(&v27, v29, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v27 = 0;
      v28 = 0;
      sub_10004FF60((uint64_t)v34, &qword_10119DD10);
      swift_bridgeObjectRelease(v28);
      sub_10004FA7C(a1);
      swift_release(v3);
      return 0;
    }
    v17 = v27;
    v18 = v28;
    sub_10004FA40((uint64_t)v35 + 8, (uint64_t)v29);
    sub_10004FF60((uint64_t)v34, &qword_10119DD10);
    sub_100048ABC(v29, v30);
    *(_QWORD *)&v31 = v17;
    *((_QWORD *)&v31 + 1) = v18;
    sub_100048ABC(v30, v32);
    v19 = v31;
    sub_100048ABC(v32, v33);
    sub_100048ABC(v33, &v31);
    result = sub_10079C2C4(v19, *((uint64_t *)&v19 + 1));
    v20 = result;
    if ((v21 & 1) != 0)
    {
      v9 = v3[6] + 16 * result;
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      *(_OWORD *)v9 = v19;
      v10 = (_QWORD *)(v3[7] + 32 * v20);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v10);
      result = (unint64_t)sub_100048ABC(&v31, v10);
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v3[6] + 16 * result) = v19;
    result = (unint64_t)sub_100048ABC(&v31, (_OWORD *)(v3[7] + 32 * result));
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_36;
    v3[2] = v24;
LABEL_8:
    v8 = v13;
    v6 = v11;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_100050E78(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;
  _OWORD v40[2];
  _OWORD v41[2];
  uint64_t v42;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007E8C(&qword_10119DD08);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v28 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = (v6 - 1) & v6;
      v11 = __clz(__rbit64(v6)) | (v8 << 6);
      v12 = v8;
    }
    else
    {
      v13 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_40;
      if (v13 >= v27)
      {
LABEL_36:
        sub_10004FA7C(a1);
        return (unint64_t)v3;
      }
      v14 = *(_QWORD *)(v28 + 8 * v13);
      v12 = v8 + 1;
      if (!v14)
      {
        v12 = v8 + 2;
        if (v8 + 2 >= v27)
          goto LABEL_36;
        v14 = *(_QWORD *)(v28 + 8 * v12);
        if (!v14)
        {
          v12 = v8 + 3;
          if (v8 + 3 >= v27)
            goto LABEL_36;
          v14 = *(_QWORD *)(v28 + 8 * v12);
          if (!v14)
          {
            v12 = v8 + 4;
            if (v8 + 4 >= v27)
              goto LABEL_36;
            v14 = *(_QWORD *)(v28 + 8 * v12);
            if (!v14)
            {
              v15 = v8 + 5;
              if (v8 + 5 >= v27)
                goto LABEL_36;
              v14 = *(_QWORD *)(v28 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_41;
                  if (v12 >= v27)
                    goto LABEL_36;
                  v14 = *(_QWORD *)(v28 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_100051FEC(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v40);
    sub_10004FA40(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v41 + 8);
    v38[0] = v41[0];
    v38[1] = v41[1];
    v39 = v42;
    v37[0] = v40[0];
    v37[1] = v40[1];
    sub_100051FEC((uint64_t)v37, (uint64_t)&v31);
    if (!swift_dynamicCast(&v29, &v31, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v29 = 0;
      v30 = 0;
      sub_10004FF60((uint64_t)v37, &qword_10119DD10);
      swift_bridgeObjectRelease(v30);
LABEL_35:
      sub_10004FA7C(a1);
      swift_release(v3);
      return 0;
    }
    v16 = v29;
    v17 = v30;
    sub_10004FA40((uint64_t)v38 + 8, (uint64_t)&v29);
    sub_10004FF60((uint64_t)v37, &qword_10119DD10);
    if ((swift_dynamicCast(&v31, &v29, (char *)&type metadata for Any + 8, &type metadata for AnyHashable, 6) & 1) == 0)
    {
      v33 = 0;
      v31 = 0u;
      v32 = 0u;
      swift_bridgeObjectRelease(v17);
      sub_10004FF60((uint64_t)&v31, &qword_1011EAEC0);
      goto LABEL_35;
    }
    v34 = v31;
    v35 = v32;
    v36 = v33;
    result = sub_10079C2C4(v16, v17);
    v18 = result;
    if ((v19 & 1) != 0)
    {
      v9 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v9[1]);
      *v9 = v16;
      v9[1] = v17;
      result = sub_100052028((uint64_t)&v31, v3[7] + 40 * v18);
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v20 = (uint64_t *)(v3[6] + 16 * result);
    *v20 = v16;
    v20[1] = v17;
    v21 = v3[7] + 40 * result;
    v22 = v31;
    v23 = v32;
    *(_QWORD *)(v21 + 32) = v33;
    *(_OWORD *)v21 = v22;
    *(_OWORD *)(v21 + 16) = v23;
    v24 = v3[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_39;
    v3[2] = v26;
LABEL_8:
    v8 = v12;
    v6 = v10;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t JSMediaItem.mappingID.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v1 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE8))();
  if (v1)
  {
    v2 = v1;
    v3 = sub_100051B04(v1);
LABEL_5:
    v5 = v3;

    return v5;
  }
  v4 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x100))();
  if (v4)
  {
    v2 = v4;
    v3 = sub_100051C94(v4);
    goto LABEL_5;
  }
  v7 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
  v8 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier + 8);
  swift_bridgeObjectRetain();
  return MusicItemID.init(_:)(v7, v8);
}

uint64_t sub_100051330@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch((*(unsigned __int8 (**)(void))((swift_isaMask & *a1) + 0x130))())
  {
    case 0u:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.album(_:);
      goto LABEL_15;
    case 1u:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.playlist(_:);
      goto LABEL_15;
    case 2u:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.track(_:);
      goto LABEL_15;
    case 3u:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.station(_:);
      goto LABEL_15;
    case 4u:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.musicMovie(_:);
      goto LABEL_15;
    case 5u:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.tvShow(_:);
      goto LABEL_15;
    case 6u:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.tvSeason(_:);
      goto LABEL_15;
    case 7u:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.tvEpisode(_:);
      goto LABEL_15;
    case 8u:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.artist(_:);
      goto LABEL_15;
    case 0xBu:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.uploadedVideo(_:);
      goto LABEL_15;
    case 0xCu:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.uploadedAudio(_:);
      goto LABEL_15;
    case 0xDu:
      v3 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.recordLabel(_:);
LABEL_15:
      v8 = *v3;
      v9 = type metadata accessor for MusicLibraryMapping.ItemKind(0);
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a2, v8, v9);
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v6 = a2;
      v7 = 0;
      v4 = v9;
      break;
    default:
      v4 = type metadata accessor for MusicLibraryMapping.ItemKind(0);
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
      v6 = a2;
      v7 = 1;
      break;
  }
  return v5(v6, v7, 1, v4);
}

uint64_t sub_100051488@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  unsigned int *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;

  v3 = objc_msgSend(a1, "itemKind");
  if (!v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindAlbum);
    v10 = v22;
    goto LABEL_17;
  }
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v7 = v6;

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindAlbum);
  v10 = v9;
  if (!v7)
  {
LABEL_17:
    swift_bridgeObjectRelease(v10);
    v23 = MPStoreItemMetadataItemKindMovie;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindMovie);
    swift_bridgeObjectRelease(v24);
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindPlaylist);
    swift_bridgeObjectRelease(v25);
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindSong);
    swift_bridgeObjectRelease(v26);
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindTVEpisode);
    swift_bridgeObjectRelease(v27);
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindTVSeason);
    swift_bridgeObjectRelease(v28);
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindArtist);
    swift_bridgeObjectRelease(v29);
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindRecordLabel);
    swift_bridgeObjectRelease(v30);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    swift_bridgeObjectRelease(v31);
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindMusicVideo);
    swift_bridgeObjectRelease(v32);
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindRadioStation);
    swift_bridgeObjectRelease(v33);
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindTVShow);
    swift_bridgeObjectRelease(v34);
    goto LABEL_18;
  }
  if (v8 == v5 && v7 == v9)
  {
    swift_bridgeObjectRelease(v7);
    goto LABEL_20;
  }
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v5, v7, 0);
  swift_bridgeObjectRelease(v10);
  if ((v12 & 1) != 0)
  {
LABEL_20:
    swift_bridgeObjectRelease(v7);
    v39 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.album(_:);
LABEL_52:
    v64 = *v39;
    v65 = type metadata accessor for MusicLibraryMapping.ItemKind(0);
    v66 = *(_QWORD *)(v65 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 104))(a2, v64, v65);
    v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56);
    v37 = a2;
    v38 = 0;
    v35 = v65;
    return v36(v37, v38, 1, v35);
  }
  v13 = MPStoreItemMetadataItemKindMovie;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindMovie);
  if (v14 == v5 && v7 == v15)
    goto LABEL_50;
  v17 = v15;
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v5, v7, 0);
  swift_bridgeObjectRelease(v17);
  if ((v18 & 1) != 0)
  {
LABEL_51:
    swift_bridgeObjectRelease(v7);
    v39 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.musicMovie(_:);
    goto LABEL_52;
  }
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindPlaylist);
  v21 = v20;
  if (v19 == v5 && v7 == v20)
  {
    swift_bridgeObjectRelease(v7);
LABEL_22:
    swift_bridgeObjectRelease(v7);
    v39 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.playlist(_:);
    goto LABEL_52;
  }
  v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v5, v7, 0);
  swift_bridgeObjectRelease(v21);
  if ((v40 & 1) != 0)
    goto LABEL_22;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindSong);
  v43 = v42;
  if (v41 == v5 && v7 == v42)
  {
    swift_bridgeObjectRelease(v7);
LABEL_27:
    swift_bridgeObjectRelease(v7);
    v39 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.track(_:);
    goto LABEL_52;
  }
  v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, v5, v7, 0);
  swift_bridgeObjectRelease(v43);
  if ((v44 & 1) != 0)
    goto LABEL_27;
  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindTVEpisode);
  v47 = v46;
  if (v45 == v5 && v7 == v46)
  {
    swift_bridgeObjectRelease(v7);
LABEL_32:
    swift_bridgeObjectRelease(v7);
    v39 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.tvEpisode(_:);
    goto LABEL_52;
  }
  v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v46, v5, v7, 0);
  swift_bridgeObjectRelease(v47);
  if ((v48 & 1) != 0)
    goto LABEL_32;
  v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindTVSeason);
  v51 = v50;
  if (v49 == v5 && v7 == v50)
  {
    swift_bridgeObjectRelease(v7);
LABEL_37:
    swift_bridgeObjectRelease(v7);
    v39 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.tvSeason(_:);
    goto LABEL_52;
  }
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v50, v5, v7, 0);
  swift_bridgeObjectRelease(v51);
  if ((v52 & 1) != 0)
    goto LABEL_37;
  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindArtist);
  v55 = v54;
  if (v53 == v5 && v7 == v54)
  {
    swift_bridgeObjectRelease(v7);
LABEL_42:
    swift_bridgeObjectRelease(v7);
    v39 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.artist(_:);
    goto LABEL_52;
  }
  v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, v5, v7, 0);
  swift_bridgeObjectRelease(v55);
  if ((v56 & 1) != 0)
    goto LABEL_42;
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindRecordLabel);
  v59 = v58;
  if (v57 == v5 && v7 == v58)
  {
    swift_bridgeObjectRelease(v7);
LABEL_47:
    swift_bridgeObjectRelease(v7);
    v39 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.recordLabel(_:);
    goto LABEL_52;
  }
  v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v58, v5, v7, 0);
  swift_bridgeObjectRelease(v59);
  if ((v60 & 1) != 0)
    goto LABEL_47;
  v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v63 = v62;
  if (v61 == v5 && v7 == v62)
  {
LABEL_50:
    swift_bridgeObjectRelease(v7);
    goto LABEL_51;
  }
  v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v62, v5, v7, 0);
  swift_bridgeObjectRelease(v63);
  if ((v68 & 1) != 0)
    goto LABEL_51;
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindMusicVideo);
  v71 = v70;
  if (v69 == v5 && v7 == v70)
  {
    swift_bridgeObjectRelease(v7);
LABEL_59:
    swift_bridgeObjectRelease(v7);
    v39 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.musicVideo(_:);
    goto LABEL_52;
  }
  v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v70, v5, v7, 0);
  swift_bridgeObjectRelease(v71);
  if ((v72 & 1) != 0)
    goto LABEL_59;
  v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindRadioStation);
  v75 = v74;
  if (v73 == v5 && v7 == v74)
  {
    swift_bridgeObjectRelease(v7);
LABEL_64:
    swift_bridgeObjectRelease(v7);
    v39 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.station(_:);
    goto LABEL_52;
  }
  v76 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v74, v5, v7, 0);
  swift_bridgeObjectRelease(v75);
  if ((v76 & 1) != 0)
    goto LABEL_64;
  v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindTVShow);
  v79 = v78;
  if (v77 == v5 && v7 == v78)
  {
    swift_bridgeObjectRelease_n(v7, 2);
LABEL_69:
    v39 = (unsigned int *)&enum case for MusicLibraryMapping.ItemKind.tvShow(_:);
    goto LABEL_52;
  }
  v80 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v78, v5, v7, 0);
  swift_bridgeObjectRelease(v79);
  swift_bridgeObjectRelease(v7);
  if ((v80 & 1) != 0)
    goto LABEL_69;
LABEL_18:
  v35 = type metadata accessor for MusicLibraryMapping.ItemKind(0);
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v37 = a2;
  v38 = 1;
  return v36(v37, v38, 1, v35);
}

uint64_t sub_100051B04(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x100))();
  if (v5)
    return MusicItemID.init(_:)(v4, v5);
  v6 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x130);
  v7 = ((uint64_t (*)(uint64_t))v6)(v4);
  if (v7 != 15)
  {
    v15 = JSIdentifierSet.ContentKind.rawValue.getter(v7);
    if (v15 == 0x6D75626C61 && v16 == 0xE500000000000000)
    {
      v20 = swift_bridgeObjectRelease(0xE500000000000000);
    }
    else
    {
      v18 = v16;
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, 0x6D75626C61, 0xE500000000000000, 0);
      v20 = swift_bridgeObjectRelease(v18);
      if ((v19 & 1) == 0)
        goto LABEL_3;
    }
    v4 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xD0))(v20);
    if (v5)
      return MusicItemID.init(_:)(v4, v5);
  }
LABEL_3:
  v8 = v6();
  if (v8 == 15)
    goto LABEL_21;
  v9 = JSIdentifierSet.ContentKind.rawValue.getter(v8);
  if (v9 == 0x7473696C79616C70 && v10 == 0xE800000000000000)
  {
    v14 = swift_bridgeObjectRelease(0xE800000000000000);
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, 0x7473696C79616C70, 0xE800000000000000, 0);
    v14 = swift_bridgeObjectRelease(v12);
    if ((v13 & 1) == 0)
      goto LABEL_21;
  }
  v4 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xE8))(v14);
  if (!v5)
  {
LABEL_21:
    v21 = v2 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier;
    v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
    v23 = *(_QWORD *)(v21 + 8);
    swift_bridgeObjectRetain();
    v4 = v22;
    v5 = v23;
  }
  return MusicItemID.init(_:)(v4, v5);
}

uint64_t sub_100051C94(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_100052064(a1);
  if (!v4)
  {
    v5 = objc_msgSend(a1, "itemKind");
    if (v5)
    {
      v6 = v5;
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v9 = v8;

      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindAlbum);
      v12 = v11;
      if (v9)
      {
        if (v7 == v10 && v9 == v11)
        {
          swift_bridgeObjectRelease_n(v9, 2);
          goto LABEL_15;
        }
        v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
        swift_bridgeObjectRelease(v9);
        swift_bridgeObjectRelease(v12);
        if ((v14 & 1) != 0)
        {
LABEL_15:
          v19 = objc_msgSend(a1, "cloudAlbumID");
          if (v19)
          {
            v20 = v19;
            v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
            v23 = v22;

            v3 = v21;
            v4 = v23;
            return MusicItemID.init(_:)(v3, v4);
          }
        }
LABEL_12:
        v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
        v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier + 8);
        swift_bridgeObjectRetain();
        v3 = v16;
        v4 = v17;
        return MusicItemID.init(_:)(v3, v4);
      }
    }
    else
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindAlbum);
      v12 = v15;
    }
    swift_bridgeObjectRelease(v12);
    goto LABEL_12;
  }
  return MusicItemID.init(_:)(v3, v4);
}

unint64_t sub_100051DDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119DD00;
  if (!qword_10119DD00)
  {
    v1 = type metadata accessor for GenericMusicItem(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for GenericMusicItem, v1);
    atomic_store(result, (unint64_t *)&qword_10119DD00);
  }
  return result;
}

uint64_t sub_100051E24()
{
  _QWORD **v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *v0;
  v2 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE8))();
  if (v2)
  {
    v3 = v2;
    v4 = sub_100051B04(v2);
LABEL_5:
    v6 = v4;

    return v6;
  }
  v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x100))();
  if (v5)
  {
    v3 = v5;
    v4 = sub_100051C94(v5);
    goto LABEL_5;
  }
  v8 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
  v9 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier + 8);
  swift_bridgeObjectRetain();
  return MusicItemID.init(_:)(v8, v9);
}

uint64_t sub_100051EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = type metadata accessor for JSMediaItem(0);
  return MusicLibraryMappingItem.catalogItem.getter(v3, a2);
}

void sub_100051F14(uint64_t a1@<X8>)
{
  _QWORD **v1;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v3 = *v1;
  v4 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xE8))();
  if (v4)
  {
    v7 = v4;
    sub_100051330(v4, a1);
LABEL_5:

    return;
  }
  v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x100))();
  if (v5)
  {
    v7 = v5;
    sub_100051488(v5, a1);
    goto LABEL_5;
  }
  v6 = type metadata accessor for MusicLibraryMapping.ItemKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 1, 1, v6);
}

uint64_t sub_100051FCC@<X0>(uint64_t *a1@<X8>)
{
  return JSMediaItem.mappingContent.getter(a1);
}

uint64_t sub_100051FEC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_100052028(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 40))(a2, a1);
  return a2;
}

uint64_t sub_100052064(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  Class isa;
  id v13;
  _OWORD v15[2];
  __int128 v16;
  uint64_t v17;

  v2 = objc_msgSend(a1, "storeID");
  v3 = (uint64_t)v2;
  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v15, v2);
    swift_unknownObjectRelease(v3);
    sub_100048ABC(v15, &v16);
    v4 = v17;
    v5 = sub_100007E68(&v16, v17);
    v6 = _bridgeAnythingToObjectiveC<A>(_:)(v5, v4);
    v7 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue();
    swift_unknownObjectRelease(v6);
    if (v7)
    {
      v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v9 = v8;

    }
    else
    {
      v3 = 0;
      v9 = 0;
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v16);
  }
  else
  {
    v9 = 0;
  }
  v10 = objc_msgSend(a1, "subscriptionAdamID");
  v11 = objc_msgSend(a1, "purchasedAdamID");
  if (v10 || v11)
  {
    swift_bridgeObjectRelease(v9);
    isa = Int64._bridgeToObjectiveC()().super.super.isa;
    v13 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue();

    if (v13)
    {
      v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);

    }
    else
    {
      return 0;
    }
  }
  return v3;
}

char *sub_1000521B8(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  double v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  Class isa;
  objc_super v32;

  v5 = objc_allocWithZone((Class)type metadata accessor for LibraryTableNavigationTitleView.FilterButton());
  v6 = v2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC5Music31LibraryTableNavigationTitleView_filterButton] = sub_1000525C8(a1, a2);

  v32.receiver = v6;
  v32.super_class = (Class)type metadata accessor for LibraryTableNavigationTitleView();
  v7 = (char *)objc_msgSendSuper2(&v32, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC5Music31LibraryTableNavigationTitleView_filterButton;
  v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Music31LibraryTableNavigationTitleView_filterButton];
  v10 = v7;
  objc_msgSend(v10, "addSubview:", v9);
  objc_msgSend(*(id *)&v7[v8], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EA7AB0;
  v13 = objc_msgSend(*(id *)&v7[v8], "leadingAnchor");
  v14 = objc_msgSend(v10, "leadingAnchor");
  v15 = objc_msgSend(v13, "constraintGreaterThanOrEqualToAnchor:", v14);

  *(_QWORD *)(v12 + 32) = v15;
  v16 = objc_msgSend(v10, "trailingAnchor");
  v17 = objc_msgSend(*(id *)&v7[v8], "trailingAnchor");
  v18 = objc_msgSend(v16, "constraintGreaterThanOrEqualToAnchor:", v17);

  *(_QWORD *)(v12 + 40) = v18;
  v19 = objc_msgSend(*(id *)&v7[v8], "titleLabel");
  if (!v19)
    v19 = *(id *)&v7[v8];
  v20 = (void *)objc_opt_self(NSLayoutConstraint);
  v21 = objc_msgSend(v19, "centerXAnchor");

  v22 = objc_msgSend(v10, "centerXAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  LODWORD(v24) = 1144750080;
  v25 = objc_msgSend(v23, "withPriority:", v24);

  *(_QWORD *)(v12 + 48) = v25;
  v26 = objc_msgSend(*(id *)&v7[v8], "centerYAnchor");
  v27 = objc_msgSend(v10, "centerYAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v12 + 56) = v28;
  specialized Array._endMutation()(v29);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v20, "activateConstraints:", isa);

  return v10;
}

id sub_1000525C8(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  objc_class *v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t inited;
  NSString *v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  NSString v38;
  id v39;
  uint64_t v40;
  Class isa;
  id v42;
  id v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v53;
  uint64_t v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD aBlock[5];
  uint64_t v62;
  char v63[72];
  objc_super v64;

  v54 = a2;
  v53 = a1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIBackgroundConfiguration(0);
  __chkstk_darwin(v6);
  v59 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  __chkstk_darwin(v8);
  v56 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011C4EA0);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UIButton.Configuration(0);
  v60 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_10119DDD8);
  __chkstk_darwin(v19);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (objc_class *)type metadata accessor for LibraryTableNavigationTitleView.FilterButton();
  v64.receiver = v2;
  v64.super_class = v22;
  v23 = objc_msgSendSuper2(&v64, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v24 = qword_10119B820;
  v25 = v23;
  if (v24 != -1)
    swift_once(&qword_10119B820, sub_100053570);
  static UIView.Corner.value(_:continuous:)(1, *(double *)&qword_10119DD50);
  v26 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v21, 0, 1, v26);
  UIView.corner.setter(v21);
  static UIButton.Configuration.plain()(objc_msgSend(v25, "setTintAdjustmentMode:", 1));
  v27 = sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  v28 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCallout, UIFontWeightSemibold);
  v29 = sub_100007E8C((uint64_t *)&unk_1011A21B0);
  inited = swift_initStackObject(v29, v63);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(inited + 64) = v27;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = v28;
  v31 = NSFontAttributeName;
  v55 = v28;
  v32 = sub_100041C10(inited);
  AttributeContainer.init(_:)(v32);
  AttributedString.init(_:attributes:)(v53, v54, v12);
  v33 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 0, 1, v33);
  UIButton.Configuration.attributedTitle.setter(v15);
  v34 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCallout, UIFontWeightMedium);
  v35 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v36 = objc_msgSend(v35, "configurationWithFont:scale:", v34, 2);

  v37 = v36;
  v38 = String._bridgeToObjectiveC()();
  v39 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v38, v37);

  if (v39)
  {
    if (qword_10119B800 != -1)
      swift_once(&qword_10119B800, sub_100053384);
    v40 = qword_10119DD30;
    sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
    swift_bridgeObjectRetain();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v40);
    v42 = objc_msgSend(v35, "configurationWithPaletteColors:", isa);

    v43 = objc_msgSend(v39, "imageByApplyingSymbolConfiguration:", v42);
  }
  else
  {
    v43 = 0;
  }
  UIButton.Configuration.image.setter(v43);
  if (qword_10119B828 != -1)
    swift_once(&qword_10119B828, sub_100053580);
  UIButton.Configuration.imagePadding.setter(*(double *)&qword_10119DD58);
  if (qword_10119B830 != -1)
    swift_once(&qword_10119B830, sub_100053590);
  UIButton.Configuration.contentInsets.setter(*(double *)&qword_10119DD60, *(double *)algn_10119DD68, *(double *)&qword_10119DD70, unk_10119DD78);
  v44 = v56;
  (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, enum case for UIButton.Configuration.CornerStyle.medium(_:), v58);
  v45 = UIButton.Configuration.cornerStyle.setter(v44);
  v46 = v59;
  static UIBackgroundConfiguration.clear()(v45);
  UIButton.Configuration.background.setter(v46);
  v47 = v60;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v5, v18, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v5, 0, 1, v16);
  UIButton.configuration.setter(v5);
  v48 = swift_allocObject(&unk_1010AEE00, 24, 7);
  *(_QWORD *)(v48 + 16) = v37;
  aBlock[4] = sub_100053698;
  v62 = v48;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100223938;
  aBlock[3] = &unk_1010AEE18;
  v49 = _Block_copy(aBlock);
  v50 = v62;
  v51 = v37;
  objc_msgSend(v25, "setConfigurationUpdateHandler:", v49, swift_release(v50).n128_f64[0]);
  _Block_release(v49);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v16);
  return v25;
}

id sub_100052C74(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _OWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  id v32;
  unint64_t v33;
  NSString v34;
  id v35;
  Class isa;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  void (*v43)(_QWORD *, _QWORD);
  unsigned int v44;
  double v45;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD v51[4];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v47 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v47 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v47 - v14;
  v16 = objc_msgSend(a1, "isSelected");
  v17 = 0xD000000000000021;
  if (v16)
    v17 = 0xD000000000000026;
  v49 = v17;
  v18 = 0x8000000100E2BEF0;
  if (v16)
    v18 = 0x8000000100E2BF40;
  v50 = v18;
  v19 = (unint64_t)objc_msgSend(a1, "state");
  if (v19 <= 0xD)
  {
    if (((1 << v19) & 0x30) != 0)
    {
      if (qword_10119B808 != -1)
        swift_once(&qword_10119B808, sub_100053418);
      v26 = qword_10119DD38;
      goto LABEL_24;
    }
    if (((1 << v19) & 0x300) != 0)
    {
      v27 = sub_100007E8C((uint64_t *)&unk_1011A1470);
      v24 = (_OWORD *)swift_allocObject(v27, 40, 7);
      v21 = (uint64_t)v24;
      v24[1] = xmmword_100EA7A90;
      if (qword_10119B810 != -1)
        v24 = (_OWORD *)swift_once(&qword_10119B810, sub_1000534E4);
      v25 = (void *)qword_10119DD40;
      *(_QWORD *)(v21 + 32) = qword_10119DD40;
      goto LABEL_20;
    }
    if (((1 << v19) & 0x3000) != 0)
    {
      v20 = sub_100007E8C((uint64_t *)&unk_1011A1470);
      v21 = swift_allocObject(v20, 48, 7);
      *(_OWORD *)(v21 + 16) = xmmword_100EA7DB0;
      if (qword_10119B7E8 != -1)
        swift_once(&qword_10119B7E8, sub_100053308);
      v22 = (void *)qword_10119DD18;
      *(_QWORD *)(v21 + 32) = qword_10119DD18;
      v23 = qword_10119B7F0;
      v24 = v22;
      if (v23 != -1)
        v24 = (_OWORD *)swift_once(&qword_10119B7F0, sub_10005331C);
      v25 = (void *)qword_10119DD20;
      *(_QWORD *)(v21 + 40) = qword_10119DD20;
LABEL_20:
      v51[0] = v21;
      specialized Array._endMutation()(v24);
      v26 = v51[0];
      v28 = v25;
      goto LABEL_25;
    }
  }
  if (qword_10119B800 != -1)
    swift_once(&qword_10119B800, sub_100053384);
  v26 = qword_10119DD30;
LABEL_24:
  v28 = (id)swift_bridgeObjectRetain();
LABEL_25:
  UIButton.configuration.getter(v28);
  v29 = type metadata accessor for UIButton.Configuration(0);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48);
  if (v30(v15, 1, v29))
  {
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease(v26);
    sub_1000536B8((uint64_t)v15, (uint64_t)v13);
    UIButton.configuration.setter(v13);
    v31 = sub_100053700((uint64_t)v15);
  }
  else
  {
    v48 = v7;
    v32 = a2;
    v33 = v50;
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v33);
    v35 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v34, v32);

    if (v35)
    {
      sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v26);
      v37 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPaletteColors:", isa);

      v38 = objc_msgSend(v35, "imageByApplyingSymbolConfiguration:", v37);
    }
    else
    {
      swift_bridgeObjectRelease(v26);
      v38 = 0;
    }
    v7 = v48;
    UIButton.Configuration.image.setter(v38);
    v31 = UIButton.configuration.setter(v15);
  }
  UIButton.configuration.getter(v31);
  if (v30(v10, 1, v29))
  {
    sub_1000536B8((uint64_t)v10, (uint64_t)v13);
    UIButton.configuration.setter(v13);
    v39 = sub_100053700((uint64_t)v10);
  }
  else
  {
    if (objc_msgSend(a1, "isFocused"))
    {
      if (qword_10119B810 != -1)
        swift_once(&qword_10119B810, sub_1000534E4);
      v40 = (id)qword_10119DD40;
    }
    else
    {
      v40 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    }
    UIButton.Configuration.baseForegroundColor.setter(v40);
    v39 = UIButton.configuration.setter(v10);
  }
  UIButton.configuration.getter(v39);
  if (v30(v7, 1, v29))
  {
    sub_1000536B8((uint64_t)v7, (uint64_t)v13);
    UIButton.configuration.setter(v13);
    sub_100053700((uint64_t)v7);
  }
  else
  {
    if (objc_msgSend(a1, "isFocused"))
    {
      if (qword_10119B818 != -1)
        swift_once(&qword_10119B818, sub_100053508);
      v41 = (id)qword_10119DD48;
    }
    else
    {
      v41 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    }
    v42 = v41;
    v43 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.background.modify(v51);
    UIBackgroundConfiguration.backgroundColor.setter(v42);
    v43(v51, 0);
    UIButton.configuration.setter(v7);
  }
  v44 = objc_msgSend(a1, "isHighlighted");
  v45 = 1.0;
  if (v44)
    v45 = 0.5;
  return objc_msgSend(a1, "setAlpha:", v45);
}

id sub_100053308(uint64_t a1)
{
  return sub_100053344(a1, (SEL *)&selRef__carSystemFocusColor, &qword_10119DD18);
}

id sub_10005331C(uint64_t a1)
{
  return sub_100053344(a1, (SEL *)&selRef__carSystemFocusLabelColor, &qword_10119DD20);
}

id sub_100053330(uint64_t a1)
{
  return sub_100053344(a1, (SEL *)&selRef__carSystemFocusColor, &qword_10119DD28);
}

id sub_100053344(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  *a3 = result;
  return result;
}

id sub_100053384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v4;

  v0 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v1 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7A90;
  if (qword_10119B7E8 != -1)
    swift_once(&qword_10119B7E8, sub_100053308);
  v2 = qword_10119DD18;
  v4 = (void *)qword_10119DD18;
  *(_QWORD *)(v1 + 32) = qword_10119DD18;
  specialized Array._endMutation()(v2);
  qword_10119DD30 = v1;
  return v4;
}

id sub_100053418()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v7;

  v0 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7DB0;
  if (qword_10119B7F0 != -1)
    swift_once(&qword_10119B7F0, sub_10005331C);
  v2 = (void *)qword_10119DD20;
  *(_QWORD *)(v1 + 32) = qword_10119DD20;
  v3 = qword_10119B7F8;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_10119B7F8, sub_100053330);
  v5 = qword_10119DD28;
  v7 = (void *)qword_10119DD28;
  *(_QWORD *)(v1 + 40) = qword_10119DD28;
  specialized Array._endMutation()(v5);
  qword_10119DD38 = v1;
  return v7;
}

id sub_1000534E4(uint64_t a1)
{
  return sub_10005352C(a1, &qword_10119B7F0, (void **)&qword_10119DD20, (void **)&qword_10119DD40, (uint64_t)sub_10005331C);
}

id sub_100053508(uint64_t a1)
{
  return sub_10005352C(a1, &qword_10119B7F8, (void **)&qword_10119DD28, (void **)&qword_10119DD48, (uint64_t)sub_100053330);
}

id sub_10005352C(uint64_t a1, _QWORD *a2, void **a3, void **a4, uint64_t a5)
{
  void *v7;

  if (*a2 != -1)
    swift_once(a2, a5);
  v7 = *a3;
  *a4 = *a3;
  return v7;
}

void sub_100053570()
{
  qword_10119DD50 = 0x4020000000000000;
}

void sub_100053580()
{
  qword_10119DD58 = 0x4010000000000000;
}

void sub_100053590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = static Edge.Set.all.getter();
  v1 = EdgeInsets.init(_:length:)(v0, 5.0);
  qword_10119DD60 = NSDirectionalEdgeInsets.init(_:)(v1);
  *(_QWORD *)algn_10119DD68 = v2;
  qword_10119DD70 = v3;
  unk_10119DD78 = v4;
}

id sub_1000535D0()
{
  return sub_10004D23C(0, type metadata accessor for LibraryTableNavigationTitleView.FilterButton);
}

void sub_1000535F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _swift_stdlib_reportUnimplementedInitializer(a3, a4, "init(frame:)", 12, 0);
  __break(1u);
}

id sub_100053618(uint64_t a1)
{
  return sub_10004D23C(a1, type metadata accessor for LibraryTableNavigationTitleView);
}

uint64_t type metadata accessor for LibraryTableNavigationTitleView()
{
  return objc_opt_self(_TtC5Music31LibraryTableNavigationTitleView);
}

uint64_t type metadata accessor for LibraryTableNavigationTitleView.FilterButton()
{
  return objc_opt_self(_TtCC5Music31LibraryTableNavigationTitleViewP33_3965C2C7497B73B06F1AFAA22DDD94DB12FilterButton);
}

uint64_t sub_100053674()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100053698(void *a1)
{
  uint64_t v1;

  return sub_100052C74(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000536A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000536B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000536B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100053700(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100053740@<X0>(uint64_t a1@<X8>)
{
  unint64_t *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t KeyPath;
  char *v20;
  uint64_t v21;
  char v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[7];

  v51 = a1;
  v49 = type metadata accessor for DynamicTypeSize(0);
  v48 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119DFA8);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119DFB0);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_10119DFB8);
  __chkstk_darwin(v47);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119DFC0);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100007E8C(&qword_10119DFC8);
  v15 = __chkstk_darwin(v50);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v15);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v18 = sub_100007E8C(&qword_10119DFD0);
  sub_100053B6C(v1, (uint64_t *)&v6[*(int *)(v18 + 44)]);
  KeyPath = swift_getKeyPath(&unk_100EA7FD0);
  sub_10004A160((uint64_t)v6, (uint64_t)v9, &qword_10119DFA8);
  v20 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v20 = KeyPath;
  v20[8] = 1;
  v21 = sub_10004FF60((uint64_t)v6, &qword_10119DFA8);
  v22 = static Edge.Set.vertical.getter(v21);
  type metadata accessor for NoContentCell(0);
  sub_1008237B8((uint64_t)v3);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  v23 = 7.0;
  if ((byte_1011C36B8 & 1) == 0)
  {
    if ((DynamicTypeSize.isAccessibilitySize.getter() & 1) != 0)
      v23 = 20.0;
    else
      v23 = 10.0;
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v3, v49);
  v24 = EdgeInsets.init(_all:)(v23);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_10004A160((uint64_t)v9, (uint64_t)v11, &qword_10119DFB0);
  v31 = &v11[*(int *)(v47 + 36)];
  *v31 = v22;
  *((double *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  v32 = sub_10004FF60((uint64_t)v9, &qword_10119DFB0);
  v33 = static Alignment.center.getter(v32);
  sub_100149790(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v33, v34);
  v35 = sub_10004FF60((uint64_t)v11, &qword_10119DFB8);
  v36 = byte_1011C36B8;
  v37 = static Alignment.center.getter(v35);
  if (v36)
    v39 = 0x4051000000000000;
  else
    v39 = 0x404C000000000000;
  LOBYTE(v46) = 1;
  LOBYTE(v45) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v52, 0, 1, 0, 1, 0, 1, v39, 0, 0, v45, 0, v46, v37, v38);
  sub_10004A160((uint64_t)v14, (uint64_t)v17, &qword_10119DFC0);
  v40 = &v17[*(int *)(v50 + 36)];
  v41 = v52[5];
  *((_OWORD *)v40 + 4) = v52[4];
  *((_OWORD *)v40 + 5) = v41;
  *((_OWORD *)v40 + 6) = v52[6];
  v42 = v52[1];
  *(_OWORD *)v40 = v52[0];
  *((_OWORD *)v40 + 1) = v42;
  v43 = v52[3];
  *((_OWORD *)v40 + 2) = v52[2];
  *((_OWORD *)v40 + 3) = v43;
  sub_10004FF60((uint64_t)v14, &qword_10119DFC0);
  return sub_100055B00((uint64_t)v17, v51);
}

uint64_t sub_100053B6C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)();
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  __n128 v81;
  char v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  int v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[3];

  v4 = type metadata accessor for BorderlessButtonStyle(0);
  v96 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100007E8C(&qword_10119DFD8);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v90 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100007E8C(&qword_10119DFE0);
  __chkstk_darwin(v93);
  v89 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119DFE8);
  v104 = *(_QWORD *)(v9 - 8);
  v105 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119DFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v101 = (char *)&v88 - v16;
  v17 = type metadata accessor for Locale(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a1;
  v23 = a1[1];
  v25 = a1[2];
  v102 = v15;
  v103 = a2;
  v97 = v4;
  *(_QWORD *)&v98 = v23;
  v94 = v11;
  v95 = v6;
  *((_QWORD *)&v98 + 1) = v25;
  if ((v24 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFCLL)
  {
    v26 = 0x8000000100E2C010;
    v27 = 0x1000000000000024;
    goto LABEL_5;
  }
  if ((v24 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL)
  {
    v26 = 0x8000000100E2C040;
    v27 = 0xD000000000000024;
LABEL_5:
    v28 = String.LocalizationValue.init(stringLiteral:)(v27, v26);
    static Locale.current.getter(v28);
    v29 = String.init(localized:table:bundle:locale:comment:)(v22, 0, 0, 0, v19, 0, 0, 256);
    v31 = v30;
    goto LABEL_7;
  }
  v32 = v23;
  sub_100055294(v24, v23, v25);
  v33 = sub_100709F2C(v24, v32, v25);
  v34 = v25;
  v29 = v33;
  v31 = v35;
  sub_100055B48(v24, v32, v34);
LABEL_7:
  v106[0] = v29;
  v106[1] = v31;
  v36 = sub_100055B68();
  v37 = Text.init<A>(_:)(v106, &type metadata for String, v36);
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  LODWORD(v106[0]) = static HierarchicalShapeStyle.secondary.getter(v37);
  v44 = Text.foregroundStyle<A>(_:)(v106, v37, v39, v43, v41, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v46 = v45;
  v99 = v47;
  v100 = v48;
  sub_100055BAC(v37, v39, v43);
  swift_bridgeObjectRelease(v41);
  if ((v24 & 0xFFFFFFFFFFFFFEFCLL | 2) == 0x3FFFFFEFELL)
  {
    v49 = 1;
    v50 = (uint64_t)v101;
    goto LABEL_16;
  }
  v49 = v24 >> 62;
  v50 = (uint64_t)v101;
  if (!(v24 >> 62))
  {
    v55 = *((_QWORD *)&v98 + 1);
    v56 = (void (*)())v98;
    sub_100055294(v24, v98, *((uint64_t *)&v98 + 1));
    v57 = String.LocalizationValue.init(stringLiteral:)(0x6961674120797254, 0xE90000000000006ELL);
    static Locale.current.getter(v57);
    v52 = String.init(localized:table:bundle:locale:comment:)(v22, 0, 0, 0, v19, "Button title for view displayed when a connection error occurs", 62, 2);
    v54 = v58;
    goto LABEL_15;
  }
  if ((_DWORD)v49 != 1)
  {
    v49 = 1;
    if (v24 == 0x8000000000000000 && v98 == 0)
    {
      v51 = String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
      static Locale.current.getter(v51);
      v52 = String.init(localized:table:bundle:locale:comment:)(v22, 0, 0, 0, v19, "Button title for offline view", 29, 2);
      v54 = v53;
      sub_100055B48(0x8000000000000000, 0, 0);
      v55 = 0;
      v56 = sub_1006730F4;
LABEL_15:
      v59 = v89;
      v60 = (_QWORD *)swift_allocObject(&unk_1010AEF50, 48, 7);
      v60[2] = v56;
      v60[3] = v55;
      v60[4] = v52;
      v60[5] = v54;
      __chkstk_darwin(v60);
      *((_QWORD *)&v98 + 1) = v55;
      *(&v88 - 4) = (uint64_t)v56;
      *(&v88 - 3) = v55;
      *(&v88 - 2) = v52;
      *(&v88 - 1) = v54;
      swift_retain(v55);
      swift_bridgeObjectRetain();
      v61 = v90;
      v62 = Button.init(action:label:)(sub_10004D5F4, v60, sub_100055BF8, &v88 - 6, &type metadata for Text, &protocol witness table for Text);
      LOBYTE(v60) = static Edge.Set.top.getter(v62);
      v63 = EdgeInsets.init(_all:)(8.0);
      v65 = v64;
      v67 = v66;
      v69 = v68;
      v70 = v91;
      v71 = (uint64_t)v59;
      v72 = v92;
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v59, v61, v92);
      v73 = v93;
      v74 = v71 + *(int *)(v93 + 36);
      *(_BYTE *)v74 = (_BYTE)v60;
      *(double *)(v74 + 8) = v63;
      *(_QWORD *)(v74 + 16) = v65;
      *(_QWORD *)(v74 + 24) = v67;
      *(_QWORD *)(v74 + 32) = v69;
      *(_BYTE *)(v74 + 40) = 0;
      v75 = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v61, v72);
      v76 = v95;
      BorderlessButtonStyle.init()(v75);
      v77 = sub_100055C04();
      v78 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
      v79 = v94;
      v80 = v97;
      View.buttonStyle<A>(_:)(v76, v73, v97, v77, v78);
      swift_bridgeObjectRelease(v54);
      v81 = swift_release(*((_QWORD *)&v98 + 1));
      (*(void (**)(char *, uint64_t, __n128))(v96 + 8))(v76, v80, v81);
      sub_10004FF60(v71, &qword_10119DFE0);
      (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v50, v79, v105);
      v49 = 0;
    }
  }
LABEL_16:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v50, v49, 1, v105);
  v82 = v99 & 1;
  v83 = (uint64_t)v102;
  sub_10004A160(v50, (uint64_t)v102, &qword_10119DFF0);
  v84 = v103;
  *v103 = v44;
  v84[1] = v46;
  *((_BYTE *)v84 + 16) = v82;
  v85 = v100;
  v84[3] = v100;
  v86 = sub_100007E8C(&qword_10119DFF8);
  sub_10004A160(v83, (uint64_t)v84 + *(int *)(v86 + 48), &qword_10119DFF0);
  sub_100055BBC(v44, v46, v82);
  swift_bridgeObjectRetain();
  sub_10004FF60(v50, &qword_10119DFF0);
  sub_10004FF60(v83, &qword_10119DFF0);
  sub_100055BAC(v44, v46, v82);
  return swift_bridgeObjectRelease(v85);
}

uint64_t sub_1000542A8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = a1;
  v9[1] = a2;
  v4 = sub_100055B68();
  swift_bridgeObjectRetain();
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v6;
  *(_BYTE *)(a3 + 16) = v7 & 1;
  *(_QWORD *)(a3 + 24) = v8;
  return result;
}

uint64_t sub_10005431C@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72[16];
  __int128 *v73;
  uint64_t v74;
  __int128 v75;

  v71 = a1;
  v64 = type metadata accessor for BorderlessButtonStyle(0);
  v66 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v3 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119E010);
  v63 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119E018);
  v67 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_10119E020);
  __chkstk_darwin(v65);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100007E8C(&qword_10119E028);
  __chkstk_darwin(v69);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100007E8C(&qword_10119E030);
  __chkstk_darwin(v70);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *((_QWORD *)v1 + 3);
  v75 = *v1;
  v74 = v16;
  v17 = *((_QWORD *)v1 + 5);
  v18 = (_OWORD *)swift_allocObject(&unk_1010AEF78, 64, 7);
  v19 = v1[1];
  v18[1] = *v1;
  v18[2] = v19;
  v18[3] = v1[2];
  v73 = v1;
  sub_100055CE4((uint64_t)&v75);
  sub_100055D0C(&v74);
  swift_retain(v17);
  v20 = sub_100007E8C(&qword_10119E038);
  v21 = sub_100055D34();
  v22 = Button.init(action:label:)(sub_100055CBC, v18, sub_100055CDC, v72, v20, v21);
  BorderlessButtonStyle.init()(v22);
  v23 = sub_100049F28(&qword_10119E040, &qword_10119E010, (uint64_t)&protocol conformance descriptor for Button<A>);
  v24 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v25 = v64;
  View.buttonStyle<A>(_:)(v3, v4, v64, v23, v24);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v3, v25);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v6, v4);
  v27 = static Edge.Set.top.getter(v26);
  if (qword_10119B838 != -1)
    swift_once(&qword_10119B838, sub_100054984);
  v28 = EdgeInsets.init(_all:)(*(double *)&qword_10119DDE0);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v67;
  v35 = v68;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v11, v9, v68);
  v37 = &v11[*(int *)(v65 + 36)];
  *v37 = v27;
  *((double *)v37 + 1) = v28;
  *((_QWORD *)v37 + 2) = v30;
  *((_QWORD *)v37 + 3) = v32;
  *((_QWORD *)v37 + 4) = v34;
  v37[40] = 0;
  v38 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v9, v35);
  v39 = static Edge.Set.bottom.getter(v38);
  if (qword_10119B840 != -1)
    swift_once(&qword_10119B840, sub_1000549A4);
  v40 = EdgeInsets.init(_all:)(*(double *)&qword_10119DDE8);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  sub_10004A160((uint64_t)v11, (uint64_t)v13, &qword_10119E020);
  v47 = &v13[*(int *)(v69 + 36)];
  *v47 = v39;
  *((double *)v47 + 1) = v40;
  *((_QWORD *)v47 + 2) = v42;
  *((_QWORD *)v47 + 3) = v44;
  *((_QWORD *)v47 + 4) = v46;
  v47[40] = 0;
  v48 = sub_10004FF60((uint64_t)v11, &qword_10119E020);
  v49 = static Edge.Set.leading.getter(v48);
  if (qword_10119B848 != -1)
    swift_once(&qword_10119B848, sub_1000549C4);
  v50 = EdgeInsets.init(_all:)(*(double *)&qword_10119DDF0);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  sub_10004A160((uint64_t)v13, (uint64_t)v15, &qword_10119E028);
  v57 = &v15[*(int *)(v70 + 36)];
  *v57 = v49;
  *((double *)v57 + 1) = v50;
  *((_QWORD *)v57 + 2) = v52;
  *((_QWORD *)v57 + 3) = v54;
  *((_QWORD *)v57 + 4) = v56;
  v57[40] = 0;
  v58 = sub_10004FF60((uint64_t)v13, &qword_10119E028);
  v59 = static Alignment.leading.getter(v58);
  sub_1001497F4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v71, 0.0, 1, 0.0, 1, v59, v60);
  return sub_10004FF60((uint64_t)v15, &qword_10119E030);
}

uint64_t sub_100054808@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = Text.init(_:tableName:bundle:comment:)(v3);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = static Color.accentColor.getter(v4, v5);
  v12 = Text.foregroundColor(_:)(v11, v4, v6, v10, v8);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_release(v11);
  sub_100055BAC(v4, v6, v10);
  swift_bridgeObjectRelease(v8);
  result = swift_getKeyPath(&unk_100EA7FD0);
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v16 & 1;
  *(_QWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = result;
  *(_BYTE *)(a2 + 40) = 0;
  return result;
}

double sub_100054914()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_100EA7EA0);
  v2 = swift_getKeyPath(&unk_100EA7EC8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_100054984()
{
  qword_10119DDE0 = Int.seconds.getter(14);
}

void sub_1000549A4()
{
  qword_10119DDE8 = Int.seconds.getter(13);
}

void sub_1000549C4()
{
  qword_10119DDF0 = Int.seconds.getter(0);
}

uint64_t sub_1000549E4@<X0>(uint64_t a1@<X8>)
{
  return sub_10005431C(a1);
}

uint64_t sub_100054A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV5Music21RelatedContentSpacing4Data__height;
  v2 = sub_100007E8C(&qword_10119DF00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100054A70()
{
  return type metadata accessor for RelatedContentSpacing.Data(0);
}

uint64_t type metadata accessor for RelatedContentSpacing.Data(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_10119DE28, (uint64_t)&nominal type descriptor for RelatedContentSpacing.Data);
}

void sub_100054A8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100054AF8();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_100054AF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_10119DE38)
  {
    v0 = type metadata accessor for Published(0, &type metadata for CGFloat);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_10119DE38);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for RelatedContentSpacing(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for RelatedContentSpacing(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for RelatedContentSpacing(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

_QWORD *assignWithTake for RelatedContentSpacing(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RelatedContentSpacing(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RelatedContentSpacing(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RelatedContentSpacing()
{
  return &type metadata for RelatedContentSpacing;
}

uint64_t sub_100054C84(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F941C4, 1);
}

uint64_t sub_100054C94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for RelatedContentSpacing.Data(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_100054CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 8);
  KeyPath = swift_getKeyPath(&unk_100EA7EA0);
  v3 = swift_getKeyPath(&unk_100EA7EC8);
  swift_retain(v1);
  static Published.subscript.getter(&v12, v4, KeyPath, v3);
  swift_release(v1);
  swift_release(KeyPath);
  swift_release(v3);
  v5 = v12;
  v7 = static Alignment.center.getter(v6);
  _FrameLayout.init(width:height:alignment:)(&v12, 0, 1, v5, 0, v7, v8);
  v9 = sub_100007E8C(&qword_10119DEE8);
  v10 = sub_10005610C(&qword_10119DEF0, &qword_10119DEE8, (void (*)(void))sub_100054EF4);
  return View.accessibilityHidden(_:)(1, v9, v10);
}

void *sub_100054DEC()
{
  return &protocol witness table for ObservableObjectPublisher;
}

double sub_100054DF8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EA7EA0);
  v5 = swift_getKeyPath(&unk_100EA7EC8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_100054E78(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EA7EA0);
  v5 = swift_getKeyPath(&unk_100EA7EC8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

unint64_t sub_100054EF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119DEF8;
  if (!qword_10119DEF8)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011C6630);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10119DEF8);
  }
  return result;
}

uint64_t destroy for AccessoryButtonCell(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_release(a1[5]);
}

uint64_t initializeWithCopy for AccessoryButtonCell(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v6);
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for AccessoryButtonCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

uint64_t assignWithTake for AccessoryButtonCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v6 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryButtonCell(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryButtonCell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryButtonCell()
{
  return &type metadata for AccessoryButtonCell;
}

unint64_t *sub_100055168(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t *v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *v4 = *a2;
    v4 = (unint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = *a2;
    if ((*a2 & 0xFFFFFFFFFFFFFEFCLL) == 0x3FFFFFEFCLL)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
    }
    else
    {
      v9 = a2[1];
      v10 = a2[2];
      sub_100055294(*a2, v9, v10);
      *v4 = v7;
      v4[1] = v9;
      v4[2] = v10;
    }
    v11 = *(int *)(a3 + 20);
    v12 = (uint64_t *)((char *)v4 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = v12;
      v17 = v14;
      v18 = 1;
    }
    else
    {
      v19 = *v13;
      *v12 = *v13;
      swift_retain(v19);
      v16 = v12;
      v17 = v14;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
  return v4;
}

unint64_t sub_100055294(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (!(result >> 62))
    return swift_retain(a3);
  return result;
}

double sub_1000552A8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v4 = *(_QWORD *)a1;
  if ((v4 & 0xFFFFFFFFFFFFFEFCLL) != 0x3FFFFFEFCLL)
    sub_10005533C(v4, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v5).n128_u64[0];
  }
  return result;
}

unint64_t sub_10005533C(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (!(result >> 62))
    return swift_release(a3);
  return result;
}

uint64_t sub_100055350(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *a2;
  if ((*a2 & 0xFFFFFFFFFFFFFEFCLL) == 0x3FFFFFEFCLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
  }
  else
  {
    v7 = a2[1];
    v8 = a2[2];
    sub_100055294(*a2, v7, v8);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
  }
  v9 = *(int *)(a3 + 20);
  v10 = (uint64_t *)(a1 + v9);
  v11 = (uint64_t *)((char *)a2 + v9);
  v12 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    v14 = v10;
    v15 = v12;
    v16 = 1;
  }
  else
  {
    v17 = *v11;
    *v10 = *v11;
    swift_retain(v17);
    v14 = v10;
    v15 = v12;
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v15, v16);
  return a1;
}

uint64_t sub_100055450(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a2;
  v7 = *a2 & 0xFFFFFFFFFFFFFEFCLL;
  if ((*(_QWORD *)a1 & 0xFFFFFFFFFFFFFEFCLL) == 0x3FFFFFEFCLL)
  {
    if (v7 == 0x3FFFFFEFCLL)
    {
      v8 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_OWORD *)a1 = v8;
      if ((unint64_t *)a1 == a2)
        return a1;
    }
    else
    {
      v10 = a2[1];
      v11 = a2[2];
      sub_100055294(*a2, v10, v11);
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v10;
      *(_QWORD *)(a1 + 16) = v11;
      if ((unint64_t *)a1 == a2)
        return a1;
    }
  }
  else if (v7 == 0x3FFFFFEFCLL)
  {
    sub_1000555D8(a1);
    v9 = a2[2];
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = v9;
    if ((unint64_t *)a1 == a2)
      return a1;
  }
  else
  {
    v12 = a2[1];
    v13 = a2[2];
    sub_100055294(*a2, v12, v13);
    v14 = *(_QWORD *)a1;
    v15 = *(_QWORD *)(a1 + 8);
    v16 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 16) = v13;
    sub_10005533C(v14, v15, v16);
    if ((unint64_t *)a1 == a2)
      return a1;
  }
  v17 = *(int *)(a3 + 20);
  v18 = (uint64_t *)(a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  sub_10004FF60(a1 + v17, (uint64_t *)&unk_1011ACE40);
  v20 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
    v22 = 1;
  }
  else
  {
    v23 = *v19;
    *v18 = *v19;
    swift_retain(v23);
    v22 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v20, v22);
  return a1;
}

uint64_t sub_1000555D8(uint64_t a1)
{
  destroy for ContainerDetail.LoadingState(a1);
  return a1;
}

uint64_t sub_10005560C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

unint64_t *sub_1000556BC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a1;
  if ((v6 & 0xFFFFFFFFFFFFFEFCLL) != 0x3FFFFFEFCLL)
  {
    v7 = *(_QWORD *)a2;
    if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFEFCLL) != 0x3FFFFFEFCLL)
    {
      v8 = a1[1];
      v9 = a1[2];
      *a1 = v7;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
      sub_10005533C(v6, v8, v9);
      if (a1 == (unint64_t *)a2)
        return a1;
      goto LABEL_7;
    }
    sub_1000555D8((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = *(_QWORD *)(a2 + 16);
  if (a1 == (unint64_t *)a2)
    return a1;
LABEL_7:
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (const void *)(a2 + v10);
  sub_10004FF60((uint64_t)a1 + v10, (uint64_t *)&unk_1011ACE40);
  v13 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload(v11, v13, 1);
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000557E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000557EC);
}

uint64_t sub_1000557EC(char *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483645)
  {
    v4 = (*(_QWORD *)a1 >> 2) & 0xFFFFFF80 | (*(_QWORD *)a1 >> 1);
    v5 = -3 - v4;
    if ((int)(-3 - v4) < 0)
      v5 = -1;
    if (v4 > 0x80000000)
      return (v5 + 1);
    else
      return 0;
  }
  else
  {
    v9 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v9);
  }
}

uint64_t sub_100055884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100055890);
}

uint64_t *sub_100055890(uint64_t *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483645)
  {
    result[1] = 0;
    result[2] = 0;
    *result = (4 * (-2 - a2)) & 0x3FFFFFE00 | (2 * ((-2 - (int)a2) & 0x7FLL));
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (uint64_t *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))((char *)v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for NoContentCell(uint64_t a1)
{
  return sub_100055934(a1, qword_10119DF60, (uint64_t)&nominal type descriptor for NoContentCell);
}

uint64_t sub_100055934(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

void sub_100055968(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100EA7F18;
  sub_1000559DC(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_1000559DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011C6900)
  {
    v2 = type metadata accessor for DynamicTypeSize(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011C6900);
  }
}

unint64_t sub_100055A34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119DF98;
  if (!qword_10119DF98)
  {
    v1 = sub_100044B54(&qword_10119DFA0);
    sub_10005610C(&qword_10119DEF0, &qword_10119DEE8, (void (*)(void))sub_100054EF4);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119DF98);
  }
  return result;
}

uint64_t sub_100055AD8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F94230, 1);
}

uint64_t sub_100055AE8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F94208, 1);
}

uint64_t sub_100055B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119DFC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100055B48(unint64_t result, uint64_t a2, uint64_t a3)
{
  if ((result & 0xFFFFFFFFFFFFFEFCLL) != 0x3FFFFFEFCLL)
    return sub_10005533C(result, a2, a3);
  return result;
}

unint64_t sub_100055B68()
{
  unint64_t result;

  result = qword_1011A3920;
  if (!qword_1011A3920)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1011A3920);
  }
  return result;
}

uint64_t sub_100055BAC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_100055BBC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_100055BCC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100055BF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000542A8(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

unint64_t sub_100055C04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119E000;
  if (!qword_10119E000)
  {
    v1 = sub_100044B54(&qword_10119DFE0);
    sub_100049F28(&qword_1011C5140, &qword_10119DFD8, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119E000);
  }
  return result;
}

uint64_t sub_100055C88()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100055CBC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_100055CDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100054808(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_100055CE4(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

_QWORD *sub_100055D0C(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

unint64_t sub_100055D34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A9730;
  if (!qword_1011A9730)
  {
    v1 = sub_100044B54(&qword_10119E038);
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A9730);
  }
  return result;
}

unint64_t destroy for NoContentCell.Kind(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)a1;
  if (((result >> 2) & 0xFFFFFF80 | (result >> 1)) <= 0x80000000)
    return sub_10005533C(result, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return result;
}

uint64_t _s5Music13NoContentCellV4KindOwCP_0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  if (((*a2 >> 2) & 0xFFFFFF80 | (*a2 >> 1)) > 0x80000000)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
  }
  else
  {
    v4 = a2[1];
    v5 = a2[2];
    sub_100055294(*a2, v4, v5);
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
  }
  return a1;
}

uint64_t assignWithCopy for NoContentCell.Kind(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v4 = *(_QWORD *)a1;
  v5 = *a2;
  v6 = (*a2 >> 2) & 0xFFFFFF80 | (*a2 >> 1);
  if (((v4 >> 2) & 0xFFFFFF80 | (v4 >> 1)) > 0x80000000)
  {
    if (v6 <= 0x80000000)
    {
      v13 = a2[1];
      v12 = a2[2];
      sub_100055294(*a2, v13, v12);
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v13;
      *(_QWORD *)(a1 + 16) = v12;
      return a1;
    }
LABEL_7:
    v14 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_OWORD *)a1 = v14;
    return a1;
  }
  if (v6 > 0x80000000)
  {
    sub_10005533C(v4, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  v8 = a2[1];
  v7 = a2[2];
  sub_100055294(*a2, v8, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v7;
  sub_10005533C(v9, v10, v11);
  return a1;
}

__n128 initializeWithTake for ContainerDetail.LoadingState(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for NoContentCell.Kind(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)a1;
  if (((v4 >> 2) & 0xFFFFFF80 | (v4 >> 1)) > 0x80000000)
    goto LABEL_5;
  v5 = *a2;
  if ((((unint64_t)*a2 >> 2) & 0xFFFFFF80 | (*a2 >> 1)) > 0x80000000)
  {
    sub_10005533C(v4, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    return a1;
  }
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v5;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  sub_10005533C(v4, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoContentCell.Kind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = (*(_QWORD *)a1 >> 2) & 0xFFFFFF80 | (*(_QWORD *)a1 >> 1);
  if (v3 > 0x80000000)
    v4 = -v3;
  else
    v4 = 0;
  if (v4 >= 3)
    return v4 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NoContentCell.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (4 * (-2 - a2)) & 0x3FFFFFE00 | (2 * ((-2 - a2) & 0x7FLL));
    }
  }
  return result;
}

uint64_t sub_100056078(_QWORD *a1)
{
  unsigned int v1;

  v1 = (*a1 >> 2) & 0xFFFFFF80 | (*a1 >> 1);
  if (v1 > 0x80000000)
    return -v1;
  else
    return 0;
}

uint64_t *sub_100056094(uint64_t *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[1] = 0;
    result[2] = 0;
    *result = (4 * -a2) & 0x3FFFFFE00 | (2 * (-a2 & 0x7FLL));
  }
  return result;
}

ValueMetadata *type metadata accessor for NoContentCell.Kind()
{
  return &type metadata for NoContentCell.Kind;
}

uint64_t sub_1000560D8()
{
  return sub_10005610C(&qword_10119E048, &qword_10119DFC8, (void (*)(void))sub_100056174);
}

uint64_t sub_10005610C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100056174()
{
  return sub_10005610C(&qword_10119E050, &qword_10119DFC0, (void (*)(void))sub_100056198);
}

uint64_t sub_100056198()
{
  return sub_10005610C(&qword_10119E058, &qword_10119DFB8, (void (*)(void))sub_1000561BC);
}

unint64_t sub_1000561BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119E060;
  if (!qword_10119E060)
  {
    v1 = sub_100044B54(&qword_10119DFB0);
    sub_100049F28(&qword_10119E068, &qword_10119DFA8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119E060);
  }
  return result;
}

uint64_t sub_100056258()
{
  return sub_10005610C(&qword_10119E070, &qword_10119E078, (void (*)(void))sub_10005628C);
}

uint64_t sub_10005628C()
{
  return sub_10005610C(&qword_10119E080, &qword_10119E030, (void (*)(void))sub_1000562B0);
}

uint64_t sub_1000562B0()
{
  return sub_10005610C(&qword_10119E088, &qword_10119E028, (void (*)(void))sub_1000562D4);
}

unint64_t sub_1000562D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_10119E090;
  if (!qword_10119E090)
  {
    v1 = sub_100044B54(&qword_10119E020);
    v2[0] = sub_100044B54(&qword_10119E010);
    v2[1] = type metadata accessor for BorderlessButtonStyle(255);
    v2[2] = sub_100049F28(&qword_10119E040, &qword_10119E010, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119E090);
  }
  return result;
}

uint64_t sub_1000563CC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t result;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;

  v1 = type metadata accessor for Locale(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v0, "activeFormat");
  v8 = objc_msgSend(v7, "tier");

  result = 0;
  if (v8 != (id)3)
  {
    v10 = objc_msgSend(v0, "alternateFormats");
    v11 = sub_10005667C();
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0)
        v21 = v12;
      else
        v21 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v13 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease(v12);
      if (v13)
        goto LABEL_4;
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13)
      {
LABEL_4:
        v26 = _swiftEmptyArrayStorage;
        result = sub_10035C484(0, v13 & ~(v13 >> 63), 0);
        if (v13 < 0)
        {
          __break(1u);
          return result;
        }
        v25 = v3;
        v14 = 0;
        v15 = v26;
        do
        {
          if ((v12 & 0xC000000000000001) != 0)
            v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
          else
            v16 = *(id *)(v12 + 8 * v14 + 32);
          v17 = v16;
          v18 = objc_msgSend(v16, "tier");

          v26 = v15;
          v20 = v15[2];
          v19 = v15[3];
          if (v20 >= v19 >> 1)
          {
            sub_10035C484(v19 > 1, v20 + 1, 1);
            v15 = v26;
          }
          ++v14;
          v15[2] = v20 + 1;
          v15[v20 + 4] = v18;
        }
        while (v13 != v14);
        swift_bridgeObjectRelease(v12);
        v3 = v25;
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease(v12);
    v15 = _swiftEmptyArrayStorage;
LABEL_18:
    v22 = sub_100413E0C(3, (uint64_t)v15);
    swift_bridgeObjectRelease(v15);
    if ((v22 & 1) != 0)
    {
      v23 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001CLL, 0x8000000100E2C070);
      static Locale.current.getter(v23);
      return String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v3, 0, 0, 256);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_10005667C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119E098;
  if (!qword_10119E098)
  {
    v1 = objc_opt_self(MPCPlayerAudioFormat);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10119E098);
  }
  return result;
}

uint64_t sub_1000566B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  __n128 v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char v142;
  void (*v143)(char *, uint64_t);
  uint64_t v144;
  int *v145;
  uint64_t v146;
  char **v147;
  uint64_t *v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  __n128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  __n128 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t *v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t v221;
  __n128 v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  int *v230;
  uint64_t v231;
  uint64_t *v232;
  uint64_t *v233;
  _QWORD *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  char *v259;
  char v260;
  char *v261;
  char v262;
  void (*v263)(char *, uint64_t);
  uint64_t v264;
  int *v265;
  uint64_t v266;
  uint64_t *v267;
  uint64_t v268;
  uint64_t *v269;
  _QWORD *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  int *v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  char v330[8];

  v2 = v1;
  v324 = a1;
  v291 = type metadata accessor for UploadedVideo(0);
  v290 = *(_QWORD *)(v291 - 8);
  __chkstk_darwin(v291);
  v287 = (char *)&v282 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v303 = sub_100007E8C(&qword_10119E1D8);
  __chkstk_darwin(v303);
  v304 = (uint64_t)&v282 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v323 = sub_100007E8C(&qword_10119E1E0);
  __chkstk_darwin(v323);
  v305 = (char *)&v282 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v307 = type metadata accessor for MusicVideo(0);
  v306 = *(_QWORD *)(v307 - 8);
  __chkstk_darwin(v307);
  v302 = (char *)&v282 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v296 = type metadata accessor for TVSeason(0);
  v289 = *(_QWORD *)(v296 - 8);
  __chkstk_darwin(v296);
  v288 = (char *)&v282 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v310 = type metadata accessor for MusicMovie(0);
  v309 = *(_QWORD *)(v310 - 8);
  __chkstk_darwin(v310);
  v308 = (char *)&v282 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v293 = (char *)&v282 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v292 = (char *)&v282 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v301 = type metadata accessor for Playlist(0);
  v298 = *(_QWORD *)(v301 - 8);
  v13 = __chkstk_darwin(v301);
  v297 = (char *)&v282 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v300 = (char *)&v282 - v15;
  v326 = sub_100007E8C(&qword_10119E1E8);
  __chkstk_darwin(v326);
  v328 = (uint64_t)&v282 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v317 = sub_100007E8C(&qword_10119E1F0);
  __chkstk_darwin(v317);
  v316 = (uint64_t)&v282 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v321 = sub_100007E8C(&qword_10119E1F8);
  __chkstk_darwin(v321);
  v320 = (uint64_t)&v282 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v325 = sub_100007E8C(&qword_10119E200);
  __chkstk_darwin(v325);
  v322 = (char *)&v282 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v327 = sub_100007E8C(&qword_10119E208);
  __chkstk_darwin(v327);
  v318 = (char *)&v282 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v315 = type metadata accessor for MusicFavoriteStatus(0);
  v313 = *(_QWORD *)(v315 - 8);
  v21 = __chkstk_darwin(v315);
  v312 = (char *)&v282 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v314 = (char *)&v282 - v23;
  v24 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v24);
  v329 = (char *)&v282 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v26);
  v28 = (char *)&v282 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for ArtworkImage.Info(0);
  v30 = __chkstk_darwin(v29);
  v284 = (uint64_t)&v282 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v299 = (uint64_t)&v282 - v33;
  __chkstk_darwin(v32);
  v311 = (uint64_t)&v282 - v34;
  v35 = (int *)_s8GridCellVMa(0);
  v36 = __chkstk_darwin(v35);
  v285 = (char *)&v282 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v36);
  v286 = (uint64_t)&v282 - v39;
  v40 = __chkstk_darwin(v38);
  v294 = (char *)&v282 - v41;
  v42 = __chkstk_darwin(v40);
  v295 = (uint64_t)&v282 - v43;
  v44 = __chkstk_darwin(v42);
  v46 = (char *)&v282 - v45;
  __chkstk_darwin(v44);
  v319 = (uint64_t)&v282 - v47;
  v48 = type metadata accessor for Album(0);
  v49 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v51 = (char *)&v282 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for RecentlyAddedMusicItem(0);
  v53 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v55 = (char *)&v282 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v55, v2, v52);
  v56 = (*(uint64_t (**)(char *, uint64_t))(v53 + 88))(v55, v52);
  if (v56 == enum case for RecentlyAddedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
    v283 = (int *)v49;
    v57 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
    v282 = (char *)v48;
    v57(v51, v55, v48);
    v58 = (uint64_t)v28;
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v48, (uint64_t)&protocol witness table for Album, v28);
    v59 = _s21RecentlyAddedGridCellVMa(0);
    ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(*(_QWORD *)(v2 + *(int *)(v59 + 20)), 0, 0, 1, 0x3FF0000000000000, 0, 2, (uint64_t)v330);
    v60 = Corner.medium.unsafeMutableAddressor();
    v61 = *v60;
    v62 = v60[1];
    v63 = *((_BYTE *)v60 + 16);
    v64 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v65 = (uint64_t)v329;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v329, 1, 10, v64);
    v66 = v311;
    ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)(v58, v65, 0, 1, (uint64_t)v330, v61, v62, v63, v311);
    v329 = (char *)sub_10031E71C();
    v310 = v67;
    v68 = sub_10031E87C();
    v309 = v69;
    v70 = v314;
    Album.favoriteStatus.getter();
    v71 = v313;
    v72 = v312;
    v73 = v315;
    (*(void (**)(char *, _QWORD, uint64_t))(v313 + 104))(v312, enum case for MusicFavoriteStatus.favorited(_:), v315);
    LOBYTE(v58) = static MusicFavoriteStatus.== infix(_:_:)(v70, v72);
    v74 = *(void (**)(char *, uint64_t))(v71 + 8);
    v74(v72, v73);
    v75 = ((uint64_t (*)(char *, uint64_t))v74)(v70, v73);
    Album.contentRating.getter(v75);
    sub_10005B6C0(v66, (uint64_t)v46, type metadata accessor for ArtworkImage.Info);
    *(_QWORD *)&v46[v35[5]] = 0x3FF0000000000000;
    v76 = &v46[v35[6]];
    v77 = v310;
    *(_QWORD *)v76 = v329;
    *((_QWORD *)v76 + 1) = v77;
    v78 = (uint64_t *)&v46[v35[7]];
    v79 = v309;
    *v78 = v68;
    v78[1] = v79;
    v46[v35[8]] = v58 & 1;
    v80 = &v46[v35[10]];
    *(_QWORD *)v80 = swift_getKeyPath(&unk_100EA8128);
    v81 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    swift_storeEnumTagMultiPayload(v80, v81, 0);
    v82 = (uint64_t)v46;
    v83 = v319;
    sub_10005B6C0(v82, v319, _s8GridCellVMa);
    v84 = v320;
    sub_10005B704(v83, v320, _s8GridCellVMa);
    swift_storeEnumTagMultiPayload(v84, v321, 0);
    v85 = sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
    v86 = (uint64_t)v322;
    _ConditionalContent<>.init(storage:)(v84, v35, v35, v85, v85);
    v87 = v316;
    sub_10004A160(v86, v316, &qword_10119E200);
    swift_storeEnumTagMultiPayload(v87, v317, 0);
    v88 = sub_10005B4F0();
    v89 = (uint64_t)v318;
    _ConditionalContent<>.init(storage:)(v87, v325, v325, v88, v88);
    sub_10004FF60(v86, &qword_10119E200);
    v90 = v328;
    sub_10004A160(v89, v328, &qword_10119E208);
    swift_storeEnumTagMultiPayload(v90, v326, 0);
    v91 = sub_10005B56C(&qword_10119E218, &qword_10119E208, (void (*)(void))sub_10005B4F0);
    v92 = sub_10005B654(&qword_10119E220, &qword_10119E1E0, (void (*)(void))sub_10005B4F0);
    _ConditionalContent<>.init(storage:)(v90, v327, v323, v91, v92);
    sub_10004FF60(v89, &qword_10119E208);
    sub_10005B748(v83, _s8GridCellVMa);
    return (*((uint64_t (**)(char *, char *))v283 + 1))(v51, v282);
  }
  else
  {
    v282 = v46;
    v94 = (uint64_t)v329;
    v283 = v35;
    if (v56 == enum case for RecentlyAddedMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
      v95 = v308;
      v96 = v310;
      (*(void (**)(char *, char *, uint64_t))(v309 + 32))(v308, v55, v310);
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v96, (uint64_t)&protocol witness table for MusicMovie, v28);
      v97 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      v98 = v94;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v94, 5, 10, v97);
      v99 = _s21RecentlyAddedGridCellVMa(0);
      ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, *(_QWORD *)(v2 + *(int *)(v99 + 20)), 0, 0x3FE5555555555555, 0, 2, (uint64_t)v330);
      v100 = Corner.medium.unsafeMutableAddressor();
      v101 = (uint64_t)v282;
      v102 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v28, v98, 0, 1, (uint64_t)v330, *v100, v100[1], *((_BYTE *)v100 + 16), (uint64_t)v282);
      v103 = MusicMovie.title.getter(v102);
      v105 = v104;
      v106 = MusicMovie.artistName.getter();
      v108 = v107;
      v109 = v283;
      v110 = v101 + v283[9];
      v111 = type metadata accessor for ContentRating(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v110, 1, 1, v111);
      *(_QWORD *)(v101 + v109[5]) = 0x3FF0000000000000;
      v112 = (uint64_t *)(v101 + v109[6]);
      *v112 = v103;
      v112[1] = v105;
      v113 = (uint64_t *)(v101 + v109[7]);
      *v113 = v106;
      v113[1] = v108;
      *(_BYTE *)(v101 + v109[8]) = 0;
      v114 = (_QWORD *)(v101 + v109[10]);
      *v114 = swift_getKeyPath(&unk_100EA8128);
      v115 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
      swift_storeEnumTagMultiPayload(v114, v115, 0);
      v116 = v319;
      sub_10005B6C0(v101, v319, _s8GridCellVMa);
      v117 = v320;
      sub_10005B704(v116, v320, _s8GridCellVMa);
      swift_storeEnumTagMultiPayload(v117, v321, 0);
      v118 = sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
      v119 = (uint64_t)v322;
      _ConditionalContent<>.init(storage:)(v117, v109, v109, v118, v118);
      v120 = v316;
      sub_10004A160(v119, v316, &qword_10119E200);
      swift_storeEnumTagMultiPayload(v120, v317, 1);
      v121 = sub_10005B4F0();
      v122 = (uint64_t)v318;
      _ConditionalContent<>.init(storage:)(v120, v325, v325, v121, v121);
      sub_10004FF60(v119, &qword_10119E200);
      v123 = v328;
      sub_10004A160(v122, v328, &qword_10119E208);
      swift_storeEnumTagMultiPayload(v123, v326, 0);
      v124 = sub_10005B56C(&qword_10119E218, &qword_10119E208, (void (*)(void))sub_10005B4F0);
      v125 = sub_10005B654(&qword_10119E220, &qword_10119E1E0, (void (*)(void))sub_10005B4F0);
      _ConditionalContent<>.init(storage:)(v123, v327, v323, v124, v125);
      sub_10004FF60(v122, &qword_10119E208);
      sub_10005B748(v116, _s8GridCellVMa);
      return (*(uint64_t (**)(char *, uint64_t))(v309 + 8))(v95, v310);
    }
    else if (v56 == enum case for RecentlyAddedMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
      v126 = v302;
      v127 = v307;
      (*(void (**)(char *, char *, uint64_t))(v306 + 32))(v302, v55, v307);
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v127, (uint64_t)&protocol witness table for MusicVideo, v28);
      v128 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v94, 4, 10, v128);
      v129 = _s21RecentlyAddedGridCellVMa(0);
      ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(*(_QWORD *)(v2 + *(int *)(v129 + 20)), 0, 0, 1, 0x3FFC71C71C71C71CLL, 0, 2, (uint64_t)v330);
      v130 = Corner.medium.unsafeMutableAddressor();
      v131 = v311;
      v132 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v28, v94, 0, 1, (uint64_t)v330, *v130, v130[1], *((_BYTE *)v130 + 16), v311);
      v329 = (char *)MusicVideo.title.getter(v132);
      v134 = v133;
      v135 = MusicVideo.artistName.getter(v329);
      v137 = v136;
      v138 = v314;
      MusicVideo.favoriteStatus.getter(v135);
      v139 = v313;
      v140 = v312;
      v141 = v315;
      (*(void (**)(char *, _QWORD, uint64_t))(v313 + 104))(v312, enum case for MusicFavoriteStatus.favorited(_:), v315);
      v142 = static MusicFavoriteStatus.== infix(_:_:)(v138, v140);
      v143 = *(void (**)(char *, uint64_t))(v139 + 8);
      v143(v140, v141);
      v144 = ((uint64_t (*)(char *, uint64_t))v143)(v138, v141);
      v145 = v283;
      v146 = (uint64_t)v282;
      MusicVideo.contentRating.getter(v144);
      sub_10005B6C0(v131, v146, type metadata accessor for ArtworkImage.Info);
      *(_QWORD *)(v146 + v145[5]) = 0x3FF0000000000000;
      v147 = (char **)(v146 + v145[6]);
      *v147 = v329;
      v147[1] = v134;
      v148 = (uint64_t *)(v146 + v145[7]);
      *v148 = v135;
      v148[1] = v137;
      *(_BYTE *)(v146 + v145[8]) = v142 & 1;
      v149 = (_QWORD *)(v146 + v145[10]);
      *v149 = swift_getKeyPath(&unk_100EA8128);
      v150 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
      swift_storeEnumTagMultiPayload(v149, v150, 0);
      v151 = v319;
      sub_10005B6C0(v146, v319, _s8GridCellVMa);
      v152 = v320;
      sub_10005B704(v151, v320, _s8GridCellVMa);
      swift_storeEnumTagMultiPayload(v152, v321, 0);
      v153 = sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
      v154 = (uint64_t)v322;
      _ConditionalContent<>.init(storage:)(v152, v145, v145, v153, v153);
      v155 = v304;
      sub_10004A160(v154, v304, &qword_10119E200);
      swift_storeEnumTagMultiPayload(v155, v303, 0);
      v156 = sub_10005B4F0();
      v157 = (uint64_t)v305;
      _ConditionalContent<>.init(storage:)(v155, v325, &type metadata for EmptyView, v156, &protocol witness table for EmptyView);
      sub_10004FF60(v154, &qword_10119E200);
      v158 = v328;
      sub_10004A160(v157, v328, &qword_10119E1E0);
      swift_storeEnumTagMultiPayload(v158, v326, 1);
      v159 = sub_10005B56C(&qword_10119E218, &qword_10119E208, (void (*)(void))sub_10005B4F0);
      v160 = sub_10005B654(&qword_10119E220, &qword_10119E1E0, (void (*)(void))sub_10005B4F0);
      _ConditionalContent<>.init(storage:)(v158, v327, v323, v159, v160);
      sub_10004FF60(v157, &qword_10119E1E0);
      sub_10005B748(v151, _s8GridCellVMa);
      return (*(uint64_t (**)(char *, uint64_t))(v306 + 8))(v126, v307);
    }
    else if (v56 == enum case for RecentlyAddedMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
      v161 = v298;
      v162 = v300;
      v163 = v301;
      (*(void (**)(char *, char *, uint64_t))(v298 + 32))(v300, v55, v301);
      v164 = Playlist.artworkViewModel.getter((uint64_t)v28);
      Playlist.variant.getter(v164);
      v165 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 56))(v94, 0, 10, v165);
      v166 = _s21RecentlyAddedGridCellVMa(0);
      ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(*(_QWORD *)(v2 + *(int *)(v166 + 20)), 0, 0, 1, 0x3FF0000000000000, 0, 2, (uint64_t)v330);
      v167 = Corner.medium.unsafeMutableAddressor();
      v168 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v28, v94, 0, 1, (uint64_t)v330, *v167, v167[1], *((_BYTE *)v167 + 16), v299);
      v169 = Playlist.name.getter(v168);
      v319 = v170;
      v171 = Playlist.curatorName.getter();
      v173 = v172;
      v174 = v297;
      (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v297, v162, v163);
      if (v173)
      {
        v329 = *(char **)(v161 + 8);
        v175 = ((uint64_t (*)(char *, uint64_t))v329)(v174, v163);
        v176 = v315;
        v177 = v314;
        v178 = v313;
        v179 = v312;
      }
      else
      {
        v171 = sub_10031E9D4();
        v176 = v315;
        v177 = v314;
        v178 = v313;
        v179 = v312;
        if (v246)
        {
          v173 = v246;
          v247 = *(char **)(v298 + 8);
          v248 = v174;
        }
        else
        {
          v255 = v292;
          v256 = String.LocalizationValue.init(stringLiteral:)(0x7473696C79616C50, 0xE800000000000000);
          v257 = v293;
          static Locale.current.getter(v256);
          v171 = String.init(localized:table:bundle:locale:comment:)(v255, v171, 0, 0, v257, 0, 0, 256);
          v173 = v258;
          v247 = *(char **)(v298 + 8);
          v248 = v297;
        }
        v329 = v247;
        v175 = ((uint64_t (*)(char *, uint64_t))v247)(v248, v163);
      }
      v259 = v300;
      Playlist.favoriteStatus.getter(v175);
      (*(void (**)(char *, _QWORD, uint64_t))(v178 + 104))(v179, enum case for MusicFavoriteStatus.favorited(_:), v176);
      v260 = static MusicFavoriteStatus.== infix(_:_:)(v177, v179);
      v261 = v179;
      v262 = v260;
      v263 = *(void (**)(char *, uint64_t))(v178 + 8);
      v263(v261, v176);
      v264 = ((uint64_t (*)(char *, uint64_t))v263)(v177, v176);
      v265 = v283;
      v266 = (uint64_t)v294;
      Playlist.contentRating.getter(v264);
      sub_10005B6C0(v299, v266, type metadata accessor for ArtworkImage.Info);
      *(_QWORD *)(v266 + v265[5]) = 0x3FF0000000000000;
      v267 = (uint64_t *)(v266 + v265[6]);
      v268 = v319;
      *v267 = v169;
      v267[1] = v268;
      v269 = (uint64_t *)(v266 + v265[7]);
      *v269 = v171;
      v269[1] = v173;
      *(_BYTE *)(v266 + v265[8]) = v262 & 1;
      v270 = (_QWORD *)(v266 + v265[10]);
      *v270 = swift_getKeyPath(&unk_100EA8128);
      v271 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
      swift_storeEnumTagMultiPayload(v270, v271, 0);
      v272 = v295;
      sub_10005B6C0(v266, v295, _s8GridCellVMa);
      v273 = v320;
      sub_10005B704(v272, v320, _s8GridCellVMa);
      swift_storeEnumTagMultiPayload(v273, v321, 1);
      v274 = sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
      v275 = (uint64_t)v322;
      _ConditionalContent<>.init(storage:)(v273, v265, v265, v274, v274);
      v276 = v316;
      sub_10004A160(v275, v316, &qword_10119E200);
      swift_storeEnumTagMultiPayload(v276, v317, 0);
      v277 = sub_10005B4F0();
      v278 = (uint64_t)v318;
      _ConditionalContent<>.init(storage:)(v276, v325, v325, v277, v277);
      sub_10004FF60(v275, &qword_10119E200);
      v279 = v328;
      sub_10004A160(v278, v328, &qword_10119E208);
      swift_storeEnumTagMultiPayload(v279, v326, 0);
      v280 = sub_10005B56C(&qword_10119E218, &qword_10119E208, (void (*)(void))sub_10005B4F0);
      v281 = sub_10005B654(&qword_10119E220, &qword_10119E1E0, (void (*)(void))sub_10005B4F0);
      _ConditionalContent<>.init(storage:)(v279, v327, v323, v280, v281);
      sub_10004FF60(v278, &qword_10119E208);
      sub_10005B748(v272, _s8GridCellVMa);
      return ((uint64_t (*)(char *, uint64_t))v329)(v259, v301);
    }
    else if (v56 == enum case for RecentlyAddedMusicItem.tvSeason(_:))
    {
      (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
      v180 = v289;
      v181 = v288;
      v182 = v296;
      (*(void (**)(char *, char *, uint64_t))(v289 + 32))(v288, v55, v296);
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v182, (uint64_t)&protocol witness table for TVSeason, v28);
      v183 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      v184 = v94;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v183 - 8) + 56))(v94, 5, 10, v183);
      v185 = _s21RecentlyAddedGridCellVMa(0);
      ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(*(_QWORD *)(v2 + *(int *)(v185 + 20)), 0, 0, 1, 0x3FF0000000000000, 0, 2, (uint64_t)v330);
      v186 = Corner.medium.unsafeMutableAddressor();
      v187 = (uint64_t)v282;
      v188 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v28, v184, 0, 1, (uint64_t)v330, *v186, v186[1], *((_BYTE *)v186 + 16), (uint64_t)v282);
      v189 = TVSeason.showName.getter(v188);
      v191 = v190;
      v192 = v292;
      v193 = String.LocalizationValue.init(stringLiteral:)(0x776F6853205654, 0xE700000000000000);
      v194 = v293;
      static Locale.current.getter(v193);
      v195 = String.init(localized:table:bundle:locale:comment:)(v192, 0, 0, 0, v194, "Item Type", 9, 2);
      v197 = v196;
      v198 = v283;
      v199 = v187 + v283[9];
      v200 = type metadata accessor for ContentRating(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v200 - 8) + 56))(v199, 1, 1, v200);
      *(_QWORD *)(v187 + v198[5]) = 0x3FF0000000000000;
      v201 = (uint64_t *)(v187 + v198[6]);
      *v201 = v189;
      v201[1] = v191;
      v202 = (uint64_t *)(v187 + v198[7]);
      *v202 = v195;
      v202[1] = v197;
      *(_BYTE *)(v187 + v198[8]) = 0;
      v203 = (_QWORD *)(v187 + v198[10]);
      *v203 = swift_getKeyPath(&unk_100EA8128);
      v204 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
      swift_storeEnumTagMultiPayload(v203, v204, 0);
      v205 = v319;
      sub_10005B6C0(v187, v319, _s8GridCellVMa);
      v206 = v320;
      sub_10005B704(v205, v320, _s8GridCellVMa);
      swift_storeEnumTagMultiPayload(v206, v321, 1);
      v207 = sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
      v208 = (uint64_t)v322;
      _ConditionalContent<>.init(storage:)(v206, v198, v198, v207, v207);
      v209 = v316;
      sub_10004A160(v208, v316, &qword_10119E200);
      swift_storeEnumTagMultiPayload(v209, v317, 1);
      v210 = sub_10005B4F0();
      v211 = (uint64_t)v318;
      _ConditionalContent<>.init(storage:)(v209, v325, v325, v210, v210);
      sub_10004FF60(v208, &qword_10119E200);
      v212 = v328;
      sub_10004A160(v211, v328, &qword_10119E208);
      swift_storeEnumTagMultiPayload(v212, v326, 0);
      v213 = sub_10005B56C(&qword_10119E218, &qword_10119E208, (void (*)(void))sub_10005B4F0);
      v214 = sub_10005B654(&qword_10119E220, &qword_10119E1E0, (void (*)(void))sub_10005B4F0);
      _ConditionalContent<>.init(storage:)(v212, v327, v323, v213, v214);
      sub_10004FF60(v211, &qword_10119E208);
      sub_10005B748(v205, _s8GridCellVMa);
      return (*(uint64_t (**)(char *, uint64_t))(v180 + 8))(v181, v296);
    }
    else
    {
      v215 = v323;
      if (v56 == enum case for RecentlyAddedMusicItem.uploadedVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
        v216 = v287;
        v217 = v291;
        (*(void (**)(char *, char *, uint64_t))(v290 + 32))(v287, v55, v291);
        ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v217, (uint64_t)&protocol witness table for UploadedVideo, v28);
        v218 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v218 - 8) + 56))(v94, 4, 10, v218);
        v219 = _s21RecentlyAddedGridCellVMa(0);
        ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(*(_QWORD *)(v2 + *(int *)(v219 + 20)), 0, 0, 1, 0x3FFC71C71C71C71CLL, 0, 2, (uint64_t)v330);
        v220 = Corner.medium.unsafeMutableAddressor();
        v221 = v284;
        v222 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v28, v94, 0, 1, (uint64_t)v330, *v220, v220[1], *((_BYTE *)v220 + 16), v284);
        v223 = UploadedVideo.title.getter(v222);
        if (v224)
          v225 = v223;
        else
          v225 = 0;
        if (v224)
          v226 = v224;
        else
          v226 = 0xE000000000000000;
        v227 = UploadedVideo.artistName.getter(v223);
        v229 = v228;
        v230 = v283;
        v231 = (uint64_t)v285;
        UploadedVideo.contentRating.getter(v227);
        sub_10005B6C0(v221, v231, type metadata accessor for ArtworkImage.Info);
        *(_QWORD *)(v231 + v230[5]) = 0x3FF0000000000000;
        v232 = (uint64_t *)(v231 + v230[6]);
        *v232 = v225;
        v232[1] = v226;
        v233 = (uint64_t *)(v231 + v230[7]);
        *v233 = v227;
        v233[1] = v229;
        *(_BYTE *)(v231 + v230[8]) = 0;
        v234 = (_QWORD *)(v231 + v230[10]);
        *v234 = swift_getKeyPath(&unk_100EA8128);
        v235 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
        swift_storeEnumTagMultiPayload(v234, v235, 0);
        v236 = v286;
        sub_10005B6C0(v231, v286, _s8GridCellVMa);
        v237 = v320;
        sub_10005B704(v236, v320, _s8GridCellVMa);
        swift_storeEnumTagMultiPayload(v237, v321, 1);
        v238 = sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
        v239 = (uint64_t)v322;
        _ConditionalContent<>.init(storage:)(v237, v230, v230, v238, v238);
        v240 = v304;
        sub_10004A160(v239, v304, &qword_10119E200);
        swift_storeEnumTagMultiPayload(v240, v303, 0);
        v241 = sub_10005B4F0();
        v242 = (uint64_t)v305;
        _ConditionalContent<>.init(storage:)(v240, v325, &type metadata for EmptyView, v241, &protocol witness table for EmptyView);
        sub_10004FF60(v239, &qword_10119E200);
        v243 = v328;
        sub_10004A160(v242, v328, &qword_10119E1E0);
        swift_storeEnumTagMultiPayload(v243, v326, 1);
        v244 = sub_10005B56C(&qword_10119E218, &qword_10119E208, (void (*)(void))sub_10005B4F0);
        v245 = sub_10005B654(&qword_10119E220, &qword_10119E1E0, (void (*)(void))sub_10005B4F0);
        _ConditionalContent<>.init(storage:)(v243, v327, v215, v244, v245);
        sub_10004FF60(v242, &qword_10119E1E0);
        sub_10005B748(v236, _s8GridCellVMa);
        return (*(uint64_t (**)(char *, uint64_t))(v290 + 8))(v216, v291);
      }
      else
      {
        v249 = v304;
        swift_storeEnumTagMultiPayload(v304, v303, 1);
        v250 = sub_10005B4F0();
        v251 = (uint64_t)v305;
        _ConditionalContent<>.init(storage:)(v249, v325, &type metadata for EmptyView, v250, &protocol witness table for EmptyView);
        v252 = v328;
        sub_10004A160(v251, v328, &qword_10119E1E0);
        swift_storeEnumTagMultiPayload(v252, v326, 1);
        v253 = sub_10005B56C(&qword_10119E218, &qword_10119E208, (void (*)(void))sub_10005B4F0);
        v254 = sub_10005B654(&qword_10119E220, &qword_10119E1E0, (void (*)(void))sub_10005B4F0);
        _ConditionalContent<>.init(storage:)(v252, v327, v215, v253, v254);
        sub_10004FF60(v251, &qword_10119E1E0);
        return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v55, v52);
      }
    }
  }
}

uint64_t sub_1000584AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  NSString *v75;
  int v76;
  char *v77;
  NSString *v78;
  int v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(char *, _QWORD);
  char *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;
  char *v112;
  uint64_t v113;
  NSString *v114;
  int v115;
  char *v116;
  NSString *v117;
  int v118;
  char *v119;
  uint64_t *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  __n128 v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char v148;
  void (*v149)(char *, uint64_t);
  uint64_t v150;
  int *v151;
  NSString *v152;
  int v153;
  char *v154;
  NSString *v155;
  int v156;
  char *v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  __n128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  int *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  __n128 v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  int *v206;
  char *v207;
  uint64_t v208;
  NSString *v209;
  int v210;
  char *v211;
  NSString *v212;
  int v213;
  char *v214;
  uint64_t *v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t *v233;
  uint64_t v234;
  __n128 v235;
  uint64_t v236;
  unint64_t v237;
  char *v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  int *v243;
  uint64_t v244;
  NSString *v245;
  int v246;
  uint64_t v247;
  NSString *v248;
  int v249;
  char **v250;
  uint64_t v251;
  uint64_t *v252;
  _QWORD *v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  char *v280;
  char v281;
  void (*v282)(char *, uint64_t);
  uint64_t v283;
  char *v284;
  uint64_t v285;
  NSString *v286;
  int v287;
  uint64_t v288;
  NSString *v289;
  int v290;
  char **v291;
  uint64_t v292;
  _QWORD *v293;
  _QWORD *v294;
  _QWORD *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int *v308;
  uint64_t v309;
  char *v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  char *v316;
  char *v317;
  uint64_t v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  uint64_t v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  char v355[8];
  char v356;
  uint64_t v357;
  uint64_t v358;

  v2 = v1;
  v353 = a1;
  v314 = type metadata accessor for UploadedVideo(0);
  v313 = *(_QWORD *)(v314 - 8);
  __chkstk_darwin(v314);
  v312 = (char *)&v307 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v328 = sub_100007E8C(&qword_10119E228);
  __chkstk_darwin(v328);
  v329 = (uint64_t)&v307 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v352 = sub_100007E8C(&qword_10119E230);
  __chkstk_darwin(v352);
  v330 = (char *)&v307 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v332 = type metadata accessor for MusicVideo(0);
  v331 = *(_QWORD *)(v332 - 8);
  __chkstk_darwin(v332);
  v327 = (char *)&v307 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v321 = type metadata accessor for TVSeason(0);
  v320 = *(_QWORD *)(v321 - 8);
  __chkstk_darwin(v321);
  v319 = (char *)&v307 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v335 = type metadata accessor for MusicMovie(0);
  v334 = *(_QWORD *)(v335 - 8);
  __chkstk_darwin(v335);
  v333 = (char *)&v307 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v316 = (char *)&v307 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v315 = (char *)&v307 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v326 = type metadata accessor for Playlist(0);
  v325 = *(_QWORD *)(v326 - 8);
  v13 = __chkstk_darwin(v326);
  v322 = (char *)&v307 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v324 = (char *)&v307 - v15;
  v349 = sub_100007E8C(&qword_10119E238);
  __chkstk_darwin(v349);
  v351 = (uint64_t)&v307 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v341 = sub_100007E8C(&qword_10119E240);
  __chkstk_darwin(v341);
  v342 = (uint64_t)&v307 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v345 = sub_100007E8C(&qword_10119E248);
  __chkstk_darwin(v345);
  v346 = (uint64_t)&v307 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v348 = sub_100007E8C(&qword_10119E250);
  __chkstk_darwin(v348);
  v347 = (char *)&v307 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v350 = sub_100007E8C(&qword_10119E258);
  __chkstk_darwin(v350);
  v343 = (char *)&v307 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v340 = type metadata accessor for MusicFavoriteStatus(0);
  v338 = *(_QWORD *)(v340 - 8);
  v21 = __chkstk_darwin(v340);
  v337 = (char *)&v307 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v339 = (char *)&v307 - v23;
  v24 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v24);
  v354 = (char *)&v307 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v26);
  v28 = (char *)&v307 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for ArtworkImage.Info(0);
  v30 = __chkstk_darwin(v29);
  v309 = (uint64_t)&v307 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v323 = (uint64_t)&v307 - v33;
  __chkstk_darwin(v32);
  v336 = (uint64_t)&v307 - v34;
  v35 = (int *)_s8ListCellVMa(0);
  v36 = __chkstk_darwin(v35);
  v310 = (char *)&v307 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v36);
  v311 = (uint64_t)&v307 - v39;
  v40 = __chkstk_darwin(v38);
  v317 = (char *)&v307 - v41;
  v42 = __chkstk_darwin(v40);
  v318 = (uint64_t)&v307 - v43;
  v44 = __chkstk_darwin(v42);
  v46 = (char *)&v307 - v45;
  __chkstk_darwin(v44);
  v344 = (uint64_t)&v307 - v47;
  v48 = type metadata accessor for Album(0);
  v49 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v51 = (char *)&v307 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for RecentlyAddedMusicItem(0);
  v53 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v55 = (char *)&v307 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v55, v2, v52);
  v56 = (*(uint64_t (**)(char *, uint64_t))(v53 + 88))(v55, v52);
  if (v56 == enum case for RecentlyAddedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
    v308 = (int *)v49;
    v57 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
    v307 = v48;
    v57(v51, v55, v48);
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v48, (uint64_t)&protocol witness table for Album, v28);
    v58 = _s21RecentlyAddedListCellVMa(0);
    ArtworkImage.Size.init(cgSize:)(*(_QWORD *)(v2 + *(int *)(v58 + 20)), *(_QWORD *)(v2 + *(int *)(v58 + 20) + 8), 0, (uint64_t)v355);
    v59 = Corner.small.unsafeMutableAddressor();
    v60 = *v59;
    v61 = v59[1];
    v62 = *((_BYTE *)v59 + 16);
    v63 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v64 = (uint64_t)v354;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v354, 1, 10, v63);
    v65 = v336;
    ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v28, v64, 0, 1, (uint64_t)v355, v60, v61, v62, v336);
    v354 = (char *)sub_10031E71C();
    v335 = v66;
    v334 = sub_10031E87C();
    v333 = v67;
    v68 = v339;
    Album.favoriteStatus.getter();
    v69 = v338;
    v70 = v337;
    v71 = v340;
    (*(void (**)(char *, _QWORD, uint64_t))(v338 + 104))(v337, enum case for MusicFavoriteStatus.favorited(_:), v340);
    v72 = static MusicFavoriteStatus.== infix(_:_:)(v68, v70);
    v73 = *(void (**)(char *, uint64_t))(v69 + 8);
    v73(v70, v71);
    v74 = ((uint64_t (*)(char *, uint64_t))v73)(v68, v71);
    Album.contentRating.getter(v74);
    v75 = UIFontTextStyleBody;
    v76 = static HierarchicalShapeStyle.primary.getter();
    v77 = &v46[v35[9]];
    *((_QWORD *)v77 + 4) = &type metadata for HierarchicalShapeStyle;
    *((_QWORD *)v77 + 5) = &protocol witness table for HierarchicalShapeStyle;
    *((_DWORD *)v77 + 2) = v76;
    v78 = UIFontTextStyleSubheadline;
    v79 = static HierarchicalShapeStyle.secondary.getter(v78);
    *((_QWORD *)v77 + 10) = &type metadata for HierarchicalShapeStyle;
    *((_QWORD *)v77 + 11) = &protocol witness table for HierarchicalShapeStyle;
    *((_DWORD *)v77 + 14) = v79;
    *(_QWORD *)v77 = v75;
    *((_QWORD *)v77 + 6) = v78;
    v77[96] = 0;
    sub_10005B6C0(v65, (uint64_t)v46, type metadata accessor for ArtworkImage.Info);
    v80 = &v46[v35[5]];
    v81 = v335;
    *(_QWORD *)v80 = v354;
    *((_QWORD *)v80 + 1) = v81;
    v82 = (uint64_t *)&v46[v35[6]];
    v83 = v333;
    *v82 = v334;
    v82[1] = (uint64_t)v83;
    v46[v35[7]] = v72 & 1;
    v84 = &v46[v35[10]];
    *(_QWORD *)v84 = 0;
    *((_QWORD *)v84 + 1) = 0;
    v85 = &v46[v35[11]];
    *(_QWORD *)v85 = swift_getKeyPath(&unk_100EA8128);
    v86 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    swift_storeEnumTagMultiPayload(v85, v86, 0);
    v87 = v344;
    sub_10005B6C0((uint64_t)v46, v344, _s8ListCellVMa);
    v88 = v346;
    sub_10005B704(v87, v346, _s8ListCellVMa);
    swift_storeEnumTagMultiPayload(v88, v345, 0);
    v89 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
    v90 = (uint64_t)v347;
    _ConditionalContent<>.init(storage:)(v88, v35, v35, v89, v89);
    v91 = v342;
    sub_10004A160(v90, v342, &qword_10119E250);
    swift_storeEnumTagMultiPayload(v91, v341, 0);
    v92 = sub_10005B5D8();
    v93 = (uint64_t)v343;
    _ConditionalContent<>.init(storage:)(v91, v348, v348, v92, v92);
    sub_10004FF60(v90, &qword_10119E250);
    v94 = v351;
    sub_10004A160(v93, v351, &qword_10119E258);
    swift_storeEnumTagMultiPayload(v94, v349, 0);
    v95 = sub_10005B56C(&qword_10119E268, &qword_10119E258, (void (*)(void))sub_10005B5D8);
    v96 = sub_10005B654(&qword_10119E270, &qword_10119E230, (void (*)(void))sub_10005B5D8);
    _ConditionalContent<>.init(storage:)(v94, v350, v352, v95, v96);
    sub_10004FF60(v93, &qword_10119E258);
    sub_10005B748(v87, _s8ListCellVMa);
    v97 = (uint64_t (*)(char *, _QWORD))*((_QWORD *)v308 + 1);
    v98 = v51;
    v99 = (uint64_t *)&v339;
  }
  else
  {
    v100 = (uint64_t)v354;
    v308 = v35;
    if (v56 == enum case for RecentlyAddedMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
      v101 = v335;
      (*(void (**)(void))(v334 + 32))();
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v101, (uint64_t)&protocol witness table for MusicMovie, v28);
      v102 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v100, 5, 10, v102);
      v103 = _s21RecentlyAddedListCellVMa(0);
      ArtworkImage.Size.init(cgSize:)(*(_QWORD *)(v2 + *(int *)(v103 + 20)), *(_QWORD *)(v2 + *(int *)(v103 + 20) + 8), 0, (uint64_t)v355);
      v104 = Corner.small.unsafeMutableAddressor();
      v105 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v28, v100, 0, 1, (uint64_t)v355, *v104, v104[1], *((_BYTE *)v104 + 16), (uint64_t)v46);
      v354 = (char *)MusicMovie.title.getter(v105);
      v107 = v106;
      v108 = MusicMovie.artistName.getter();
      v110 = v109;
      v111 = v308;
      v112 = &v46[v308[8]];
      v113 = type metadata accessor for ContentRating(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v112, 1, 1, v113);
      v114 = UIFontTextStyleBody;
      v115 = static HierarchicalShapeStyle.primary.getter();
      v116 = &v46[v111[9]];
      *((_QWORD *)v116 + 4) = &type metadata for HierarchicalShapeStyle;
      *((_QWORD *)v116 + 5) = &protocol witness table for HierarchicalShapeStyle;
      *((_DWORD *)v116 + 2) = v115;
      v117 = UIFontTextStyleSubheadline;
      v118 = static HierarchicalShapeStyle.secondary.getter(v117);
      *((_QWORD *)v116 + 10) = &type metadata for HierarchicalShapeStyle;
      *((_QWORD *)v116 + 11) = &protocol witness table for HierarchicalShapeStyle;
      *((_DWORD *)v116 + 14) = v118;
      *(_QWORD *)v116 = v114;
      *((_QWORD *)v116 + 6) = v117;
      v116[96] = 0;
      v119 = &v46[v111[5]];
      *(_QWORD *)v119 = v354;
      *((_QWORD *)v119 + 1) = v107;
      v120 = (uint64_t *)&v46[v111[6]];
      *v120 = v108;
      v120[1] = v110;
      v46[v111[7]] = 0;
      v121 = &v46[v111[10]];
      *(_QWORD *)v121 = 0;
      *((_QWORD *)v121 + 1) = 0;
      v122 = &v46[v111[11]];
      *(_QWORD *)v122 = swift_getKeyPath(&unk_100EA8128);
      v123 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
      swift_storeEnumTagMultiPayload(v122, v123, 0);
      v124 = v344;
      sub_10005B6C0((uint64_t)v46, v344, _s8ListCellVMa);
      v125 = v346;
      sub_10005B704(v124, v346, _s8ListCellVMa);
      swift_storeEnumTagMultiPayload(v125, v345, 0);
      v126 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
      v127 = (uint64_t)v347;
      _ConditionalContent<>.init(storage:)(v125, v111, v111, v126, v126);
      v128 = v342;
      sub_10004A160(v127, v342, &qword_10119E250);
      swift_storeEnumTagMultiPayload(v128, v341, 1);
      v129 = sub_10005B5D8();
      v130 = (uint64_t)v343;
      _ConditionalContent<>.init(storage:)(v128, v348, v348, v129, v129);
      sub_10004FF60(v127, &qword_10119E250);
      v131 = v351;
      sub_10004A160(v130, v351, &qword_10119E258);
      swift_storeEnumTagMultiPayload(v131, v349, 0);
      v132 = sub_10005B56C(&qword_10119E268, &qword_10119E258, (void (*)(void))sub_10005B5D8);
      v133 = sub_10005B654(&qword_10119E270, &qword_10119E230, (void (*)(void))sub_10005B5D8);
      _ConditionalContent<>.init(storage:)(v131, v350, v352, v132, v133);
      sub_10004FF60(v130, &qword_10119E258);
      sub_10005B748(v124, _s8ListCellVMa);
      v97 = *(uint64_t (**)(char *, _QWORD))(v334 + 8);
      v98 = v333;
      v99 = &v358;
    }
    else if (v56 == enum case for RecentlyAddedMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
      v134 = v327;
      v135 = v332;
      (*(void (**)(char *, char *, uint64_t))(v331 + 32))(v327, v55, v332);
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v135, (uint64_t)&protocol witness table for MusicVideo, v28);
      v136 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v100, 4, 10, v136);
      v137 = _s21RecentlyAddedListCellVMa(0);
      ArtworkImage.Size.init(cgSize:)(*(_QWORD *)(v2 + *(int *)(v137 + 20)), *(_QWORD *)(v2 + *(int *)(v137 + 20) + 8), 0, (uint64_t)v355);
      v138 = Corner.small.unsafeMutableAddressor();
      v139 = v336;
      v140 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v28, v100, 0, 1, (uint64_t)v355, *v138, v138[1], *((_BYTE *)v138 + 16), v336);
      v354 = (char *)MusicVideo.title.getter(v140);
      v343 = v141;
      v142 = MusicVideo.artistName.getter(v354);
      v341 = v143;
      v342 = v142;
      v144 = v339;
      MusicVideo.favoriteStatus.getter(v142);
      v145 = v338;
      v146 = v337;
      v147 = v340;
      (*(void (**)(char *, _QWORD, uint64_t))(v338 + 104))(v337, enum case for MusicFavoriteStatus.favorited(_:), v340);
      v148 = static MusicFavoriteStatus.== infix(_:_:)(v144, v146);
      v149 = *(void (**)(char *, uint64_t))(v145 + 8);
      v149(v146, v147);
      v150 = ((uint64_t (*)(char *, uint64_t))v149)(v144, v147);
      v151 = v308;
      MusicVideo.contentRating.getter(v150);
      v152 = UIFontTextStyleBody;
      v153 = static HierarchicalShapeStyle.primary.getter();
      v154 = &v46[v151[9]];
      *((_QWORD *)v154 + 4) = &type metadata for HierarchicalShapeStyle;
      *((_QWORD *)v154 + 5) = &protocol witness table for HierarchicalShapeStyle;
      *((_DWORD *)v154 + 2) = v153;
      v155 = UIFontTextStyleSubheadline;
      v156 = static HierarchicalShapeStyle.secondary.getter(v155);
      *((_QWORD *)v154 + 10) = &type metadata for HierarchicalShapeStyle;
      *((_QWORD *)v154 + 11) = &protocol witness table for HierarchicalShapeStyle;
      *((_DWORD *)v154 + 14) = v156;
      *(_QWORD *)v154 = v152;
      *((_QWORD *)v154 + 6) = v155;
      v154[96] = 0;
      sub_10005B6C0(v139, (uint64_t)v46, type metadata accessor for ArtworkImage.Info);
      v157 = &v46[v151[5]];
      v158 = v343;
      *(_QWORD *)v157 = v354;
      *((_QWORD *)v157 + 1) = v158;
      v159 = &v46[v151[6]];
      v160 = v341;
      *(_QWORD *)v159 = v342;
      *((_QWORD *)v159 + 1) = v160;
      v46[v151[7]] = v148 & 1;
      v161 = &v46[v151[10]];
      *(_QWORD *)v161 = 0;
      *((_QWORD *)v161 + 1) = 0;
      v162 = &v46[v151[11]];
      *(_QWORD *)v162 = swift_getKeyPath(&unk_100EA8128);
      v163 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
      swift_storeEnumTagMultiPayload(v162, v163, 0);
      v164 = v344;
      sub_10005B6C0((uint64_t)v46, v344, _s8ListCellVMa);
      v165 = v346;
      sub_10005B704(v164, v346, _s8ListCellVMa);
      swift_storeEnumTagMultiPayload(v165, v345, 0);
      v166 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
      v167 = (uint64_t)v347;
      _ConditionalContent<>.init(storage:)(v165, v151, v151, v166, v166);
      v168 = v329;
      sub_10004A160(v167, v329, &qword_10119E250);
      swift_storeEnumTagMultiPayload(v168, v328, 0);
      v169 = sub_10005B5D8();
      v170 = (uint64_t)v330;
      _ConditionalContent<>.init(storage:)(v168, v348, &type metadata for EmptyView, v169, &protocol witness table for EmptyView);
      sub_10004FF60(v167, &qword_10119E250);
      v171 = v351;
      sub_10004A160(v170, v351, &qword_10119E230);
      swift_storeEnumTagMultiPayload(v171, v349, 1);
      v172 = sub_10005B56C(&qword_10119E268, &qword_10119E258, (void (*)(void))sub_10005B5D8);
      v173 = sub_10005B654(&qword_10119E270, &qword_10119E230, (void (*)(void))sub_10005B5D8);
      _ConditionalContent<>.init(storage:)(v171, v350, v352, v172, v173);
      sub_10004FF60(v170, &qword_10119E230);
      sub_10005B748(v164, _s8ListCellVMa);
      v97 = *(uint64_t (**)(char *, _QWORD))(v331 + 8);
      v98 = v134;
      v99 = &v357;
    }
    else if (v56 == enum case for RecentlyAddedMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
      v174 = v325;
      v175 = v324;
      v176 = v326;
      (*(void (**)(char *, char *, uint64_t))(v325 + 32))(v324, v55, v326);
      v177 = Playlist.artworkViewModel.getter((uint64_t)v28);
      Playlist.variant.getter(v177);
      v178 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 56))(v100, 0, 10, v178);
      v179 = _s21RecentlyAddedListCellVMa(0);
      ArtworkImage.Size.init(cgSize:)(*(_QWORD *)(v2 + *(int *)(v179 + 20)), *(_QWORD *)(v2 + *(int *)(v179 + 20) + 8), 0, (uint64_t)v355);
      v180 = Corner.small.unsafeMutableAddressor();
      v181 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v28, v100, 0, 1, (uint64_t)v355, *v180, v180[1], *((_BYTE *)v180 + 16), v323);
      v354 = (char *)Playlist.name.getter(v181);
      v344 = v182;
      v183 = Playlist.curatorName.getter();
      v185 = v184;
      v186 = v322;
      (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v322, v175, v176);
      if (v185)
      {
        v336 = v183;
        v187 = (*(uint64_t (**)(char *, uint64_t))(v174 + 8))(v186, v176);
        v188 = v308;
        v189 = v340;
        v190 = v339;
        v191 = v338;
        v192 = v337;
      }
      else
      {
        v266 = sub_10031E9D4();
        v268 = v266;
        v188 = v308;
        v189 = v340;
        v190 = v339;
        v191 = v338;
        v192 = v337;
        if (v267)
        {
          v185 = v267;
          v336 = v266;
          v187 = (*(uint64_t (**)(char *, uint64_t))(v174 + 8))(v186, v176);
        }
        else
        {
          v276 = v315;
          v277 = String.LocalizationValue.init(stringLiteral:)(0x7473696C79616C50, 0xE800000000000000);
          v278 = v316;
          static Locale.current.getter(v277);
          v336 = String.init(localized:table:bundle:locale:comment:)(v276, v268, 0, 0, v278, 0, 0, 256);
          v185 = v279;
          v187 = (*(uint64_t (**)(char *, uint64_t))(v174 + 8))(v322, v176);
        }
      }
      v280 = v324;
      Playlist.favoriteStatus.getter(v187);
      (*(void (**)(char *, _QWORD, uint64_t))(v191 + 104))(v192, enum case for MusicFavoriteStatus.favorited(_:), v189);
      v281 = static MusicFavoriteStatus.== infix(_:_:)(v190, v192);
      v282 = *(void (**)(char *, uint64_t))(v191 + 8);
      v282(v192, v189);
      v282(v190, v189);
      v283 = (uint64_t)v317;
      v284 = &v317[v188[8]];
      v285 = type metadata accessor for ContentRating(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v285 - 8) + 56))(v284, 1, 1, v285);
      v286 = UIFontTextStyleBody;
      v287 = static HierarchicalShapeStyle.primary.getter();
      v288 = v283 + v188[9];
      *(_QWORD *)(v288 + 32) = &type metadata for HierarchicalShapeStyle;
      *(_QWORD *)(v288 + 40) = &protocol witness table for HierarchicalShapeStyle;
      *(_DWORD *)(v288 + 8) = v287;
      v289 = UIFontTextStyleSubheadline;
      v290 = static HierarchicalShapeStyle.secondary.getter(v289);
      *(_QWORD *)(v288 + 80) = &type metadata for HierarchicalShapeStyle;
      *(_QWORD *)(v288 + 88) = &protocol witness table for HierarchicalShapeStyle;
      *(_DWORD *)(v288 + 56) = v290;
      *(_QWORD *)v288 = v286;
      *(_QWORD *)(v288 + 48) = v289;
      *(_BYTE *)(v288 + 96) = 0;
      sub_10005B6C0(v323, v283, type metadata accessor for ArtworkImage.Info);
      v291 = (char **)(v283 + v188[5]);
      v292 = v344;
      *v291 = v354;
      v291[1] = (char *)v292;
      v293 = (_QWORD *)(v283 + v188[6]);
      *v293 = v336;
      v293[1] = v185;
      *(_BYTE *)(v283 + v188[7]) = v281 & 1;
      v294 = (_QWORD *)(v283 + v188[10]);
      *v294 = 0;
      v294[1] = 0;
      v295 = (_QWORD *)(v283 + v188[11]);
      *v295 = swift_getKeyPath(&unk_100EA8128);
      v296 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
      swift_storeEnumTagMultiPayload(v295, v296, 0);
      v297 = v318;
      sub_10005B6C0(v283, v318, _s8ListCellVMa);
      v298 = v346;
      sub_10005B704(v297, v346, _s8ListCellVMa);
      swift_storeEnumTagMultiPayload(v298, v345, 1);
      v299 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
      v300 = (uint64_t)v347;
      _ConditionalContent<>.init(storage:)(v298, v188, v188, v299, v299);
      v301 = v342;
      sub_10004A160(v300, v342, &qword_10119E250);
      swift_storeEnumTagMultiPayload(v301, v341, 0);
      v302 = sub_10005B5D8();
      v303 = (uint64_t)v343;
      _ConditionalContent<>.init(storage:)(v301, v348, v348, v302, v302);
      sub_10004FF60(v300, &qword_10119E250);
      v304 = v351;
      sub_10004A160(v303, v351, &qword_10119E258);
      swift_storeEnumTagMultiPayload(v304, v349, 0);
      v305 = sub_10005B56C(&qword_10119E268, &qword_10119E258, (void (*)(void))sub_10005B5D8);
      v306 = sub_10005B654(&qword_10119E270, &qword_10119E230, (void (*)(void))sub_10005B5D8);
      _ConditionalContent<>.init(storage:)(v304, v350, v352, v305, v306);
      sub_10004FF60(v303, &qword_10119E258);
      sub_10005B748(v297, _s8ListCellVMa);
      v97 = *(uint64_t (**)(char *, _QWORD))(v325 + 8);
      v98 = v280;
      v99 = (uint64_t *)&v356;
    }
    else if (v56 == enum case for RecentlyAddedMusicItem.tvSeason(_:))
    {
      (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
      v193 = v321;
      (*(void (**)(void))(v320 + 32))();
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v193, (uint64_t)&protocol witness table for TVSeason, v28);
      v194 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v194 - 8) + 56))(v100, 5, 10, v194);
      v195 = _s21RecentlyAddedListCellVMa(0);
      ArtworkImage.Size.init(cgSize:)(*(_QWORD *)(v2 + *(int *)(v195 + 20)), *(_QWORD *)(v2 + *(int *)(v195 + 20) + 8), 0, (uint64_t)v355);
      v196 = Corner.small.unsafeMutableAddressor();
      v197 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v28, v100, 0, 1, (uint64_t)v355, *v196, v196[1], *((_BYTE *)v196 + 16), (uint64_t)v46);
      v354 = (char *)TVSeason.showName.getter(v197);
      v199 = v198;
      v200 = v315;
      v201 = String.LocalizationValue.init(stringLiteral:)(0x776F6853205654, 0xE700000000000000);
      v202 = v316;
      static Locale.current.getter(v201);
      v203 = String.init(localized:table:bundle:locale:comment:)(v200, 0, 0, 0, v202, "Item Type", 9, 2);
      v205 = v204;
      v206 = v308;
      v207 = &v46[v308[8]];
      v208 = type metadata accessor for ContentRating(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v208 - 8) + 56))(v207, 1, 1, v208);
      v209 = UIFontTextStyleBody;
      v210 = static HierarchicalShapeStyle.primary.getter();
      v211 = &v46[v206[9]];
      *((_QWORD *)v211 + 4) = &type metadata for HierarchicalShapeStyle;
      *((_QWORD *)v211 + 5) = &protocol witness table for HierarchicalShapeStyle;
      *((_DWORD *)v211 + 2) = v210;
      v212 = UIFontTextStyleSubheadline;
      v213 = static HierarchicalShapeStyle.secondary.getter(v212);
      *((_QWORD *)v211 + 10) = &type metadata for HierarchicalShapeStyle;
      *((_QWORD *)v211 + 11) = &protocol witness table for HierarchicalShapeStyle;
      *((_DWORD *)v211 + 14) = v213;
      *(_QWORD *)v211 = v209;
      *((_QWORD *)v211 + 6) = v212;
      v211[96] = 0;
      v214 = &v46[v206[5]];
      *(_QWORD *)v214 = v354;
      *((_QWORD *)v214 + 1) = v199;
      v215 = (uint64_t *)&v46[v206[6]];
      *v215 = v203;
      v215[1] = v205;
      v46[v206[7]] = 0;
      v216 = &v46[v206[10]];
      *(_QWORD *)v216 = 0;
      *((_QWORD *)v216 + 1) = 0;
      v217 = &v46[v206[11]];
      *(_QWORD *)v217 = swift_getKeyPath(&unk_100EA8128);
      v218 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
      swift_storeEnumTagMultiPayload(v217, v218, 0);
      v219 = v344;
      sub_10005B6C0((uint64_t)v46, v344, _s8ListCellVMa);
      v220 = v346;
      sub_10005B704(v219, v346, _s8ListCellVMa);
      swift_storeEnumTagMultiPayload(v220, v345, 1);
      v221 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
      v222 = (uint64_t)v347;
      _ConditionalContent<>.init(storage:)(v220, v206, v206, v221, v221);
      v223 = v342;
      sub_10004A160(v222, v342, &qword_10119E250);
      swift_storeEnumTagMultiPayload(v223, v341, 1);
      v224 = sub_10005B5D8();
      v225 = (uint64_t)v343;
      _ConditionalContent<>.init(storage:)(v223, v348, v348, v224, v224);
      sub_10004FF60(v222, &qword_10119E250);
      v226 = v351;
      sub_10004A160(v225, v351, &qword_10119E258);
      swift_storeEnumTagMultiPayload(v226, v349, 0);
      v227 = sub_10005B56C(&qword_10119E268, &qword_10119E258, (void (*)(void))sub_10005B5D8);
      v228 = sub_10005B654(&qword_10119E270, &qword_10119E230, (void (*)(void))sub_10005B5D8);
      _ConditionalContent<>.init(storage:)(v226, v350, v352, v227, v228);
      sub_10004FF60(v225, &qword_10119E258);
      sub_10005B748(v219, _s8ListCellVMa);
      v97 = *(uint64_t (**)(char *, _QWORD))(v320 + 8);
      v98 = v319;
      v99 = &v353;
    }
    else
    {
      if (v56 != enum case for RecentlyAddedMusicItem.uploadedVideo(_:))
      {
        v269 = v329;
        swift_storeEnumTagMultiPayload(v329, v328, 1);
        v270 = sub_10005B5D8();
        v271 = (uint64_t)v330;
        _ConditionalContent<>.init(storage:)(v269, v348, &type metadata for EmptyView, v270, &protocol witness table for EmptyView);
        v272 = v351;
        sub_10004A160(v271, v351, &qword_10119E230);
        swift_storeEnumTagMultiPayload(v272, v349, 1);
        v273 = sub_10005B56C(&qword_10119E268, &qword_10119E258, (void (*)(void))sub_10005B5D8);
        v274 = sub_10005B654(&qword_10119E270, &qword_10119E230, (void (*)(void))sub_10005B5D8);
        _ConditionalContent<>.init(storage:)(v272, v350, v352, v273, v274);
        sub_10004FF60(v271, &qword_10119E230);
        return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v55, v52);
      }
      v229 = v2;
      (*(void (**)(char *, uint64_t))(v53 + 96))(v55, v52);
      v230 = v314;
      (*(void (**)(void))(v313 + 32))();
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v230, (uint64_t)&protocol witness table for UploadedVideo, v28);
      v231 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v231 - 8) + 56))(v100, 4, 10, v231);
      v232 = _s21RecentlyAddedListCellVMa(0);
      ArtworkImage.Size.init(cgSize:)(*(_QWORD *)(v229 + *(int *)(v232 + 20)), *(_QWORD *)(v229 + *(int *)(v232 + 20) + 8), 0, (uint64_t)v355);
      v233 = Corner.small.unsafeMutableAddressor();
      v234 = v309;
      v235 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v28, v100, 0, 1, (uint64_t)v355, *v233, v233[1], *((_BYTE *)v233 + 16), v309);
      v236 = UploadedVideo.title.getter(v235);
      if (v237)
        v238 = (char *)v236;
      else
        v238 = 0;
      v354 = v238;
      v239 = 0xE000000000000000;
      if (v237)
        v239 = v237;
      v344 = v239;
      v240 = UploadedVideo.artistName.getter(v236);
      v242 = v241;
      v243 = v308;
      v244 = (uint64_t)v310;
      UploadedVideo.contentRating.getter(v240);
      v245 = UIFontTextStyleBody;
      v246 = static HierarchicalShapeStyle.primary.getter();
      v247 = v244 + v243[9];
      *(_QWORD *)(v247 + 32) = &type metadata for HierarchicalShapeStyle;
      *(_QWORD *)(v247 + 40) = &protocol witness table for HierarchicalShapeStyle;
      *(_DWORD *)(v247 + 8) = v246;
      v248 = UIFontTextStyleSubheadline;
      v249 = static HierarchicalShapeStyle.secondary.getter(v248);
      *(_QWORD *)(v247 + 80) = &type metadata for HierarchicalShapeStyle;
      *(_QWORD *)(v247 + 88) = &protocol witness table for HierarchicalShapeStyle;
      *(_DWORD *)(v247 + 56) = v249;
      *(_QWORD *)v247 = v245;
      *(_QWORD *)(v247 + 48) = v248;
      *(_BYTE *)(v247 + 96) = 0;
      sub_10005B6C0(v234, v244, type metadata accessor for ArtworkImage.Info);
      v250 = (char **)(v244 + v243[5]);
      v251 = v344;
      *v250 = v354;
      v250[1] = (char *)v251;
      v252 = (uint64_t *)(v244 + v243[6]);
      *v252 = v240;
      v252[1] = v242;
      *(_BYTE *)(v244 + v243[7]) = 0;
      v253 = (_QWORD *)(v244 + v243[10]);
      *v253 = 0;
      v253[1] = 0;
      v254 = (_QWORD *)(v244 + v243[11]);
      *v254 = swift_getKeyPath(&unk_100EA8128);
      v255 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
      swift_storeEnumTagMultiPayload(v254, v255, 0);
      v256 = v311;
      sub_10005B6C0(v244, v311, _s8ListCellVMa);
      v257 = v346;
      sub_10005B704(v256, v346, _s8ListCellVMa);
      swift_storeEnumTagMultiPayload(v257, v345, 1);
      v258 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
      v259 = (uint64_t)v347;
      _ConditionalContent<>.init(storage:)(v257, v243, v243, v258, v258);
      v260 = v329;
      sub_10004A160(v259, v329, &qword_10119E250);
      swift_storeEnumTagMultiPayload(v260, v328, 0);
      v261 = sub_10005B5D8();
      v262 = (uint64_t)v330;
      _ConditionalContent<>.init(storage:)(v260, v348, &type metadata for EmptyView, v261, &protocol witness table for EmptyView);
      sub_10004FF60(v259, &qword_10119E250);
      v263 = v351;
      sub_10004A160(v262, v351, &qword_10119E230);
      swift_storeEnumTagMultiPayload(v263, v349, 1);
      v264 = sub_10005B56C(&qword_10119E268, &qword_10119E258, (void (*)(void))sub_10005B5D8);
      v265 = sub_10005B654(&qword_10119E270, &qword_10119E230, (void (*)(void))sub_10005B5D8);
      _ConditionalContent<>.init(storage:)(v263, v350, v352, v264, v265);
      sub_10004FF60(v262, &qword_10119E230);
      sub_10005B748(v256, _s8ListCellVMa);
      v97 = *(uint64_t (**)(char *, _QWORD))(v313 + 8);
      v98 = v312;
      v99 = &v346;
    }
  }
  return v97(v98, *(v99 - 32));
}

uint64_t sub_10005A4A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  _QWORD *v21;
  __n128 v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t (*v32)(uint64_t);
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v57 = a1;
  v58 = a2;
  v2 = type metadata accessor for UploadedVideo(0);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  __chkstk_darwin(v2);
  v48 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MusicMovie(0);
  v56 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicVideo(0);
  v54 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  __chkstk_darwin(v7);
  v53 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Album(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RecentlyAddedMusicItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v57, v16);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v19, v16);
  if (v20 == enum case for RecentlyAddedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v19, v12);
    v21 = Player.state<A>(for:)((uint64_t)v15, v12, (uint64_t)&protocol witness table for Album);
    (*(void (**)(_QWORD *))(*v21 + 256))(v21);
    v22 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v22);
  }
  if (v20 == enum case for RecentlyAddedMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
    v24 = v56;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v6, v19, v4);
    v25 = sub_100048748(&qword_10119D3A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
    v26 = Player.state<A>(for:)((uint64_t)v6, v4, v25);
    (*(void (**)(_QWORD *))(*v26 + 256))(v26);
    v27 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v24 + 8))(v6, v4, v27);
  }
  if (v20 == enum case for RecentlyAddedMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
    v29 = (uint64_t)v53;
    v28 = v54;
    v30 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v53, v19, v55);
    v31 = (unint64_t *)&unk_1011B8C10;
    v32 = (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo;
    v33 = &protocol conformance descriptor for MusicVideo;
LABEL_9:
    v34 = sub_100048748(v31, v32, (uint64_t)v33);
    v35 = Player.state<A>(for:)(v29, v30, v34);
    (*(void (**)(_QWORD *))(*v35 + 256))(v35);
    v36 = swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v28 + 8))(v29, v30, v36);
  }
  if (v20 == enum case for RecentlyAddedMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
    v38 = v51;
    v37 = v52;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v11, v19, v52);
    v39 = Player.state<A>(for:)((uint64_t)v11, v37, (uint64_t)&protocol witness table for Playlist);
    (*(void (**)(_QWORD *))(*v39 + 256))(v39);
    v40 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v38 + 8))(v11, v37, v40);
  }
  else if (v20 == enum case for RecentlyAddedMusicItem.tvSeason(_:))
  {
    v41 = enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.unsupportedType(_:);
    v42 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
    v43 = v58;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v58, v41, v42);
    v44 = enum case for MusicPlayer.PlayabilityStatus.unplayable(_:);
    v45 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v43, v44, v45);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v46);
  }
  else
  {
    if (v20 == enum case for RecentlyAddedMusicItem.uploadedVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
      v29 = (uint64_t)v48;
      v28 = v49;
      v30 = v50;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v48, v19, v50);
      v31 = &qword_10119E0A0;
      v32 = (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo;
      v33 = &protocol conformance descriptor for UploadedVideo;
      goto LABEL_9;
    }
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v16, v16);
    __break(1u);
  }
  return result;
}

double sub_10005A9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double result;
  uint64_t v15;

  v4 = type metadata accessor for MusicVideo(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v11 = *(unsigned __int8 *)(v5 + 80);
  v12 = (v11 + 40) & ~v11;
  v13 = (char *)swift_allocObject(&unk_1010AF090, v12 + v6, v11 | 7);
  *((_QWORD *)v13 + 2) = 0;
  *((_QWORD *)v13 + 3) = 0;
  *((_QWORD *)v13 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v13[v12], (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_100166D14((uint64_t)v9, (uint64_t)&unk_10119E0B0, (uint64_t)v13);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10005AAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MusicPropertySource(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Track(0);
  v5[7] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[8] = v9;
  v5[9] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10005AB6C, 0, 0);
}

uint64_t sub_10005AB6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v2 = v0[8];
  v1 = v0[9];
  v4 = v0[6];
  v3 = v0[7];
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[3];
  v8 = type metadata accessor for MusicVideo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v1, v7, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for Track.musicVideo(_:), v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, enum case for MusicPropertySource.library(_:), v5);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10119EB40 + dword_10119EB40);
  v9 = (_QWORD *)swift_task_alloc(unk_10119EB44);
  v0[10] = v9;
  *v9 = v0;
  v9[1] = sub_10005AC54;
  return v11(v0[2], v0[9], v0[6]);
}

uint64_t sub_10005AC54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(*v0 + 72);
  v2 = *(_QWORD *)(*v0 + 56);
  v3 = *(_QWORD *)(*v0 + 64);
  v5 = *(_QWORD *)(*v0 + 40);
  v4 = *(_QWORD *)(*v0 + 48);
  v6 = *(_QWORD *)(*v0 + 32);
  v8 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t sub_10005ACE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RecentlyAddedMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a1, v5, v7);
  sub_1001D33B0(v4);
  v10 = objc_allocWithZone((Class)type metadata accessor for ContextualPreview.ViewController(0));
  sub_1001CFEF0((uint64_t)v4);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v12;
}

uint64_t sub_10005ADD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MusicVideo(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10005AE50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MusicVideo(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_10119E0AC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10005AEE4;
  return sub_10005AAE4(a1, v5, v6, v7, v8);
}

uint64_t sub_10005AEE4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t *sub_10005AF2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = type metadata accessor for RecentlyAddedMusicItem(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10005AFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for RecentlyAddedMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10005B014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = type metadata accessor for RecentlyAddedMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  return a1;
}

uint64_t sub_10005B080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for RecentlyAddedMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10005B0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for RecentlyAddedMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10005B138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005B144);
}

uint64_t sub_10005B148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005B154);
}

uint64_t _s21RecentlyAddedListCellVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_10119E110, (uint64_t)&_s21RecentlyAddedListCellVMn);
}

uint64_t sub_10005B16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005B464(a1, a2, a3, (uint64_t)&unk_100EA8058);
}

uint64_t *sub_10005B178(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = type metadata accessor for RecentlyAddedMusicItem(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10005B200(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RecentlyAddedMusicItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_10005B234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for RecentlyAddedMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10005B290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for RecentlyAddedMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10005B2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for RecentlyAddedMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10005B348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for RecentlyAddedMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10005B3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005B3B0);
}

uint64_t sub_10005B3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecentlyAddedMusicItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10005B3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005B3FC);
}

uint64_t sub_10005B400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecentlyAddedMusicItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t _s21RecentlyAddedGridCellVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_10119E1A0, (uint64_t)&_s21RecentlyAddedGridCellVMn);
}

uint64_t sub_10005B454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005B464(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int64 + 64);
}

uint64_t sub_10005B464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v7;
  _QWORD v8[2];

  result = type metadata accessor for RecentlyAddedMusicItem(319);
  if (v7 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(result - 8) + 64;
    v8[1] = a4;
    swift_initStructMetadata(a1, 256, 2, v8, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10005B4D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9430C, 1);
}

uint64_t sub_10005B4E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F942E4, 1);
}

unint64_t sub_10005B4F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119E210;
  if (!qword_10119E210)
  {
    v1 = sub_100044B54(&qword_10119E200);
    sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119E210);
  }
  return result;
}

uint64_t sub_10005B56C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005B5D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119E260;
  if (!qword_10119E260)
  {
    v1 = sub_100044B54(&qword_10119E250);
    sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119E260);
  }
  return result;
}

uint64_t sub_10005B654(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005B6C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005B704(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005B748(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10005B788()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119E278;
  if (!qword_10119E278)
  {
    v1 = sub_100044B54(&qword_10119E280);
    sub_10005B56C(&qword_10119E218, &qword_10119E208, (void (*)(void))sub_10005B4F0);
    sub_10005B654(&qword_10119E220, &qword_10119E1E0, (void (*)(void))sub_10005B4F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119E278);
  }
  return result;
}

unint64_t sub_10005B830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119E288;
  if (!qword_10119E288)
  {
    v1 = sub_100044B54((uint64_t *)&unk_10119E290);
    sub_10005B56C(&qword_10119E268, &qword_10119E258, (void (*)(void))sub_10005B5D8);
    sub_10005B654(&qword_10119E270, &qword_10119E230, (void (*)(void))sub_10005B5D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119E288);
  }
  return result;
}

uint64_t sub_10005B8D4(void *a1, char a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  _BOOL8 v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _OWORD v27[2];
  __int128 v28;
  uint64_t v29;

  if ((a2 & 1) != 0)
  {
    v9 = objc_msgSend(a1, "storeID");
    if (v9)
    {
      v10 = v9;
      _bridgeAnyObjectToAny(_:)(v27, v9);
      swift_unknownObjectRelease(v10);
      sub_100048ABC(v27, &v28);
      v11 = v29;
      v12 = sub_100007E68(&v28, v29);
      v13 = _bridgeAnythingToObjectiveC<A>(_:)(v12, v11);
      v14 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue();
      swift_unknownObjectRelease(v13);
      if (v14)
      {
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v17 = v16;

        v18 = String.count.getter(v15, v17);
        swift_bridgeObjectRelease(v17);
        v8 = v18 > 0;
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v28);
        return v8;
      }

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v28);
    }
    else
    {

    }
    return 0;
  }
  objc_opt_self(MPModelPlaylist);
  v3 = swift_dynamicCastObjCClass(a1);
  if (!v3)
  {
    objc_opt_self(MPModelSocialPerson);
    v19 = (void *)swift_dynamicCastObjCClass(a1);
    if (v19)
      return objc_msgSend(v19, "hasLightweightProfile") ^ 1;
    v21 = a1;
    MPModelObject.bestIdentifier(for:)(3, 2u);
    v23 = v22;

    if (v23)
    {
      swift_bridgeObjectRelease(v23);
      return 1;
    }
    return 0;
  }
  v4 = (void *)v3;
  v5 = a1;
  v6 = a1;
  if (objc_msgSend(v4, "isSubscribed")
    || objc_msgSend(v4, "isCuratorPlaylist")
    || objc_msgSend(v4, "isPublicPlaylist"))
  {
    goto LABEL_8;
  }
  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (!v7)
  {
    MPModelObject.bestIdentifier(for:)(1, 2u);
    v25 = v24;
    swift_bridgeObjectRelease(v24);
    if (v25)
    {
      if ((objc_msgSend(v4, "userEditableComponents") & 1) == 0)
      {
        v26 = objc_msgSend(v4, "type");

        return v26 == (id)9;
      }
      goto LABEL_8;
    }

    return 0;
  }
  swift_bridgeObjectRelease(v7);
LABEL_8:

  return 1;
}

void sub_10005BB80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;

  v0 = type metadata accessor for SharingController.SharingArtwork.CachingReference();
  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000021;
  *(_QWORD *)(v1 + 24) = 0x8000000100E2C330;
  v2 = (void *)objc_opt_self(MPArtworkCatalog);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v3, v1);

  qword_10119E2A0 = v1;
}

uint64_t Collaboration.ArtworkCachingReference.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

int64x2_t sub_10005BC44()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4072C00000000000uLL);
  xmmword_10124C6D0 = (__int128)result;
  return result;
}

uint64_t sub_10005BC5C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  NSString v10;
  uint64_t v11;

  if (result)
  {
    v9 = result;
    swift_retain(a2);
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(a5, "setCacheIdentifier:forCacheReference:", v10, a6);

    if (qword_10119B858 != -1)
      swift_once(&qword_10119B858, sub_10005BC44);
    objc_msgSend(a5, "setFittingSize:", xmmword_10124C6D0);
    objc_msgSend(a5, "setDestinationScale:", 0.0);
    v11 = swift_allocObject(&unk_1010AF3A8, 32, 7);
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = a2;
    swift_retain(a2);
    MPArtworkCatalog.requestImage(_:)((uint64_t)sub_1000652C4, v11);
    swift_release(v11);
    return sub_10004BA30(v9, a2);
  }
  return result;
}

void sub_10005BD70(void *a1, char a2, void (*a3)(Class, _QWORD))
{
  NSData *v5;
  Class isa;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;

  if ((a2 & 1) != 0)
  {
    v11 = a1;
    v10 = sub_100007E8C(&qword_1011A14B0);
    swift_willThrowTypedImpl(&v11, v10, &protocol self-conformance witness table for Error);
    a3(0, 0);
  }
  else
  {
    v5 = UIImagePNGRepresentation((UIImage *)a1);
    isa = (Class)v5;
    if (v5)
    {
      v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v9 = v8;

      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000652DC(v7, v9);
    }
    a3(isa, 0);
    swift_unknownObjectRelease(isa);
    sub_1000652D0(a1, 0);
  }
}

void sub_10005BE5C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v15;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *Strong;
  void *v34;
  id v35;
  id v36;
  id v37;
  char *v38;
  char *v39;
  id v40;
  Class isa;
  void *v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  char *v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 *v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned __int8 v63;
  BOOL v64;
  unint64_t v65;
  uint64_t v66;
  unsigned __int8 *v67;
  unsigned int v68;
  _QWORD *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  unsigned __int8 *v79;
  unsigned int v80;
  unsigned __int8 v81;
  unint64_t v82;
  uint64_t v83;
  unsigned __int8 *v84;
  unsigned int v85;
  char v86;
  id v87;
  unint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  id v91;
  int v93;
  _QWORD v96[5];
  uint64_t v97;
  void **aBlock;
  uint64_t v99;
  void (*v100)(uint64_t, void *, void *);
  void *v101;
  __C::_NSRange (__swiftcall *v102)(CFRange);
  uint64_t v103;
  _BYTE v104[48];

  v12 = a6;
  v15 = a10;
  v93 = a9 & 1;
  if (a2)
  {
    v18 = a2;
    v19 = sub_100063CE0(a1);
    v20 = objc_msgSend(v18, "effectiveStorePlatformDictionary");
    if (v20)
    {
      v21 = v20;
      v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    }
    else
    {
      v22 = 0;
    }
    sub_100064074(v22, 0, a3, a6, a7, v19, a1, a5, a10, a2, 1, a8, v93, a4);

    swift_bridgeObjectRelease(v22);
    return;
  }
  v23 = a1;
  v24 = sub_100063CE0(v23);
  objc_opt_self(MPModelPlaylist);
  v25 = swift_dynamicCastObjCClass(v23);
  if (v25)
  {
    v26 = (void *)v25;
    v27 = v10;
    v28 = a1;
    v91 = v23;
    if ((objc_msgSend(v26, "isSubscribed") & 1) != 0
      || (objc_msgSend(v26, "isCuratorPlaylist") & 1) != 0
      || (objc_msgSend(v26, "isPublicPlaylist") & 1) != 0)
    {
      goto LABEL_10;
    }
    MPModelObject.bestIdentifier(for:)(3, 2u);
    if (v29)
    {
      swift_bridgeObjectRelease(v29);
LABEL_10:
      if ((objc_msgSend(v26, "isPublicPlaylist") & 1) == 0)
      {
        v30 = a3;
        v31 = v12;
        v32 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryPlaylistEditChangeRequest), "init");
        Strong = (void *)swift_unknownObjectWeakLoadStrong(a4);
        v90 = a7;
        if (Strong)
        {
          v34 = Strong;
          v35 = objc_msgSend(Strong, "traitCollection");

          v36 = UITraitCollection.mediaLibrary.getter();
        }
        else
        {
          v36 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "defaultMediaLibrary");
        }
        objc_msgSend(v32, "setMediaLibrary:", v36);

        objc_msgSend(v32, "setPlaylist:", v26);
        sub_10004A07C(0, &qword_10119E4D0, NSNumber_ptr);
        isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
        objc_msgSend(v32, "setPublicPlaylist:", isa);

        v102 = _NSRange.init(_:);
        v103 = 0;
        aBlock = _NSConcreteStackBlock;
        v99 = 1107296256;
        v100 = sub_10050004C;
        v101 = &unk_1010AF280;
        v42 = _Block_copy(&aBlock);
        v102 = (__C::_NSRange (__swiftcall *)(CFRange))UIScreen.Dimensions.size.getter;
        v103 = 0;
        aBlock = _NSConcreteStackBlock;
        v99 = 1107296256;
        v100 = sub_10050004C;
        v101 = &unk_1010AF2A8;
        v43 = _Block_copy(&aBlock);
        v44 = objc_msgSend(v32, "newOperationWithLocalPersistenceResponseHandler:completeResponseHandler:", v42, v43);
        _Block_release(v43);
        _Block_release(v42);
        sub_100007E8C(&qword_10119E4D8);
        v45 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredQueue");
        objc_msgSend(v45, "addOperation:", v44);

        v12 = v31;
        a3 = v30;
        a7 = v90;
        v15 = a10;
      }
      v46 = objc_allocWithZone((Class)type metadata accessor for ModelObjectBackedStoreItemMetadata());
      v47 = v91;
      v48 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v26);
      v49 = v48;
      if (v48)
      {
        v50 = objc_msgSend(v48, "effectiveStorePlatformDictionary");

        if (v50)
        {
          v49 = (char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v50, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        }
        else
        {
          v49 = 0;
        }
      }
      sub_100064074((uint64_t)v49, 0, a3, v12, a7, v24, v47, a5, v15, a1, 0, a8, v93, a4);

      swift_bridgeObjectRelease(v49);
      return;
    }
    v89 = v12;
    MPModelObject.bestIdentifier(for:)(1, 2u);
    v52 = v51;
    swift_bridgeObjectRelease(v51);
    if (!v52
      || (objc_msgSend(v26, "userEditableComponents") & 1) == 0 && objc_msgSend(v26, "type") != (id)9)
    {
      goto LABEL_90;
    }
    v53 = MPModelObject.bestIdentifier(for:)(1, 2u);
    if (!v54)
      goto LABEL_90;
    v55 = v54;
    v56 = HIBYTE(v54) & 0xF;
    v57 = v53 & 0xFFFFFFFFFFFFLL;
    if ((v55 & 0x2000000000000000) != 0)
      v58 = v56;
    else
      v58 = v53 & 0xFFFFFFFFFFFFLL;
    if (!v58)
    {
      swift_bridgeObjectRelease(v55);
      goto LABEL_90;
    }
    if ((v55 & 0x1000000000000000) != 0)
    {
      v60 = sub_1001AF5F8(v53, v55, 10);
      v62 = v86;
      goto LABEL_67;
    }
    if ((v55 & 0x2000000000000000) == 0)
    {
      if ((v53 & 0x1000000000000000) != 0)
        v59 = (unsigned __int8 *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v59 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v53, v55);
      v60 = (unint64_t)sub_1001AF5D0(v59, v57, 10);
      v62 = v61 & 1;
LABEL_67:
      swift_bridgeObjectRelease(v55);
      if ((v62 & 1) == 0)
      {
        v88 = v60;
        v69 = a7;
        v87 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
        if (v87)
        {
          sub_10004A160(a5, (uint64_t)v104, (uint64_t *)&unk_10119E450);
          sub_100064AC8(a4, (uint64_t)&aBlock);
          v70 = swift_allocObject(&unk_1010AF240, 224, 7);
          *(_QWORD *)(v70 + 16) = v27;
          *(_QWORD *)(v70 + 24) = v26;
          *(_QWORD *)(v70 + 32) = a3;
          *(_QWORD *)(v70 + 40) = v89;
          *(_QWORD *)(v70 + 48) = v69;
          *(_QWORD *)(v70 + 56) = v24;
          *(_QWORD *)(v70 + 64) = v91;
          sub_100065228((uint64_t)v104, v70 + 72, (uint64_t *)&unk_10119E450);
          *(_QWORD *)(v70 + 112) = a10;
          *(_QWORD *)(v70 + 120) = a1;
          *(_BYTE *)(v70 + 128) = 0;
          *(_QWORD *)(v70 + 136) = a8;
          *(_BYTE *)(v70 + 144) = v93 != 0;
          sub_100064EF0((uint64_t)&aBlock, v70 + 152);
          v96[4] = sub_100064F2C;
          v97 = v70;
          v96[0] = _NSConcreteStackBlock;
          v96[1] = 1107296256;
          v96[2] = sub_10005D07C;
          v96[3] = &unk_1010AF258;
          v71 = _Block_copy(v96);
          v72 = v97;
          v73 = a1;
          v74 = v91;
          v75 = a1;
          swift_bridgeObjectRetain();
          v76 = a3;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v77 = v24;
          objc_msgSend(v87, "publishPlaylistWithSagaID:completionHandler:", v88, v71, swift_release(v72).n128_f64[0]);

          _Block_release(v71);
          return;
        }
        goto LABEL_95;
      }
LABEL_90:
      sub_100064074(0, 0, a3, v89, a7, v24, v91, a5, a10, a1, 0, a8, v93, a4);

      return;
    }
    aBlock = (void **)v53;
    v99 = v55 & 0xFFFFFFFFFFFFFFLL;
    if (v53 == 43)
    {
      if (v56)
      {
        if (v56 != 1 && (BYTE1(v53) - 48) <= 9u)
        {
          v60 = (BYTE1(v53) - 48);
          if (v56 == 2)
            goto LABEL_66;
          if ((BYTE2(v53) - 48) <= 9u)
          {
            v60 = 10 * (BYTE1(v53) - 48) + (BYTE2(v53) - 48);
            v66 = v56 - 3;
            if (v66)
            {
              v67 = (unsigned __int8 *)&aBlock + 3;
              while (1)
              {
                v68 = *v67 - 48;
                if (v68 > 9)
                  goto LABEL_63;
                if (!is_mul_ok(v60, 0xAuLL))
                  goto LABEL_63;
                v64 = __CFADD__(10 * v60, v68);
                v60 = 10 * v60 + v68;
                if (v64)
                  goto LABEL_63;
                v62 = 0;
                ++v67;
                if (!--v66)
                  goto LABEL_67;
              }
            }
            goto LABEL_66;
          }
        }
        goto LABEL_63;
      }
    }
    else
    {
      if (v53 != 45)
      {
        if (v56 && (v53 - 48) <= 9u)
        {
          v60 = (v53 - 48);
          if (v56 == 1)
            goto LABEL_66;
          if ((BYTE1(v53) - 48) <= 9u)
          {
            v60 = 10 * (v53 - 48) + (BYTE1(v53) - 48);
            v78 = v56 - 2;
            if (v78)
            {
              v79 = (unsigned __int8 *)&aBlock + 2;
              while (1)
              {
                v80 = *v79 - 48;
                if (v80 > 9)
                  goto LABEL_63;
                if (!is_mul_ok(v60, 0xAuLL))
                  goto LABEL_63;
                v64 = __CFADD__(10 * v60, v80);
                v60 = 10 * v60 + v80;
                if (v64)
                  goto LABEL_63;
                v62 = 0;
                ++v79;
                if (!--v78)
                  goto LABEL_67;
              }
            }
            goto LABEL_66;
          }
        }
LABEL_63:
        v60 = 0;
LABEL_64:
        v62 = 1;
        goto LABEL_67;
      }
      if (v56)
      {
        if (v56 != 1)
        {
          v63 = BYTE1(v53) - 48;
          if ((BYTE1(v53) - 48) <= 9u)
          {
            v60 = 0;
            v64 = v63 == 0;
            v65 = -(uint64_t)v63;
            if (!v64)
              goto LABEL_64;
            if (v56 == 2)
            {
              v62 = 0;
              v60 = v65;
              goto LABEL_67;
            }
            v81 = BYTE2(v53) - 48;
            if ((BYTE2(v53) - 48) <= 9u && is_mul_ok(v65, 0xAuLL))
            {
              v82 = 10 * v65;
              v60 = v82 - v81;
              if (v82 >= v81)
              {
                v83 = v56 - 3;
                if (v83)
                {
                  v84 = (unsigned __int8 *)&aBlock + 3;
                  while (1)
                  {
                    v85 = *v84 - 48;
                    if (v85 > 9)
                      goto LABEL_63;
                    if (!is_mul_ok(v60, 0xAuLL))
                      goto LABEL_63;
                    v64 = 10 * v60 >= v85;
                    v60 = 10 * v60 - v85;
                    if (!v64)
                      goto LABEL_63;
                    v62 = 0;
                    ++v84;
                    if (!--v83)
                      goto LABEL_67;
                  }
                }
LABEL_66:
                v62 = 0;
                goto LABEL_67;
              }
            }
          }
        }
        goto LABEL_63;
      }
      __break(1u);
    }
    __break(1u);
LABEL_95:
    __break(1u);
    return;
  }
  objc_allocWithZone((Class)type metadata accessor for ModelObjectBackedStoreItemMetadata());
  v37 = v23;
  v38 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v37);
  v39 = v38;
  if (v38)
  {
    v40 = objc_msgSend(v38, "effectiveStorePlatformDictionary");

    if (v40)
    {
      v39 = (char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v40, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    }
    else
    {
      v39 = 0;
    }
  }
  sub_100064074((uint64_t)v39, 0, a3, v12, a7, v24, v37, a5, a10, a1, 0, a8, v93, a4);

  swift_bridgeObjectRelease(v39);
}

void sub_10005C980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, void *a15, char a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t ObjectType;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  Class isa;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  _QWORD aBlock[5];
  uint64_t v44;
  _QWORD v45[9];
  _QWORD v46[18];

  if (!a5)
  {
    v46[16] = v19;
    v46[17] = v20;
    v24 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryRequest), "init");
    sub_10004A07C(0, (unint64_t *)&unk_10119E4E0, MPModelPlaylistEntry_ptr);
    v42 = static MPModelPlaylistEntry.defaultMusicKind.getter();
    v25 = (void *)objc_opt_self(MPModelPlaylist);
    v26 = v24;
    v27 = objc_msgSend(v25, "kindWithPlaylistEntryKind:options:", v42, 0);
    objc_msgSend(v26, "setItemKind:", v27);

    ObjectType = swift_getObjectType();
    v29 = v26;
    v30 = sub_100060810(ObjectType);
    objc_msgSend(v29, "setItemProperties:", v30);

    v31 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v32 = swift_allocObject(v31, 40, 7);
    *(_OWORD *)(v32 + 16) = xmmword_100EA7A90;
    v33 = objc_msgSend(a7, "identifiers");
    *(_QWORD *)(v32 + 32) = v33;
    v45[0] = v32;
    specialized Array._endMutation()(v33);
    sub_10004A07C(0, (unint64_t *)&qword_10119E4F0, MPIdentifierSet_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v32);
    objc_msgSend(v29, "setAllowedItemIdentifiers:", isa);

    sub_10004A160(a13, (uint64_t)v46, (uint64_t *)&unk_10119E450);
    sub_100064AC8(a19, (uint64_t)v45);
    v35 = swift_allocObject(&unk_1010AF2E0, 216, 7);
    *(_QWORD *)(v35 + 16) = a8;
    *(_QWORD *)(v35 + 24) = a9;
    *(_QWORD *)(v35 + 32) = a10;
    *(_QWORD *)(v35 + 40) = a11;
    *(_QWORD *)(v35 + 48) = a12;
    sub_100065228((uint64_t)v46, v35 + 56, (uint64_t *)&unk_10119E450);
    *(_QWORD *)(v35 + 96) = a14;
    *(_QWORD *)(v35 + 104) = a6;
    *(_QWORD *)(v35 + 112) = a15;
    *(_BYTE *)(v35 + 120) = a16 & 1;
    *(_QWORD *)(v35 + 128) = a17;
    *(_BYTE *)(v35 + 136) = a18 & 1;
    sub_100064EF0((uint64_t)v45, v35 + 144);
    aBlock[4] = sub_10006502C;
    v44 = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004E2F4;
    aBlock[3] = &unk_1010AF2F8;
    v36 = _Block_copy(aBlock);
    v37 = v44;
    swift_bridgeObjectRetain();
    v38 = a8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = a11;
    v40 = a12;
    v41 = a15;
    objc_msgSend(v29, "performWithResponseHandler:", v36, swift_release(v37).n128_f64[0]);
    _Block_release(v36);

  }
}

double sub_10005CCCC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, char a12, uint64_t a13, char a14, uint64_t a15)
{
  id v21;
  double result;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  _BYTE v33[72];
  _BYTE v34[48];

  if (!a2)
  {
    if (a1)
    {
      v21 = objc_msgSend(a1, "results");
      if (v21)
      {
        v23 = v21;
        v24 = objc_msgSend(v21, "firstItem");

        if (v24)
        {
          objc_opt_self(MPModelPlaylist);
          v25 = swift_dynamicCastObjCClass(v24);
          if (v25)
          {
            v26 = v25;
            sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
            sub_10004A160(a8, (uint64_t)v34, (uint64_t *)&unk_10119E450);
            sub_100064AC8(a15, (uint64_t)v33);
            v27 = swift_allocObject(&unk_1010AF330, 224, 7);
            *(_QWORD *)(v27 + 16) = v26;
            *(_QWORD *)(v27 + 24) = a3;
            *(_QWORD *)(v27 + 32) = a4;
            *(_QWORD *)(v27 + 40) = a5;
            *(_QWORD *)(v27 + 48) = a6;
            *(_QWORD *)(v27 + 56) = a7;
            sub_100065228((uint64_t)v34, v27 + 64, (uint64_t *)&unk_10119E450);
            *(_QWORD *)(v27 + 104) = a9;
            *(_QWORD *)(v27 + 112) = a10;
            *(_QWORD *)(v27 + 120) = a11;
            *(_BYTE *)(v27 + 128) = a12 & 1;
            *(_QWORD *)(v27 + 136) = a13;
            *(_BYTE *)(v27 + 144) = a14 & 1;
            sub_100064EF0((uint64_t)v33, v27 + 152);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain(v24, v28);
            v29 = a3;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v30 = a6;
            v31 = a7;
            v32 = a11;
            static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_10006512C, v27);
            swift_release(v27);
            *(_QWORD *)&result = swift_unknownObjectRelease(v24).n128_u64[0];
          }
          else
          {
            *(_QWORD *)&result = swift_unknownObjectRelease(v24).n128_u64[0];
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10005CEE8(void *a1, void *a2, uint64_t a3, _QWORD *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, char a11, uint64_t a12, char a13, uint64_t a14)
{
  id v18;
  id v19;
  char *v20;
  char *v21;
  id v22;
  uint64_t v23;
  char v24;

  v18 = objc_allocWithZone((Class)type metadata accessor for ModelObjectBackedStoreItemMetadata());
  v19 = a1;
  v20 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v19);
  v21 = v20;
  if (v20)
  {
    v22 = objc_msgSend(v20, "effectiveStorePlatformDictionary");

    if (v22)
    {
      v21 = (char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v22, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    }
    else
    {
      v21 = 0;
    }
  }
  if ((objc_msgSend(v19, "isSubscribed") & 1) == 0
    && !objc_msgSend(v19, "isCuratorPlaylist")
    && (objc_msgSend(v19, "isPublicPlaylist") & 1) == 0)
  {
    MPModelObject.bestIdentifier(for:)(3, 2u);
    if (!v23)
    {
      v24 = 1;
      goto LABEL_11;
    }
    swift_bridgeObjectRelease(v23);
  }
  v24 = 0;
LABEL_11:
  sub_100064074((uint64_t)v21, v24, a2, a3, a4, a5, a6, a7, a8, a10, a11 & 1, a12, a13 & 1, a14);
  return swift_bridgeObjectRelease(v21);
}

uint64_t sub_10005D07C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, void *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v5 = a3;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (!a2)
  {
    v8 = 0;
    v10 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v10 = v9;
  if (!v5)
    goto LABEL_5;
LABEL_3:
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v5 = v12;
LABEL_6:
  swift_retain(v6);
  v13 = a4;
  v7(v8, v10, v11, v5, a4);
  swift_release(v6);

  swift_bridgeObjectRelease(v5);
  return swift_bridgeObjectRelease(v10);
}

id sub_10005D134@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  int v6;
  id v7;
  id result;
  _BYTE v9[72];
  _QWORD v10[5];

  v6 = *a1;
  sub_100064C78(a2, (uint64_t)v10);
  sub_100064AC8(a3, (uint64_t)v9);
  v7 = objc_allocWithZone((Class)type metadata accessor for ShareModelStoryActivity());
  result = sub_10055EADC(v6, v10, (uint64_t)v9);
  *a4 = result;
  return result;
}

double sub_10005D1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;

  v23 = a3;
  v5 = type metadata accessor for Song(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  type metadata accessor for MainActor(0);
  v13 = swift_retain(a2);
  v14 = static MainActor.shared.getter(v13);
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (v7 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_1010AF218, v18 + 8, v15 | 7);
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v19 + v16, v8, v5);
  *(_QWORD *)(v19 + v17) = a2;
  *(_QWORD *)(v19 + v18) = v23;
  v20 = sub_100166D14((uint64_t)v11, (uint64_t)&unk_10119E4C8, v19);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_10005D33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v5[23] = a4;
  v5[24] = a5;
  v6 = type metadata accessor for Song(0);
  v5[25] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[26] = v7;
  v5[27] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[28] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_10005D3D0, v10, v11);
}

uint64_t sub_10005D3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 224));
  v5 += 16;
  swift_beginAccess(v5, v0 + 160, 0, 0);
  sub_100064AC8(v5, v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  sub_100064AC8(v0 + 16, v0 + 88);
  v6 = objc_allocWithZone((Class)type metadata accessor for LyricsSharingActivityViewController(0));
  v7 = sub_1001555BC(v1, 0, 0, v0 + 88, 1);
  sub_10006425C(v7, v0 + 16);

  sub_100064B4C(v0 + 16);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005D4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  NSString *v18;
  objc_class *v19;
  id v20;
  char *v21;
  double v22;
  void *Strong;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  __n128 v30;
  _BYTE v32[24];
  _OWORD v33[2];
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[32];
  uint64_t v42;
  char v43;
  uint64_t v44[8];

  v10 = a2 + 16;
  v11 = a3 + 16;
  v12 = a5 + 16;
  swift_beginAccess(a1 + 16, v40, 0, 0);
  v13 = *(_QWORD *)(a1 + 16);
  swift_beginAccess(v10, v39, 0, 0);
  v14 = *(_QWORD **)(a2 + 16);
  swift_beginAccess(v11, v38, 0, 0);
  v15 = *(void **)(a3 + 16);
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  if (a4)
  {
    v16 = _swiftEmptyArrayStorage;
  }
  else
  {
    v17 = sub_100007E8C(&qword_10119E428);
    v16 = (_QWORD *)swift_allocObject(v17, 40, 7);
    *((_OWORD *)v16 + 1) = xmmword_100EA7AA0;
    v16[4] = UIActivityTypeSharePlay;
    v18 = UIActivityTypeSharePlay;
  }
  v19 = (objc_class *)type metadata accessor for ActivityViewController();
  memset(v44, 0, 56);
  objc_allocWithZone(v19);
  v20 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = sub_10005D81C(v44, v13, v14, v15, 0, (uint64_t)v33, (uint64_t)v16, 0, 0, 0, 0);
  objc_msgSend(v21, "setSharingStyle:", 0);
  *(_QWORD *)&v22 = swift_beginAccess(v12, v37, 0, 0).n128_u64[0];
  if (*(unsigned __int8 *)(a5 + 64) == 255)
  {
    objc_msgSend(v21, "setAllowsCustomPresentationStyle:", 1, v22);
    objc_msgSend(v21, "setModalPresentationStyle:", 2);
  }
  swift_beginAccess(v12, v36, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v12);
  if (Strong)
  {
    v24 = Strong;
    v25 = objc_msgSend(Strong, "traitCollection");
    v26 = objc_msgSend(v25, "userInterfaceIdiom");

    if (v26 == (id)6)
    {
      v27 = objc_msgSend(v24, "popoverPresentationController");

      if (v27)
      {
        v28 = objc_msgSend(v24, "presentingViewController");
        if (v28)
        {
          memset(v41, 0, sizeof(v41));
          v42 = 0;
          v43 = -1;
          v29 = v28;
          PresentationSource.init(viewController:position:)(v29, (uint64_t)v41, (uint64_t)v33);
          v30 = swift_beginAccess(v12, v32, 1, 0);
          sub_100064E08((uint64_t)v33, v12, v30);
          objc_msgSend(v24, "dismissViewControllerAnimated:completion:", 1, 0);

          v24 = v29;
        }
      }
    }

  }
  swift_beginAccess(v12, v35, 0, 0);
  sub_100064AC8(v12, (uint64_t)v33);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v21, 1, (id)0xF, (void **)1, 0, 0);

  return sub_100064B4C((uint64_t)v33);
}

uint64_t BackgroundFetchManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for SharingController()
{
  return objc_opt_self(_TtC5Music17SharingController);
}

uint64_t type metadata accessor for SharingController.SharingArtwork.CachingReference()
{
  return objc_opt_self(_TtCVC5Music17SharingControllerP33_C956E7DB052EEC9D418EE24A38C1E82F14SharingArtwork16CachingReference);
}

char *sub_10005D81C(uint64_t *a1, uint64_t a2, _QWORD *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString *v17;
  NSString *v18;
  NSString *v19;
  NSString *v20;
  NSString *v21;
  NSString *v22;
  NSString *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *v27;
  char *v28;
  char *v29;
  id v30;
  uint64_t v31;
  objc_class *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  char *v40;
  NSArray v41;
  uint64_t v42;
  NSArray v43;
  char *v44;
  uint64_t v45;
  char *result;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  char **v50;
  NSString *v51;
  NSString *v52;
  NSString *v53;
  NSString *v54;
  NSString *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  Swift::String v59;
  Swift::Int v60;
  NSString *v61;
  NSString *v62;
  _QWORD *v63;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  Class isa;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  char v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  char *v97;
  id v98;
  void *v99;
  void *v100;
  uint64_t v104;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v111;
  __int128 aBlock;
  uint64_t (*v113)(uint64_t, void *, uint64_t, uint64_t, void *);
  void *v114;
  uint64_t (*v115)(uint64_t, char, uint64_t, uint64_t);
  uint64_t v116;
  __int128 v117[2];
  _QWORD v118[5];
  char v119[24];
  uint64_t v120;
  objc_super v121;
  objc_super v122;
  uint64_t v123;

  v100 = a5;
  v13 = OBJC_IVAR____TtC5Music22ActivityViewController_defaultExcludedActivityTypes;
  v14 = sub_100007E8C(&qword_10119E428);
  v15 = swift_allocObject(v14, 88, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v15 + 32) = UIActivityTypePrint;
  *(_QWORD *)(v15 + 40) = UIActivityTypeAssignToContact;
  *(_QWORD *)(v15 + 48) = UIActivityTypeSaveToCameraRoll;
  *(_QWORD *)(v15 + 56) = UIActivityTypeAddToReadingList;
  *(_QWORD *)(v15 + 64) = UIActivityTypePostToFlickr;
  *(_QWORD *)(v15 + 72) = UIActivityTypePostToVimeo;
  *(_QWORD *)(v15 + 80) = UIActivityTypeOpenInIBooks;
  *(_QWORD *)&v11[v13] = v15;
  v16 = type metadata accessor for JSShareRequestCoordinator();
  swift_allocObject(v16, 32, 7);
  v108 = v11;
  v17 = UIActivityTypePrint;
  v18 = UIActivityTypeAssignToContact;
  v19 = UIActivityTypeSaveToCameraRoll;
  v20 = UIActivityTypeAddToReadingList;
  v21 = UIActivityTypePostToFlickr;
  v22 = UIActivityTypePostToVimeo;
  v23 = UIActivityTypeOpenInIBooks;
  v24 = JSShareRequestCoordinator.init()();
  v25 = sub_100007E8C(&qword_10119E430);
  v26 = swift_allocObject(v25, 96, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100EA7A80;
  v27 = (objc_class *)type metadata accessor for ShareURLActivityItemProvider(0);
  v28 = (char *)objc_allocWithZone(v27);
  v29 = &v28[qword_1011C2120];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  swift_retain(v24);
  sub_100064950(a1);
  v30 = a4;
  v31 = sub_10005E7A0((uint64_t)a1, v24, a4);
  *(_QWORD *)(v26 + 56) = v27;
  *(_QWORD *)(v26 + 32) = v31;
  v32 = (objc_class *)type metadata accessor for ShareLinkPresentationItemProvider(0);
  v33 = (char *)objc_allocWithZone(v32);
  v34 = qword_1011C2098;
  *(_QWORD *)&v33[qword_1011C2098] = 0;
  *(_QWORD *)&v33[qword_1011C2088] = v24;
  sub_100065228((uint64_t)a1, (uint64_t)&v33[qword_1011C2090], &qword_10119E438);
  v35 = *(void **)&v33[v34];
  *(_QWORD *)&v33[v34] = a4;
  swift_retain_n(v24, 2);
  v36 = v30;

  sub_10004A07C(0, &qword_10119E440, LPLinkMetadata_ptr);
  v37 = sub_100256B54();
  v122.receiver = v33;
  v122.super_class = (Class)sub_100007E8C(&qword_10119E448);
  v38 = objc_msgSendSuper2(&v122, "initWithPlaceholderItem:", v37);

  v104 = v24;
  swift_release(v24);
  v98 = v36;

  *(_QWORD *)(v26 + 88) = v32;
  *(_QWORD *)(v26 + 64) = v38;
  v123 = v26;
  if (a3)
  {
    sub_100804B30(a3);
    v26 = v123;
  }
  v39 = &v108[OBJC_IVAR____TtC5Music22ActivityViewController_recipientEmail];
  *(_QWORD *)v39 = a8;
  *((_QWORD *)v39 + 1) = a9;
  v40 = &v108[OBJC_IVAR____TtC5Music22ActivityViewController_recipientPhoneNumber];
  *(_QWORD *)v40 = a10;
  *((_QWORD *)v40 + 1) = a11;

  swift_bridgeObjectRetain();
  v41.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v26);
  v42 = a2;
  if (a2)
  {
    sub_10004A07C(0, (unint64_t *)&unk_1011A30B0, UIActivity_ptr);
    swift_bridgeObjectRetain();
    v43.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v43.super.isa = 0;
    v42 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v121.receiver = v108;
  v121.super_class = (Class)type metadata accessor for ActivityViewController();
  v44 = (char *)objc_msgSendSuper2(&v121, "initWithActivityItems:applicationActivities:", v41.super.isa, v43.super.isa);

  v106 = v26;
  v107 = v44;
  if ((unint64_t)v42 >> 62)
  {
    if (v42 < 0)
      v67 = v42;
    else
      v67 = v42 & 0xFFFFFFFFFFFFFF8;
    v68 = v44;
    swift_bridgeObjectRetain();
    v45 = _CocoaArrayWrapper.endIndex.getter(v67);
    result = (char *)swift_bridgeObjectRelease(v42);
    if (v45)
    {
LABEL_8:
      if (v45 >= 1)
      {
        v47 = 0;
        v48 = &v107[OBJC_IVAR____TtC5Music22ActivityViewController_defaultExcludedActivityTypes];
        v49 = v42 & 0xC000000000000001;
        v50 = &selRef_setMetricsOverlay_;
        v111 = v42;
        while (1)
        {
          if (v49)
            v52 = (NSString *)specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v42);
          else
            v52 = (NSString *)*(id *)(v42 + 8 * v47 + 32);
          v53 = v52;
          v54 = (NSString *)objc_msgSend(v52, v50[36], v98, v100);
          if (!v54)
            goto LABEL_12;
          v55 = v54;
          v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
          v58 = v57;
          v59._countAndFlagsBits = v56;
          v59._object = v58;
          v60 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010A9E08, v59);
          swift_bridgeObjectRelease(v58);
          if (!v60)
            break;
          if (v60 == 1)
          {
            v61 = UIActivityTypePostToFacebook;
            goto LABEL_22;
          }
          if (v60 == 2)
            break;
          v51 = v55;
LABEL_11:

LABEL_12:
          ++v47;

          if (v45 == v47)
            goto LABEL_31;
        }
        v61 = (NSString *)String._bridgeToObjectiveC()();
LABEL_22:
        v62 = v61;
        swift_beginAccess(v48, &aBlock, 33, 0);
        v63 = *(_QWORD **)v48;
        v51 = v62;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v63);
        *(_QWORD *)v48 = v63;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v63 = sub_10043158C(0, v63[2] + 1, 1, v63);
          *(_QWORD *)v48 = v63;
        }
        v66 = v63[2];
        v65 = v63[3];
        if (v66 >= v65 >> 1)
        {
          v63 = sub_10043158C((_QWORD *)(v65 > 1), v66 + 1, 1, v63);
          *(_QWORD *)v48 = v63;
        }
        v63[2] = v66 + 1;
        v63[v66 + 4] = v51;
        swift_endAccess(&aBlock);

        v53 = v55;
        v42 = v111;
        v50 = &selRef_setMetricsOverlay_;
        goto LABEL_11;
      }
      goto LABEL_57;
    }
  }
  else
  {
    v45 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = v44;
    if (v45)
      goto LABEL_8;
  }
LABEL_31:
  swift_bridgeObjectRelease(v42);
  v69 = &v107[OBJC_IVAR____TtC5Music22ActivityViewController_defaultExcludedActivityTypes];
  swift_beginAccess(&v107[OBJC_IVAR____TtC5Music22ActivityViewController_defaultExcludedActivityTypes], v119, 0, 0);
  v70 = *(_QWORD *)v69;
  v120 = *(_QWORD *)v69;
  swift_bridgeObjectRetain();
  if (a7)
  {
    sub_100804C9C(a7);
    v70 = v120;
  }
  type metadata accessor for ActivityType(0);
  v71 = v107;
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v70);
  objc_msgSend(v71, "setExcludedActivityTypes:", isa);

  v73 = *(_QWORD *)(v70 + 16);
  if (!v73)
  {
    v81 = v71;
LABEL_51:
    swift_bridgeObjectRelease(v106);
    swift_bridgeObjectRelease(v70);
    v84 = 1;
    goto LABEL_52;
  }
  v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v70 + 32));
  v76 = v75;
  v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityTypeSharePlay);
  v79 = v77;
  if (v74 == v78 && v76 == v77)
  {
    swift_bridgeObjectRetain_n(v70, 2);
    v80 = v71;
LABEL_37:
    swift_bridgeObjectRelease_n(v76, 2);
    goto LABEL_40;
  }
  v82 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v76, v78, v77, 0);
  swift_bridgeObjectRetain_n(v70, 2);
  v83 = v71;
  swift_bridgeObjectRelease(v76);
  result = (char *)swift_bridgeObjectRelease(v79);
  if ((v82 & 1) == 0)
  {
    if (v73 != 1)
    {
      v85 = 5;
      while (1)
      {
        v86 = v85 - 3;
        if (__OFADD__(v85 - 4, 1))
          break;
        v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v70 + 8 * v85));
        v76 = v88;
        v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityTypeSharePlay);
        if (v87 == v89 && v76 == v90)
          goto LABEL_37;
        v92 = v90;
        v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v87, v76, v89, v90, 0);
        swift_bridgeObjectRelease(v76);
        result = (char *)swift_bridgeObjectRelease(v92);
        if ((v93 & 1) != 0)
          goto LABEL_40;
        ++v85;
        if (v86 == v73)
          goto LABEL_50;
      }
      __break(1u);
LABEL_57:
      __break(1u);
      return result;
    }
LABEL_50:
    swift_bridgeObjectRelease_n(v70, 2);
    goto LABEL_51;
  }
LABEL_40:
  swift_bridgeObjectRelease(v106);
  swift_bridgeObjectRelease_n(v70, 3);
  v84 = 0;
LABEL_52:
  objc_msgSend(v71, "setAllowsProminentActivity:", v84, v98);

  sub_10004A160(a6, (uint64_t)&aBlock, (uint64_t *)&unk_10119E450);
  if (v114)
  {
    sub_100064C48(&aBlock, (uint64_t)v118);
    sub_100064C78((uint64_t)v118, (uint64_t)v117);
    v94 = swift_allocObject(&unk_1010AF100, 56, 7);
    sub_100064C48(v117, v94 + 16);
    v115 = sub_1000649F8;
    v116 = v94;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v113 = sub_10005E200;
    v114 = &unk_1010AF118;
    v95 = _Block_copy(&aBlock);
    v96 = v116;
    v97 = v71;
    objc_msgSend(v97, "setCompletionWithItemsHandler:", v95, swift_release(v96).n128_f64[0]);

    _Block_release(v95);
    swift_release(v104);

    sub_10004FF60(a6, (uint64_t *)&unk_10119E450);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v118);
  }
  else
  {

    swift_release(v104);
    sub_10004FF60(a6, (uint64_t *)&unk_10119E450);
    sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_10119E450);
  }
  return v71;
}

uint64_t sub_10005E14C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = type metadata accessor for Metrics.Event.Action(0);
  result = __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v11 = a5[3];
    v12 = a5[4];
    sub_100007E68(a5, v11);
    swift_storeEnumTagMultiPayload(v10, v7, 41);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 8))(v10, v11, v12);
    return sub_100064A18((uint64_t)v10);
  }
  return result;
}

uint64_t sub_10005E200(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t, void *);
  uint64_t v10;
  id v11;
  id v12;

  v9 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  if (a4)
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, (char *)&type metadata for Any + 8);
  else
    v10 = 0;
  swift_retain(v8);
  v11 = a2;
  v12 = a5;
  v9(a2, a3, v10, a5);
  swift_release(v8);

  return swift_bridgeObjectRelease(v10);
}

void sub_10005E360(id a1)
{
  char *v1;
  char *v2;
  _QWORD *v3;
  NSString *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Class isa;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  char v13[24];

  if (objc_msgSend(v1, "sharingStyle") != a1)
  {
    v2 = &v1[OBJC_IVAR____TtC5Music22ActivityViewController_defaultExcludedActivityTypes];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Music22ActivityViewController_defaultExcludedActivityTypes], v13, 0, 0);
    v3 = *(_QWORD **)v2;
    swift_bridgeObjectRetain();
    if (objc_msgSend(v1, "sharingStyle") == (id)2)
    {
      v4 = UIActivityTypeCopyToPasteboard;
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_10043158C(0, v3[2] + 1, 1, v3);
      v5 = v3[2];
      v6 = v3[3];
      v7 = v5 + 1;
      if (v5 >= v6 >> 1)
      {
        v12 = v5 + 1;
        v9 = v3;
        v10 = v3[2];
        v11 = sub_10043158C((_QWORD *)(v6 > 1), v5 + 1, 1, v9);
        v5 = v10;
        v7 = v12;
        v3 = v11;
      }
      v3[2] = v7;
      v3[v5 + 4] = v4;
    }
    type metadata accessor for ActivityType(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v3);
    objc_msgSend(v1, "setExcludedActivityTypes:", isa);

  }
}

void sub_10005E4A8(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSArray v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  objc_super v22;

  v22.receiver = v1;
  v22.super_class = (Class)type metadata accessor for ActivityViewController();
  objc_msgSendSuper2(&v22, "_prepareActivity:", a1);
  objc_opt_self(UIMessageActivity);
  v3 = swift_dynamicCastObjCClass(a1);
  if (v3)
  {
    v4 = &v1[OBJC_IVAR____TtC5Music22ActivityViewController_recipientPhoneNumber];
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music22ActivityViewController_recipientPhoneNumber + 8];
    if (!v5)
      return;
    v6 = (void *)v3;
    v7 = *(_QWORD *)v4;
    v8 = a1;
    swift_bridgeObjectRetain();
    v9 = objc_msgSend(v6, "messageComposeViewController");
    if (v9)
    {
      v10 = v9;
      v11 = sub_100007E8C((uint64_t *)&unk_1011A6110);
      v12 = swift_allocObject(v11, 48, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v5;
      v13.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v12);
      objc_msgSend(v10, "setRecipients:", v13.super.isa);
LABEL_9:

LABEL_11:
      return;
    }
    goto LABEL_10;
  }
  objc_opt_self(UIMailActivity);
  v14 = swift_dynamicCastObjCClass(a1);
  if (v14)
  {
    v15 = &v1[OBJC_IVAR____TtC5Music22ActivityViewController_recipientEmail];
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music22ActivityViewController_recipientEmail + 8];
    if (v5)
    {
      v16 = (void *)v14;
      v17 = *(_QWORD *)v15;
      v18 = a1;
      swift_bridgeObjectRetain();
      v19 = objc_msgSend(v16, "mailComposeViewController");
      if (v19)
      {
        v10 = v19;
        v20 = sub_100007E8C((uint64_t *)&unk_1011A6110);
        v21 = swift_allocObject(v20, 48, 7);
        *(_OWORD *)(v21 + 16) = xmmword_100EA7AA0;
        *(_QWORD *)(v21 + 32) = v17;
        *(_QWORD *)(v21 + 40) = v5;
        v13.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v21);
        objc_msgSend(v10, "setToRecipients:", v13.super.isa);
        goto LABEL_9;
      }
LABEL_10:
      swift_bridgeObjectRelease(v5);
      goto LABEL_11;
    }
  }
}

id sub_10005E700()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivityViewController()
{
  return objc_opt_self(_TtC5Music22ActivityViewController);
}

uint64_t sub_10005E7A0(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  objc_class *v22;
  id v23;
  objc_super v24;

  v7 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v24 - v15;
  v17 = qword_1011C2098;
  *(_QWORD *)&v3[qword_1011C2098] = 0;
  *(_QWORD *)&v3[qword_1011C2088] = a2;
  sub_100065228(a1, (uint64_t)&v3[qword_1011C2090], &qword_10119E438);
  v18 = *(void **)&v3[v17];
  *(_QWORD *)&v3[v17] = a3;
  swift_retain(a2);
  v19 = a3;

  URL.init(string:)(0xD000000000000014, 0x8000000100E2C230);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    v21 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v14, v10);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v22 = (objc_class *)sub_100007E8C(&qword_10119E468);
    v24.receiver = v3;
    v24.super_class = v22;
    v23 = objc_msgSendSuper2(&v24, "initWithPlaceholderItem:", v21);
    swift_unknownObjectRelease(v21);
    swift_release(a2);

    return (uint64_t)v23;
  }
  return result;
}

uint64_t sub_10005E990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;

  v6[84] = a6;
  v6[83] = a5;
  v6[82] = a4;
  v6[81] = a3;
  v6[80] = a2;
  v9 = type metadata accessor for Locale(0);
  v6[85] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v6[86] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v6[87] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[88] = v12;
  v6[89] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[90] = swift_task_alloc(v13);
  v6[91] = swift_task_alloc(v13);
  v6[92] = swift_task_alloc(v13);
  v6[93] = swift_task_alloc(v13);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[94] = swift_task_alloc(v14);
  v6[95] = swift_task_alloc(v14);
  v6[96] = swift_task_alloc(v14);
  v6[97] = swift_task_alloc(v14);
  v15 = type metadata accessor for Playlist(0);
  v6[98] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v6[99] = v16;
  v6[100] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_10119E480);
  v6[101] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Song(0);
  v6[102] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[103] = v19;
  v20 = *(_QWORD *)(v19 + 64);
  v6[104] = v20;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[105] = swift_task_alloc(v21);
  v6[106] = swift_task_alloc(v21);
  v6[59] = a5;
  v6[60] = a6;
  v6[107] = sub_100049F68(v6 + 56);
  (*(void (**)(void))(*(_QWORD *)(a5 - 8) + 16))();
  v22 = type metadata accessor for MainActor(0);
  v6[108] = static MainActor.shared.getter(v23);
  v24 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
  v6[109] = v24;
  v6[110] = v25;
  return swift_task_switch(sub_10005EBDC, v24, v25);
}

uint64_t sub_10005EBDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;
  id v36;
  id v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  void *v60;
  id v61;
  char *v62;
  void *v63;
  id v64;
  double (**v65)();
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  char v90;
  char v91;
  _QWORD *v92;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  id v99;
  _QWORD *v100;
  uint64_t v101;
  double v102;
  void *v103;
  id v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  NSString v132;
  id v133;
  uint64_t v134;
  NSString v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  objc_class *v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  objc_super *v167;
  objc_super *v168;
  objc_super *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  int *v176;
  uint64_t v177[3];

  v175 = (_QWORD *)(v0 + 448);
  v1 = *(_QWORD *)(v0 + 648);
  v2 = swift_allocObject(&unk_1010AF150, 88, 7);
  *(_QWORD *)(v0 + 888) = v2;
  v163 = v2;
  v167 = (objc_super *)(v2 + 16);
  sub_100064AC8(v1, v2 + 16);
  v3 = swift_allocObject(&unk_1010AF178, 24, 7);
  *(_QWORD *)(v0 + 896) = v3;
  *(_QWORD *)(v3 + 16) = 0;
  sub_100064C78(v0 + 448, v0 + 128);
  v4 = sub_100007E8C(&qword_10119E488);
  *(_QWORD *)(v0 + 904) = v4;
  v5 = sub_100007E8C(&qword_10119E490);
  v172 = v4;
  v170 = v3;
  if (swift_dynamicCast(v0 + 168, v0 + 128, v4, v5, 6))
  {
    sub_100064C48((__int128 *)(v0 + 168), v0 + 88);
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 120);
    sub_100007E68((_QWORD *)(v0 + 88), v6);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);

    *(_QWORD *)(v3 + 16) = v8;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 88));
  }
  else
  {
    *(_QWORD *)(v0 + 200) = 0;
    *(_OWORD *)(v0 + 168) = 0u;
    *(_OWORD *)(v0 + 184) = 0u;
    sub_10004FF60(v0 + 168, &qword_10119E498);
  }
  v9 = *(void **)(v0 + 640);
  v10 = swift_allocObject(&unk_1010AF1A0, 24, 7);
  *(_QWORD *)(v0 + 912) = v10;
  *(_QWORD *)(v10 + 16) = _swiftEmptyArrayStorage;
  if (v9)
  {
    v11 = v10;
    *(_QWORD *)(v0 + 552) = sub_10004A07C(0, (unint64_t *)&unk_10119E4B0, NSItemProvider_ptr);
    *(_QWORD *)(v0 + 528) = v9;
    v12 = v9;
    v13 = sub_100431698(0, 1, 1, _swiftEmptyArrayStorage);
    v15 = v13[2];
    v14 = v13[3];
    if (v15 >= v14 >> 1)
      v13 = sub_100431698((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
    v13[2] = v15 + 1;
    sub_100048ABC((_OWORD *)(v0 + 528), &v13[4 * v15 + 4]);
    *(_QWORD *)(v11 + 16) = v13;
  }
  v16 = swift_allocObject(&unk_1010AF1C8, 24, 7);
  *(_QWORD *)(v0 + 920) = v16;
  *(_QWORD *)(v16 + 16) = _swiftEmptyArrayStorage;
  v17 = (_QWORD *)(v16 + 16);
  v18 = v0 + 448;
  sub_100064C78((uint64_t)v175, v0 + 248);
  v19 = sub_100007E8C(&qword_10119E4A0);
  v20 = v172;
  if (swift_dynamicCast(v0 + 288, v0 + 248, v172, v19, 6))
  {
    sub_100064C48((__int128 *)(v0 + 288), v0 + 208);
    v21 = swift_task_alloc(32);
    *(_QWORD *)(v21 + 16) = v0 + 208;
    *(_QWORD *)(v21 + 24) = v167;
    v22 = (uint64_t)sub_10016BFF0((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_100064C60, v21, (uint64_t)&off_1010AC690);
    swift_task_dealloc(v21);
    if ((unint64_t)v22 >> 62)
    {
      if (v22 < 0)
        v151 = v22;
      else
        v151 = v22 & 0xFFFFFFFFFFFFFF8;
      v152 = sub_10004A07C(0, (unint64_t *)&unk_1011A30B0, UIActivity_ptr);
      v24 = _bridgeCocoaArray<A>(_:)(v151, v152);
    }
    else
    {
      v23 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v23);
      sub_10004A07C(0, (unint64_t *)&unk_1011A30B0, UIActivity_ptr);
      v24 = v22;
    }
    swift_bridgeObjectRelease(v22);
    sub_100804E0C(v24);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 208));
  }
  else
  {
    *(_QWORD *)(v0 + 320) = 0;
    *(_OWORD *)(v0 + 288) = 0u;
    *(_OWORD *)(v0 + 304) = 0u;
    sub_10004FF60(v0 + 288, &qword_10119E4A8);
  }
  v25 = *(_QWORD *)(v0 + 824);
  v26 = *(_QWORD *)(v0 + 816);
  v27 = *(_QWORD *)(v0 + 808);
  sub_100064C78((uint64_t)v175, v0 + 328);
  v28 = swift_dynamicCast(v27, v0 + 328, v172, v26, 6);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
  if (!v28)
  {
    v74 = *(_QWORD *)(v0 + 808);
    v29(v74, 1, 1, *(_QWORD *)(v0 + 816));
    sub_10004FF60(v74, &qword_10119E480);
    goto LABEL_28;
  }
  v30 = *(_QWORD *)(v0 + 848);
  v31 = *(_QWORD *)(v0 + 824);
  v32 = *(_QWORD *)(v0 + 816);
  v33 = *(_QWORD *)(v0 + 808);
  v29(v33, 0, 1, v32);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32);
  v34(v30, v33, v32);
  type metadata accessor for LyricsLoader();
  if ((static LyricsLoader.supportsLyrics(for:)(v30) & 1) == 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 824) + 8))(*(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 816));
    v20 = v172;
    goto LABEL_28;
  }
  sub_10015E580();
  v20 = v172;
  if ((v35 & 1) != 0)
    goto LABEL_26;
  v36 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v37 = objc_msgSend(v36, "userInterfaceIdiom");

  if (v37 == (id)6)
    goto LABEL_26;
  v39 = Song.hasLyrics.getter(v38);
  v40 = *(_QWORD *)(v0 + 848);
  if ((v39 & 1) == 0)
  {
LABEL_27:
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 824) + 8))(v40, *(_QWORD *)(v0 + 816));
    goto LABEL_28;
  }
  if ((Song.hasTimeSyncedLyrics.getter(v40) & 1) == 0)
  {
LABEL_26:
    v40 = *(_QWORD *)(v0 + 848);
    goto LABEL_27;
  }
  v41 = *(_QWORD *)(v0 + 688);
  v42 = *(_QWORD *)(v0 + 680);
  v43 = String.LocalizationValue.init(stringLiteral:)(0x794C206572616853, 0xAFA680E273636972);
  static Locale.current.getter(v43);
  v44 = String.init(localized:table:bundle:locale:comment:)(v41, 0, 0, 0, v42, 0, 0, 256);
  v158 = v45;
  v160 = v44;
  v46 = String._bridgeToObjectiveC()();
  v156 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v46);

  if (qword_10119C700 != -1)
    swift_once(&qword_10119C700, sub_1006DB78C);
  v47 = *(_QWORD *)(v0 + 840);
  v48 = *(_QWORD *)(v0 + 832);
  v49 = *(_QWORD *)(v0 + 824);
  v50 = *(_QWORD *)(v0 + 816);
  v153 = (void *)qword_10124D818;
  v154 = *(_QWORD *)(v0 + 656);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 16))(v47, *(_QWORD *)(v0 + 848), v50);
  v51 = *(unsigned __int8 *)(v49 + 80);
  v52 = (v51 + 16) & ~v51;
  v53 = (v48 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject(&unk_1010AF1F0, v54 + 8, v51 | 7);
  v34(v55 + v52, v47, v50);
  *(_QWORD *)(v55 + v53) = v163;
  *(_QWORD *)(v55 + v54) = v154;
  v155 = (objc_class *)_s8ActivityCMa();
  v56 = (char *)objc_allocWithZone(v155);
  v57 = OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_image;
  *(_QWORD *)&v56[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_image] = 0;
  v58 = OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity__activityType;
  *(_QWORD *)&v56[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity__activityType] = 0;
  v59 = (uint64_t *)&v56[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_title];
  *v59 = v160;
  v59[1] = v158;
  v60 = *(void **)&v56[v57];
  *(_QWORD *)&v56[v57] = v156;
  v61 = v153;
  swift_retain(v163);
  v62 = v56;
  v164 = v156;

  v63 = *(void **)&v56[v58];
  *(_QWORD *)&v56[v58] = v61;
  v64 = v61;

  v65 = (double (**)())&v62[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_performBlock];
  *v65 = sub_100064BFC;
  v65[1] = (double (*)())v55;
  swift_retain(v55);

  *(_QWORD *)(v0 + 608) = v62;
  *(_QWORD *)(v0 + 616) = v155;
  v66 = objc_msgSendSuper2((objc_super *)(v0 + 608), "init");
  swift_release(v55);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
  v69 = *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v68 = *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v69 >= v68 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
  v70 = *(_QWORD *)(v0 + 848);
  v71 = *(_QWORD *)(v0 + 824);
  v72 = *(_QWORD *)(v0 + 816);
  v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v66);
  specialized Array._endMutation()(v73);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v72);
  v20 = v172;
  v18 = v0 + 448;
LABEL_28:
  v75 = *(_QWORD *)(v0 + 792);
  v76 = *(_QWORD *)(v0 + 784);
  v77 = *(_QWORD *)(v0 + 776);
  sub_100064C78(v18, v0 + 368);
  v78 = swift_dynamicCast(v77, v0 + 368, v20, v76, 6);
  v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56);
  if (v78)
  {
    v80 = *(_QWORD *)(v0 + 800);
    v81 = *(_QWORD *)(v0 + 792);
    v82 = *(_QWORD *)(v0 + 784);
    v83 = *(_QWORD *)(v0 + 776);
    v84 = *(_QWORD *)(v0 + 744);
    v79(v83, 0, 1, v82);
    v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 32))(v80, v83, v82);
    Playlist.url.getter(v85);
    v86 = type metadata accessor for URL(0);
    *(_QWORD *)(v0 + 928) = v86;
    v87 = *(_QWORD *)(v86 - 8);
    *(_QWORD *)(v0 + 936) = v87;
    v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
    *(_QWORD *)(v0 + 944) = v88;
    LODWORD(v80) = v88(v84, 1, v86);
    sub_10004FF60(v84, &qword_10119E460);
    v89 = *(_QWORD *)(v0 + 800);
    if ((_DWORD)v80 == 1)
    {
      v90 = Playlist.isPublic.getter(v89);
      v89 = *(_QWORD *)(v0 + 800);
      if (v90 != 2 && (v90 & 1) == 0)
      {
        v91 = Playlist.isShareable.getter();
        v89 = *(_QWORD *)(v0 + 800);
        if ((v91 & 1) == 0)
        {
          if ((Playlist.canMakeShareable.getter() & 1) != 0)
          {
            v92 = (_QWORD *)swift_task_alloc(dword_1011D486C);
            *(_QWORD *)(v0 + 960) = v92;
            *v92 = v0;
            v92[1] = sub_10006007C;
            return Playlist.publish()(*(_QWORD *)(v0 + 768));
          }
          v89 = *(_QWORD *)(v0 + 800);
        }
      }
    }
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 792) + 8))(v89, *(_QWORD *)(v0 + 784));
  }
  else
  {
    v94 = *(_QWORD *)(v0 + 776);
    v79(v94, 1, 1, *(_QWORD *)(v0 + 784));
    sub_10004FF60(v94, &qword_1011A30F0);
  }
  v95 = *(void **)(v170 + 16);
  if (v95)
  {
    v96 = *(_QWORD *)(v0 + 672);
    *(_QWORD *)(v0 + 632) = v95;
    v97 = *(int **)(v96 + 48);
    v98 = v97[1];
    v176 = (int *)((char *)v97 + *v97);
    v99 = v95;
    v100 = (_QWORD *)swift_task_alloc(v98);
    *(_QWORD *)(v0 + 952) = v100;
    *v100 = v0;
    v100[1] = sub_10005FA90;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))v176)(v0 + 632, *(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 672));
  }
  swift_release(*(_QWORD *)(v0 + 864));
  v101 = *(_QWORD *)(v0 + 896);
  *(_QWORD *)&v102 = swift_beginAccess(v101 + 16, v0 + 560, 0, 0).n128_u64[0];
  v103 = *(void **)(v101 + 16);
  if (!v103)
  {
    v108 = *(_QWORD *)(v0 + 736);
    v109 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v108, 1, 1, v109);
LABEL_46:
    v173 = v0 + 16;
    v111 = *(_QWORD *)(v0 + 712);
    v112 = *(_QWORD *)(v0 + 704);
    v113 = *(_QWORD *)(v0 + 696);
    sub_10004FF60(*(_QWORD *)(v0 + 736), &qword_10119E460);
    v114 = Logger.actions.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v111, v114, v113);
    v115 = sub_100064C78((uint64_t)v175, v0 + 488);
    v116 = Logger.logObject.getter(v115);
    v117 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v116, v117))
    {
      v157 = *(_QWORD *)(v0 + 904);
      v161 = *(_QWORD *)(v0 + 704);
      v165 = *(_QWORD *)(v0 + 696);
      v168 = *(objc_super **)(v0 + 712);
      v118 = (uint8_t *)swift_slowAlloc(12, -1);
      v119 = swift_slowAlloc(32, -1);
      v177[0] = v119;
      *(_DWORD *)v118 = 136446210;
      sub_100064C78(v0 + 488, v0 + 408);
      v120 = String.init<A>(describing:)(v0 + 408, v157);
      v122 = v121;
      *(_QWORD *)(v0 + 624) = sub_100322200(v120, v121, v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632);
      swift_bridgeObjectRelease(v122);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));
      _os_log_impl((void *)&_mh_execute_header, v116, v117, "No sharing url for item=%{public}s", v118, 0xCu);
      swift_arrayDestroy(v119, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v119, -1, -1);
      swift_slowDealloc(v118, -1, -1);

      (*(void (**)(objc_super *, uint64_t))(v161 + 8))(v168, v165);
    }
    else
    {
      v123 = *(_QWORD *)(v0 + 712);
      v124 = *(_QWORD *)(v0 + 704);
      v125 = *(_QWORD *)(v0 + 696);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));

      (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v123, v125);
    }
    v126 = *(_QWORD *)(v0 + 920);
    v127 = *(_QWORD *)(v0 + 912);
    v128 = *(_QWORD *)(v0 + 896);
    v129 = *(_QWORD *)(v0 + 888);
    (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 672) + 40))(*(_QWORD *)(v0 + 664));
    v131 = v130;
    v132 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v131);
    v133 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v132, 0, 1);

    v134 = String.okButtonTitle.unsafeMutableAddressor()[1];
    swift_bridgeObjectRetain();
    v135 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v134);
    v136 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v135, 1, 0);

    objc_msgSend(v133, "addAction:", v136);
    swift_beginAccess(v129 + 16, v0 + 584, 0, 0);
    sub_100064AC8(v129 + 16, v173);
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v133, 1, (id)0xF, (void **)1, 0, 0);

    sub_100064B4C(v173);
    swift_release(v126);
    swift_release(v127);
    swift_release(v128);
    v137 = v129;
    goto LABEL_51;
  }
  v104 = objc_msgSend(v103, "originalURL", v102);
  v105 = *(_QWORD *)(v0 + 728);
  if (v104)
  {
    v106 = v104;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v104);

    v107 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v105, 0, 1, v107);
  }
  else
  {
    v107 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v105, 1, 1, v107);
  }
  v110 = *(_QWORD *)(v0 + 736);
  sub_100065228(*(_QWORD *)(v0 + 728), v110, &qword_10119E460);
  type metadata accessor for URL(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48))(v110, 1, v107) == 1)
    goto LABEL_46;
  v138 = *(_QWORD *)(v0 + 920);
  v139 = *(_QWORD *)(v0 + 912);
  v140 = *(_QWORD *)(v0 + 896);
  v141 = *(_QWORD *)(v0 + 888);
  sub_10004FF60(*(_QWORD *)(v0 + 736), &qword_10119E460);
  swift_release(v138);
  swift_release(v139);
  swift_release(v140);
  v137 = v141;
LABEL_51:
  swift_release(v137);
  v142 = *(_QWORD *)(v0 + 848);
  v143 = *(_QWORD *)(v0 + 840);
  v144 = *(_QWORD *)(v0 + 808);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 768);
  v148 = *(_QWORD *)(v0 + 760);
  v149 = *(_QWORD *)(v0 + 752);
  v150 = *(_QWORD *)(v0 + 744);
  v159 = *(_QWORD *)(v0 + 736);
  v162 = *(_QWORD *)(v0 + 728);
  v166 = *(_QWORD *)(v0 + 720);
  v169 = *(objc_super **)(v0 + 712);
  v171 = *(_QWORD *)(v0 + 688);
  v174 = *(_QWORD *)(v0 + 680);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v175);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v159);
  swift_task_dealloc(v162);
  swift_task_dealloc(v166);
  swift_task_dealloc(v169);
  swift_task_dealloc(v171);
  swift_task_dealloc(v174);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005FA90()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 952));
  return swift_task_switch(sub_10005FAE0, *(_QWORD *)(v1 + 872), *(_QWORD *)(v1 + 880));
}

uint64_t sub_10005FAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  id v41;
  uint64_t v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v1 = *(_QWORD *)(v0 + 920);
  v2 = *(_QWORD *)(v0 + 912);
  v3 = *(_QWORD *)(v0 + 896);
  v4 = *(_QWORD *)(v0 + 888);
  v5 = *(_QWORD *)(v0 + 640);
  swift_release(*(_QWORD *)(v0 + 864));
  sub_10005D4BC(v1, v2, v3, v5, v4);

  v6 = *(_QWORD *)(v0 + 896);
  *(_QWORD *)&v7 = swift_beginAccess(v6 + 16, v0 + 560, 0, 0).n128_u64[0];
  v8 = *(void **)(v6 + 16);
  if (v8)
  {
    v9 = objc_msgSend(v8, "originalURL", v7);
    v10 = *(_QWORD *)(v0 + 728);
    if (v9)
    {
      v11 = v9;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v9);

      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
    }
    else
    {
      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
    }
    v15 = *(_QWORD *)(v0 + 736);
    sub_100065228(*(_QWORD *)(v0 + 728), v15, &qword_10119E460);
    type metadata accessor for URL(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v15, 1, v12) != 1)
    {
      v46 = *(_QWORD *)(v0 + 920);
      v47 = *(_QWORD *)(v0 + 912);
      v48 = *(_QWORD *)(v0 + 896);
      v49 = *(_QWORD *)(v0 + 888);
      sub_10004FF60(*(_QWORD *)(v0 + 736), &qword_10119E460);
      swift_release(v46);
      swift_release(v47);
      swift_release(v48);
      v45 = v49;
      goto LABEL_12;
    }
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 736);
    v14 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  v16 = v0 + 16;
  v17 = *(_QWORD *)(v0 + 712);
  v18 = *(_QWORD *)(v0 + 704);
  v19 = *(_QWORD *)(v0 + 696);
  sub_10004FF60(*(_QWORD *)(v0 + 736), &qword_10119E460);
  v20 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v20, v19);
  v21 = sub_100064C78(v0 + 448, v0 + 488);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = *(_QWORD *)(v0 + 904);
    v61 = *(_QWORD *)(v0 + 704);
    v63 = *(_QWORD *)(v0 + 696);
    v65 = *(_QWORD *)(v0 + 712);
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v69 = v26;
    *(_DWORD *)v25 = 136446210;
    sub_100064C78(v0 + 488, v0 + 408);
    v27 = v24;
    v16 = v0 + 16;
    v28 = String.init<A>(describing:)(v0 + 408, v27);
    v30 = v29;
    *(_QWORD *)(v0 + 624) = sub_100322200(v28, v29, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632);
    swift_bridgeObjectRelease(v30);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "No sharing url for item=%{public}s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v65, v63);
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 712);
    v32 = *(_QWORD *)(v0 + 704);
    v33 = *(_QWORD *)(v0 + 696);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  }
  v34 = *(_QWORD *)(v0 + 920);
  v35 = *(_QWORD *)(v0 + 912);
  v36 = *(_QWORD *)(v0 + 896);
  v37 = *(_QWORD *)(v0 + 888);
  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 672) + 40))(*(_QWORD *)(v0 + 664));
  v39 = v38;
  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39);
  v41 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v40, 0, 1);

  v42 = String.okButtonTitle.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  v44 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v43, 1, 0);

  objc_msgSend(v41, "addAction:", v44);
  swift_beginAccess(v37 + 16, v0 + 584, 0, 0);
  sub_100064AC8(v37 + 16, v16);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v41, 1, (id)0xF, (void **)1, 0, 0);

  sub_100064B4C(v16);
  swift_release(v34);
  swift_release(v35);
  swift_release(v36);
  v45 = v37;
LABEL_12:
  swift_release(v45);
  v50 = *(_QWORD *)(v0 + 848);
  v51 = *(_QWORD *)(v0 + 840);
  v52 = *(_QWORD *)(v0 + 808);
  v53 = *(_QWORD *)(v0 + 800);
  v54 = *(_QWORD *)(v0 + 776);
  v55 = *(_QWORD *)(v0 + 768);
  v56 = *(_QWORD *)(v0 + 760);
  v57 = *(_QWORD *)(v0 + 752);
  v58 = *(_QWORD *)(v0 + 744);
  v60 = *(_QWORD *)(v0 + 736);
  v62 = *(_QWORD *)(v0 + 728);
  v64 = *(_QWORD *)(v0 + 720);
  v66 = *(_QWORD *)(v0 + 712);
  v67 = *(_QWORD *)(v0 + 688);
  v68 = *(_QWORD *)(v0 + 680);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 448));
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006007C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 960));
  return swift_task_switch(sub_1000600CC, *(_QWORD *)(v1 + 872), *(_QWORD *)(v1 + 880));
}

uint64_t sub_1000600CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void (*v14)(uint64_t, uint64_t);
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSURL *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  id v69;
  uint64_t v70;
  NSString v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;

  v97 = (_QWORD *)(v0 + 448);
  v1 = *(_QWORD *)(v0 + 792);
  v2 = *(_QWORD *)(v0 + 784);
  v3 = *(_QWORD *)(v0 + 768);
  v4 = *(_QWORD *)(v0 + 760);
  swift_release(*(_QWORD *)(v0 + 864));
  sub_10004A160(v3, v4, &qword_1011A30F0);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v6 = v5(v4, 1, v2);
  v7 = *(_QWORD *)(v0 + 896);
  if (v6 == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 760), &qword_1011A30F0);

    *(_QWORD *)(v7 + 16) = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 792);
    v9 = *(_QWORD *)(v0 + 784);
    v10 = *(_QWORD *)(v0 + 768);
    v11 = *(_QWORD *)(v0 + 760);
    v12 = *(_QWORD *)(v0 + 752);
    v13 = sub_10056D6C4();
    v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v14(v11, v9);

    *(_QWORD *)(v7 + 16) = v13;
    sub_10004A160(v10, v12, &qword_1011A30F0);
    LODWORD(v11) = v5(v12, 1, v9);
    v15 = v13;
    v16 = v15;
    v17 = *(_QWORD *)(v0 + 928);
    if ((_DWORD)v11 == 1)
    {
      v18 = *(_QWORD *)(v0 + 936);
      v19 = *(_QWORD *)(v0 + 720);
      sub_10004FF60(*(_QWORD *)(v0 + 752), &qword_1011A30F0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v19, 1, 1, v17);
      v20 = 0;
    }
    else
    {
      v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 944);
      v22 = *(_QWORD *)(v0 + 784);
      v23 = *(_QWORD *)(v0 + 752);
      v24 = *(_QWORD *)(v0 + 720);
      Playlist.url.getter(v15);
      v14(v23, v22);
      if (v21(v24, 1, v17) == 1)
      {
        v20 = 0;
      }
      else
      {
        v26 = *(_QWORD *)(v0 + 936);
        v27 = *(_QWORD *)(v0 + 928);
        v28 = *(_QWORD *)(v0 + 720);
        URL._bridgeToObjectiveC()(v25);
        v20 = v29;
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
      }
    }
    objc_msgSend(v16, "setOriginalURL:", v20);

  }
  v30 = *(_QWORD *)(v0 + 800);
  v31 = *(_QWORD *)(v0 + 792);
  v32 = *(_QWORD *)(v0 + 784);
  v33 = *(_QWORD *)(v0 + 768);
  sub_10005D4BC(*(_QWORD *)(v0 + 920), *(_QWORD *)(v0 + 912), *(_QWORD *)(v0 + 896), *(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 888));
  sub_10004FF60(v33, &qword_1011A30F0);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
  v34 = *(_QWORD *)(v0 + 896);
  *(_QWORD *)&v35 = swift_beginAccess(v34 + 16, v0 + 560, 0, 0).n128_u64[0];
  v36 = *(void **)(v34 + 16);
  if (v36)
  {
    v37 = objc_msgSend(v36, "originalURL", v35);
    v38 = *(_QWORD *)(v0 + 728);
    if (v37)
    {
      v39 = v37;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v37);

      v40 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v38, 0, 1, v40);
    }
    else
    {
      v40 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v38, 1, 1, v40);
    }
    v43 = *(_QWORD *)(v0 + 736);
    sub_100065228(*(_QWORD *)(v0 + 728), v43, &qword_10119E460);
    type metadata accessor for URL(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v43, 1, v40) != 1)
    {
      v74 = *(_QWORD *)(v0 + 920);
      v75 = *(_QWORD *)(v0 + 912);
      v76 = *(_QWORD *)(v0 + 896);
      v77 = *(_QWORD *)(v0 + 888);
      sub_10004FF60(*(_QWORD *)(v0 + 736), &qword_10119E460);
      swift_release(v74);
      swift_release(v75);
      swift_release(v76);
      v73 = v77;
      goto LABEL_20;
    }
  }
  else
  {
    v41 = *(_QWORD *)(v0 + 736);
    v42 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
  }
  v44 = v0 + 16;
  v45 = *(_QWORD *)(v0 + 712);
  v46 = *(_QWORD *)(v0 + 704);
  v47 = *(_QWORD *)(v0 + 696);
  sub_10004FF60(*(_QWORD *)(v0 + 736), &qword_10119E460);
  v48 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v45, v48, v47);
  v49 = sub_100064C78((uint64_t)v97, v0 + 488);
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = *(_QWORD *)(v0 + 904);
    v89 = *(_QWORD *)(v0 + 704);
    v91 = *(_QWORD *)(v0 + 696);
    v93 = *(_QWORD *)(v0 + 712);
    v53 = (uint8_t *)swift_slowAlloc(12, -1);
    v54 = swift_slowAlloc(32, -1);
    v98 = v54;
    *(_DWORD *)v53 = 136446210;
    sub_100064C78(v0 + 488, v0 + 408);
    v55 = String.init<A>(describing:)(v0 + 408, v52);
    v57 = v56;
    *(_QWORD *)(v0 + 624) = sub_100322200(v55, v56, &v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632);
    v58 = v57;
    v44 = v0 + 16;
    swift_bridgeObjectRelease(v58);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "No sharing url for item=%{public}s", v53, 0xCu);
    swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v53, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v93, v91);
  }
  else
  {
    v59 = *(_QWORD *)(v0 + 712);
    v60 = *(_QWORD *)(v0 + 704);
    v61 = *(_QWORD *)(v0 + 696);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));

    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
  }
  v62 = *(_QWORD *)(v0 + 920);
  v63 = *(_QWORD *)(v0 + 912);
  v64 = *(_QWORD *)(v0 + 896);
  v65 = *(_QWORD *)(v0 + 888);
  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 672) + 40))(*(_QWORD *)(v0 + 664));
  v67 = v66;
  v68 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v67);
  v69 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v68, 0, 1);

  v70 = String.okButtonTitle.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v70);
  v72 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v71, 1, 0);

  objc_msgSend(v69, "addAction:", v72);
  swift_beginAccess(v65 + 16, v0 + 584, 0, 0);
  sub_100064AC8(v65 + 16, v44);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v69, 1, (id)0xF, (void **)1, 0, 0);

  sub_100064B4C(v44);
  swift_release(v62);
  swift_release(v63);
  swift_release(v64);
  v73 = v65;
LABEL_20:
  swift_release(v73);
  v78 = *(_QWORD *)(v0 + 848);
  v79 = *(_QWORD *)(v0 + 840);
  v80 = *(_QWORD *)(v0 + 808);
  v81 = *(_QWORD *)(v0 + 800);
  v82 = *(_QWORD *)(v0 + 776);
  v83 = *(_QWORD *)(v0 + 768);
  v84 = *(_QWORD *)(v0 + 760);
  v85 = *(_QWORD *)(v0 + 752);
  v86 = *(_QWORD *)(v0 + 744);
  v88 = *(_QWORD *)(v0 + 736);
  v90 = *(_QWORD *)(v0 + 728);
  v92 = *(_QWORD *)(v0 + 720);
  v94 = *(_QWORD *)(v0 + 712);
  v95 = *(_QWORD *)(v0 + 688);
  v96 = *(_QWORD *)(v0 + 680);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v97);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100060810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class v20;
  id v21;
  unint64_t v22;
  id v23;
  Class v24;
  Class v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSArray v37;
  id v38;
  id v39;
  unint64_t v40;
  id v41;
  NSArray v42;
  NSDictionary v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSArray v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  Class isa;
  id v85;
  unint64_t v86;
  id v87;
  Class v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  Class v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  Class v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  Class v121;
  void *v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  Class v127;
  id v128;
  unint64_t v129;
  id v130;
  Class v131;
  Class v132;
  id v133;
  id v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  Class v158;
  id v159;
  unint64_t v160;
  id v161;
  Class v162;
  Class v163;
  id v164;
  unint64_t v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  __int128 v177;
  _BYTE v178[80];
  _BYTE v179[56];
  _BYTE v180[56];
  _BYTE v181[80];
  _BYTE v182[56];
  _BYTE v183[56];
  _BYTE v184[64];

  v2 = sub_10004A07C(0, &qword_10119E500, MPModelAlbum_ptr);
  if (!swift_dynamicCastMetatype(a1, v2))
  {
    v27 = sub_10004A07C(0, &qword_10119E508, MPModelArtist_ptr);
    if (swift_dynamicCastMetatype(a1, v27))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A6110);
      v29 = swift_allocObject(v28, 64, 7);
      *(_OWORD *)(v29 + 16) = xmmword_100EA7A80;
      *(_QWORD *)(v29 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistArtwork);
      *(_QWORD *)(v29 + 40) = v30;
      *(_QWORD *)(v29 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
      *(_QWORD *)(v29 + 56) = v31;
      v32 = sub_100007E8C((uint64_t *)&unk_10119E570);
      inited = swift_initStackObject(v32, v179);
      v177 = xmmword_100EA7AA0;
      *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipArtistGenre);
      *(_QWORD *)(inited + 40) = v34;
      v35 = swift_allocObject(v28, 48, 7);
      *(_OWORD *)(v35 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v35 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyGenreName);
      *(_QWORD *)(v35 + 40) = v36;
      v37.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v35);
      v38 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v37.super.isa);
LABEL_5:
      v39 = v38;

      *(_QWORD *)(inited + 48) = v39;
      v40 = sub_1000422C4(inited);
      v41 = objc_allocWithZone((Class)MPPropertySet);
      v42.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v29);
      sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
      v43.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v40);
      v44 = objc_msgSend(v41, "initWithProperties:relationships:", v42.super.isa, v43.super.isa, v177);
LABEL_6:
      v26 = v44;

      return v26;
    }
    v45 = sub_10004A07C(0, &qword_10119E510, MPModelComposer_ptr);
    if (swift_dynamicCastMetatype(a1, v45))
    {
      v46 = sub_100007E8C((uint64_t *)&unk_1011A6110);
      v47 = swift_allocObject(v46, 48, 7);
      *(_OWORD *)(v47 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v47 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyComposerName);
      *(_QWORD *)(v47 + 40) = v48;
      v49.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v47);
      v50 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v49.super.isa);
    }
    else
    {
      v51 = sub_10004A07C(0, &qword_10119E518, MPModelCurator_ptr);
      if (swift_dynamicCastMetatype(a1, v51))
      {
        v52 = sub_100007E8C((uint64_t *)&unk_1011A6110);
        v53 = swift_allocObject(v52, 96, 7);
        *(_OWORD *)(v53 + 16) = xmmword_100EA7BA0;
        *(_QWORD *)(v53 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorName);
        *(_QWORD *)(v53 + 40) = v54;
        *(_QWORD *)(v53 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorEditorialArtwork);
        *(_QWORD *)(v53 + 56) = v55;
        *(_QWORD *)(v53 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorKind);
        *(_QWORD *)(v53 + 72) = v56;
        *(_QWORD *)(v53 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorSubKind);
        *(_QWORD *)(v53 + 88) = v57;
        v49.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v53);
        v50 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v49.super.isa);
      }
      else
      {
        v58 = sub_10004A07C(0, (unint64_t *)&unk_10119E520, MPModelMovie_ptr);
        if (swift_dynamicCastMetatype(a1, v58))
        {
          v59 = sub_100007E8C((uint64_t *)&unk_1011A6110);
          v60 = swift_allocObject(v59, 64, 7);
          *(_OWORD *)(v60 + 16) = xmmword_100EA7A80;
          *(_QWORD *)(v60 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyMovieTitle);
          *(_QWORD *)(v60 + 40) = v61;
          *(_QWORD *)(v60 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyMovieArtwork);
          *(_QWORD *)(v60 + 56) = v62;
          v49.super.isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v60);
          v50 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v49.super.isa);
        }
        else
        {
          v64 = sub_10004A07C(0, (unint64_t *)&unk_1011A92E0, MPModelPlaylist_ptr);
          if (swift_dynamicCastMetatype(a1, v64))
          {
            v65 = sub_100007E8C((uint64_t *)&unk_1011A6110);
            v66 = swift_allocObject(v65, 208, 7);
            *(_OWORD *)(v66 + 16) = xmmword_100EA8170;
            *(_QWORD *)(v66 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistArtwork);
            *(_QWORD *)(v66 + 40) = v67;
            *(_QWORD *)(v66 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistIsOwner);
            *(_QWORD *)(v66 + 56) = v68;
            *(_QWORD *)(v66 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
            *(_QWORD *)(v66 + 72) = v69;
            *(_QWORD *)(v66 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistType);
            *(_QWORD *)(v66 + 88) = v70;
            *(_QWORD *)(v66 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistTracksTiledArtwork);
            *(_QWORD *)(v66 + 104) = v71;
            *(_QWORD *)(v66 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCuratorPlaylist);
            *(_QWORD *)(v66 + 120) = v72;
            *(_QWORD *)(v66 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistSubscribed);
            *(_QWORD *)(v66 + 136) = v73;
            *(_QWORD *)(v66 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistShareURL);
            *(_QWORD *)(v66 + 152) = v74;
            *(_QWORD *)(v66 + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistShareShortURL);
            *(_QWORD *)(v66 + 168) = v75;
            *(_QWORD *)(v66 + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistPublicPlaylist);
            *(_QWORD *)(v66 + 184) = v76;
            *(_QWORD *)(v66 + 192) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistUserEditableComponents);
            *(_QWORD *)(v66 + 200) = v77;
            v78 = sub_100007E8C((uint64_t *)&unk_10119E570);
            v79 = swift_initStackObject(v78, v180);
            *(_OWORD *)(v79 + 16) = xmmword_100EA7AA0;
            *(_QWORD *)(v79 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistCurator);
            *(_QWORD *)(v79 + 40) = v80;
            v81 = swift_allocObject(v65, 64, 7);
            *(_OWORD *)(v81 + 16) = xmmword_100EA7A80;
            *(_QWORD *)(v81 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorName);
            *(_QWORD *)(v81 + 40) = v82;
            *(_QWORD *)(v81 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorHandle);
            *(_QWORD *)(v81 + 56) = v83;
            isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v81);
            v85 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

            *(_QWORD *)(v79 + 48) = v85;
            v86 = sub_1000422C4(v79);
            v87 = objc_allocWithZone((Class)MPPropertySet);
            v88 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v66);
            sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
            v49.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v86);
            v26 = objc_msgSend(v87, "initWithProperties:relationships:", v88, v49.super.isa);

            goto LABEL_14;
          }
          v89 = sub_10004A07C(0, &qword_10119E530, MPModelRadioStation_ptr);
          if (swift_dynamicCastMetatype(a1, v89))
          {
            v90 = sub_100007E8C((uint64_t *)&unk_1011A6110);
            v91 = swift_allocObject(v90, 80, 7);
            *(_OWORD *)(v91 + 16) = xmmword_100EA7AC0;
            *(_QWORD *)(v91 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRadioStationSubtype);
            *(_QWORD *)(v91 + 40) = v92;
            *(_QWORD *)(v91 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRadioStationName);
            *(_QWORD *)(v91 + 56) = v93;
            *(_QWORD *)(v91 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRadioStationArtwork);
            *(_QWORD *)(v91 + 72) = v94;
            v49.super.isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v91);
            v50 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v49.super.isa);
          }
          else
          {
            v95 = sub_10004A07C(0, &qword_10119E538, MPModelSocialPerson_ptr);
            if (swift_dynamicCastMetatype(a1, v95))
            {
              v96 = sub_100007E8C((uint64_t *)&unk_1011A6110);
              v97 = swift_allocObject(v96, 80, 7);
              *(_OWORD *)(v97 + 16) = xmmword_100EA7AC0;
              *(_QWORD *)(v97 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonName);
              *(_QWORD *)(v97 + 40) = v98;
              *(_QWORD *)(v97 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonArtwork);
              *(_QWORD *)(v97 + 56) = v99;
              *(_QWORD *)(v97 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonHasLightweightProfile);
              *(_QWORD *)(v97 + 72) = v100;
              v101 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v97);
              v102 = (void *)objc_opt_self(MPPropertySet);
              v103 = objc_msgSend(v102, "propertySetWithProperties:", v101);

              v104 = swift_allocObject(v96, 64, 7);
              *(_OWORD *)(v104 + 16) = xmmword_100EA7A80;
              *(_QWORD *)(v104 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonIsPrivate);
              *(_QWORD *)(v104 + 40) = v105;
              *(_QWORD *)(v104 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonIsVerified);
              *(_QWORD *)(v104 + 56) = v106;
              v107 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v104);
              v108 = objc_msgSend(v102, "propertySetWithProperties:", v107);

              v109 = objc_msgSend(v103, "propertySetByCombiningWithPropertySet:", v108);
              return v109;
            }
            v110 = sub_10004A07C(0, (unint64_t *)&unk_10119E540, MPModelSong_ptr);
            if (swift_dynamicCastMetatype(a1, v110))
            {
              v111 = sub_100007E8C((uint64_t *)&unk_1011A6110);
              v112 = swift_allocObject(v111, 80, 7);
              *(_OWORD *)(v112 + 16) = xmmword_100EA7AC0;
              *(_QWORD *)(v112 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
              *(_QWORD *)(v112 + 40) = v113;
              *(_QWORD *)(v112 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtwork);
              *(_QWORD *)(v112 + 56) = v114;
              *(_QWORD *)(v112 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongHasVideo);
              *(_QWORD *)(v112 + 72) = v115;
              v116 = sub_100007E8C((uint64_t *)&unk_10119E570);
              v117 = swift_initStackObject(v116, v181);
              *(_OWORD *)(v117 + 16) = xmmword_100EA7A80;
              *(_QWORD *)(v117 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
              *(_QWORD *)(v117 + 40) = v118;
              v119 = swift_allocObject(v111, 48, 7);
              *(_OWORD *)(v119 + 16) = xmmword_100EA7AA0;
              *(_QWORD *)(v119 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
              *(_QWORD *)(v119 + 40) = v120;
              v121 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v119);
              v122 = (void *)objc_opt_self(MPPropertySet);
              v123 = objc_msgSend(v122, "propertySetWithProperties:", v121);

              *(_QWORD *)(v117 + 48) = v123;
              *(_QWORD *)(v117 + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
              *(_QWORD *)(v117 + 64) = v124;
              v125 = swift_allocObject(v111, 48, 7);
              *(_OWORD *)(v125 + 16) = xmmword_100EA7AA0;
              *(_QWORD *)(v125 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
              *(_QWORD *)(v125 + 40) = v126;
              v127 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v125);
              v128 = objc_msgSend(v122, "propertySetWithProperties:", v127);

              *(_QWORD *)(v117 + 72) = v128;
              v129 = sub_1000422C4(v117);
              v130 = objc_allocWithZone((Class)MPPropertySet);
              v131 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v112);
              sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
              v132 = Dictionary._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v129);
              v133 = objc_msgSend(v130, "initWithProperties:relationships:", v131, v132);

              type metadata accessor for LyricsLoader();
              v134 = static LyricsLoader.requiredProperties()();
              v135 = objc_msgSend(v133, "propertySetByCombiningWithPropertySet:", v134);

              return v135;
            }
            v136 = sub_10004A07C(0, (unint64_t *)&unk_1011A92F0, MPModelTVEpisode_ptr);
            if (swift_dynamicCastMetatype(a1, v136))
            {
              v137 = sub_100007E8C((uint64_t *)&unk_1011A6110);
              v29 = swift_allocObject(v137, 64, 7);
              *(_OWORD *)(v29 + 16) = xmmword_100EA7A80;
              *(_QWORD *)(v29 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVEpisodeTitle);
              *(_QWORD *)(v29 + 40) = v138;
              *(_QWORD *)(v29 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVEpisodeArtwork);
              *(_QWORD *)(v29 + 56) = v139;
              v140 = sub_100007E8C((uint64_t *)&unk_10119E570);
              inited = swift_initStackObject(v140, v182);
              v177 = xmmword_100EA7AA0;
              *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
              *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipTVEpisodeShow);
              *(_QWORD *)(inited + 40) = v141;
              v142 = swift_allocObject(v137, 48, 7);
              *(_OWORD *)(v142 + 16) = xmmword_100EA7AA0;
              *(_QWORD *)(v142 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowTitle);
              *(_QWORD *)(v142 + 40) = v143;
              v37.super.isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v142);
              v38 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v37.super.isa);
              goto LABEL_5;
            }
            v144 = sub_10004A07C(0, (unint64_t *)&unk_10119E550, MPModelTVSeason_ptr);
            if (swift_dynamicCastMetatype(a1, v144))
            {
              v145 = sub_100007E8C((uint64_t *)&unk_1011A6110);
              v146 = swift_allocObject(v145, 64, 7);
              *(_OWORD *)(v146 + 16) = xmmword_100EA7A80;
              *(_QWORD *)(v146 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVSeasonNumber);
              *(_QWORD *)(v146 + 40) = v147;
              *(_QWORD *)(v146 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVSeasonArtwork);
              *(_QWORD *)(v146 + 56) = v148;
              v149 = sub_100007E8C((uint64_t *)&unk_10119E570);
              v150 = swift_initStackObject(v149, v184);
              *(_OWORD *)(v150 + 16) = xmmword_100EA7AA0;
              *(_QWORD *)(v150 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipTVSeasonShow);
              *(_QWORD *)(v150 + 40) = v151;
              v152 = swift_allocObject(v145, 48, 7);
              *(_OWORD *)(v152 + 16) = xmmword_100EA7AA0;
              *(_QWORD *)(v152 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowTitle);
              *(_QWORD *)(v152 + 40) = v153;
              v154 = swift_initStackObject(v149, v183);
              *(_OWORD *)(v154 + 16) = xmmword_100EA7AA0;
              *(_QWORD *)(v154 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipTVShowCreator);
              *(_QWORD *)(v154 + 40) = v155;
              v156 = swift_allocObject(v145, 48, 7);
              *(_OWORD *)(v156 + 16) = xmmword_100EA7AA0;
              *(_QWORD *)(v156 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowCreatorName);
              *(_QWORD *)(v156 + 40) = v157;
              v158 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v156);
              v159 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v158);

              *(_QWORD *)(v154 + 48) = v159;
              v160 = sub_1000422C4(v154);
              v161 = objc_allocWithZone((Class)MPPropertySet);
              v162 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v152);
              sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
              v163 = Dictionary._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v160);
              v164 = objc_msgSend(v161, "initWithProperties:relationships:", v162, v163);

              *(_QWORD *)(v150 + 48) = v164;
              v165 = sub_1000422C4(v150);
              v166 = objc_allocWithZone((Class)MPPropertySet);
              v42.super.isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v146);
              v43.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v165);
              v44 = objc_msgSend(v166, "initWithProperties:relationships:", v42.super.isa, v43.super.isa, 1, 2);
              goto LABEL_6;
            }
            v167 = sub_10004A07C(0, (unint64_t *)&unk_1011E84D0, MPModelTVShow_ptr);
            if (swift_dynamicCastMetatype(a1, v167))
            {
              v168 = sub_100007E8C((uint64_t *)&unk_1011A6110);
              v169 = swift_allocObject(v168, 64, 7);
              *(_OWORD *)(v169 + 16) = xmmword_100EA7A80;
              *(_QWORD *)(v169 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowTitle);
              *(_QWORD *)(v169 + 40) = v170;
              *(_QWORD *)(v169 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowArtwork);
              *(_QWORD *)(v169 + 56) = v171;
              v49.super.isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v169);
              v50 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v49.super.isa);
            }
            else
            {
              v172 = sub_10004A07C(0, (unint64_t *)&unk_10119E560, MPModelRecordLabel_ptr);
              if (!swift_dynamicCastMetatype(a1, v172))
                return objc_msgSend((id)objc_opt_self(MPPropertySet), "emptyPropertySet");
              v173 = sub_100007E8C((uint64_t *)&unk_1011A6110);
              v174 = swift_allocObject(v173, 64, 7);
              *(_OWORD *)(v174 + 16) = xmmword_100EA7A80;
              *(_QWORD *)(v174 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRecordLabelName);
              *(_QWORD *)(v174 + 40) = v175;
              *(_QWORD *)(v174 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRecordLabelArtwork);
              *(_QWORD *)(v174 + 56) = v176;
              v49.super.isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v174);
              v50 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v49.super.isa);
            }
          }
        }
      }
    }
    v26 = v50;
LABEL_14:

    return v26;
  }
  v3 = sub_100007E8C((uint64_t *)&unk_1011A6110);
  v4 = swift_allocObject(v3, 80, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(v4 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumArtwork);
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v4 + 56) = v6;
  *(_QWORD *)(v4 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTrackCount);
  *(_QWORD *)(v4 + 72) = v7;
  v8 = sub_100007E8C((uint64_t *)&unk_10119E570);
  v9 = swift_initStackObject(v8, v178);
  *(_OWORD *)(v9 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(v9 + 40) = v10;
  v11 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v11 + 40) = v12;
  v13 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v14 = (void *)objc_opt_self(MPPropertySet);
  v15 = objc_msgSend(v14, "propertySetWithProperties:", v13);

  *(_QWORD *)(v9 + 48) = v15;
  *(_QWORD *)(v9 + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumRepresentativeSong);
  *(_QWORD *)(v9 + 64) = v16;
  v17 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v17 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongHasVideo);
  *(_QWORD *)(v17 + 40) = v18;
  *(_QWORD *)(v17 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v17 + 56) = v19;
  v20 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  v21 = objc_msgSend(v14, "propertySetWithProperties:", v20);

  *(_QWORD *)(v9 + 72) = v21;
  v22 = sub_1000422C4(v9);
  v23 = objc_allocWithZone((Class)MPPropertySet);
  v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
  v25 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v22);
  v26 = objc_msgSend(v23, "initWithProperties:relationships:", v24, v25);

  return v26;
}

id sub_100061BB0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  __int128 v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  _QWORD aBlock[5];
  uint64_t v26;

  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  if (a1)
  {
    v7 = qword_10119B850;
    v8 = a1;
    if (v7 != -1)
      swift_once(&qword_10119B850, sub_10005BB80);
    v9 = qword_10119E2A0;
    v10 = static UTType.png.getter();
    UTType.identifier.getter(v10);
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v14 = swift_allocObject(&unk_1010AF358, 32, 7);
    *(_QWORD *)(v14 + 16) = v8;
    *(_QWORD *)(v14 + 24) = v9;
    aBlock[4] = sub_100065298;
    v26 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10056D5E0;
    aBlock[3] = &unk_1010AF370;
    v15 = _Block_copy(aBlock);
    v16 = v26;
    v17 = v8;
    swift_retain(v9);
    objc_msgSend(v6, "registerItemForTypeIdentifier:loadHandler:", v13, v15, swift_release(v16).n128_f64[0]);
    _Block_release(v15);

  }
  if (qword_10119B858 != -1)
    swift_once(&qword_10119B858, sub_10005BC44);
  v18 = xmmword_10124C6D0;
  sub_10004A07C(0, (unint64_t *)&qword_10119E590, UIGraphicsImageRendererFormat_ptr);
  v19 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  Artwork.Placeholder.image(with:graphicsFormat:)((uint64_t)v19, *(double *)&v18, *((double *)&v18 + 1));
  v21 = v20;

  if (v21)
  {
    v22 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithPlatformImage:", v21);

  }
  else
  {
    v22 = 0;
  }
  v23 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithItemProvider:properties:placeholderImage:", v6, 0, v22);

  return v23;
}

id sub_100061E4C(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self(MPModelCurator);
  v10 = swift_dynamicCastObjCClass(a1);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = a1;
    if (objc_msgSend(v11, "curatorSubKind") == (id)3)
    {
      v13 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaRadioMetadata), "init");
      v14 = objc_msgSend(v12, "name");
      if (v14)
      {
        v15 = v14;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v17 = v16;

      }
      else
      {
        v25 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEF6E6F6974617453);
        static Locale.current.getter(v25);
        String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
        v17 = v26;
      }
      v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      objc_msgSend(v13, "setName:", v27);

      MPModelObject.artworkPlaceholder.getter(&v31);
      v28 = sub_100061BB0(a2);
      sub_100065228((uint64_t)&v31, (uint64_t)&v37, &qword_10119E580);
      sub_100065200(&v37);
      sub_100065228((uint64_t)&v32, (uint64_t)&v36, &qword_10119E580);
      sub_100065200(&v36);
      sub_100065228((uint64_t)&v33, (uint64_t)&v35, &qword_10119E588);
      sub_100065200(&v35);

      objc_msgSend(v13, "setArtwork:", v28);
      goto LABEL_12;
    }

  }
  v13 = objc_msgSend(objc_allocWithZone((Class)LPiTunesUserProfileMetadata), "init");
  v18 = objc_msgSend(a1, "name");
  if (v18)
  {
    v19 = v18;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

  }
  else
  {
    v22 = String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
    static Locale.current.getter(v22);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
    v21 = v23;
  }
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  objc_msgSend(v13, "setName:", v24);

  MPModelObject.artworkPlaceholder.getter(&v31);
  v12 = sub_100061BB0(a2);
  sub_100065228((uint64_t)&v31, (uint64_t)&v37, &qword_10119E580);
  sub_100065200(&v37);
  sub_100065228((uint64_t)&v32, (uint64_t)&v36, &qword_10119E580);
  sub_100065200(&v36);
  sub_100065228((uint64_t)&v33, (uint64_t)&v35, &qword_10119E588);
  sub_100065200(&v35);

  objc_msgSend(v13, "setArtwork:", v12);
LABEL_12:

  return v13;
}

id sub_100062210(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[4];
  id v32;
  id v33;
  id v34;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaArtistMetadata), "init");
  v9 = objc_msgSend(a1, "name");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v8, "setName:", v15);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v16)
  {
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v18);

  v19 = objc_msgSend(a1, "genre");
  v20 = v19;
  if (v19)
  {
    v21 = objc_msgSend(v19, "name");

    if (v21)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v23 = v22;

      v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v23);
    }
    else
    {
      v20 = 0;
    }
  }
  objc_msgSend(v8, "setGenre:", v20);

  v24 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v29);
  v25 = sub_100061BB0(v24);
  sub_100065228((uint64_t)&v29, (uint64_t)&v34, &qword_10119E580);
  sub_100065200(&v34);
  sub_100065228((uint64_t)&v30, (uint64_t)&v33, &qword_10119E580);
  sub_100065200(&v33);
  sub_100065228((uint64_t)v31, (uint64_t)&v32, &qword_10119E588);
  sub_100065200(&v32);
  v26 = (void *)v31[1];

  objc_msgSend(v8, "setArtwork:", v25);
  return v8;
}

id sub_100062500(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[4];
  id v37;
  id v38;
  id v39;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaAlbumMetadata), "init");
  v9 = objc_msgSend(a1, "title");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006D75626C41);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  if ((uint64_t)objc_msgSend(a1, "trackCount") < 2)
  {
    v15 = objc_msgSend(a1, "representativeSong");
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v15, "title");

      if (v17)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v19 = v18;
        swift_bridgeObjectRelease(v12);

        v12 = v19;
      }
    }
  }
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v8, "setName:", v20);

  v21 = objc_msgSend(a1, "artist");
  v22 = v21;
  if (v21)
  {
    v23 = objc_msgSend(v21, "name");

    if (v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v25 = v24;

      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v25);
    }
    else
    {
      v22 = 0;
    }
  }
  objc_msgSend(v8, "setArtist:", v22);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v26)
  {
    v27 = v26;
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v28);

  v29 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v34);
  v30 = sub_100061BB0(v29);
  sub_100065228((uint64_t)&v34, (uint64_t)&v39, &qword_10119E580);
  sub_100065200(&v39);
  sub_100065228((uint64_t)&v35, (uint64_t)&v38, &qword_10119E580);
  sub_100065200(&v38);
  sub_100065228((uint64_t)v36, (uint64_t)&v37, &qword_10119E588);
  sub_100065200(&v37);
  v31 = (void *)v36[1];

  objc_msgSend(v8, "setArtwork:", v30);
  return v8;
}

id sub_10006287C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];
  id v24;
  id v25;
  id v26;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaRadioMetadata), "init");
  v9 = objc_msgSend(a1, "name");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEF6E6F6974617453);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v8, "setName:", v15);

  v16 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v21);
  v17 = sub_100061BB0(v16);
  sub_100065228((uint64_t)&v21, (uint64_t)&v26, &qword_10119E580);
  sub_100065200(&v26);
  sub_100065228((uint64_t)&v22, (uint64_t)&v25, &qword_10119E580);
  sub_100065200(&v25);
  sub_100065228((uint64_t)v23, (uint64_t)&v24, &qword_10119E588);
  sub_100065200(&v24);
  v18 = (void *)v23[1];

  objc_msgSend(v8, "setArtwork:", v17);
  return v8;
}

id sub_100062AA8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[4];
  id v42;
  id v43;
  id v44;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaSongMetadata), "init");
  v9 = objc_msgSend(a1, "title");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v8, "setName:", v15);

  v16 = objc_msgSend(a1, "artist");
  v17 = v16;
  if (v16)
  {
    v18 = objc_msgSend(v16, "name");

    if (v18)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v20 = v19;

      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20);
    }
    else
    {
      v17 = 0;
    }
  }
  objc_msgSend(v8, "setArtist:", v17);

  v21 = objc_msgSend(a1, "album");
  v22 = v21;
  if (v21)
  {
    v23 = objc_msgSend(v21, "title");

    if (v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v25 = v24;

      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v25);
    }
    else
    {
      v22 = 0;
    }
  }
  objc_msgSend(v8, "setAlbum:", v22);

  v26 = objc_msgSend(a1, "lyrics");
  v27 = v26;
  if (v26)
  {
    v28 = objc_msgSend(v26, "text");

    if (v28)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v30 = v29;

      v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30);
    }
    else
    {
      v27 = 0;
    }
  }
  objc_msgSend(v8, "setLyrics:", v27);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v31)
  {
    v32 = v31;
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v33 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v33);

  v34 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v39);
  v35 = sub_100061BB0(v34);
  sub_100065228((uint64_t)&v39, (uint64_t)&v44, &qword_10119E580);
  sub_100065200(&v44);
  sub_100065228((uint64_t)&v40, (uint64_t)&v43, &qword_10119E580);
  sub_100065200(&v43);
  sub_100065228((uint64_t)v41, (uint64_t)&v42, &qword_10119E588);
  sub_100065200(&v42);
  v36 = (void *)v41[1];

  objc_msgSend(v8, "setArtwork:", v35);
  return v8;
}

id sub_100062EC4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36[4];
  id v37;
  id v38;
  id v39;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaPlaylistMetadata), "init");
  v9 = objc_msgSend(a1, "name");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E2C360);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v8, "setName:", v15);

  v16 = objc_msgSend(a1, "curator");
  v17 = v16;
  if (v16)
  {
    v18 = objc_msgSend(v16, "name");

    if (v18)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v20 = v19;

      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20);
    }
    else
    {
      v17 = 0;
    }
  }
  objc_msgSend(v8, "setCurator:", v17);

  v21 = objc_msgSend(a1, "curator");
  v22 = v21;
  if (v21)
  {
    v23 = objc_msgSend(v21, "handle");

    if (v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v25 = v24;

      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v25);
    }
    else
    {
      v22 = 0;
    }
  }
  objc_msgSend(v8, "setCuratorHandle:", v22);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v26)
  {
    v27 = v26;
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v28);

  if (objc_msgSend(a1, "hasLoadedValueForKey:", MPModelPropertyPlaylistType)
    && objc_msgSend(a1, "type") != (id)7)
  {
    v29 = MPModelPlaylist.preferredArtworkCatalog.getter();
  }
  else
  {
    v29 = objc_msgSend(a1, "artworkCatalog");
  }
  v30 = v29;
  MPModelObject.artworkPlaceholder.getter(&v34);
  v31 = sub_100061BB0(v30);
  sub_100065228((uint64_t)&v34, (uint64_t)&v39, &qword_10119E580);
  sub_100065200(&v39);
  sub_100065228((uint64_t)&v35, (uint64_t)&v38, &qword_10119E580);
  sub_100065200(&v38);
  sub_100065228((uint64_t)v36, (uint64_t)&v37, &qword_10119E588);
  sub_100065200(&v37);

  objc_msgSend(v8, "setArtwork:", v31);
  return v8;
}

id sub_1000632A8(void *a1)
{
  return sub_1000632DC(a1, (Class *)LPAppleMusicTVShowMetadata_ptr, 0xEC000000776F6853);
}

id sub_1000632C0(void *a1)
{
  return sub_1000632DC(a1, (Class *)LPiTunesMediaMovieMetadata_ptr, 0xED0000656C746954);
}

id sub_1000632DC(void *a1, Class *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];
  id v31;
  id v32;
  id v33;

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone(*a2), "init");
  v13 = objc_msgSend(a1, "title");
  if (v13)
  {
    v14 = v13;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

  }
  else
  {
    v17 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, a3);
    static Locale.current.getter(v17);
    String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, 0, 0, 256);
    v16 = v18;
  }
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  objc_msgSend(v12, "setName:", v19);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v20)
  {
    v21 = v20;
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v12, "setStoreIdentifier:", v22);

  v23 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v28);
  v24 = sub_100061BB0(v23);
  sub_100065228((uint64_t)&v28, (uint64_t)&v33, &qword_10119E580);
  sub_100065200(&v33);
  sub_100065228((uint64_t)&v29, (uint64_t)&v32, &qword_10119E580);
  sub_100065200(&v32);
  sub_100065228((uint64_t)v30, (uint64_t)&v31, &qword_10119E588);
  sub_100065200(&v31);
  v25 = (void *)v30[1];

  objc_msgSend(v12, "setArtwork:", v24);
  return v12;
}

id sub_100063544(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  id v26;
  id v27;
  id v28;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaTVSeasonMetadata), "init");
  MPModelTVSeason.title.getter();
  v11 = v10;
  if (!v9)
  {
    v12 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEC000000776F6853);
    static Locale.current.getter(v12);
    String.init(localized:table:bundle:locale:comment:)(v7, v11, 0, 0, v4, 0, 0, 256);
  }
  v13 = v9;
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v8, "setName:", v14);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v15)
  {
    v16 = v15;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v17);

  v18 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v23);
  v19 = sub_100061BB0(v18);
  sub_100065228((uint64_t)&v23, (uint64_t)&v28, &qword_10119E580);
  sub_100065200(&v28);
  sub_100065228((uint64_t)&v24, (uint64_t)&v27, &qword_10119E580);
  sub_100065200(&v27);
  sub_100065228((uint64_t)v25, (uint64_t)&v26, &qword_10119E588);
  sub_100065200(&v26);
  v20 = (void *)v25[1];

  objc_msgSend(v8, "setArtwork:", v19);
  return v8;
}

id sub_100063784(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[4];
  id v35;
  id v36;
  id v37;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaTVEpisodeMetadata), "init");
  v9 = objc_msgSend(a1, "title");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v8, "setEpisodeName:", v15);

  v16 = objc_msgSend(a1, "show");
  if (v16 && (v17 = v16, v18 = objc_msgSend(v16, "title"), v17, v18))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v20 = v19;

  }
  else
  {
    v21 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEC000000776F6853);
    static Locale.current.getter(v21);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v20 = v22;
  }
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v8, "setSeasonName:", v23);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v24)
  {
    v25 = v24;
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
  }
  else
  {
    v26 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v26);

  v27 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v32);
  v28 = sub_100061BB0(v27);
  sub_100065228((uint64_t)&v32, (uint64_t)&v37, &qword_10119E580);
  sub_100065200(&v37);
  sub_100065228((uint64_t)&v33, (uint64_t)&v36, &qword_10119E580);
  sub_100065200(&v36);
  sub_100065228((uint64_t)v34, (uint64_t)&v35, &qword_10119E588);
  sub_100065200(&v35);
  v29 = (void *)v34[1];

  objc_msgSend(v8, "setArtwork:", v28);
  return v8;
}

id sub_100063AD8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23[4];
  id v24;
  id v25;
  id v26;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(objc_allocWithZone((Class)LPiTunesUserProfileMetadata), "init");
  v11 = objc_msgSend(a1, "name");
  if (v11)
  {
    v12 = v11;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

  }
  else
  {
    v15 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E2C380);
    static Locale.current.getter(v15);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
    v14 = v16;
  }
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v10, "setName:", v17);

  MPModelObject.artworkPlaceholder.getter(&v21);
  v18 = sub_100061BB0(a2);
  sub_100065228((uint64_t)&v21, (uint64_t)&v26, &qword_10119E580);
  sub_100065200(&v26);
  sub_100065228((uint64_t)&v22, (uint64_t)&v25, &qword_10119E580);
  sub_100065200(&v25);
  sub_100065228((uint64_t)v23, (uint64_t)&v24, &qword_10119E588);
  sub_100065200(&v24);

  objc_msgSend(v10, "setArtwork:", v18);
  return v10;
}

id sub_100063CE0(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  Class *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;

  objc_opt_self(MPModelArtist);
  v2 = swift_dynamicCastObjCClass(a1);
  if (!v2)
  {
    objc_opt_self(MPModelComposer);
    v6 = swift_dynamicCastObjCClass(a1);
    if (v6)
    {
      v7 = (void *)v6;
      v4 = a1;
      v5 = sub_100061E4C(v7, 0);
      goto LABEL_5;
    }
    objc_opt_self(MPModelCurator);
    v11 = swift_dynamicCastObjCClass(a1);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = a1;
      v14 = objc_msgSend(v12, "editorialArtworkCatalog");
      goto LABEL_10;
    }
    objc_opt_self(MPModelAlbum);
    v16 = swift_dynamicCastObjCClass(a1);
    if (v16)
    {
      v17 = (void *)v16;
      v4 = a1;
      v5 = sub_100062500(v17);
      goto LABEL_5;
    }
    objc_opt_self(MPModelRadioStation);
    v18 = swift_dynamicCastObjCClass(a1);
    if (v18)
    {
      v19 = (void *)v18;
      v4 = a1;
      v5 = sub_10006287C(v19);
      goto LABEL_5;
    }
    objc_opt_self(MPModelSong);
    v20 = swift_dynamicCastObjCClass(a1);
    if (v20)
    {
      v21 = (void *)v20;
      v4 = a1;
      v5 = sub_100062AA8(v21);
      goto LABEL_5;
    }
    objc_opt_self(MPModelPlaylist);
    v22 = swift_dynamicCastObjCClass(a1);
    if (v22)
    {
      v23 = (void *)v22;
      v4 = a1;
      v5 = sub_100062EC4(v23);
      goto LABEL_5;
    }
    objc_opt_self(MPModelTVShow);
    v24 = swift_dynamicCastObjCClass(a1);
    if (v24)
    {
      v25 = (void *)v24;
      v4 = a1;
      v26 = (Class *)LPAppleMusicTVShowMetadata_ptr;
      v27 = v25;
      v28 = 0xEC000000776F6853;
    }
    else
    {
      objc_opt_self(MPModelMovie);
      v29 = swift_dynamicCastObjCClass(a1);
      if (!v29)
      {
        objc_opt_self(MPModelTVSeason);
        v31 = swift_dynamicCastObjCClass(a1);
        if (v31)
        {
          v32 = (void *)v31;
          v4 = a1;
          v5 = sub_100063544(v32);
          goto LABEL_5;
        }
        objc_opt_self(MPModelTVEpisode);
        v33 = swift_dynamicCastObjCClass(a1);
        if (v33)
        {
          v34 = (void *)v33;
          v4 = a1;
          v5 = sub_100063784(v34);
          goto LABEL_5;
        }
        objc_opt_self(MPModelSocialPerson);
        v35 = swift_dynamicCastObjCClass(a1);
        if (!v35)
        {
          objc_opt_self(MPModelRecordLabel);
          v36 = swift_dynamicCastObjCClass(a1);
          if (!v36)
            return 0;
          v37 = (void *)v36;
          v13 = a1;
          v4 = objc_msgSend(v37, "artworkCatalog");
          v15 = sub_100063AD8(v37, v4);
          goto LABEL_11;
        }
        v12 = (void *)v35;
        v13 = a1;
        v14 = objc_msgSend(v12, "artworkCatalog");
        if (!v14)
          v14 = MPModelPerson.monogramArtworkCatalog.getter();
LABEL_10:
        v4 = v14;
        v15 = sub_100061E4C(v12, v14);
LABEL_11:
        v8 = v15;

        goto LABEL_6;
      }
      v30 = (void *)v29;
      v4 = a1;
      v26 = (Class *)LPiTunesMediaMovieMetadata_ptr;
      v27 = v30;
      v28 = 0xED0000656C746954;
    }
    v5 = sub_1000632DC(v27, v26, v28);
    goto LABEL_5;
  }
  v3 = (void *)v2;
  v4 = a1;
  v5 = sub_100062210(v3);
LABEL_5:
  v8 = v5;
LABEL_6:

  v9 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  objc_msgSend(v9, "setSpecialization:", v8);

  return v9;
}

void sub_100064074(uint64_t a1, char a2, void *a3, uint64_t a4, _QWORD *a5, void *a6, void *a7, uint64_t a8, uint64_t a9, void *a10, char a11, uint64_t a12, char a13, uint64_t a14)
{
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  id v28;
  id v29;
  char *v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v34;
  unsigned __int8 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v39[15];
  uint64_t v40[2];
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  if (a1)
  {
    v21 = a3;
    v22 = swift_bridgeObjectRetain();
    JSShareRequest.RequestContent.init(contentDictionary:contentType:jsModel:)(v22, 1, (char *)a3, (uint64_t)&v34);
    v23 = v34;
    v24 = v35;
    v25 = v36;
    v26 = v37;
    v27 = v38;
  }
  else
  {
    v23 = 0;
    v24 = 0;
    v27 = 0;
    v25 = 0uLL;
    v26 = 0uLL;
  }
  v40[0] = v23;
  v40[1] = v24;
  v41 = v25;
  v42 = v26;
  v43 = v27;
  sub_10004A160(a8, (uint64_t)v39, (uint64_t *)&unk_10119E450);
  objc_allocWithZone((Class)type metadata accessor for ActivityViewController());
  swift_bridgeObjectRetain();
  v28 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = a6;
  v30 = sub_10005D81C(v40, a4, a5, a6, a7, (uint64_t)v39, a9, 0, 0, 0, 0);
  static ApplicationCapabilities.shared.getter((uint64_t)v39);
  sub_100065184(v39);
  if ((v39[0] & 0x100) != 0)
  {
    v32 = sub_10005B8D4(a10, a11 & 1);
    v31 = 1;
    if ((v32 & ~a2 & 1) == 0)
      v31 = 2;
  }
  else
  {
    v31 = 2;
  }
  if ((a13 & 1) != 0)
    a12 = v31;
  objc_msgSend(v30, "setSharingStyle:", a12);
  if (*(unsigned __int8 *)(a14 + 48) == 255)
  {
    objc_msgSend(v30, "setAllowsCustomPresentationStyle:", 1);
    objc_msgSend(v30, "setModalPresentationStyle:", 2);
  }
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v30, 1, (id)0xF, (void **)1, 0, 0);

}

void sub_10006425C(void *a1, uint64_t a2)
{
  uint64_t Strong;
  void *v4;
  char *v5;
  double v6;
  char *v7;
  unint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  _BYTE *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void (*v37)(void);
  char *v38;
  char *v39;
  char *v40;

  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong
    || (v4 = (void *)Strong, v5 = (char *)sub_10076BBD4(), v4, !v5)
    || (v40 = (char *)swift_unknownObjectWeakLoadStrong(v5 + 40), *(_QWORD *)&v6 = swift_release(v5).n128_u64[0], !v40))
  {
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(a1, 0, (id)0xF, (void **)1, 0, 0);
    return;
  }
  objc_msgSend(*(id *)&v40[OBJC_IVAR____TtC5Music24NowPlayingViewController_backdropView], "setHidden:", 0, v6);
  v7 = &v40[OBJC_IVAR____TtC5Music24NowPlayingViewController_mode];
  v8 = *(_QWORD *)&v40[OBJC_IVAR____TtC5Music24NowPlayingViewController_mode];
  if (v8 >> 62 != 1)
  {
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(a1, 0, (id)0xF, (void **)1, 0, 0);
    goto LABEL_12;
  }
  v10 = (void *)*((_QWORD *)v7 + 1);
  v9 = (void *)*((_QWORD *)v7 + 2);
  v12 = (void *)*((_QWORD *)v7 + 3);
  v11 = (void *)*((_QWORD *)v7 + 4);
  v14 = (void *)*((_QWORD *)v7 + 5);
  v13 = *((_QWORD *)v7 + 6);
  v15 = *((_QWORD *)v7 + 7);
  v16 = (char *)(v8 & 0x3FFFFFFFFFFFFFFFLL);
  v17 = (_BYTE *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + OBJC_IVAR___MusicNowPlayingLyricsViewController_state);
  if (v17[8] == 1 && *v17 == 2)
  {
    v18 = v10;
    v19 = v10;
    v20 = v12;
    v21 = v12;
    v22 = v11;
    v32 = v13;
    v33 = v14;
    v31 = v15;
    sub_100064570(*(_QWORD *)&v40[OBJC_IVAR____TtC5Music24NowPlayingViewController_mode], v19, v9, v21, v11, v14, v13, v15);
    v23 = v22;
    v38 = v16;
    v36 = v18;
    swift_bridgeObjectRetain();
    v24 = v20;
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(a1, 0, (id)0xF, (void **)1, 0, 0);

    swift_bridgeObjectRelease(v9);
    sub_100064644(v8, v18, v9, v20, v22, v33, v32, v31);
LABEL_12:

    return;
  }
  v25 = *(_QWORD **)&v16[OBJC_IVAR___MusicNowPlayingLyricsViewController_syncedLyricsViewController];
  if (v25)
  {
    v37 = *(void (**)(void))((swift_isaMask & *v25) + 0x348);
    v26 = v11;
    v27 = v13;
    v28 = v15;
    sub_100064570(v8, v10, v9, v12, v11, v14, v13, v15);
    v35 = v26;
    v29 = v25;
    v39 = v16;
    v34 = v10;
    swift_bridgeObjectRetain();
    v30 = v12;
    v37();
    sub_100064644(v8, v10, v9, v12, v26, v14, v27, v28);

    swift_bridgeObjectRelease(v9);
    goto LABEL_12;
  }
  __break(1u);
}

unint64_t sub_100064570(unint64_t result, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;

  if (result >> 62 == 1)
  {
    v20 = (void *)(result & 0x3FFFFFFFFFFFFFFFLL);
    v21 = a5;
    v22 = v20;
    v23 = a2;
    swift_bridgeObjectRetain(a3);
    return (unint64_t)a4;
  }
  else if (!(result >> 62))
  {
    v14 = (id)result;
    v15 = a2;
    v16 = a3;
    v17 = a4;
    v18 = a5;
    v19 = a6;
    swift_bridgeObjectRetain(a7);
    return swift_bridgeObjectRetain(a8);
  }
  return result;
}

void sub_100064644(unint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  if (a1 >> 62 == 1)
  {

    swift_bridgeObjectRelease(a3);
  }
  else if (!(a1 >> 62))
  {

    swift_bridgeObjectRelease(a7);
    swift_bridgeObjectRelease(a8);
  }
}

uint64_t sub_100064718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  v7 = type metadata accessor for URL(0);
  v6[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[16] = v8;
  v6[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[18] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000647B4, v11, v12);
}

uint64_t sub_1000647B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSURL *v9;
  void *v10;
  void *v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 80);
  swift_release();
  v8 = sub_10056D8F0();
  SocialProfileDescriptor.url.getter();
  URL._bridgeToObjectiveC()(v9);
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  objc_msgSend(v8, "setOriginalURL:", v11);

  *(_OWORD *)(v0 + 16) = 0u;
  *(_QWORD *)(v0 + 64) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  memset(v17, 0, sizeof(v17));
  v18 = 0;
  objc_allocWithZone((Class)type metadata accessor for ActivityViewController());
  swift_bridgeObjectRetain();
  v12 = v8;
  swift_bridgeObjectRetain();
  v13 = sub_10005D81C((uint64_t *)(v0 + 16), 0, 0, v8, 0, (uint64_t)v17, 0, v7, v5, v6, v4);
  objc_msgSend(v13, "setSharingStyle:", 0);
  if (*(unsigned __int8 *)(v16 + 48) == 255)
  {
    objc_msgSend(v13, "setAllowsCustomPresentationStyle:", 1);
    objc_msgSend(v13, "setModalPresentationStyle:", 2);
  }
  v14 = *(_QWORD *)(v0 + 136);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v13, 1, (id)0xF, (void **)1, 0, 0);

  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *sub_100064950(uint64_t *a1)
{
  sub_100064984(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

uint64_t sub_100064984(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;

  if (result)
  {
    v9 = result;
    swift_bridgeObjectRetain(a7);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(a3);
    return swift_bridgeObjectRetain(a5);
  }
  return result;
}

uint64_t sub_1000649D4()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000649F8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10005E14C(a1, a2, a3, a4, (_QWORD *)(v4 + 16));
}

uint64_t sub_100064A00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100064A10(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100064A18(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Metrics.Event.Action(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100064A54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  v3 = *(unsigned __int8 *)(v2 + 64);
  if (v3 != 255)
    sub_100064AA4(*(id *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), v3);
  if (*(_QWORD *)(v2 + 72))
    swift_release(*(_QWORD *)(v2 + 80));
  return swift_deallocObject(v2, 88, 7);
}

void sub_100064AA4(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 == 2)
  {
    swift_unknownObjectRelease(a1);
  }
  else if (a6 <= 1u)
  {

  }
}

uint64_t sub_100064AC8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PresentationSource(a2, a1);
  return a2;
}

uint64_t sub_100064B04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100064B28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100064B4C(uint64_t a1)
{
  destroy for PresentationSource(a1, (uint64_t)&type metadata for PresentationSource);
  return a1;
}

uint64_t sub_100064B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

double sub_100064BFC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10005D1B0(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100064C48(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

id sub_100064C60@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_10005D134(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_100064C78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100064CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_100064D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_10119E4C4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_10005D33C(a1, v6, v7, v8, v9);
}

uint64_t sub_100064E08(uint64_t a1, uint64_t a2, __n128 a3)
{
  assignWithTake for PresentationSource(a2, a1, a3);
  return a2;
}

uint64_t sub_100064E4C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  if (*(_QWORD *)(v0 + 96))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));

  swift_unknownObjectWeakDestroy(v0 + 152, v1);
  v2 = *(unsigned __int8 *)(v0 + 200);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), v2);
  if (*(_QWORD *)(v0 + 208))
    swift_release(*(_QWORD *)(v0 + 216));
  return swift_deallocObject(v0, 224, 7);
}

uint64_t sub_100064EF0(uint64_t a1, uint64_t a2)
{
  initializeWithTake for PresentationSource(a2, a1);
  return a2;
}

void sub_100064F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_10005C980(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(void **)(v5 + 24), *(void **)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(void **)(v5 + 56), *(void **)(v5 + 64), v5 + 72, *(_QWORD *)(v5 + 112), *(void **)(v5 + 120), *(_BYTE *)(v5 + 128), *(_QWORD *)(v5 + 136), *(_BYTE *)(v5 + 144), v5 + 152);
}

uint64_t sub_100064F90()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  if (*(_QWORD *)(v0 + 80))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));

  swift_unknownObjectWeakDestroy(v0 + 144, v1);
  v2 = *(unsigned __int8 *)(v0 + 192);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v2);
  if (*(_QWORD *)(v0 + 200))
    swift_release(*(_QWORD *)(v0 + 208));
  return swift_deallocObject(v0, 216, 7);
}

double sub_10006502C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10005CCCC(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(void **)(v2 + 48), v2 + 56, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(void **)(v2 + 112), *(_BYTE *)(v2 + 120), *(_QWORD *)(v2 + 128), *(_BYTE *)(v2 + 136), v2 + 144);
}

uint64_t sub_100065088()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  if (*(_QWORD *)(v0 + 88))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));

  swift_unknownObjectWeakDestroy(v0 + 152, v1);
  v2 = *(unsigned __int8 *)(v0 + 200);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), v2);
  if (*(_QWORD *)(v0 + 208))
    swift_release(*(_QWORD *)(v0 + 216));
  return swift_deallocObject(v0, 224, 7);
}

uint64_t sub_10006512C()
{
  uint64_t v0;

  return sub_10005CEE8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 56), v0 + 64, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(void **)(v0 + 120), *(_BYTE *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144), v0 + 152);
}

_QWORD *sub_100065184(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[7];
  v5 = a1[9];
  v6 = (void *)a1[10];
  v7 = a1[12];
  swift_bridgeObjectRelease(a1[14]);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);

  return a1;
}

id *sub_100065200(id *a1)
{

  return a1;
}

uint64_t sub_100065228(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100007E8C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006526C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100065298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10005BC5C(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1000652A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000652C4(void *a1, char a2)
{
  uint64_t v2;

  sub_10005BD70(a1, a2 & 1, *(void (**)(Class, _QWORD))(v2 + 16));
}

void sub_1000652D0(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_errorRelease();
  else

}

uint64_t sub_1000652DC(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

ValueMetadata *type metadata accessor for ClarityUIMusic()
{
  return &type metadata for ClarityUIMusic;
}

void sub_100065360()
{
  qword_10124C6E0 = 0x404F800000000000;
}

void sub_100065374()
{
  qword_10124C6E8 = 0x4044000000000000;
}

uint64_t sub_100065384()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124C6F0);
  sub_100048B14(v0, (uint64_t)qword_10124C6F0);
  v1 = (uint64_t *)String.musicSubsystem.unsafeMutableAddressor();
  v2 = *v1;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  return Logger.init(subsystem:category:)(v2, v3, 0x5579746972616C43, 0xEE00636973754D49);
}

uint64_t sub_100065418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  NSString v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;

  v1 = v0;
  v37 = sub_100007E8C(&qword_10119E9D0);
  v2 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_10119E648);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v37 - v9;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = 0;
  v15 = v1 + OBJC_IVAR____TtC5Music25PreviewPlaybackController__isPreviewing;
  LOBYTE(v39) = 0;
  Published.init(initialValue:)(&v39, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v15, v14, v11);
  v16 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Music25PreviewPlaybackController_playbackFinishedHandler);
  *v16 = 0;
  v16[1] = 0;
  v17 = OBJC_IVAR____TtC5Music25PreviewPlaybackController_maxUpsellDisplays;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music25PreviewPlaybackController_maxUpsellDisplays) = 5;
  v18 = OBJC_IVAR____TtC5Music25PreviewPlaybackController_previewUpsellTriggerCountPerContainer;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music25PreviewPlaybackController_previewUpsellTriggerCountPerContainer) = 3;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music25PreviewPlaybackController____lazy_storage___containerPreviewCountDictionary) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music25PreviewPlaybackController____lazy_storage___player) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music25PreviewPlaybackController_bindings) = _swiftEmptyArrayStorage;
  v19 = v1 + OBJC_IVAR____TtC5Music25PreviewPlaybackController__context;
  v20 = type metadata accessor for PreviewPlaybackController.Context(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
  sub_10004A160((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_10119E648);
  Published.init(initialValue:)(v8, v5);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_10119E648);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v19, v4, v37);
  v21 = *BagProvider.shared.unsafeMutableAddressor();
  swift_retain(v21);
  v22 = (void *)BagProvider.bag.getter();
  swift_release(v21);
  if (!v22)
    return v1;
  v23 = off_10119E5A0;
  swift_bridgeObjectRetain();
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v22, "dictionaryForBagKey:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

  if (!v25
    || (v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v25, v27 = sub_100050AA8(v26), swift_bridgeObjectRelease(v26), !v27))
  {

    return v1;
  }
  if (*(_QWORD *)(v27 + 16))
  {
    v28 = off_10119E5B0;
    v29 = qword_10119E5A8;
    swift_bridgeObjectRetain();
    v30 = sub_10079C2C4(v29, (uint64_t)v28);
    if ((v31 & 1) != 0)
    {
      sub_10004FA40(*(_QWORD *)(v27 + 56) + 32 * v30, (uint64_t)&v39);
    }
    else
    {
      v39 = 0u;
      v40 = 0u;
    }
    swift_bridgeObjectRelease(v28);
    if (*((_QWORD *)&v40 + 1))
    {
      if ((swift_dynamicCast(&v38, &v39, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
        *(_QWORD *)(v1 + v17) = v38;
      if (*(_QWORD *)(v27 + 16))
        goto LABEL_15;
      goto LABEL_18;
    }
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  sub_10004FF60((uint64_t)&v39, &qword_10119DCC0);
  if (*(_QWORD *)(v27 + 16))
  {
LABEL_15:
    v33 = off_10119E5C0;
    v34 = qword_10119E5B8;
    swift_bridgeObjectRetain();
    v35 = sub_10079C2C4(v34, (uint64_t)v33);
    if ((v36 & 1) != 0)
    {
      sub_10004FA40(*(_QWORD *)(v27 + 56) + 32 * v35, (uint64_t)&v39);
    }
    else
    {
      v39 = 0u;
      v40 = 0u;
    }
    swift_bridgeObjectRelease(v33);
    goto LABEL_21;
  }
LABEL_18:
  v39 = 0u;
  v40 = 0u;
LABEL_21:
  swift_bridgeObjectRelease(v27);

  if (*((_QWORD *)&v40 + 1))
  {
    if ((swift_dynamicCast(&v38, &v39, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
      *(_QWORD *)(v1 + v18) = v38;
  }
  else
  {
    sub_10004FF60((uint64_t)&v39, &qword_10119DCC0);
  }
  return v1;
}

uint64_t sub_10006585C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for PreviewPlaybackController(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_100065418();
  qword_10124C708 = v1;
  return result;
}

uint64_t sub_100065898()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EA8330);
  v2 = swift_getKeyPath(&unk_100EA8358);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_100065908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t KeyPath;
  uint64_t v19;
  __n128 v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_10119E648);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for PreviewPlaybackController.Context(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (double *)((char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(double *)&a2 != 0.0)
  {
    v28 = a1;
    v29 = a2;
    KeyPath = swift_getKeyPath(&unk_100EA8378);
    v19 = swift_getKeyPath(&unk_100EA83A0);
    static Published.subscript.getter(v13, v2, KeyPath, v19);
    swift_release(v19);
    v20 = swift_release(KeyPath);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v15 + 48))(v13, 1, v14, v20) == 1)
    {
      sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_10119E648);
LABEL_12:
      *(double *)&a2 = 0.0;
      return a2;
    }
    sub_10005B6C0((uint64_t)v13, (uint64_t)v17, type metadata accessor for PreviewPlaybackController.Context);
    sub_10006A148((uint64_t)v17 + *(int *)(v14 + 24), (uint64_t)v7);
    if (swift_getEnumCaseMultiPayload(v7, v5) == 1)
    {
      sub_10005B748((uint64_t)v17, type metadata accessor for PreviewPlaybackController.Context);
      v21 = type metadata accessor for PreviewPlaybackController.Context.Source;
      v22 = (uint64_t)v7;
LABEL_11:
      sub_10005B748(v22, v21);
      goto LABEL_12;
    }
    v24 = v30;
    v23 = v31;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v10, v7, v31);
    v25 = MusicItem.contains(_:)(v28, v29, v23, &protocol witness table for Song);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v23);
    if ((v25 & 1) == 0)
    {
      v21 = type metadata accessor for PreviewPlaybackController.Context;
      v22 = (uint64_t)v17;
      goto LABEL_11;
    }
    v26 = *(_QWORD *)((char *)v17 + *(int *)(v14 + 32));
    if (v26 != 2 && v26)
    {
      sub_10005B748((uint64_t)v17, type metadata accessor for PreviewPlaybackController.Context);
      *(double *)&a2 = 0.0;
    }
    else
    {
      *(double *)&a2 = 1.0 - v17[1] / *v17;
      sub_10005B748((uint64_t)v17, type metadata accessor for PreviewPlaybackController.Context);
    }
  }
  return a2;
}

void sub_100065BF0(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  void **v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _BYTE v46[4];
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = sub_100007E8C((uint64_t *)&unk_10119E648);
  v5 = __chkstk_darwin(v4);
  v7 = &v46[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v46[-v8];
  v10 = type metadata accessor for Song(0);
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  __chkstk_darwin(v10);
  v12 = &v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = __chkstk_darwin(v13);
  v17 = &v46[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v19 = (void **)&v46[-v18];
  v50 = a1;
  sub_10006A148(a1, (uint64_t)&v46[-v18]);
  if (swift_getEnumCaseMultiPayload(v19, v13) == 1)
  {
    v20 = a2;
    v21 = *v19;
    v22 = MPModelObject.bestIdentifier(for:)(3, 2u);
    if (v23)
    {
      v24 = v22;
      v25 = v23;
      sub_10006A148(v50, (uint64_t)v17);
      v26 = *(unsigned __int8 *)(v14 + 80);
      v27 = v49;
      v28 = (v26 + 40) & ~v26;
      v29 = v28 + v15;
      v30 = (_QWORD *)swift_allocObject(&unk_1010AF558, v29 + 1, v26 | 7);
      v30[2] = v24;
      v30[3] = v25;
      v30[4] = v27;
      sub_10005B6C0((uint64_t)v17, (uint64_t)v30 + v28, type metadata accessor for PreviewPlaybackController.Context.Source);
      *((_BYTE *)v30 + v29) = v20;
      swift_bridgeObjectRetain();
      swift_retain(v27);
      sub_10006A1F0(v24, v25, (uint64_t)sub_10006AAE4, (uint64_t)v30);
      swift_release(v30);
      swift_bridgeObjectRelease(v25);
    }

  }
  else
  {
    v31 = (*(uint64_t (**)(_BYTE *, void **, uint64_t))(v51 + 32))(v12, v19, v52);
    v32 = Song.catalogID.getter(v31);
    if (v33)
    {
      v35 = v33;
      v48 = v32;
      v36 = type metadata accessor for PreviewPlaybackController.Context(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v9, 1, 1, v36);
      KeyPath = swift_getKeyPath(&unk_100EA8378);
      v38 = swift_getKeyPath(&unk_100EA83A0);
      v47 = a2;
      v39 = v49;
      v40 = v38;
      sub_10004A160((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_10119E648);
      swift_retain(v39);
      static Published.subscript.setter(v7, v39, KeyPath, v40);
      sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_10119E648);
      sub_10006A148(v50, (uint64_t)v17);
      v41 = *(unsigned __int8 *)(v14 + 80);
      v42 = (v41 + 40) & ~v41;
      v43 = v42 + v15;
      v44 = (_QWORD *)swift_allocObject(&unk_1010AF530, v42 + v15 + 1, v41 | 7);
      v45 = v48;
      v44[2] = v48;
      v44[3] = v35;
      v44[4] = v39;
      sub_10005B6C0((uint64_t)v17, (uint64_t)v44 + v42, type metadata accessor for PreviewPlaybackController.Context.Source);
      *((_BYTE *)v44 + v43) = v47;
      swift_retain(v39);
      swift_bridgeObjectRetain();
      sub_10006A1F0(v45, v35, (uint64_t)sub_10006AAE4, (uint64_t)v44);
      swift_release(v44);
      v34 = swift_bridgeObjectRelease(v35);
    }
    (*(void (**)(_BYTE *, uint64_t, __n128))(v51 + 8))(v12, v52, v34);
  }
}

void sub_100065F4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, int a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  NSString v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  id v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  id v52;

  v49 = a7;
  v46 = a5;
  v47 = a6;
  v8 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  v48 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v48 + 64);
  __chkstk_darwin(v8);
  v50 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v10);
  v51 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = __chkstk_darwin(v15);
  v19 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v43 - v20;
  if (!a1)
    return;
  v52 = a1;
  if (!objc_msgSend(v52, "isFinalResponse")
    || (v22 = String._bridgeToObjectiveC()(),
        v23 = objc_msgSend(v52, "storeItemMetadataForItemIdentifier:", v22),
        v22,
        !v23))
  {
LABEL_9:

    return;
  }
  v24 = sub_10006A3D8(v23);
  if (!v24)
  {

    goto LABEL_9;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, "previewURL");
  if (v26)
  {
    v27 = v26;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v26);

    v28 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v28(v14, v19, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      v28(v21, v14, v15);
      v29 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v51, 1, 1, v29);
      v30 = swift_allocObject(&unk_1010AF490, 24, 7);
      v45 = v28;
      v31 = v25;
      v32 = v30;
      v44 = v30;
      swift_weakInit(v30 + 16, v46);
      sub_10006A148((uint64_t)v47, v50);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
      type metadata accessor for MainActor(0);
      swift_retain(v32);
      v47 = v31;
      v46 = static MainActor.shared.getter(v33);
      v34 = *(unsigned __int8 *)(v48 + 80);
      v35 = (v34 + 48) & ~v34;
      v36 = v35 + v9;
      v37 = *(unsigned __int8 *)(v16 + 80);
      v38 = (v37 + v35 + v9 + 1) & ~v37;
      v39 = (_QWORD *)swift_allocObject(&unk_1010AF5A8, v38 + v17, v34 | v37 | 7);
      v39[2] = v46;
      v39[3] = &protocol witness table for MainActor;
      v40 = v44;
      v41 = v47;
      v39[4] = v44;
      v39[5] = v41;
      sub_10005B6C0(v50, (uint64_t)v39 + v35, type metadata accessor for PreviewPlaybackController.Context.Source);
      *((_BYTE *)v39 + v36) = v49;
      v45((char *)v39 + v38, v19, v15);
      swift_release(v40);
      v42 = sub_100166D14(v51, (uint64_t)&unk_10119EA10, (uint64_t)v39);

      swift_release(v42);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }

  sub_10004FF60((uint64_t)v14, &qword_10119E460);
}

uint64_t sub_10006635C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v8 + 96) = a7;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 64) = a8;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_10119E648) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 72) = swift_task_alloc(v9);
  *(_QWORD *)(v8 + 80) = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 88) = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_100066404, v12, v13);
}

uint64_t sub_100066404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 88));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v5 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD **)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 56);
    v7 = *(_BYTE *)(v0 + 96);
    objc_msgSend(*(id *)(v0 + 48), "duration");
    v9 = v8;
    v10 = (int *)type metadata accessor for PreviewPlaybackController.Context(0);
    sub_10006A148(v6, (uint64_t)v4 + v10[6]);
    v11 = v10[7];
    *(_QWORD *)((char *)v4 + v10[8]) = 1;
    *v4 = v9;
    v4[1] = v9;
    *((_BYTE *)v4 + v11) = v7;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(*((_QWORD *)v10 - 1) + 56))(v4, 0, 1, v10);
    KeyPath = swift_getKeyPath(&unk_100EA8378);
    v13 = swift_getKeyPath(&unk_100EA83A0);
    sub_10004A160((uint64_t)v4, v5, (uint64_t *)&unk_10119E648);
    swift_retain(v3);
    static Published.subscript.setter(v5, v3, KeyPath, v13);
    sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_10119E648);
    sub_100066568();
    swift_release(v3);
  }
  v14 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100066568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  NSURL *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_allocWithZone((Class)AVPlayerItem);
  URL._bridgeToObjectiveC()(v6);
  v8 = v7;
  v9 = objc_msgSend(v5, "initWithURL:", v7);

  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010AF490, 24, 7);
  swift_weakInit(v11 + 16, v1);
  v12 = (_QWORD *)swift_allocObject(&unk_1010AF508, 48, 7);
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v11;
  v12[5] = v9;
  v13 = v9;
  v14 = sub_100166D34((uint64_t)v4, (uint64_t)&unk_10119EA00, (uint64_t)v12);
  swift_release(v14);
  v15 = sub_100067938();
  objc_msgSend(v15, "replaceCurrentItemWithPlayerItem:", v13);

  sub_100066E78();
}

uint64_t sub_1000666BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_1000666D8, 0, 0);
}

uint64_t sub_1000666D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    v3 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 72) = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    return swift_task_switch(sub_10006678C, v5, v6);
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10006678C()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 56), "asset", swift_release(*(_QWORD *)(v0 + 72)).n128_f64[0]);
  *(_QWORD *)(v0 + 80) = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_10119E63C);
  *(_QWORD *)(v0 + 88) = v2;
  *v2 = v0;
  v2[1] = sub_100066804;
  return sub_100066884((uint64_t)v1);
}

uint64_t sub_100066804()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(*(_QWORD *)v0 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));

  swift_release(v2);
  return swift_task_switch(sub_100066868, 0, 0);
}

uint64_t sub_100066868()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 64) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100066884(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[7] = a1;
  v2[8] = v1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000668E0, 0, 0);
}

uint64_t sub_1000668E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_100007E8C(&qword_10119E9E0);
  v1 = static AVPartialAsyncProperty<A>.duration.getter();
  *(_QWORD *)(v0 + 80) = v1;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
  *(_QWORD *)(v0 + 88) = v2;
  *v2 = v0;
  v2[1] = sub_100066960;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 16, v1);
}

uint64_t sub_100066960()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100066AD8;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 80));
    v4 = sub_1000669CC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000669CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(_QWORD *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 1, 1, v5);
  v7 = swift_allocObject(&unk_1010AF490, 24, 7);
  swift_weakInit(v7 + 16, v2);
  type metadata accessor for MainActor(0);
  v8 = swift_retain(v7);
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_1010AF4E0, 64, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  v10[5] = v3;
  v10[6] = v6;
  v10[7] = v4;
  swift_release(v7);
  v11 = sub_100166D34(v1, (uint64_t)&unk_10119E9F0, (uint64_t)v10);
  swift_release(v11);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100066AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  swift_release(*(_QWORD *)(v0 + 80));
  if (qword_10119B880 != -1)
    swift_once(&qword_10119B880, sub_10006904C);
  v1 = *(_QWORD *)(v0 + 96);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)static Logger.previewPlaybackController);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 96);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v15 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 40) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C(&qword_1011A14B0);
    v11 = String.init<A>(describing:)(v0 + 40, v10);
    v13 = v12;
    *(_QWORD *)(v0 + 48) = sub_100322200(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to fetch duration on preview asset with error =%{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 96));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100066CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v7[9] = a1;
  v8 = type metadata accessor for MainActor(0);
  v7[14] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100066D4C, v10, v11);
}

uint64_t sub_100066D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;
  uint64_t v4;
  void (*v5)(_QWORD *);
  double *v6;
  double *v7;
  uint64_t v8;
  int v9;
  BOOL v10;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 112));
  v1 += 16;
  swift_beginAccess(v1, v0 + 48, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = sub_100067E78((_QWORD *)(v0 + 16));
    v7 = v6;
    v8 = type metadata accessor for PreviewPlaybackController.Context(0);
    v9 = (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
    v10 = v9 != 0;
    if (!v9)
      *v7 = CMTime.seconds.getter(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    ((void (*)(uint64_t, _QWORD))v5)(v0 + 16, 0);
    v3 = swift_release(v4);
  }
  else
  {
    v10 = 1;
  }
  **(_BYTE **)(v0 + 72) = v10;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t Logger.previewPlaybackController.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_10119B880 != -1)
    swift_once(&qword_10119B880, sub_10006904C);
  v0 = type metadata accessor for Logger(0);
  return sub_100048B14(v0, (uint64_t)static Logger.previewPlaybackController);
}

double sub_100066E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char v42;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A8EE0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B85B0);
  v40 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_10119E648);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100EA8378);
  v16 = swift_getKeyPath(&unk_100EA83A0);
  static Published.subscript.getter(v14, v1, KeyPath, v16);
  swift_release(v16);
  swift_release(KeyPath);
  v17 = type metadata accessor for PreviewPlaybackController.Context(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v14, 1, v17))
  {
    sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_10119E648);
  }
  else
  {
    v18 = *(_QWORD *)((char *)v14 + *(int *)(v17 + 32));
    sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_10119E648);
    if (v18 == 2)
      return result;
  }
  v20 = sub_100067938();
  objc_msgSend(v20, "play");

  v21 = swift_getKeyPath(&unk_100EA8330);
  v22 = swift_getKeyPath(&unk_100EA8358);
  v42 = 1;
  swift_retain(v1);
  static Published.subscript.setter(&v42, v1, v21, v22);
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  (*(void (**)(void))(*(_QWORD *)qword_10124C788 + 456))();
  v23 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v41 = (id)static OS_dispatch_queue.main.getter(v23, v24, v25, v26, v27, v28, v29, v30);
  v31 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v4, 1, 1, v31);
  v32 = sub_100049F28((unint64_t *)&unk_1011A8F00, (uint64_t *)&unk_1011A8EE0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v33 = sub_10006A92C();
  Publisher.receive<A>(on:options:)(&v41, v4, v5, v23, v32, v33);
  sub_10004FF60((uint64_t)v4, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v34 = swift_allocObject(&unk_1010AF490, 24, 7);
  swift_weakInit(v34 + 16, v1);
  v35 = sub_100049F28((unint64_t *)&unk_1011A8F10, &qword_1011B85B0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v36 = Publisher<>.sink(receiveValue:)(sub_10006A984, v34, v9, v35);
  v37 = swift_release(v34);
  (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v11, v9, v37);
  v38 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = v36;
  *(_QWORD *)&result = swift_release(v38).n128_u64[0];
  return result;
}

double sub_100067228(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v4 = sub_100007E8C((uint64_t *)&unk_10119E648);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *a1;
  v8 = a2 + 16;
  swift_beginAccess(v8, v21, 0, 0);
  Strong = swift_weakLoadStrong(v8);
  if (Strong)
  {
    v11 = Strong;
    KeyPath = swift_getKeyPath(&unk_100EA8378);
    v13 = swift_getKeyPath(&unk_100EA83A0);
    static Published.subscript.getter(v6, v11, KeyPath, v13);
    swift_release(v13);
    swift_release(KeyPath);
    swift_release(v11);
    v14 = type metadata accessor for PreviewPlaybackController.Context(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v6, 1, v14))
    {
      sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_10119E648);
      return result;
    }
    v15 = *(_QWORD *)((char *)v6 + *(int *)(v14 + 32));
    sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_10119E648);
    v16 = v15 != 2 || v7 == 0;
    if (!v16 && objc_msgSend(v7, "state") == (id)2)
    {
      if (objc_msgSend(v7, "isSharedListeningSession"))
      {
        swift_beginAccess(v8, v20, 0, 0);
        v17 = swift_weakLoadStrong(v8);
        if (!v17)
          return result;
        v18 = v17;
        sub_10006754C();
      }
      else
      {
        swift_beginAccess(v8, v20, 0, 0);
        v19 = swift_weakLoadStrong(v8);
        if (!v19)
          return result;
        v18 = v19;
        sub_1000673F4();
      }
      *(_QWORD *)&result = swift_release(v18).n128_u64[0];
    }
  }
  return result;
}

double sub_1000673F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  double result;
  void (*v10)(_QWORD *);
  char *v11;
  char *v12;
  id v13;
  _QWORD v14[4];

  v1 = sub_100007E8C((uint64_t *)&unk_10119E648);
  __chkstk_darwin(v1);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EA8378);
  v5 = swift_getKeyPath(&unk_100EA83A0);
  static Published.subscript.getter(v3, v0, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = type metadata accessor for PreviewPlaybackController.Context(0);
  v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  if (v7(v3, 1, v6))
  {
    sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_10119E648);
  }
  else
  {
    v8 = *(_QWORD *)&v3[*(int *)(v6 + 32)];
    sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_10119E648);
    if (!v8)
      return result;
  }
  v10 = sub_100067E78(v14);
  v12 = v11;
  if (!v7(v11, 1, v6))
    *(_QWORD *)&v12[*(int *)(v6 + 32)] = 0;
  ((void (*)(_QWORD *, _QWORD))v10)(v14, 0);
  v13 = sub_100067938();
  objc_msgSend(v13, "pause");

  return sub_100067F90();
}

double sub_10006754C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t *v16;
  void (*v17)(__n128);
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_10119E648);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v27 - v7;
  __chkstk_darwin(v6);
  v10 = (uint64_t *)((char *)&v27 - v9);
  KeyPath = swift_getKeyPath(&unk_100EA8378);
  v12 = swift_getKeyPath(&unk_100EA83A0);
  static Published.subscript.getter(v10, v0, KeyPath, v12);
  swift_release(v12);
  swift_release(KeyPath);
  v13 = type metadata accessor for PreviewPlaybackController.Context(0);
  v14 = *(_QWORD *)(v13 - 8);
  LODWORD(v12) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_10119E648);
  if ((_DWORD)v12 != 1)
  {
    v16 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Music25PreviewPlaybackController_playbackFinishedHandler);
    v17 = *(void (**)(__n128))(v0 + OBJC_IVAR____TtC5Music25PreviewPlaybackController_playbackFinishedHandler);
    if (v17)
    {
      v18 = v16[1];
      v19 = swift_retain(v18);
      v17(v19);
      sub_10004BA30((uint64_t)v17, v18);
      v20 = *v16;
    }
    else
    {
      v20 = 0;
    }
    v21 = v16[1];
    *v16 = 0;
    v16[1] = 0;
    v22 = sub_10004BA30(v20, v21);
    v23 = (void *)sub_100067938(v22);
    objc_msgSend(v23, "replaceCurrentItemWithPlayerItem:", 0);

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v8, 1, 1, v13);
    v24 = swift_getKeyPath(&unk_100EA8378);
    v25 = swift_getKeyPath(&unk_100EA83A0);
    sub_10004A160((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_10119E648);
    swift_retain(v1);
    static Published.subscript.setter(v5, v1, v24, v25);
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_10119E648);
    v26 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v1 + 16) = 0;
    swift_release(v26);
    return sub_100067F90();
  }
  return result;
}

BOOL sub_10006776C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;

  v3 = v2;
  v6 = sub_1000678D0();
  swift_retain(v3);
  v7 = sub_10006A73C(v6, v3);
  swift_release(v3);
  v8 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRelease(v7);
  if (v8 >= *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music25PreviewPlaybackController_maxUpsellDisplays) || a2 == 0)
    return 0;
  swift_bridgeObjectRetain_n(a2, 2);
  v11 = sub_1000678D0();
  v12 = v11;
  if (*(_QWORD *)(v11 + 16))
  {
    v13 = sub_10079C2C4(a1, a2);
    if ((v14 & 1) != 0)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v12);
      v16 = __OFADD__(v15, 1);
      v17 = v15 + 1;
      if (!v16)
        goto LABEL_13;
      __break(1u);
    }
  }
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(v12);
  v17 = 1;
LABEL_13:
  v18 = sub_1000678D0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  sub_1005ECA70(v17, a1, a2, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(0x8000000000000000);
  v20 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtC5Music25PreviewPlaybackController____lazy_storage___containerPreviewCountDictionary);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music25PreviewPlaybackController____lazy_storage___containerPreviewCountDictionary) = v18;
  swift_bridgeObjectRelease(v20);
  return v17 == *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music25PreviewPlaybackController_previewUpsellTriggerCountPerContainer);
}

unint64_t sub_1000678D0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC5Music25PreviewPlaybackController____lazy_storage___containerPreviewCountDictionary;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC5Music25PreviewPlaybackController____lazy_storage___containerPreviewCountDictionary))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC5Music25PreviewPlaybackController____lazy_storage___containerPreviewCountDictionary);
  }
  else
  {
    v2 = sub_10004251C((uint64_t)_swiftEmptyArrayStorage);
    v3 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v3);
  }
  swift_bridgeObjectRetain();
  return v2;
}

id sub_100067938()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music25PreviewPlaybackController____lazy_storage___player;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music25PreviewPlaybackController____lazy_storage___player);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Music25PreviewPlaybackController____lazy_storage___player);
  }
  else
  {
    v4 = sub_100067998(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100067998(uint64_t a1)
{
  id v2;
  unsigned int v3;
  void **v4;
  void **v5;
  void **v6;
  uint64_t v7;
  __n128 v8;
  unsigned int v9;
  void **v10;
  void **v11;
  void **v12;
  uint64_t v13;
  __n128 v14;
  id v15;
  void **value;
  Swift::Int32 timescale;
  Swift::Int64 epoch;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  double v31;
  id v32;
  void **aBlock;
  unint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t *);
  void *v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  __C::CMTime v40;

  v2 = objc_msgSend((id)objc_opt_self(AVAudioSession), "auxiliarySession");
  aBlock = 0;
  v3 = objc_msgSend(v2, "setParticipatesInNowPlayingAppPolicy:error:", 0, &aBlock);
  v4 = aBlock;
  if (v3)
  {
    v5 = aBlock;
  }
  else
  {
    v6 = aBlock;
    v7 = _convertNSErrorToError(_:)(v4);

    swift_willThrow(v8);
    swift_errorRelease(v7);
  }
  aBlock = 0;
  v9 = objc_msgSend(v2, "setCategory:error:", AVAudioSessionCategoryPlayback, &aBlock);
  v10 = aBlock;
  if (v9)
  {
    v11 = aBlock;
  }
  else
  {
    v12 = aBlock;
    v13 = _convertNSErrorToError(_:)(v10);

    swift_willThrow(v14);
    swift_errorRelease(v13);
  }
  v15 = objc_msgSend(objc_allocWithZone((Class)AVPlayer), "init");
  objc_msgSend(v15, "setAudioSession:", v2);
  v40 = CMTime.init(seconds:preferredTimescale:)(0.5, 1000000000);
  value = (void **)v40.value;
  timescale = v40.timescale;
  epoch = v40.epoch;
  v19 = HIDWORD(*(_QWORD *)&v40.timescale);
  v20 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v28 = (void *)static OS_dispatch_queue.main.getter(v20, v21, v22, v23, v24, v25, v26, v27);
  v29 = swift_allocObject(&unk_1010AF490, 24, 7);
  swift_weakInit(v29 + 16, a1);
  v38 = sub_10006A1E8;
  v39 = v29;
  aBlock = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_100067F3C;
  v37 = &unk_1010AF4A8;
  v30 = _Block_copy(&aBlock);
  *(_QWORD *)&v31 = swift_release(v39).n128_u64[0];
  aBlock = value;
  v35 = __PAIR64__(v19, timescale);
  v36 = (uint64_t (*)(uint64_t, uint64_t *))epoch;
  v32 = objc_msgSend(v15, "addPeriodicTimeObserverForInterval:queue:usingBlock:", &aBlock, v28, v30, v31);
  _Block_release(v30);

  _bridgeAnyObjectToAny(_:)(&aBlock, v32);
  swift_unknownObjectRelease(v32);

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&aBlock);
  return v15;
}

void sub_100067C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  double v17;
  double v18;
  void (*v19)(_QWORD *);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  _QWORD v29[4];
  _BYTE v30[24];

  v8 = sub_100007E8C((uint64_t *)&unk_10119E648);
  __chkstk_darwin(v8);
  v10 = (double *)((char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  a4 += 16;
  swift_beginAccess(a4, v30, 0, 0);
  Strong = swift_weakLoadStrong(a4);
  if (Strong)
  {
    v12 = Strong;
    KeyPath = swift_getKeyPath(&unk_100EA8378);
    v14 = swift_getKeyPath(&unk_100EA83A0);
    static Published.subscript.getter(v10, v12, KeyPath, v14);
    swift_release(KeyPath);
    swift_release(v14);
    v15 = type metadata accessor for PreviewPlaybackController.Context(0);
    v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
    if (v16((uint64_t)v10, 1, v15))
    {
      swift_release(v12);
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_10119E648);
    }
    else
    {
      v17 = *v10;
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_10119E648);
      v18 = v17 - CMTime.seconds.getter(a1, a2, a3);
      v19 = sub_100067E78(v29);
      v21 = v20;
      if (!v16(v20, 1, v15))
        *(double *)(v21 + 8) = v18;
      ((void (*)(_QWORD *, _QWORD))v19)(v29, 0);
      v22 = sub_100067E78(v29);
      v24 = v23;
      v25 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v16)(v23, 1, v15);
      if (!(_DWORD)v25)
      {
        v26 = (void *)sub_100067938(v25);
        v27 = objc_msgSend(v26, "timeControlStatus");

        *(_QWORD *)(v24 + *(int *)(v15 + 32)) = v27;
      }
      ((void (*)(_QWORD *, _QWORD))v22)(v29, 0);
      if (v18 <= 0.0)
        sub_10006754C();
      swift_release(v12);
    }
  }
}

uint64_t sub_100067E14@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EA8378);
  v4 = swift_getKeyPath(&unk_100EA83A0);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(v4);
  return swift_release(KeyPath);
}

void (*sub_100067E78(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100EA8378);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100EA83A0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100067EF0;
}

void sub_100067EF0(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  v3 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release(v2);
  swift_release(v3);
  free(v1);
}

uint64_t sub_100067F3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v6(v2, v3, v4);
  return swift_release(v5);
}

double sub_100067F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  v4 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.userInitiated(_:), v7);
  v11 = (void *)static OS_dispatch_queue.global(qos:)(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  aBlock[4] = sub_10006A18C;
  v23 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010AF430;
  v12 = _Block_copy(aBlock);
  v13 = swift_retain(v0);
  static DispatchQoS.unspecified.getter(v13);
  v21 = _swiftEmptyArrayStorage;
  v14 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v16 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v15, v16, v1, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v3, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

uint64_t sub_1000681F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  unsigned int v12;
  void **v13;
  void **v14;
  void **v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  void **aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  uint64_t (*v40)();
  uint64_t v41;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v35 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)sub_100067938(v7);
  v11 = objc_msgSend(v10, "audioSession");

  aBlock = 0;
  v12 = objc_msgSend(v11, "setActive:withOptions:error:", 0, 1, &aBlock);

  v13 = aBlock;
  if (v12)
  {
    v14 = aBlock;
  }
  else
  {
    v15 = aBlock;
    v16 = _convertNSErrorToError(_:)(v13);

    swift_willThrow(v17);
    swift_errorRelease(v16);
  }
  v18 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v26 = (void *)static OS_dispatch_queue.main.getter(v18, v19, v20, v21, v22, v23, v24, v25, v34, v35, aBlock, v37, v38, v39, v40);
  v40 = sub_10006A1AC;
  v41 = a1;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_1001DBD98;
  v39 = &unk_1010AF458;
  v27 = _Block_copy(&aBlock);
  v28 = v41;
  swift_retain(a1);
  v29 = swift_release(v28);
  static DispatchQoS.unspecified.getter(v29);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v30 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v32 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v31, v32, v2, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v4, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1000684A0(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  char v5;

  KeyPath = swift_getKeyPath(&unk_100EA8330);
  v3 = swift_getKeyPath(&unk_100EA8358);
  v5 = 0;
  swift_retain(a1);
  return static Published.subscript.setter(&v5, a1, KeyPath, v3);
}

uint64_t sub_10006850C()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  swift_release(v0[2]);
  v1 = (char *)v0 + OBJC_IVAR____TtC5Music25PreviewPlaybackController__isPreviewing;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10004BA30(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Music25PreviewPlaybackController_playbackFinishedHandler), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Music25PreviewPlaybackController_playbackFinishedHandler + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC5Music25PreviewPlaybackController____lazy_storage___containerPreviewCountDictionary));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Music25PreviewPlaybackController_bindings));
  v3 = (char *)v0 + OBJC_IVAR____TtC5Music25PreviewPlaybackController__context;
  v4 = sub_100007E8C(&qword_10119E9D0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1000685D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for PreviewPlaybackController(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

double Actions.Preview.Context.init(song:playbackController:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  char *v23;
  uint64_t v24;
  __int128 v25;
  _OWORD *v26;
  double result;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD v32[2];
  __int128 v33;

  v29 = a2;
  v30 = a3;
  v31 = a4;
  v5 = type metadata accessor for Song(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v28 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v28 - v13;
  v15 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v28 = a1;
  v15((char *)&v28 - v13, a1, v5);
  v15(v12, a1, v5);
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = v17 + v7;
  v19 = v16 | 7;
  v20 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1010AF3F0, v20 + 8, v16 | 7);
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v22(v21 + v17, v12, v5);
  v23 = v28;
  *(_QWORD *)(v21 + v20) = v29;
  v22((uint64_t)v9, v23, v5);
  v24 = swift_allocObject(&unk_1010AF418, v18, v19);
  v22(v24 + v17, v9, v5);
  Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)((uint64_t)v14, (uint64_t)sub_100069120, v21, (uint64_t)sub_1000691C0, v24, v30, v5, (uint64_t)&protocol witness table for Song, v32);
  v25 = v32[1];
  v26 = v31;
  *v31 = v32[0];
  v26[1] = v25;
  result = *(double *)&v33;
  v26[2] = v33;
  return result;
}

unint64_t sub_1000687C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t (*v29)(__n128);
  __n128 v30;
  void *v31;
  double v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v42;
  uint64_t v44;
  _QWORD *v45;
  __n128 v46;
  char v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  char v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72[24];
  _QWORD v73[3];
  uint64_t v74;

  v71 = a1;
  v70 = type metadata accessor for ContentRating(0);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v67 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119EA28);
  __chkstk_darwin(v4);
  v69 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011B8D50);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v61 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v61 - v13;
  v15 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v61 - v20;
  static ApplicationCapabilities.shared.getter((uint64_t)v73);
  v22 = v74;
  if ((sub_10075BDAC(5u, v74) & 1) == 0)
  {
    v42 = 0xD000000000000016;
    sub_100065184(v73);
    return v42;
  }
  v23 = sub_10075BDAC(0, v22);
  v24 = sub_100065184(v73);
  if ((v23 & 1) == 0)
    return 0xD000000000000016;
  v25 = Song.catalogID.getter(v24);
  if (!v26)
    return 0xD000000000000012;
  v65 = v25;
  v66 = v26;
  v27 = (uint64_t *)(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v27, v72, 0, 0);
  v28 = *v27;
  if (!*v27
    || (v29 = *(uint64_t (**)(__n128))(*(_QWORD *)v28 + 432),
        v30 = swift_retain(v28),
        v31 = (void *)v29(v30),
        *(_QWORD *)&v32 = swift_release(v28).n128_u64[0],
        !v31))
  {
    v42 = 0x6F70736572206F4ELL;
    swift_bridgeObjectRelease(v66);
    return v42;
  }
  if ((objc_msgSend(v31, "isSharedListeningSession", v32) & 1) == 0)
  {

    swift_bridgeObjectRelease(v66);
    return 0xD00000000000001CLL;
  }
  v64 = v31;
  v33 = objc_msgSend(v31, "tracklist");
  v34 = objc_msgSend(v33, "playingItem");

  if (v34 && (v35 = objc_msgSend(v34, "metadataObject"), v34, v35))
  {
    v36 = objc_msgSend(v35, "innermostModelObject");

    v37 = v36;
    v62 = MPModelObject.bestIdentifier(for:)(3, 2u);
    v39 = v38;
    v63 = v37;

    if (v39)
    {
      v40 = v66;
      if (v62 == v65 && v39 == v66)
      {
        swift_bridgeObjectRelease(v39);
        swift_bridgeObjectRelease(v40);
LABEL_33:

        return 0xD00000000000001BLL;
      }
      LODWORD(v65) = _stringCompareWithSmolCheck(_:_:expecting:)(v62, v39, v65, v66, 0);
      swift_bridgeObjectRelease(v39);
      swift_bridgeObjectRelease(v40);
      if ((v65 & 1) != 0)
        goto LABEL_33;
      goto LABEL_24;
    }
  }
  else
  {
    v63 = 0;
  }
  swift_bridgeObjectRelease(v66);
LABEL_24:
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v44 = type metadata accessor for Song(0);
  v45 = Player.state<A>(for:)(v71, v44, (uint64_t)&protocol witness table for Song);
  (*(void (**)(_QWORD *))(*v45 + 304))(v45);
  v46 = swift_release(v45);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v16 + 104))(v19, enum case for MusicPlayer.PreviewCapabilityStatus.previewable(_:), v15, v46);
  v47 = static MusicPlayer.PreviewCapabilityStatus.== infix(_:_:)(v21, v19);
  v48 = *(void (**)(char *, uint64_t))(v16 + 8);
  v48(v19, v15);
  v48(v21, v15);
  if ((v47 & 1) != 0)
  {
    v49 = *ExplicitRestrictionsController.shared.unsafeMutableAddressor();
    swift_retain(v49);
    v50 = ExplicitRestrictionsController.explicitContentIsAllowed.getter();
    swift_release(v49);
    if ((v50 & 1) == 0)
    {
      Song.contentRating.getter(v51);
      v52 = v68;
      v53 = v70;
      (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v12, enum case for ContentRating.explicit(_:), v70);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v12, 0, 1, v53);
      v54 = v69;
      v55 = v69 + *(int *)(v4 + 48);
      sub_10004A160((uint64_t)v14, v69, &qword_1011B8D50);
      sub_10004A160((uint64_t)v12, v55, &qword_1011B8D50);
      v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
      if (v56(v54, 1, v53) == 1)
      {
        sub_10004FF60((uint64_t)v12, &qword_1011B8D50);
        sub_10004FF60((uint64_t)v14, &qword_1011B8D50);
        if (v56(v55, 1, v53) == 1)
        {
          sub_10004FF60(v54, &qword_1011B8D50);
LABEL_39:

          return 0xD00000000000002BLL;
        }
        goto LABEL_36;
      }
      sub_10004A160(v54, (uint64_t)v9, &qword_1011B8D50);
      if (v56(v55, 1, v53) == 1)
      {
        sub_10004FF60((uint64_t)v12, &qword_1011B8D50);
        sub_10004FF60((uint64_t)v14, &qword_1011B8D50);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v53);
LABEL_36:
        sub_10004FF60(v54, &qword_10119EA28);
        goto LABEL_37;
      }
      v57 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v67, v55, v53);
      v58 = sub_100048748(&qword_10119EA30, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t)&protocol conformance descriptor for ContentRating);
      v59 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v57, v53, v58);
      v60 = *(void (**)(char *, uint64_t))(v52 + 8);
      v60(v57, v53);
      sub_10004FF60((uint64_t)v12, &qword_1011B8D50);
      sub_10004FF60((uint64_t)v14, &qword_1011B8D50);
      v60(v9, v53);
      sub_10004FF60(v54, &qword_1011B8D50);
      if ((v59 & 1) != 0)
        goto LABEL_39;
    }
LABEL_37:

    return 0;
  }

  return 0xD00000000000001DLL;
}

uint64_t sub_100068F70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119B878 != -1)
    swift_once(&qword_10119B878, sub_10006585C);
  v5 = type metadata accessor for Song(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, a1, v5);
  swift_storeEnumTagMultiPayload(v4, v2, 0);
  sub_100065BF0((uint64_t)v4, 2);
  return sub_10005B748((uint64_t)v4, type metadata accessor for PreviewPlaybackController.Context.Source);
}

uint64_t sub_10006904C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.previewPlaybackController);
  sub_100048B14(v0, (uint64_t)static Logger.previewPlaybackController);
  return static Logger.music(_:)(0xD000000000000019, 0x8000000100EA8210);
}

uint64_t sub_1000690AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

unint64_t sub_100069120()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1000687C4(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100069160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000691C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Song(0) - 8) + 80);
  return sub_100068F70(v0 + ((v1 + 16) & ~v1));
}

uint64_t static Logger.previewPlaybackController.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119B880 != -1)
    swift_once(&qword_10119B880, sub_10006904C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048B14(v2, (uint64_t)static Logger.previewPlaybackController);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10006925C()
{
  return type metadata accessor for PreviewPlaybackController(0);
}

uint64_t type metadata accessor for PreviewPlaybackController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_10119E628, (uint64_t)&nominal type descriptor for PreviewPlaybackController);
}

void sub_100069278(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = "\b";
  sub_100069338();
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_100EA8268;
    v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[5] = "\b";
    v6[6] = "\b";
    v6[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    sub_10006938C(319);
    if (v5 <= 0x3F)
    {
      v6[8] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 9, v6, a1 + 80);
    }
  }
}

void sub_100069338()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1011C4B00)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1011C4B00);
  }
}

void sub_10006938C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10119E640)
  {
    v2 = sub_100044B54((uint64_t *)&unk_10119E648);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10119E640);
  }
}

_QWORD *sub_1000693E4(_OWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void **v8;
  void **v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    v7 = a3[6];
    v8 = (void **)((char *)a1 + v7);
    v9 = (void **)((char *)a2 + v7);
    v10 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = *v9;
      *v8 = *v9;
      v12 = v11;
      v13 = 1;
    }
    else
    {
      v15 = type metadata accessor for Song(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v8, v9, v15);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v13);
    v16 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_QWORD *)((char *)v4 + v16) = *(_QWORD *)((char *)a2 + v16);
  }
  return v4;
}

uint64_t type metadata accessor for PreviewPlaybackController.Context.Source(uint64_t a1)
{
  return sub_100055934(a1, qword_10119E998, (uint64_t)&nominal type descriptor for PreviewPlaybackController.Context.Source);
}

void sub_1000694E8(uint64_t a1, uint64_t a2)
{
  id *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (id *)(a1 + *(int *)(a2 + 24));
  v3 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  if (swift_getEnumCaseMultiPayload(v2, v3) == 1)
  {

  }
  else
  {
    v4 = type metadata accessor for Song(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  }
}

_OWORD *sub_10006954C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  void **v7;
  void **v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (void **)((char *)a1 + v6);
  v8 = (void **)((char *)a2 + v6);
  v9 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = *v8;
    *v7 = *v8;
    v11 = v10;
    v12 = 1;
  }
  else
  {
    v13 = type metadata accessor for Song(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v7, v8, v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v12);
  v14 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  return a1;
}

_QWORD *sub_100069610(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void **v7;
  void **v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (void **)((char *)a1 + v6);
    v8 = (void **)((char *)a2 + v6);
    sub_10005B748((uint64_t)a1 + v6, type metadata accessor for PreviewPlaybackController.Context.Source);
    v9 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = *v8;
      *v7 = *v8;
      v11 = v10;
      v12 = 1;
    }
    else
    {
      v13 = type metadata accessor for Song(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v7, v8, v13);
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v12);
  }
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_1000696F8(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  if (swift_getEnumCaseMultiPayload(v8, v9))
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for Song(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 0);
  }
  v11 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  return a1;
}

_OWORD *sub_1000697BC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_10005B748((uint64_t)a1 + v6, type metadata accessor for PreviewPlaybackController.Context.Source);
    v9 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
    if (swift_getEnumCaseMultiPayload(v8, v9))
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for Song(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload(v7, v9, 0);
    }
  }
  v11 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  return a1;
}

uint64_t sub_100069898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000698A4);
}

uint64_t sub_1000698A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) <= 2u)
    v9 = 2;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  v10 = v9 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) >= 2u)
    return v10;
  else
    return 0;
}

uint64_t sub_10006992C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100069938);
}

uint64_t sub_100069938(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  return result;
}

uint64_t type metadata accessor for PreviewPlaybackController.Context(uint64_t a1)
{
  return sub_100055934(a1, qword_10119E8E0, (uint64_t)&nominal type descriptor for PreviewPlaybackController.Context);
}

uint64_t sub_1000699C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for PreviewPlaybackController.Context.Source(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100EA8288;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_100069A4C(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v12);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = *a2;
      *(_QWORD *)a1 = *a2;
      v8 = v7;
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v13 = type metadata accessor for Song(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

void sub_100069B08(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {

  }
  else
  {
    v3 = type metadata accessor for Song(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

void **sub_100069B58(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = *a2;
    *a1 = *a2;
    v7 = v6;
    v8 = a1;
    v9 = a3;
    v10 = 1;
  }
  else
  {
    v11 = type metadata accessor for Song(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

void **sub_100069BE8(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for PreviewPlaybackController.Context.Source);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = *a2;
      *a1 = *a2;
      v7 = v6;
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v11 = type metadata accessor for Song(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void *initializeWithTake for LyricsLoader.Song(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for Song(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_100069D18(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for PreviewPlaybackController.Context.Source);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for Song(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t _s14descr1010FB5B1V6SourceOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t _s14descr1010FB5B1V6SourceOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_100069DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_100069DE4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t sub_100069E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void **v18;
  void *v19;
  void *v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v4 = type metadata accessor for Song(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  v9 = __chkstk_darwin(v8);
  v11 = (void **)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v13 = (char *)&v24 - v12;
  v14 = sub_100007E8C(&qword_10119E9D8);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (void **)&v17[*(int *)(v15 + 48)];
  sub_10006A148(a1, (uint64_t)v17);
  sub_10006A148(a2, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload(v17, v8) == 1)
  {
    sub_10006A148((uint64_t)v17, (uint64_t)v11);
    v19 = *v11;
    if (swift_getEnumCaseMultiPayload(v18, v8) == 1)
    {
      v20 = *v18;
      sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
      v21 = static NSObject.== infix(_:_:)(v19, v20);

LABEL_9:
      sub_10005B748((uint64_t)v17, type metadata accessor for PreviewPlaybackController.Context.Source);
      return v21 & 1;
    }

  }
  else
  {
    sub_10006A148((uint64_t)v17, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload(v18, v8) != 1)
    {
      (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v18, v4);
      v21 = static Song.== infix(_:_:)(v13, v7);
      v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v7, v4);
      v22(v13, v4);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
  }
  sub_10004FF60((uint64_t)v17, &qword_10119E9D8);
  v21 = 0;
  return v21 & 1;
}

BOOL sub_10006A094(double *a1, double *a2)
{
  int *v4;
  uint64_t v5;
  int v6;
  int v7;
  int v9;

  if (*a1 == *a2 && a1[1] == a2[1])
  {
    v4 = (int *)type metadata accessor for PreviewPlaybackController.Context(0);
    if ((sub_100069E54((uint64_t)a1 + v4[6], (uint64_t)a2 + v4[6]) & 1) != 0)
    {
      v5 = v4[7];
      v6 = *((unsigned __int8 *)a1 + v5);
      v7 = *((unsigned __int8 *)a2 + v5);
      if (v6 == 2)
      {
        if (v7 == 2)
          return *(_QWORD *)((char *)a1 + v4[8]) == *(_QWORD *)((char *)a2 + v4[8]);
      }
      else
      {
        v9 = (v7 ^ v6) & 1;
        if (v7 != 2 && v9 == 0)
          return *(_QWORD *)((char *)a1 + v4[8]) == *(_QWORD *)((char *)a2 + v4[8]);
      }
    }
  }
  return 0;
}

uint64_t sub_10006A148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006A18C()
{
  uint64_t v0;

  return sub_1000681F0(v0);
}

uint64_t sub_10006A194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006A1A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10006A1AC()
{
  uint64_t v0;

  return sub_1000684A0(v0);
}

uint64_t sub_10006A1C4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10006A1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100067C18(a1, a2, a3, v3);
}

void sub_10006A1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  Class v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  v8 = objc_msgSend(objc_allocWithZone((Class)MPStoreItemMetadataRequest), "init");
  objc_msgSend(v8, "setReason:", 2);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A6110);
  v10 = swift_allocObject(v9, 48, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "setItemIdentifiers:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  sub_10004A07C(0, &qword_10119E4D0, NSNumber_ptr);
  v12 = NSNumber.init(floatLiteral:)(10.0).super.super.isa;
  objc_msgSend(v8, "setTimeoutInterval:", v12);

  objc_msgSend(v8, "setPersonalizationStyle:", 2);
  objc_msgSend(v8, "setShouldIgnoreCache:", 0);
  v13 = objc_msgSend((id)objc_opt_self(MPStoreItemMetadataRequestController), "sharedStoreItemMetadataRequestController");
  v17[4] = a3;
  v18 = a4;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10004E2F4;
  v17[3] = &unk_1010AF570;
  v14 = _Block_copy(v17);
  v15 = v18;
  swift_retain(a4);
  v16 = objc_msgSend(v13, "getStoreItemMetadataForRequest:responseHandler:", v8, v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);

}

id sub_10006A3D8(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id result;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  unint64_t v32;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v31 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, "offers");
  if (v9)
  {
    v10 = v9;
    v11 = sub_10004A07C(0, &qword_10119EA18, MPStoreItemOffer_ptr);
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

    if ((unint64_t)v12 >> 62)
      goto LABEL_22;
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        if ((v12 & 0xC000000000000001) != 0)
        {
          v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v12);
        }
        else
        {
          if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_29;
          }
          v13 = *(id *)(v12 + 32);
        }
        v1 = v13;
        result = objc_msgSend(v13, "assets", swift_bridgeObjectRelease(v12).n128_f64[0]);
        if (!result)
        {
          __break(1u);
          return result;
        }
        v15 = result;
        v16 = sub_10004A07C(0, &qword_10119EA20, MPStoreItemOfferAsset_ptr);
        v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

        if (!((unint64_t)v12 >> 62))
        {
          v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v17)
            goto LABEL_33;
          goto LABEL_10;
        }
LABEL_29:
        if (v12 < 0)
          v28 = v12;
        else
          v28 = v12 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v17 = _CocoaArrayWrapper.endIndex.getter(v28);
        if (!v17)
        {
LABEL_33:

LABEL_34:
          swift_bridgeObjectRelease(v12);
          break;
        }
LABEL_10:
        v30 = v1;
        v32 = v12 & 0xC000000000000001;
        v18 = 4;
        while (1)
        {
          v19 = v32
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18 - 4, v12)
              : *(id *)(v12 + 8 * v18);
          v20 = v19;
          v1 = (void *)(v18 - 3);
          if (__OFADD__(v18 - 4, 1))
            break;
          v21 = objc_msgSend(v19, "previewURL");
          if (v21)
          {
            v22 = v21;
            v23 = v12;
            v24 = v31;
            static URL._unconditionallyBridgeFromObjectiveC(_:)(v21);

            v25 = v24;
            v12 = v23;
            (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v8, v25, v3);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) != 1)
            {
              sub_10004FF60((uint64_t)v8, &qword_10119E460);

              swift_bridgeObjectRelease_n(v23, 2);
              return v20;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v8, 1, 1, v3);
          }
          sub_10004FF60((uint64_t)v8, &qword_10119E460);

          ++v18;
          if (v1 == (void *)v17)
          {

            goto LABEL_34;
          }
        }
        __break(1u);
LABEL_22:
        if (v12 < 0)
          v26 = v12;
        else
          v26 = v12 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v27 = _CocoaArrayWrapper.endIndex.getter(v26);
        swift_bridgeObjectRelease(v12);
      }
      while (v27);
    }
    swift_bridgeObjectRelease(v12);
  }
  return 0;
}

uint64_t sub_10006A73C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v3 = result;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = OBJC_IVAR____TtC5Music25PreviewPlaybackController_previewUpsellTriggerCountPerContainer;
  v10 = (unint64_t)(v6 + 63) >> 6;
  if (!v8)
    goto LABEL_7;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * i);
    if (v13 >= *(_QWORD *)(a2 + v9))
    {
      result = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = sub_10035C524(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v18 = _swiftEmptyArrayStorage[2];
      v17 = _swiftEmptyArrayStorage[3];
      v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        v20 = _swiftEmptyArrayStorage[2];
        v21 = v18 + 1;
        result = sub_10035C524(v17 > 1, v18 + 1, 1);
        v18 = v20;
        v19 = v21;
      }
      _swiftEmptyArrayStorage[2] = v19;
      _swiftEmptyArrayStorage[v18 + 4] = v13;
      if (v8)
        goto LABEL_4;
    }
    else if (v8)
    {
      goto LABEL_4;
    }
LABEL_7:
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v14 >= v10)
      goto LABEL_29;
    v15 = *(_QWORD *)(v5 + 8 * v14);
    ++v4;
    if (!v15)
    {
      v4 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_29;
      v15 = *(_QWORD *)(v5 + 8 * v4);
      if (!v15)
      {
        v4 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_29;
        v15 = *(_QWORD *)(v5 + 8 * v4);
        if (!v15)
        {
          v4 = v14 + 3;
          if (v14 + 3 >= v10)
            goto LABEL_29;
          v15 = *(_QWORD *)(v5 + 8 * v4);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 4;
  if (v16 >= v10)
  {
LABEL_29:
    swift_release(v3);
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v10)
      goto LABEL_29;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_10006A92C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A89B0;
  if (!qword_1011A89B0)
  {
    v1 = sub_10004A07C(255, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1011A89B0);
  }
  return result;
}

double sub_10006A984(void **a1)
{
  uint64_t v1;

  return sub_100067228(a1, v1);
}

uint64_t sub_10006A98C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10006A9B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_10119E9EC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_100066CD8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10006AA44()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10006AA78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_10119E9FC);
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10006AEE4;
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch(sub_1000666D8, 0, 0);
}

uint64_t sub_10006AAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {

  }
  else
  {
    v6 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  }
  return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
}

void sub_10006AB94(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for PreviewPlaybackController.Context.Source(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_100065F4C(a1, a2, v2[2], v2[3], v2[4], (char *)v2 + v6, *((unsigned __int8 *)v2 + v6 + *(_QWORD *)(v5 + 64)));
}

uint64_t sub_10006ABF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {

  }
  else
  {
    v10 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v4, v10);
  }
  v11 = (v5 + v4 + v8 + 1) & ~v8;
  v12 = v11 + v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v11, v6);
  return swift_deallocObject(v0, v12, v3 | v8 | 7);
}

uint64_t sub_10006ACF4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for PreviewPlaybackController.Context.Source(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[4];
  v11 = v1[5];
  v12 = (uint64_t)v1 + v5;
  v13 = (uint64_t)v1 + ((v6 + v7 + 1) & ~v7);
  v14 = *((_BYTE *)v1 + v6);
  v15 = (_QWORD *)swift_task_alloc(dword_10119EA0C);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10005AEE4;
  return sub_10006635C(a1, v8, v9, v10, v11, v12, v14, v13);
}

uint64_t storeEnumTagSinglePayload for PreviewPlaybackController.Context.Origin(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10006AE1C + 4 * byte_100EA8215[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10006AE50 + 4 * asc_100EA8210[v4]))();
}

uint64_t sub_10006AE50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006AE58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10006AE60);
  return result;
}

uint64_t sub_10006AE6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10006AE74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10006AE78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006AE80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewPlaybackController.Context.Origin()
{
  return &type metadata for PreviewPlaybackController.Context.Origin;
}

unint64_t sub_10006AEA0()
{
  unint64_t result;

  result = qword_10119EA38[0];
  if (!qword_10119EA38[0])
  {
    result = swift_getWitnessTable(&unk_100EA8408, &type metadata for PreviewPlaybackController.Context.Origin);
    atomic_store(result, qword_10119EA38);
  }
  return result;
}

uint64_t sub_10006AF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 136);
}

void sub_10006AF08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[15];

  v6[0] = (char *)&value witness table for () + 64;
  v6[1] = &unk_100EA8480;
  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v6[3] = &unk_100EA8498;
    v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[6] = (char *)&value witness table for () + 64;
    v6[7] = (char *)&value witness table for () + 64;
    v6[8] = (char *)&value witness table for () + 64;
    v6[9] = (char *)&value witness table for () + 64;
    v6[10] = &unk_100EA84B0;
    v6[11] = &unk_100EA84C8;
    sub_1000559DC(319);
    if (v5 <= 0x3F)
    {
      v6[12] = *(_QWORD *)(v4 - 8) + 64;
      v6[13] = &unk_100EA84E0;
      v6[14] = &unk_100EA84F8;
      swift_initStructMetadata(a1, 0, 15, v6, a1 + 88);
    }
  }
}

uint64_t sub_10006AFF0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char *v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = type metadata accessor for DynamicTypeSize(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12 & 0xF8;
  v14 = v13 | 7;
  if (*(_QWORD *)(v11 + 64) <= 8uLL)
    v15 = 8;
  else
    v15 = *(_QWORD *)(v11 + 64);
  v16 = (v12 | v7) & 0x100000;
  v17 = *a2;
  v18 = (v14 | v7) == 7 && v16 == 0;
  if (v18
    && (v19 = v9 + 7,
        ((v15
        + ((v13
          + 16
          + ((((((((((((((((v9 + 7 + ((v8 + 17) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v14)
        + 56) & 0xFFFFFFFFFFFFFFF8)
      + 33 <= 0x18))
  {
    v78 = v10;
    v79 = v13 + 16;
    v80 = ~v14;
    v81 = *(_QWORD *)(v10 - 8);
    v20 = a2[1];
    *(_QWORD *)a1 = v17;
    *(_QWORD *)(a1 + 8) = v20;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v82 = a1;
    v21 = (uint64_t)a2 + v8;
    v22 = (a1 + v8 + 17) & ~v8;
    v23 = (v21 + 17) & ~v8;
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16);
    v25 = swift_retain(v20);
    v24(v22, v23, v5, v25);
    v26 = (_OWORD *)((v19 + v22) & 0xFFFFFFFFFFFFFFF8);
    v27 = (_OWORD *)((v19 + v23) & 0xFFFFFFFFFFFFFFF8);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (_QWORD *)(((unint64_t)v26 + 39) & 0xFFFFFFFFFFFFF8);
    v30 = (_QWORD *)(((unint64_t)v27 + 39) & 0xFFFFFFFFFFFFF8);
    *v29 = *v30;
    v31 = (_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFF8);
    v32 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFF8);
    *v31 = *v32;
    v33 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
    v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = (_QWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
    v37 = (_QWORD *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = (_QWORD *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
    v40 = (_QWORD *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    v42 = (_QWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
    v43 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
    v46 = ((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8;
    v47 = *(_QWORD *)v46;
    v48 = *(_QWORD *)(v46 + 8);
    v49 = *(_BYTE *)(v46 + 16);
    swift_retain(v35);
    swift_retain(v38);
    swift_retain(v41);
    swift_retain(v44);
    sub_10006B3EC(v47, v48, v49);
    *(_QWORD *)v45 = v47;
    *(_QWORD *)(v45 + 8) = v48;
    *(_BYTE *)(v45 + 16) = v49;
    v50 = ((unint64_t)v42 + 47) & 0xFFFFFFFFFFFFFFF8;
    v51 = ((unint64_t)v43 + 47) & 0xFFFFFFFFFFFFFFF8;
    v52 = *(_QWORD *)v51;
    LOBYTE(v41) = *(_BYTE *)(v51 + 8);
    sub_10006B3F8(*(_QWORD *)v51, v41);
    *(_QWORD *)v50 = v52;
    *(_BYTE *)(v50 + 8) = v41;
    v53 = (_QWORD *)((v79 + v50) & v80);
    v54 = (uint64_t *)((v79 + v51) & v80);
    v55 = *((unsigned __int8 *)v54 + v15);
    if (v55 >= 2)
    {
      if (v15 <= 3)
        v56 = v15;
      else
        v56 = 4;
      __asm { BR              X12 }
    }
    v58 = v15 + 1;
    if (v55 == 1)
    {
      (*(void (**)(_QWORD *, unint64_t, uint64_t))(v81 + 16))(v53, (v79 + v51) & v80, v78);
      v59 = 1;
    }
    else
    {
      v60 = *v54;
      *v53 = *v54;
      swift_retain(v60);
      v59 = 0;
    }
    *((_BYTE *)v53 + v15) = v59;
    v61 = (char *)v53 + v58;
    v62 = (char *)v54 + v58;
    v63 = ((unint64_t)v53 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = ((unint64_t)v54 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
    v65 = *(_QWORD *)v64;
    v66 = *(_QWORD *)(v64 + 8);
    v67 = *(_QWORD *)(v64 + 16);
    v68 = *(_QWORD *)(v64 + 24);
    v69 = *(_QWORD *)(v64 + 32);
    v70 = *(_BYTE *)(v64 + 40);
    sub_10006B404(*(_QWORD *)v64, v66, v67, v68, v69, v70);
    *(_QWORD *)v63 = v65;
    *(_QWORD *)(v63 + 8) = v66;
    *(_QWORD *)(v63 + 16) = v67;
    *(_QWORD *)(v63 + 24) = v68;
    *(_QWORD *)(v63 + 32) = v69;
    *(_BYTE *)(v63 + 40) = v70;
    v71 = (unint64_t)(v61 + 55) & 0xFFFFFFFFFFFFFFF8;
    v72 = (unint64_t)(v62 + 55) & 0xFFFFFFFFFFFFFFF8;
    v73 = *(_QWORD *)v72;
    v74 = *(_QWORD *)(v72 + 8);
    v75 = *(_QWORD *)(v72 + 16);
    v76 = *(_QWORD *)(v72 + 24);
    LOBYTE(v69) = *(_BYTE *)(v72 + 32);
    sub_10006B410(*(_QWORD *)v72, v74, v75, v76, v69);
    *(_QWORD *)v71 = v73;
    *(_QWORD *)(v71 + 8) = v74;
    *(_QWORD *)(v71 + 16) = v75;
    *(_QWORD *)(v71 + 24) = v76;
    *(_BYTE *)(v71 + 32) = v69;
    return v82;
  }
  else
  {
    *(_QWORD *)a1 = v17;
    v57 = v17 + (((v14 | v8) + 16) & ~(v14 | v8));
    swift_retain(v17);
  }
  return v57;
}

uint64_t sub_10006B3EC(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_10006B3F8(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_10006B404(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_10006B410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return swift_bridgeObjectRetain(a2);
  else
    return swift_retain(a1);
}

uint64_t sub_10006B420(uint64_t a1, uint64_t a2)
{
  __n128 v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;

  v4 = swift_release(*(_QWORD *)(a1 + 8));
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, __n128))(v5 + 8))(v6, v4);
  v7 = (((((((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v7 + 8));
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v8 + 8));
  v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v9 + 8));
  v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v10 + 8));
  sub_10006B5F8(*(_QWORD *)((v10 + 23) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 16));
  v11 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  sub_10006B604(*(_QWORD *)v11, *(_BYTE *)(v11 + 8));
  v12 = type metadata accessor for DynamicTypeSize(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  v15 = (_QWORD *)((v11 + v14 + 9) & ~v14);
  if (*(_QWORD *)(v13 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v13 + 64);
  v17 = *((unsigned __int8 *)v15 + v16);
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X13 }
  }
  if (v17 == 1)
    (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  else
    swift_release(*v15);
  v19 = (char *)v15 + v16;
  v20 = (unint64_t)(v19 + 8) & 0xFFFFFFFFFFFFFFF8;
  sub_10006B610(*(_QWORD *)v20, *(_QWORD *)(v20 + 8), *(_QWORD *)(v20 + 16), *(_QWORD *)(v20 + 24), *(_QWORD *)(v20 + 32), *(_BYTE *)(v20 + 40));
  return sub_10006B61C(*(_QWORD *)((unint64_t)(v19 + 56) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((unint64_t)(v19 + 56) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(((unint64_t)(v19 + 56) & 0xFFFFFFFFFFFFFFF8) + 16), *(_QWORD *)(((unint64_t)(v19 + 56) & 0xFFFFFFFFFFFFFFF8) + 24), *(_BYTE *)(((unint64_t)(v19 + 56) & 0xFFFFFFFFFFFFFFF8) + 32));
}

uint64_t sub_10006B5F8(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_10006B604(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_10006B610(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_10006B61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return swift_bridgeObjectRelease(a2);
  else
    return swift_release(a1);
}

uint64_t sub_10006B62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 17 + a1) & ~v7;
  v9 = (v7 + 17 + a2) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16);
  v11 = swift_retain(v4);
  v10(v8, v9, v5, v11);
  v12 = *(_QWORD *)(v6 + 64) + 7;
  v13 = (_OWORD *)((v12 + v8) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_OWORD *)((v12 + v9) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (_QWORD *)(((unint64_t)v13 + 39) & 0xFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v14 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = ((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  v33 = ((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  v34 = *(_QWORD *)v33;
  v35 = *(_QWORD *)(v33 + 8);
  v36 = *(_BYTE *)(v33 + 16);
  swift_retain(v22);
  swift_retain(v25);
  swift_retain(v28);
  swift_retain(v31);
  sub_10006B3EC(v34, v35, v36);
  *(_QWORD *)v32 = v34;
  *(_QWORD *)(v32 + 8) = v35;
  *(_BYTE *)(v32 + 16) = v36;
  v37 = ((unint64_t)v29 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = ((unint64_t)v30 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = *(_QWORD *)v38;
  LOBYTE(v28) = *(_BYTE *)(v38 + 8);
  sub_10006B3F8(*(_QWORD *)v38, v28);
  *(_QWORD *)v37 = v39;
  *(_BYTE *)(v37 + 8) = v28;
  v40 = type metadata accessor for DynamicTypeSize(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(_DWORD *)(v41 + 80) & 0xF8;
  v43 = v42 + 16;
  v44 = v42 + 16 + v37;
  v45 = ~v42 & 0xFFFFFFFFFFFFFFF8;
  v46 = (_QWORD *)(v44 & v45);
  v47 = (uint64_t *)((v43 + v38) & v45);
  if (*(_QWORD *)(v41 + 64) <= 8uLL)
    v48 = 8;
  else
    v48 = *(_QWORD *)(v41 + 64);
  v49 = *((unsigned __int8 *)v47 + v48);
  if (v49 >= 2)
  {
    if (v48 <= 3)
      v50 = v48;
    else
      v50 = 4;
    __asm { BR              X13 }
  }
  if (v49 == 1)
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v41 + 16))(v46, v47, v40);
    v51 = 1;
  }
  else
  {
    v52 = *v47;
    *v46 = *v47;
    swift_retain(v52);
    v51 = 0;
  }
  *((_BYTE *)v46 + v48) = v51;
  v53 = (char *)v46 + v48 + 1;
  v54 = (char *)v47 + v48 + 1;
  v55 = (unint64_t)(v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = (unint64_t)(v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v57 = *(_QWORD *)v56;
  v58 = *(_QWORD *)(v56 + 8);
  v59 = *(_QWORD *)(v56 + 16);
  v60 = *(_QWORD *)(v56 + 24);
  v61 = *(_QWORD *)(v56 + 32);
  v62 = *(_BYTE *)(v56 + 40);
  sub_10006B404(*(_QWORD *)v56, v58, v59, v60, v61, v62);
  *(_QWORD *)v55 = v57;
  *(_QWORD *)(v55 + 8) = v58;
  *(_QWORD *)(v55 + 16) = v59;
  *(_QWORD *)(v55 + 24) = v60;
  *(_QWORD *)(v55 + 32) = v61;
  *(_BYTE *)(v55 + 40) = v62;
  v63 = (unint64_t)(v53 + 55) & 0xFFFFFFFFFFFFFFF8;
  v64 = (unint64_t)(v54 + 55) & 0xFFFFFFFFFFFFFFF8;
  v65 = *(_QWORD *)v64;
  v66 = *(_QWORD *)(v64 + 8);
  v67 = *(_QWORD *)(v64 + 16);
  v68 = *(_QWORD *)(v64 + 24);
  LOBYTE(v61) = *(_BYTE *)(v64 + 32);
  sub_10006B410(*(_QWORD *)v64, v66, v67, v68, v61);
  *(_QWORD *)v63 = v65;
  *(_QWORD *)(v63 + 8) = v66;
  *(_QWORD *)(v63 + 16) = v67;
  *(_QWORD *)(v63 + 24) = v68;
  *(_BYTE *)(v63 + 32) = v61;
  return a1;
}

uint64_t sub_10006B94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  __n128 v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain(v6);
  v8 = swift_release(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 17 + a1) & ~v10;
  v12 = (v10 + 17 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 24))(v11, v12, v8);
  v13 = *(_QWORD *)(v9 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  v16 = (_QWORD *)(((unint64_t)v14 + 39) & 0xFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 39) & 0xFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  v23 = v20[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain(v22);
  swift_release(v23);
  v24 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  v27 = v24[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain(v26);
  swift_release(v27);
  v28 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  v30 = v29[1];
  v31 = v28[1];
  *v28 = *v29;
  v28[1] = v30;
  swift_retain(v30);
  swift_release(v31);
  v32 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v34 = v33[1];
  v35 = v32[1];
  *v32 = *v33;
  v32[1] = v34;
  swift_retain(v34);
  swift_release(v35);
  v36 = ((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  v37 = ((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(_QWORD *)v37;
  v39 = *(_QWORD *)(v37 + 8);
  LOBYTE(v29) = *(_BYTE *)(v37 + 16);
  sub_10006B3EC(*(_QWORD *)v37, v39, (char)v29);
  v40 = *(_QWORD *)v36;
  v41 = *(_QWORD *)(v36 + 8);
  v42 = *(_BYTE *)(v36 + 16);
  *(_QWORD *)v36 = v38;
  *(_QWORD *)(v36 + 8) = v39;
  *(_BYTE *)(v36 + 16) = (_BYTE)v29;
  sub_10006B5F8(v40, v41, v42);
  v43 = ((unint64_t)v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  v44 = ((unint64_t)v33 + 47) & 0xFFFFFFFFFFFFFFF8;
  v45 = *(_QWORD *)v44;
  LOBYTE(v39) = *(_BYTE *)(v44 + 8);
  sub_10006B3F8(*(_QWORD *)v44, v39);
  v46 = *(_QWORD *)v43;
  v47 = *(_BYTE *)(v43 + 8);
  *(_QWORD *)v43 = v45;
  *(_BYTE *)(v43 + 8) = v39;
  sub_10006B604(v46, v47);
  v48 = type metadata accessor for DynamicTypeSize(0);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(_DWORD *)(v49 + 80) & 0xF8;
  v51 = v50 + 16;
  v52 = v50 + 16 + v43;
  v53 = ~v50 & 0xFFFFFFFFFFFFFFF8;
  v54 = (uint64_t *)(v52 & v53);
  v55 = (uint64_t *)((v51 + v44) & v53);
  if (*(_QWORD *)(v49 + 64) <= 8uLL)
    v56 = 8;
  else
    v56 = *(_QWORD *)(v49 + 64);
  if (v54 != v55)
  {
    v57 = v48;
    v58 = *((unsigned __int8 *)v54 + v56);
    if (v58 >= 2)
    {
      if (v56 <= 3)
        v59 = v56;
      else
        v59 = 4;
      __asm { BR              X12 }
    }
    if (v58 == 1)
      (*(void (**)(uint64_t *, uint64_t))(v49 + 8))(v54, v48);
    else
      v60 = swift_release(*v54);
    v61 = *((unsigned __int8 *)v55 + v56);
    if (v61 >= 2)
    {
      if (v56 <= 3)
        v62 = v56;
      else
        v62 = 4;
      __asm { BR              X12 }
    }
    if (v61 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t, __n128))(v49 + 16))(v54, v55, v57, v60);
      *((_BYTE *)v54 + v56) = 1;
    }
    else
    {
      v63 = *v55;
      *v54 = *v55;
      *((_BYTE *)v54 + v56) = 0;
      swift_retain(v63);
    }
  }
  v64 = (char *)v54 + v56 + 1;
  v65 = (char *)v55 + v56 + 1;
  v66 = (unint64_t)(v64 + 7) & 0xFFFFFFFFFFFFFFF8;
  v67 = (unint64_t)(v65 + 7) & 0xFFFFFFFFFFFFFFF8;
  v68 = *(_QWORD *)v67;
  v69 = *(_QWORD *)(v67 + 8);
  v70 = *(_QWORD *)(v67 + 16);
  v71 = *(_QWORD *)(v67 + 24);
  v72 = *(_QWORD *)(v67 + 32);
  v73 = *(_BYTE *)(v67 + 40);
  sub_10006B404(*(_QWORD *)v67, v69, v70, v71, v72, v73);
  v74 = *(_QWORD *)v66;
  v75 = *(_QWORD *)(v66 + 8);
  v76 = *(_QWORD *)(v66 + 16);
  v77 = *(_QWORD *)(v66 + 24);
  v78 = *(_QWORD *)(v66 + 32);
  v79 = *(_BYTE *)(v66 + 40);
  *(_QWORD *)v66 = v68;
  *(_QWORD *)(v66 + 8) = v69;
  *(_QWORD *)(v66 + 16) = v70;
  *(_QWORD *)(v66 + 24) = v71;
  *(_QWORD *)(v66 + 32) = v72;
  *(_BYTE *)(v66 + 40) = v73;
  sub_10006B610(v74, v75, v76, v77, v78, v79);
  v80 = (unint64_t)(v64 + 55) & 0xFFFFFFFFFFFFFFF8;
  v81 = (unint64_t)(v65 + 55) & 0xFFFFFFFFFFFFFFF8;
  v82 = *(_QWORD *)v81;
  v83 = *(_QWORD *)(v81 + 8);
  v84 = *(_QWORD *)(v81 + 16);
  v85 = *(_QWORD *)(v81 + 24);
  LOBYTE(v72) = *(_BYTE *)(v81 + 32);
  sub_10006B410(*(_QWORD *)v81, v83, v84, v85, v72);
  v86 = *(_QWORD *)v80;
  v87 = *(_QWORD *)(v80 + 8);
  v88 = *(_QWORD *)(v80 + 16);
  v89 = *(_QWORD *)(v80 + 24);
  v90 = *(_BYTE *)(v80 + 32);
  *(_QWORD *)v80 = v82;
  *(_QWORD *)(v80 + 8) = v83;
  *(_QWORD *)(v80 + 16) = v84;
  *(_QWORD *)(v80 + 24) = v85;
  *(_BYTE *)(v80 + 32) = v72;
  sub_10006B61C(v86, v87, v88, v89, v90);
  return a1;
}

uint64_t sub_10006BDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  char v40;
  char *v41;
  char *v42;
  _OWORD *v43;
  __int128 *v44;
  __int128 v45;
  __int128 v46;
  unint64_t v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 17 + a1) & ~v5;
  v7 = (v5 + 17 + a2) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_OWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(((unint64_t)v9 + 39) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v10 + 39) & 0xFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_OWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  v17 = (_OWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8);
  v21 = (_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  *v20 = *v21;
  v22 = (_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_BYTE *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_BYTE *)(v24 + 16) = v26;
  v27 = ((unint64_t)v22 + 47) & 0xFFFFFFFFFFFFFFF8;
  v28 = ((unint64_t)v23 + 47) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v23) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = (_BYTE)v23;
  v29 = type metadata accessor for DynamicTypeSize(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(_DWORD *)(v30 + 80) & 0xF8;
  v32 = v31 + 16;
  v33 = v31 + 16 + v27;
  v34 = ~v31 & 0xFFFFFFFFFFFFFFF8;
  v35 = (_QWORD *)(v33 & v34);
  v36 = (_QWORD *)((v32 + v28) & v34);
  if (*(_QWORD *)(v30 + 64) <= 8uLL)
    v37 = 8;
  else
    v37 = *(_QWORD *)(v30 + 64);
  v38 = *((unsigned __int8 *)v36 + v37);
  if (v38 >= 2)
  {
    if (v37 <= 3)
      v39 = v37;
    else
      v39 = 4;
    __asm { BR              X13 }
  }
  if (v38 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v30 + 32))(v35, v36, v29);
    v40 = 1;
  }
  else
  {
    v40 = 0;
    *v35 = *v36;
  }
  *((_BYTE *)v35 + v37) = v40;
  v41 = (char *)v35 + v37 + 1;
  v42 = (char *)v36 + v37 + 1;
  v43 = (_OWORD *)((unint64_t)(v41 + 7) & 0xFFFFFFFFFFFFFFF8);
  v44 = (__int128 *)((unint64_t)(v42 + 7) & 0xFFFFFFFFFFFFFFF8);
  v45 = *v44;
  v46 = v44[1];
  *(_OWORD *)((char *)v43 + 25) = *(__int128 *)((char *)v44 + 25);
  *v43 = v45;
  v43[1] = v46;
  v47 = (unint64_t)(v41 + 55) & 0xFFFFFFFFFFFFFFF8;
  v48 = (unint64_t)(v42 + 55) & 0xFFFFFFFFFFFFFFF8;
  v49 = *(_OWORD *)v48;
  v50 = *(_OWORD *)(v48 + 16);
  *(_BYTE *)(v47 + 32) = *(_BYTE *)(v48 + 32);
  *(_OWORD *)v47 = v49;
  *(_OWORD *)(v47 + 16) = v50;
  return a1;
}

uint64_t sub_10006C008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  unint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  __n128 v53;
  unsigned int v54;
  uint64_t v55;
  char v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  __int128 v69;
  unint64_t v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  __int128 v78;

  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = swift_release(v6);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 17 + a1) & ~v9;
  v11 = (v9 + 17 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 40))(v10, v11, v7);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  v13[2] = v14[2];
  v13[3] = v14[3];
  v15 = (_QWORD *)(((unint64_t)v13 + 39) & 0xFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 39) & 0xFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  v18 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  v18 += 15;
  *v17 = v19;
  v20 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)(v20 + 8);
  v22 = (v18 & 0xFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v20 = *(_OWORD *)(v18 & 0xFFFFFFFFFFFFF8);
  swift_release(v21);
  v23 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 &= 0xFFFFFFFFFFFFF8uLL;
  v24 = *(_QWORD *)(v23 + 8);
  *(_OWORD *)v23 = *(_OWORD *)v22;
  swift_release(v24);
  v25 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = (_OWORD *)((v22 + 23) & 0xFFFFFFFFFFFFF8);
  v27 = *(_QWORD *)(v25 + 8);
  *(_OWORD *)v25 = *v26;
  swift_release(v27);
  v28 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = (_OWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v30 = *(_QWORD *)(v28 + 8);
  *(_OWORD *)v28 = *v29;
  swift_release(v30);
  v31 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  v32 = ((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(_BYTE *)(v32 + 16);
  v34 = *(_QWORD *)v31;
  v35 = *(_QWORD *)(v31 + 8);
  v36 = *(_BYTE *)(v31 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_BYTE *)(v31 + 16) = v33;
  sub_10006B5F8(v34, v35, v36);
  v37 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(_BYTE *)((((unint64_t)v29 + 47) & 0xFFFFFFFFFFFFFFF8) + 8);
  v39 = *(_QWORD *)v37;
  v40 = *(_BYTE *)(v37 + 8);
  *(_QWORD *)v37 = *(_QWORD *)(((unint64_t)v29 + 47) & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v37 + 8) = v38;
  sub_10006B604(v39, v40);
  v41 = type metadata accessor for DynamicTypeSize(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(_DWORD *)(v42 + 80) & 0xF8;
  v44 = v43 + 16;
  v45 = v43 + 16 + v37;
  v46 = ~v43 & 0xFFFFFFFFFFFFFFF8;
  v47 = (_QWORD *)(v45 & v46);
  v48 = (_QWORD *)((v44 + (((unint64_t)v29 + 47) & 0xFFFFFFFFFFFFFFF8)) & v46);
  if (*(_QWORD *)(v42 + 64) <= 8uLL)
    v49 = 8;
  else
    v49 = *(_QWORD *)(v42 + 64);
  if (v47 != v48)
  {
    v50 = v41;
    v51 = *((unsigned __int8 *)v47 + v49);
    if (v51 >= 2)
    {
      if (v49 <= 3)
        v52 = v49;
      else
        v52 = 4;
      __asm { BR              X12 }
    }
    if (v51 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v42 + 8))(v47, v41);
    else
      v53 = swift_release(*v47);
    v54 = *((unsigned __int8 *)v48 + v49);
    if (v54 >= 2)
    {
      if (v49 <= 3)
        v55 = v49;
      else
        v55 = 4;
      __asm { BR              X12 }
    }
    if (v54 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v42 + 32))(v47, v48, v50, v53);
      v56 = 1;
    }
    else
    {
      v56 = 0;
      *v47 = *v48;
    }
    *((_BYTE *)v47 + v49) = v56;
  }
  v57 = (char *)v48 + v49 + 1;
  v58 = (unint64_t)(v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  v59 = *(_QWORD *)(v58 + 32);
  v60 = *(_BYTE *)(v58 + 40);
  v61 = (char *)v47 + v49 + 1;
  v62 = (unint64_t)(v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  v63 = *(_QWORD *)v62;
  v64 = *(_QWORD *)(v62 + 8);
  v65 = *(_QWORD *)(v62 + 16);
  v66 = *(_QWORD *)(v62 + 24);
  v67 = *(_QWORD *)(v62 + 32);
  v68 = *(_BYTE *)(v62 + 40);
  v69 = *(_OWORD *)(v58 + 16);
  *(_OWORD *)v62 = *(_OWORD *)v58;
  *(_OWORD *)(v62 + 16) = v69;
  *(_QWORD *)(v62 + 32) = v59;
  *(_BYTE *)(v62 + 40) = v60;
  sub_10006B610(v63, v64, v65, v66, v67, v68);
  v70 = (unint64_t)(v57 + 55) & 0xFFFFFFFFFFFFFFF8;
  v71 = *(_BYTE *)(v70 + 32);
  v72 = (unint64_t)(v61 + 55) & 0xFFFFFFFFFFFFFFF8;
  v73 = *(_QWORD *)v72;
  v74 = *(_QWORD *)(v72 + 8);
  v75 = *(_QWORD *)(v72 + 16);
  v76 = *(_QWORD *)(v72 + 24);
  v77 = *(_BYTE *)(v72 + 32);
  v78 = *(_OWORD *)(v70 + 16);
  *(_OWORD *)v72 = *(_OWORD *)v70;
  *(_OWORD *)(v72 + 16) = v78;
  *(_BYTE *)(v72 + 32) = v71;
  sub_10006B61C(v73, v74, v75, v76, v77);
  return a1;
}

uint64_t sub_10006C3A8(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(type metadata accessor for DynamicTypeSize(0) - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v6 + 80);
  if (v8 < a2)
  {
    v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
    v13 = ((v10
          + ((v12
            + ((((((((((((((((*(_QWORD *)(v6 + 64) + ((v11 + 17) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 47) & 0xFFFFFFFFFFFFFFF8)
            + 9) & ~v12)
          + 56) & 0xFFFFFFFFFFFFFFF8)
        + 33;
    if (v13 < 4)
      v14 = ((a2 - v8 + 255) >> (8 * v13)) + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v16 = v15;
    else
      v16 = 0;
    __asm { BR              X13 }
  }
  if ((v7 & 0x80000000) != 0)
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(((unint64_t)a1 + v11 + 17) & ~v11, v7, v5);
  v18 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v18) = -1;
  return (v18 + 1);
}

void sub_10006C588(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for DynamicTypeSize(0) - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v12 = ((v10
        + ((v11
          + ((((((((((((((((*(_QWORD *)(v7 + 64)
                          + ((*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
                          + 7) & 0xFFFFFFFFFFFFFFF8)
                        + 39) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)
          + 9) & ~v11)
        + 56) & 0xFFFFFFFFFFFFFFF8)
      + 33;
  if (v8 >= a3)
  {
    v15 = 0;
    if (v8 >= a2)
      goto LABEL_19;
  }
  else
  {
    if (v12 <= 3)
      v13 = ((a3 - v8 + 255) >> (8 * v12)) + 1;
    else
      v13 = 2;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    if (v8 >= a2)
LABEL_19:
      __asm { BR              X12 }
  }
  if (v12 >= 4)
    v16 = ~v8 + a2;
  else
    v16 = (~(_BYTE)v8 + a2);
  bzero(a1, v12);
  if ((_DWORD)v12 == 1)
    *a1 = v16;
  else
    *(_DWORD *)a1 = v16;
  __asm { BR              X10 }
}

void sub_10006C738()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x10006C7B4);
}

void sub_10006C740()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x10006C748);
  JUMPOUT(0x10006C7B4);
}

void sub_10006C758()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x10006C7B4);
}

void sub_10006C760()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x10006C7B4);
}

void sub_10006C768()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  *(_WORD *)(v0 + v3) = 0;
  if (v1)
  {
    if ((v2 & 0x80000000) == 0)
    {
      if ((v1 & 0x80000000) == 0)
        JUMPOUT(0x10006C7B0);
      JUMPOUT(0x10006C7A8);
    }
    JUMPOUT(0x10006C774);
  }
  JUMPOUT(0x10006C7B4);
}

uint64_t type metadata accessor for ModuleGridView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ModuleGridView);
}

uint64_t sub_10006C7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[4];
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 80);
  v3 = *(_OWORD *)(a2 + 32);
  v6[0] = *(_OWORD *)(a2 + 16);
  v6[1] = v3;
  v4 = *(_OWORD *)(a2 + 64);
  v6[2] = *(_OWORD *)(a2 + 48);
  v6[3] = v4;
  v7 = v2;
  return swift_getOpaqueTypeConformance2(v6, &unk_100F94708, 1);
}

double sub_10006C820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double v6;

  v2 = v1 + *(int *)(a1 + 128);
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_BYTE *)(v2 + 16);
  sub_10006B3EC(*(_QWORD *)v2, v4, v5);
  v6 = sub_1008237EC(v3, v4, v5);
  sub_10006B5F8(v3, v4, v5);
  return v6;
}

uint64_t sub_10006C898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = v1 + *(int *)(a1 + 132);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_10006B3F8(*(_QWORD *)v2, v4);
  v5 = sub_1008239BC(v3, v4);
  sub_10006B604(v3, v4);
  return v5;
}

uint64_t sub_10006C8F4@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t TupleTypeMetadata2;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  double *v66;
  double v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  double v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  double *v96;
  double v97;
  double v98;
  double v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  double v117;
  uint64_t v118;
  double v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  double v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;

  v134 = a2;
  LODWORD(v131) = a1;
  v143 = a4;
  v126 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v126);
  v129 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(a3 + 48);
  v12 = *(_QWORD *)(a3 + 80);
  v13 = type metadata accessor for EnumeratedCollection(255, v10, v11, v12);
  v136 = v11;
  v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 8) + 8) + 8);
  v135 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v14, v10, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v16 = swift_getAssociatedTypeWitness(255, v12, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v17 = *(_QWORD *)(a3 + 32);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v13);
  v137 = v12;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v12, AssociatedTypeWitness, v16, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v170 = (_QWORD *)v13;
  v171 = v16;
  v172 = v17;
  v173 = WitnessTable;
  v174 = AssociatedConformanceWitness;
  v20 = type metadata accessor for ForEach(255, &v170);
  v169 = *(_QWORD *)(a3 + 64);
  v21 = v169;
  *(double *)&v22 = COERCE_DOUBLE(swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v20));
  v120 = v20;
  v119 = *(double *)&v22;
  v23 = type metadata accessor for LazyVGrid(0, v20);
  v122 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v121 = (char *)&v118 - v24;
  v142 = v25;
  v26 = type metadata accessor for ModifiedContent(0, v25, &type metadata for _FlexFrameLayout);
  v124 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v123 = (char *)&v118 - v27;
  v141 = v28;
  v29 = type metadata accessor for ModifiedContent(0, v28, &type metadata for _PaddingLayout);
  v125 = *(_QWORD *)(v29 - 8);
  v30 = __chkstk_darwin(v29);
  v128 = (char *)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v127 = (uint64_t)&v118 - v32;
  v130 = *(_QWORD *)(a3 + 40);
  v33 = type metadata accessor for ModifiedContent(255, v130, &type metadata for _HiddenModifier);
  v34 = type metadata accessor for ModifiedContent(255, v33, &type metadata for _FrameLayout);
  v35 = type metadata accessor for ModifiedContent(255, v34, &type metadata for _FrameLayout);
  v133 = v17;
  v36 = type metadata accessor for ModifiedContent(255, v17, &type metadata for _FrameLayout);
  v170 = (_QWORD *)v13;
  v171 = v16;
  v172 = v36;
  v173 = WitnessTable;
  v174 = AssociatedConformanceWitness;
  v37 = type metadata accessor for ForEach(255, &v170);
  v132 = v21;
  v167 = v21;
  v168 = &protocol witness table for _FrameLayout;
  v166 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v36);
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v37);
  v38 = type metadata accessor for LazyHGrid(255, v37);
  v39 = type metadata accessor for ModifiedContent(255, v38, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v35, v39, 0, 0);
  v41 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v42 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v41);
  v43 = type metadata accessor for HStack(0, v41, v42);
  v118 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v45 = (char *)&v118 - v44;
  v144 = v46;
  v47 = type metadata accessor for ModifiedContent(0, v46, &type metadata for _PaddingLayout);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = __chkstk_darwin(v47);
  v51 = (char *)&v118 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  v53 = (char *)&v118 - v52;
  v140 = v29;
  v54 = type metadata accessor for _ConditionalContent(0, v47, v29);
  v138 = *(_QWORD *)(v54 - 8);
  v55 = __chkstk_darwin(v54);
  v145 = (uint64_t)&v118 - v56;
  if ((v131 & 1) != 0)
  {
    v81 = v139;
    v131 = *(uint64_t **)(*(_QWORD *)&v139 + *(int *)(a3 + 104));
    v170 = _swiftEmptyArrayStorage;
    v82 = sub_10006FE74();
    v83 = v134;
    swift_bridgeObjectRetain();
    v84 = sub_100007E8C(&qword_10119EAF8);
    v85 = sub_100049F28(&qword_10119EB00, &qword_10119EAF8, (uint64_t)&protocol conformance descriptor for [A]);
    v86 = v129;
    v87 = dispatch thunk of SetAlgebra.init<A>(_:)(&v170, v84, v85, v126, v82);
    __chkstk_darwin(v87);
    v88 = *(_QWORD *)(a3 + 24);
    *(&v118 - 10) = v135;
    *(&v118 - 9) = v88;
    v110 = v133;
    v111 = v130;
    LODWORD(v113) = *(_QWORD *)(a3 + 56);
    v117 = v81;
    v116 = v119;
    v89 = v121;
    v90 = LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)(v83, v131, *(_QWORD *)&a6, 0, v86, sub_10006FEBC);
    v91 = static Alignment.center.getter(v90);
    v93 = v92;
    v75 = v142;
    v94 = swift_getWitnessTable(&protocol conformance descriptor for LazyVGrid<A>, v142);
    v115 = v93;
    LOBYTE(v113) = 0;
    LOBYTE(v111) = 1;
    v95 = v123;
    View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, 0, 1, 0, v111, 0x7FF0000000000000, LODWORD(v113), v91, v115, v75, v94);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v89, v75);
    v96 = (double *)(*(_QWORD *)&v81 + *(int *)(a3 + 100));
    v97 = *v96;
    v98 = v96[1];
    v99 = v96[2];
    v100 = v96[3];
    v164 = v94;
    v165 = &protocol witness table for _FlexFrameLayout;
    v76 = v141;
    v101 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v141);
    v102 = (uint64_t)v128;
    View.padding(_:)(v76, v101, v97, v98, v99, v100);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v95, v76);
    v162 = v101;
    v163 = &protocol witness table for _PaddingLayout;
    v77 = v140;
    v103 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v140);
    v104 = v127;
    sub_10081EB14(v102, v77, v127);
    v74 = *(void (**)(uint64_t, uint64_t))(v125 + 8);
    v74(v102, v77);
    sub_1000EA744(v104, v77, v102);
    v160 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v144);
    v161 = &protocol witness table for _PaddingLayout;
    v105 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
    sub_1008171F4(v102, v47, v77, v105, v103);
    v74(v102, v77);
    v79 = (char *)v104;
    v80 = v77;
  }
  else
  {
    v131 = &v118;
    v57 = __chkstk_darwin(v55);
    v58 = *(_QWORD *)(a3 + 24);
    *(&v118 - 14) = v135;
    *(&v118 - 13) = v58;
    v59 = v130;
    *(&v118 - 12) = v133;
    *(&v118 - 11) = v59;
    v60 = *(_QWORD *)(a3 + 56);
    *(&v118 - 10) = v136;
    *(&v118 - 9) = v60;
    v61 = *(_QWORD *)(a3 + 72);
    v110 = v132;
    v111 = v61;
    v62 = v137;
    v137 = v48;
    v63 = v54;
    v64 = v139;
    v112 = v62;
    v113 = v139;
    LOBYTE(v114) = 0;
    v115 = v134;
    v116 = a5;
    v117 = a6;
    v65 = static VerticalAlignment.center.getter(v57);
    HStack.init(alignment:spacing:content:)(v65, 0, 0, sub_10006FEF0, &v118 - 16, v41, v42);
    v66 = (double *)(*(_QWORD *)&v64 + *(int *)(a3 + 100));
    v54 = v63;
    v67 = *v66;
    v68 = v66[1];
    v69 = v66[2];
    v70 = v66[3];
    v71 = v144;
    v72 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v144);
    View.padding(_:)(v71, v72, v67, v68, v69, v70);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v45, v71);
    v150 = v72;
    v151 = &protocol witness table for _PaddingLayout;
    v73 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
    sub_10081EB14((uint64_t)v51, v47, (uint64_t)v53);
    v74 = *(void (**)(uint64_t, uint64_t))(v137 + 8);
    v74((uint64_t)v51, v47);
    sub_1000EA744((uint64_t)v53, v47, (uint64_t)v51);
    v75 = v142;
    v148 = swift_getWitnessTable(&protocol conformance descriptor for LazyVGrid<A>, v142);
    v149 = &protocol witness table for _FlexFrameLayout;
    v76 = v141;
    v146 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v141);
    v147 = &protocol witness table for _PaddingLayout;
    v77 = v140;
    v78 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v140);
    sub_100817130((uint64_t)v51, v47, v77, v73, v78);
    v74((uint64_t)v51, v47);
    v79 = v53;
    v80 = v47;
  }
  v74((uint64_t)v79, v80);
  v158 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v144);
  v159 = &protocol witness table for _PaddingLayout;
  v106 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
  v156 = swift_getWitnessTable(&protocol conformance descriptor for LazyVGrid<A>, v75);
  v157 = &protocol witness table for _FlexFrameLayout;
  v154 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v76);
  v155 = &protocol witness table for _PaddingLayout;
  v107 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v77);
  v152 = v106;
  v153 = v107;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v54);
  v108 = v145;
  sub_1000EA744(v145, v54, v143);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v138 + 8))(v108, v54);
}

uint64_t sub_10006D4A4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v21;
  char *v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t WitnessTable;
  uint64_t AssociatedConformanceWitness;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  char *v109;
  uint64_t (*v110)(char *, uint64_t);
  uint64_t v112;
  int v113;
  int v114;
  uint64_t v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  void (*v138)(char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD v152[10];
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;

  v146 = a6;
  v145 = a5;
  v149 = (char *)a4;
  v139 = a3;
  v124 = a2;
  v148 = a1;
  v134 = a9;
  v144 = a14;
  v143 = a12;
  v127 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v127);
  v131 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = a8;
  v22 = (char *)type metadata accessor for EnumeratedCollection(255, a4, a8, a15);
  v138 = *(void (**)(char *, uint64_t))(*(_QWORD *)(a8 + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *((_QWORD *)v138 + 1), a4, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v24 = swift_getAssociatedTypeWitness(255, a15, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v25 = type metadata accessor for ModifiedContent(255, a6, &type metadata for _FrameLayout);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v22);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a15, AssociatedTypeWitness, v24, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v153 = v22;
  v154 = v24;
  v155 = v25;
  v156 = WitnessTable;
  v157 = AssociatedConformanceWitness;
  v28 = type metadata accessor for ForEach(255, &v153);
  v163 = a13;
  v164 = &protocol witness table for _FrameLayout;
  v162 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  v29 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v28);
  v119 = v28;
  v118 = v29;
  v30 = type metadata accessor for LazyHGrid(0, v28);
  v122 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v121 = (char *)&v117 - v31;
  v123 = v32;
  v130 = type metadata accessor for ModifiedContent(0, v32, &type metadata for _FlexFrameLayout);
  v125 = *(_QWORD *)(v130 - 8);
  v33 = __chkstk_darwin(v130);
  v128 = (char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v33);
  v120 = (char *)&v117 - v36;
  v37 = __chkstk_darwin(v35);
  v126 = (uint64_t)&v117 - v38;
  v39 = a7;
  v40 = *(_QWORD *)(a7 - 8);
  __chkstk_darwin(v37);
  v42 = (char *)&v117 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for ModifiedContent(0, v39, &type metadata for _HiddenModifier);
  v136 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v45 = (char *)&v117 - v44;
  v46 = type metadata accessor for ModifiedContent(0, v43, &type metadata for _FrameLayout);
  v137 = *(char **)(v46 - 8);
  __chkstk_darwin(v46);
  v135 = (char *)&v117 - v47;
  v142 = type metadata accessor for ModifiedContent(0, v46, &type metadata for _FrameLayout);
  v140 = *(_QWORD *)(v142 - 8);
  v48 = __chkstk_darwin(v142);
  v50 = (char *)&v117 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v141 = (uint64_t)&v117 - v51;
  v153 = v149;
  v154 = v145;
  v155 = v146;
  v156 = v39;
  v157 = v147;
  v158 = v143;
  v129 = a13;
  v52 = v144;
  v159 = a13;
  v160 = v144;
  v132 = a15;
  v161 = a15;
  v53 = type metadata accessor for ModuleGridView(0, (uint64_t)&v153);
  (*(void (**)(void))(v148 + *(int *)(v53 + 124)))();
  View.hidden()(v39, v52);
  v54 = *(uint64_t (**)(char *, uint64_t))(v40 + 8);
  v133 = v39;
  v55 = v54(v42, v39);
  v56 = static Alignment.center.getter(v55);
  v58 = v57;
  v59 = sub_10006FEFC();
  v152[8] = v52;
  v152[9] = v59;
  v60 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v43);
  v61 = v135;
  View.frame(width:height:alignment:)(*(_QWORD *)&a10, 0, 0, 1, v56, v58, v43, v60);
  v62 = (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v45, v43);
  v63 = static Alignment.center.getter(v62);
  v65 = v64;
  v152[6] = v60;
  v152[7] = &protocol witness table for _FrameLayout;
  v66 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v46);
  v67 = v63;
  v68 = v61;
  View.frame(width:height:alignment:)(0, 0, 0, 1, v67, v65, v46, v66);
  v69 = v139;
  v70 = v46;
  v71 = v148;
  (*((void (**)(char *, uint64_t))v137 + 1))(v68, v70);
  v152[4] = v66;
  v152[5] = &protocol witness table for _FrameLayout;
  v72 = v142;
  v73 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v142);
  sub_10081EB14((uint64_t)v50, v72, v141);
  v74 = *(void (**)(char *, uint64_t))(v140 + 8);
  v137 = v50;
  v74(v50, v72);
  v75 = dispatch thunk of Collection.count.getter(v149, v138);
  if (*(_QWORD *)(v69 + 16) >= v75)
    v76 = v75;
  else
    v76 = *(_QWORD *)(v69 + 16);
  if (v76 < 0)
  {
    __break(1u);
LABEL_12:
    swift_bridgeObjectRelease(v69);
    v112 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GridItem(0) - 8) + 80);
    v82 = sub_1004819F4(v69, v69 + ((v112 + 32) & ~v112), 0, (2 * v76) | 1);
    goto LABEL_10;
  }
  v138 = v74;
  v77 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v78 = swift_bridgeObjectRetain();
  v79 = swift_unknownObjectRetain_n(v78, 2);
  v80 = (_QWORD *)swift_dynamicCastClass(v79, v77);
  if (!v80)
  {
    swift_bridgeObjectRelease(v69);
    v80 = _swiftEmptyArrayStorage;
  }
  v81 = v80[2];
  swift_release(v80);
  v136 = v73;
  if (v81 != v76)
    goto LABEL_12;
  v82 = (_QWORD *)swift_dynamicCastClass(v69, v77);
  if (!v82)
  {
    swift_bridgeObjectRelease(v69);
    v82 = _swiftEmptyArrayStorage;
  }
LABEL_10:
  swift_bridgeObjectRelease(v69);
  v83 = *(_QWORD *)(v71 + *(int *)(v53 + 108));
  v153 = (char *)_swiftEmptyArrayStorage;
  v84 = sub_10006FE74();
  v85 = sub_100007E8C(&qword_10119EAF8);
  v86 = sub_100049F28(&qword_10119EB00, &qword_10119EAF8, (uint64_t)&protocol conformance descriptor for [A]);
  v87 = v131;
  v88 = dispatch thunk of SetAlgebra.init<A>(_:)(&v153, v85, v86, v127, v84);
  __chkstk_darwin(v88);
  v89 = v145;
  *(&v117 - 14) = (uint64_t)v149;
  *(&v117 - 13) = v89;
  v90 = v133;
  *(&v117 - 12) = v146;
  *(&v117 - 11) = v90;
  v91 = v143;
  *(&v117 - 10) = v147;
  *(&v117 - 9) = v91;
  v113 = v144;
  v114 = v71;
  v116 = a11;
  v115 = v118;
  v92 = v121;
  v93 = LazyHGrid.init(rows:alignment:spacing:pinnedViews:content:)(v82, v83, *(_QWORD *)&a11, 0, v87, sub_10006FF40);
  v94 = static Alignment.center.getter(v93);
  v96 = v95;
  v97 = v123;
  v98 = swift_getWitnessTable(&protocol conformance descriptor for LazyHGrid<A>, v123);
  LOBYTE(v114) = 0;
  LOBYTE(v113) = 1;
  v99 = (uint64_t)v120;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, 0, 1, 0, v113, 0x7FF0000000000000, v114, v94, v96, v97, v98);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v92, v97);
  v152[2] = v98;
  v152[3] = &protocol witness table for _FlexFrameLayout;
  v100 = v130;
  v101 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v130);
  v102 = v126;
  sub_10081EB14(v99, v100, v126);
  v103 = v125;
  v104 = *(void (**)(uint64_t, uint64_t))(v125 + 8);
  v104(v99, v100);
  v105 = v137;
  v106 = v141;
  v107 = v142;
  (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v137, v141, v142);
  v153 = v105;
  v108 = *(void (**)(char *, uint64_t, uint64_t))(v103 + 16);
  v109 = v128;
  v108(v128, v102, v100);
  v154 = (uint64_t)v109;
  v152[0] = v107;
  v152[1] = v100;
  v150 = v136;
  v151 = v101;
  sub_1004D49B8((uint64_t *)&v153, 2uLL, (uint64_t)v152);
  v104(v102, v100);
  v110 = (uint64_t (*)(char *, uint64_t))v138;
  v138((char *)v106, v107);
  v104((uint64_t)v109, v100);
  return v110(v105, v107);
}

uint64_t sub_10006DF24@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  uint64_t v28;
  uint64_t WitnessTable;
  uint64_t AssociatedConformanceWitness;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v74 = a7;
  v77 = a5;
  v79 = a3;
  v72 = a1;
  v80 = a9;
  v76 = a14;
  v73 = a13;
  v75 = a12;
  v86 = a4;
  v87 = a5;
  v78 = a2 & 1;
  v88 = a6;
  v89 = a7;
  v64 = a6;
  v90 = a8;
  v91 = a12;
  v70 = a8;
  v92 = a13;
  v93 = a14;
  v94 = a15;
  v81 = type metadata accessor for ModuleGridView(0, (uint64_t)&v86);
  v69 = *(_QWORD *)(v81 - 8);
  v20 = *(_QWORD *)(v69 + 64);
  v21 = __chkstk_darwin(v81);
  v68 = (char *)&v60 - v22;
  v82 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v24;
  v25 = type metadata accessor for EnumeratedCollection(255, a4, a8, a15);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a8 + 8) + 8) + 8), a4, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v62 = a15;
  v27 = swift_getAssociatedTypeWitness(255, a15, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v67 = v27;
  v28 = type metadata accessor for ModifiedContent(255, a6, &type metadata for _FrameLayout);
  v65 = v28;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v25);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a15, AssociatedTypeWitness, v27, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v86 = v25;
  v87 = v27;
  v88 = v28;
  v89 = WitnessTable;
  v90 = AssociatedConformanceWitness;
  v31 = type metadata accessor for ForEach(0, &v86);
  v71 = *(_QWORD *)(v31 - 8);
  v32 = __chkstk_darwin(v31);
  v63 = (uint64_t)&v60 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v66 = (uint64_t)&v60 - v34;
  v35 = v81;
  v36 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v24, v72 + *(int *)(v81 + 96), a4);
  v37 = v69;
  v38 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v36, v35);
  v39 = *(unsigned __int8 *)(v37 + 80);
  v40 = (v39 + 88) & ~v39;
  v41 = (v20 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = (char *)swift_allocObject(&unk_1010AF710, v41 + 32, v39 | 7);
  v43 = v77;
  *((_QWORD *)v42 + 2) = a4;
  *((_QWORD *)v42 + 3) = v43;
  v44 = v74;
  *((_QWORD *)v42 + 4) = v64;
  *((_QWORD *)v42 + 5) = v44;
  v45 = v70;
  v46 = v75;
  *((_QWORD *)v42 + 6) = v70;
  *((_QWORD *)v42 + 7) = v46;
  v47 = v73;
  v48 = v76;
  *((_QWORD *)v42 + 8) = v73;
  *((_QWORD *)v42 + 9) = v48;
  v49 = v62;
  *((_QWORD *)v42 + 10) = v62;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v42[v40], v38, v81);
  v50 = &v42[v41];
  *v50 = v78;
  *((_QWORD *)v50 + 1) = v79;
  *((double *)v50 + 2) = a10;
  *((double *)v50 + 3) = a11;
  v84 = v47;
  v85 = &protocol witness table for _FrameLayout;
  swift_bridgeObjectRetain();
  v51 = v65;
  v52 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v65);
  v59 = v49;
  v53 = v63;
  v54 = (uint64_t)v61;
  static ForEach<>.enumerated(_:content:)((uint64_t)v61, (uint64_t)sub_100070154, (uint64_t)v42, a4, v67, v51, v45, v52, v63, v59);
  v55 = swift_release(v42);
  (*(void (**)(uint64_t, uint64_t, __n128))(v82 + 8))(v54, a4, v55);
  v83 = v52;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v31);
  v56 = v66;
  sub_10081EB14(v53, v31, v66);
  v57 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  v57(v53, v31);
  sub_1000EA744(v56, v31, v80);
  return ((uint64_t (*)(uint64_t, uint64_t))v57)(v56, v31);
}

uint64_t sub_10006E3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, double a8@<D0>, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _QWORD v42[3];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v34 = a5;
  v35 = a3;
  v36 = a1;
  v37 = a2;
  v39 = a7;
  v33 = a13;
  v32 = a9;
  v16 = *(_QWORD *)(a6 - 8);
  __chkstk_darwin(a1);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ModifiedContent(0, v19, &type metadata for _FrameLayout);
  v38 = *(_QWORD *)(v20 - 8);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v25 = (char *)&v32 - v24;
  v42[0] = a4;
  v42[1] = v34;
  v42[2] = a6;
  v43 = v32;
  v44 = a10;
  v45 = a11;
  v46 = a12;
  v47 = v33;
  v26 = type metadata accessor for ModuleGridView(0, (uint64_t)v42);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + *(int *)(v26 + 120)))(v36, v37);
  v28 = static Alignment.center.getter(v27);
  View.frame(width:height:alignment:)(*(_QWORD *)&a8, 0, 0, 1, v28, v29, a6, a11);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a6);
  v40 = a11;
  v41 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  sub_10081EB14((uint64_t)v23, v20, (uint64_t)v25);
  v30 = *(void (**)(char *, uint64_t))(v38 + 8);
  v30(v23, v20);
  sub_1000EA744((uint64_t)v25, v20, v39);
  return ((uint64_t (*)(char *, uint64_t))v30)(v25, v20);
}

uint64_t sub_10006E5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t WitnessTable;
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v63 = a8;
  v64 = a7;
  v67 = a5;
  v68 = a9;
  v62 = a1;
  v65 = a3;
  v66 = a10;
  v71 = a2;
  v72 = a3;
  v73 = a4;
  v74 = a5;
  v75 = a6;
  v76 = a7;
  v57 = a6;
  v77 = a8;
  v78 = a10;
  v79 = a11;
  v54 = a11;
  v69 = type metadata accessor for ModuleGridView(0, (uint64_t)&v71);
  v14 = *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64);
  v60 = *(_QWORD *)(v69 - 8);
  v61 = v14;
  v15 = __chkstk_darwin(v69);
  v58 = (char *)&v51 - v16;
  v53 = *(_QWORD *)(a2 - 8);
  v17 = v53;
  __chkstk_darwin(v15);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v19;
  v20 = type metadata accessor for EnumeratedCollection(255, a2, a6, a11);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a6 + 8) + 8) + 8), a2, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v22 = swift_getAssociatedTypeWitness(255, a11, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v56 = v22;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v20);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a11, AssociatedTypeWitness, v22, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v71 = v20;
  v72 = v22;
  v73 = a4;
  v74 = WitnessTable;
  v25 = a4;
  v75 = AssociatedConformanceWitness;
  v26 = type metadata accessor for ForEach(0, &v71);
  v59 = *(_QWORD *)(v26 - 8);
  v27 = __chkstk_darwin(v26);
  v52 = (uint64_t)&v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v55 = (uint64_t)&v51 - v29;
  v30 = v69;
  v31 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v62 + *(int *)(v69 + 96), a2);
  v32 = v60;
  v33 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v58, v31, v30);
  v34 = *(unsigned __int8 *)(v32 + 80);
  v35 = v32;
  v36 = (v34 + 88) & ~v34;
  v37 = (char *)swift_allocObject(&unk_1010AF738, v36 + v61, v34 | 7);
  v38 = v65;
  *((_QWORD *)v37 + 2) = a2;
  *((_QWORD *)v37 + 3) = v38;
  v39 = v67;
  *((_QWORD *)v37 + 4) = v25;
  *((_QWORD *)v37 + 5) = v39;
  v40 = v57;
  v42 = v63;
  v41 = v64;
  *((_QWORD *)v37 + 6) = v57;
  *((_QWORD *)v37 + 7) = v41;
  v43 = v66;
  *((_QWORD *)v37 + 8) = v42;
  *((_QWORD *)v37 + 9) = v43;
  v44 = v54;
  *((_QWORD *)v37 + 10) = v54;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v37[v36], v33, v69);
  v45 = v52;
  v46 = (uint64_t)v51;
  static ForEach<>.enumerated(_:content:)((uint64_t)v51, (uint64_t)sub_1000703CC, (uint64_t)v37, a2, v56, v25, v40, v42, v52, v44);
  v47 = swift_release(v37);
  (*(void (**)(uint64_t, uint64_t, __n128))(v53 + 8))(v46, a2, v47);
  v70 = v42;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v26);
  v48 = v55;
  sub_10081EB14(v45, v26, v55);
  v49 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
  v49(v45, v26);
  sub_1000EA744(v48, v26, v68);
  return ((uint64_t (*)(uint64_t, uint64_t))v49)(v48, v26);
}

uint64_t sub_10006E95C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  _QWORD v30[9];

  v12 = *(_QWORD *)(a4 - 8);
  v13 = __chkstk_darwin(a1);
  v15 = (char *)&v30[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v30[-1] - v16;
  v30[0] = v18;
  v30[1] = v19;
  v30[2] = v20;
  v30[3] = v21;
  v30[4] = v22;
  v30[5] = v23;
  v30[6] = a7;
  v30[7] = v24;
  v30[8] = v25;
  v26 = type metadata accessor for ModuleGridView(0, (uint64_t)v30);
  (*(void (**)(uint64_t, uint64_t))(a3 + *(int *)(v26 + 120)))(a1, a2);
  sub_10081EB14((uint64_t)v15, a4, (uint64_t)v17);
  v27 = *(void (**)(char *, uint64_t))(v12 + 8);
  v27(v15, a4);
  sub_1000EA744((uint64_t)v17, a4, a5);
  return ((uint64_t (*)(char *, uint64_t))v27)(v17, a4);
}

uint64_t sub_10006EA80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 *v45;
  __int128 v46;
  int v47;
  uint64_t v48;
  int v49;
  int v50;
  _QWORD *v51;
  uint64_t v52;
  double (*v53)(_QWORD, uint64_t, uint64_t, uint64_t, double *);
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t KeyPath;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  _QWORD v92[2];
  int v93;
  double (*v94)(_QWORD, uint64_t, uint64_t, uint64_t, double *);
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[18];
  uint64_t v118;
  void *v119;
  _BYTE v120[40];
  char v121[40];
  _OWORD v122[2];
  char v123;
  __int128 v124;
  _OWORD v125[2];
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE v131[48];

  v114 = a2;
  v113 = a1[3];
  v105 = type metadata accessor for ModifiedContent(255, v113, &type metadata for _PaddingLayout);
  v112 = a1[5];
  v3 = type metadata accessor for ModifiedContent(255, v112, &type metadata for _HiddenModifier);
  v4 = type metadata accessor for ModifiedContent(255, v3, &type metadata for _FrameLayout);
  v108 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _FrameLayout);
  v5 = a1[2];
  v6 = a1[6];
  v7 = a1[10];
  v8 = type metadata accessor for EnumeratedCollection(255, v5, v6, v7);
  v110 = v6;
  v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 8) + 8) + 8);
  v109 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v9, v5, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v11 = swift_getAssociatedTypeWitness(255, v7, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v12 = a1[4];
  v104 = a1;
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _FrameLayout);
  v107 = v8;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v8);
  v111 = v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v7, AssociatedTypeWitness, v11, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v126 = v8;
  v127 = v11;
  v128 = v13;
  v129 = WitnessTable;
  v130 = AssociatedConformanceWitness;
  v15 = type metadata accessor for ForEach(255, &v126);
  v118 = a1[8];
  v119 = &protocol witness table for _FrameLayout;
  v117[17] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v15);
  v16 = type metadata accessor for LazyHGrid(255, v15);
  v17 = type metadata accessor for ModifiedContent(255, v16, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v108, v17, 0, 0);
  v19 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v20 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v19);
  v21 = type metadata accessor for HStack(255, v19, v20);
  v22 = type metadata accessor for ModifiedContent(255, v21, &type metadata for _PaddingLayout);
  v126 = v8;
  v127 = v11;
  v108 = v12;
  v128 = v12;
  v129 = WitnessTable;
  v130 = AssociatedConformanceWitness;
  v23 = type metadata accessor for ForEach(255, &v126);
  v107 = v118;
  v117[16] = v118;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v23);
  v24 = type metadata accessor for LazyVGrid(255, v23);
  v25 = type metadata accessor for ModifiedContent(255, v24, &type metadata for _FlexFrameLayout);
  v26 = type metadata accessor for ModifiedContent(255, v25, &type metadata for _PaddingLayout);
  v27 = type metadata accessor for _ConditionalContent(255, v22, v26);
  v28 = type metadata accessor for ModifiedContent(255, v27, &type metadata for _PaddingLayout);
  AssociatedConformanceWitness = type metadata accessor for ModifiedContent(255, v28, &type metadata for OrthogonalScrollingModifier);
  v117[14] = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v21);
  v117[15] = &protocol witness table for _PaddingLayout;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  v117[12] = swift_getWitnessTable(&protocol conformance descriptor for LazyVGrid<A>, v24);
  v117[13] = &protocol witness table for _FlexFrameLayout;
  v117[10] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  v117[11] = &protocol witness table for _PaddingLayout;
  v117[8] = v29;
  v117[9] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v26);
  v117[6] = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v27);
  v117[7] = &protocol witness table for _PaddingLayout;
  v117[4] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
  v117[5] = sub_10006FD2C();
  v30 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, AssociatedConformanceWitness);
  v126 = AssociatedConformanceWitness;
  v127 = v30;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v126, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v32 = swift_getTupleTypeMetadata2(255, v105, OpaqueTypeMetadata2, 0, 0);
  v33 = type metadata accessor for TupleView(255, v32);
  v96 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v33);
  v97 = v33;
  v34 = type metadata accessor for VStack(0, v33);
  v100 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v98 = (char *)v92 - v35;
  v36 = sub_100044B54(&qword_10119EAC8);
  v102 = v34;
  v105 = type metadata accessor for ModifiedContent(0, v34, v36);
  AssociatedConformanceWitness = *(_QWORD *)(v105 - 8);
  v37 = __chkstk_darwin(v105);
  v99 = (char *)v92 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v101 = (uint64_t)v92 - v39;
  v40 = type metadata accessor for ModuleLayout.Context(0);
  __chkstk_darwin(v40);
  v42 = (double *)((char *)v92 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = (uint64_t)v104;
  v44 = v106;
  v45 = (__int128 *)(v106 + *((int *)v104 + 35));
  v46 = v45[1];
  v124 = *v45;
  v125[0] = v46;
  *(_OWORD *)((char *)v125 + 9) = *(__int128 *)((char *)v45 + 25);
  sub_100065228((uint64_t)&v124, (uint64_t)&v126, &qword_10119EAD0);
  sub_10006FD70((uint64_t)&v126, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B404);
  sub_1008239E0((uint64_t)v120);
  sub_10006FD70((uint64_t)&v124, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B610);
  sub_100065228((uint64_t)v120, (uint64_t)v121, &qword_10119EAD8);
  if (v121[0] == 2)
    v47 = 2;
  else
    v47 = v121[0] & 1;
  v48 = v44;
  v49 = *(unsigned __int8 *)(v44 + 16);
  v95 = v47;
  if (v49 == 2)
    v50 = (v121[0] == 2) | v47;
  else
    v50 = v49 & 1;
  v93 = v50;
  v51 = (_QWORD *)(v44 + *(int *)(v43 + 112));
  v53 = (double (*)(_QWORD, uint64_t, uint64_t, uint64_t, double *))*v51;
  v52 = v51[1];
  v94 = v53;
  v92[1] = v52;
  v54 = v44 + *(int *)(v43 + 144);
  v55 = *(_OWORD *)(v54 + 16);
  v122[0] = *(_OWORD *)v54;
  v122[1] = v55;
  v123 = *(_BYTE *)(v54 + 32);
  sub_100065228((uint64_t)v122, (uint64_t)v131, &qword_10119EAE0);
  sub_10006FDA8((uint64_t)v131, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B410);
  v92[0] = sub_100823BC4();
  v57 = v56;
  v59 = v58;
  v61 = v60;
  sub_10006FDA8((uint64_t)v122, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B61C);
  v62 = sub_10006C820(v43);
  v64 = v63;
  v65 = sub_10006C898(v43);
  sub_1008237B8((uint64_t)v42 + *(int *)(v40 + 28));
  v66 = v93 & 1;
  *(_BYTE *)v42 = v93 & 1;
  v42[1] = v62;
  *((_QWORD *)v42 + 2) = v64;
  *((_BYTE *)v42 + 24) = v65;
  v67 = v94(v92[0], v57, v59, v61, v42);
  v69 = v68;
  v70 = v67;
  v72 = v71;
  v74 = v73 & 1;
  swift_bridgeObjectRelease(v57);
  sub_10006FDE0((uint64_t)v42);
  v75 = __chkstk_darwin(*(_QWORD *)(v48 + *(int *)(v43 + 104)));
  v76 = v110;
  v77 = v113;
  v92[-16] = v109;
  v92[-15] = v77;
  v78 = v112;
  v92[-14] = v108;
  v92[-13] = v78;
  v79 = *(_QWORD *)(v43 + 56);
  v92[-12] = v76;
  v92[-11] = v79;
  v80 = *(_QWORD *)(v43 + 72);
  v92[-10] = v107;
  v92[-9] = v80;
  v92[-8] = v111;
  v92[-7] = v48;
  LOBYTE(v92[-6]) = v74;
  v92[-5] = v69;
  *(double *)&v92[-4] = v70;
  v92[-3] = v72;
  LOBYTE(v92[-2]) = v66;
  BYTE1(v92[-2]) = v95;
  v81 = v98;
  VStack.init(alignment:spacing:content:)(v75, 0, 0, sub_10006FE1C);
  KeyPath = swift_getKeyPath(&unk_100EA8570);
  v117[0] = v74;
  v117[1] = v69;
  *(double *)&v117[2] = v70;
  v117[3] = v72;
  v83 = v102;
  v84 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v102);
  v85 = (uint64_t)v99;
  View.environment<A>(_:_:)(KeyPath, v117, v83, v84);
  swift_bridgeObjectRelease(v69);
  v86 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v100 + 8))(v81, v83, v86);
  v87 = sub_100049F28(&qword_10119EAE8, &qword_10119EAC8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v115 = v84;
  v116 = v87;
  v88 = v105;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v105);
  v89 = v101;
  sub_10081EB14(v85, v88, v101);
  v90 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  v90(v85, v88);
  sub_1000EA744(v89, v88, v114);
  return ((uint64_t (*)(uint64_t, uint64_t))v90)(v89, v88);
}

uint64_t sub_10006F31C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t WitnessTable;
  uint64_t AssociatedConformanceWitness;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t TupleTypeMetadata2;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 *v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  double v79;
  double v80;
  double v81;
  void (*v82)(char *, uint64_t);
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  double v87;
  double v88;
  double v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t OpaqueTypeConformance2;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  char *v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  int v139;
  char *v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD v151[2];
  uint64_t v152;
  char *v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  _BYTE v180[40];
  _BYTE v181[40];
  char v182[40];
  char v183[40];
  __int128 v184;
  _OWORD v185[2];
  __int128 v186;
  _OWORD v187[2];
  _BYTE v188[64];

  v117 = a7;
  v115 = a6;
  v142 = a5;
  v139 = a4;
  v138 = a3;
  v148 = a1;
  v144 = a9;
  v125 = a14;
  v113 = a15;
  v124 = a16;
  v114 = a17;
  v119 = a12;
  v137 = a2 & 1;
  v143 = type metadata accessor for AccessibilityChildBehavior(0);
  v141 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v140 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ModifiedContent(255, a12, &type metadata for _HiddenModifier);
  v23 = type metadata accessor for ModifiedContent(255, v22, &type metadata for _FrameLayout);
  v147 = type metadata accessor for ModifiedContent(255, v23, &type metadata for _FrameLayout);
  v116 = a13;
  v24 = type metadata accessor for EnumeratedCollection(255, a6, a13, a17);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a13 + 8) + 8) + 8), a6, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v26 = swift_getAssociatedTypeWitness(255, a17, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v112 = a8;
  v27 = type metadata accessor for ModifiedContent(255, a8, &type metadata for _FrameLayout);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v24);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a17, AssociatedTypeWitness, v26, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v156 = v24;
  v157 = v26;
  v158 = v27;
  v159 = WitnessTable;
  v160 = AssociatedConformanceWitness;
  v30 = type metadata accessor for ForEach(255, &v156);
  v178 = a15;
  v179 = &protocol witness table for _FrameLayout;
  v177 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v30);
  v31 = type metadata accessor for LazyHGrid(255, v30);
  v32 = type metadata accessor for ModifiedContent(255, v31, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v147, v32, 0, 0);
  v34 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v35 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v34);
  v36 = type metadata accessor for HStack(255, v34, v35);
  v37 = type metadata accessor for ModifiedContent(255, v36, &type metadata for _PaddingLayout);
  v156 = v24;
  v157 = v26;
  v158 = a8;
  v159 = WitnessTable;
  v160 = AssociatedConformanceWitness;
  v38 = type metadata accessor for ForEach(255, &v156);
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v38);
  v39 = type metadata accessor for LazyVGrid(255, v38);
  v40 = type metadata accessor for ModifiedContent(255, v39, &type metadata for _FlexFrameLayout);
  v41 = type metadata accessor for ModifiedContent(255, v40, &type metadata for _PaddingLayout);
  v42 = type metadata accessor for _ConditionalContent(0, v37, v41);
  v132 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v147 = (uint64_t)&v111 - v43;
  v44 = type metadata accessor for ModifiedContent(0, v42, &type metadata for _PaddingLayout);
  v131 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v129 = (char *)&v111 - v45;
  v46 = type metadata accessor for ModifiedContent(0, v44, &type metadata for OrthogonalScrollingModifier);
  v134 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v130 = (char *)&v111 - v47;
  v175 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v36);
  v176 = &protocol witness table for _PaddingLayout;
  v48 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v37);
  v173 = swift_getWitnessTable(&protocol conformance descriptor for LazyVGrid<A>, v39);
  v174 = &protocol witness table for _FlexFrameLayout;
  v171 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v40);
  v172 = &protocol witness table for _PaddingLayout;
  v49 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v41);
  v169 = v48;
  v170 = v49;
  v135 = v42;
  v118 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v42);
  v167 = v118;
  v168 = &protocol witness table for _PaddingLayout;
  v133 = v44;
  v50 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v44);
  v51 = sub_10006FD2C();
  v120 = v50;
  v165 = v50;
  v166 = v51;
  v52 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v46);
  v136 = v46;
  v156 = v46;
  v157 = v52;
  v122 = v52;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v156, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v126 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v54 = __chkstk_darwin(OpaqueTypeMetadata2);
  v128 = (char *)&v111 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __chkstk_darwin(v54);
  v121 = (char *)&v111 - v57;
  v58 = __chkstk_darwin(v56);
  v127 = (uint64_t)&v111 - v59;
  v111 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v58);
  v61 = (char *)&v111 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v62;
  v64 = type metadata accessor for ModifiedContent(0, v62, &type metadata for _PaddingLayout);
  v145 = *(_QWORD *)(v64 - 8);
  v65 = __chkstk_darwin(v64);
  v123 = (char *)&v111 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __chkstk_darwin(v65);
  v69 = (char *)&v111 - v68;
  __chkstk_darwin(v67);
  v146 = (uint64_t)&v111 - v70;
  v156 = v115;
  v157 = v63;
  v158 = v112;
  v159 = v119;
  v71 = v125;
  v160 = v116;
  v161 = v125;
  v162 = v113;
  v163 = v124;
  v164 = v114;
  v72 = type metadata accessor for ModuleGridView(0, (uint64_t)&v156);
  v73 = v148;
  (*(void (**)(void))(v148 + *(int *)(v72 + 116)))();
  v74 = (__int128 *)(v73 + *(int *)(v72 + 140));
  v75 = v74[1];
  v186 = *v74;
  v187[0] = v75;
  *(_OWORD *)((char *)v187 + 9) = *(__int128 *)((char *)v74 + 25);
  sub_100065228((uint64_t)&v186, (uint64_t)v188, &qword_10119EAD0);
  sub_10006FD70((uint64_t)v188, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B404);
  sub_1008239E0((uint64_t)v180);
  sub_10006FD70((uint64_t)&v186, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B610);
  v76 = sub_100065228((uint64_t)v180, (uint64_t)v183, &qword_10119EAD8);
  if (v183[0] == 2)
  {
    v77 = static Edge.Set.all.getter(v76);
    EdgeInsets.init(_:length:)(v77, 0.0);
  }
  else
  {
    v78 = EdgeInsets.affecting(_:)(0);
  }
  View.padding(_:)(v63, v71, v78, v79, v80, v81);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v61, v63);
  v154 = v71;
  v155 = &protocol witness table for _PaddingLayout;
  v125 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v64);
  sub_10081EB14((uint64_t)v69, v64, v146);
  v82 = *(void (**)(char *, uint64_t))(v145 + 8);
  v82(v69, v64);
  sub_10006C8F4(v137, v138, v72, v147, a10, a11);
  v83 = v74[1];
  v184 = *v74;
  v185[0] = v83;
  *(_OWORD *)((char *)v185 + 9) = *(__int128 *)((char *)v74 + 25);
  sub_100065228((uint64_t)&v184, (uint64_t)&v156, &qword_10119EAD0);
  sub_10006FD70((uint64_t)&v156, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B404);
  sub_1008239E0((uint64_t)v181);
  sub_10006FD70((uint64_t)&v184, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B610);
  v84 = sub_100065228((uint64_t)v181, (uint64_t)v182, &qword_10119EAD8);
  if (v182[0] == 2)
  {
    v85 = static Edge.Set.all.getter(v84);
    EdgeInsets.init(_:length:)(v85, 0.0);
  }
  else
  {
    v86 = EdgeInsets.affecting(_:)(0);
  }
  v90 = v139 & 1;
  v91 = v129;
  v92 = v135;
  v93 = v147;
  View.padding(_:)(v135, v118, v86, v87, v88, v89);
  (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v93, v92);
  v94 = v130;
  v95 = v90;
  v96 = v133;
  sub_1000AC280(v95, v142, 0, v133, v120);
  v97 = (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v91, v96);
  v98 = v140;
  static AccessibilityChildBehavior.contain.getter(v97);
  v99 = (uint64_t)v121;
  v100 = v122;
  v101 = v136;
  View.accessibilityElement(children:)(v98, v136, v122);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v98, v143);
  (*(void (**)(char *, uint64_t))(v134 + 8))(v94, v101);
  v152 = v101;
  v153 = (char *)v100;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v152, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v103 = v127;
  sub_10081EB14(v99, OpaqueTypeMetadata2, v127);
  v104 = v126;
  v105 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
  v105(v99, OpaqueTypeMetadata2);
  v106 = v146;
  v107 = (uint64_t)v123;
  (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v123, v146, v64);
  v152 = v107;
  v108 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
  v109 = v128;
  v108(v128, v103, OpaqueTypeMetadata2);
  v153 = v109;
  v151[0] = v64;
  v151[1] = OpaqueTypeMetadata2;
  v149 = v125;
  v150 = OpaqueTypeConformance2;
  sub_1004D49B8(&v152, 2uLL, (uint64_t)v151);
  v105(v103, OpaqueTypeMetadata2);
  v82((char *)v106, v64);
  v105((uint64_t)v109, OpaqueTypeMetadata2);
  return ((uint64_t (*)(uint64_t, uint64_t))v82)(v107, v64);
}

unint64_t sub_10006FD2C()
{
  unint64_t result;

  result = qword_10119EAC0;
  if (!qword_10119EAC0)
  {
    result = swift_getWitnessTable(&unk_100EA99B8, &type metadata for OrthogonalScrollingModifier);
    atomic_store(result, (unint64_t *)&qword_10119EAC0);
  }
  return result;
}

uint64_t sub_10006FD70(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

uint64_t sub_10006FDA8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_10006FDE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ModuleLayout.Context(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006FE1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10006F31C(*(_QWORD *)(v1 + 88), *(_BYTE *)(v1 + 96), *(_QWORD *)(v1 + 104), *(unsigned __int8 *)(v1 + 128), *(unsigned __int8 *)(v1 + 129), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1, *(double *)(v1 + 112), *(double *)(v1 + 120), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

unint64_t sub_10006FE74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EAF0;
  if (!qword_10119EAF0)
  {
    v1 = type metadata accessor for PinnedScrollableViews(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PinnedScrollableViews, v1);
    atomic_store(result, (unint64_t *)&qword_10119EAF0);
  }
  return result;
}

uint64_t sub_10006FEBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10006E5B0(v1[11], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1, v1[9], v1[10]);
}

uint64_t sub_10006FEF0()
{
  return sub_10006FF4C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double, double, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006D4A4);
}

unint64_t sub_10006FEFC()
{
  unint64_t result;

  result = qword_10119EB08;
  if (!qword_10119EB08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _HiddenModifier, &type metadata for _HiddenModifier);
    atomic_store(result, &qword_10119EB08);
  }
  return result;
}

uint64_t sub_10006FF40()
{
  return sub_10006FF4C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double, double, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006DF24);
}

uint64_t sub_10006FF4C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double, double, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 88), *(unsigned __int8 *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(double *)(v1 + 112), *(double *)(v1 + 120), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_10006FF98()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _OWORD v19[4];
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_OWORD *)(v0 + 32);
  v19[0] = *(_OWORD *)(v0 + 16);
  v18 = *(_QWORD *)&v19[0];
  v3 = *(_OWORD *)(v0 + 48);
  v4 = *(_OWORD *)(v0 + 64);
  v19[1] = v2;
  v19[2] = v3;
  v19[3] = v4;
  v20 = v1;
  v5 = (int *)type metadata accessor for ModuleGridView(0, (uint64_t)v19);
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 88) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v0 + v8;
  swift_release(*(_QWORD *)(v0 + v8 + 8));
  (*(void (**)(uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v0 + v8 + v5[24]);
  swift_release(*(_QWORD *)(v0 + v8 + v5[28] + 8));
  swift_release(*(_QWORD *)(v0 + v8 + v5[29] + 8));
  swift_release(*(_QWORD *)(v0 + v8 + v5[30] + 8));
  swift_release(*(_QWORD *)(v0 + v8 + v5[31] + 8));
  sub_10006B5F8(*(_QWORD *)(v10 + v5[32]), *(_QWORD *)(v10 + v5[32] + 8), *(_BYTE *)(v10 + v5[32] + 16));
  sub_10006B604(*(_QWORD *)(v10 + v5[33]), *(_BYTE *)(v10 + v5[33] + 8));
  v11 = (_QWORD *)(v0 + v8 + v5[34]);
  v12 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  v14 = (v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = v10 + v5[35];
  sub_10006B610(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), *(_QWORD *)(v15 + 32), *(_BYTE *)(v15 + 40));
  v16 = v10 + v5[36];
  sub_10006B61C(*(_QWORD *)v16, *(_QWORD *)(v16 + 8), *(_QWORD *)(v16 + 16), *(_QWORD *)(v16 + 24), *(_BYTE *)(v16 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v14 + 8));
  return swift_deallocObject(v0, v14 + 32, v7 | 7);
}

uint64_t sub_100070154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v16;
  _QWORD v20[9];

  v5 = v3[3];
  v6 = v3[4];
  v7 = v3[5];
  v8 = v3[6];
  v9 = v3[7];
  v10 = v3[8];
  v11 = v3[9];
  v12 = v3[10];
  v20[0] = v3[2];
  v4 = v20[0];
  v20[1] = v5;
  v20[2] = v6;
  v20[3] = v7;
  v20[4] = v8;
  v20[5] = v9;
  v20[6] = v10;
  v20[7] = v11;
  v20[8] = v12;
  v13 = *(_QWORD *)(type metadata accessor for ModuleGridView(0, (uint64_t)v20) - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  *(_QWORD *)&v16 = v7;
  *((_QWORD *)&v16 + 1) = v8;
  return sub_10006E3AC(a1, a2, (uint64_t)v3 + v14, v4, v5, v6, a3, *(double *)((char *)v3 + ((*(_QWORD *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), v16, v9, v10, v11, v12);
}

uint64_t sub_100070228()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _OWORD v18[4];
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_OWORD *)(v0 + 32);
  v18[0] = *(_OWORD *)(v0 + 16);
  v17 = *(_QWORD *)&v18[0];
  v3 = *(_OWORD *)(v0 + 48);
  v4 = *(_OWORD *)(v0 + 64);
  v18[1] = v2;
  v18[2] = v3;
  v18[3] = v4;
  v19 = v1;
  v5 = (int *)type metadata accessor for ModuleGridView(0, (uint64_t)v18);
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 88) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v0 + v8;
  swift_release(*(_QWORD *)(v0 + v8 + 8));
  (*(void (**)(uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v0 + v8 + v5[24]);
  swift_release(*(_QWORD *)(v0 + v8 + v5[28] + 8));
  swift_release(*(_QWORD *)(v0 + v8 + v5[29] + 8));
  swift_release(*(_QWORD *)(v0 + v8 + v5[30] + 8));
  swift_release(*(_QWORD *)(v0 + v8 + v5[31] + 8));
  sub_10006B5F8(*(_QWORD *)(v10 + v5[32]), *(_QWORD *)(v10 + v5[32] + 8), *(_BYTE *)(v10 + v5[32] + 16));
  sub_10006B604(*(_QWORD *)(v10 + v5[33]), *(_BYTE *)(v10 + v5[33] + 8));
  v11 = (_QWORD *)(v0 + v8 + v5[34]);
  v12 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  v14 = v10 + v5[35];
  sub_10006B610(*(_QWORD *)v14, *(_QWORD *)(v14 + 8), *(_QWORD *)(v14 + 16), *(_QWORD *)(v14 + 24), *(_QWORD *)(v14 + 32), *(_BYTE *)(v14 + 40));
  v15 = v10 + v5[36];
  sub_10006B61C(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), *(_BYTE *)(v15 + 32));
  return swift_deallocObject(v0, v8 + v9, v7 | 7);
}

uint64_t sub_1000703CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v17[9];

  v4 = v3[3];
  v5 = v3[4];
  v6 = v3[5];
  v7 = v3[6];
  v8 = v3[7];
  v9 = v3[8];
  v10 = v3[9];
  v11 = v3[10];
  v17[0] = v3[2];
  v17[1] = v4;
  v17[2] = v5;
  v17[3] = v6;
  v17[4] = v7;
  v17[5] = v8;
  v17[6] = v9;
  v17[7] = v10;
  v17[8] = v11;
  v12 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ModuleGridView(0, (uint64_t)v17) - 8) + 80);
  return sub_10006E95C(a1, a2, (uint64_t)v3 + ((v12 + 88) & ~v12), v5, a3, v8, v9);
}

uint64_t sub_100070484(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *a1;
  v3 = a1[2];
  v2 = a1[3];
  v38 = v3;
  v4 = a1[4];
  v5 = a1[8];
  v39 = type metadata accessor for ModifiedContent(255, a1[1], &type metadata for _PaddingLayout);
  v6 = type metadata accessor for ModifiedContent(255, v2, &type metadata for _HiddenModifier);
  v7 = type metadata accessor for ModifiedContent(255, v6, &type metadata for _FrameLayout);
  v8 = type metadata accessor for ModifiedContent(255, v7, &type metadata for _FrameLayout);
  v9 = type metadata accessor for EnumeratedCollection(255, v1, v4, v5);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 8) + 8), v1, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v11 = swift_getAssociatedTypeWitness(255, v5, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v12 = type metadata accessor for ModifiedContent(255, v3, &type metadata for _FrameLayout);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v9);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v5, AssociatedTypeWitness, v11, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v40 = v9;
  v41 = v11;
  v42 = v12;
  v43 = WitnessTable;
  v44 = AssociatedConformanceWitness;
  v15 = type metadata accessor for ForEach(255, &v40);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v15);
  v16 = type metadata accessor for LazyHGrid(255, v15);
  v17 = type metadata accessor for ModifiedContent(255, v16, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v8, v17, 0, 0);
  v19 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v20 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v19);
  v21 = type metadata accessor for HStack(255, v19, v20);
  v22 = type metadata accessor for ModifiedContent(255, v21, &type metadata for _PaddingLayout);
  v40 = v9;
  v41 = v11;
  v42 = v38;
  v43 = WitnessTable;
  v44 = AssociatedConformanceWitness;
  v23 = type metadata accessor for ForEach(255, &v40);
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v23);
  v24 = type metadata accessor for LazyVGrid(255, v23);
  v25 = type metadata accessor for ModifiedContent(255, v24, &type metadata for _FlexFrameLayout);
  v26 = type metadata accessor for ModifiedContent(255, v25, &type metadata for _PaddingLayout);
  v27 = type metadata accessor for _ConditionalContent(255, v22, v26);
  v28 = type metadata accessor for ModifiedContent(255, v27, &type metadata for _PaddingLayout);
  v29 = type metadata accessor for ModifiedContent(255, v28, &type metadata for OrthogonalScrollingModifier);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v21);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  swift_getWitnessTable(&protocol conformance descriptor for LazyVGrid<A>, v24);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v26);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v27);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
  sub_10006FD2C();
  v30 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v29);
  v40 = v29;
  v41 = v30;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v32 = swift_getTupleTypeMetadata2(255, v39, OpaqueTypeMetadata2, 0, 0);
  v33 = type metadata accessor for TupleView(255, v32);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v33);
  v34 = type metadata accessor for VStack(255, v33);
  v35 = sub_100044B54(&qword_10119EAC8);
  v36 = type metadata accessor for ModifiedContent(255, v34, v35);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v34);
  sub_100049F28(&qword_10119EAE8, &qword_10119EAC8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v36);
}

double sub_10007090C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void (*v89)(char *, char *, uint64_t);
  char *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  _OWORD *v97;
  __int128 v98;
  double result;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _OWORD *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _OWORD v127[4];

  v125 = a2;
  v126 = a7;
  v118 = a4;
  v119 = a5;
  LODWORD(v117) = a3;
  v120 = a8;
  v10 = sub_100007E8C(&qword_1011B59B0);
  __chkstk_darwin(v10);
  v111 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for MusicVideo(0);
  v110 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v106 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v13);
  v113 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for Song(0);
  v112 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v108 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A9A00);
  v17 = __chkstk_darwin(v16);
  v114 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = *(_QWORD *)(a6 - 8);
  v19 = *(_QWORD *)(v121 + 64);
  v20 = __chkstk_darwin(v17);
  v116 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v122 = (char *)&v100 - v22;
  v23 = __chkstk_darwin(v21);
  v124 = (uint64_t)&v100 - v24;
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v100 - v26;
  v28 = __chkstk_darwin(v25);
  v30 = (char *)&v100 - v29;
  __chkstk_darwin(v28);
  v32 = (char *)&v100 - v31;
  v33 = type metadata accessor for Track(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (char *)&v100 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a1;
  v38 = a1;
  v39 = a6;
  v40 = MusicLibrary.state<A>(for:)(v38, a6, v126);
  v41 = 0;
  v42 = 0;
  v123 = v40;
  if ((v117 & 1) == 0)
  {
    v104 = v32;
    v102 = v36;
    v105 = v34;
    v103 = v30;
    v43 = (uint64_t)v114;
    v101 = v27;
    v44 = v115;
    v107 = v39;
    v117 = v37;
    v45 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v46 = objc_msgSend(v45, "userInterfaceIdiom");

    if (v46 == (id)6)
    {
      v47 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
      v48 = v104;
      v37 = v117;
      v49 = v107;
      v47(v104, v117, v107);
      v50 = swift_dynamicCast(v43, v48, v49, v33, 6);
      v51 = v105;
      v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
      if ((v50 & 1) != 0)
      {
        v52(v43, 0, 1, v33);
        v53 = v102;
        v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 32))(v102, v43, v33);
        v55 = Track.albumTitle.getter(v54);
        v42 = v56;
        (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v33);
        v41 = v55;
        v39 = v49;
        goto LABEL_12;
      }
      v52(v43, 1, 1, v33);
      sub_10004FF60(v43, &qword_1011A9A00);
      v57 = v103;
      v47(v103, v37, v49);
      v58 = (uint64_t)v113;
      v59 = swift_dynamicCast(v113, v57, v49, v44, 6);
      v60 = v112;
      v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 56);
      if ((v59 & 1) != 0)
      {
        v61(v58, 0, 1, v44);
        v62 = v108;
        v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 32))(v108, v58, v44);
        v64 = Song.albumTitle.getter(v63);
        v65 = v62;
        v42 = v66;
        (*(void (**)(char *, uint64_t))(v60 + 8))(v65, v44);
        v41 = v64;
        v39 = v49;
        goto LABEL_12;
      }
      v61(v58, 1, 1, v44);
      sub_10004FF60(v58, &qword_10119E480);
      v67 = v101;
      v47(v101, v37, v49);
      v68 = (uint64_t)v111;
      v69 = v67;
      v70 = v109;
      v71 = swift_dynamicCast(v111, v69, v49, v109, 6);
      v72 = v110;
      v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56);
      if ((v71 & 1) != 0)
      {
        v73(v68, 0, 1, v70);
        v74 = v106;
        v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 32))(v106, v68, v70);
        v76 = MusicVideo.albumTitle.getter(v75);
        v42 = v77;
        (*(void (**)(char *, uint64_t))(v72 + 8))(v74, v70);
        v41 = v76;
LABEL_11:
        v37 = v117;
        v39 = v107;
        goto LABEL_12;
      }
      v73(v68, 1, 1, v70);
      sub_10004FF60(v68, &qword_1011B59B0);
    }
    v41 = 0;
    v42 = 0;
    goto LABEL_11;
  }
LABEL_12:
  v115 = v42;
  v117 = v41;
  v78 = v39;
  v79 = v121;
  v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16);
  v80(v124, v37, v39);
  v80((uint64_t)v122, v37, v39);
  v81 = *(unsigned __int8 *)(v79 + 80);
  v82 = (v81 + 40) & ~v81;
  v114 = (char *)(v81 | 7);
  v83 = v19 + 7;
  v84 = (v19 + 7 + v82) & 0xFFFFFFFFFFFFFFF8;
  v85 = (_QWORD *)swift_allocObject(&unk_1010AF820, v84 + 8, v81 | 7);
  v86 = v125;
  v87 = v126;
  v85[2] = v78;
  v85[3] = v87;
  v85[4] = v86;
  v88 = (char *)v85 + v82;
  v89 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
  v89(v88, v122, v78);
  *(_QWORD *)((char *)v85 + v84) = v123;
  v90 = v116;
  v89(v116, (char *)v37, v78);
  v91 = (v81 + 32) & ~v81;
  v92 = (v83 + v91) & 0xFFFFFFFFFFFFFFF8;
  v93 = (v92 + 15) & 0xFFFFFFFFFFFFFFF8;
  v94 = swift_allocObject(&unk_1010AF848, v93 + 8, v114);
  *(_QWORD *)(v94 + 16) = v78;
  *(_QWORD *)(v94 + 24) = v87;
  v89((char *)(v94 + v91), v90, v78);
  *(_QWORD *)(v94 + v92) = v118;
  v95 = v123;
  *(_QWORD *)(v94 + v93) = v123;
  Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)(v124, v117, v115, (uint64_t)sub_1000760D4, (uint64_t)v85, (uint64_t)&unk_10119EB38, v94, v119, v127, v78, *(_QWORD *)(v87 + 8));
  v96 = v127[1];
  v97 = v120;
  *v120 = v127[0];
  v97[1] = v96;
  v98 = v127[3];
  v97[2] = v127[2];
  v97[3] = v98;
  *(_QWORD *)&result = swift_retain(v95).n128_u64[0];
  return result;
}

unint64_t sub_10007102C(char *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  __n128 v33;
  char *v34;
  _QWORD *v35;
  void (*v36)(char *, __n128);
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  __n128 v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;

  v79 = a2;
  v80 = a1;
  v78 = a3;
  v3 = *a3;
  v4 = sub_100007E8C(&qword_1011B59B0);
  __chkstk_darwin(v4);
  v71 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicVideo(0);
  v7 = *(_QWORD *)(v6 - 8);
  v72 = v6;
  v73 = v7;
  __chkstk_darwin(v6);
  v69 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v9);
  v74 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Song(0);
  v12 = *(_QWORD *)(v11 - 8);
  v75 = v11;
  v76 = v12;
  __chkstk_darwin(v11);
  v70 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A9A00);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v3 + class metadata base offset for MusicLibrary.ItemState);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v15);
  v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v69 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v69 - v26;
  v28 = type metadata accessor for Track(0);
  v77 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MusicLibrary(0);
  v31 = static MusicLibrary.shared.getter();
  v32 = static MusicLibrary.== infix(_:_:)(v80, v31);
  v33 = swift_release(v31);
  if ((v32 & 1) == 0)
    return 0xD00000000000001DLL;
  v34 = v30;
  v80 = v22;
  v35 = v78;
  v36 = *(void (**)(char *, __n128))(v19 + 16);
  v37 = v79;
  v36(v27, v33);
  v38 = swift_dynamicCast(v17, v27, v18, v28, 6);
  v39 = v77;
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
  v41 = v18;
  if ((v38 & 1) != 0)
  {
    v40(v17, 0, 1, v28);
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v34, v17, v28);
    v42 = sub_100007E8C((uint64_t *)&unk_1011B6E70);
    v43 = v35;
    if (swift_dynamicCastClass(v35, v42))
    {
      swift_retain(v35);
      v44 = Track.supportsContainerNavigation(itemState:)();
      v45 = swift_release(v43);
      (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v34, v28, v45);
      if ((v44 & 1) != 0)
        return 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v28);
    }
  }
  else
  {
    v40(v17, 1, 1, v28);
    sub_10004FF60((uint64_t)v17, &qword_1011A9A00);
    v43 = v35;
  }
  v47 = v37;
  ((void (*)(char *, uint64_t, uint64_t))v36)(v25, v37, v18);
  v48 = (uint64_t)v74;
  v49 = v75;
  v50 = swift_dynamicCast(v74, v25, v41, v75, 6);
  v51 = v76;
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
  if ((v50 & 1) != 0)
  {
    v52(v48, 0, 1, v49);
    v53 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v70, v48, v49);
    v54 = sub_100007E8C(&qword_10119EB80);
    v55 = swift_dynamicCastClass(v43, v54);
    v56 = v80;
    if (v55)
    {
      v57 = v55;
      swift_retain(v43);
      LOBYTE(v57) = Song.supportsContainerNavigation(itemState:)(v57);
      v58 = swift_release(v43);
      (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v53, v49, v58);
      if ((v57 & 1) != 0)
        return 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v49);
    }
  }
  else
  {
    v52(v48, 1, 1, v49);
    sub_10004FF60(v48, &qword_10119E480);
    v56 = v80;
  }
  ((void (*)(char *, uint64_t, uint64_t))v36)(v56, v47, v41);
  v59 = (uint64_t)v71;
  v60 = v72;
  v61 = swift_dynamicCast(v71, v56, v41, v72, 6);
  v62 = v73;
  v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
  if ((v61 & 1) != 0)
  {
    v63(v59, 0, 1, v60);
    v64 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v69, v59, v60);
    v65 = sub_100007E8C((uint64_t *)&unk_1011A3EB0);
    v66 = swift_dynamicCastClass(v43, v65);
    if (v66)
    {
      v67 = v66;
      swift_retain(v43);
      LOBYTE(v67) = MusicVideo.supportsContainerNavigation(itemState:)(v67);
      v68 = swift_release(v43);
      (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v64, v60, v68);
      if ((v67 & 1) != 0)
        return 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v60);
    }
  }
  else
  {
    v63(v59, 1, 1, v60);
    sub_10004FF60(v59, &qword_1011B59B0);
  }
  return 0xD000000000000010;
}

uint64_t sub_1000715B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = *a3;
  v5 = sub_100007E8C(&qword_1011B59B0);
  v3[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicVideo(0);
  v3[6] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[7] = v7;
  v3[8] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicPropertySource(0);
  v3[9] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[10] = v9;
  v3[11] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119E480);
  v3[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Song(0);
  v3[13] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[14] = v12;
  v3[15] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A9A00);
  v3[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v4 + class metadata base offset for MusicLibrary.ItemState);
  v3[17] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[18] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[19] = swift_task_alloc(v16);
  v3[20] = swift_task_alloc(v16);
  v3[21] = swift_task_alloc(v16);
  v17 = type metadata accessor for Track(0);
  v3[22] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v3[23] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[24] = swift_task_alloc(v19);
  v3[25] = swift_task_alloc(v19);
  return swift_task_switch(sub_100071760, 0, 0);
}

uint64_t sub_100071760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  char v7;
  void (*v8)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t (*v33)();
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void (*v42)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16);
  v6(v3, *(_QWORD *)(v0 + 16), v4);
  v7 = swift_dynamicCast(v5, v3, v4, v1, 6);
  v8 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v9 = *(_QWORD *)(v0 + 128);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 88);
    v8(*(_QWORD *)(v0 + 128), 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v10, v9, v11);
    MusicLibrary.ItemState.containerLoadingSource.getter(v13);
    v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10119EB40 + dword_10119EB40);
    v14 = (_QWORD *)swift_task_alloc(unk_10119EB44);
    *(_QWORD *)(v0 + 208) = v14;
    *v14 = v0;
    v14[1] = sub_100071B50;
    v15 = *(_QWORD *)(v0 + 200);
    return v62(*(_QWORD *)(v0 + 24), v15, *(_QWORD *)(v0 + 88));
  }
  v16 = *(_QWORD *)(v0 + 160);
  v17 = *(_QWORD *)(v0 + 136);
  v19 = *(_QWORD *)(v0 + 104);
  v18 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 96);
  v21 = *(_QWORD *)(v0 + 16);
  v8(*(_QWORD *)(v0 + 128), 1, 1, *(_QWORD *)(v0 + 176));
  sub_10004FF60(v9, &qword_1011A9A00);
  v6(v16, v21, v17);
  v22 = swift_dynamicCast(v20, v16, v17, v19, 6);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if ((v22 & 1) != 0)
  {
    v25 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 176);
    v28 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 96);
    v29 = *(_QWORD *)(v0 + 104);
    v31 = *(_QWORD *)(v0 + 88);
    v23(v30, 0, 1, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v27, v30, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v24, v27, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 104))(v24, enum case for Track.song(_:), v26);
    MusicLibrary.ItemState.containerLoadingSource.getter(v31);
    v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10119EB40 + dword_10119EB40);
    v32 = (_QWORD *)swift_task_alloc(unk_10119EB44);
    v33 = sub_100071C94;
    *(_QWORD *)(v0 + 216) = v32;
LABEL_7:
    *v32 = v0;
    v32[1] = v33;
    v15 = *(_QWORD *)(v0 + 192);
    return v62(*(_QWORD *)(v0 + 24), v15, *(_QWORD *)(v0 + 88));
  }
  v34 = *(_QWORD *)(v0 + 152);
  v35 = *(_QWORD *)(v0 + 136);
  v36 = *(_QWORD *)(v0 + 96);
  v37 = *(_QWORD *)(v0 + 48);
  v38 = *(_QWORD *)(v0 + 56);
  v39 = *(_QWORD *)(v0 + 40);
  v40 = *(_QWORD *)(v0 + 16);
  v23(v36, 1, 1, *(_QWORD *)(v0 + 104));
  sub_10004FF60(v36, &qword_10119E480);
  v6(v34, v40, v35);
  v41 = swift_dynamicCast(v39, v34, v35, v37, 6);
  v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
  if ((v41 & 1) != 0)
  {
    v44 = *(_QWORD *)(v0 + 184);
    v43 = *(_QWORD *)(v0 + 192);
    v45 = *(_QWORD *)(v0 + 176);
    v46 = *(_QWORD *)(v0 + 88);
    v48 = *(_QWORD *)(v0 + 56);
    v47 = *(_QWORD *)(v0 + 64);
    v50 = *(_QWORD *)(v0 + 40);
    v49 = *(_QWORD *)(v0 + 48);
    v42(v50, 0, 1, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v47, v50, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v43, v47, v49);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v44 + 104))(v43, enum case for Track.musicVideo(_:), v45);
    MusicLibrary.ItemState.containerLoadingSource.getter(v46);
    v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10119EB40 + dword_10119EB40);
    v32 = (_QWORD *)swift_task_alloc(unk_10119EB44);
    v33 = sub_100071DF8;
    *(_QWORD *)(v0 + 224) = v32;
    goto LABEL_7;
  }
  v52 = *(_QWORD *)(v0 + 40);
  v42(v52, 1, 1, *(_QWORD *)(v0 + 48));
  sub_10004FF60(v52, &qword_1011B59B0);
  v53 = *(_QWORD *)(v0 + 192);
  v55 = *(_QWORD *)(v0 + 160);
  v54 = *(_QWORD *)(v0 + 168);
  v56 = *(_QWORD *)(v0 + 152);
  v58 = *(_QWORD *)(v0 + 120);
  v57 = *(_QWORD *)(v0 + 128);
  v60 = *(_QWORD *)(v0 + 88);
  v59 = *(_QWORD *)(v0 + 96);
  v61 = *(_QWORD *)(v0 + 64);
  v63 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100071B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_100071BC4, 0, 0);
}

uint64_t sub_100071BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100071C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  v6 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_100071D28, 0, 0);
}

uint64_t sub_100071D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100071DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  v6 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 224));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_100071E8C, 0, 0);
}

uint64_t sub_100071E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100071F5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  _OWORD *v46;
  __int128 v47;
  double result;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _OWORD v66[4];

  v59 = a7;
  v60 = a4;
  v61 = a5;
  v51 = a2;
  v54 = a1;
  v62 = a8;
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v55 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v52 = (char *)&v49 - v16;
  v17 = *(_QWORD *)(a6 - 8);
  v53 = a6;
  v18 = *(_QWORD *)(v17 + 64);
  v19 = __chkstk_darwin(v15);
  v65 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v49 - v20;
  v58 = (uint64_t)&v49 - v20;
  v50 = a3;
  v63 = v11;
  v64 = MusicLibrary.state<A>(for:)(a3, v11, &protocol witness table for Playlist);
  v22.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v17 + 16))(v21, a1, a6);
  v23 = Playlist.name.getter(v22);
  v56 = v24;
  v57 = v23;
  v25 = v52;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v52, a3, v11);
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = (v26 + 24) & ~v26;
  v28 = v26 | 7;
  v13 += 7;
  v29 = (v13 + v27) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_1010AF7A8, v29 + 8, v26 | 7);
  *(_QWORD *)(v30 + 16) = v51;
  v31 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v32 = v25;
  v33 = v63;
  v31(v30 + v27, v32, v63);
  *(_QWORD *)(v30 + v29) = v64;
  v34 = v55;
  v31((uint64_t)v55, v50, v33);
  v52 = *(char **)(v17 + 32);
  v35 = v53;
  ((void (*)(char *, uint64_t, uint64_t))v52)(v65, v54, v53);
  v36 = (v26 + 32) & ~v26;
  v37 = (v13 + v36) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(unsigned __int8 *)(v17 + 80);
  v39 = (v37 + v38 + 8) & ~v38;
  v40 = (v18 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010AF7D0, v40 + 8, v28 | v38);
  v42 = v59;
  *(_QWORD *)(v41 + 16) = v35;
  *(_QWORD *)(v41 + 24) = v42;
  v31(v41 + v36, v34, v63);
  v44 = v64;
  v43 = v65;
  *(_QWORD *)(v41 + v37) = v64;
  ((void (*)(uint64_t, char *, uint64_t))v52)(v41 + v39, v43, v35);
  *(_QWORD *)(v41 + v40) = v60;
  Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)(v58, v57, v56, (uint64_t)sub_100072384, v30, (uint64_t)&unk_10119EB18, v41, v61, v66, v35, v42);
  v45 = v66[1];
  v46 = v62;
  *v62 = v66[0];
  v46[1] = v45;
  v47 = v66[3];
  v46[2] = v66[2];
  v46[3] = v47;
  *(_QWORD *)&result = swift_retain(v44).n128_u64[0];
  return result;
}

unint64_t sub_100072244(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  char v4;

  v2 = 0xD00000000000001DLL;
  type metadata accessor for MusicLibrary(0);
  v3 = static MusicLibrary.shared.getter();
  v4 = static MusicLibrary.== infix(_:_:)(a1, v3);
  swift_release(v3);
  if ((v4 & 1) != 0)
  {
    if ((Playlist.supportsContainerNavigation(itemState:)() & 1) != 0)
      return 0;
    else
      return 0xD000000000000024;
  }
  return v2;
}

uint64_t sub_1000722F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

unint64_t sub_100072384()
{
  uint64_t v0;

  type metadata accessor for Playlist(0);
  return sub_100072244(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1000723C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v7 = *(_QWORD *)(a5 - 8);
  v6[8] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v6[9] = v8;
  v6[10] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v6[11] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[12] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v6[13] = v11;
  v6[14] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v6[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100072478, 0, 0);
}

uint64_t sub_100072478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v27 = v2;
  v28 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v29 = v4;
  v6 = *(_QWORD *)(v0 + 64);
  v30 = *(_QWORD *)(v0 + 72);
  v31 = v1;
  v7 = *(_QWORD *)(v0 + 40);
  v25 = v7;
  v26 = v5;
  v24 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 16);
  v8 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v32 = *(_OWORD *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v1, 1, 1, v10);
  v11 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v4, v24);
  type metadata accessor for MainActor(0);
  swift_retain(v8);
  v12 = swift_retain(v7);
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v11 + 80);
  v15 = v11;
  v16 = (v14 + 48) & ~v14;
  v17 = (v28 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(unsigned __int8 *)(v6 + 80);
  v19 = (v18 + v17 + 8) & ~v18;
  v20 = (v30 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1010AF7F8, v20 + 8, v14 | v18 | 7);
  *(_QWORD *)(v21 + 16) = v13;
  *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
  *(_OWORD *)(v21 + 32) = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v21 + v16, v27, v26);
  *(_QWORD *)(v21 + v17) = v8;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v6 + 32))(v21 + v19, v29, v32);
  *(_QWORD *)(v21 + v20) = v25;
  v22 = sub_100166D14(v31, (uint64_t)&unk_10119EB28, v21);
  swift_release(v22);
  swift_task_dealloc(v31);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007264C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + v6 + 8) & ~v8;
  v10 = v4 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  swift_release(*(_QWORD *)(v0 + v6));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v1);
  swift_release(*(_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_100072714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v2 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + v6 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v0 + v6);
  v10 = v0 + v5;
  v11 = v0 + v8;
  v12 = *(_QWORD *)(v0 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc(dword_10119EB14);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10006AEE4;
  return sub_1000723C8(v10, v9, v11, v12, v2, v3);
}

uint64_t sub_1000727E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v8[6] = a8;
  v8[7] = v21;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  v8[8] = v9;
  v8[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[10] = swift_task_alloc(v10);
  v8[11] = swift_task_alloc(v10);
  v11 = type metadata accessor for MusicPropertySource(0);
  v8[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for ContainerDetail.Source(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[13] = swift_task_alloc(v12);
  v8[14] = swift_task_alloc(v12);
  v13 = type metadata accessor for Playlist(0);
  v8[15] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[16] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[17] = swift_task_alloc(v15);
  v8[18] = swift_task_alloc(v15);
  v16 = type metadata accessor for MainActor(0);
  v8[19] = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  return swift_task_switch(sub_10007293C, v18, v19);
}

uint64_t sub_10007293C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 128);
  v28 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 104);
  v23 = *(_QWORD *)(v0 + 88);
  v27 = *(_QWORD *)(v0 + 80);
  v25 = *(char ***)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v20 = *(_BYTE **)(v0 + 112);
  v21 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = swift_release(*(_QWORD *)(v0 + 152));
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 16);
  v8(v1, v6, v3, v7);
  MusicLibrary.ItemState.containerLoadingSource.getter(v4);
  sub_10070A354(v4, v20);
  v9 = dispatch thunk of MusicItem.id.getter(v5, v21);
  v22 = v10;
  v11 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v23, 1, 1, v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(v28, v1, v3);
  sub_100072DB0((uint64_t)v20, v24);
  sub_10004A160(v23, v27, &qword_10119E460);
  v12 = sub_10096EE44(v28, v24, v9, v22, v27);
  v13 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
  v14 = sub_1003728E0(v12, 0, v13);
  sub_10004FF60(v23, &qword_10119E460);
  sub_10005B748((uint64_t)v20, type metadata accessor for ContainerDetail.Source);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v15 = (char *)v25 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
  *v25 = v14;
  v16 = type metadata accessor for UITraitOverrides(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  swift_storeEnumTagMultiPayload(v25, v17, 4);
  swift_storeEnumTagMultiPayload(v25, v26, 0);
  v18 = v14;
  sub_100770824((uint64_t)v25, 0, 0);

  sub_10005B748((uint64_t)v25, type metadata accessor for AppInterfaceContext.Activity);
  swift_task_dealloc(v1);
  swift_task_dealloc(v28);
  swift_task_dealloc(v20);
  swift_task_dealloc(v24);
  swift_task_dealloc(v4);
  swift_task_dealloc(v23);
  swift_task_dealloc(v27);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100072BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 48) & ~v4;
  v6 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + v6 + 8) & ~v8;
  v12 = v4 | v8 | 7;
  v10 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  swift_release(*(_QWORD *)(v0 + v6));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v1);
  swift_release(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v10 + 8, v12);
}

uint64_t sub_100072CBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = v1[4];
  v5 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v4 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v1[2];
  v11 = v1[3];
  v12 = *(_QWORD *)((char *)v1 + v7);
  v13 = (uint64_t)v1 + v6;
  v14 = (uint64_t)v1 + v9;
  v15 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8));
  v16 = (_QWORD *)swift_task_alloc(dword_10119EB24);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10005AEE4;
  return sub_1000727E0(a1, v10, v11, v13, v12, v14, v15, v4);
}

uint64_t sub_100072DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContainerDetail.Source(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_100072DF4@<D0>(_QWORD *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __int128 v42;
  _OWORD *v43;
  double result;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  int v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  _OWORD v56[2];
  __int128 v57;
  __int128 v58;

  v52 = a4;
  v53 = a5;
  v54 = a3;
  v55 = a6;
  LODWORD(v50) = a2;
  v7 = type metadata accessor for Artist(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v51 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v46 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v46 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v46 - v21;
  sub_100064C78((uint64_t)a1, (uint64_t)v56);
  v23 = sub_100007E8C((uint64_t *)&unk_1011B2DD0);
  if ((swift_dynamicCast(v10, v56, v23, v7, 6) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_100064C78((uint64_t)a1, (uint64_t)v56);
    v24 = swift_dynamicCast(v20, v56, v23, v7, 6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v20, v24 ^ 1u, 1, v7);
    sub_100065228((uint64_t)v20, (uint64_t)v22, (uint64_t *)&unk_1011A3FB0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v22, 1, 1, v7);
  }
  v48 = v50 & 1;
  v25 = a1[3];
  v49 = a1[4];
  v26 = sub_100007E68(a1, v25);
  v50 = &v46;
  __chkstk_darwin(v26);
  v28 = (char *)&v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v29 + 16))(v28);
  sub_10004A160((uint64_t)v22, (uint64_t)v17, (uint64_t *)&unk_1011A3FB0);
  v30 = *(unsigned __int8 *)(v12 + 80);
  v31 = (uint64_t)v17;
  v32 = (v30 + 16) & ~v30;
  v33 = v30 | 7;
  v34 = (v13 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject(&unk_1010AF898, v34 + 9, v30 | 7);
  sub_100065228(v31, v35 + v32, (uint64_t *)&unk_1011A3FB0);
  v36 = v35 + v34;
  v47 = a1;
  v37 = v54;
  *(_QWORD *)v36 = v54;
  *(_BYTE *)(v36 + 8) = v48;
  v38 = (uint64_t)v22;
  v39 = v51;
  sub_100065228(v38, v51, (uint64_t *)&unk_1011A3FB0);
  v40 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010AF8C0, v40 + 8, v33);
  sub_100065228(v39, v41 + v32, (uint64_t *)&unk_1011A3FB0);
  *(_QWORD *)(v41 + v34) = v37;
  *(_QWORD *)(v41 + v40) = v52;
  Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)((uint64_t)v28, 0, 0, (uint64_t)sub_1000768FC, v35, (uint64_t)&unk_10119EB90, v41, v53, v56, v25, v49);
  swift_retain(v37);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v47);
  v42 = v56[1];
  v43 = v55;
  *v55 = v56[0];
  v43[1] = v42;
  result = *(double *)&v57;
  v45 = v58;
  v43[2] = v57;
  v43[3] = v45;
  return result;
}

unint64_t sub_100073158(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD v20[15];

  v5 = 0xD000000000000021;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v8, (uint64_t *)&unk_1011A3FB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A3FB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    ApplicationCapabilities.Controller.capabilities.getter((uint64_t)v20);
    v13 = sub_100065184(v20);
    if ((v20[0] & 0x100) != 0 || (a3 & 1) == 0)
    {
      Artist.catalogID.getter(v13);
      v15 = v14;
      v16 = swift_bridgeObjectRelease(v14);
      if ((a3 & 1) != 0 && v15 == 0)
        v5 = 0xD00000000000002CLL;
      else
        v5 = 0;
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return 0xD000000000000033;
    }
  }
  return v5;
}

uint64_t sub_100073310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  v3[20] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[21] = swift_task_alloc(v5);
  v3[22] = swift_task_alloc(v5);
  v3[23] = swift_task_alloc(v5);
  v3[24] = swift_task_alloc(v5);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  v3[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artist(0);
  v3[26] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[27] = v8;
  v3[28] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000733E4, 0, 0);
}

uint64_t sub_1000733E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  sub_10004A160(*(_QWORD *)(v0 + 136), v3, (uint64_t *)&unk_1011A3FB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 200), (uint64_t *)&unk_1011A3FB0);
    v4 = *(_QWORD *)(v0 + 192);
    v5 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 168);
    swift_task_dealloc(*(_QWORD *)(v0 + 224));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
    ApplicationCapabilities.Controller.capabilities.getter(v0 + 16);
    v10 = sub_100065184((_QWORD *)(v0 + 16));
    if ((*(_BYTE *)(v0 + 17) & 1) != 0
      && (Artist.catalogID.getter(v10), v12 = v11, swift_bridgeObjectRelease(v11), v12))
    {
      v14 = *(_QWORD *)(v0 + 216);
      v13 = *(_QWORD *)(v0 + 224);
      v15 = *(_QWORD *)(v0 + 208);
      v16 = *(_QWORD *)(v0 + 184);
      v17 = *(_QWORD *)(v0 + 160);
      v18 = *(int *)(sub_100007E8C(&qword_1011C7BD0) + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v16, v13, v15);
      *(_BYTE *)(v16 + v18) = 0;
      v19 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      swift_storeEnumTagMultiPayload(v16, v19, 3);
      swift_storeEnumTagMultiPayload(v16, v17, 0);
      v20 = (_QWORD *)swift_task_alloc(dword_1011C791C);
      *(_QWORD *)(v0 + 232) = v20;
      *v20 = v0;
      v20[1] = sub_100073618;
      v22 = *(_QWORD *)(v0 + 184);
      v21 = *(_QWORD *)(v0 + 192);
    }
    else
    {
      v24 = *(_QWORD *)(v0 + 216);
      v23 = *(_QWORD *)(v0 + 224);
      v25 = *(_QWORD *)(v0 + 208);
      v27 = *(_QWORD *)(v0 + 160);
      v26 = *(_QWORD *)(v0 + 168);
      v28 = *(int *)(sub_100007E8C(&qword_1011C7BD0) + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v26, v23, v25);
      *(_BYTE *)(v26 + v28) = 1;
      v29 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      swift_storeEnumTagMultiPayload(v26, v29, 3);
      swift_storeEnumTagMultiPayload(v26, v27, 0);
      v30 = (_QWORD *)swift_task_alloc(dword_1011C791C);
      *(_QWORD *)(v0 + 248) = v30;
      *v30 = v0;
      v30[1] = sub_100073730;
      v22 = *(_QWORD *)(v0 + 168);
      v21 = *(_QWORD *)(v0 + 176);
    }
    return sub_100771208(v21, v22);
  }
}

uint64_t sub_100073618()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  v4 = *(_QWORD *)(*v1 + 184);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  sub_10005B748(v4, type metadata accessor for AppInterfaceContext.Activity);
  if (v0)
  {
    v5 = sub_1000737C0;
  }
  else
  {
    sub_10005B748(*(_QWORD *)(v2 + 192), type metadata accessor for AppInterfaceContext.Activity);
    v5 = sub_1000736A8;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000736A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100073730()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 248);
  v4 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 256) = v0;
  swift_task_dealloc(v3);
  sub_10005B748(v4, type metadata accessor for AppInterfaceContext.Activity);
  if (v0)
  {
    v5 = sub_100073850;
  }
  else
  {
    sub_10005B748(*(_QWORD *)(v2 + 176), type metadata accessor for AppInterfaceContext.Activity);
    v5 = sub_100076AA4;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000737C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(v1, *(_QWORD *)(v0 + 208));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100073850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(v1, *(_QWORD *)(v0 + 208));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000738E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for Logger(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011ACE00);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2[10] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v7);
  v2[12] = swift_task_alloc(v7);
  v8 = sub_100007E8C(&qword_1011C44D0);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000739C4, 0, 0);
}

uint64_t sub_1000739C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  Artist.catalogID.getter(a1);
  v3 = v2;
  swift_bridgeObjectRelease(v2);
  if (v3)
  {
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v1 + 128) = v4;
    *(_QWORD *)(v1 + 136) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_100073A98, v6, v7);
  }
  else
  {
    v9 = *(_QWORD *)(v1 + 88);
    v10 = *(_QWORD *)(v1 + 96);
    v12 = *(_QWORD *)(v1 + 64);
    v11 = *(_QWORD *)(v1 + 72);
    swift_task_dealloc(*(_QWORD *)(v1 + 120));
    swift_task_dealloc(v10);
    swift_task_dealloc(v9);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100073A98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + 16);
  swift_retain();
  return swift_task_switch(sub_100073AE4, 0, 0);
}

uint64_t sub_100073AE4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(v1 + 144))
  {
    v2 = *(_QWORD *)(v1 + 128);
    *(_QWORD *)(v1 + 152) = static MainActor.shared.getter(a1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_100073B9C, v3, v4);
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 88);
    v7 = *(_QWORD *)(v1 + 96);
    v9 = *(_QWORD *)(v1 + 64);
    v8 = *(_QWORD *)(v1 + 72);
    swift_task_dealloc(*(_QWORD *)(v1 + 120));
    swift_task_dealloc(v7);
    swift_task_dealloc(v6);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100073B9C()
{
  uint64_t v0;

  swift_release();
  *(_BYTE *)(v0 + 208) = sub_100770204();
  return swift_task_switch(sub_100073BE4, 0, 0);
}

uint64_t sub_100073BE4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_BYTE *)(v1 + 208) == 6)
  {
    swift_release();
    v2 = *(_QWORD *)(v1 + 88);
    v3 = *(_QWORD *)(v1 + 96);
    v5 = *(_QWORD *)(v1 + 64);
    v4 = *(_QWORD *)(v1 + 72);
    swift_task_dealloc(*(_QWORD *)(v1 + 120));
    swift_task_dealloc(v3);
    swift_task_dealloc(v2);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v1 + 128);
    *(_QWORD *)(v1 + 160) = static MainActor.shared.getter(a1);
    v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
    return swift_task_switch(sub_100073CA8, v8, v9);
  }
}

uint64_t sub_100073CA8()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 208);
  swift_release();
  *(_QWORD *)(v0 + 168) = sub_10076F638(v1);
  return swift_task_switch(sub_100073CF8, 0, 0);
}

uint64_t sub_100073CF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v0[15];
  v1 = v0[16];
  v3 = v0[13];
  v4 = v0[14];
  v5 = v0[5];
  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v2, v5, v6);
  v7.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, enum case for MusicPageProvider.Destination.artistDetail<A, B>(_:), v3);
  v0[22] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100073DAC, v8, v9);
}

uint64_t sub_100073DAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v1 = v0[21];
  v3 = v0[14];
  v2 = v0[15];
  v4 = v0[13];
  v5 = swift_release();
  v0[23] = MusicPageProvider.page(for:stackAuthority:motionCacheBucketID:)(v2, v1, 0, 0, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_100073E2C, 0, 0);
}

uint64_t sub_100073E2C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;

  v1 = (void *)v0[23];
  v2 = v0[10];
  v3 = (_QWORD *)v0[11];
  v4 = v0[9];
  v5 = (uint64_t)v3 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
  *v3 = v1;
  v6 = type metadata accessor for UITraitOverrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_100065228(v4, v5, &qword_1011ACE00);
  v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  swift_storeEnumTagMultiPayload(v3, v7, 4);
  swift_storeEnumTagMultiPayload(v3, v2, 0);
  v8 = dword_1011C791C;
  v9 = v1;
  v10 = (_QWORD *)swift_task_alloc(v8);
  v0[24] = v10;
  *v10 = v0;
  v10[1] = sub_100073F18;
  return sub_100771208(v0[12], v0[11]);
}

uint64_t sub_100073F18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  v4 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  sub_10005B748(v4, type metadata accessor for AppInterfaceContext.Activity);
  if (v0)
  {
    v5 = sub_100074028;
  }
  else
  {
    sub_10005B748(*(_QWORD *)(v2 + 96), type metadata accessor for AppInterfaceContext.Activity);
    v5 = sub_100073FA8;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100073FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 144);

  swift_release(v1);
  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 200);
    v27 = *(void **)(v0 + 184);
    v28 = *(_QWORD *)(v0 + 64);
    v25 = *(_QWORD *)(v0 + 56);
    v26 = *(_QWORD *)(v0 + 48);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    *(_DWORD *)v10 = 136315138;
    v29 = v11;
    *(_QWORD *)(v0 + 16) = v9;
    swift_errorRetain(v9);
    v12 = sub_100007E8C(&qword_1011A14B0);
    v13 = String.init<A>(describing:)(v0 + 16, v12);
    v15 = v14;
    *(_QWORD *)(v0 + 24) = sub_100322200(v13, v14, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to navigate to artist detail view controller with error=%s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
    swift_release();
    swift_release();

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v28, v26);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 56);
    v17 = *(_QWORD *)(v0 + 64);
    v19 = *(_QWORD *)(v0 + 48);

    swift_release();
    swift_release();
    swift_errorRelease(v16);
    swift_errorRelease(v16);
    swift_errorRelease(v16);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v20 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 64);
  v22 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v21);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000742AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = type metadata accessor for Track(0);
  v3[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[9] = v5;
  v3[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[12] = v7;
  v3[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[14] = swift_task_alloc(v8);
  v3[15] = swift_task_alloc(v8);
  v9 = type metadata accessor for Album(0);
  v3[16] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[17] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[18] = swift_task_alloc(v11);
  v3[19] = swift_task_alloc(v11);
  v12 = type metadata accessor for MusicPropertySource(0);
  v3[20] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[21] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[22] = swift_task_alloc(v14);
  v3[23] = swift_task_alloc(v14);
  v3[24] = swift_task_alloc(v14);
  v3[25] = swift_task_alloc(v14);
  return swift_task_switch(sub_1000743F4, 0, 0);
}

uint64_t sub_1000743F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v1, *(_QWORD *)(v0 + 48), v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  v5 = v4;
  v6 = enum case for MusicPropertySource.catalog(_:);
  *(_DWORD *)(v0 + 264) = enum case for MusicPropertySource.catalog(_:);
  if ((_DWORD)v4 == v6)
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 104))(*(_QWORD *)(v0 + 176), v4, *(_QWORD *)(v0 + 160));
    v7 = (_QWORD *)swift_task_alloc(dword_10119EB64);
    *(_QWORD *)(v0 + 248) = v7;
    *v7 = v0;
    v7[1] = sub_10007490C;
    v8 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 112);
    return sub_10007578C(v9, v8);
  }
  if ((_DWORD)v4 == enum case for MusicPropertySource.library(_:))
  {
    v10 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 160);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 104);
    *(_QWORD *)(v0 + 208) = v12;
    v12(v10, v5, v11);
    v13 = (_QWORD *)swift_task_alloc(dword_10119EB64);
    *(_QWORD *)(v0 + 216) = v13;
    *v13 = v0;
    v13[1] = sub_1000745CC;
    v8 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 120);
    return sub_10007578C(v9, v8);
  }
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 160);
  v17 = *(_QWORD *)(v0 + 168);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 56))(*(_QWORD *)(v0 + 40), 1, 1, *(_QWORD *)(v0 + 128));
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  v18 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 184);
  v22 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 152);
  v24 = *(_QWORD *)(v0 + 112);
  v23 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000745CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t (*v8)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 216);
  v4 = *(_QWORD *)(*v1 + 192);
  v5 = *(_QWORD *)(*v1 + 160);
  v6 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc(v3);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  *(_QWORD *)(v2 + 232) = v7;
  v7(v4, v5);
  if (v0)
    v8 = sub_100074AC8;
  else
    v8 = sub_10007465C;
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_10007465C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
    v5 = *(unsigned int *)(v0 + 264);
    v6 = *(_QWORD *)(v0 + 184);
    v7 = *(_QWORD *)(v0 + 160);
    sub_10004FF60(v3, &qword_1011A8FA0);
    v4(v6, v5, v7);
    v8 = (_QWORD *)swift_task_alloc(dword_10119EB4C);
    *(_QWORD *)(v0 + 240) = v8;
    *v8 = v0;
    v8[1] = sub_1000747F0;
    return sub_1000742AC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 184));
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 40);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v12(v10, v3, v1);
    v12(v11, v10, v1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v11, 0, 1, v1);
    v13 = *(_QWORD *)(v0 + 192);
    v15 = *(_QWORD *)(v0 + 176);
    v14 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 152);
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 200));
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1000747F0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 232);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 240));
  v1(v2, v3);
  return swift_task_switch(sub_100074860, 0, 0);
}

uint64_t sub_100074860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007490C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
    v6 = sub_100074DF0;
  else
    v6 = sub_100074990;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100074990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 40);
    sub_10004FF60(v3, &qword_1011A8FA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v7(v5, v3, v1);
    v7(v6, v5, v1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v6, 0, 1, v1);
  }
  v8 = *(_QWORD *)(v0 + 192);
  v10 = *(_QWORD *)(v0 + 176);
  v9 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 144);
  v11 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 112);
  v13 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v8, v6);
  swift_errorRetain(v1);
  v10 = swift_errorRetain(v1);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v42 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 80);
    v43 = *(_QWORD *)(v0 + 88);
    v44 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 64);
    v40 = *(_QWORD *)(v0 + 72);
    v15 = swift_slowAlloc(22, -1);
    v41 = swift_slowAlloc(64, -1);
    v45 = v41;
    *(_DWORD *)v15 = 136446466;
    v16 = sub_100048748((unint64_t *)&unk_1011B6A00, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v14, v16);
    v19 = v18;
    *(_QWORD *)(v0 + 16) = sub_100322200(v17, v18, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    swift_bridgeObjectRelease(v19);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v13, v14);
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 24) = v1;
    swift_errorRetain(v1);
    v20 = sub_100007E8C(&qword_1011A14B0);
    v21 = String.init<A>(describing:)(v0 + 24, v20);
    v23 = v22;
    *(_QWORD *)(v0 + 32) = sub_100322200(v21, v22, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to load associated album for track=%{public}s with error=%{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v43);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 96);
    v24 = *(_QWORD *)(v0 + 104);
    v27 = *(_QWORD *)(v0 + 80);
    v26 = *(_QWORD *)(v0 + 88);
    v28 = *(_QWORD *)(v0 + 64);
    v29 = *(_QWORD *)(v0 + 72);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 56))(*(_QWORD *)(v0 + 40), 1, 1, *(_QWORD *)(v0 + 128));
  v30 = *(_QWORD *)(v0 + 192);
  v32 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 152);
  v36 = *(_QWORD *)(v0 + 112);
  v35 = *(_QWORD *)(v0 + 120);
  v37 = *(_QWORD *)(v0 + 104);
  v38 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v8, v6);
  swift_errorRetain(v1);
  v10 = swift_errorRetain(v1);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v42 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 80);
    v43 = *(_QWORD *)(v0 + 88);
    v44 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 64);
    v40 = *(_QWORD *)(v0 + 72);
    v15 = swift_slowAlloc(22, -1);
    v41 = swift_slowAlloc(64, -1);
    v45 = v41;
    *(_DWORD *)v15 = 136446466;
    v16 = sub_100048748((unint64_t *)&unk_1011B6A00, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v14, v16);
    v19 = v18;
    *(_QWORD *)(v0 + 16) = sub_100322200(v17, v18, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    swift_bridgeObjectRelease(v19);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v13, v14);
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 24) = v1;
    swift_errorRetain(v1);
    v20 = sub_100007E8C(&qword_1011A14B0);
    v21 = String.init<A>(describing:)(v0 + 24, v20);
    v23 = v22;
    *(_QWORD *)(v0 + 32) = sub_100322200(v21, v22, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to load associated album for track=%{public}s with error=%{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v43);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 96);
    v24 = *(_QWORD *)(v0 + 104);
    v27 = *(_QWORD *)(v0 + 80);
    v26 = *(_QWORD *)(v0 + 88);
    v28 = *(_QWORD *)(v0 + 64);
    v29 = *(_QWORD *)(v0 + 72);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 56))(*(_QWORD *)(v0 + 40), 1, 1, *(_QWORD *)(v0 + 128));
  v30 = *(_QWORD *)(v0 + 192);
  v32 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 152);
  v36 = *(_QWORD *)(v0 + 112);
  v35 = *(_QWORD *)(v0 + 120);
  v37 = *(_QWORD *)(v0 + 104);
  v38 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100075118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = sub_100007E8C(&qword_1011ACE00);
  v7[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  v7[7] = v9;
  v10 = (*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[8] = swift_task_alloc(v10);
  v7[9] = swift_task_alloc(v10);
  v11 = sub_100007E8C(&qword_10119E460);
  v7[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A9A00) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[11] = swift_task_alloc(v12);
  v7[12] = swift_task_alloc(v12);
  v13 = type metadata accessor for MusicPropertySource(0);
  v7[13] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v7[14] = v14;
  v7[15] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for ContainerDetail.Source(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[16] = swift_task_alloc(v15);
  v7[17] = swift_task_alloc(v15);
  v16 = type metadata accessor for Album(0);
  v7[18] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[19] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[20] = swift_task_alloc(v18);
  v7[21] = swift_task_alloc(v18);
  v19 = type metadata accessor for MainActor(0);
  v7[22] = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  v7[23] = v21;
  v7[24] = v22;
  return swift_task_switch(sub_1000752C8, v21, v22);
}

uint64_t sub_1000752C8()
{
  _QWORD *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char **v29;
  uint64_t v30;
  uint64_t v31;

  v23 = v0[21];
  v24 = v0[20];
  v1 = v0[18];
  v2 = (_BYTE *)v0[17];
  v4 = v0[14];
  v3 = v0[15];
  v6 = v0[12];
  v5 = v0[13];
  v25 = v0[16];
  v26 = v0[11];
  v27 = v0[10];
  v28 = v0[19];
  v31 = v0[7];
  v29 = (char **)v0[8];
  v30 = v0[6];
  v7 = v0[3];
  v8 = v0[4];
  v9 = *(void (**)(void))(v28 + 16);
  v9();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v7, v5);
  sub_10070A354(v3, v2);
  v10 = type metadata accessor for Track(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v6, v8, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v24, v23, v1);
  sub_100072DB0((uint64_t)v2, v25);
  sub_10004A160(v6, v26, &qword_1011A9A00);
  v12 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v27, 1, 1, v12);
  v13 = sub_1004C70CC(v24, v25, v26, v27);
  v14 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
  v15 = sub_1003723A0(v13, 0, v14);
  v0[25] = v15;
  sub_10004FF60(v6, &qword_1011A9A00);
  sub_10005B748((uint64_t)v2, type metadata accessor for ContainerDetail.Source);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v23, v1);
  v16 = (uint64_t)v29 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
  *v29 = v15;
  v17 = type metadata accessor for UITraitOverrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v30, 1, 1, v17);
  sub_100065228(v30, v16, &qword_1011ACE00);
  v18 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  swift_storeEnumTagMultiPayload(v29, v18, 4);
  swift_storeEnumTagMultiPayload(v29, v31, 0);
  v19 = dword_1011C791C;
  v20 = v15;
  v21 = (_QWORD *)swift_task_alloc(v19);
  v0[26] = v21;
  *v21 = v0;
  v21[1] = sub_100075544;
  return sub_100771208(v0[9], v0[8]);
}

uint64_t sub_100075544()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = (*v1)[26];
  v4 = (*v1)[8];
  (*v1)[27] = v0;
  swift_task_dealloc(v3);
  sub_10005B748(v4, type metadata accessor for AppInterfaceContext.Activity);
  if (v0)
  {
    v5 = v2[23];
    v6 = v2[24];
    v7 = sub_1000756B0;
  }
  else
  {
    sub_10005B748(v2[9], type metadata accessor for AppInterfaceContext.Activity);
    v5 = v2[23];
    v6 = v2[24];
    v7 = sub_1000755D4;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_1000755D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 64);
  v13 = *(_QWORD *)(v0 + 48);

  swift_release(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000756B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 64);
  v13 = *(_QWORD *)(v0 + 48);

  swift_release(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007578C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MusicVideo(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[7] = swift_task_alloc(v6);
  v3[8] = swift_task_alloc(v6);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011B6BC0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[9] = swift_task_alloc(v7);
  v3[10] = swift_task_alloc(v7);
  v8 = type metadata accessor for Song(0);
  v3[11] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[12] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v10);
  v3[14] = swift_task_alloc(v10);
  v11 = type metadata accessor for Track(0);
  v3[15] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[16] = v12;
  v3[17] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100075894, 0, 0);
}

uint64_t sub_100075894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 32), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for Track.song(_:))
  {
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 96))(v5, *(_QWORD *)(v0 + 120));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    v9 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v10 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100EA7A90;
    sub_100007E8C((uint64_t *)&unk_1011B6BD0);
    v11 = static PartialMusicProperty<A>.albums.getter();
    *(_QWORD *)(v10 + 32) = v11;
    specialized Array._endMutation()(v11);
    v12 = v10;
    *(_QWORD *)(v0 + 144) = v10;
    v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
    *(_QWORD *)(v0 + 152) = v13;
    v14 = sub_100048748(&qword_10119EB78, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    *v13 = v0;
    v13[1] = sub_100075B9C;
    v15 = *(_QWORD *)(v0 + 104);
    v16 = *(_QWORD *)(v0 + 88);
    v17 = *(_QWORD *)(v0 + 24);
    v18 = &protocol witness table for Song;
    v19 = &protocol witness table for Song;
    return MusicItem<>.with(_:preferredSource:)(v15, v12, v17, v16, v18, v19, v14);
  }
  if (v4 == enum case for Track.musicVideo(_:))
  {
    v20 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 64);
    v22 = *(_QWORD *)(v0 + 40);
    v23 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 96))(v20, *(_QWORD *)(v0 + 120));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v21, v20, v22);
    v24 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v25 = swift_allocObject(v24, 40, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100EA7A90;
    sub_100007E8C(&qword_10119EB68);
    v26 = static PartialMusicProperty<A>.albums.getter();
    *(_QWORD *)(v25 + 32) = v26;
    specialized Array._endMutation()(v26);
    v12 = v25;
    *(_QWORD *)(v0 + 168) = v25;
    v27 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
    *(_QWORD *)(v0 + 176) = v27;
    v14 = sub_100048748(&qword_10119EB70, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
    *v27 = v0;
    v27[1] = sub_100075D58;
    v15 = *(_QWORD *)(v0 + 56);
    v16 = *(_QWORD *)(v0 + 40);
    v17 = *(_QWORD *)(v0 + 24);
    v18 = &protocol witness table for MusicVideo;
    v19 = &protocol witness table for MusicVideo;
    return MusicItem<>.with(_:preferredSource:)(v15, v12, v17, v16, v18, v19, v14);
  }
  v30 = *(_QWORD *)(v0 + 128);
  v29 = *(_QWORD *)(v0 + 136);
  v31 = *(_QWORD *)(v0 + 120);
  v32 = *(_QWORD *)(v0 + 16);
  v33 = type metadata accessor for Album(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  v34 = *(_QWORD *)(v0 + 104);
  v35 = *(_QWORD *)(v0 + 112);
  v37 = *(_QWORD *)(v0 + 72);
  v36 = *(_QWORD *)(v0 + 80);
  v39 = *(_QWORD *)(v0 + 56);
  v38 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v35);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100075B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_100075F14;
  else
    v4 = sub_100075C08;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100075C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  Song.albums.getter();
  v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v5(v1, v3);
  v6 = sub_100007E8C(&qword_1011A3D80);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 16);
  if (v8 == 1)
  {
    v5(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
    sub_10004FF60(v10, (uint64_t *)&unk_1011B6BC0);
    v13 = type metadata accessor for Album(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  }
  else
  {
    sub_10031E1D4(*(_QWORD *)(v0 + 16));
    v5(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100075D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_100075FB0;
  else
    v4 = sub_100075DC4;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100075DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  MusicVideo.albums.getter();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v2, v4);
  v6 = sub_100007E8C(&qword_1011A3D80);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v1, 1, v6);
  v10 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 16);
  if (v8 == 1)
  {
    v5(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
    sub_10004FF60(v9, (uint64_t *)&unk_1011B6BC0);
    v13 = type metadata accessor for Album(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  }
  else
  {
    sub_10031E1D4(*(_QWORD *)(v0 + 16));
    v5(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  }
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100075F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(v2, *(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100075FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(v6, *(_QWORD *)(v0 + 40));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007604C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

unint64_t sub_1000760D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_10007102C(*(char **)(v0 + 32), v0 + v2, *(_QWORD **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100076108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v4);
}

uint64_t sub_10007618C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = *(_QWORD *)(v0 + v4);
  v7 = *(uint64_t **)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc(dword_10119EB34);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_10006AEE4;
  return sub_1000715B8(v5, v6, v7);
}

uint64_t sub_10007621C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v5 = type metadata accessor for Track(0);
  v3[5] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[6] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[7] = v7;
  v3[8] = swift_task_alloc((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicPropertySource(0);
  v3[9] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[10] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v3[11] = v10;
  v3[12] = swift_task_alloc((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A8FA0);
  v13 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[14] = v13;
  v14 = type metadata accessor for Album(0);
  v3[15] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[16] = v15;
  v16 = *(_QWORD *)(v15 + 64);
  v3[17] = v16;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[18] = swift_task_alloc(v17);
  v3[19] = swift_task_alloc(v17);
  v18 = (_QWORD *)swift_task_alloc(dword_10119EB4C);
  v3[20] = v18;
  *v18 = v3;
  v18[1] = sub_100076364;
  return sub_1000742AC(v13, a3);
}

uint64_t sub_100076364()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 160));
  return swift_task_switch(sub_1000763B8, 0, 0);
}

uint64_t sub_1000763B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(v3, &qword_1011A8FA0);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 144);
    v4 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 104);
    v38 = v6;
    v33 = v7;
    v34 = *(_QWORD *)(v0 + 136);
    v35 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 72);
    v30 = *(_QWORD *)(v0 + 80);
    v31 = v5;
    v32 = v8;
    v42 = *(_QWORD *)(v0 + 64);
    v36 = *(_QWORD *)(v0 + 56);
    v40 = *(_QWORD *)(v0 + 48);
    v41 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v0 + 24);
    v29 = *(_QWORD *)(v0 + 32);
    v43 = *(_QWORD *)(v0 + 16);
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v39 = v4;
    v37(v4, v3, v1);
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v4, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v7, v29, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v42, v9, v41);
    type metadata accessor for MainActor(0);
    v11 = swift_retain(v43);
    v12 = static MainActor.shared.getter(v11);
    v13 = *(unsigned __int8 *)(v2 + 80);
    v14 = (v13 + 32) & ~v13;
    v15 = *(unsigned __int8 *)(v30 + 80);
    v16 = (v34 + v15 + v14) & ~v15;
    v17 = *(unsigned __int8 *)(v40 + 80);
    v18 = (v35 + v17 + v16) & ~v17;
    v19 = (v36 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject(&unk_1010AF870, v19 + 8, v13 | v15 | v17 | 7);
    *(_QWORD *)(v20 + 16) = v12;
    *(_QWORD *)(v20 + 24) = &protocol witness table for MainActor;
    v37(v20 + v14, v31, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v20 + v16, v33, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v20 + v18, v42, v41);
    *(_QWORD *)(v20 + v19) = v43;
    v21 = sub_100980A1C(v38, (uint64_t)&unk_10119EB58, v20);
    v22 = swift_release(v21);
    (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v39, v1, v22);
  }
  v23 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 112);
  v26 = *(_QWORD *)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100076638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = type metadata accessor for Album(0);
  v1 = *(_QWORD *)(v17 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v16 = type metadata accessor for MusicPropertySource(0);
  v5 = *(_QWORD *)(v16 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = type metadata accessor for Track(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v8 + v11) & ~v11;
  v15 = v2 | v6 | v11 | 7;
  v13 = (*(_QWORD *)(v10 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);
  swift_release(*(_QWORD *)(v0 + v13));
  return swift_deallocObject(v0, v13 + 8, v15);
}

uint64_t sub_10007674C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = *(_QWORD *)(type metadata accessor for Album(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for MusicPropertySource(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(type metadata accessor for Track(0) - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v1 + 16);
  v13 = *(_QWORD *)(v1 + 24);
  v14 = v1 + v5;
  v15 = v1 + v8;
  v16 = v1 + v11;
  v17 = *(_QWORD *)(v1 + ((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFF8));
  v18 = (_QWORD *)swift_task_alloc(dword_10119EB54);
  *(_QWORD *)(v2 + 16) = v18;
  *v18 = v2;
  v18[1] = sub_10005AEE4;
  return sub_100075118(a1, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_100076848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3FB0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Artist(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 9;
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v8, v2 | 7);
}

unint64_t sub_1000768FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3FB0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_100073158(v0 + v2, *(_QWORD *)v3, *(_BYTE *)(v3 + 8));
}

uint64_t sub_100076948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3FB0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Artist(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8, v2 | 7);
}

uint64_t sub_100076A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3FB0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = *(_QWORD *)(v0 + v4);
  v7 = *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc(dword_10119EB8C);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_10006AEE4;
  return sub_100073310(v5, v6, v7);
}

uint64_t sub_100076AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  double *v35;
  uint64_t (**v36)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (**v37)@<X0>(uint64_t@<X8>);
  char *v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;

  v42 = a2;
  v4 = sub_100007E8C(&qword_10119EC48);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)sub_100007E8C(&qword_10119EC40);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1010AF910, 24, 7);
  *(_QWORD *)(v10 + 16) = v2;
  sub_10004A160(a1, (uint64_t)v6, &qword_10119EC48);
  v11 = v2;
  v41 = static HorizontalAlignment.leading.getter();
  v12 = swift_allocObject(&unk_1010AF938, 24, 7);
  *(_QWORD *)(v12 + 16) = v11;
  v13 = swift_allocObject(&unk_1010AF960, 24, 7);
  *(_QWORD *)(v13 + 16) = v11;
  v14 = swift_allocObject(&unk_1010AF988, 24, 7);
  *(_QWORD *)(v14 + 16) = v11;
  v15 = static Edge.Set.top.getter(v11);
  v16 = v15;
  v17 = static Edge.Set.bottom.getter(v15);
  v18 = Edge.Set.init(rawValue:)(0);
  v19 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v19 & v16) != v16)
    v18 = Edge.Set.init(rawValue:)(v18 | v16);
  v20 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v20 & v17) != v17)
    v18 = Edge.Set.init(rawValue:)(v18 | v17);
  v21 = EdgeInsets.init(_:length:)(v18, 12.0);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = static VerticalAlignment.top.getter();
  v29 = &v9[v7[32]];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_100EA8638);
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = 0;
  v30 = &v9[v7[33]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100EA8660);
  v30[8] = 0;
  v31 = &v9[v7[34]];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100EA8688);
  v32 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v31, v32, 0);
  v33 = &v9[v7[35]];
  *(_QWORD *)v33 = swift_getKeyPath(&unk_100EA86B8);
  *(_OWORD *)(v33 + 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  v33[40] = 0;
  v34 = &v9[v7[36]];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_100EA86E0);
  *((_QWORD *)v34 + 1) = 0;
  *((_QWORD *)v34 + 2) = 0;
  *((_QWORD *)v34 + 3) = 0;
  v34[32] = 0;
  *(_QWORD *)v9 = sub_1000779D8;
  *((_QWORD *)v9 + 1) = v10;
  v9[16] = 2;
  sub_100065228((uint64_t)v6, (uint64_t)&v9[v7[24]], &qword_10119EC48);
  v35 = (double *)&v9[v7[25]];
  *v35 = v21;
  *((_QWORD *)v35 + 1) = v23;
  *((_QWORD *)v35 + 2) = v25;
  *((_QWORD *)v35 + 3) = v27;
  *(_QWORD *)&v9[v7[26]] = v41;
  *(_QWORD *)&v9[v7[27]] = v28;
  v36 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&v9[v7[28]];
  *v36 = sub_100076E7C;
  v36[1] = 0;
  v37 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v9[v7[29]];
  *v37 = sub_1000779E0;
  v37[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v12;
  v38 = &v9[v7[30]];
  *(_QWORD *)v38 = sub_1000779E8;
  *((_QWORD *)v38 + 1) = v13;
  v39 = &v9[v7[31]];
  *(_QWORD *)v39 = UIScreen.Dimensions.size.getter;
  *((_QWORD *)v39 + 1) = v14;
  return sub_100065228((uint64_t)v9, v42, &qword_10119EC40);
}

uint64_t sub_100076E08(uint64_t a1)
{
  Swift::String v2;
  uint64_t ObjectType;
  Swift::String v4;
  void *object;
  Swift::String v6;

  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  String.append(_:)(v2);
  ObjectType = swift_getObjectType(a1);
  v4._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  String.append(_:)(v6);
  return 0;
}

uint64_t sub_100076E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6;
  char v7;
  uint64_t v8;
  _OWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  char v18;

  v6 = *(_BYTE *)a5;
  type metadata accessor for ModuleLayout.Context(0);
  v7 = DynamicTypeSize.isAccessibilitySize.getter();
  v8 = 0x4008000000000000;
  if ((v7 & 1) != 0)
    v8 = 0x4000000000000000;
  __asm { FMOV            V1.2D, #28.0 }
  v15[0] = xmmword_100EA85A0;
  v15[1] = _Q1;
  v16 = v8;
  v17 = 1;
  v18 = 0;
  return sub_1000ADCB0(v6, (uint64_t)v15, *(double *)(a5 + 8)) & 1;
}

uint64_t sub_100076F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  char v31[24];

  v4 = sub_100007E8C(&qword_10119EBA0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119EBA8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)(a1 + OBJC_IVAR____TtC11MusicJSCore24JSSearchLandingViewModel_title);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore24JSSearchLandingViewModel_title, v31, 0, 0);
  v13 = v12[1];
  if (!v13)
    goto LABEL_6;
  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = *v12 & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    v30[0] = *v12;
    v30[1] = v13;
    v15 = sub_100055B68();
    swift_bridgeObjectRetain();
    v16 = Text.init<A>(_:)(v30, &type metadata for String, v15);
    v18 = v17;
    v29 = a2;
    v20 = v19;
    v22 = v21 & 1;
    Text.with(style:)(3, v16, v17, v21 & 1, v19, (uint64_t)v7);
    sub_100055BAC(v16, v18, v22);
    v23 = v20;
    a2 = v29;
    swift_bridgeObjectRelease(v23);
    LOBYTE(v16) = static Edge.Set.all.getter(v24);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v7, v4);
    v25 = &v11[*(int *)(v8 + 36)];
    *v25 = v16;
    *(_OWORD *)(v25 + 8) = xmmword_100EA85B0;
    *(_OWORD *)(v25 + 24) = xmmword_100EA85C0;
    v25[40] = 0;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100065228((uint64_t)v11, a2, &qword_10119EBA8);
    v26 = 0;
  }
  else
  {
LABEL_6:
    v26 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v26, 1, v8);
}

uint64_t JSSearchLandingViewModel.headerView()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  char v32[24];

  v3 = sub_100007E8C(&qword_10119EBA0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119EBA8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicJSCore24JSSearchLandingViewModel_title);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicJSCore24JSSearchLandingViewModel_title, v32, 0, 0);
  v12 = v11[1];
  if (!v12)
    goto LABEL_6;
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = *v11 & 0xFFFFFFFFFFFFLL;
  if (v13)
  {
    v31[0] = *v11;
    v31[1] = v12;
    v14 = sub_100055B68();
    swift_bridgeObjectRetain();
    v15 = Text.init<A>(_:)(v31, &type metadata for String, v14);
    v17 = v16;
    v19 = v18;
    v30 = v3;
    v20 = a1;
    v22 = v21 & 1;
    Text.with(style:)(3, v15, v16, v21 & 1, v18, (uint64_t)v6);
    v23 = v22;
    a1 = v20;
    sub_100055BAC(v15, v17, v23);
    swift_bridgeObjectRelease(v19);
    LOBYTE(v15) = static Edge.Set.all.getter(v24);
    v25 = v30;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v6, v30);
    v26 = &v10[*(int *)(v7 + 36)];
    *v26 = v15;
    *(_OWORD *)(v26 + 8) = xmmword_100EA85B0;
    *(_OWORD *)(v26 + 24) = xmmword_100EA85C0;
    v26[40] = 0;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
    sub_100065228((uint64_t)v10, a1, &qword_10119EBA8);
    v27 = 0;
  }
  else
  {
LABEL_6:
    v27 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v27, 1, v7);
}

uint64_t sub_100077304(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F947E8, 1);
}

uint64_t sub_100077314@<X0>(id *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int *v19;
  _QWORD *v20;
  char v23[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v8 = __chkstk_darwin(v7);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v12 = &v23[-v11 - 8];
  v13 = (char *)*a1;
  JSMediaItem.unmappedMusicItem.getter((uint64_t)v12);
  JSMediaItem.unmappedMusicItem.getter((uint64_t)v10);
  sub_1000776F4((uint64_t)v10, (uint64_t)v6);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
  v14 = &v13[OBJC_IVAR____TtC11MusicJSCore19JSSearchLandingItem_titleText];
  swift_beginAccess(&v13[OBJC_IVAR____TtC11MusicJSCore19JSSearchLandingItem_titleText], v23, 0, 0);
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = type metadata accessor for SearchLandingItem(0);
  v18 = (_QWORD *)((char *)a2 + *(int *)(v17 + 24));
  *v18 = v13;
  v19 = (int *)type metadata accessor for SegueContext(0);
  sub_100065228((uint64_t)v12, (uint64_t)v18 + v19[5], (uint64_t *)&unk_1011A20D0);
  *((_BYTE *)v18 + v19[6]) = 0;
  v20 = (_QWORD *)((char *)v18 + v19[7]);
  *v20 = 0;
  v20[1] = 0;
  *a2 = v16;
  a2[1] = v15;
  sub_100065228((uint64_t)v6, (uint64_t)a2 + *(int *)(v17 + 20), (uint64_t *)&unk_1011A3E10);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1000774C0(uint64_t a1)
{
  unint64_t result;

  result = sub_1000774E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000774E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EBE8;
  if (!qword_10119EBE8)
  {
    v1 = type metadata accessor for JSSearchLandingViewModel(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for JSSearchLandingViewModel, v1);
    atomic_store(result, (unint64_t *)&qword_10119EBE8);
  }
  return result;
}

uint64_t sub_10007752C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F947C0, 1);
}

void sub_10007753C(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  v4 = sub_100812CD4(v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;

  *a1 = v4;
  a1[1] = v6;
  a1[2] = v8;
  a1[3] = v10;
}

unint64_t sub_100077598()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EC10;
  if (!qword_10119EC10)
  {
    v1 = sub_100044B54(&qword_10119EC18);
    sub_1000775FC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10119EC10);
  }
  return result;
}

unint64_t sub_1000775FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10119EC20;
  if (!qword_10119EC20)
  {
    v1 = sub_100044B54(&qword_10119EBA8);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of Text.with<A>(style:configurator:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119EC20);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchLandingReuseType()
{
  return &type metadata for SearchLandingReuseType;
}

uint64_t sub_10007769C()
{
  return sub_100049F28(&qword_10119EC28, &qword_10119EC30, (uint64_t)&unk_100ED58E0);
}

uint64_t sub_1000776C8()
{
  return sub_100049F28(&qword_10119EC38, &qword_10119EC40, (uint64_t)&unk_100EA8520);
}

uint64_t sub_1000776F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v27[24];

  v5 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v6 = __chkstk_darwin(v5);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v10 = &v27[-v9 - 8];
  v11 = type metadata accessor for Artwork.CropStyle(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v15);
  v17 = &v27[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v18 = (id *)(v2 + OBJC_IVAR____TtC11MusicJSCore11JSMediaItem_backgroundArtwork);
  swift_beginAccess(v18, v27, 0, 0);
  if (*v18)
  {
    v19 = *v18;
    static Artwork.CropStyle.featuredContentCrop270.getter(v19);
    sub_100882874((uint64_t)v14, (uint64_t)v17);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v20 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
  }
  sub_10004A160(a1, (uint64_t)v10, (uint64_t *)&unk_1011A20D0);
  v21 = type metadata accessor for ArtworkImage.ViewModel(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21) == 1)
  {
    sub_10004A160((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_1011A20D0);
    v23 = type metadata accessor for GenericMusicItem(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v8, 1, v23) == 1)
    {
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A20D0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(a2, 1, 1, v21);
    }
    else
    {
      sub_100337778(a2);
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v23);
    }
    return sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A3E10);
  }
  else
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
    sub_100077A18((uint64_t)v17, a2);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(a2, 0, 1, v21);
  }
}

uint64_t sub_1000779B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000779D8()
{
  uint64_t v0;

  return sub_100076E08(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1000779E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100076F00(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1000779E8@<X0>(id *a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_100077314(a1, a2);
}

uint64_t sub_100077A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100077A6C()
{
  unint64_t result;

  result = qword_10119EC50;
  if (!qword_10119EC50)
  {
    result = swift_getWitnessTable(&unk_100EA87AC, &type metadata for CreatePlaylistAppIntent);
    atomic_store(result, (unint64_t *)&qword_10119EC50);
  }
  return result;
}

unint64_t sub_100077AB4()
{
  unint64_t result;

  result = qword_10119EC58;
  if (!qword_10119EC58)
  {
    result = swift_getWitnessTable(&unk_100EA87D4, &type metadata for CreatePlaylistAppIntent);
    atomic_store(result, (unint64_t *)&qword_10119EC58);
  }
  return result;
}

uint64_t sub_100077AF8(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100F94854, 1) + 8);
}

uint64_t sub_100077B1C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9482C, 1);
}

uint64_t sub_100077B2C()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10004FACC(v0, qword_10124C730);
  sub_100048B14(v0, (uint64_t)qword_10124C730);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x8000000100E2C820);
}

uint64_t sub_100077B8C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_100007E8C(&qword_10119ECE8);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_10119ECF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100078CC0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for CreatePlaylistAppIntent, v6);
  v7._object = (void *)0x8000000100E2C800;
  v7._countAndFlagsBits = 0xD000000000000015;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EA8808);
  v9 = sub_100007E8C(&qword_10119ECF8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CreatePlaylistAppIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for CreatePlaylistAppIntent, v6);
}

uint64_t sub_100077CF4()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100077D14()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100077D44(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[20] = a1;
  v2[21] = a2;
  v3 = sub_100007E8C(&qword_10119ECC0);
  v2[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for GenericMusicItemEntity(0);
  v2[23] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[24] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[25] = swift_task_alloc(v6);
  v2[26] = swift_task_alloc(v6);
  v2[27] = swift_task_alloc(v6);
  v2[28] = swift_task_alloc(v6);
  v7 = sub_100007E8C(&qword_1011A30F0);
  v2[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v2[30] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[31] = v9;
  v2[32] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100077E3C, 0, 0);
}

uint64_t sub_100077E3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v21;
  uint64_t v22;

  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v1 = v0[21];
  v2 = type metadata accessor for Logger(0);
  v0[33] = sub_100048B14(v2, (uint64_t)qword_10124CEC8);
  v3 = swift_retain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v8 = v0[21];
  if (v6)
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v22 = v10;
    *(_DWORD *)v9 = 136315394;
    v0[16] = &type metadata for CreatePlaylistAppIntent;
    v11 = sub_100007E8C(&qword_10119ECD0);
    v12 = String.init<A>(describing:)(v0 + 16, v11);
    v14 = v13;
    v0[17] = sub_100322200(v12, v13, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 17, v0 + 18);
    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v9 + 12) = 2082;
    IntentParameter.wrappedValue.getter(v0 + 9);
    v15 = v0[10];
    v0[19] = sub_100322200(v0[9], v15, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 19, v0 + 20);
    v16 = swift_bridgeObjectRelease(v15);
    swift_release_n(v8, 2, v16);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s creating playlist with title \"%{public}s\"", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_release_n(v0[21], 2, v7);
  }

  type metadata accessor for MusicLibrary(0);
  v0[34] = static MusicLibrary.shared.getter();
  IntentParameter.wrappedValue.getter(v0 + 7);
  v18 = v0[7];
  v17 = v0[8];
  v0[35] = v17;
  v21 = (char *)&async function pointer to dispatch thunk of MusicLibrary.createPlaylist(name:description:authorDisplayName:)
      + async function pointer to dispatch thunk of MusicLibrary.createPlaylist(name:description:authorDisplayName:);
  v19 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicLibrary.createPlaylist(name:description:authorDisplayName:)
                                   + 1));
  v0[36] = v19;
  *v19 = v0;
  v19[1] = sub_1000780E0;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))v21)(v0[29], v18, v17, 0, 0, 0, 0);
}

uint64_t sub_1000780E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 288));
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 280));
  if (v0)
  {
    swift_errorRelease(v0);
    v3 = sub_100078578;
  }
  else
  {
    v3 = sub_100078150;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100078150()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __n128 v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[2];

  v2 = v0[31];
  v1 = v0[32];
  v4 = v0[29];
  v3 = v0[30];
  v5 = v0[23];
  v6 = v0[24];
  v7 = v0[22];
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v4, v3);
  v0[5] = v3;
  v0[6] = &protocol witness table for Playlist;
  v8 = sub_100049F68(v0 + 2);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v2 + 16))(v8, v1, v3);
  sub_1004DFC24((uint64_t)(v0 + 2), v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    v9 = v0[22];
    (*(void (**)(_QWORD, _QWORD))(v0[31] + 8))(v0[32], v0[30]);
    sub_10004FF60(v9, &qword_10119ECC0);
    v10 = swift_retain_n(v0[21], 2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter();
    v13 = os_log_type_enabled(v11, v12);
    v15 = v0[21];
    if (v13)
    {
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v50[0] = v17;
      *(_DWORD *)v16 = 136315394;
      v0[14] = &type metadata for CreatePlaylistAppIntent;
      v18 = sub_100007E8C(&qword_10119ECD0);
      v19 = String.init<A>(describing:)(v0 + 14, v18);
      v21 = v20;
      v0[18] = sub_100322200(v19, v20, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 18, v0 + 19);
      swift_bridgeObjectRelease(v21);
      *(_WORD *)(v16 + 12) = 2082;
      IntentParameter.wrappedValue.getter(v0 + 11);
      v22 = v0[12];
      v0[13] = sub_100322200(v0[11], v22, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14);
      v23 = swift_bridgeObjectRelease(v22);
      swift_release_n(v15, 2, v23);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s playlist creation failed, title: \"%{public}s\"", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }
    else
    {
      swift_release_n(v0[21], 2, v14);
    }

    v33 = v0[34];
    v34 = v0[32];
    v36 = v0[28];
    v35 = v0[29];
    v38 = v0[26];
    v37 = v0[27];
    v39 = v0[25];
    v49 = v0[22];
    v40 = sub_100078D04();
    swift_allocError(&type metadata for CreatePlaylistIntentError, v40, 0, 0);
    swift_willThrow(v41);
    swift_release(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v49);
    v32 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v24 = v0[32];
    v44 = v0[34];
    v45 = v0[31];
    v25 = v0[28];
    v46 = v0[30];
    v47 = v0[29];
    v26 = v0[26];
    v27 = v0[27];
    v28 = v0[25];
    v43 = v0[23];
    v48 = v0[22];
    sub_100078D48(v48, v25);
    sub_100078D8C(v25, v27);
    v29 = sub_100725F20();
    sub_100078D8C(v27, v26);
    sub_100078D8C(v26, v28);
    IntentParameter.wrappedValue.setter(v28);
    sub_100078DD0(v26);
    sub_100078DD0(v27);
    v0[15] = v29;
    v30 = sub_100078E0C();
    v31 = sub_100078E54();
    static IntentResult.result<A, B>(value:opensIntent:)(v25, v0 + 15, v43, &type metadata for OpenMusicItemAppIntent, v30, v31);
    swift_release(v44);
    sub_100078DD0(v25);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v24, v46);
    swift_release(v29);
    swift_task_dealloc(v24);
    swift_task_dealloc(v47);
    swift_task_dealloc(v25);
    swift_task_dealloc(v27);
    swift_task_dealloc(v26);
    swift_task_dealloc(v28);
    swift_task_dealloc(v48);
    v32 = (uint64_t (*)(void))v0[1];
  }
  return v32();
}

uint64_t sub_100078578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26[2];

  v1 = *(_QWORD *)(v0 + 232);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 248) + 56))(v1, 1, 1, *(_QWORD *)(v0 + 240));
  sub_10004FF60(v1, &qword_1011A30F0);
  v2 = swift_retain_n(*(_QWORD *)(v0 + 168), 2);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v6 = *(_QWORD *)(v0 + 168);
    v7 = swift_slowAlloc(22, -1);
    v8 = swift_slowAlloc(64, -1);
    v26[0] = v8;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 112) = &type metadata for CreatePlaylistAppIntent;
    v9 = sub_100007E8C(&qword_10119ECD0);
    v10 = String.init<A>(describing:)(v0 + 112, v9);
    v12 = v11;
    *(_QWORD *)(v0 + 144) = sub_100322200(v10, v11, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152);
    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v7 + 12) = 2082;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 88));
    v13 = *(_QWORD *)(v0 + 96);
    *(_QWORD *)(v0 + 104) = sub_100322200(*(_QWORD *)(v0 + 88), v13, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112);
    v14 = swift_bridgeObjectRelease(v13);
    swift_release_n(v6, 2, v14);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s playlist creation failed, title: \"%{public}s\"", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v8, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 168), 2, v5);
  }

  v15 = *(_QWORD *)(v0 + 272);
  v16 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 224);
  v17 = *(_QWORD *)(v0 + 232);
  v20 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 216);
  v21 = *(_QWORD *)(v0 + 200);
  v25 = *(_QWORD *)(v0 + 176);
  v22 = sub_100078D04();
  swift_allocError(&type metadata for CreatePlaylistIntentError, v22, 0, 0);
  swift_willThrow(v23);
  swift_release(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000787F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119B888 != -1)
    swift_once(&qword_10119B888, sub_100077B2C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048B14(v2, (uint64_t)qword_10124C730);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10007887C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_10119ECBC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return sub_100077D44(a1, v4);
}

uint64_t sub_1000788D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100078A80();
  *a1 = result;
  return result;
}

uint64_t sub_1000788F8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100078CC0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CreatePlaylistAppIntent()
{
  return &type metadata for CreatePlaylistAppIntent;
}

uint64_t sub_100078930()
{
  return sub_100049F28(&qword_10119EC68, &qword_10119EC70, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_10007895C()
{
  return sub_100049F28(&qword_10119EC78, &qword_10119EC80, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100078988()
{
  return sub_100049F28(&qword_10119EC88, &qword_10119EC80, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

Swift::Int NSFileManager.Failure.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void NSFileManager.Failure.hash(into:)()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_100078A18(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t sub_100078A64()
{
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100E2C840);
}

uint64_t sub_100078A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119EC90);
  __chkstk_darwin(v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119EC98);
  __chkstk_darwin(v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_10119ECA8);
  LocalizedStringResource.init(stringLiteral:)(0x656C746954, 0xE500000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000015, 0x8000000100E2C7E0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v17 = type metadata accessor for String.IntentInputOptions(0);
  v20[0] = 0;
  v20[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
  v18 = type metadata accessor for IntentDialog(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v16, v12, v20, v9, v6, v3);
}

unint64_t sub_100078CC0()
{
  unint64_t result;

  result = qword_10119ECB0;
  if (!qword_10119ECB0)
  {
    result = swift_getWitnessTable(&unk_100EA871C, &type metadata for CreatePlaylistAppIntent);
    atomic_store(result, &qword_10119ECB0);
  }
  return result;
}

unint64_t sub_100078D04()
{
  unint64_t result;

  result = qword_10119ECC8;
  if (!qword_10119ECC8)
  {
    result = swift_getWitnessTable(&unk_100EA88DC, &type metadata for CreatePlaylistIntentError);
    atomic_store(result, (unint64_t *)&qword_10119ECC8);
  }
  return result;
}

uint64_t sub_100078D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItemEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100078D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItemEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100078DD0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GenericMusicItemEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100078E0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119ECD8;
  if (!qword_10119ECD8)
  {
    v1 = type metadata accessor for GenericMusicItemEntity(255);
    result = swift_getWitnessTable(&unk_100EBED3C, v1);
    atomic_store(result, (unint64_t *)&qword_10119ECD8);
  }
  return result;
}

unint64_t sub_100078E54()
{
  unint64_t result;

  result = qword_10119ECE0;
  if (!qword_10119ECE0)
  {
    result = swift_getWitnessTable(&unk_100ECCF5C, &type metadata for OpenMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_10119ECE0);
  }
  return result;
}

uint64_t sub_100078E98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for JSPlaybackIntent.ShuffleMode(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for CreatePlaylistIntentError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100078F54 + 4 * byte_100EA8710[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100078F74 + 4 * byte_100EA8715[v4]))();
}

_BYTE *sub_100078F54(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100078F74(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100078F7C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100078F84(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100078F8C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100078F94(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t variable initialization expression of Library.Context.useDownloadedContentOnly()
{
  return 0;
}

ValueMetadata *type metadata accessor for CreatePlaylistIntentError()
{
  return &type metadata for CreatePlaylistIntentError;
}

unint64_t sub_100078FBC()
{
  unint64_t result;

  result = qword_10119ED00;
  if (!qword_10119ED00)
  {
    result = swift_getWitnessTable(&unk_100EA88B4, &type metadata for CreatePlaylistIntentError);
    atomic_store(result, (unint64_t *)&qword_10119ED00);
  }
  return result;
}

uint64_t sub_100079000(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_100079060 + 4 * byte_100EA8920[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

uint64_t sub_100079DE4(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

void sub_100079E28(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  int *v8;
  _QWORD *v9;
  int *v10;
  __n128 v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:

      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >> 60 != 15)
      {
        v4 = (uint64_t *)(a1 + 8);
        goto LABEL_44;
      }
      return;
    case 1u:
      v5 = type metadata accessor for Album(0);
      v6 = *(_QWORD *)(v5 - 8);
      v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v7(a1, v5);
      v8 = (int *)sub_100007E8C(&qword_1011C5BA0);
      v9 = (_QWORD *)(a1 + v8[12]);
      v10 = (int *)type metadata accessor for Library.Context(0);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
        goto LABEL_31;
      v11 = swift_release(*v9);
      v12 = (char *)v9 + v10[5];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v12, 1, v5, v11))
        v7((uint64_t)v12, v5);
      v13 = (char *)v9 + v10[6];
      v14 = type metadata accessor for Artist(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
      v16 = (char *)v9 + v10[7];
      v17 = type metadata accessor for Composer(0);
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
      v19 = (char *)v9 + v10[8];
      v20 = type metadata accessor for Genre(0);
      v21 = *(_QWORD *)(v20 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
      v22 = (char *)v9 + v10[9];
      v23 = type metadata accessor for Playlist(0);
      v24 = *(_QWORD *)(v23 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
      goto LABEL_26;
    case 2u:
      v25 = type metadata accessor for Playlist(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v27(a1, v25);
      v8 = (int *)sub_100007E8C(&qword_10119ED18);
      v9 = (_QWORD *)(a1 + v8[12]);
      v10 = (int *)type metadata accessor for Library.Context(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
      {
        swift_release(*v9);
        v28 = (char *)v9 + v10[5];
        v29 = type metadata accessor for Album(0);
        v30 = *(_QWORD *)(v29 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
          (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
        v31 = (char *)v9 + v10[6];
        v32 = type metadata accessor for Artist(0);
        v33 = *(_QWORD *)(v32 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
          (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v32);
        v34 = (char *)v9 + v10[7];
        v35 = type metadata accessor for Composer(0);
        v36 = *(_QWORD *)(v35 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
          (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
        v37 = (char *)v9 + v10[8];
        v38 = type metadata accessor for Genre(0);
        v39 = *(_QWORD *)(v38 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
          (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v38);
        v40 = (char *)v9 + v10[9];
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v40, 1, v25))
          v27((uint64_t)v40, v25);
LABEL_26:
        v41 = (char *)v9 + v10[10];
        v42 = type metadata accessor for TVShow(0);
        v43 = *(_QWORD *)(v42 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
          (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v42);
        v44 = (char *)v9 + v10[11];
        v45 = type metadata accessor for TVSeason(0);
        v46 = *(_QWORD *)(v45 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
          (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
        swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[15] + 8));
        swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[16]));
      }
LABEL_31:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + v8[16] + 8));
      v47 = v8[20];
      goto LABEL_42;
    case 3u:
      v48 = type metadata accessor for Artist(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(a1, v48);
      v49 = (uint64_t *)&unk_10119ED20;
      goto LABEL_41;
    case 4u:
      v50 = type metadata accessor for Composer(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(a1, v50);
      v49 = (uint64_t *)&unk_10119ED28;
      goto LABEL_41;
    case 5u:
      v51 = type metadata accessor for Genre(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(a1, v51);
      v49 = (uint64_t *)&unk_10119ED30;
      goto LABEL_41;
    case 6u:
      v52 = _s14TVEpisodesViewV10DataSourceOMa(0);
      if (swift_getEnumCaseMultiPayload(a1, v52) == 1)
        v53 = type metadata accessor for TVSeason(0);
      else
        v53 = type metadata accessor for TVShow(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(a1, v53);
      v49 = (uint64_t *)&unk_10119ED38;
LABEL_41:
      v47 = *(int *)(sub_100007E8C(v49) + 48);
LABEL_42:
      v4 = (uint64_t *)(a1 + v47);
      v3 = v4[1];
      if (v3 >> 60 == 15)
        return;
      goto LABEL_44;
    case 7u:

      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >> 60 == 15)
        return;
      v4 = (uint64_t *)(a1 + 16);
LABEL_44:
      sub_1000652DC(*v4, v3);
      return;
    default:
      return;
  }
}

void sub_10007A3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_10007A404 + 4 * byte_100EA8938[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_10007A404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t *v5;
  unint64_t v6;
  id v7;
  uint64_t v8;

  v4 = *(void **)v3;
  *(_QWORD *)v0 = *(_QWORD *)v3;
  v5 = (uint64_t *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = v4;
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(v0 + 8) = *(_OWORD *)v5;
  }
  else
  {
    v8 = *v5;
    sub_100079DE4(*v5, v6);
    *(_QWORD *)(v0 + 8) = v8;
    *(_QWORD *)(v0 + 16) = v6;
  }
  swift_storeEnumTagMultiPayload(v0, v1, v2);
  return v0;
}

uint64_t sub_10007AFF4(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10005B748(result, type metadata accessor for NavigationDestinationItem);
    v5 = (char *)&loc_10007B064 + 4 * byte_100EA8940[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t type metadata accessor for NavigationDestinationItem(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_10119EDB0, (uint64_t)&nominal type descriptor for NavigationDestinationItem);
}

char *sub_10007BC78(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int *v122;
  int *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int *v127;
  int *v128;
  uint64_t v129;
  char *v130;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 1u:
      v129 = a3;
      v6 = type metadata accessor for Album(0);
      v7 = *(_QWORD *)(v6 - 8);
      v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v8(a1, a2, v6);
      v9 = (int *)sub_100007E8C(&qword_1011C5BA0);
      v10 = v9[12];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for Library.Context(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        v15 = sub_100007E8C(&qword_10119ED10);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        v16 = v129;
      }
      else
      {
        v127 = v9;
        *(_QWORD *)v11 = *(_QWORD *)v12;
        v123 = (int *)v13;
        v41 = *(int *)(v13 + 20);
        v42 = &v11[v41];
        v43 = &v12[v41];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&v12[v41], 1, v6))
        {
          v44 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          v8(v42, v43, v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v42, 0, 1, v6);
        }
        v16 = v129;
        v51 = v123[6];
        v52 = &v11[v51];
        v53 = &v12[v51];
        v54 = type metadata accessor for Artist(0);
        v55 = *(_QWORD *)(v54 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
        {
          v56 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
        }
        v63 = v123[7];
        v64 = &v11[v63];
        v65 = &v12[v63];
        v66 = type metadata accessor for Composer(0);
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          v68 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        v75 = v123[8];
        v76 = &v11[v75];
        v77 = &v12[v75];
        v78 = type metadata accessor for Genre(0);
        v79 = *(_QWORD *)(v78 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
        {
          v80 = sub_100007E8C(&qword_10119ED08);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v76, v77, v78);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
        }
        v87 = v123[9];
        v88 = &v11[v87];
        v89 = &v12[v87];
        v90 = type metadata accessor for Playlist(0);
        v91 = *(_QWORD *)(v90 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
        {
          v92 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        }
        v97 = v123[10];
        v98 = &v11[v97];
        v99 = &v12[v97];
        v100 = type metadata accessor for TVShow(0);
        v101 = *(_QWORD *)(v100 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
        {
          v102 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v98, v99, v100);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
        }
        v109 = v123[11];
        v110 = &v11[v109];
        v111 = &v12[v109];
        v112 = type metadata accessor for TVSeason(0);
        v113 = *(_QWORD *)(v112 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v111, 1, v112))
        {
          v114 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v110, v111, v112);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v110, 0, 1, v112);
        }
        v11[v123[12]] = v12[v123[12]];
        v11[v123[13]] = v12[v123[13]];
        v11[v123[14]] = v12[v123[14]];
        *(_OWORD *)&v11[v123[15]] = *(_OWORD *)&v12[v123[15]];
        *(_QWORD *)&v11[v123[16]] = *(_QWORD *)&v12[v123[16]];
        v11[v123[17]] = v12[v123[17]];
        v9 = v127;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v123);
      }
      *(_OWORD *)&a1[v9[16]] = *(_OWORD *)&a2[v9[16]];
      *(_OWORD *)&a1[v9[20]] = *(_OWORD *)&a2[v9[20]];
      v30 = a1;
      v31 = v16;
      v32 = 1;
      goto LABEL_60;
    case 2u:
      v17 = type metadata accessor for Playlist(0);
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v19(a1, a2, v17);
      v20 = (int *)sub_100007E8C(&qword_10119ED18);
      v21 = v20[12];
      v22 = &a1[v21];
      v130 = a2;
      v23 = &a2[v21];
      v24 = type metadata accessor for Library.Context(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        v27 = v130;
      }
      else
      {
        v122 = (int *)v24;
        v124 = v18;
        v125 = v17;
        v126 = v25;
        v128 = v20;
        *(_QWORD *)v22 = *(_QWORD *)v23;
        v45 = *(int *)(v24 + 20);
        v46 = &v22[v45];
        v47 = &v23[v45];
        v48 = type metadata accessor for Album(0);
        v49 = *(_QWORD *)(v48 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
        {
          v50 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
        }
        v27 = v130;
        v57 = v122[6];
        v58 = &v22[v57];
        v59 = &v23[v57];
        v60 = type metadata accessor for Artist(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
        {
          v62 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
        }
        v69 = v122[7];
        v70 = &v22[v69];
        v71 = &v23[v69];
        v72 = type metadata accessor for Composer(0);
        v73 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
        {
          v74 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v70, v71, v72);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
        }
        v81 = v122[8];
        v82 = &v22[v81];
        v83 = &v23[v81];
        v84 = type metadata accessor for Genre(0);
        v85 = *(_QWORD *)(v84 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
        {
          v86 = sub_100007E8C(&qword_10119ED08);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v82, v83, v84);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
        }
        v93 = v122[9];
        v94 = &v22[v93];
        v95 = &v23[v93];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(&v23[v93], 1, v125))
        {
          v96 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        }
        else
        {
          v19(v94, v95, v125);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v94, 0, 1, v125);
        }
        v103 = v122[10];
        v104 = &v22[v103];
        v105 = &v23[v103];
        v106 = type metadata accessor for TVShow(0);
        v107 = *(_QWORD *)(v106 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
        {
          v108 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v104, v105, v106);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
        }
        v115 = v122[11];
        v116 = &v22[v115];
        v117 = &v23[v115];
        v118 = type metadata accessor for TVSeason(0);
        v119 = *(_QWORD *)(v118 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v117, 1, v118))
        {
          v120 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v116, v117, v118);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v116, 0, 1, v118);
        }
        v22[v122[12]] = v23[v122[12]];
        v22[v122[13]] = v23[v122[13]];
        v22[v122[14]] = v23[v122[14]];
        *(_OWORD *)&v22[v122[15]] = *(_OWORD *)&v23[v122[15]];
        *(_QWORD *)&v22[v122[16]] = *(_QWORD *)&v23[v122[16]];
        v22[v122[17]] = v23[v122[17]];
        v20 = v128;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v126 + 56))(v22, 0, 1, v122);
      }
      *(_OWORD *)&a1[v20[16]] = *(_OWORD *)&v27[v20[16]];
      *(_OWORD *)&a1[v20[20]] = *(_OWORD *)&v27[v20[20]];
      v30 = a1;
      v31 = a3;
      v32 = 2;
      goto LABEL_60;
    case 3u:
      v28 = type metadata accessor for Artist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(a1, a2, v28);
      v29 = sub_100007E8C(&qword_10119ED20);
      *(_OWORD *)&a1[*(int *)(v29 + 48)] = *(_OWORD *)&a2[*(int *)(v29 + 48)];
      v30 = a1;
      v31 = a3;
      v32 = 3;
      goto LABEL_60;
    case 4u:
      v33 = type metadata accessor for Composer(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(a1, a2, v33);
      v34 = sub_100007E8C(&qword_10119ED28);
      *(_OWORD *)&a1[*(int *)(v34 + 48)] = *(_OWORD *)&a2[*(int *)(v34 + 48)];
      v30 = a1;
      v31 = a3;
      v32 = 4;
      goto LABEL_60;
    case 5u:
      v35 = type metadata accessor for Genre(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(a1, a2, v35);
      v36 = sub_100007E8C(&qword_10119ED30);
      *(_OWORD *)&a1[*(int *)(v36 + 48)] = *(_OWORD *)&a2[*(int *)(v36 + 48)];
      v30 = a1;
      v31 = a3;
      v32 = 5;
      goto LABEL_60;
    case 6u:
      v37 = _s14TVEpisodesViewV10DataSourceOMa(0);
      if (swift_getEnumCaseMultiPayload(a2, v37) == 1)
      {
        v38 = type metadata accessor for TVSeason(0);
        v39 = 1;
      }
      else
      {
        v38 = type metadata accessor for TVShow(0);
        v39 = 0;
      }
      (*(void (**)(char *, char *))(*(_QWORD *)(v38 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, v37, v39);
      v40 = sub_100007E8C(&qword_10119ED38);
      *(_OWORD *)&a1[*(int *)(v40 + 48)] = *(_OWORD *)&a2[*(int *)(v40 + 48)];
      v30 = a1;
      v31 = a3;
      v32 = 6;
LABEL_60:
      swift_storeEnumTagMultiPayload(v30, v31, v32);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_10007C810(char *a1, char *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int *v124;
  int *v125;
  void *__dst;
  char *__dsta;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for NavigationDestinationItem);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 1u:
        __dst = a3;
        v6 = type metadata accessor for Album(0);
        v7 = *(_QWORD *)(v6 - 8);
        v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v8(a1, a2, v6);
        v9 = (int *)sub_100007E8C(&qword_1011C5BA0);
        v10 = v9[12];
        v11 = &a1[v10];
        v12 = &a2[v10];
        v13 = type metadata accessor for Library.Context(0);
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        {
          v15 = sub_100007E8C(&qword_10119ED10);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          v16 = __dst;
        }
        else
        {
          v124 = v9;
          *(_QWORD *)v11 = *(_QWORD *)v12;
          v120 = (int *)v13;
          v39 = *(int *)(v13 + 20);
          v40 = &v11[v39];
          v41 = &v12[v39];
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&v12[v39], 1, v6))
          {
            v42 = sub_100007E8C(&qword_1011A8FA0);
            memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
          }
          else
          {
            v8(v40, v41, v6);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v40, 0, 1, v6);
          }
          v16 = __dst;
          v49 = v120[6];
          v50 = &v11[v49];
          v51 = &v12[v49];
          v52 = type metadata accessor for Artist(0);
          v53 = *(_QWORD *)(v52 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
          {
            v54 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
            memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
          }
          v61 = v120[7];
          v62 = &v11[v61];
          v63 = &v12[v61];
          v64 = type metadata accessor for Composer(0);
          v65 = *(_QWORD *)(v64 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
          {
            v66 = sub_100007E8C((uint64_t *)&unk_1011C7310);
            memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
          }
          v73 = v120[8];
          v74 = &v11[v73];
          v75 = &v12[v73];
          v76 = type metadata accessor for Genre(0);
          v77 = *(_QWORD *)(v76 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
          {
            v78 = sub_100007E8C(&qword_10119ED08);
            memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v74, v75, v76);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
          }
          v85 = v120[9];
          v86 = &v11[v85];
          v87 = &v12[v85];
          v88 = type metadata accessor for Playlist(0);
          v89 = *(_QWORD *)(v88 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
          {
            v90 = sub_100007E8C(&qword_1011A30F0);
            memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v86, v87, v88);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
          }
          v95 = v120[10];
          v96 = &v11[v95];
          v97 = &v12[v95];
          v98 = type metadata accessor for TVShow(0);
          v99 = *(_QWORD *)(v98 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
          {
            v100 = sub_100007E8C((uint64_t *)&unk_1011D1410);
            memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v96, v97, v98);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
          }
          v107 = v120[11];
          v108 = &v11[v107];
          v109 = &v12[v107];
          v110 = type metadata accessor for TVSeason(0);
          v111 = *(_QWORD *)(v110 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110))
          {
            v112 = sub_100007E8C((uint64_t *)&unk_1011C7320);
            memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v108, v109, v110);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
          }
          v11[v120[12]] = v12[v120[12]];
          v11[v120[13]] = v12[v120[13]];
          v11[v120[14]] = v12[v120[14]];
          *(_OWORD *)&v11[v120[15]] = *(_OWORD *)&v12[v120[15]];
          *(_QWORD *)&v11[v120[16]] = *(_QWORD *)&v12[v120[16]];
          v11[v120[17]] = v12[v120[17]];
          v9 = v124;
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v120);
        }
        *(_OWORD *)&a1[v9[16]] = *(_OWORD *)&a2[v9[16]];
        *(_OWORD *)&a1[v9[20]] = *(_OWORD *)&a2[v9[20]];
        v28 = a1;
        v29 = v16;
        v30 = 1;
        goto LABEL_61;
      case 2u:
        v17 = type metadata accessor for Playlist(0);
        v18 = *(_QWORD *)(v17 - 8);
        v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
        v19(a1, a2, v17);
        v20 = (int *)sub_100007E8C(&qword_10119ED18);
        v21 = v20[12];
        __dsta = &a1[v21];
        v22 = &a2[v21];
        v23 = (int *)type metadata accessor for Library.Context(0);
        v24 = *((_QWORD *)v23 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
        {
          v25 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
          memcpy(__dsta, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v121 = v18;
          v122 = v17;
          v123 = v24;
          v125 = v20;
          *(_QWORD *)__dsta = *(_QWORD *)v22;
          v43 = v23[5];
          v44 = &__dsta[v43];
          v45 = &v22[v43];
          v46 = type metadata accessor for Album(0);
          v47 = *(_QWORD *)(v46 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
          {
            v48 = sub_100007E8C(&qword_1011A8FA0);
            memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
          }
          v55 = v23[6];
          v56 = &__dsta[v55];
          v57 = &v22[v55];
          v58 = type metadata accessor for Artist(0);
          v59 = *(_QWORD *)(v58 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
          {
            v60 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
            memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v57, v58);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
          }
          v67 = v23[7];
          v68 = &__dsta[v67];
          v69 = &v22[v67];
          v70 = type metadata accessor for Composer(0);
          v71 = *(_QWORD *)(v70 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
          {
            v72 = sub_100007E8C((uint64_t *)&unk_1011C7310);
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
          }
          v79 = v23[8];
          v80 = &__dsta[v79];
          v81 = &v22[v79];
          v82 = type metadata accessor for Genre(0);
          v83 = *(_QWORD *)(v82 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
          {
            v84 = sub_100007E8C(&qword_10119ED08);
            memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v80, v81, v82);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
          }
          v91 = v23[9];
          v92 = &__dsta[v91];
          v93 = &v22[v91];
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(&v22[v91], 1, v122))
          {
            v94 = sub_100007E8C(&qword_1011A30F0);
            memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
          }
          else
          {
            v19(v92, v93, v122);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v92, 0, 1, v122);
          }
          v101 = v23[10];
          v102 = &__dsta[v101];
          v103 = &v22[v101];
          v104 = type metadata accessor for TVShow(0);
          v105 = *(_QWORD *)(v104 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
          {
            v106 = sub_100007E8C((uint64_t *)&unk_1011D1410);
            memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v102, v103, v104);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
          }
          v113 = v23[11];
          v114 = &__dsta[v113];
          v115 = &v22[v113];
          v116 = type metadata accessor for TVSeason(0);
          v117 = *(_QWORD *)(v116 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v115, 1, v116))
          {
            v118 = sub_100007E8C((uint64_t *)&unk_1011C7320);
            memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v114, v115, v116);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
          }
          __dsta[v23[12]] = v22[v23[12]];
          __dsta[v23[13]] = v22[v23[13]];
          __dsta[v23[14]] = v22[v23[14]];
          *(_OWORD *)&__dsta[v23[15]] = *(_OWORD *)&v22[v23[15]];
          *(_QWORD *)&__dsta[v23[16]] = *(_QWORD *)&v22[v23[16]];
          __dsta[v23[17]] = v22[v23[17]];
          v20 = v125;
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v123 + 56))(__dsta, 0, 1, v23);
        }
        *(_OWORD *)&a1[v20[16]] = *(_OWORD *)&a2[v20[16]];
        *(_OWORD *)&a1[v20[20]] = *(_OWORD *)&a2[v20[20]];
        v28 = a1;
        v29 = a3;
        v30 = 2;
        goto LABEL_61;
      case 3u:
        v26 = type metadata accessor for Artist(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
        v27 = sub_100007E8C(&qword_10119ED20);
        *(_OWORD *)&a1[*(int *)(v27 + 48)] = *(_OWORD *)&a2[*(int *)(v27 + 48)];
        v28 = a1;
        v29 = a3;
        v30 = 3;
        goto LABEL_61;
      case 4u:
        v31 = type metadata accessor for Composer(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a1, a2, v31);
        v32 = sub_100007E8C(&qword_10119ED28);
        *(_OWORD *)&a1[*(int *)(v32 + 48)] = *(_OWORD *)&a2[*(int *)(v32 + 48)];
        v28 = a1;
        v29 = a3;
        v30 = 4;
        goto LABEL_61;
      case 5u:
        v33 = type metadata accessor for Genre(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(a1, a2, v33);
        v34 = sub_100007E8C(&qword_10119ED30);
        *(_OWORD *)&a1[*(int *)(v34 + 48)] = *(_OWORD *)&a2[*(int *)(v34 + 48)];
        v28 = a1;
        v29 = a3;
        v30 = 5;
        goto LABEL_61;
      case 6u:
        v35 = _s14TVEpisodesViewV10DataSourceOMa(0);
        if (swift_getEnumCaseMultiPayload(a2, v35) == 1)
        {
          v36 = type metadata accessor for TVSeason(0);
          v37 = 1;
        }
        else
        {
          v36 = type metadata accessor for TVShow(0);
          v37 = 0;
        }
        (*(void (**)(char *, char *))(*(_QWORD *)(v36 - 8) + 32))(a1, a2);
        swift_storeEnumTagMultiPayload(a1, v35, v37);
        v38 = sub_100007E8C(&qword_10119ED38);
        *(_OWORD *)&a1[*(int *)(v38 + 48)] = *(_OWORD *)&a2[*(int *)(v38 + 48)];
        v28 = a1;
        v29 = a3;
        v30 = 6;
LABEL_61:
        swift_storeEnumTagMultiPayload(v28, v29, v30);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*((_QWORD *)a3 - 1) + 64));
        break;
    }
  }
  return a1;
}

void sub_10007D3B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BYTE v18[32];
  _BYTE v19[32];
  _BYTE v20[32];
  _BYTE v21[32];
  _BYTE v22[32];
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  _BYTE v27[32];
  _QWORD v28[8];

  v28[0] = &unk_100EA89E0;
  v2 = type metadata accessor for Album(319);
  if (v3 <= 0x3F)
  {
    v23 = *(_QWORD *)(v2 - 8) + 64;
    sub_10007D5E4(319, &qword_10119EDC0, (uint64_t (*)(uint64_t))&type metadata accessor for Album, &qword_10119EDC8, (uint64_t)&unk_100EAEF20);
    if (v5 <= 0x3F)
    {
      v24 = *(_QWORD *)(v4 - 8) + 64;
      v25 = &unk_100EA89F8;
      v26 = &unk_100EA8A10;
      swift_getTupleTypeLayout(v27, 0, 4, &v23);
      v28[1] = v27;
      v6 = type metadata accessor for Playlist(319);
      if (v7 <= 0x3F)
      {
        v23 = *(_QWORD *)(v6 - 8) + 64;
        sub_10007D5E4(319, &qword_10119EDD0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (unint64_t *)&unk_10119EDD8, (uint64_t)&unk_100EAEF4C);
        if (v9 <= 0x3F)
        {
          v24 = *(_QWORD *)(v8 - 8) + 64;
          v25 = &unk_100EA89F8;
          v26 = &unk_100EA8A10;
          swift_getTupleTypeLayout(v22, 0, 4, &v23);
          v28[2] = v22;
          v10 = type metadata accessor for Artist(319);
          if (v11 <= 0x3F)
          {
            swift_getTupleTypeLayout2(v21, *(_QWORD *)(v10 - 8) + 64, &unk_100EA8A10);
            v28[3] = v21;
            v12 = type metadata accessor for Composer(319);
            if (v13 <= 0x3F)
            {
              swift_getTupleTypeLayout2(v20, *(_QWORD *)(v12 - 8) + 64, &unk_100EA8A10);
              v28[4] = v20;
              v14 = type metadata accessor for Genre(319);
              if (v15 <= 0x3F)
              {
                swift_getTupleTypeLayout2(v19, *(_QWORD *)(v14 - 8) + 64, &unk_100EA8A10);
                v28[5] = v19;
                v16 = _s14TVEpisodesViewV10DataSourceOMa(319);
                if (v17 <= 0x3F)
                {
                  swift_getTupleTypeLayout2(v18, *(_QWORD *)(v16 - 8) + 64, &unk_100EA8A10);
                  v28[6] = v18;
                  v28[7] = &unk_100EA8A28;
                  swift_initEnumMetadataMultiPayload(a1, 256, 8, v28);
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_10007D5E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (!*a2)
  {
    v10 = a3(255);
    v11 = sub_100048748(a4, a3, a5);
    v13 = type metadata accessor for ContainerDetailDataSource.Source(a1, v10, v11, v12);
    if (!v14)
      atomic_store(v13, a2);
  }
}

void sub_10007D664(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];

  v2 = sub_100007E8C(&qword_10119F628);
  __chkstk_darwin(v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007E8C(&qword_10119F600);
  __chkstk_darwin(v5);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10007D908((uint64_t)v4);
  v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v9 = objc_msgSend(v8, "connectedScenes");
  v10 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
  v11 = sub_1000A569C();
  v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, v10, v11);

  sub_10079470C(v12);
  v14 = v13;
  swift_bridgeObjectRelease(v12);
  if (!((unint64_t)v14 >> 62))
  {
    if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_14:

    swift_bridgeObjectRelease(v14);
    goto LABEL_15;
  }
  if (v14 < 0)
    v21 = v14;
  else
    v21 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v22 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v14);
  if (!v22)
    goto LABEL_14;
LABEL_3:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
LABEL_6:
    v16 = v15;

    v17 = objc_msgSend(v16, "delegate", swift_bridgeObjectRelease(v14).n128_f64[0]);
    if (v17)
    {
      v18 = type metadata accessor for MainSceneDelegate();
      v19 = swift_dynamicCastClass(v17, v18);
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtC5Music17MainSceneDelegate_environmentManager);
        swift_retain(v20);
        swift_unknownObjectRelease(v17);
LABEL_16:
        sub_10004A160((uint64_t)v4, (uint64_t)v7, &qword_10119F628);
        *(_QWORD *)&v7[*(int *)(v5 + 36)] = v20;
        sub_10004FF60((uint64_t)v4, &qword_10119F628);
        sub_100065228((uint64_t)v7, a1, &qword_10119F600);
        return;
      }
      swift_unknownObjectRelease(v17);
    }
LABEL_15:
    v23 = type metadata accessor for EnvironmentObjectsManager();
    v20 = swift_allocObject(v23, 56, 7);
    *(_OWORD *)(v20 + 16) = 0u;
    *(_OWORD *)(v20 + 32) = 0u;
    *(_QWORD *)(v20 + 48) = 0;
    goto LABEL_16;
  }
  if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v14 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

void sub_10007D908(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t (*v77)(_QWORD);
  char *v78;
  _QWORD v79[17];
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;

  v160 = a1;
  v134 = sub_100007E8C(&qword_10119EE50);
  __chkstk_darwin(v134);
  v135 = (char *)v79 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_100007E8C(&qword_10119EE58);
  __chkstk_darwin(v153);
  v136 = (char *)v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for Library.Context(0);
  v100 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v99 = (char *)v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = _s14TVEpisodesViewVMa(0);
  v4 = __chkstk_darwin(v98);
  v95 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v97 = (char *)v79 - v6;
  v7 = sub_100007E8C(&qword_10119EE60);
  __chkstk_darwin(v7);
  v96 = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_100007E8C(&qword_10119EE68);
  __chkstk_darwin(v133);
  v103 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s14TVEpisodesViewV10DataSourceOMa(0);
  v11 = __chkstk_darwin(v10);
  v91 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v101 = (char *)v79 - v13;
  v94 = type metadata accessor for Genre(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_100007E8C(&qword_10119EE70);
  __chkstk_darwin(v149);
  v151 = (char *)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_100007E8C(&qword_10119EE78);
  __chkstk_darwin(v129);
  v130 = (char *)v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_100007E8C(&qword_10119EE80);
  __chkstk_darwin(v150);
  v131 = (char *)v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_100007E8C(&qword_10119EE88);
  __chkstk_darwin(v159);
  v152 = (char *)v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100007E8C(&qword_10119EE90);
  __chkstk_darwin(v128);
  v132 = (char *)v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for Composer(0);
  v112 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v110 = (char *)v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
  __chkstk_darwin(v21);
  v108 = (char *)v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v23);
  v106 = (char *)v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = _s16ArtistDetailViewVMa(0);
  __chkstk_darwin(v25);
  v107 = (char *)v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100007E8C(&qword_10119EEA0);
  __chkstk_darwin(v145);
  v117 = (char *)v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for Artist(0);
  v115 = *(_QWORD *)(v116 - 8);
  v28 = __chkstk_darwin(v116);
  v105 = (char *)v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v111 = (char *)v79 - v30;
  v142 = sub_100007E8C(&qword_10119EEA8);
  __chkstk_darwin(v142);
  v143 = (char *)v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100007E8C(&qword_10119EEB0);
  __chkstk_darwin(v148);
  v144 = (char *)v79 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100007E8C(&qword_10119EEB8);
  __chkstk_darwin(v33);
  v79[10] = (char *)v79 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100007E8C(&qword_10119EEC0);
  __chkstk_darwin(v113);
  v79[11] = (char *)v79 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100007E8C(&qword_10119EEC8);
  v79[14] = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v79[13] = (char *)v79 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_100007E8C(&qword_10119EED0);
  v79[16] = *(_QWORD *)(v120 - 8);
  v37 = __chkstk_darwin(v120);
  v79[12] = (char *)v79 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v79[15] = (char *)v79 - v39;
  v109 = sub_100007E8C(&qword_10119EED8);
  __chkstk_darwin(v109);
  v118 = (char *)v79 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_100007E8C(&qword_10119EEE0);
  __chkstk_darwin(v141);
  v121 = (char *)v79 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  v43 = __chkstk_darwin(v42);
  v104 = (char *)v79 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v140 = (char *)v79 - v45;
  v139 = type metadata accessor for Playlist(0);
  v138 = *(_QWORD *)(v139 - 8);
  v46 = __chkstk_darwin(v139);
  v79[8] = (char *)v79 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __chkstk_darwin(v46);
  v79[9] = (char *)v79 - v49;
  __chkstk_darwin(v48);
  v137 = (char *)v79 - v50;
  v90 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)v79 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100007E8C(&qword_10119EEE8);
  __chkstk_darwin(v52);
  v81 = sub_100007E8C(&qword_10119EEF0);
  __chkstk_darwin(v81);
  v79[2] = (char *)v79 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100007E8C(&qword_10119EEF8);
  v79[5] = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v79[4] = (char *)v79 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100007E8C(&qword_10119EF00);
  v79[7] = *(_QWORD *)(v84 - 8);
  v55 = __chkstk_darwin(v84);
  v79[3] = (char *)v79 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v79[6] = (char *)v79 - v57;
  v80 = sub_100007E8C(&qword_10119EF08);
  __chkstk_darwin(v80);
  v82 = (char *)v79 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v59);
  v87 = (char *)v79 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for ContainerDetail.Source(0);
  v61 = __chkstk_darwin(v86);
  __chkstk_darwin(v61);
  v123 = sub_100007E8C(&qword_10119EF10);
  __chkstk_darwin(v123);
  v85 = (char *)v79 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_10119ED10);
  v64 = __chkstk_darwin(v63);
  __chkstk_darwin(v64);
  v127 = (char *)v79 - v65;
  v66 = type metadata accessor for Album(0);
  v126 = *(_QWORD *)(v66 - 8);
  v67 = __chkstk_darwin(v66);
  v68 = __chkstk_darwin(v67);
  __chkstk_darwin(v68);
  v156 = sub_100007E8C(&qword_10119EF18);
  __chkstk_darwin(v156);
  v157 = (char *)v79 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_100007E8C(&qword_10119EF20);
  __chkstk_darwin(v146);
  v155 = (char *)v79 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100007E8C(&qword_10119EF28);
  __chkstk_darwin(v122);
  v124 = (char *)v79 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_100007E8C(&qword_10119EF30);
  __chkstk_darwin(v154);
  v125 = (char *)v79 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_100007E8C(&qword_10119EF38);
  __chkstk_darwin(v158);
  v147 = (char *)v79 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for NavigationDestinationItem(0);
  __chkstk_darwin(v74);
  v76 = (char *)v79 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v161, (uint64_t)v76, v77);
  v78 = (char *)sub_10007E760 + 4 * word_100EA8954[swift_getEnumCaseMultiPayload(v76, v74)];
  __asm { BR              X10 }
}

void sub_10007E760()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v2 = *(void **)v0;
  sub_1000822B4(*(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
  v3 = type metadata accessor for JSComponentController(0);
  v4 = sub_100048748(&qword_10119F048, type metadata accessor for JSComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v5 = v2;
  v6 = ObservedObject.init(wrappedValue:)(v5, v3, v4);
  v8 = v7;
  v9 = *(uint64_t **)(v1 - 424);
  *v9 = v6;
  v9[1] = (uint64_t)v7;
  swift_storeEnumTagMultiPayload(v9, *(_QWORD *)(v1 - 440), 0);
  v10 = sub_1000A05E8();
  v11 = sub_1000A062C();
  v12 = v8;
  v13 = *(_QWORD *)(v1 - 416);
  _ConditionalContent<>.init(storage:)(v9, &type metadata for CatalogComponentView, *(_QWORD *)(v1 - 432), v10, v11);
  v14 = *(_QWORD *)(v1 - 176);
  sub_10004A160(v13, v14, &qword_10119EF30);
  swift_storeEnumTagMultiPayload(v14, *(_QWORD *)(v1 - 248), 0);
  v15 = sub_1000A057C();
  v16 = sub_1000A0840();
  v17 = *(_QWORD *)(v1 - 240);
  _ConditionalContent<>.init(storage:)(v14, *(_QWORD *)(v1 - 184), *(_QWORD *)(v1 - 232), v15, v16);
  sub_10004FF60(v13, &qword_10119EF30);
  v18 = *(_QWORD *)(v1 - 160);
  sub_10004A160(v17, v18, &qword_10119EF38);
  swift_storeEnumTagMultiPayload(v18, *(_QWORD *)(v1 - 168), 0);
  v19 = sub_1000A0510();
  v20 = sub_1000A0A80();
  _ConditionalContent<>.init(storage:)(v18, *(_QWORD *)(v1 - 152), *(_QWORD *)(v1 - 144), v19, v20);

  sub_10004FF60(v17, &qword_10119EF38);
}

Swift::Int sub_100080164(unsigned __int8 a1)
{
  int v2;
  _QWORD v4[9];

  v2 = a1;
  Hasher.init(_seed:)(v4, 0);
  if (v2 != 6)
  {
    Hasher._combine(_:)(0);
    __asm { BR              X10 }
  }
  Hasher._combine(_:)(1uLL);
  return Hasher._finalize()();
}

uint64_t sub_100080274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v0 = type metadata accessor for NavigationDestinationItem(0);
  v1 = sub_100007E8C(&qword_10119F5F8);
  v2 = sub_100007E8C(&qword_10119F600);
  v3 = sub_100049F28(&qword_10119F608, &qword_10119F5F8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v4 = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
  v5 = sub_1000A5580();
  return View.navigationDestination<A, B>(for:destination:)(v0, sub_10007D664, 0, v1, v0, v2, v3, v4, v5);
}

Swift::Int sub_100080358()
{
  unsigned __int8 *v0;

  return sub_100080164(*v0);
}

void sub_100080360()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  if ((_DWORD)v1 != 6)
  {
    Hasher._combine(_:)(0);
    __asm { BR              X9 }
  }
  Hasher._combine(_:)(1uLL);
}

uint64_t sub_1000803D4()
{
  uint64_t v0;

  String.hash(into:)(v0, 0x6F4E6E657473696CLL, 0xE900000000000077);
  return swift_bridgeObjectRelease(0xE900000000000077);
}

Swift::Int sub_10008045C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  if ((_DWORD)v2 != 6)
  {
    Hasher._combine(_:)(0);
    __asm { BR              X9 }
  }
  Hasher._combine(_:)(1uLL);
  return Hasher._finalize()();
}

void sub_100080560(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 != 6 && v3 != 6)
    sub_1005D1158(v2);
}

uint64_t sub_100080590(uint64_t a1, uint64_t a2)
{
  return sub_1000805B8(a1, a2, &qword_10119ED10, &qword_10119EE40);
}

uint64_t sub_1000805A4(uint64_t a1, uint64_t a2)
{
  return sub_1000805B8(a1, a2, (uint64_t *)&unk_1011C5B80, &qword_10119EE48);
}

uint64_t sub_1000805B8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  char v21;
  uint64_t v23;

  v8 = type metadata accessor for Library.Context(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(a3);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(a4);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_10004A160(a1, (uint64_t)v18, a3);
  sub_10004A160(a2, v19, a3);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v20((uint64_t)v18, 1, v8) == 1)
  {
    if (v20(v19, 1, v8) == 1)
    {
      v21 = -1;
    }
    else
    {
      a3 = a4;
      v21 = 0;
    }
  }
  else
  {
    sub_10004A160((uint64_t)v18, (uint64_t)v14, a3);
    if (v20(v19, 1, v8) == 1)
    {
      sub_10005B748((uint64_t)v14, type metadata accessor for Library.Context);
      v21 = 0;
      a3 = a4;
    }
    else
    {
      sub_10005B6C0(v19, (uint64_t)v11, type metadata accessor for Library.Context);
      v21 = static Library.Context.__derived_struct_equals(_:_:)(v14, v11);
      sub_10005B748((uint64_t)v11, type metadata accessor for Library.Context);
      sub_10005B748((uint64_t)v14, type metadata accessor for Library.Context);
    }
  }
  sub_10004FF60((uint64_t)v18, a3);
  return v21 & 1;
}

uint64_t sub_10008079C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  char v63;
  __int128 v64;
  char v65;
  uint64_t v66;

  v59 = a3;
  v60 = a4;
  v61 = a1;
  v7 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v7);
  v58 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Album(0);
  v57 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119ED10);
  __chkstk_darwin(v12);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62[0] = 0;
  v15 = sub_100007E8C(&qword_10119F050);
  State.init(wrappedValue:)(v62, v15);
  *(_OWORD *)(a5 + 16) = v64;
  v62[0] = 0;
  v62[1] = 0;
  v63 = 1;
  v16 = sub_100007E8C(&qword_10119F058);
  State.init(wrappedValue:)(v62, v16);
  v17 = v65;
  v18 = v66;
  *(_OWORD *)(a5 + 32) = v64;
  *(_BYTE *)(a5 + 48) = v17;
  *(_QWORD *)(a5 + 56) = v18;
  *(_QWORD *)(a5 + 64) = swift_getKeyPath(&unk_100EA8B00);
  *(_BYTE *)(a5 + 72) = 0;
  v19 = (int *)sub_100007E8C(&qword_10119EEE8);
  v20 = (_QWORD *)(a5 + v19[12]);
  *v20 = swift_getKeyPath(&unk_100EA8AA8);
  v21 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v20, v21, 0);
  v22 = (_QWORD *)(a5 + v19[13]);
  v23 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v24 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v22 = EnvironmentObject.init()(v23, v24);
  v22[1] = v25;
  v26 = (_QWORD *)(a5 + v19[14]);
  v27 = type metadata accessor for NoticePresenter(0);
  v28 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v26 = EnvironmentObject.init()(v27, v28);
  v26[1] = v29;
  v30 = a5 + v19[15];
  *(_QWORD *)v30 = sub_1000DEC04;
  *(_QWORD *)(v30 + 8) = 0;
  *(_BYTE *)(v30 + 16) = 0;
  v31 = (_QWORD *)(a5 + v19[16]);
  v32 = type metadata accessor for NavigationPusher();
  v33 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v31 = EnvironmentObject.init()(v32, v33);
  v31[1] = v34;
  v35 = (_QWORD *)(a5 + v19[17]);
  v36 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v37 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v35 = EnvironmentObject.init()(v36, v37);
  v35[1] = v38;
  v39 = (_QWORD *)(a5 + v19[18]);
  v40 = type metadata accessor for TabSelectionManager(0);
  v41 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v39 = EnvironmentObject.init()(v40, v41);
  v39[1] = v42;
  v43 = a5 + v19[19];
  *(_QWORD *)v43 = swift_getKeyPath(&unk_100EA8B28);
  *(_QWORD *)(v43 + 8) = 0;
  *(_BYTE *)(v43 + 16) = 0;
  v44 = a5 + v19[20];
  *(_QWORD *)v44 = swift_getKeyPath(&unk_100EA8B50);
  *(_QWORD *)(v44 + 8) = 0;
  *(_BYTE *)(v44 + 16) = 0;
  sub_10004A160(a2, (uint64_t)v14, &qword_10119ED10);
  v45 = v57;
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  v47 = v61;
  v46(v11, v61, v9);
  v48 = (void *)sub_10009E414((uint64_t)v11);
  v49 = (uint64_t)v58;
  v46(v58, v47, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v49, 0, 1, v9);
  v50 = sub_100007E8C(&qword_10119F068);
  swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  v51 = sub_1000A0B14((uint64_t)v14, v48, v49, v59, v60);

  v52 = sub_100049F28(&qword_10119F070, &qword_10119F068, (uint64_t)&unk_100EAF19C);
  v53 = ObservedObject.init(wrappedValue:)(v51, v50, v52);
  v55 = v54;
  sub_10004FF60(a2, &qword_10119ED10);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v61, v9);
  *(_QWORD *)a5 = v53;
  *(_QWORD *)(a5 + 8) = v55;
  return result;
}

uint64_t sub_100080BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  char v63;
  __int128 v64;
  char v65;
  uint64_t v66;

  v59 = a3;
  v60 = a4;
  v61 = a1;
  v7 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v7);
  v58 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v57 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  __chkstk_darwin(v12);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62[0] = 0;
  v15 = sub_100007E8C(&qword_10119F2F8);
  State.init(wrappedValue:)(v62, v15);
  *(_OWORD *)(a5 + 16) = v64;
  v62[0] = 0;
  v62[1] = 0;
  v63 = 1;
  v16 = sub_100007E8C(&qword_10119F058);
  State.init(wrappedValue:)(v62, v16);
  v17 = v65;
  v18 = v66;
  *(_OWORD *)(a5 + 32) = v64;
  *(_BYTE *)(a5 + 48) = v17;
  *(_QWORD *)(a5 + 56) = v18;
  *(_QWORD *)(a5 + 64) = swift_getKeyPath(&unk_100EA8B00);
  *(_BYTE *)(a5 + 72) = 0;
  v19 = (int *)sub_100007E8C(&qword_10119EEB8);
  v20 = (_QWORD *)(a5 + v19[12]);
  *v20 = swift_getKeyPath(&unk_100EA8AA8);
  v21 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v20, v21, 0);
  v22 = (_QWORD *)(a5 + v19[13]);
  v23 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v24 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v22 = EnvironmentObject.init()(v23, v24);
  v22[1] = v25;
  v26 = (_QWORD *)(a5 + v19[14]);
  v27 = type metadata accessor for NoticePresenter(0);
  v28 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v26 = EnvironmentObject.init()(v27, v28);
  v26[1] = v29;
  v30 = a5 + v19[15];
  *(_QWORD *)v30 = sub_1000DEC04;
  *(_QWORD *)(v30 + 8) = 0;
  *(_BYTE *)(v30 + 16) = 0;
  v31 = (_QWORD *)(a5 + v19[16]);
  v32 = type metadata accessor for NavigationPusher();
  v33 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v31 = EnvironmentObject.init()(v32, v33);
  v31[1] = v34;
  v35 = (_QWORD *)(a5 + v19[17]);
  v36 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v37 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v35 = EnvironmentObject.init()(v36, v37);
  v35[1] = v38;
  v39 = (_QWORD *)(a5 + v19[18]);
  v40 = type metadata accessor for TabSelectionManager(0);
  v41 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v39 = EnvironmentObject.init()(v40, v41);
  v39[1] = v42;
  v43 = a5 + v19[19];
  *(_QWORD *)v43 = swift_getKeyPath(&unk_100EA8B28);
  *(_QWORD *)(v43 + 8) = 0;
  *(_BYTE *)(v43 + 16) = 0;
  v44 = a5 + v19[20];
  *(_QWORD *)v44 = swift_getKeyPath(&unk_100EA8B50);
  *(_QWORD *)(v44 + 8) = 0;
  *(_BYTE *)(v44 + 16) = 0;
  sub_10004A160(a2, (uint64_t)v14, (uint64_t *)&unk_1011C5B80);
  v45 = v57;
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  v47 = v61;
  v46(v11, v61, v9);
  v48 = (void *)sub_10009E138((uint64_t)v11);
  v49 = (uint64_t)v58;
  v46(v58, v47, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v49, 0, 1, v9);
  v50 = sub_100007E8C(&qword_10119F300);
  swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  v51 = sub_1000A1E30((uint64_t)v14, v48, v49, v59, v60);

  v52 = sub_100049F28(&qword_10119F308, &qword_10119F300, (uint64_t)&unk_100EAF19C);
  v53 = ObservedObject.init(wrappedValue:)(v51, v50, v52);
  v55 = v54;
  sub_10004FF60(a2, (uint64_t *)&unk_1011C5B80);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v61, v9);
  *(_QWORD *)a5 = v53;
  *(_QWORD *)(a5 + 8) = v55;
  return result;
}

uint64_t sub_10008104C()
{
  return sub_100081064((uint64_t)sub_1000A5828);
}

uint64_t sub_100081058()
{
  return sub_100081064((uint64_t)sub_10008117C);
}

uint64_t sub_100081064(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119EFE8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.principal.getter(v7);
  ToolbarItem<>.init(placement:content:)(v4, a1, 0, &type metadata for Text, &protocol witness table for Text);
  v10 = sub_100049F28(&qword_10119EFF0, &qword_10119EFE8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v9, v5, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

double sub_10008117C@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_100EA9390;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_10008119C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011C7310);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Library.Context(0);
  v8 = __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v12 = (char *)&v26 - v11;
  v13 = sub_100007E8C(&qword_10119EF90);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 0;
  v27 = 0;
  v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(v28);
  v16 = sub_1000A3BD4();
  v27 = AppStorage.init<A>(wrappedValue:_:store:)(&v29, 0xD000000000000025, 0x8000000100E2C880, 0, &type metadata for Library.ContentFilterOption, v16);
  Library.Context.init()(v10);
  v17 = type metadata accessor for Composer(0);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v6, v2, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v6, 0, 1, v17);
  sub_100048748(&qword_10119F4B8, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
  Library.Context.with<A>(_:)((uint64_t)v6, v17, (uint64_t)v12);
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011C7310);
  sub_10005B748((uint64_t)v10, type metadata accessor for Library.Context);
  v19 = sub_1000A0460();
  View.libraryContext(_:)((uint64_t)v12, (uint64_t)&_s10AlbumsViewVN, v19);
  sub_10005B748((uint64_t)v12, type metadata accessor for Library.Context);
  v20 = swift_release(v27);
  v21 = Composer.name.getter(v20);
  v23 = v22;
  sub_10004A160((uint64_t)v15, a1, &qword_10119EF90);
  v24 = (uint64_t *)(a1 + *(int *)(sub_100007E8C(&qword_10119EE90) + 36));
  *v24 = v21;
  v24[1] = v23;
  return sub_10004FF60((uint64_t)v15, &qword_10119EF90);
}

uint64_t sub_100081418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v2 = v1;
  v4 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Library.Context(0);
  v8 = __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v12 = (char *)&v26 - v11;
  v13 = sub_100007E8C(&qword_10119EF90);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 0;
  v27 = 0;
  v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(v28);
  v16 = sub_1000A3BD4();
  v27 = AppStorage.init<A>(wrappedValue:_:store:)(&v29, 0xD000000000000025, 0x8000000100E2C880, 0, &type metadata for Library.ContentFilterOption, v16);
  Library.Context.init()(v10);
  v17 = type metadata accessor for Genre(0);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v6, v2, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v6, 0, 1, v17);
  Library.Context.with<A>(_:)((uint64_t)v6, v17, (uint64_t)v12);
  sub_10004FF60((uint64_t)v6, &qword_10119ED08);
  sub_10005B748((uint64_t)v10, type metadata accessor for Library.Context);
  v19 = sub_1000A0460();
  View.libraryContext(_:)((uint64_t)v12, (uint64_t)&_s10AlbumsViewVN, v19);
  sub_10005B748((uint64_t)v12, type metadata accessor for Library.Context);
  v20 = swift_release(v27);
  v21 = Genre.name.getter(v20);
  v23 = v22;
  sub_10004A160((uint64_t)v15, a1, &qword_10119EF90);
  v24 = (uint64_t *)(a1 + *(int *)(sub_100007E8C(&qword_10119EE90) + 36));
  *v24 = v21;
  v24[1] = v23;
  return sub_10004FF60((uint64_t)v15, &qword_10119EF90);
}

void sub_100081678(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  char *v21;
  _QWORD v22[10];
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v1 = _s14TVEpisodesViewV10DataSourceOMa(0);
  __chkstk_darwin(v1);
  v22[9] = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Genre(0);
  v22[8] = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v22[6] = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Composer(0);
  v22[4] = *(_QWORD *)(v4 - 8);
  v22[5] = v4;
  __chkstk_darwin(v4);
  v22[3] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Artist(0);
  v22[1] = *(_QWORD *)(v6 - 8);
  v22[2] = v6;
  __chkstk_darwin(v6);
  v7 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v28 = (char *)v22 - v9;
  v10 = type metadata accessor for Playlist(0);
  v26 = *(_QWORD *)(v10 - 8);
  v27 = v10;
  __chkstk_darwin(v10);
  v25 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v12);
  v22[7] = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_10119ED10);
  v15 = __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  v16 = type metadata accessor for Album(0);
  v24 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v17 = type metadata accessor for NavigationDestinationItem(0);
  __chkstk_darwin(v17);
  v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v29, (uint64_t)v19, v20);
  v21 = (char *)sub_10008195C + 4 * word_100EA8976[swift_getEnumCaseMultiPayload(v19, v17)];
  __asm { BR              X10 }
}

void sub_10008195C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *(void **)v0;
  v3 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v1 - 88);
  Hasher._combine(_:)(0);
  NSObject.hash(into:)(v5);
  if (v4 >> 60 == 15)
  {
    Hasher._combine(_:)(0);

  }
  else
  {
    Hasher._combine(_:)(1u);
    sub_100079DE4(v3, v4);
    ((void (*)(uint64_t, uint64_t, unint64_t))Data.hash(into:))(v5, v3, v4);
    sub_1000822B4(v3, v4);

    sub_1000822B4(v3, v4);
  }
}

Swift::Int sub_10008220C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100081678((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10008224C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100081678((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100082288()
{
  return sub_100048748(&qword_10119EE08, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A40);
}

uint64_t sub_1000822B4(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1000652DC(result, a2);
  return result;
}

uint64_t sub_1000822C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v3 = v2;
  v39 = (_QWORD *)a1;
  v42 = a2;
  v4 = sub_100007E8C(&qword_1011A3CF0);
  __chkstk_darwin(v4);
  v41 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for PushPendingNavigationItemModifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119F5B8);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100007E8C(&qword_10119F5C0);
  v38 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v36 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704((uint64_t)v3, (uint64_t)v9, type metadata accessor for PushPendingNavigationItemModifier);
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = v15 + v8;
  v17 = v14 | 7;
  v18 = swift_allocObject(&unk_1010AFF78, v16, v14 | 7);
  sub_10005B6C0((uint64_t)v9, v18 + v15, type metadata accessor for PushPendingNavigationItemModifier);
  v19 = sub_100007E8C(&qword_10119F5C8);
  v20 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v12, v39, v19);
  v37 = v10;
  v21 = (uint64_t (**)())&v12[*(int *)(v10 + 36)];
  *v21 = sub_1000A4FA0;
  v21[1] = (uint64_t (*)())v18;
  v21[2] = 0;
  v21[3] = 0;
  v39 = v3;
  v22 = *v3;
  if (*v3)
  {
    __chkstk_darwin(v20);
    *(&v35 - 2) = v4;
    KeyPath = swift_getKeyPath(&unk_100EA9330);
    __chkstk_darwin(KeyPath);
    *(&v35 - 2) = v4;
    v24 = swift_getKeyPath(&unk_100EA9368);
    swift_retain(v22);
    v25 = v41;
    static Published.subscript.getter(v41, v26, KeyPath, v24);
    swift_release(v22);
    swift_release(KeyPath);
    swift_release(v24);
    sub_10005B704((uint64_t)v39, (uint64_t)v9, type metadata accessor for PushPendingNavigationItemModifier);
    v27 = swift_allocObject(&unk_1010AFFA0, v16, v17);
    sub_10005B6C0((uint64_t)v9, v27 + v15, type metadata accessor for PushPendingNavigationItemModifier);
    v28 = sub_1000A513C();
    v29 = sub_1000A51C0();
    v30 = v36;
    View.onChange<A>(of:initial:_:)(v25, 0, sub_1000A4FA0, v27, v37, v4, v28, v29);
    swift_release(v27);
    sub_10004FF60((uint64_t)v25, &qword_1011A3CF0);
    sub_10004FF60((uint64_t)v12, &qword_10119F5B8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(v42, v30, v40);
  }
  else
  {
    v32 = v39[1];
    v33 = sub_100007E8C(&qword_10119F038);
    v34 = sub_100049F28(&qword_10119F040, &qword_10119F038, (uint64_t)&unk_100EC0A50);
    result = EnvironmentObject.error()(0, v32, v33, v34);
    __break(1u);
  }
  return result;
}

uint64_t sub_100082654()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void **v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(_QWORD *, _QWORD);
  unint64_t *v71;
  unint64_t *v72;
  unint64_t v73;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  unint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void **v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD v99[4];

  v97 = type metadata accessor for PushPendingNavigationItemModifier(0);
  v89 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v90 = v1;
  v92 = (uint64_t)&v85 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v91 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011A3CF0);
  v5 = __chkstk_darwin(v4);
  v94 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v93 = (char *)&v85 - v8;
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v85 - v9);
  v11 = type metadata accessor for NavigationDestinationItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v95 = (void **)((char *)&v85 - v17);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v85 - v19;
  v98 = v0;
  v21 = *v0;
  if (!*v0)
  {
    v77 = v98[1];
    v78 = &qword_10119F038;
    v79 = sub_100007E8C(&qword_10119F038);
    v80 = (unint64_t *)&unk_10119F040;
    goto LABEL_26;
  }
  __chkstk_darwin(v18);
  *(&v85 - 2) = v4;
  KeyPath = swift_getKeyPath(&unk_100EA9330);
  __chkstk_darwin(KeyPath);
  v96 = v4;
  *(&v85 - 2) = v4;
  v23 = swift_getKeyPath(&unk_100EA9368);
  swift_retain(v21);
  static Published.subscript.getter(v10, v24, KeyPath, v23);
  swift_release(v21);
  swift_release(KeyPath);
  v25 = swift_release(v23);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v12 + 48))(v10, 1, v11, v25) == 1)
    return sub_10004FF60((uint64_t)v10, &qword_1011A3CF0);
  v85 = v11;
  v86 = v15;
  v87 = v12;
  v88 = v20;
  sub_10005B6C0((uint64_t)v10, (uint64_t)v20, type metadata accessor for NavigationDestinationItem);
  v27 = (uint64_t)v98;
  v28 = v98[2];
  v29 = *((_BYTE *)v98 + 24);
  sub_10006B3F8(v28, v29);
  v30 = sub_100823DB4(v28, v29);
  v31 = sub_10006B604(v28, v29);
  v32 = (uint64_t *)(v27 + *(int *)(v97 + 32));
  v33 = *v32;
  if (!*v32)
    goto LABEL_27;
  __chkstk_darwin(v31);
  *(&v85 - 2) = (uint64_t)&type metadata for TabIdentifier;
  v34 = sub_1000502A4();
  *(&v85 - 1) = v34;
  v35 = swift_getKeyPath(&unk_100EA9070);
  __chkstk_darwin(v35);
  *(&v85 - 2) = (uint64_t)&type metadata for TabIdentifier;
  *(&v85 - 1) = v34;
  v36 = swift_getKeyPath(&unk_100EA90A8);
  swift_retain(v33);
  static Published.subscript.getter(v99, v37, v35, v36);
  swift_release(v33);
  swift_release(v35);
  swift_release(v36);
  if (v30 == 6)
  {
    v38 = (uint64_t)v88;
    if (LOBYTE(v99[0]) != 6)
      goto LABEL_17;
  }
  else
  {
    v38 = (uint64_t)v88;
    if (LOBYTE(v99[0]) == 6)
      goto LABEL_17;
    sub_10072DEC0(v30);
    if ((v39 & 1) == 0)
      goto LABEL_17;
  }
  sub_10006B3F8(v28, v29);
  v40 = sub_100823DB4(v28, v29);
  sub_10006B604(v28, v29);
  swift_retain(v33);
  v41 = sub_100082F1C(v38);
  swift_release(v33);
  if (v40 == 6)
  {
    v42 = v96;
    if (v41 != 6)
      goto LABEL_17;
  }
  else
  {
    v42 = v96;
    if (v41 == 6)
      goto LABEL_17;
    sub_10072DEC0(v40);
    if ((v43 & 1) == 0)
      goto LABEL_17;
  }
  v44 = (uint64_t)v93;
  v45 = v85;
  v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v93, 1, 1, v85);
  __chkstk_darwin(v46);
  *(&v85 - 2) = v42;
  v47 = swift_getKeyPath(&unk_100EA9330);
  __chkstk_darwin(v47);
  *(&v85 - 2) = v42;
  v48 = swift_getKeyPath(&unk_100EA9368);
  v49 = v94;
  sub_10004A160(v44, v94, &qword_1011A3CF0);
  swift_retain_n(v21, 2);
  static Published.subscript.setter(v49, v21, v47, v48);
  sub_10004FF60(v44, &qword_1011A3CF0);
  swift_release(v21);
  v50 = v95;
  sub_10005B704(v38, (uint64_t)v95, type metadata accessor for NavigationDestinationItem);
  if (swift_getEnumCaseMultiPayload(v50, v45) != 7)
  {
    sub_10005B748((uint64_t)v50, type metadata accessor for NavigationDestinationItem);
    v64 = (uint64_t)v98;
    v65 = v98[4];
    if (!v65)
    {
      while (1)
      {
        v77 = *(_QWORD *)(v64 + 40);
        v78 = (uint64_t *)&unk_10119CBE0;
        v79 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v80 = &qword_1011C5B90;
LABEL_26:
        v81 = sub_100049F28(v80, v78, (uint64_t)&unk_100EC0A50);
        EnvironmentObject.error()(0, v77, v79, v81);
        __break(1u);
LABEL_27:
        v82 = v32[1];
        v83 = type metadata accessor for TabSelectionManager(0);
        v84 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
        EnvironmentObject.error()(0, v82, v83, v84);
        __break(1u);
      }
    }
    v66 = sub_10005B704(v38, (uint64_t)v86, type metadata accessor for NavigationDestinationItem);
    __chkstk_darwin(v66);
    v67 = sub_100007E8C((uint64_t *)&unk_1011D11C0);
    *(&v85 - 2) = v67;
    v68 = swift_getKeyPath(&unk_100EA9330);
    __chkstk_darwin(v68);
    *(&v85 - 2) = v67;
    v69 = swift_getKeyPath(&unk_100EA9368);
    swift_retain(v65);
    v70 = (void (*)(_QWORD *, _QWORD))static Published.subscript.modify(v99, v65, v68, v69);
    v72 = v71;
    v73 = *v71;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v71);
    *v72 = v73;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v73 = sub_100431A00(0, *(_QWORD *)(v73 + 16) + 1, 1, v73);
      *v72 = v73;
    }
    v76 = *(_QWORD *)(v73 + 16);
    v75 = *(_QWORD *)(v73 + 24);
    if (v76 >= v75 >> 1)
    {
      v73 = sub_100431A00(v75 > 1, v76 + 1, 1, v73);
      *v72 = v73;
    }
    *(_QWORD *)(v73 + 16) = v76 + 1;
    sub_10005B6C0((uint64_t)v86, v73+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(_QWORD *)(v87 + 72) * v76, type metadata accessor for NavigationDestinationItem);
    v70(v99, 0);
    swift_release(v65);
    swift_release(v68);
    swift_release(v69);
    v63 = v38;
    return sub_10005B748(v63, type metadata accessor for NavigationDestinationItem);
  }
  v51 = *v50;
  sub_1000822B4((uint64_t)v50[2], (unint64_t)v50[3]);
  v52 = type metadata accessor for TaskPriority(0);
  v53 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v91, 1, 1, v52);
  v54 = v92;
  sub_10005B704((uint64_t)v98, v92, type metadata accessor for PushPendingNavigationItemModifier);
  type metadata accessor for MainActor(0);
  v55 = v51;
  v57 = static MainActor.shared.getter(v56);
  v58 = *(unsigned __int8 *)(v89 + 80);
  v59 = (v58 + 32) & ~v58;
  v60 = (v90 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  v61 = swift_allocObject(&unk_1010AFFC8, v60 + 8, v58 | 7);
  *(_QWORD *)(v61 + 16) = v57;
  *(_QWORD *)(v61 + 24) = &protocol witness table for MainActor;
  sub_10005B6C0(v54, v61 + v59, type metadata accessor for PushPendingNavigationItemModifier);
  *(_QWORD *)(v61 + v60) = v55;
  v62 = sub_100166D14(v53, (uint64_t)&unk_10119F5F0, v61);

  swift_release(v62);
LABEL_17:
  v63 = v38;
  return sub_10005B748(v63, type metadata accessor for NavigationDestinationItem);
}

uint64_t sub_100082F1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t EnumCaseMultiPayload;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[3];
  uint64_t v25;

  v3 = type metadata accessor for NavigationDestinationItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v5, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v3);
  if ((_DWORD)EnumCaseMultiPayload == 7)
  {
    v8 = *(void **)v5;
    v9 = v5[8];
    v10 = sub_1000822B4(*((_QWORD *)v5 + 2), *((_QWORD *)v5 + 3));
    if ((_DWORD)v9 == 6)
    {
      __chkstk_darwin(v10);
      v24[-2] = &type metadata for TabIdentifier;
      v17 = sub_1000502A4();
      v24[-1] = v17;
      KeyPath = swift_getKeyPath(&unk_100EA9070);
      __chkstk_darwin(KeyPath);
      v24[-2] = &type metadata for TabIdentifier;
      v24[-1] = v17;
      v19 = swift_getKeyPath(&unk_100EA90A8);
      static Published.subscript.getter(v24, v1, KeyPath, v19);

      swift_release(KeyPath);
      swift_release(v19);
      return LOBYTE(v24[0]);
    }
    else if ((_DWORD)v9 == 7)
    {
      v11 = type metadata accessor for JSDeepLinkSegue();
      v12 = swift_dynamicCastClass(v8, v11);
      if (v12)
      {
        v13 = (_BYTE *)(v12 + OBJC_IVAR____TtC11MusicJSCore15JSDeepLinkSegue_viewIdentifier);
        swift_beginAccess(v12 + OBJC_IVAR____TtC11MusicJSCore15JSDeepLinkSegue_viewIdentifier, v24, 0, 0);
        switch(*v13)
        {
          case 0:

            v9 = 0;
            break;
          case 2:

            v9 = 1;
            break;
          case 3:

            v9 = 2;
            break;
          case 4:

            v9 = 3;
            break;
          case 5:

            v9 = 4;
            break;
          default:
            goto LABEL_10;
        }
      }
      else
      {
LABEL_10:
        __chkstk_darwin(v12);
        v24[-2] = &type metadata for TabIdentifier;
        v20 = sub_1000502A4();
        v24[-1] = v20;
        v21 = swift_getKeyPath(&unk_100EA9070);
        __chkstk_darwin(v21);
        v24[-2] = &type metadata for TabIdentifier;
        v24[-1] = v20;
        v22 = swift_getKeyPath(&unk_100EA90A8);
        static Published.subscript.getter(&v25, v1, v21, v22);

        swift_release(v21);
        swift_release(v22);
        return v25;
      }
    }
    else
    {

    }
  }
  else
  {
    __chkstk_darwin(EnumCaseMultiPayload);
    v24[-2] = &type metadata for TabIdentifier;
    v14 = sub_1000502A4();
    v24[-1] = v14;
    v15 = swift_getKeyPath(&unk_100EA9070);
    __chkstk_darwin(v15);
    v24[-2] = &type metadata for TabIdentifier;
    v24[-1] = v14;
    v16 = swift_getKeyPath(&unk_100EA90A8);
    static Published.subscript.getter(v24, v1, v15, v16);
    swift_release(v15);
    swift_release(v16);
    v9 = LOBYTE(v24[0]);
    sub_10005B748((uint64_t)v5, type metadata accessor for NavigationDestinationItem);
  }
  return v9;
}

uint64_t sub_1000832B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v5[46] = a4;
  v5[47] = a5;
  v6 = type metadata accessor for PushPendingNavigationItemModifier(0);
  v5[48] = v6;
  v5[49] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v5[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A9580);
  v5[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s18PerformanceConteXtVMa(0);
  v5[52] = v9;
  v5[53] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v5[54] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v5[55] = v12;
  v5[56] = v13;
  return swift_task_switch(sub_1000833AC, v12, v13);
}

uint64_t sub_1000833AC()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v1 = JSBridge.shared.unsafeMutableAddressor();
  v2 = (_QWORD *)*v1;
  *(_QWORD *)(v0 + 456) = *v1;
  v3 = *(int **)((swift_isaMask & *v2) + 0xE0);
  v4 = v3[1];
  v7 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  v2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 464) = v5;
  *v5 = v0;
  v5[1] = sub_100083444;
  return v7(v0 + 16);
}

uint64_t sub_100083444()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 456);
  swift_task_dealloc(*(_QWORD *)(*v0 + 464));

  return swift_task_switch(sub_100083494, *(_QWORD *)(v1 + 440), *(_QWORD *)(v1 + 448));
}

uint64_t sub_100083494()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t KeyPath;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t *v49;
  void *v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  _QWORD *v68;
  id v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  os_log_t loga;
  os_log_t log;
  NSObject *logb;
  id v95;
  id v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD *v100;
  NSObject *v101;
  unint64_t v102;

  v1 = *(_QWORD *)(v0 + 368);
  swift_release(*(_QWORD *)(v0 + 432));
  v2 = *(id *)(v0 + 16);
  sub_1000A543C(v0 + 16);
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_QWORD *)(v0 + 184) = 0;
  *(_OWORD *)(v0 + 192) = xmmword_100EA93A0;
  v3 = *(_QWORD *)(v1 + 32);
  if (!v3)
  {
    v45 = *(_QWORD *)(*(_QWORD *)(v0 + 368) + 40);
    v46 = v2;
    v47 = (uint64_t *)&unk_10119CBE0;
    v48 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v49 = &qword_1011C5B90;
    v50 = &unk_100EC0A50;
LABEL_13:
    v51 = sub_100049F28(v49, v47, (uint64_t)v50);
    return EnvironmentObject.error()(0, v45, v48, v51);
  }
  v5 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 408);
  v6 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 368);
  swift_retain(v3);
  v8 = v2;
  sub_100823DD8(v4);
  v9 = type metadata accessor for OpenURLAction(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
  v10 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  v11 = (uint64_t *)(v7 + *(int *)(v6 + 36));
  v12 = *v11;
  if (!*v11)
  {
    v45 = v11[1];
    v47 = &qword_10119CBF8;
    v48 = sub_100007E8C(&qword_10119CBF8);
    v49 = (unint64_t *)&unk_10119CC00;
LABEL_12:
    v50 = &protocol conformance descriptor for PresentedViewState<A>;
    goto LABEL_13;
  }
  v13 = *(int **)(v0 + 384);
  v14 = *(_QWORD *)(v0 + 368);
  v15 = (uint64_t *)(v14 + v13[10]);
  v16 = *v15;
  if (!*v15)
  {
    v45 = v15[1];
    swift_retain(v12);
    v47 = (uint64_t *)&unk_1011B4E40;
    v48 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v49 = (unint64_t *)&unk_10119CC10;
    v50 = &protocol conformance descriptor for PresentedViewState<A>;
    goto LABEL_13;
  }
  v17 = (uint64_t *)(v14 + v13[11]);
  v18 = *v17;
  if (!*v17)
  {
    v45 = v17[1];
    swift_retain(v16);
    swift_retain(v12);
    v47 = &qword_10119F4E8;
    v48 = sub_100007E8C(&qword_10119F4E8);
    v49 = (unint64_t *)&unk_1011B4E50;
    goto LABEL_12;
  }
  v19 = v14 + v13[12];
  v20 = *(void **)v19;
  v21 = *(_BYTE *)(v19 + 8);
  v98 = v18;
  swift_retain(v18);
  swift_retain(v12);
  swift_retain(v16);
  sub_1000A4100(v20, v21);
  v96 = sub_100824044(v20, v21);
  sub_1000A4224(v20, v21);
  v22 = (uint64_t *)(v14 + v13[8]);
  v23 = *v22;
  if (!*v22)
  {
    v45 = v22[1];
    v48 = type metadata accessor for TabSelectionManager(0);
    v51 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    swift_retain(v3);
    return EnvironmentObject.error()(0, v45, v48, v51);
  }
  v90 = v16;
  v95 = v8;
  v100 = (_OWORD *)(v0 + 208);
  v91 = (_QWORD *)(v0 + 320);
  v24 = *(_QWORD *)(v0 + 384);
  loga = *(os_log_t *)(v0 + 368);
  v25 = (_QWORD *)swift_task_alloc(16);
  *v25 = &type metadata for TabIdentifier;
  v26 = sub_1000502A4();
  v25[1] = v26;
  KeyPath = swift_getKeyPath(&unk_100EA9070);
  swift_task_dealloc(v25);
  v28 = (_QWORD *)swift_task_alloc(16);
  *v28 = &type metadata for TabIdentifier;
  v28[1] = v26;
  v29 = swift_getKeyPath(&unk_100EA90A8);
  swift_task_dealloc(v28);
  swift_retain(v3);
  swift_retain(v23);
  static Published.subscript.getter((_QWORD *)(v0 + 472), v30, KeyPath, v29);
  swift_release(v29);
  swift_release(KeyPath);
  swift_release(v23);
  v31 = (char *)loga + *(int *)(v24 + 52);
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  LOBYTE(v28) = v31[16];
  v88 = *(_BYTE *)(v0 + 472);
  sub_1000A410C(*(_QWORD *)v31, v32, (char)v28);
  sub_100824224(v33, v32, (char)v28);
  v85 = v34;
  sub_1000A4230(v33, v32, (char)v28);
  v35 = (char *)loga + *(int *)(v24 + 56);
  v37 = *(_QWORD *)v35;
  v36 = *((_QWORD *)v35 + 1);
  v38 = v35[16];
  sub_1000A411C(*(_QWORD *)v35, v36, v38);
  sub_100824400(v37, v36, v38, (uint64_t *)&v101);
  sub_1000A4240(v37, v36, v38);
  v39 = v102;
  log = v101;
  sub_10066D160(v88);
  v89 = v40;
  v42 = v41;
  swift_bridgeObjectRelease(v85);
  if (v39 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    v43 = v42;
    log = (os_log_t)sub_10066D7A8();
    v87 = v44;
    swift_release(v3);
    swift_bridgeObjectRelease(v42);
  }
  else
  {
    v87 = v39;
    swift_release(v3);
    v43 = v42;
  }
  v53 = *(_QWORD *)(v0 + 424);
  v54 = *(_QWORD *)(v0 + 408);
  v84 = *(_QWORD *)(v0 + 400);
  v86 = *(_QWORD *)(v0 + 416);
  sub_1000A411C(v37, v36, v38);
  sub_100824400(v37, v36, v38, (uint64_t *)&v101);
  sub_1000A4240(v37, v36, v38);
  sub_1005F5640(v0 + 136, v3, v54, v84, 0, v12, v90, v98, v53, v96, v89, v43, (uint64_t)log, v87, (uint64_t)v101, v102);
  *(_QWORD *)(v0 + 344) = v86;
  v55 = sub_100049F68(v91);
  sub_10005B704(v53, (uint64_t)v55, _s18PerformanceConteXtVMa);
  *(_OWORD *)(v0 + 288) = 0u;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_QWORD *)(v0 + 272) = 0;
  *(_QWORD *)(v0 + 280) = 0;
  v56 = v95;
  *(_QWORD *)(v0 + 264) = v95;
  sub_1000A5508((uint64_t)v91, v0 + 288, &qword_10119DCC0);
  v57 = *(_OWORD *)(v0 + 280);
  *v100 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 224) = v57;
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v0 + 312);
  sub_10005B748(v53, _s18PerformanceConteXtVMa);
  if (qword_10119B890 != -1)
    swift_once(&qword_10119B890, sub_100084544);
  v58 = *(_QWORD *)(v0 + 392);
  v59 = *(_QWORD *)(v0 + 368);
  v60 = *(void **)(v0 + 376);
  v61 = type metadata accessor for Logger(0);
  sub_100048B14(v61, (uint64_t)qword_10124C748);
  sub_10005B704(v59, v58, type metadata accessor for PushPendingNavigationItemModifier);
  v62 = Logger.logObject.getter(v60);
  v63 = static os_log_type_t.default.getter();
  v64 = os_log_type_enabled(v62, v63);
  v65 = *(_QWORD *)(v0 + 392);
  v66 = *(void **)(v0 + 376);
  if (v64)
  {
    v97 = v63;
    v67 = swift_slowAlloc(22, -1);
    v68 = (_QWORD *)swift_slowAlloc(8, -1);
    v99 = swift_slowAlloc(32, -1);
    v101 = v99;
    *(_DWORD *)v67 = 138543618;
    *(_QWORD *)(v0 + 352) = v66;
    logb = v62;
    v69 = v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 352, v0 + 360);
    *v68 = v66;

    *(_WORD *)(v67 + 12) = 2082;
    v70 = *(_QWORD *)(v65 + 16);
    v71 = *(_BYTE *)(v65 + 24);
    sub_10006B3F8(v70, v71);
    v72 = sub_100823DB4(v70, v71);
    sub_10006B604(v70, v71);
    *(_BYTE *)(v0 + 473) = v72;
    v56 = v95;
    v73 = sub_100007E8C((uint64_t *)&unk_1011CEE90);
    v74 = String.init<A>(describing:)(v0 + 473, v73);
    v76 = v75;
    *(_QWORD *)(v0 + 360) = sub_100322200(v74, v75, (uint64_t *)&v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 360, v0 + 368);
    swift_bridgeObjectRelease(v76);
    sub_10005B748(v65, type metadata accessor for PushPendingNavigationItemModifier);
    _os_log_impl((void *)&_mh_execute_header, logb, v97, "Performing pending segue %{public}@ in tab: %{public}s)", (uint8_t *)v67, 0x16u);
    v77 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v68, 1, v77);
    swift_slowDealloc(v68, -1, -1);
    swift_arrayDestroy(v99, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v99, -1, -1);
    swift_slowDealloc(v67, -1, -1);

  }
  else
  {

    sub_10005B748(v65, type metadata accessor for PushPendingNavigationItemModifier);
  }
  v78 = *(_QWORD *)(v0 + 424);
  v80 = *(_QWORD *)(v0 + 400);
  v79 = *(_QWORD *)(v0 + 408);
  v81 = *(_QWORD *)(v0 + 392);
  v82 = *(_QWORD *)(v0 + 376);
  v83 = (id)*JSSegueCoordinator.shared.unsafeMutableAddressor();
  JSSegueCoordinator.perform(segue:with:)(v82, (uint64_t)v100);

  sub_1000A554C((uint64_t)v100);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100083D34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;

  v2 = sub_100007E8C(&qword_10119F038);
  v3 = sub_100049F28(&qword_10119F040, &qword_10119F038, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)a1 = EnvironmentObject.init()(v2, v3);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = swift_getKeyPath(&unk_100EA91B0);
  *(_BYTE *)(a1 + 24) = 0;
  v5 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v6 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)(a1 + 32) = EnvironmentObject.init()(v5, v6);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = (int *)type metadata accessor for PushPendingNavigationItemModifier(0);
  v9 = (_QWORD *)(a1 + v8[7]);
  *v9 = swift_getKeyPath(&unk_100EA91D8);
  v10 = sub_100007E8C(&qword_10119F4E0);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  v11 = (_QWORD *)(a1 + v8[8]);
  v12 = type metadata accessor for TabSelectionManager(0);
  v13 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v11 = EnvironmentObject.init()(v12, v13);
  v11[1] = v14;
  v15 = (_QWORD *)(a1 + v8[9]);
  v16 = sub_100007E8C(&qword_10119CBF8);
  v17 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v15 = EnvironmentObject.init()(v16, v17);
  v15[1] = v18;
  v19 = (_QWORD *)(a1 + v8[10]);
  v20 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v21 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v19 = EnvironmentObject.init()(v20, v21);
  v19[1] = v22;
  v23 = (_QWORD *)(a1 + v8[11]);
  v24 = sub_100007E8C(&qword_10119F4E8);
  v25 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v23 = EnvironmentObject.init()(v24, v25);
  v23[1] = v26;
  v27 = a1 + v8[12];
  *(_QWORD *)v27 = swift_getKeyPath(&unk_100EA8B00);
  *(_BYTE *)(v27 + 8) = 0;
  v28 = a1 + v8[13];
  *(_QWORD *)v28 = swift_getKeyPath(&unk_100EA8B28);
  *(_QWORD *)(v28 + 8) = 0;
  *(_BYTE *)(v28 + 16) = 0;
  v29 = a1 + v8[14];
  result = swift_getKeyPath(&unk_100EA8B50);
  *(_QWORD *)v29 = result;
  *(_QWORD *)(v29 + 8) = 0;
  *(_BYTE *)(v29 + 16) = 0;
  return result;
}

uint64_t sub_100083F90(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t WitnessTable;
  uint64_t v34;

  v2 = (int *)type metadata accessor for PushPendingNavigationItemModifier(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119F038);
  v6 = sub_100049F28(&qword_10119F040, &qword_10119F038, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v4 = EnvironmentObject.init()(v5, v6);
  *((_QWORD *)v4 + 1) = v7;
  *((_QWORD *)v4 + 2) = swift_getKeyPath(&unk_100EA91B0);
  v4[24] = 0;
  v8 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v9 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *((_QWORD *)v4 + 4) = EnvironmentObject.init()(v8, v9);
  *((_QWORD *)v4 + 5) = v10;
  v11 = &v4[v2[7]];
  *(_QWORD *)v11 = swift_getKeyPath(&unk_100EA91D8);
  v12 = sub_100007E8C(&qword_10119F4E0);
  swift_storeEnumTagMultiPayload(v11, v12, 0);
  v13 = &v4[v2[8]];
  v14 = type metadata accessor for TabSelectionManager(0);
  v15 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v13 = EnvironmentObject.init()(v14, v15);
  *((_QWORD *)v13 + 1) = v16;
  v17 = &v4[v2[9]];
  v18 = sub_100007E8C(&qword_10119CBF8);
  v19 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v17 = EnvironmentObject.init()(v18, v19);
  *((_QWORD *)v17 + 1) = v20;
  v21 = &v4[v2[10]];
  v22 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v23 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v21 = EnvironmentObject.init()(v22, v23);
  *((_QWORD *)v21 + 1) = v24;
  v25 = &v4[v2[11]];
  v26 = sub_100007E8C(&qword_10119F4E8);
  v27 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v25 = EnvironmentObject.init()(v26, v27);
  *((_QWORD *)v25 + 1) = v28;
  v29 = &v4[v2[12]];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_100EA8B00);
  v29[8] = 0;
  v30 = &v4[v2[13]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100EA8B28);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v31 = &v4[v2[14]];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100EA8B50);
  *((_QWORD *)v31 + 1) = 0;
  v31[16] = 0;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NavigationStack<A, B>, a1);
  View.modifier<A>(_:)(v4, a1, v2, WitnessTable);
  return sub_10005B748((uint64_t)v4, type metadata accessor for PushPendingNavigationItemModifier);
}

uint64_t sub_100084268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  _QWORD v8[2];

  v8[0] = a1;
  v8[1] = a2;
  v6 = sub_100055B68();
  return View.navigationTitle<A>(_:)(v8, a3, &type metadata for String, a4, v6);
}

uint64_t sub_1000842C4()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_1000842DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[2];

  v1 = v0[1];
  v6[0] = *v0;
  v6[1] = v1;
  v2 = sub_100007E8C(&qword_10119F4D0);
  v3 = sub_100049F28(&qword_10119F4D8, &qword_10119F4D0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v4 = sub_100055B68();
  return View.navigationTitle<A>(_:)(v6, v2, &type metadata for String, v3, v4);
}

double sub_10008436C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  _QWORD v28[10];

  v2 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v3 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v4 = EnvironmentObject.init()(v2, v3);
  v6 = v5;
  v7 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v8 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v9 = EnvironmentObject.init()(v7, v8);
  v11 = v10;
  v12 = sub_100007E8C(&qword_10119F038);
  v13 = sub_100049F28(&qword_10119F040, &qword_10119F038, (uint64_t)&unk_100EC0A50);
  v14 = EnvironmentObject.init()(v12, v13);
  v16 = v15;
  v17 = sub_100007E8C(&qword_10119F630);
  v18 = sub_100049F28(&qword_10119F638, &qword_10119F630, (uint64_t)&unk_100EC0A50);
  v19 = EnvironmentObject.init()(v17, v18);
  v21 = v20;
  v22 = type metadata accessor for TabSelectionManager(0);
  v23 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v28[0] = v4;
  v28[1] = v6;
  v28[2] = v9;
  v28[3] = v11;
  v28[4] = v14;
  v28[5] = v16;
  v28[6] = v19;
  v28[7] = v21;
  v28[8] = EnvironmentObject.init()(v22, v23);
  v28[9] = v24;
  View.modifier<A>(_:)(v28, a1, &type metadata for NavigationDestinationPushing, a2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100084544()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124C748);
  sub_100048B14(v0, (uint64_t)qword_10124C748);
  return static Logger.music(_:)(0x6B6E694C70656544, 0xE900000000000073);
}

uint64_t sub_1000845A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibrarySongFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1000845E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[24];

  v34 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  v5 = __chkstk_darwin(v4);
  v33 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - v7;
  v9 = sub_100007E8C(&qword_1011A30F0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (uint64_t *)((char *)&v31 - v13);
  v15 = type metadata accessor for Playlist(0);
  v41 = v15;
  v16 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
  v42 = v16;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  v39 = v15;
  v40 = v16;
  v18 = swift_getKeyPath(&unk_100EA8C08);
  static Published.subscript.getter(v14, v1, KeyPath, v18);
  swift_release(KeyPath);
  v19 = v18;
  v20 = v34;
  swift_release(v19);
  v37 = v15;
  v38 = v16;
  v21 = swift_getKeyPath(&unk_100EA8BD0);
  v35 = v15;
  v36 = v16;
  v22 = swift_getKeyPath(&unk_100EA8C08);
  sub_10004A160(v20, (uint64_t)v12, &qword_1011A30F0);
  swift_retain(v1);
  static Published.subscript.setter(v12, v1, v21, v22);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15) == 1)
  {
    v23 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
    swift_beginAccess(v23, v43, 0, 0);
    sub_10004A160(v23, (uint64_t)v8, (uint64_t *)&unk_1011C5B80);
    v24 = type metadata accessor for Library.Context(0);
    v25 = (uint64_t)v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v33, 1, 1, v24);
    LOBYTE(v23) = sub_1000805B8((uint64_t)v8, v25, (uint64_t *)&unk_1011C5B80, &qword_10119EE48);
    sub_10004FF60(v25, (uint64_t *)&unk_1011C5B80);
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011C5B80);
    if ((v23 & 1) != 0)
    {
      v26 = type metadata accessor for TaskPriority(0);
      v27 = (uint64_t)v32;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v32, 1, 1, v26);
      v28 = (_QWORD *)swift_allocObject(&unk_1010AFCE8, 40, 7);
      v28[2] = 0;
      v28[3] = 0;
      v28[4] = v1;
      swift_retain(v1);
      v29 = sub_100166D14(v27, (uint64_t)&unk_10119F3B8, (uint64_t)v28);
      swift_release(v29);
    }
  }
  sub_10004FF60(v20, &qword_1011A30F0);
  return sub_10004FF60((uint64_t)v14, &qword_1011A30F0);
}

uint64_t sub_10008493C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[24];

  v34 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119ED10);
  v5 = __chkstk_darwin(v4);
  v33 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - v7;
  v9 = sub_100007E8C(&qword_1011A8FA0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (uint64_t *)((char *)&v31 - v13);
  v15 = type metadata accessor for Album(0);
  v41 = v15;
  v16 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  v42 = v16;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  v39 = v15;
  v40 = v16;
  v18 = swift_getKeyPath(&unk_100EA8C08);
  static Published.subscript.getter(v14, v1, KeyPath, v18);
  swift_release(KeyPath);
  v19 = v18;
  v20 = v34;
  swift_release(v19);
  v37 = v15;
  v38 = v16;
  v21 = swift_getKeyPath(&unk_100EA8BD0);
  v35 = v15;
  v36 = v16;
  v22 = swift_getKeyPath(&unk_100EA8C08);
  sub_10004A160(v20, (uint64_t)v12, &qword_1011A8FA0);
  swift_retain(v1);
  static Published.subscript.setter(v12, v1, v21, v22);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15) == 1)
  {
    v23 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
    swift_beginAccess(v23, v43, 0, 0);
    sub_10004A160(v23, (uint64_t)v8, &qword_10119ED10);
    v24 = type metadata accessor for Library.Context(0);
    v25 = (uint64_t)v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v33, 1, 1, v24);
    LOBYTE(v23) = sub_1000805B8((uint64_t)v8, v25, &qword_10119ED10, &qword_10119EE40);
    sub_10004FF60(v25, &qword_10119ED10);
    sub_10004FF60((uint64_t)v8, &qword_10119ED10);
    if ((v23 & 1) != 0)
    {
      v26 = type metadata accessor for TaskPriority(0);
      v27 = (uint64_t)v32;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v32, 1, 1, v26);
      v28 = (_QWORD *)swift_allocObject(&unk_1010AFBD0, 40, 7);
      v28[2] = 0;
      v28[3] = 0;
      v28[4] = v1;
      swift_retain(v1);
      v29 = sub_100166D14(v27, (uint64_t)&unk_10119F178, (uint64_t)v28);
      swift_release(v29);
    }
  }
  sub_10004FF60(v20, &qword_1011A8FA0);
  return sub_10004FF60((uint64_t)v14, &qword_1011A8FA0);
}

uint64_t sub_100084C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100084CFC, v7, v8);
}

uint64_t sub_100084CFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_10008F348();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100084D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100084D9C, v7, v8);
}

uint64_t sub_100084D9C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_10008FAD0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100084DD0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10119F3C4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return sub_100085BD0();
}

uint64_t sub_100084E18()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10119F184);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return sub_100086338();
}

uint64_t sub_100084E60@<X0>(_QWORD *a1@<X8>)
{
  return sub_1002039A4(a1);
}

uint64_t sub_100084E80(uint64_t a1)
{
  return sub_10021EB8C(a1);
}

uint64_t sub_100084EA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  __n128 v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[8];

  v2 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  v7 = __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)&v23 - v10;
  sub_10004A160(a1, (uint64_t)&v23 - v10, (uint64_t *)&unk_1011D0BB0);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  v25 = v12(v11, 1, v2);
  if (v25 == 1)
  {
    v14 = sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011D0BB0);
    v24 = 0;
  }
  else
  {
    v13 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v2);
    dispatch thunk of Collection.endIndex.getter(&v27, v2, v13);
    v24 = dispatch thunk of Collection.distance(from:to:)(v28, &v27, v2, v13);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  }
  __chkstk_darwin(v14);
  v15 = type metadata accessor for Playlist(0);
  *(&v23 - 2) = v15;
  v16 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
  *(&v23 - 1) = v16;
  KeyPath = swift_getKeyPath(&unk_100EA8D88);
  __chkstk_darwin(KeyPath);
  *(&v23 - 2) = v15;
  *(&v23 - 1) = v16;
  v18 = swift_getKeyPath(&unk_100EA8DC0);
  static Published.subscript.getter(v9, v26, KeyPath, v18);
  swift_release(KeyPath);
  v19 = swift_release(v18);
  if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v12)(v9, 1, v2, v19))
  {
    result = sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011D0BB0);
    if (v25 == 1)
      return result;
    return sub_10009C398();
  }
  (*(void (**)(char *, _QWORD *, uint64_t))(v3 + 16))(v5, v9, v2);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011D0BB0);
  v21 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v2);
  dispatch thunk of Collection.endIndex.getter(&v27, v2, v21);
  v22 = dispatch thunk of Collection.distance(from:to:)(v28, &v27, v2, v21);
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v25 == 1 || v24 != v22)
    return sub_10009C398();
  return result;
}

uint64_t sub_1000851DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  __n128 v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[8];

  v2 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011B1F10);
  v7 = __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)&v23 - v10;
  sub_10004A160(a1, (uint64_t)&v23 - v10, &qword_1011B1F10);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  v25 = v12(v11, 1, v2);
  if (v25 == 1)
  {
    v14 = sub_10004FF60((uint64_t)v11, &qword_1011B1F10);
    v24 = 0;
  }
  else
  {
    v13 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v2);
    dispatch thunk of Collection.endIndex.getter(&v27, v2, v13);
    v24 = dispatch thunk of Collection.distance(from:to:)(v28, &v27, v2, v13);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  }
  __chkstk_darwin(v14);
  v15 = type metadata accessor for Album(0);
  *(&v23 - 2) = v15;
  v16 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  *(&v23 - 1) = v16;
  KeyPath = swift_getKeyPath(&unk_100EA8D88);
  __chkstk_darwin(KeyPath);
  *(&v23 - 2) = v15;
  *(&v23 - 1) = v16;
  v18 = swift_getKeyPath(&unk_100EA8DC0);
  static Published.subscript.getter(v9, v26, KeyPath, v18);
  swift_release(KeyPath);
  v19 = swift_release(v18);
  if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v12)(v9, 1, v2, v19))
  {
    result = sub_10004FF60((uint64_t)v9, &qword_1011B1F10);
    if (v25 == 1)
      return result;
    return sub_10009CA1C();
  }
  (*(void (**)(char *, _QWORD *, uint64_t))(v3 + 16))(v5, v9, v2);
  sub_10004FF60((uint64_t)v9, &qword_1011B1F10);
  v21 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v2);
  dispatch thunk of Collection.endIndex.getter(&v27, v2, v21);
  v22 = dispatch thunk of Collection.distance(from:to:)(v28, &v27, v2, v21);
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v25 == 1 || v24 != v22)
    return sub_10009CA1C();
  return result;
}

uint64_t sub_100085518@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10020465C();
  *a1 = result;
  return result;
}

uint64_t sub_100085540()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_100203494(v0);
}

uint64_t sub_100085568@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];

  v2 = v1;
  v34 = a1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Library.Context(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v33 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v14;
  v18 = sub_100048748((unint64_t *)&unk_10119EDD8, v17, (uint64_t)&unk_100EAEF4C);
  v38 = v18;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  v35 = v12;
  v36 = v18;
  v20 = swift_getKeyPath(&unk_100EA8C08);
  static Published.subscript.getter(v11, v2, KeyPath, v20);
  swift_release(KeyPath);
  v21 = swift_release(v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v21) == 1)
  {
    sub_10004FF60((uint64_t)v11, &qword_1011A30F0);
    v22 = sub_100007E8C(&qword_10119F390);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v34, 1, 1, v22);
  }
  else
  {
    v24 = v34;
    v25 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v25(v16, v11, v12);
    v26 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 104);
    swift_beginAccess(v26, v39, 0, 0);
    sub_10004A160(v26, (uint64_t)v5, (uint64_t *)&unk_1011C5B80);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011C5B80);
      v25(v24, v16, v12);
      v27 = sub_100007E8C(&qword_10119F390);
      v28 = v24;
      v29 = v27;
      v30 = 1;
    }
    else
    {
      v31 = v33;
      sub_10005B6C0((uint64_t)v5, v33, type metadata accessor for Library.Context);
      v32 = (uint64_t)&v24[*(int *)(sub_100007E8C(&qword_10119F3A8) + 48)];
      v25(v24, v16, v12);
      sub_10005B6C0(v31, v32, type metadata accessor for Library.Context);
      v27 = sub_100007E8C(&qword_10119F390);
      v28 = v24;
      v29 = v27;
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v29, v30);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v24, 0, 1, v27);
  }
}

uint64_t sub_10008589C@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];

  v2 = v1;
  v34 = a1;
  v3 = sub_100007E8C(&qword_10119ED10);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Library.Context(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v33 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Album(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v14;
  v18 = sub_100048748(&qword_10119EDC8, v17, (uint64_t)&unk_100EAEF20);
  v38 = v18;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  v35 = v12;
  v36 = v18;
  v20 = swift_getKeyPath(&unk_100EA8C08);
  static Published.subscript.getter(v11, v2, KeyPath, v20);
  swift_release(KeyPath);
  v21 = swift_release(v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v21) == 1)
  {
    sub_10004FF60((uint64_t)v11, &qword_1011A8FA0);
    v22 = sub_100007E8C(&qword_10119F150);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v34, 1, 1, v22);
  }
  else
  {
    v24 = v34;
    v25 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v25(v16, v11, v12);
    v26 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 104);
    swift_beginAccess(v26, v39, 0, 0);
    sub_10004A160(v26, (uint64_t)v5, &qword_10119ED10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_10004FF60((uint64_t)v5, &qword_10119ED10);
      v25(v24, v16, v12);
      v27 = sub_100007E8C(&qword_10119F150);
      v28 = v24;
      v29 = v27;
      v30 = 1;
    }
    else
    {
      v31 = v33;
      sub_10005B6C0((uint64_t)v5, v33, type metadata accessor for Library.Context);
      v32 = (uint64_t)&v24[*(int *)(sub_100007E8C(&qword_10119F168) + 48)];
      v25(v24, v16, v12);
      sub_10005B6C0(v31, v32, type metadata accessor for Library.Context);
      v27 = sub_100007E8C(&qword_10119F150);
      v28 = v24;
      v29 = v27;
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v29, v30);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v24, 0, 1, v27);
  }
}

uint64_t sub_100085BD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v1[6] = v0;
  v2 = sub_100007E8C(&qword_10119F3C8);
  v1[7] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[8] = v3;
  v1[9] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F3D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[10] = swift_task_alloc(v4);
  v1[11] = swift_task_alloc(v4);
  v5 = sub_100007E8C(&qword_10119F3D8);
  v1[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[13] = v6;
  v1[14] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A30F0);
  v1[15] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[16] = swift_task_alloc(v8);
  v1[17] = swift_task_alloc(v8);
  v9 = type metadata accessor for Playlist(0);
  v1[18] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[19] = v10;
  v1[20] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v1[21] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  return swift_task_switch(sub_100085D28, v13, v14);
}

uint64_t sub_100085D28()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t KeyPath;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v1 = (uint64_t *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD **)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 168));
  v6 = (_QWORD *)swift_task_alloc(16);
  *v6 = v3;
  v7 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
  v6[1] = v7;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  swift_task_dealloc(v6);
  v9 = (_QWORD *)swift_task_alloc(16);
  *v9 = v3;
  v9[1] = v7;
  v10 = swift_getKeyPath(&unk_100EA8C08);
  swift_task_dealloc(v9);
  static Published.subscript.getter(v5, v2, KeyPath, v10);
  swift_release(KeyPath);
  v11 = swift_release(v10);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v4 + 48))(v5, 1, v3, v11) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011A30F0);
  }
  else
  {
    v68 = v0 + 16;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
    if (qword_10119BC00 != -1)
      swift_once(&qword_10119BC00, sub_10021EB2C);
    v12 = *v1;
    v13 = type metadata accessor for Logger(0);
    sub_100048B14(v13, (uint64_t)qword_1011A71A8);
    v14 = swift_retain_n(v12, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = *(_QWORD *)(v0 + 144);
      v64 = *(_QWORD *)(v0 + 120);
      v61 = *(_QWORD *)(v0 + 48);
      v62 = *(_QWORD **)(v0 + 128);
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v66 = swift_slowAlloc(32, -1);
      v69 = v66;
      *(_DWORD *)v18 = 136446210;
      v19 = (_QWORD *)swift_task_alloc(16);
      *v19 = v17;
      v19[1] = v7;
      v20 = swift_getKeyPath(&unk_100EA8BD0);
      swift_task_dealloc(v19);
      v21 = (_QWORD *)swift_task_alloc(16);
      *v21 = v17;
      v21[1] = v7;
      v22 = swift_getKeyPath(&unk_100EA8C08);
      swift_task_dealloc(v21);
      static Published.subscript.getter(v62, v61, v20, v22);
      swift_release(v20);
      swift_release(v22);
      v23 = String.init<A>(describing:)(v62, v64);
      v25 = v24;
      *(_QWORD *)(v0 + 40) = sub_100322200(v23, v24, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
      swift_release_n(v61, 2, v26);
      swift_bridgeObjectRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Mapping catalog container item: %{public}s", v18, 0xCu);
      swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v66, -1, -1);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {
      v27 = *v1;

      swift_release_n(v27, 2, v28);
    }
    v30 = *(_QWORD *)(v0 + 152);
    v29 = *(_QWORD *)(v0 + 160);
    v31 = *(_QWORD *)(v0 + 144);
    v32 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v59 = *(_QWORD *)(v0 + 104);
    v60 = *(_QWORD *)(v0 + 80);
    v63 = *(_QWORD *)(v0 + 72);
    v67 = *(_QWORD *)(v0 + 64);
    v35 = *(_QWORD *)(v0 + 48);
    v65 = *(_QWORD *)(v0 + 56);
    v36 = sub_100007E8C((uint64_t *)&unk_1011AE0F0);
    v37 = *(unsigned __int8 *)(v30 + 80);
    v38 = (v37 + 32) & ~v37;
    v39 = swift_allocObject(v36, v38 + *(_QWORD *)(v30 + 72), v37 | 7);
    *(_OWORD *)(v39 + 16) = xmmword_100EA7AA0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v39 + v38, v29, v31);
    v40 = sub_100048748(&qword_10119F3E0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    MusicLibraryMapping.Request.init(mappingItems:)(v39, v31, v40);
    MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v34);
    v41 = sub_100049F28((unint64_t *)&unk_1011D1020, &qword_10119F3D8, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
    v42 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v34, v41);
    v43 = *(int *)(sub_100007E8C(&qword_10119F3E8) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v33, v32, v34);
    *(_QWORD *)(v33 + v43) = v42;
    v44 = sub_100007E8C(&qword_10119F348);
    swift_storeEnumTagMultiPayload(v33, v44, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v33, 0, 1, v44);
    sub_100065228(v33, v60, &qword_10119F3D0);
    v45 = v35 + *(_QWORD *)(*(_QWORD *)v35 + 136);
    swift_beginAccess(v45, v68, 33, 0);
    swift_retain(v42);
    sub_1000A5508(v60, v45, &qword_10119F3D0);
    swift_endAccess(v68);
    dispatch thunk of MusicAutoupdatingResponse.$response.getter(v46);
    v47 = sub_100049F28(&qword_10119F3F0, &qword_10119F3C8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    swift_retain(v35);
    v48 = Publisher<>.sink(receiveValue:)(sub_1000A3A14, v35, v65, v47);
    swift_release(v42);
    v49 = swift_release(v35);
    (*(void (**)(uint64_t, uint64_t, __n128))(v67 + 8))(v63, v65, v49);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v32, v34);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    v50 = *(_QWORD *)(*(_QWORD *)v35 + 144);
    v51 = *(_QWORD *)(v35 + v50);
    *(_QWORD *)(v35 + v50) = v48;
    swift_release(v51);
  }
  v52 = *(_QWORD *)(v0 + 128);
  v53 = *(_QWORD *)(v0 + 136);
  v54 = *(_QWORD *)(v0 + 112);
  v56 = *(_QWORD *)(v0 + 80);
  v55 = *(_QWORD *)(v0 + 88);
  v57 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v53);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100086338()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v1[6] = v0;
  v2 = sub_100007E8C(&qword_1011B6B50);
  v1[7] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[8] = v3;
  v1[9] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F188) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[10] = swift_task_alloc(v4);
  v1[11] = swift_task_alloc(v4);
  v5 = sub_100007E8C((uint64_t *)&unk_1011B6B60);
  v1[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[13] = v6;
  v1[14] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A8FA0);
  v1[15] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[16] = swift_task_alloc(v8);
  v1[17] = swift_task_alloc(v8);
  v9 = type metadata accessor for Album(0);
  v1[18] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[19] = v10;
  v1[20] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v1[21] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  return swift_task_switch(sub_100086490, v13, v14);
}

uint64_t sub_100086490()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t KeyPath;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v1 = (uint64_t *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD **)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 168));
  v6 = (_QWORD *)swift_task_alloc(16);
  *v6 = v3;
  v7 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  v6[1] = v7;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  swift_task_dealloc(v6);
  v9 = (_QWORD *)swift_task_alloc(16);
  *v9 = v3;
  v9[1] = v7;
  v10 = swift_getKeyPath(&unk_100EA8C08);
  swift_task_dealloc(v9);
  static Published.subscript.getter(v5, v2, KeyPath, v10);
  swift_release(KeyPath);
  v11 = swift_release(v10);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v4 + 48))(v5, 1, v3, v11) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011A8FA0);
  }
  else
  {
    v68 = v0 + 16;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
    if (qword_10119BC00 != -1)
      swift_once(&qword_10119BC00, sub_10021EB2C);
    v12 = *v1;
    v13 = type metadata accessor for Logger(0);
    sub_100048B14(v13, (uint64_t)qword_1011A71A8);
    v14 = swift_retain_n(v12, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = *(_QWORD *)(v0 + 144);
      v64 = *(_QWORD *)(v0 + 120);
      v61 = *(_QWORD *)(v0 + 48);
      v62 = *(_QWORD **)(v0 + 128);
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v66 = swift_slowAlloc(32, -1);
      v69 = v66;
      *(_DWORD *)v18 = 136446210;
      v19 = (_QWORD *)swift_task_alloc(16);
      *v19 = v17;
      v19[1] = v7;
      v20 = swift_getKeyPath(&unk_100EA8BD0);
      swift_task_dealloc(v19);
      v21 = (_QWORD *)swift_task_alloc(16);
      *v21 = v17;
      v21[1] = v7;
      v22 = swift_getKeyPath(&unk_100EA8C08);
      swift_task_dealloc(v21);
      static Published.subscript.getter(v62, v61, v20, v22);
      swift_release(v20);
      swift_release(v22);
      v23 = String.init<A>(describing:)(v62, v64);
      v25 = v24;
      *(_QWORD *)(v0 + 40) = sub_100322200(v23, v24, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
      swift_release_n(v61, 2, v26);
      swift_bridgeObjectRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Mapping catalog container item: %{public}s", v18, 0xCu);
      swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v66, -1, -1);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {
      v27 = *v1;

      swift_release_n(v27, 2, v28);
    }
    v30 = *(_QWORD *)(v0 + 152);
    v29 = *(_QWORD *)(v0 + 160);
    v31 = *(_QWORD *)(v0 + 144);
    v32 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v59 = *(_QWORD *)(v0 + 104);
    v60 = *(_QWORD *)(v0 + 80);
    v63 = *(_QWORD *)(v0 + 72);
    v67 = *(_QWORD *)(v0 + 64);
    v35 = *(_QWORD *)(v0 + 48);
    v65 = *(_QWORD *)(v0 + 56);
    v36 = sub_100007E8C(&qword_10119F190);
    v37 = *(unsigned __int8 *)(v30 + 80);
    v38 = (v37 + 32) & ~v37;
    v39 = swift_allocObject(v36, v38 + *(_QWORD *)(v30 + 72), v37 | 7);
    *(_OWORD *)(v39 + 16) = xmmword_100EA7AA0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v39 + v38, v29, v31);
    v40 = sub_100048748((unint64_t *)&unk_1011B6B70, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
    MusicLibraryMapping.Request.init(mappingItems:)(v39, v31, v40);
    MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v34);
    v41 = sub_100049F28(&qword_10119F198, (uint64_t *)&unk_1011B6B60, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
    v42 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v34, v41);
    v43 = *(int *)(sub_100007E8C(&qword_10119F1A0) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v33, v32, v34);
    *(_QWORD *)(v33 + v43) = v42;
    v44 = sub_100007E8C(&qword_10119F0F0);
    swift_storeEnumTagMultiPayload(v33, v44, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v33, 0, 1, v44);
    sub_100065228(v33, v60, &qword_10119F188);
    v45 = v35 + *(_QWORD *)(*(_QWORD *)v35 + 136);
    swift_beginAccess(v45, v68, 33, 0);
    swift_retain(v42);
    sub_1000A5508(v60, v45, &qword_10119F188);
    swift_endAccess(v68);
    dispatch thunk of MusicAutoupdatingResponse.$response.getter(v46);
    v47 = sub_100049F28(&qword_1011B6B80, &qword_1011B6B50, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    swift_retain(v35);
    v48 = Publisher<>.sink(receiveValue:)(sub_1000A2F58, v35, v65, v47);
    swift_release(v42);
    v49 = swift_release(v35);
    (*(void (**)(uint64_t, uint64_t, __n128))(v67 + 8))(v63, v65, v49);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v32, v34);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    v50 = *(_QWORD *)(*(_QWORD *)v35 + 144);
    v51 = *(_QWORD *)(v35 + v50);
    *(_QWORD *)(v35 + v50) = v48;
    swift_release(v51);
  }
  v52 = *(_QWORD *)(v0 + 128);
  v53 = *(_QWORD *)(v0 + 136);
  v54 = *(_QWORD *)(v0 + 112);
  v56 = *(_QWORD *)(v0 + 80);
  v55 = *(_QWORD *)(v0 + 88);
  v57 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v53);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100086AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  _BOOL4 v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t KeyPath;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133[4];

  v124 = a2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v3);
  v117 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  v6 = __chkstk_darwin(v5);
  v121 = (uint64_t)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v116 = (char *)&v112 - v9;
  __chkstk_darwin(v8);
  v115 = (uint64_t)&v112 - v10;
  v11 = sub_100007E8C(&qword_10119F3F8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v130 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_10119F400);
  v15 = __chkstk_darwin(v14);
  v118 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v112 - v17;
  v126 = sub_100007E8C(&qword_1011A30F0);
  v19 = __chkstk_darwin(v126);
  v120 = (uint64_t)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v128 = (uint64_t *)((char *)&v112 - v22);
  v23 = __chkstk_darwin(v21);
  v127 = (uint64_t)&v112 - v24;
  v25 = __chkstk_darwin(v23);
  v119 = (uint64_t)&v112 - v26;
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v112 - v28;
  __chkstk_darwin(v27);
  v31 = (char *)&v112 - v30;
  v32 = sub_100007E8C((uint64_t *)&unk_1011D1040);
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v112 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v33);
  v38 = (char *)&v112 - v37;
  __chkstk_darwin(v36);
  v40 = (char *)&v112 - v39;
  if (qword_10119BC00 != -1)
    swift_once(&qword_10119BC00, sub_10021EB2C);
  v41 = type metadata accessor for Logger(0);
  sub_100048B14(v41, (uint64_t)qword_1011A71A8);
  v125 = a1;
  v42 = sub_10004A160(a1, (uint64_t)v40, (uint64_t *)&unk_1011D1040);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter();
  v45 = os_log_type_enabled(v43, (os_log_type_t)v44);
  v129 = v29;
  if (!v45)
  {
    sub_10004FF60((uint64_t)v40, (uint64_t *)&unk_1011D1040);

    goto LABEL_15;
  }
  v114 = v44;
  v46 = (uint8_t *)swift_slowAlloc(12, -1);
  v113 = swift_slowAlloc(32, -1);
  v133[0] = v113;
  *(_DWORD *)v46 = 136446210;
  sub_10004A160((uint64_t)v40, (uint64_t)v38, (uint64_t *)&unk_1011D1040);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v38, 1, v11) == 1)
  {
    sub_10004FF60((uint64_t)v38, (uint64_t *)&unk_1011D1040);
  }
  else
  {
    v47 = MusicLibraryMapping.Response.mappedItems.getter(v11);
    v122 = v12;
    v123 = v11;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v38, v11);
    v48 = *(_QWORD *)(v47 + 16);
    v49 = sub_100007E8C((uint64_t *)&unk_1011D1050);
    v50 = *(_QWORD *)(v49 - 8);
    if (v48)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v18, v47 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80)), v49);
      v51 = 0;
    }
    else
    {
      v51 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v18, v51, 1, v49);
    swift_bridgeObjectRelease(v47);
    v52 = sub_100007E8C((uint64_t *)&unk_1011D1050);
    v53 = *(_QWORD *)(v52 - 8);
    v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48))(v18, 1, v52);
    v11 = v123;
    if (v54 != 1)
    {
      MusicLibraryMapping.MappedItem.item.getter(v52);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v18, v52);
      v56 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v31, 0, 1, v56);
      v12 = v122;
      goto LABEL_14;
    }
    sub_10004FF60((uint64_t)v18, &qword_10119F400);
    v12 = v122;
  }
  v55 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v31, 1, 1, v55);
LABEL_14:
  v57 = String.init<A>(describing:)(v31, v126);
  v59 = v58;
  v131 = sub_100322200(v57, v58, v133);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, &v132);
  swift_bridgeObjectRelease(v59);
  sub_10004FF60((uint64_t)v40, (uint64_t *)&unk_1011D1040);
  _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v114, "Updating mapped container detail page with: %{public}s", v46, 0xCu);
  v60 = v113;
  swift_arrayDestroy(v113, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v60, -1, -1);
  swift_slowDealloc(v46, -1, -1);

  v29 = v129;
LABEL_15:
  sub_10004A160(v125, (uint64_t)v35, (uint64_t *)&unk_1011D1040);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v35, 1, v11) == 1)
  {
    v61 = (uint64_t *)&unk_1011D1040;
    v62 = (uint64_t)v35;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v130, v35, v11);
    v123 = v11;
    v63 = MusicLibraryMapping.Response.mappedItems.getter(v11);
    v64 = *(_QWORD *)(v63 + 16);
    v65 = sub_100007E8C((uint64_t *)&unk_1011D1050);
    v66 = *(_QWORD *)(v65 - 8);
    if (v64)
    {
      v67 = (uint64_t)v118;
      (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(v118, v63 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80)), v65);
      v68 = 0;
    }
    else
    {
      v68 = 1;
      v67 = (uint64_t)v118;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v67, v68, 1, v65);
    swift_bridgeObjectRelease(v63);
    v69 = sub_100007E8C((uint64_t *)&unk_1011D1050);
    v70 = *(_QWORD *)(v69 - 8);
    v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v67, 1, v69);
    v122 = v12;
    if (v71 == 1)
    {
      sub_10004FF60(v67, &qword_10119F400);
      v72 = type metadata accessor for Playlist(0);
      v73 = *(_QWORD *)(v72 - 8);
      v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56);
      v74(v29, 1, 1, v72);
    }
    else
    {
      MusicLibraryMapping.MappedItem.item.getter(v69);
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v67, v69);
      v72 = type metadata accessor for Playlist(0);
      v73 = *(_QWORD *)(v72 - 8);
      v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56);
      v74(v29, 0, 1, v72);
    }
    v75 = (uint64_t)v29;
    v76 = v119;
    sub_10004A160(v75, v119, &qword_1011A30F0);
    type metadata accessor for Playlist(0);
    v77 = v127;
    v78 = swift_dynamicCast(v127, v76, v126, v72, 6);
    v79 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v74)(v77, v78 ^ 1u, 1, v72);
    __chkstk_darwin(v79);
    *(&v112 - 2) = v72;
    v80 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
    *(&v112 - 1) = v80;
    KeyPath = swift_getKeyPath(&unk_100EA8BD0);
    __chkstk_darwin(KeyPath);
    *(&v112 - 2) = v72;
    *(&v112 - 1) = v80;
    v82 = swift_getKeyPath(&unk_100EA8C08);
    v83 = v128;
    v84 = v124;
    static Published.subscript.getter(v128, v124, KeyPath, v82);
    swift_release(v82);
    swift_release(KeyPath);
    __chkstk_darwin(v85);
    *(&v112 - 2) = v72;
    *(&v112 - 1) = v80;
    v86 = swift_getKeyPath(&unk_100EA8BD0);
    __chkstk_darwin(v86);
    *(&v112 - 2) = v72;
    *(&v112 - 1) = v80;
    v87 = swift_getKeyPath(&unk_100EA8C08);
    v88 = v77;
    v89 = v120;
    sub_10004A160(v88, v120, &qword_1011A30F0);
    swift_retain(v84);
    static Published.subscript.setter(v89, v84, v86, v87);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v73 + 48))(v83, 1, v72) == 1)
    {
      v90 = v84 + *(_QWORD *)(*(_QWORD *)v84 + 104);
      swift_beginAccess(v90, v133, 0, 0);
      v91 = v115;
      sub_10004A160(v90, v115, (uint64_t *)&unk_1011C5B80);
      v92 = type metadata accessor for Library.Context(0);
      v93 = (uint64_t)v116;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v116, 1, 1, v92);
      LOBYTE(v90) = sub_1000805B8(v91, v93, (uint64_t *)&unk_1011C5B80, &qword_10119EE48);
      sub_10004FF60(v93, (uint64_t *)&unk_1011C5B80);
      sub_10004FF60(v91, (uint64_t *)&unk_1011C5B80);
      if ((v90 & 1) != 0)
      {
        v94 = type metadata accessor for TaskPriority(0);
        v95 = (uint64_t)v117;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v117, 1, 1, v94);
        v96 = (_QWORD *)swift_allocObject(&unk_1010AFD38, 40, 7);
        v96[2] = 0;
        v96[3] = 0;
        v96[4] = v84;
        swift_retain(v84);
        v97 = sub_100166D14(v95, (uint64_t)&unk_10119F418, (uint64_t)v96);
        swift_release(v97);
      }
    }
    sub_10004FF60(v127, &qword_1011A30F0);
    sub_10004FF60((uint64_t)v128, &qword_1011A30F0);
    v98 = v84 + *(_QWORD *)(*(_QWORD *)v84 + 104);
    swift_beginAccess(v98, &v131, 0, 0);
    v99 = v98;
    v100 = v121;
    sub_10004A160(v99, v121, (uint64_t *)&unk_1011C5B80);
    v101 = type metadata accessor for Library.Context(0);
    v102 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 48))(v100, 1, v101);
    v104 = v122;
    v103 = v123;
    if (v102 == 1)
    {
      sub_10004FF60(v100, (uint64_t *)&unk_1011C5B80);
      v105 = type metadata accessor for TaskPriority(0);
      v106 = (uint64_t)v117;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v117, 1, 1, v105);
      type metadata accessor for MainActor(0);
      v107 = swift_retain(v84);
      v108 = static MainActor.shared.getter(v107);
      v109 = (_QWORD *)swift_allocObject(&unk_1010AFD10, 40, 7);
      v109[2] = v108;
      v109[3] = &protocol witness table for MainActor;
      v109[4] = v84;
      v110 = sub_100166D14(v106, (uint64_t)&unk_10119F410, (uint64_t)v109);
      swift_release(v110);
      sub_10004FF60((uint64_t)v129, &qword_1011A30F0);
      return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v130, v103);
    }
    sub_10004FF60((uint64_t)v129, &qword_1011A30F0);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v130, v103);
    v61 = (uint64_t *)&unk_1011C5B80;
    v62 = v100;
  }
  return sub_10004FF60(v62, v61);
}

uint64_t sub_100087660(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  _BOOL4 v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t KeyPath;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133[4];

  v124 = a2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v3);
  v117 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119ED10);
  v6 = __chkstk_darwin(v5);
  v121 = (uint64_t)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v116 = (char *)&v112 - v9;
  __chkstk_darwin(v8);
  v115 = (uint64_t)&v112 - v10;
  v11 = sub_100007E8C(&qword_1011B6BA0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v130 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_10119F1A8);
  v15 = __chkstk_darwin(v14);
  v118 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v112 - v17;
  v126 = sub_100007E8C(&qword_1011A8FA0);
  v19 = __chkstk_darwin(v126);
  v120 = (uint64_t)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v128 = (uint64_t *)((char *)&v112 - v22);
  v23 = __chkstk_darwin(v21);
  v127 = (uint64_t)&v112 - v24;
  v25 = __chkstk_darwin(v23);
  v119 = (uint64_t)&v112 - v26;
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v112 - v28;
  __chkstk_darwin(v27);
  v31 = (char *)&v112 - v30;
  v32 = sub_100007E8C((uint64_t *)&unk_1011B6B90);
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v112 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v33);
  v38 = (char *)&v112 - v37;
  __chkstk_darwin(v36);
  v40 = (char *)&v112 - v39;
  if (qword_10119BC00 != -1)
    swift_once(&qword_10119BC00, sub_10021EB2C);
  v41 = type metadata accessor for Logger(0);
  sub_100048B14(v41, (uint64_t)qword_1011A71A8);
  v125 = a1;
  v42 = sub_10004A160(a1, (uint64_t)v40, (uint64_t *)&unk_1011B6B90);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter();
  v45 = os_log_type_enabled(v43, (os_log_type_t)v44);
  v129 = v29;
  if (!v45)
  {
    sub_10004FF60((uint64_t)v40, (uint64_t *)&unk_1011B6B90);

    goto LABEL_15;
  }
  v114 = v44;
  v46 = (uint8_t *)swift_slowAlloc(12, -1);
  v113 = swift_slowAlloc(32, -1);
  v133[0] = v113;
  *(_DWORD *)v46 = 136446210;
  sub_10004A160((uint64_t)v40, (uint64_t)v38, (uint64_t *)&unk_1011B6B90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v38, 1, v11) == 1)
  {
    sub_10004FF60((uint64_t)v38, (uint64_t *)&unk_1011B6B90);
  }
  else
  {
    v47 = MusicLibraryMapping.Response.mappedItems.getter(v11);
    v122 = v12;
    v123 = v11;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v38, v11);
    v48 = *(_QWORD *)(v47 + 16);
    v49 = sub_100007E8C(&qword_10119F1B0);
    v50 = *(_QWORD *)(v49 - 8);
    if (v48)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v18, v47 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80)), v49);
      v51 = 0;
    }
    else
    {
      v51 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v18, v51, 1, v49);
    swift_bridgeObjectRelease(v47);
    v52 = sub_100007E8C(&qword_10119F1B0);
    v53 = *(_QWORD *)(v52 - 8);
    v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48))(v18, 1, v52);
    v11 = v123;
    if (v54 != 1)
    {
      MusicLibraryMapping.MappedItem.item.getter(v52);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v18, v52);
      v56 = type metadata accessor for Album(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v31, 0, 1, v56);
      v12 = v122;
      goto LABEL_14;
    }
    sub_10004FF60((uint64_t)v18, &qword_10119F1A8);
    v12 = v122;
  }
  v55 = type metadata accessor for Album(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v31, 1, 1, v55);
LABEL_14:
  v57 = String.init<A>(describing:)(v31, v126);
  v59 = v58;
  v131 = sub_100322200(v57, v58, v133);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, &v132);
  swift_bridgeObjectRelease(v59);
  sub_10004FF60((uint64_t)v40, (uint64_t *)&unk_1011B6B90);
  _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v114, "Updating mapped container detail page with: %{public}s", v46, 0xCu);
  v60 = v113;
  swift_arrayDestroy(v113, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v60, -1, -1);
  swift_slowDealloc(v46, -1, -1);

  v29 = v129;
LABEL_15:
  sub_10004A160(v125, (uint64_t)v35, (uint64_t *)&unk_1011B6B90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v35, 1, v11) == 1)
  {
    v61 = (uint64_t *)&unk_1011B6B90;
    v62 = (uint64_t)v35;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v130, v35, v11);
    v123 = v11;
    v63 = MusicLibraryMapping.Response.mappedItems.getter(v11);
    v64 = *(_QWORD *)(v63 + 16);
    v65 = sub_100007E8C(&qword_10119F1B0);
    v66 = *(_QWORD *)(v65 - 8);
    if (v64)
    {
      v67 = (uint64_t)v118;
      (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(v118, v63 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80)), v65);
      v68 = 0;
    }
    else
    {
      v68 = 1;
      v67 = (uint64_t)v118;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v67, v68, 1, v65);
    swift_bridgeObjectRelease(v63);
    v69 = sub_100007E8C(&qword_10119F1B0);
    v70 = *(_QWORD *)(v69 - 8);
    v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v67, 1, v69);
    v122 = v12;
    if (v71 == 1)
    {
      sub_10004FF60(v67, &qword_10119F1A8);
      v72 = type metadata accessor for Album(0);
      v73 = *(_QWORD *)(v72 - 8);
      v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56);
      v74(v29, 1, 1, v72);
    }
    else
    {
      MusicLibraryMapping.MappedItem.item.getter(v69);
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v67, v69);
      v72 = type metadata accessor for Album(0);
      v73 = *(_QWORD *)(v72 - 8);
      v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56);
      v74(v29, 0, 1, v72);
    }
    v75 = (uint64_t)v29;
    v76 = v119;
    sub_10004A160(v75, v119, &qword_1011A8FA0);
    type metadata accessor for Album(0);
    v77 = v127;
    v78 = swift_dynamicCast(v127, v76, v126, v72, 6);
    v79 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v74)(v77, v78 ^ 1u, 1, v72);
    __chkstk_darwin(v79);
    *(&v112 - 2) = v72;
    v80 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
    *(&v112 - 1) = v80;
    KeyPath = swift_getKeyPath(&unk_100EA8BD0);
    __chkstk_darwin(KeyPath);
    *(&v112 - 2) = v72;
    *(&v112 - 1) = v80;
    v82 = swift_getKeyPath(&unk_100EA8C08);
    v83 = v128;
    v84 = v124;
    static Published.subscript.getter(v128, v124, KeyPath, v82);
    swift_release(v82);
    swift_release(KeyPath);
    __chkstk_darwin(v85);
    *(&v112 - 2) = v72;
    *(&v112 - 1) = v80;
    v86 = swift_getKeyPath(&unk_100EA8BD0);
    __chkstk_darwin(v86);
    *(&v112 - 2) = v72;
    *(&v112 - 1) = v80;
    v87 = swift_getKeyPath(&unk_100EA8C08);
    v88 = v77;
    v89 = v120;
    sub_10004A160(v88, v120, &qword_1011A8FA0);
    swift_retain(v84);
    static Published.subscript.setter(v89, v84, v86, v87);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v73 + 48))(v83, 1, v72) == 1)
    {
      v90 = v84 + *(_QWORD *)(*(_QWORD *)v84 + 104);
      swift_beginAccess(v90, v133, 0, 0);
      v91 = v115;
      sub_10004A160(v90, v115, &qword_10119ED10);
      v92 = type metadata accessor for Library.Context(0);
      v93 = (uint64_t)v116;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v116, 1, 1, v92);
      LOBYTE(v90) = sub_1000805B8(v91, v93, &qword_10119ED10, &qword_10119EE40);
      sub_10004FF60(v93, &qword_10119ED10);
      sub_10004FF60(v91, &qword_10119ED10);
      if ((v90 & 1) != 0)
      {
        v94 = type metadata accessor for TaskPriority(0);
        v95 = (uint64_t)v117;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v117, 1, 1, v94);
        v96 = (_QWORD *)swift_allocObject(&unk_1010AFC20, 40, 7);
        v96[2] = 0;
        v96[3] = 0;
        v96[4] = v84;
        swift_retain(v84);
        v97 = sub_100166D14(v95, (uint64_t)&unk_10119F1C8, (uint64_t)v96);
        swift_release(v97);
      }
    }
    sub_10004FF60(v127, &qword_1011A8FA0);
    sub_10004FF60((uint64_t)v128, &qword_1011A8FA0);
    v98 = v84 + *(_QWORD *)(*(_QWORD *)v84 + 104);
    swift_beginAccess(v98, &v131, 0, 0);
    v99 = v98;
    v100 = v121;
    sub_10004A160(v99, v121, &qword_10119ED10);
    v101 = type metadata accessor for Library.Context(0);
    v102 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 48))(v100, 1, v101);
    v104 = v122;
    v103 = v123;
    if (v102 == 1)
    {
      sub_10004FF60(v100, &qword_10119ED10);
      v105 = type metadata accessor for TaskPriority(0);
      v106 = (uint64_t)v117;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v117, 1, 1, v105);
      type metadata accessor for MainActor(0);
      v107 = swift_retain(v84);
      v108 = static MainActor.shared.getter(v107);
      v109 = (_QWORD *)swift_allocObject(&unk_1010AFBF8, 40, 7);
      v109[2] = v108;
      v109[3] = &protocol witness table for MainActor;
      v109[4] = v84;
      v110 = sub_100166D14(v106, (uint64_t)&unk_10119F1C0, (uint64_t)v109);
      swift_release(v110);
      sub_10004FF60((uint64_t)v129, &qword_1011A8FA0);
      return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v130, v103);
    }
    sub_10004FF60((uint64_t)v129, &qword_1011A8FA0);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v130, v103);
    v61 = &qword_10119ED10;
    v62 = v100;
  }
  return sub_10004FF60(v62, v61);
}

uint64_t sub_100088220()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_10119F424);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_100088284;
  return sub_1000883F8();
}

uint64_t sub_100088284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000A582C, v2, v3);
}

uint64_t sub_1000882F4()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_10119F1D4);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_100088358;
  return sub_100088A9C();
}

uint64_t sub_100088358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000883C8, v2, v3);
}

uint64_t sub_1000883C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000883F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v1[5] = v0;
  v2 = sub_100007E8C(&qword_10119F428);
  v1[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_10119F430);
  v1[7] = v3;
  v1[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[9] = swift_task_alloc(v4);
  v1[10] = swift_task_alloc(v4);
  v5 = type metadata accessor for Playlist(0);
  v1[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[12] = v6;
  v1[13] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v1[14] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v1[15] = v9;
  v1[16] = v10;
  return swift_task_switch(sub_10008850C, v9, v10);
}

uint64_t sub_10008850C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t KeyPath;
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v31;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD **)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = (_QWORD *)swift_task_alloc(16);
  *v5 = v1;
  v6 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
  v5[1] = v6;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  swift_task_dealloc(v5);
  v8 = (_QWORD *)swift_task_alloc(16);
  *v8 = v1;
  v8[1] = v6;
  v9 = swift_getKeyPath(&unk_100EA8C08);
  swift_task_dealloc(v8);
  static Published.subscript.getter(v3, v4, KeyPath, v9);
  swift_release(KeyPath);
  v10 = swift_release(v9);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v10) == 1)
  {
    v11 = *(_QWORD *)(v0 + 80);
    swift_release(*(_QWORD *)(v0 + 112));
    sub_10004FF60(v11, &qword_1011A30F0);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 64);
    v15 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 104));
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 64);
    v20 = *(_QWORD *)(v0 + 72);
    v22 = *(_QWORD *)(v0 + 48);
    v23 = *(_QWORD *)(v0 + 56);
    v24 = *(_QWORD *)(v0 + 40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 32))(v18, *(_QWORD *)(v0 + 80), v19);
    v25 = *(int *)(v23 + 48);
    *(_DWORD *)(v0 + 184) = v25;
    v26 = v21 + v25;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v20, v18, v19);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v19);
    v27 = *(_QWORD *)(*(_QWORD *)v24 + 104);
    *(_QWORD *)(v0 + 136) = v27;
    v28 = v24 + v27;
    swift_beginAccess(v24 + v27, v0 + 16, 0, 0);
    sub_10004A160(v28, v22, (uint64_t *)&unk_1011C5B80);
    v29 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
    *(_QWORD *)(v0 + 144) = v29;
    v30 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
    *(_QWORD *)(v0 + 152) = v30;
    v30(v22, 0, 1, v29);
    v31 = (_QWORD *)swift_task_alloc(dword_10119F43C);
    *(_QWORD *)(v0 + 160) = v31;
    *v31 = v0;
    v31[1] = sub_100088784;
    return sub_100089140(*(_QWORD *)(v0 + 64), v26, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
  }
}

uint64_t sub_100088784()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));
  sub_10004FF60(v3, &qword_10119F428);
  sub_10004FF60(v2, &qword_1011A30F0);
  return swift_task_switch(sub_100088800, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_100088800()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 152);
  v3 = *(int *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  sub_10004A160(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 136), v5, (uint64_t *)&unk_1011C5B80);
  v2(v5, 0, 1, v1);
  v6 = (_QWORD *)swift_task_alloc(dword_10119F444);
  *(_QWORD *)(v0 + 168) = v6;
  *v6 = v0;
  v6[1] = sub_1000888A0;
  return sub_100090E3C(*(_QWORD *)(v0 + 64), v4 + v3);
}

uint64_t sub_1000888A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 168));
  sub_10004FF60(v2, &qword_10119F428);
  return swift_task_switch(sub_100088900, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_100088900()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 152);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 136);
  sub_10008C298(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 64) + *(int *)(v0 + 184));
  sub_10004A160(v4, v3, (uint64_t *)&unk_1011C5B80);
  v2(v3, 0, 1, v1);
  v5 = (_QWORD *)swift_task_alloc(dword_10119F44C);
  *(_QWORD *)(v0 + 176) = v5;
  *v5 = v0;
  v5[1] = sub_1000889A8;
  return sub_1000A3548(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1000889A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));
  sub_10004FF60(v2, &qword_10119F428);
  return swift_task_switch(sub_100088A08, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_100088A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 112));
  sub_10004FF60(v4, &qword_10119F430);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v6);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100088A9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v1[5] = v0;
  v2 = sub_100007E8C(&qword_10119F1D8);
  v1[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_10119F1E0);
  v1[7] = v3;
  v1[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[9] = swift_task_alloc(v4);
  v1[10] = swift_task_alloc(v4);
  v5 = type metadata accessor for Album(0);
  v1[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[12] = v6;
  v1[13] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v1[14] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v1[15] = v9;
  v1[16] = v10;
  return swift_task_switch(sub_100088BB0, v9, v10);
}

uint64_t sub_100088BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t KeyPath;
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v31;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD **)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = (_QWORD *)swift_task_alloc(16);
  *v5 = v1;
  v6 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  v5[1] = v6;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  swift_task_dealloc(v5);
  v8 = (_QWORD *)swift_task_alloc(16);
  *v8 = v1;
  v8[1] = v6;
  v9 = swift_getKeyPath(&unk_100EA8C08);
  swift_task_dealloc(v8);
  static Published.subscript.getter(v3, v4, KeyPath, v9);
  swift_release(KeyPath);
  v10 = swift_release(v9);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v10) == 1)
  {
    v11 = *(_QWORD *)(v0 + 80);
    swift_release(*(_QWORD *)(v0 + 112));
    sub_10004FF60(v11, &qword_1011A8FA0);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 64);
    v15 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 104));
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 64);
    v20 = *(_QWORD *)(v0 + 72);
    v22 = *(_QWORD *)(v0 + 48);
    v23 = *(_QWORD *)(v0 + 56);
    v24 = *(_QWORD *)(v0 + 40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 32))(v18, *(_QWORD *)(v0 + 80), v19);
    v25 = *(int *)(v23 + 48);
    *(_DWORD *)(v0 + 184) = v25;
    v26 = v21 + v25;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v20, v18, v19);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v19);
    v27 = *(_QWORD *)(*(_QWORD *)v24 + 104);
    *(_QWORD *)(v0 + 136) = v27;
    v28 = v24 + v27;
    swift_beginAccess(v24 + v27, v0 + 16, 0, 0);
    sub_10004A160(v28, v22, &qword_10119ED10);
    v29 = sub_100007E8C(&qword_10119ED10);
    *(_QWORD *)(v0 + 144) = v29;
    v30 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
    *(_QWORD *)(v0 + 152) = v30;
    v30(v22, 0, 1, v29);
    v31 = (_QWORD *)swift_task_alloc(dword_10119F1EC);
    *(_QWORD *)(v0 + 160) = v31;
    *v31 = v0;
    v31[1] = sub_100088E28;
    return sub_10008AA68(*(_QWORD *)(v0 + 64), v26, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
  }
}

uint64_t sub_100088E28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));
  sub_10004FF60(v3, &qword_10119F1D8);
  sub_10004FF60(v2, &qword_1011A8FA0);
  return swift_task_switch(sub_100088EA4, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_100088EA4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 152);
  v3 = *(int *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  sub_10004A160(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 136), v5, &qword_10119ED10);
  v2(v5, 0, 1, v1);
  v6 = (_QWORD *)swift_task_alloc(dword_10119F1F4);
  *(_QWORD *)(v0 + 168) = v6;
  *v6 = v0;
  v6[1] = sub_100088F44;
  return sub_1000913A4(*(_QWORD *)(v0 + 64), v4 + v3, *(_QWORD *)(v0 + 48));
}

uint64_t sub_100088F44()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 168));
  sub_10004FF60(v2, &qword_10119F1D8);
  return swift_task_switch(sub_100088FA4, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_100088FA4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 152);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 136);
  sub_10008DAE4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 64) + *(int *)(v0 + 184));
  sub_10004A160(v4, v3, &qword_10119ED10);
  v2(v3, 0, 1, v1);
  v5 = (_QWORD *)swift_task_alloc(dword_10119F1FC);
  *(_QWORD *)(v0 + 176) = v5;
  *v5 = v0;
  v5[1] = sub_10008904C;
  return sub_100090258(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10008904C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));
  sub_10004FF60(v2, &qword_10119F1D8);
  return swift_task_switch(sub_1000890AC, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_1000890AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 112));
  sub_10004FF60(v4, &qword_10119F1E0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v6);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100089140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F490) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[9] = swift_task_alloc(v7);
  v4[10] = swift_task_alloc(v7);
  v8 = sub_100007E8C(&qword_10119F498);
  v4[11] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[12] = v9;
  v4[13] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Library.Context(0);
  v4[14] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[15] = v11;
  v4[16] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicPropertySource(0);
  v4[17] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[18] = v13;
  v4[19] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Playlist(0);
  v4[20] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[21] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[22] = swift_task_alloc(v16);
  v4[23] = swift_task_alloc(v16);
  v4[24] = swift_task_alloc(v16);
  v4[25] = swift_task_alloc(v16);
  v17 = sub_100007E8C(&qword_10119F428);
  v4[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_10119F4A0);
  v4[27] = v18;
  v4[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D0BB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[29] = swift_task_alloc(v19);
  v4[30] = swift_task_alloc(v19);
  v4[31] = swift_task_alloc(v19);
  v20 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[32] = swift_task_alloc(v20);
  v4[33] = swift_task_alloc(v20);
  v4[34] = swift_task_alloc(v20);
  v4[35] = swift_task_alloc(v20);
  v4[36] = swift_task_alloc(v20);
  return swift_task_switch(sub_10008938C, 0, 0);
}

uint64_t sub_10008938C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  sub_10004A160(v7, *(_QWORD *)(v0 + 288), &qword_1011A30F0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  *(_QWORD *)(v0 + 296) = v8;
  v8(v1, 1, 1, v4);
  v9 = *(int *)(v3 + 48);
  *(_DWORD *)(v0 + 328) = v9;
  v10 = v2 + v9;
  sub_10004A160(v6, v2, &qword_10119F428);
  sub_10004A160(v7, v10, &qword_1011A30F0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v2, 1, v11) != 1)
  {
    v12 = *(_QWORD *)(v0 + 208);
    v13 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    sub_10004A160(*(_QWORD *)(v0 + 224), v12, &qword_10119F428);
    LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13);
    if ((_DWORD)v12 == 1)
    {
      if (v17 != 1)
      {
        v18 = *(_QWORD *)(v0 + 280);
        v19 = *(_QWORD *)(v0 + 192);
        v20 = *(_QWORD *)(v0 + 160);
        v21 = *(_QWORD *)(v0 + 168);
        v23 = *(_QWORD *)(v0 + 144);
        v22 = *(_QWORD *)(v0 + 152);
        v24 = *(_QWORD *)(v0 + 136);
        sub_10004A160(v10, v18, &qword_1011A30F0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v18, v20);
        v25 = sub_100007E8C((uint64_t *)&unk_1011A1470);
        v26 = swift_allocObject(v25, 40, 7);
        *(_OWORD *)(v26 + 16) = xmmword_100EA7A90;
        sub_100007E8C(&qword_10119F4A8);
        v27 = static PartialMusicProperty<A>.entries.getter();
        *(_QWORD *)(v26 + 32) = v27;
        specialized Array._endMutation()(v27);
        v28 = v26;
        *(_QWORD *)(v0 + 304) = v26;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v22, enum case for MusicPropertySource.catalog(_:), v24);
        v29 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
        *(_QWORD *)(v0 + 312) = v29;
        v30 = sub_100048748((unint64_t *)&unk_1011D0D80, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
        *v29 = v0;
        v29[1] = sub_1000899CC;
        return MusicItem<>.with(_:preferredSource:)(*(_QWORD *)(v0 + 184), v28, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), &protocol witness table for Playlist, &protocol witness table for Playlist, v30);
      }
    }
    else
    {
      if (v17 != 1)
      {
        v60 = *(_QWORD *)(v0 + 256);
        v61 = *(_QWORD *)(v0 + 264);
        v62 = *(_QWORD *)(v0 + 208);
        v63 = *(_QWORD *)(v0 + 168);
        v64 = *(_QWORD *)(v0 + 176);
        v65 = *(_QWORD *)(v0 + 160);
        v66 = *(_QWORD **)(v0 + 128);
        v83 = *(_QWORD *)(v0 + 88);
        sub_10004A160(v10, v61, &qword_1011A30F0);
        sub_10005B6C0(v62, (uint64_t)v66, type metadata accessor for Library.Context);
        v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
        v67(v64, v61, v65);
        v68 = type metadata accessor for Playlist.Entry(0);
        MusicLibraryRequest.init()(v68, &protocol witness table for Playlist.Entry);
        KeyPath = swift_getKeyPath(&unk_100EA9048);
        v67(v60, v64, v65);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v65);
        v70 = sub_100048748((unint64_t *)&qword_1011A60B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
        MusicLibraryRequest<>.filter<A>(matching:equalTo:)(KeyPath, v60, v83, &protocol witness table for Playlist.Entry, v70);
        swift_release(KeyPath);
        sub_10004FF60(v60, &qword_1011A30F0);
        MusicLibraryRequest.apply(_:)(v66, v83);
        v71 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 320) = v71;
        *v71 = v0;
        v71[1] = sub_10008A0BC;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
      }
      sub_10005B748(*(_QWORD *)(v0 + 208), type metadata accessor for Library.Context);
    }
  }
  sub_10004FF60(*(_QWORD *)(v0 + 224), &qword_10119F4A0);
  v32 = *(_QWORD *)(v0 + 240);
  v33 = *(_QWORD *)(v0 + 248);
  v34 = *(_QWORD *)(v0 + 48);
  v35 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 16), &qword_1011A30F0);
  sub_10004A160(v33, v32, (uint64_t *)&unk_1011D0BB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34) == 1)
  {
    v36 = *(_QWORD *)(v0 + 288);
    v37 = *(_QWORD *)(v0 + 160);
    v38 = *(_QWORD *)(v0 + 168);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37);
    v40 = *(_QWORD *)(v0 + 24);
    if (v39)
    {
      v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 296);
      v42 = *(_QWORD *)(v0 + 48);
      sub_10004FF60(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1011D0BB0);
      v41(v40, 1, 1, v42);
    }
    else
    {
      v48 = *(_QWORD *)(v0 + 248);
      v49 = *(_QWORD *)(v0 + 200);
      v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v49, v36, v37);
      Playlist.entries.getter(v50);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v49, v37);
      sub_10004FF60(v48, (uint64_t *)&unk_1011D0BB0);
    }
    sub_10004FF60(*(_QWORD *)(v0 + 240), (uint64_t *)&unk_1011D0BB0);
  }
  else
  {
    v43 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 296);
    v44 = *(_QWORD *)(v0 + 240);
    v45 = *(_QWORD *)(v0 + 48);
    v46 = *(_QWORD *)(v0 + 56);
    v47 = *(_QWORD *)(v0 + 24);
    sub_10004FF60(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1011D0BB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v47, v44, v45);
    v43(v47, 0, 1, v45);
  }
  v51 = *(_QWORD *)(v0 + 280);
  v52 = *(_QWORD *)(v0 + 288);
  v54 = *(_QWORD *)(v0 + 264);
  v53 = *(_QWORD *)(v0 + 272);
  v56 = *(_QWORD *)(v0 + 248);
  v55 = *(_QWORD *)(v0 + 256);
  v58 = *(_QWORD *)(v0 + 232);
  v57 = *(_QWORD *)(v0 + 240);
  v59 = *(_QWORD *)(v0 + 224);
  v72 = *(_QWORD *)(v0 + 208);
  v73 = *(_QWORD *)(v0 + 200);
  v74 = *(_QWORD *)(v0 + 192);
  v75 = *(_QWORD *)(v0 + 184);
  v76 = *(_QWORD *)(v0 + 176);
  v77 = *(_QWORD *)(v0 + 152);
  v78 = *(_QWORD *)(v0 + 128);
  v79 = *(_QWORD *)(v0 + 104);
  v80 = *(_QWORD *)(v0 + 80);
  v81 = *(_QWORD *)(v0 + 72);
  v82 = *(_QWORD *)(v0 + 64);
  sub_10004FF60(v52, &qword_1011A30F0);
  swift_task_dealloc(v52);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000899CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 312));
  v3 = v2[38];
  v5 = v2[18];
  v4 = v2[19];
  v6 = v2[17];
  if (v0)
  {
    swift_bridgeObjectRelease(v3);
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v7 = sub_100089DAC;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_bridgeObjectRelease(v3);
    v7 = sub_100089A80;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100089A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(*(_QWORD *)(v0 + 192), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v2, v3);
  v6 = *(_QWORD *)(v0 + 280);
  v7 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 272);
  v9 = *(_QWORD *)(v0 + 224);
  v10 = *(_QWORD *)(v0 + 160);
  v11 = v9 + *(int *)(v0 + 328);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 56))(v8, 0, 1, v10);
  sub_1000A5508(v8, v7, &qword_1011A30F0);
  v5(v6, v10);
  sub_10004FF60(v11, &qword_1011A30F0);
  sub_10004FF60(v9, &qword_10119F428);
  v12 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 48);
  v15 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 16), &qword_1011A30F0);
  sub_10004A160(v13, v12, (uint64_t *)&unk_1011D0BB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    v16 = *(_QWORD *)(v0 + 288);
    v17 = *(_QWORD *)(v0 + 160);
    v18 = *(_QWORD *)(v0 + 168);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 296);
      v20 = *(_QWORD *)(v0 + 48);
      v21 = *(_QWORD *)(v0 + 24);
      sub_10004FF60(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1011D0BB0);
      v19(v21, 1, 1, v20);
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 248);
      v28 = *(_QWORD *)(v0 + 200);
      v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v28, v16, v17);
      Playlist.entries.getter(v29);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v28, v17);
      sub_10004FF60(v27, (uint64_t *)&unk_1011D0BB0);
    }
    sub_10004FF60(*(_QWORD *)(v0 + 240), (uint64_t *)&unk_1011D0BB0);
  }
  else
  {
    v22 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 296);
    v23 = *(_QWORD *)(v0 + 240);
    v24 = *(_QWORD *)(v0 + 48);
    v25 = *(_QWORD *)(v0 + 56);
    v26 = *(_QWORD *)(v0 + 24);
    sub_10004FF60(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1011D0BB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v26, v23, v24);
    v22(v26, 0, 1, v24);
  }
  v30 = *(_QWORD *)(v0 + 280);
  v31 = *(_QWORD *)(v0 + 288);
  v33 = *(_QWORD *)(v0 + 264);
  v32 = *(_QWORD *)(v0 + 272);
  v35 = *(_QWORD *)(v0 + 248);
  v34 = *(_QWORD *)(v0 + 256);
  v37 = *(_QWORD *)(v0 + 232);
  v36 = *(_QWORD *)(v0 + 240);
  v38 = *(_QWORD *)(v0 + 224);
  v40 = *(_QWORD *)(v0 + 208);
  v41 = *(_QWORD *)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 192);
  v43 = *(_QWORD *)(v0 + 184);
  v44 = *(_QWORD *)(v0 + 176);
  v45 = *(_QWORD *)(v0 + 152);
  v46 = *(_QWORD *)(v0 + 128);
  v47 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 80);
  v49 = *(_QWORD *)(v0 + 72);
  v50 = *(_QWORD *)(v0 + 64);
  sub_10004FF60(v31, &qword_1011A30F0);
  swift_task_dealloc(v31);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100089DAC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 8);
  v1(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = v5 + *(int *)(v0 + 328);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 56))(v4, 1, 1, v6);
  sub_1000A5508(v4, v3, &qword_1011A30F0);
  v1(v2, v6);
  sub_10004FF60(v7, &qword_1011A30F0);
  sub_10004FF60(v5, &qword_10119F428);
  v8 = *(_QWORD *)(v0 + 240);
  v9 = *(_QWORD *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 16), &qword_1011A30F0);
  sub_10004A160(v9, v8, (uint64_t *)&unk_1011D0BB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    v12 = *(_QWORD *)(v0 + 288);
    v13 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 168);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 296);
      v16 = *(_QWORD *)(v0 + 48);
      v17 = *(_QWORD *)(v0 + 24);
      sub_10004FF60(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1011D0BB0);
      v15(v17, 1, 1, v16);
    }
    else
    {
      v23 = *(_QWORD *)(v0 + 248);
      v24 = *(_QWORD *)(v0 + 200);
      v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v24, v12, v13);
      Playlist.entries.getter(v25);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v24, v13);
      sub_10004FF60(v23, (uint64_t *)&unk_1011D0BB0);
    }
    sub_10004FF60(*(_QWORD *)(v0 + 240), (uint64_t *)&unk_1011D0BB0);
  }
  else
  {
    v18 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 296);
    v19 = *(_QWORD *)(v0 + 240);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = *(_QWORD *)(v0 + 56);
    v22 = *(_QWORD *)(v0 + 24);
    sub_10004FF60(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1011D0BB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v22, v19, v20);
    v18(v22, 0, 1, v20);
  }
  v26 = *(_QWORD *)(v0 + 280);
  v27 = *(_QWORD *)(v0 + 288);
  v29 = *(_QWORD *)(v0 + 264);
  v28 = *(_QWORD *)(v0 + 272);
  v31 = *(_QWORD *)(v0 + 248);
  v30 = *(_QWORD *)(v0 + 256);
  v33 = *(_QWORD *)(v0 + 232);
  v32 = *(_QWORD *)(v0 + 240);
  v34 = *(_QWORD *)(v0 + 224);
  v36 = *(_QWORD *)(v0 + 208);
  v37 = *(_QWORD *)(v0 + 200);
  v38 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 184);
  v40 = *(_QWORD *)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 152);
  v42 = *(_QWORD *)(v0 + 128);
  v43 = *(_QWORD *)(v0 + 104);
  v44 = *(_QWORD *)(v0 + 80);
  v45 = *(_QWORD *)(v0 + 72);
  v46 = *(_QWORD *)(v0 + 64);
  sub_10004FF60(v27, &qword_1011A30F0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10008A0BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 320));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_10008A5C8;
  }
  else
  {
    v2 = sub_10008A128;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10008A128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  v3 = *(_QWORD *)(v0 + 72);
  sub_10004A160(*(_QWORD *)(v0 + 80), v3, &qword_10119F490);
  v4 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v75 = *(_QWORD *)(v0 + 248);
  if (v6 == 1)
  {
    v7 = *(_QWORD *)(v0 + 168);
    v8 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 72);
    sub_10004FF60(*(_QWORD *)(v0 + 80), &qword_10119F490);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    v15 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v15(v8, v9);
    sub_10005B748(v10, type metadata accessor for Library.Context);
    sub_10004FF60(v75, (uint64_t *)&unk_1011D0BB0);
    sub_10004FF60(v14, &qword_10119F490);
    v16 = 1;
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 168);
    v63 = *(_QWORD *)(v0 + 160);
    v65 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 64);
    v22 = *(_QWORD *)(v0 + 72);
    v67 = *(_QWORD *)(v0 + 128);
    v69 = *(_QWORD *)(v0 + 56);
    v71 = *(_QWORD *)(v0 + 48);
    v73 = *(_QWORD *)(v0 + 232);
    MusicLibraryResponse.items.getter(v4);
    sub_10004FF60(v20, &qword_10119F490);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v21);
    v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v65, v63);
    sub_10005B748(v67, type metadata accessor for Library.Context);
    sub_10004FF60(v75, (uint64_t *)&unk_1011D0BB0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v22, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v73, v23, v71);
    v16 = 0;
  }
  v24 = *(_QWORD *)(v0 + 264);
  v25 = *(_QWORD *)(v0 + 248);
  v27 = *(_QWORD *)(v0 + 224);
  v26 = *(_QWORD *)(v0 + 232);
  v28 = *(_QWORD *)(v0 + 160);
  v29 = v27 + *(int *)(v0 + 328);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 296))(v26, v16, 1, *(_QWORD *)(v0 + 48));
  sub_100065228(v26, v25, (uint64_t *)&unk_1011D0BB0);
  v15(v24, v28);
  sub_10004FF60(v29, &qword_1011A30F0);
  sub_10004FF60(v27, &qword_10119F428);
  v31 = *(_QWORD *)(v0 + 240);
  v30 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 48);
  v33 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 16), &qword_1011A30F0);
  sub_10004A160(v30, v31, (uint64_t *)&unk_1011D0BB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
  {
    v34 = *(_QWORD *)(v0 + 288);
    v35 = *(_QWORD *)(v0 + 160);
    v36 = *(_QWORD *)(v0 + 168);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
    v38 = *(_QWORD *)(v0 + 24);
    if (v37)
    {
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 296);
      v40 = *(_QWORD *)(v0 + 48);
      sub_10004FF60(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1011D0BB0);
      v39(v38, 1, 1, v40);
    }
    else
    {
      v46 = *(_QWORD *)(v0 + 248);
      v47 = *(_QWORD *)(v0 + 200);
      v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v47, v34, v35);
      Playlist.entries.getter(v48);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v47, v35);
      sub_10004FF60(v46, (uint64_t *)&unk_1011D0BB0);
    }
    sub_10004FF60(*(_QWORD *)(v0 + 240), (uint64_t *)&unk_1011D0BB0);
  }
  else
  {
    v41 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 296);
    v42 = *(_QWORD *)(v0 + 240);
    v43 = *(_QWORD *)(v0 + 48);
    v44 = *(_QWORD *)(v0 + 56);
    v45 = *(_QWORD *)(v0 + 24);
    sub_10004FF60(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1011D0BB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v45, v42, v43);
    v41(v45, 0, 1, v43);
  }
  v49 = *(_QWORD *)(v0 + 280);
  v50 = *(_QWORD *)(v0 + 288);
  v52 = *(_QWORD *)(v0 + 264);
  v51 = *(_QWORD *)(v0 + 272);
  v54 = *(_QWORD *)(v0 + 248);
  v53 = *(_QWORD *)(v0 + 256);
  v56 = *(_QWORD *)(v0 + 232);
  v55 = *(_QWORD *)(v0 + 240);
  v57 = *(_QWORD *)(v0 + 224);
  v59 = *(_QWORD *)(v0 + 208);
  v60 = *(_QWORD *)(v0 + 200);
  v61 = *(_QWORD *)(v0 + 192);
  v62 = *(_QWORD *)(v0 + 184);
  v64 = *(_QWORD *)(v0 + 176);
  v66 = *(_QWORD *)(v0 + 152);
  v68 = *(_QWORD *)(v0 + 128);
  v70 = *(_QWORD *)(v0 + 104);
  v72 = *(_QWORD *)(v0 + 80);
  v74 = *(_QWORD *)(v0 + 72);
  v76 = *(_QWORD *)(v0 + 64);
  sub_10004FF60(v50, &qword_1011A30F0);
  swift_task_dealloc(v50);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  swift_task_dealloc(v72);
  swift_task_dealloc(v74);
  swift_task_dealloc(v76);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10008A5C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = *(_QWORD *)(v0 + 72);
  sub_10004A160(*(_QWORD *)(v0 + 80), v3, &qword_10119F490);
  v4 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v75 = *(_QWORD *)(v0 + 248);
  if (v6 == 1)
  {
    v7 = *(_QWORD *)(v0 + 168);
    v8 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 72);
    sub_10004FF60(*(_QWORD *)(v0 + 80), &qword_10119F490);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    v15 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v15(v8, v9);
    sub_10005B748(v10, type metadata accessor for Library.Context);
    sub_10004FF60(v75, (uint64_t *)&unk_1011D0BB0);
    sub_10004FF60(v14, &qword_10119F490);
    v16 = 1;
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 168);
    v63 = *(_QWORD *)(v0 + 160);
    v65 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 64);
    v22 = *(_QWORD *)(v0 + 72);
    v67 = *(_QWORD *)(v0 + 128);
    v69 = *(_QWORD *)(v0 + 56);
    v71 = *(_QWORD *)(v0 + 48);
    v73 = *(_QWORD *)(v0 + 232);
    MusicLibraryResponse.items.getter(v4);
    sub_10004FF60(v20, &qword_10119F490);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v21);
    v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v65, v63);
    sub_10005B748(v67, type metadata accessor for Library.Context);
    sub_10004FF60(v75, (uint64_t *)&unk_1011D0BB0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v22, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v73, v23, v71);
    v16 = 0;
  }
  v24 = *(_QWORD *)(v0 + 264);
  v25 = *(_QWORD *)(v0 + 248);
  v27 = *(_QWORD *)(v0 + 224);
  v26 = *(_QWORD *)(v0 + 232);
  v28 = *(_QWORD *)(v0 + 160);
  v29 = v27 + *(int *)(v0 + 328);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 296))(v26, v16, 1, *(_QWORD *)(v0 + 48));
  sub_100065228(v26, v25, (uint64_t *)&unk_1011D0BB0);
  v15(v24, v28);
  sub_10004FF60(v29, &qword_1011A30F0);
  sub_10004FF60(v27, &qword_10119F428);
  v31 = *(_QWORD *)(v0 + 240);
  v30 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 48);
  v33 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 16), &qword_1011A30F0);
  sub_10004A160(v30, v31, (uint64_t *)&unk_1011D0BB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
  {
    v34 = *(_QWORD *)(v0 + 288);
    v35 = *(_QWORD *)(v0 + 160);
    v36 = *(_QWORD *)(v0 + 168);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
    v38 = *(_QWORD *)(v0 + 24);
    if (v37)
    {
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 296);
      v40 = *(_QWORD *)(v0 + 48);
      sub_10004FF60(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1011D0BB0);
      v39(v38, 1, 1, v40);
    }
    else
    {
      v46 = *(_QWORD *)(v0 + 248);
      v47 = *(_QWORD *)(v0 + 200);
      v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v47, v34, v35);
      Playlist.entries.getter(v48);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v47, v35);
      sub_10004FF60(v46, (uint64_t *)&unk_1011D0BB0);
    }
    sub_10004FF60(*(_QWORD *)(v0 + 240), (uint64_t *)&unk_1011D0BB0);
  }
  else
  {
    v41 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 296);
    v42 = *(_QWORD *)(v0 + 240);
    v43 = *(_QWORD *)(v0 + 48);
    v44 = *(_QWORD *)(v0 + 56);
    v45 = *(_QWORD *)(v0 + 24);
    sub_10004FF60(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1011D0BB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v45, v42, v43);
    v41(v45, 0, 1, v43);
  }
  v49 = *(_QWORD *)(v0 + 280);
  v50 = *(_QWORD *)(v0 + 288);
  v52 = *(_QWORD *)(v0 + 264);
  v51 = *(_QWORD *)(v0 + 272);
  v54 = *(_QWORD *)(v0 + 248);
  v53 = *(_QWORD *)(v0 + 256);
  v56 = *(_QWORD *)(v0 + 232);
  v55 = *(_QWORD *)(v0 + 240);
  v57 = *(_QWORD *)(v0 + 224);
  v59 = *(_QWORD *)(v0 + 208);
  v60 = *(_QWORD *)(v0 + 200);
  v61 = *(_QWORD *)(v0 + 192);
  v62 = *(_QWORD *)(v0 + 184);
  v64 = *(_QWORD *)(v0 + 176);
  v66 = *(_QWORD *)(v0 + 152);
  v68 = *(_QWORD *)(v0 + 128);
  v70 = *(_QWORD *)(v0 + 104);
  v72 = *(_QWORD *)(v0 + 80);
  v74 = *(_QWORD *)(v0 + 72);
  v76 = *(_QWORD *)(v0 + 64);
  sub_10004FF60(v50, &qword_1011A30F0);
  swift_task_dealloc(v50);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  swift_task_dealloc(v72);
  swift_task_dealloc(v74);
  swift_task_dealloc(v76);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10008AA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F2D8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[9] = swift_task_alloc(v7);
  v4[10] = swift_task_alloc(v7);
  v8 = sub_100007E8C(&qword_10119F2E0);
  v4[11] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[12] = v9;
  v4[13] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Library.Context(0);
  v4[14] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[15] = v11;
  v4[16] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicPropertySource(0);
  v4[17] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[18] = v13;
  v4[19] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Album(0);
  v4[20] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[21] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[22] = swift_task_alloc(v16);
  v4[23] = swift_task_alloc(v16);
  v4[24] = swift_task_alloc(v16);
  v4[25] = swift_task_alloc(v16);
  v17 = sub_100007E8C(&qword_10119F1D8);
  v4[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_10119F2E8);
  v4[27] = v18;
  v4[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011B1F10) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[29] = swift_task_alloc(v19);
  v4[30] = swift_task_alloc(v19);
  v4[31] = swift_task_alloc(v19);
  v20 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[32] = swift_task_alloc(v20);
  v4[33] = swift_task_alloc(v20);
  v4[34] = swift_task_alloc(v20);
  v4[35] = swift_task_alloc(v20);
  return swift_task_switch(sub_10008ACA8, 0, 0);
}

uint64_t sub_10008ACA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  sub_10004A160(v7, *(_QWORD *)(v0 + 280), &qword_1011A8FA0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  *(_QWORD *)(v0 + 288) = v8;
  v8(v1, 1, 1, v4);
  v9 = *(int *)(v3 + 48);
  *(_DWORD *)(v0 + 320) = v9;
  v10 = v2 + v9;
  sub_10004A160(v6, v2, &qword_10119F1D8);
  sub_10004A160(v7, v10, &qword_1011A8FA0);
  v11 = sub_100007E8C(&qword_10119ED10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v2, 1, v11) != 1)
  {
    v12 = *(_QWORD *)(v0 + 208);
    v13 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    sub_10004A160(*(_QWORD *)(v0 + 224), v12, &qword_10119F1D8);
    LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13);
    if ((_DWORD)v12 == 1)
    {
      if (v17 != 1)
      {
        v18 = *(_QWORD *)(v0 + 272);
        v19 = *(_QWORD *)(v0 + 200);
        v20 = *(_QWORD *)(v0 + 160);
        v21 = *(_QWORD *)(v0 + 168);
        v23 = *(_QWORD *)(v0 + 144);
        v22 = *(_QWORD *)(v0 + 152);
        v24 = *(_QWORD *)(v0 + 136);
        sub_10004A160(v10, v18, &qword_1011A8FA0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v18, v20);
        v25 = sub_100007E8C((uint64_t *)&unk_1011A1470);
        v26 = swift_allocObject(v25, 56, 7);
        *(_OWORD *)(v26 + 16) = xmmword_100EA7AD0;
        sub_100007E8C((uint64_t *)&unk_1011B6AB0);
        *(_QWORD *)(v26 + 32) = static PartialMusicProperty<A>.tracks.getter();
        *(_QWORD *)(v26 + 40) = static PartialMusicProperty<A>.recordLabels.getter();
        v27 = static PartialMusicProperty<A>.tracksPopularity.getter();
        *(_QWORD *)(v26 + 48) = v27;
        specialized Array._endMutation()(v27);
        *(_QWORD *)(v0 + 296) = v26;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v22, enum case for MusicPropertySource.catalog(_:), v24);
        v28 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
        *(_QWORD *)(v0 + 304) = v28;
        v29 = sub_100048748(&qword_10119F200, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
        *v28 = v0;
        v28[1] = sub_10008B254;
        return MusicItem<>.with(_:preferredSource:)(*(_QWORD *)(v0 + 192), v26, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), &protocol witness table for Album, &protocol witness table for Album, v29);
      }
    }
    else
    {
      if (v17 != 1)
      {
        v59 = *(_QWORD *)(v0 + 256);
        v60 = *(_QWORD *)(v0 + 208);
        v62 = *(_QWORD *)(v0 + 168);
        v61 = *(_QWORD *)(v0 + 176);
        v63 = *(_QWORD *)(v0 + 160);
        v64 = *(_QWORD **)(v0 + 128);
        sub_10004A160(v10, v59, &qword_1011A8FA0);
        sub_10005B6C0(v60, (uint64_t)v64, type metadata accessor for Library.Context);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v61, v59, v63);
        v65 = type metadata accessor for Track(0);
        MusicLibraryRequest.init()(v65, &protocol witness table for Track);
        sub_100203174(v61, v64);
        v66 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 312) = v66;
        *v66 = v0;
        v66[1] = sub_10008B91C;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
      }
      sub_10005B748(*(_QWORD *)(v0 + 208), type metadata accessor for Library.Context);
    }
  }
  sub_10004FF60(*(_QWORD *)(v0 + 224), &qword_10119F2E8);
  v31 = *(_QWORD *)(v0 + 240);
  v32 = *(_QWORD *)(v0 + 248);
  v33 = *(_QWORD *)(v0 + 48);
  v34 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 16), &qword_1011A8FA0);
  sub_10004A160(v32, v31, &qword_1011B1F10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v31, 1, v33) == 1)
  {
    v35 = *(_QWORD *)(v0 + 280);
    v36 = *(_QWORD *)(v0 + 160);
    v37 = *(_QWORD *)(v0 + 168);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36);
    v39 = *(_QWORD *)(v0 + 24);
    if (v38)
    {
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 288);
      v41 = *(_QWORD *)(v0 + 48);
      sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011B1F10);
      v40(v39, 1, 1, v41);
    }
    else
    {
      v47 = *(_QWORD *)(v0 + 248);
      v48 = *(_QWORD *)(v0 + 184);
      v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v48, v35, v36);
      Album.tracks.getter(v49);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v48, v36);
      sub_10004FF60(v47, &qword_1011B1F10);
    }
    sub_10004FF60(*(_QWORD *)(v0 + 240), &qword_1011B1F10);
  }
  else
  {
    v42 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 288);
    v43 = *(_QWORD *)(v0 + 240);
    v44 = *(_QWORD *)(v0 + 48);
    v45 = *(_QWORD *)(v0 + 56);
    v46 = *(_QWORD *)(v0 + 24);
    sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011B1F10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v46, v43, v44);
    v42(v46, 0, 1, v44);
  }
  v50 = *(_QWORD *)(v0 + 272);
  v51 = *(_QWORD *)(v0 + 280);
  v53 = *(_QWORD *)(v0 + 256);
  v52 = *(_QWORD *)(v0 + 264);
  v55 = *(_QWORD *)(v0 + 240);
  v54 = *(_QWORD *)(v0 + 248);
  v57 = *(_QWORD *)(v0 + 224);
  v56 = *(_QWORD *)(v0 + 232);
  v58 = *(_QWORD *)(v0 + 208);
  v67 = *(_QWORD *)(v0 + 200);
  v68 = *(_QWORD *)(v0 + 192);
  v69 = *(_QWORD *)(v0 + 184);
  v70 = *(_QWORD *)(v0 + 176);
  v71 = *(_QWORD *)(v0 + 152);
  v72 = *(_QWORD *)(v0 + 128);
  v73 = *(_QWORD *)(v0 + 104);
  v74 = *(_QWORD *)(v0 + 80);
  v75 = *(_QWORD *)(v0 + 72);
  v76 = *(_QWORD *)(v0 + 64);
  sub_10004FF60(v51, &qword_1011A8FA0);
  swift_task_dealloc(v51);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10008B254()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 304));
  v3 = v2[37];
  v5 = v2[18];
  v4 = v2[19];
  v6 = v2[17];
  if (v0)
  {
    swift_bridgeObjectRelease(v3);
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v7 = sub_10008B620;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_bridgeObjectRelease(v3);
    v7 = sub_10008B308;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_10008B308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(*(_QWORD *)(v0 + 200), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v2, v3);
  v6 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 280);
  v8 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 224);
  v10 = *(_QWORD *)(v0 + 160);
  v11 = v9 + *(int *)(v0 + 320);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 56))(v8, 0, 1, v10);
  sub_1000A5508(v8, v7, &qword_1011A8FA0);
  v5(v6, v10);
  sub_10004FF60(v11, &qword_1011A8FA0);
  sub_10004FF60(v9, &qword_10119F1D8);
  v12 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 48);
  v15 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 16), &qword_1011A8FA0);
  sub_10004A160(v13, v12, &qword_1011B1F10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    v16 = *(_QWORD *)(v0 + 280);
    v17 = *(_QWORD *)(v0 + 160);
    v18 = *(_QWORD *)(v0 + 168);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 288);
      v20 = *(_QWORD *)(v0 + 48);
      v21 = *(_QWORD *)(v0 + 24);
      sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011B1F10);
      v19(v21, 1, 1, v20);
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 248);
      v28 = *(_QWORD *)(v0 + 184);
      v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v28, v16, v17);
      Album.tracks.getter(v29);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v28, v17);
      sub_10004FF60(v27, &qword_1011B1F10);
    }
    sub_10004FF60(*(_QWORD *)(v0 + 240), &qword_1011B1F10);
  }
  else
  {
    v22 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 288);
    v23 = *(_QWORD *)(v0 + 240);
    v24 = *(_QWORD *)(v0 + 48);
    v25 = *(_QWORD *)(v0 + 56);
    v26 = *(_QWORD *)(v0 + 24);
    sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011B1F10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v26, v23, v24);
    v22(v26, 0, 1, v24);
  }
  v30 = *(_QWORD *)(v0 + 272);
  v31 = *(_QWORD *)(v0 + 280);
  v33 = *(_QWORD *)(v0 + 256);
  v32 = *(_QWORD *)(v0 + 264);
  v35 = *(_QWORD *)(v0 + 240);
  v34 = *(_QWORD *)(v0 + 248);
  v37 = *(_QWORD *)(v0 + 224);
  v36 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 208);
  v40 = *(_QWORD *)(v0 + 200);
  v41 = *(_QWORD *)(v0 + 192);
  v42 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 176);
  v44 = *(_QWORD *)(v0 + 152);
  v45 = *(_QWORD *)(v0 + 128);
  v46 = *(_QWORD *)(v0 + 104);
  v47 = *(_QWORD *)(v0 + 80);
  v48 = *(_QWORD *)(v0 + 72);
  v49 = *(_QWORD *)(v0 + 64);
  sub_10004FF60(v31, &qword_1011A8FA0);
  swift_task_dealloc(v31);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10008B620()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 8);
  v1(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 160));
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = v5 + *(int *)(v0 + 320);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 56))(v4, 1, 1, v6);
  sub_1000A5508(v4, v3, &qword_1011A8FA0);
  v1(v2, v6);
  sub_10004FF60(v7, &qword_1011A8FA0);
  sub_10004FF60(v5, &qword_10119F1D8);
  v8 = *(_QWORD *)(v0 + 240);
  v9 = *(_QWORD *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 16), &qword_1011A8FA0);
  sub_10004A160(v9, v8, &qword_1011B1F10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    v12 = *(_QWORD *)(v0 + 280);
    v13 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 168);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 288);
      v16 = *(_QWORD *)(v0 + 48);
      v17 = *(_QWORD *)(v0 + 24);
      sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011B1F10);
      v15(v17, 1, 1, v16);
    }
    else
    {
      v23 = *(_QWORD *)(v0 + 248);
      v24 = *(_QWORD *)(v0 + 184);
      v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v24, v12, v13);
      Album.tracks.getter(v25);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v24, v13);
      sub_10004FF60(v23, &qword_1011B1F10);
    }
    sub_10004FF60(*(_QWORD *)(v0 + 240), &qword_1011B1F10);
  }
  else
  {
    v18 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 288);
    v19 = *(_QWORD *)(v0 + 240);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = *(_QWORD *)(v0 + 56);
    v22 = *(_QWORD *)(v0 + 24);
    sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011B1F10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v22, v19, v20);
    v18(v22, 0, 1, v20);
  }
  v26 = *(_QWORD *)(v0 + 272);
  v27 = *(_QWORD *)(v0 + 280);
  v29 = *(_QWORD *)(v0 + 256);
  v28 = *(_QWORD *)(v0 + 264);
  v31 = *(_QWORD *)(v0 + 240);
  v30 = *(_QWORD *)(v0 + 248);
  v33 = *(_QWORD *)(v0 + 224);
  v32 = *(_QWORD *)(v0 + 232);
  v34 = *(_QWORD *)(v0 + 208);
  v36 = *(_QWORD *)(v0 + 200);
  v37 = *(_QWORD *)(v0 + 192);
  v38 = *(_QWORD *)(v0 + 184);
  v39 = *(_QWORD *)(v0 + 176);
  v40 = *(_QWORD *)(v0 + 152);
  v41 = *(_QWORD *)(v0 + 128);
  v42 = *(_QWORD *)(v0 + 104);
  v43 = *(_QWORD *)(v0 + 80);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 64);
  sub_10004FF60(v27, &qword_1011A8FA0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10008B91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 312));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_10008BE10;
  }
  else
  {
    v2 = sub_10008B988;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10008B988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_100007E8C(&qword_10119F2F0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  v3 = *(_QWORD *)(v0 + 72);
  sub_10004A160(*(_QWORD *)(v0 + 80), v3, &qword_10119F2D8);
  v4 = sub_100007E8C(&qword_10119F2F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v74 = *(_QWORD *)(v0 + 248);
  if (v6 == 1)
  {
    v7 = *(_QWORD *)(v0 + 168);
    v8 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 72);
    sub_10004FF60(*(_QWORD *)(v0 + 80), &qword_10119F2D8);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    v15 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v15(v8, v9);
    sub_10005B748(v10, type metadata accessor for Library.Context);
    sub_10004FF60(v74, &qword_1011B1F10);
    sub_10004FF60(v14, &qword_10119F2D8);
    v16 = 1;
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 168);
    v62 = *(_QWORD *)(v0 + 160);
    v64 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 64);
    v22 = *(_QWORD *)(v0 + 72);
    v66 = *(_QWORD *)(v0 + 128);
    v68 = *(_QWORD *)(v0 + 56);
    v70 = *(_QWORD *)(v0 + 48);
    v72 = *(_QWORD *)(v0 + 232);
    MusicLibraryResponse.items.getter(v4);
    sub_10004FF60(v20, &qword_10119F2D8);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v21);
    v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v64, v62);
    sub_10005B748(v66, type metadata accessor for Library.Context);
    sub_10004FF60(v74, &qword_1011B1F10);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v22, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v72, v23, v70);
    v16 = 0;
  }
  v24 = *(_QWORD *)(v0 + 248);
  v25 = *(_QWORD *)(v0 + 256);
  v27 = *(_QWORD *)(v0 + 224);
  v26 = *(_QWORD *)(v0 + 232);
  v28 = *(_QWORD *)(v0 + 160);
  v29 = v27 + *(int *)(v0 + 320);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 288))(v26, v16, 1, *(_QWORD *)(v0 + 48));
  sub_100065228(v26, v24, &qword_1011B1F10);
  v15(v25, v28);
  sub_10004FF60(v29, &qword_1011A8FA0);
  sub_10004FF60(v27, &qword_10119F1D8);
  v31 = *(_QWORD *)(v0 + 240);
  v30 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 48);
  v33 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 16), &qword_1011A8FA0);
  sub_10004A160(v30, v31, &qword_1011B1F10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
  {
    v34 = *(_QWORD *)(v0 + 280);
    v35 = *(_QWORD *)(v0 + 160);
    v36 = *(_QWORD *)(v0 + 168);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
    v38 = *(_QWORD *)(v0 + 24);
    if (v37)
    {
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 288);
      v40 = *(_QWORD *)(v0 + 48);
      sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011B1F10);
      v39(v38, 1, 1, v40);
    }
    else
    {
      v46 = *(_QWORD *)(v0 + 248);
      v47 = *(_QWORD *)(v0 + 184);
      v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v47, v34, v35);
      Album.tracks.getter(v48);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v47, v35);
      sub_10004FF60(v46, &qword_1011B1F10);
    }
    sub_10004FF60(*(_QWORD *)(v0 + 240), &qword_1011B1F10);
  }
  else
  {
    v41 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 288);
    v42 = *(_QWORD *)(v0 + 240);
    v43 = *(_QWORD *)(v0 + 48);
    v44 = *(_QWORD *)(v0 + 56);
    v45 = *(_QWORD *)(v0 + 24);
    sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011B1F10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v45, v42, v43);
    v41(v45, 0, 1, v43);
  }
  v49 = *(_QWORD *)(v0 + 272);
  v50 = *(_QWORD *)(v0 + 280);
  v52 = *(_QWORD *)(v0 + 256);
  v51 = *(_QWORD *)(v0 + 264);
  v54 = *(_QWORD *)(v0 + 240);
  v53 = *(_QWORD *)(v0 + 248);
  v56 = *(_QWORD *)(v0 + 224);
  v55 = *(_QWORD *)(v0 + 232);
  v57 = *(_QWORD *)(v0 + 208);
  v59 = *(_QWORD *)(v0 + 200);
  v60 = *(_QWORD *)(v0 + 192);
  v61 = *(_QWORD *)(v0 + 184);
  v63 = *(_QWORD *)(v0 + 176);
  v65 = *(_QWORD *)(v0 + 152);
  v67 = *(_QWORD *)(v0 + 128);
  v69 = *(_QWORD *)(v0 + 104);
  v71 = *(_QWORD *)(v0 + 80);
  v73 = *(_QWORD *)(v0 + 72);
  v75 = *(_QWORD *)(v0 + 64);
  sub_10004FF60(v50, &qword_1011A8FA0);
  swift_task_dealloc(v50);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v67);
  swift_task_dealloc(v69);
  swift_task_dealloc(v71);
  swift_task_dealloc(v73);
  swift_task_dealloc(v75);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10008BE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_100007E8C(&qword_10119F2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = *(_QWORD *)(v0 + 72);
  sub_10004A160(*(_QWORD *)(v0 + 80), v3, &qword_10119F2D8);
  v4 = sub_100007E8C(&qword_10119F2F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v74 = *(_QWORD *)(v0 + 248);
  if (v6 == 1)
  {
    v7 = *(_QWORD *)(v0 + 168);
    v8 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 72);
    sub_10004FF60(*(_QWORD *)(v0 + 80), &qword_10119F2D8);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    v15 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v15(v8, v9);
    sub_10005B748(v10, type metadata accessor for Library.Context);
    sub_10004FF60(v74, &qword_1011B1F10);
    sub_10004FF60(v14, &qword_10119F2D8);
    v16 = 1;
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 168);
    v62 = *(_QWORD *)(v0 + 160);
    v64 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 64);
    v22 = *(_QWORD *)(v0 + 72);
    v66 = *(_QWORD *)(v0 + 128);
    v68 = *(_QWORD *)(v0 + 56);
    v70 = *(_QWORD *)(v0 + 48);
    v72 = *(_QWORD *)(v0 + 232);
    MusicLibraryResponse.items.getter(v4);
    sub_10004FF60(v20, &qword_10119F2D8);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v21);
    v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v64, v62);
    sub_10005B748(v66, type metadata accessor for Library.Context);
    sub_10004FF60(v74, &qword_1011B1F10);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v22, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v72, v23, v70);
    v16 = 0;
  }
  v24 = *(_QWORD *)(v0 + 248);
  v25 = *(_QWORD *)(v0 + 256);
  v27 = *(_QWORD *)(v0 + 224);
  v26 = *(_QWORD *)(v0 + 232);
  v28 = *(_QWORD *)(v0 + 160);
  v29 = v27 + *(int *)(v0 + 320);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 288))(v26, v16, 1, *(_QWORD *)(v0 + 48));
  sub_100065228(v26, v24, &qword_1011B1F10);
  v15(v25, v28);
  sub_10004FF60(v29, &qword_1011A8FA0);
  sub_10004FF60(v27, &qword_10119F1D8);
  v31 = *(_QWORD *)(v0 + 240);
  v30 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 48);
  v33 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 16), &qword_1011A8FA0);
  sub_10004A160(v30, v31, &qword_1011B1F10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
  {
    v34 = *(_QWORD *)(v0 + 280);
    v35 = *(_QWORD *)(v0 + 160);
    v36 = *(_QWORD *)(v0 + 168);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
    v38 = *(_QWORD *)(v0 + 24);
    if (v37)
    {
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 288);
      v40 = *(_QWORD *)(v0 + 48);
      sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011B1F10);
      v39(v38, 1, 1, v40);
    }
    else
    {
      v46 = *(_QWORD *)(v0 + 248);
      v47 = *(_QWORD *)(v0 + 184);
      v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v47, v34, v35);
      Album.tracks.getter(v48);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v47, v35);
      sub_10004FF60(v46, &qword_1011B1F10);
    }
    sub_10004FF60(*(_QWORD *)(v0 + 240), &qword_1011B1F10);
  }
  else
  {
    v41 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 288);
    v42 = *(_QWORD *)(v0 + 240);
    v43 = *(_QWORD *)(v0 + 48);
    v44 = *(_QWORD *)(v0 + 56);
    v45 = *(_QWORD *)(v0 + 24);
    sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011B1F10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v45, v42, v43);
    v41(v45, 0, 1, v43);
  }
  v49 = *(_QWORD *)(v0 + 272);
  v50 = *(_QWORD *)(v0 + 280);
  v52 = *(_QWORD *)(v0 + 256);
  v51 = *(_QWORD *)(v0 + 264);
  v54 = *(_QWORD *)(v0 + 240);
  v53 = *(_QWORD *)(v0 + 248);
  v56 = *(_QWORD *)(v0 + 224);
  v55 = *(_QWORD *)(v0 + 232);
  v57 = *(_QWORD *)(v0 + 208);
  v59 = *(_QWORD *)(v0 + 200);
  v60 = *(_QWORD *)(v0 + 192);
  v61 = *(_QWORD *)(v0 + 184);
  v63 = *(_QWORD *)(v0 + 176);
  v65 = *(_QWORD *)(v0 + 152);
  v67 = *(_QWORD *)(v0 + 128);
  v69 = *(_QWORD *)(v0 + 104);
  v71 = *(_QWORD *)(v0 + 80);
  v73 = *(_QWORD *)(v0 + 72);
  v75 = *(_QWORD *)(v0 + 64);
  sub_10004FF60(v50, &qword_1011A8FA0);
  swift_task_dealloc(v50);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v67);
  swift_task_dealloc(v69);
  swift_task_dealloc(v71);
  swift_task_dealloc(v73);
  swift_task_dealloc(v75);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10008C298(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t KeyPath;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(_QWORD *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(_QWORD, _QWORD, _QWORD);
  _QWORD *v93;
  unsigned int (*v94)(uint64_t, uint64_t, _QWORD);
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t, _QWORD);
  char *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t, _QWORD, uint64_t, void (*)(_QWORD, _QWORD, _QWORD));
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(_QWORD, _QWORD, _QWORD);
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t (*v115)(uint64_t, _QWORD, uint64_t, void (*)(_QWORD, _QWORD, _QWORD));
  char *v116;
  unint64_t v117;
  char v118;
  void (*v119)(_QWORD, _QWORD);
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v146)(uint64_t, uint64_t, uint64_t);
  void (*v147)(char *, uint64_t, uint64_t);
  char *v148;
  void (*v149)(uint64_t, char *, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(char *, uint64_t, uint64_t);
  char *v164;
  unint64_t v165;
  char v166;
  void (*v167)(char *, uint64_t);
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  void (*v180)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v181;
  unsigned int (*v182)(uint64_t, uint64_t, uint64_t);
  char *v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, char *, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  unsigned int v196;
  _QWORD *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  void (*v203)(char *, uint64_t);
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  _QWORD *v232;
  uint64_t v233;
  _QWORD *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  _QWORD *v238;
  char *v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t *v244;
  unsigned int (*v245)(_QWORD *, uint64_t, uint64_t);
  uint64_t v246;
  char *v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  char *v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  _QWORD *v257;
  void (*v258)(_QWORD, _QWORD, _QWORD);
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char v270[8];

  v3 = v2;
  v245 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))a2;
  v228 = sub_100007E8C(&qword_10119F208);
  __chkstk_darwin(v228);
  v229 = (uint64_t)&v214 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119F0B8);
  v7 = __chkstk_darwin(v6);
  v223 = (uint64_t)&v214 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v222 = (char *)&v214 - v10;
  v11 = __chkstk_darwin(v9);
  v219 = (uint64_t)&v214 - v12;
  v13 = __chkstk_darwin(v11);
  v234 = (uint64_t *)((char *)&v214 - v14);
  v15 = __chkstk_darwin(v13);
  v255 = (char *)&v214 - v16;
  __chkstk_darwin(v15);
  v249 = (char *)&v214 - v17;
  v259 = sub_100007E8C((uint64_t *)&unk_1011ACAE0);
  v252 = *(_QWORD **)(v259 - 8);
  v18 = __chkstk_darwin(v259);
  v216 = (char *)&v214 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v240 = (char *)&v214 - v20;
  v225 = sub_100007E8C(&qword_10119F210);
  __chkstk_darwin(v225);
  v227 = (uint64_t)&v214 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A4150);
  v23 = __chkstk_darwin(v22);
  v221 = (uint64_t)&v214 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v220 = (char *)&v214 - v26;
  v27 = __chkstk_darwin(v25);
  v218 = (uint64_t)&v214 - v28;
  v29 = __chkstk_darwin(v27);
  v226 = (uint64_t *)((char *)&v214 - v30);
  v31 = __chkstk_darwin(v29);
  v233 = (uint64_t)&v214 - v32;
  __chkstk_darwin(v31);
  v247 = (char *)&v214 - v33;
  v250 = sub_100007E8C((uint64_t *)&unk_1011D0B50);
  v254 = *(_QWORD *)(v250 - 8);
  v34 = __chkstk_darwin(v250);
  v215 = (char *)&v214 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v239 = (char *)&v214 - v36;
  v237 = sub_100007E8C(&qword_10119F450);
  __chkstk_darwin(v237);
  v243 = (uint64_t)&v214 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v38);
  v241 = (char *)&v214 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  v41 = __chkstk_darwin(v40);
  v231 = (uint64_t)&v214 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __chkstk_darwin(v41);
  v232 = (uint64_t *)((char *)&v214 - v44);
  v45 = __chkstk_darwin(v43);
  v230 = (char *)&v214 - v46;
  v47 = __chkstk_darwin(v45);
  v224 = (uint64_t)&v214 - v48;
  v49 = __chkstk_darwin(v47);
  v238 = (uint64_t *)((char *)&v214 - v50);
  v51 = __chkstk_darwin(v49);
  v242 = (uint64_t)&v214 - v52;
  __chkstk_darwin(v51);
  v244 = (uint64_t *)((char *)&v214 - v53);
  v54 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v257 = *(_QWORD **)(v54 - 8);
  v258 = (void (*)(_QWORD, _QWORD, _QWORD))v54;
  v55 = __chkstk_darwin(v54);
  v217 = (char *)&v214 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v253 = (char *)&v214 - v57;
  v58 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  v59 = __chkstk_darwin(v58);
  v236 = (char *)&v214 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  v235 = (uint64_t)&v214 - v61;
  v62 = sub_100007E8C(&qword_1011A30F0);
  v63 = __chkstk_darwin(v62);
  v248 = (uint64_t)&v214 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __chkstk_darwin(v63);
  v246 = (uint64_t)&v214 - v66;
  v67 = __chkstk_darwin(v65);
  v69 = (char *)&v214 - v68;
  v70 = __chkstk_darwin(v67);
  v72 = (uint64_t *)((char *)&v214 - v71);
  __chkstk_darwin(v70);
  v74 = (char *)&v214 - v73;
  v251 = a1;
  sub_10004A160(a1, (uint64_t)&v214 - v73, &qword_1011A30F0);
  v75 = type metadata accessor for Playlist(0);
  v268 = v75;
  v76 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
  v269 = v76;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  v266 = v75;
  v267 = v76;
  v78 = swift_getKeyPath(&unk_100EA8C08);
  static Published.subscript.getter(v72, v3, KeyPath, v78);
  swift_release(v78);
  swift_release(KeyPath);
  v264 = v75;
  v265 = v76;
  v79 = swift_getKeyPath(&unk_100EA8BD0);
  v262 = v75;
  v263 = v76;
  v256 = v76;
  v80 = swift_getKeyPath(&unk_100EA8C08);
  sub_10004A160((uint64_t)v74, (uint64_t)v69, &qword_1011A30F0);
  swift_retain(v3);
  v260 = v3;
  static Published.subscript.setter(v69, v3, v79, v80);
  v81 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48);
  v261 = v75;
  if (v81(v72, 1, v75) == 1)
  {
    v82 = v260 + *(_QWORD *)(*(_QWORD *)v260 + 104);
    swift_beginAccess(v82, v270, 0, 0);
    v83 = v235;
    sub_10004A160(v82, v235, (uint64_t *)&unk_1011C5B80);
    v84 = type metadata accessor for Library.Context(0);
    v85 = (uint64_t)v236;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v236, 1, 1, v84);
    LOBYTE(v82) = sub_1000805B8(v83, v85, (uint64_t *)&unk_1011C5B80, &qword_10119EE48);
    sub_10004FF60(v85, (uint64_t *)&unk_1011C5B80);
    sub_10004FF60(v83, (uint64_t *)&unk_1011C5B80);
    if ((v82 & 1) != 0)
    {
      v86 = type metadata accessor for TaskPriority(0);
      v87 = (uint64_t)v241;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v241, 1, 1, v86);
      v88 = (_QWORD *)swift_allocObject(&unk_1010AFDB0, 40, 7);
      v88[2] = 0;
      v88[3] = 0;
      v89 = v260;
      v88[4] = v260;
      swift_retain(v89);
      v90 = sub_100166D14(v87, (uint64_t)&unk_10119F468, (uint64_t)v88);
      swift_release(v90);
    }
  }
  sub_10004FF60((uint64_t)v74, &qword_1011A30F0);
  sub_10004FF60((uint64_t)v72, &qword_1011A30F0);
  v91 = (uint64_t)v244;
  sub_10004A160((uint64_t)v245, (uint64_t)v244, (uint64_t *)&unk_1011D0BB0);
  v93 = v257;
  v92 = v258;
  v94 = (unsigned int (*)(uint64_t, uint64_t, _QWORD))v257[6];
  if (v94(v91, 1, v258) == 1)
  {
    sub_10004FF60(v91, (uint64_t *)&unk_1011D0BB0);
    v95 = v254;
    v96 = v255;
    v97 = v250;
    goto LABEL_16;
  }
  v245 = v81;
  v98 = (void (*)(char *, uint64_t, _QWORD))v93[4];
  v99 = v253;
  v98(v253, v91, v92);
  v100 = (uint64_t *)v93[2];
  v101 = v242;
  ((void (*)(uint64_t, char *, _QWORD))v100)(v242, v99, v92);
  v102 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))v93[7];
  v103 = v102(v101, 0, 1, v92);
  __chkstk_darwin(v103);
  v104 = v261;
  v105 = v256;
  *(&v214 - 2) = v261;
  *(&v214 - 1) = v105;
  v106 = swift_getKeyPath(&unk_100EA8D88);
  __chkstk_darwin(v106);
  *(&v214 - 2) = v104;
  *(&v214 - 1) = v105;
  v107 = v258;
  v108 = v101;
  v109 = swift_getKeyPath(&unk_100EA8DC0);
  v110 = v238;
  static Published.subscript.getter(v238, v260, v106, v109);
  swift_release(v109);
  swift_release(v106);
  v111 = v243;
  v112 = v243 + *(int *)(v237 + 48);
  sub_10004A160(v108, v243, (uint64_t *)&unk_1011D0BB0);
  sub_10004A160((uint64_t)v110, v112, (uint64_t *)&unk_1011D0BB0);
  if (v94(v111, 1, v107) != 1)
  {
    v114 = v224;
    sub_10004A160(v111, v224, (uint64_t *)&unk_1011D0BB0);
    if (v94(v112, 1, v107) != 1)
    {
      v244 = v100;
      v115 = v102;
      v116 = v217;
      v98(v217, v112, v107);
      v117 = sub_1000A3B24();
      v118 = dispatch thunk of static Equatable.== infix(_:_:)(v114, v116, v107, v117);
      v119 = (void (*)(_QWORD, _QWORD))v257[1];
      v120 = v116;
      v102 = v115;
      v100 = v244;
      v119(v120, v107);
      sub_10004FF60((uint64_t)v110, (uint64_t *)&unk_1011D0BB0);
      sub_10004FF60(v242, (uint64_t *)&unk_1011D0BB0);
      v119(v114, v107);
      sub_10004FF60(v111, (uint64_t *)&unk_1011D0BB0);
      v95 = v254;
      v96 = v255;
      if ((v118 & 1) != 0)
      {
        v119(v253, v107);
        goto LABEL_15;
      }
LABEL_14:
      v121 = (uint64_t)v230;
      ((void (*)(char *, char *, _QWORD))v100)(v230, v253, v107);
      v122 = v102(v121, 0, 1, v107);
      __chkstk_darwin(v122);
      v123 = v261;
      v124 = v256;
      *(&v214 - 2) = v261;
      *(&v214 - 1) = v124;
      v125 = swift_getKeyPath(&unk_100EA8D88);
      __chkstk_darwin(v125);
      *(&v214 - 2) = v123;
      *(&v214 - 1) = v124;
      v126 = swift_getKeyPath(&unk_100EA8DC0);
      v127 = v232;
      v128 = v260;
      static Published.subscript.getter(v232, v260, v125, v126);
      swift_release(v126);
      swift_release(v125);
      __chkstk_darwin(v129);
      *(&v214 - 2) = v123;
      *(&v214 - 1) = v124;
      v130 = swift_getKeyPath(&unk_100EA8D88);
      __chkstk_darwin(v130);
      *(&v214 - 2) = v123;
      *(&v214 - 1) = v124;
      v131 = swift_getKeyPath(&unk_100EA8DC0);
      v132 = v231;
      sub_10004A160(v121, v231, (uint64_t *)&unk_1011D0BB0);
      swift_retain(v128);
      static Published.subscript.setter(v132, v128, v130, v131);
      sub_100084EA0((uint64_t)v127);
      v133 = v121;
      v96 = v255;
      sub_10004FF60(v133, (uint64_t *)&unk_1011D0BB0);
      sub_10004FF60((uint64_t)v127, (uint64_t *)&unk_1011D0BB0);
      v134 = type metadata accessor for TaskPriority(0);
      v135 = (uint64_t)v241;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v241, 1, 1, v134);
      v136 = swift_allocObject(&unk_1010AFD60, 24, 7);
      swift_weakInit(v136 + 16, v128);
      type metadata accessor for MainActor(0);
      v137 = swift_retain(v136);
      v138 = static MainActor.shared.getter(v137);
      v139 = (_QWORD *)swift_allocObject(&unk_1010AFD88, 40, 7);
      v139[2] = v138;
      v139[3] = &protocol witness table for MainActor;
      v139[4] = v136;
      swift_release(v136);
      v140 = sub_100166D14(v135, (uint64_t)&unk_10119F460, (uint64_t)v139);
      v141 = swift_release(v140);
      ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD), __n128))v257[1])(v253, v258, v141);
      goto LABEL_15;
    }
    sub_10004FF60((uint64_t)v110, (uint64_t *)&unk_1011D0BB0);
    sub_10004FF60(v242, (uint64_t *)&unk_1011D0BB0);
    ((void (*)(uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))v257[1])(v114, v107);
    v95 = v254;
LABEL_11:
    sub_10004FF60(v243, &qword_10119F450);
    goto LABEL_14;
  }
  sub_10004FF60((uint64_t)v110, (uint64_t *)&unk_1011D0BB0);
  sub_10004FF60(v108, (uint64_t *)&unk_1011D0BB0);
  v113 = v94(v112, 1, v107);
  v95 = v254;
  v96 = v255;
  if (v113 != 1)
    goto LABEL_11;
  sub_10004FF60(v243, (uint64_t *)&unk_1011D0BB0);
  ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v257[1])(v253, v107);
LABEL_15:
  v97 = v250;
  v81 = v245;
LABEL_16:
  v142 = (uint64_t)v247;
  v143 = v251;
  v144 = v246;
  sub_10004A160(v251, v246, &qword_1011A30F0);
  if (v81((_QWORD *)v144, 1, v261) == 1)
  {
    sub_10004FF60(v144, &qword_1011A30F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56))(v142, 1, 1, v97);
LABEL_19:
    sub_10004FF60(v142, &qword_1011A4150);
    goto LABEL_30;
  }
  v145 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56);
  v145(v142, 1, 1, v97);
  sub_10004FF60(v144, &qword_1011A30F0);
  v146 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
  if (v146(v142, 1, v97) == 1)
    goto LABEL_19;
  v245 = v81;
  v147 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 32);
  v148 = v239;
  v147(v239, v142, v97);
  v149 = *(void (**)(uint64_t, char *, uint64_t))(v95 + 16);
  v150 = v233;
  v149(v233, v148, v97);
  v151 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v145)(v150, 0, 1, v97);
  __chkstk_darwin(v151);
  v152 = v261;
  v153 = v256;
  *(&v214 - 2) = v261;
  *(&v214 - 1) = v153;
  v154 = swift_getKeyPath(&unk_100EA8D30);
  __chkstk_darwin(v154);
  *(&v214 - 2) = v152;
  *(&v214 - 1) = v153;
  v155 = v250;
  v156 = swift_getKeyPath(&unk_100EA8D68);
  v157 = v226;
  static Published.subscript.getter(v226, v260, v154, v156);
  swift_release(v156);
  swift_release(v154);
  v158 = v227;
  v159 = v227 + *(int *)(v225 + 48);
  sub_10004A160(v150, v227, &qword_1011A4150);
  sub_10004A160((uint64_t)v157, v159, &qword_1011A4150);
  if (v146(v158, 1, v155) != 1)
  {
    v162 = v218;
    sub_10004A160(v158, v218, &qword_1011A4150);
    if (v146(v159, 1, v155) != 1)
    {
      v163 = v147;
      v164 = v215;
      v163(v215, v159, v155);
      v165 = sub_1000A30AC();
      v166 = dispatch thunk of static Equatable.== infix(_:_:)(v162, v164, v155, v165);
      v167 = *(void (**)(char *, uint64_t))(v254 + 8);
      v167(v164, v155);
      sub_10004FF60((uint64_t)v157, &qword_1011A4150);
      sub_10004FF60(v233, &qword_1011A4150);
      v167((char *)v162, v155);
      sub_10004FF60(v158, &qword_1011A4150);
      v96 = v255;
      if ((v166 & 1) != 0)
      {
        v167(v239, v155);
        goto LABEL_29;
      }
LABEL_28:
      v168 = (uint64_t)v220;
      v169 = v239;
      v149((uint64_t)v220, v239, v155);
      v170 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v145)(v168, 0, 1, v155);
      __chkstk_darwin(v170);
      v171 = v261;
      v172 = v256;
      *(&v214 - 2) = v261;
      *(&v214 - 1) = v172;
      v173 = swift_getKeyPath(&unk_100EA8D30);
      __chkstk_darwin(v173);
      *(&v214 - 2) = v171;
      *(&v214 - 1) = v172;
      v174 = swift_getKeyPath(&unk_100EA8D68);
      v175 = v221;
      sub_10004A160(v168, v221, &qword_1011A4150);
      v176 = v260;
      swift_retain(v260);
      static Published.subscript.setter(v175, v176, v173, v174);
      sub_10004FF60(v168, &qword_1011A4150);
      (*(void (**)(char *, uint64_t))(v254 + 8))(v169, v155);
      goto LABEL_29;
    }
    sub_10004FF60((uint64_t)v157, &qword_1011A4150);
    sub_10004FF60(v233, &qword_1011A4150);
    (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v162, v155);
    v96 = v255;
LABEL_25:
    sub_10004FF60(v158, &qword_10119F210);
    goto LABEL_28;
  }
  sub_10004FF60((uint64_t)v157, &qword_1011A4150);
  sub_10004FF60(v150, &qword_1011A4150);
  v160 = v146(v159, 1, v155);
  v161 = v254;
  v96 = v255;
  if (v160 != 1)
    goto LABEL_25;
  sub_10004FF60(v158, &qword_1011A4150);
  (*(void (**)(char *, uint64_t))(v161 + 8))(v239, v155);
LABEL_29:
  v143 = v251;
  v81 = v245;
LABEL_30:
  v177 = v248;
  sub_10004A160(v143, v248, &qword_1011A30F0);
  if (v81((_QWORD *)v177, 1, v261) != 1)
  {
    v179 = v252;
    v180 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v252[7];
    v178 = (uint64_t)v249;
    v181 = v259;
    v180(v249, 1, 1, v259);
    sub_10004FF60(v177, &qword_1011A30F0);
    v182 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v179[6];
    if (v182(v178, 1, v181) == 1)
      goto LABEL_33;
    v184 = v240;
    v185 = (uint64_t)v96;
    v186 = v259;
    v258 = (void (*)(_QWORD, _QWORD, _QWORD))v179[4];
    v258(v240, v178, v259);
    v187 = (void (*)(uint64_t, char *, uint64_t))v179[2];
    v187(v185, v184, v186);
    v188 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v180)(v185, 0, 1, v186);
    __chkstk_darwin(v188);
    v189 = v261;
    v190 = v256;
    *(&v214 - 2) = v261;
    *(&v214 - 1) = v190;
    v191 = swift_getKeyPath(&unk_100EA8C28);
    __chkstk_darwin(v191);
    *(&v214 - 2) = v189;
    *(&v214 - 1) = v190;
    v192 = swift_getKeyPath(&unk_100EA8C60);
    v193 = v234;
    static Published.subscript.getter(v234, v260, v191, v192);
    swift_release(v192);
    swift_release(v191);
    v194 = v229;
    v195 = v229 + *(int *)(v228 + 48);
    sub_10004A160(v185, v229, &qword_10119F0B8);
    sub_10004A160((uint64_t)v193, v195, &qword_10119F0B8);
    if (v182(v194, 1, v186) == 1)
    {
      sub_10004FF60((uint64_t)v193, &qword_10119F0B8);
      sub_10004FF60(v185, &qword_10119F0B8);
      v196 = v182(v195, 1, v259);
      v197 = v252;
      if (v196 == 1)
      {
        sub_10004FF60(v194, &qword_10119F0B8);
        ((void (*)(char *, uint64_t))v197[1])(v240, v259);
        return sub_10008F348();
      }
    }
    else
    {
      v198 = v219;
      sub_10004A160(v194, v219, &qword_10119F0B8);
      if (v182(v195, 1, v259) != 1)
      {
        v199 = v216;
        v200 = v259;
        v258(v216, v195, v259);
        v201 = sub_1000A2FD4();
        v202 = v185;
        LODWORD(v258) = dispatch thunk of static Equatable.== infix(_:_:)(v198, v199, v200, v201);
        v197 = v252;
        v203 = (void (*)(char *, uint64_t))v252[1];
        v203(v199, v200);
        sub_10004FF60((uint64_t)v234, &qword_10119F0B8);
        sub_10004FF60(v202, &qword_10119F0B8);
        v203((char *)v198, v200);
        sub_10004FF60(v194, &qword_10119F0B8);
        if ((v258 & 1) != 0)
        {
          v203(v240, v259);
          return sub_10008F348();
        }
LABEL_43:
        v204 = (uint64_t)v222;
        v205 = v240;
        v206 = v259;
        v187((uint64_t)v222, v240, v259);
        v207 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v180)(v204, 0, 1, v206);
        __chkstk_darwin(v207);
        v208 = v261;
        v209 = v256;
        *(&v214 - 2) = v261;
        *(&v214 - 1) = v209;
        v210 = swift_getKeyPath(&unk_100EA8C28);
        __chkstk_darwin(v210);
        *(&v214 - 2) = v208;
        *(&v214 - 1) = v209;
        v211 = swift_getKeyPath(&unk_100EA8C60);
        v212 = v223;
        sub_10004A160(v204, v223, &qword_10119F0B8);
        v213 = v260;
        swift_retain(v260);
        static Published.subscript.setter(v212, v213, v210, v211);
        sub_10004FF60(v204, &qword_10119F0B8);
        ((void (*)(char *, uint64_t))v197[1])(v205, v206);
        return sub_10008F348();
      }
      sub_10004FF60((uint64_t)v234, &qword_10119F0B8);
      sub_10004FF60(v185, &qword_10119F0B8);
      v197 = v252;
      ((void (*)(uint64_t, uint64_t))v252[1])(v198, v259);
    }
    sub_10004FF60(v194, &qword_10119F208);
    goto LABEL_43;
  }
  sub_10004FF60(v177, &qword_1011A30F0);
  v178 = (uint64_t)v249;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v252[7])(v249, 1, 1, v259);
LABEL_33:
  sub_10004FF60(v178, &qword_10119F0B8);
  return sub_10008F348();
}

uint64_t sub_10008DAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t KeyPath;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(_QWORD, _QWORD, _QWORD);
  uint64_t v82;
  uint64_t (*v83)(_QWORD, _QWORD, _QWORD);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(_QWORD, _QWORD, _QWORD);
  _QWORD *v94;
  void (*v95)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v96)(uint64_t, uint64_t, _QWORD);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, _QWORD);
  char *v101;
  char *v102;
  uint64_t (*v103)(char *, _QWORD, uint64_t, void (*)(_QWORD, _QWORD, _QWORD));
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  char v117;
  void (*v118)(_QWORD, _QWORD);
  char *v119;
  uint64_t v120;
  void (*v121)(_QWORD, _QWORD, _QWORD);
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  __n128 v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  unsigned int (*v146)(uint64_t, uint64_t, uint64_t);
  uint64_t v147;
  char *v148;
  void (*v149)(char *, uint64_t, uint64_t);
  char *v150;
  void (*v151)(char *, char *, uint64_t);
  char *v152;
  uint64_t (*v153)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t (*v165)(char *, _QWORD, uint64_t, uint64_t);
  char *v166;
  unint64_t v167;
  char v168;
  void (*v169)(char *, uint64_t);
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unsigned int (*v181)(uint64_t, uint64_t, uint64_t);
  uint64_t v182;
  void (*v184)(char *, uint64_t, uint64_t);
  char *v185;
  uint64_t (*v186)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  unint64_t v197;
  char v198;
  void (*v199)(char *, uint64_t);
  uint64_t v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  _QWORD *v226;
  _QWORD *v227;
  _QWORD *v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  _QWORD *v232;
  char *v233;
  uint64_t v234;
  char *v235;
  char *v236;
  char *v237;
  char **v238;
  uint64_t (*v239)(_QWORD, _QWORD, _QWORD);
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  _QWORD *v253;
  void (*v254)(_QWORD, _QWORD, _QWORD);
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char v265[8];

  v3 = v2;
  v239 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))a2;
  v222 = sub_100007E8C(&qword_10119F208);
  __chkstk_darwin(v222);
  v223 = (uint64_t)&v209 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119F0B8);
  v7 = __chkstk_darwin(v6);
  v217 = (uint64_t)&v209 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v216 = (char *)&v209 - v10;
  v11 = __chkstk_darwin(v9);
  v213 = (uint64_t)&v209 - v12;
  v13 = __chkstk_darwin(v11);
  v228 = (char **)((char *)&v209 - v14);
  v15 = __chkstk_darwin(v13);
  v251 = (uint64_t)&v209 - v16;
  __chkstk_darwin(v15);
  v248 = (char *)&v209 - v17;
  v245 = sub_100007E8C((uint64_t *)&unk_1011ACAE0);
  v244 = *(_QWORD *)(v245 - 8);
  v18 = __chkstk_darwin(v245);
  v210 = (char *)&v209 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v236 = (char *)&v209 - v20;
  v219 = sub_100007E8C(&qword_10119F210);
  __chkstk_darwin(v219);
  v221 = (uint64_t)&v209 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A4150);
  v23 = __chkstk_darwin(v22);
  v215 = (uint64_t)&v209 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v214 = (char *)&v209 - v26;
  v27 = __chkstk_darwin(v25);
  v212 = (uint64_t)&v209 - v28;
  v29 = __chkstk_darwin(v27);
  v227 = (char **)((char *)&v209 - v30);
  v31 = __chkstk_darwin(v29);
  v220 = (char *)&v209 - v32;
  __chkstk_darwin(v31);
  v241 = (char *)&v209 - v33;
  v246 = sub_100007E8C((uint64_t *)&unk_1011D0B50);
  v250 = *(_QWORD *)(v246 - 8);
  v34 = __chkstk_darwin(v246);
  v209 = (char *)&v209 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v235 = (char *)&v209 - v36;
  v231 = sub_100007E8C(&qword_10119F218);
  __chkstk_darwin(v231);
  v234 = (uint64_t)&v209 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v38);
  v237 = (char *)&v209 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100007E8C(&qword_1011B1F10);
  v41 = __chkstk_darwin(v40);
  v225 = (uint64_t)&v209 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __chkstk_darwin(v41);
  v226 = (char **)((char *)&v209 - v44);
  v45 = __chkstk_darwin(v43);
  v224 = (char *)&v209 - v46;
  v47 = __chkstk_darwin(v45);
  v218 = (uint64_t)&v209 - v48;
  v49 = __chkstk_darwin(v47);
  v232 = (char **)((char *)&v209 - v50);
  v51 = __chkstk_darwin(v49);
  v233 = (char *)&v209 - v52;
  __chkstk_darwin(v51);
  v238 = (char **)((char *)&v209 - v53);
  v54 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v253 = *(_QWORD **)(v54 - 8);
  v254 = (void (*)(_QWORD, _QWORD, _QWORD))v54;
  v55 = __chkstk_darwin(v54);
  v211 = (char *)&v209 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v249 = (char *)&v209 - v57;
  v58 = sub_100007E8C(&qword_10119ED10);
  v59 = __chkstk_darwin(v58);
  v230 = (char *)&v209 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  v229 = (uint64_t)&v209 - v61;
  v62 = sub_100007E8C(&qword_1011A8FA0);
  v63 = __chkstk_darwin(v62);
  v243 = (uint64_t)&v209 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __chkstk_darwin(v63);
  v240 = (uint64_t)&v209 - v66;
  v67 = __chkstk_darwin(v65);
  v69 = (char *)&v209 - v68;
  v70 = __chkstk_darwin(v67);
  v72 = (char **)((char *)&v209 - v71);
  __chkstk_darwin(v70);
  v74 = (char *)&v209 - v73;
  v247 = a1;
  sub_10004A160(a1, (uint64_t)&v209 - v73, &qword_1011A8FA0);
  v75 = type metadata accessor for Album(0);
  v263 = v75;
  v76 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  v264 = v76;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  v261 = v75;
  v262 = v76;
  v78 = swift_getKeyPath(&unk_100EA8C08);
  static Published.subscript.getter(v72, v3, KeyPath, v78);
  swift_release(v78);
  swift_release(KeyPath);
  v259 = v75;
  v260 = v76;
  v79 = swift_getKeyPath(&unk_100EA8BD0);
  v257 = v75;
  v258 = v76;
  v252 = v76;
  v80 = swift_getKeyPath(&unk_100EA8C08);
  sub_10004A160((uint64_t)v74, (uint64_t)v69, &qword_1011A8FA0);
  swift_retain(v3);
  v256 = v3;
  static Published.subscript.setter(v69, v3, v79, v80);
  v242 = *(_QWORD *)(v75 - 8);
  v81 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v242 + 48);
  v255 = (char *)v75;
  v82 = v75;
  v83 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v81;
  if (v81(v72, 1, v82) == 1)
  {
    v84 = v256 + *(_QWORD *)(*(_QWORD *)v256 + 104);
    swift_beginAccess(v84, v265, 0, 0);
    v85 = v229;
    sub_10004A160(v84, v229, &qword_10119ED10);
    v86 = type metadata accessor for Library.Context(0);
    v87 = (uint64_t)v230;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v230, 1, 1, v86);
    LOBYTE(v84) = sub_1000805B8(v85, v87, &qword_10119ED10, &qword_10119EE40);
    sub_10004FF60(v87, &qword_10119ED10);
    sub_10004FF60(v85, &qword_10119ED10);
    if ((v84 & 1) != 0)
    {
      v88 = type metadata accessor for TaskPriority(0);
      v89 = (uint64_t)v237;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v237, 1, 1, v88);
      v90 = (_QWORD *)swift_allocObject(&unk_1010AFC98, 40, 7);
      v90[2] = 0;
      v90[3] = 0;
      v91 = v256;
      v90[4] = v256;
      swift_retain(v91);
      v92 = sub_100166D14(v89, (uint64_t)&unk_10119F258, (uint64_t)v90);
      swift_release(v92);
    }
  }
  sub_10004FF60((uint64_t)v74, &qword_1011A8FA0);
  sub_10004FF60((uint64_t)v72, &qword_1011A8FA0);
  v93 = (void (*)(_QWORD, _QWORD, _QWORD))v238;
  sub_10004A160((uint64_t)v239, (uint64_t)v238, &qword_1011B1F10);
  v94 = v253;
  v95 = v254;
  v96 = (unsigned int (*)(uint64_t, uint64_t, _QWORD))v253[6];
  if (v96((uint64_t)v93, 1, v254) == 1)
  {
    sub_10004FF60((uint64_t)v93, &qword_1011B1F10);
    v97 = (uint64_t)v248;
    v98 = v255;
    v99 = v246;
    goto LABEL_16;
  }
  v239 = v83;
  v100 = (void (*)(char *, uint64_t, _QWORD))v94[4];
  v101 = v249;
  v100(v249, (uint64_t)v93, v95);
  v102 = v233;
  v238 = (char **)v94[2];
  ((void (*)(char *, char *, _QWORD))v238)(v233, v101, v95);
  v103 = (uint64_t (*)(char *, _QWORD, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))v94[7];
  v104 = v103(v102, 0, 1, v95);
  __chkstk_darwin(v104);
  v105 = v255;
  v106 = (char *)v252;
  *(&v209 - 2) = v255;
  *(&v209 - 1) = v106;
  v107 = swift_getKeyPath(&unk_100EA8D88);
  __chkstk_darwin(v107);
  *(&v209 - 2) = v105;
  *(&v209 - 1) = v106;
  v108 = (uint64_t)v102;
  v109 = swift_getKeyPath(&unk_100EA8DC0);
  v110 = v232;
  static Published.subscript.getter(v232, v256, v107, v109);
  swift_release(v109);
  swift_release(v107);
  v111 = v234;
  v112 = v234 + *(int *)(v231 + 48);
  sub_10004A160(v108, v234, &qword_1011B1F10);
  sub_10004A160((uint64_t)v110, v112, &qword_1011B1F10);
  if (v96(v111, 1, v95) != 1)
  {
    v114 = v218;
    sub_10004A160(v111, v218, &qword_1011B1F10);
    if (v96(v112, 1, v95) != 1)
    {
      v231 = (uint64_t)v103;
      v115 = v211;
      v100(v211, v112, v95);
      v116 = sub_1000A31D4();
      v117 = dispatch thunk of static Equatable.== infix(_:_:)(v114, v115, v95, v116);
      v118 = (void (*)(_QWORD, _QWORD))v253[1];
      v119 = v115;
      v103 = (uint64_t (*)(char *, _QWORD, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))v231;
      v118(v119, v95);
      sub_10004FF60((uint64_t)v110, &qword_1011B1F10);
      sub_10004FF60(v108, &qword_1011B1F10);
      v118(v114, v95);
      sub_10004FF60(v111, &qword_1011B1F10);
      v98 = v255;
      v99 = v246;
      if ((v117 & 1) != 0)
      {
        v118(v249, v254);
        goto LABEL_15;
      }
LABEL_14:
      v120 = (uint64_t)v224;
      v121 = v254;
      ((void (*)(char *, char *, _QWORD))v238)(v224, v249, v254);
      v122 = v103((char *)v120, 0, 1, v121);
      __chkstk_darwin(v122);
      v123 = (char *)v252;
      *(&v209 - 2) = v98;
      *(&v209 - 1) = v123;
      v124 = swift_getKeyPath(&unk_100EA8D88);
      __chkstk_darwin(v124);
      *(&v209 - 2) = v98;
      *(&v209 - 1) = v123;
      v125 = swift_getKeyPath(&unk_100EA8DC0);
      v126 = v226;
      v127 = v256;
      static Published.subscript.getter(v226, v256, v124, v125);
      swift_release(v125);
      swift_release(v124);
      __chkstk_darwin(v128);
      *(&v209 - 2) = v98;
      *(&v209 - 1) = v123;
      v129 = swift_getKeyPath(&unk_100EA8D88);
      __chkstk_darwin(v129);
      *(&v209 - 2) = v98;
      *(&v209 - 1) = v123;
      v130 = swift_getKeyPath(&unk_100EA8DC0);
      v131 = v225;
      sub_10004A160(v120, v225, &qword_1011B1F10);
      swift_retain(v127);
      static Published.subscript.setter(v131, v127, v129, v130);
      sub_1000851DC((uint64_t)v126);
      sub_10004FF60(v120, &qword_1011B1F10);
      sub_10004FF60((uint64_t)v126, &qword_1011B1F10);
      v132 = type metadata accessor for TaskPriority(0);
      v133 = (uint64_t)v237;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v237, 1, 1, v132);
      v134 = swift_allocObject(&unk_1010AFC48, 24, 7);
      swift_weakInit(v134 + 16, v127);
      type metadata accessor for MainActor(0);
      v135 = swift_retain(v134);
      v136 = static MainActor.shared.getter(v135);
      v137 = (_QWORD *)swift_allocObject(&unk_1010AFC70, 40, 7);
      v137[2] = v136;
      v137[3] = &protocol witness table for MainActor;
      v137[4] = v134;
      swift_release(v134);
      v138 = sub_100166D14(v133, (uint64_t)&unk_10119F248, (uint64_t)v137);
      v139 = swift_release(v138);
      ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD), __n128))v253[1])(v249, v254, v139);
      goto LABEL_15;
    }
    sub_10004FF60((uint64_t)v110, &qword_1011B1F10);
    sub_10004FF60(v108, &qword_1011B1F10);
    ((void (*)(uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))v253[1])(v114, v95);
    v99 = v246;
LABEL_11:
    sub_10004FF60(v111, &qword_10119F218);
    v98 = v255;
    goto LABEL_14;
  }
  sub_10004FF60((uint64_t)v110, &qword_1011B1F10);
  sub_10004FF60(v108, &qword_1011B1F10);
  v113 = v96(v112, 1, v95);
  v99 = v246;
  if (v113 != 1)
    goto LABEL_11;
  sub_10004FF60(v111, &qword_1011B1F10);
  v98 = v255;
  ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v253[1])(v249, v254);
LABEL_15:
  v97 = (uint64_t)v248;
  v83 = v239;
LABEL_16:
  v140 = v247;
  v141 = v240;
  sub_10004A160(v247, v240, &qword_1011A8FA0);
  v142 = v83(v141, 1, v98);
  v143 = v251;
  v144 = (uint64_t)v241;
  if (v142 == 1)
  {
    sub_10004FF60(v141, &qword_1011A8FA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v250 + 56))(v144, 1, 1, v99);
LABEL_19:
    sub_10004FF60(v144, &qword_1011A4150);
    v147 = v244;
    goto LABEL_30;
  }
  Album.recordLabels.getter();
  (*(void (**)(uint64_t, char *))(v242 + 8))(v141, v98);
  v145 = (_QWORD *)v250;
  v146 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v250 + 48);
  if (v146(v144, 1, v99) == 1)
    goto LABEL_19;
  v239 = v83;
  v148 = v98;
  v149 = (void (*)(char *, uint64_t, uint64_t))v145[4];
  v150 = v235;
  v149(v235, v144, v99);
  v151 = (void (*)(char *, char *, uint64_t))v145[2];
  v152 = v220;
  v151(v220, v150, v99);
  v153 = (uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v145[7];
  v154 = v153(v152, 0, 1, v99);
  __chkstk_darwin(v154);
  v155 = (char *)v252;
  *(&v209 - 2) = v148;
  *(&v209 - 1) = v155;
  v156 = swift_getKeyPath(&unk_100EA8D30);
  __chkstk_darwin(v156);
  *(&v209 - 2) = v148;
  *(&v209 - 1) = v155;
  v157 = (uint64_t)v152;
  v158 = v246;
  v159 = swift_getKeyPath(&unk_100EA8D68);
  v160 = v227;
  static Published.subscript.getter(v227, v256, v156, v159);
  swift_release(v159);
  swift_release(v156);
  v161 = v221;
  v162 = v221 + *(int *)(v219 + 48);
  sub_10004A160(v157, v221, &qword_1011A4150);
  sub_10004A160((uint64_t)v160, v162, &qword_1011A4150);
  if (v146(v161, 1, v158) != 1)
  {
    v164 = v212;
    sub_10004A160(v161, v212, &qword_1011A4150);
    if (v146(v162, 1, v158) != 1)
    {
      v254 = (void (*)(_QWORD, _QWORD, _QWORD))v151;
      v165 = v153;
      v166 = v209;
      v149(v209, v162, v158);
      v167 = sub_1000A30AC();
      v168 = dispatch thunk of static Equatable.== infix(_:_:)(v164, v166, v158, v167);
      v169 = *(void (**)(char *, uint64_t))(v250 + 8);
      v170 = v166;
      v153 = v165;
      v151 = (void (*)(char *, char *, uint64_t))v254;
      v169(v170, v158);
      sub_10004FF60((uint64_t)v227, &qword_1011A4150);
      sub_10004FF60(v157, &qword_1011A4150);
      v169((char *)v164, v158);
      sub_10004FF60(v161, &qword_1011A4150);
      v147 = v244;
      v98 = v255;
      if ((v168 & 1) != 0)
      {
        v169(v235, v158);
        goto LABEL_29;
      }
LABEL_28:
      v171 = (uint64_t)v214;
      v172 = v235;
      v151(v214, v235, v158);
      v173 = v153((char *)v171, 0, 1, v158);
      __chkstk_darwin(v173);
      v174 = (char *)v252;
      *(&v209 - 2) = v98;
      *(&v209 - 1) = v174;
      v175 = swift_getKeyPath(&unk_100EA8D30);
      __chkstk_darwin(v175);
      *(&v209 - 2) = v98;
      *(&v209 - 1) = v174;
      v176 = swift_getKeyPath(&unk_100EA8D68);
      v177 = v158;
      v178 = v215;
      sub_10004A160(v171, v215, &qword_1011A4150);
      v179 = v256;
      swift_retain(v256);
      static Published.subscript.setter(v178, v179, v175, v176);
      sub_10004FF60(v171, &qword_1011A4150);
      (*(void (**)(char *, uint64_t))(v250 + 8))(v172, v177);
      goto LABEL_29;
    }
    sub_10004FF60((uint64_t)v227, &qword_1011A4150);
    sub_10004FF60(v157, &qword_1011A4150);
    (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v164, v158);
    v147 = v244;
LABEL_25:
    sub_10004FF60(v161, &qword_10119F210);
    v98 = v255;
    goto LABEL_28;
  }
  sub_10004FF60((uint64_t)v160, &qword_1011A4150);
  sub_10004FF60(v157, &qword_1011A4150);
  v163 = v146(v162, 1, v158);
  v147 = v244;
  if (v163 != 1)
    goto LABEL_25;
  sub_10004FF60(v161, &qword_1011A4150);
  v98 = v255;
  (*(void (**)(char *, uint64_t))(v250 + 8))(v235, v158);
LABEL_29:
  v143 = v251;
  v140 = v247;
  v97 = (uint64_t)v248;
  v83 = v239;
LABEL_30:
  v180 = v243;
  sub_10004A160(v140, v243, &qword_1011A8FA0);
  if (v83(v180, 1, v98) != 1)
  {
    Album.genres.getter();
    (*(void (**)(uint64_t, char *))(v242 + 8))(v180, v98);
    v181 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 48);
    v182 = v245;
    if (v181(v97, 1, v245) == 1)
      goto LABEL_33;
    v184 = *(void (**)(char *, uint64_t, uint64_t))(v147 + 32);
    v185 = v236;
    v184(v236, v97, v182);
    v254 = *(void (**)(_QWORD, _QWORD, _QWORD))(v147 + 16);
    v254(v143, v185, v182);
    v186 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v147 + 56);
    v187 = v186(v143, 0, 1, v182);
    __chkstk_darwin(v187);
    v188 = (char *)v252;
    *(&v209 - 2) = v98;
    *(&v209 - 1) = v188;
    v189 = swift_getKeyPath(&unk_100EA8C28);
    __chkstk_darwin(v189);
    *(&v209 - 2) = v190;
    *(&v209 - 1) = v188;
    v191 = swift_getKeyPath(&unk_100EA8C60);
    v192 = v228;
    static Published.subscript.getter(v228, v256, v189, v191);
    swift_release(v191);
    swift_release(v189);
    v193 = v223;
    v194 = v223 + *(int *)(v222 + 48);
    sub_10004A160(v143, v223, &qword_10119F0B8);
    sub_10004A160((uint64_t)v192, v194, &qword_10119F0B8);
    if (v181(v193, 1, v182) == 1)
    {
      sub_10004FF60((uint64_t)v192, &qword_10119F0B8);
      sub_10004FF60(v143, &qword_10119F0B8);
      if (v181(v194, 1, v182) == 1)
      {
        sub_10004FF60(v193, &qword_10119F0B8);
        (*(void (**)(char *, uint64_t))(v147 + 8))(v236, v182);
        return sub_10008FAD0();
      }
    }
    else
    {
      v195 = v213;
      sub_10004A160(v193, v213, &qword_10119F0B8);
      if (v181(v194, 1, v182) != 1)
      {
        v196 = v210;
        v184(v210, v194, v182);
        v197 = sub_1000A2FD4();
        v198 = dispatch thunk of static Equatable.== infix(_:_:)(v195, v196, v182, v197);
        v199 = *(void (**)(char *, uint64_t))(v147 + 8);
        v199(v196, v182);
        sub_10004FF60((uint64_t)v228, &qword_10119F0B8);
        sub_10004FF60(v251, &qword_10119F0B8);
        v199((char *)v195, v182);
        sub_10004FF60(v193, &qword_10119F0B8);
        if ((v198 & 1) != 0)
        {
          v199(v236, v182);
          return sub_10008FAD0();
        }
LABEL_43:
        v200 = (uint64_t)v216;
        v201 = v236;
        v254(v216, v236, v182);
        v202 = v186(v200, 0, 1, v182);
        __chkstk_darwin(v202);
        v203 = v255;
        v204 = (char *)v252;
        *(&v209 - 2) = v255;
        *(&v209 - 1) = v204;
        v205 = swift_getKeyPath(&unk_100EA8C28);
        __chkstk_darwin(v205);
        *(&v209 - 2) = v203;
        *(&v209 - 1) = v204;
        v206 = swift_getKeyPath(&unk_100EA8C60);
        v207 = v217;
        sub_10004A160(v200, v217, &qword_10119F0B8);
        v208 = v256;
        swift_retain(v256);
        static Published.subscript.setter(v207, v208, v205, v206);
        sub_10004FF60(v200, &qword_10119F0B8);
        (*(void (**)(char *, uint64_t))(v147 + 8))(v201, v182);
        return sub_10008FAD0();
      }
      sub_10004FF60((uint64_t)v228, &qword_10119F0B8);
      sub_10004FF60(v251, &qword_10119F0B8);
      (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v195, v182);
    }
    sub_10004FF60(v193, &qword_10119F208);
    goto LABEL_43;
  }
  sub_10004FF60(v180, &qword_1011A8FA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56))(v97, 1, 1, v245);
LABEL_33:
  sub_10004FF60(v97, &qword_10119F0B8);
  return sub_10008FAD0();
}

uint64_t sub_10008F348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  void *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011ACAE0);
  v74 = *(_QWORD *)(v2 - 8);
  v75 = v2;
  __chkstk_darwin(v2);
  v73 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119F0B8);
  __chkstk_darwin(v4);
  v81 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v6);
  v76 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119F380);
  __chkstk_darwin(v8);
  v82 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119F318);
  v11 = __chkstk_darwin(v10);
  v80 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v77 = (uint64_t *)((char *)&v69 - v13);
  v14 = sub_100007E8C(&qword_10119F388);
  __chkstk_darwin(v14);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_10119F390);
  v78 = *(char **)(v17 - 8);
  v79 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v20);
  v22 = (id *)((char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = (_QWORD *)type metadata accessor for Playlist(0);
  v24 = *(v23 - 1);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = v25;
  v29 = sub_100048748((unint64_t *)&unk_10119EDD8, v28, (uint64_t)&unk_100EAEF4C);
  v86 = v29;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  v83 = v23;
  v84 = v29;
  v31 = swift_getKeyPath(&unk_100EA8C08);
  static Published.subscript.getter(v22, v1, KeyPath, v31);
  swift_release(KeyPath);
  v32 = v31;
  v33 = v24;
  v34 = swift_release(v32);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, _QWORD *, __n128))(v24 + 48))(v22, 1, v23, v34) == 1)
    return sub_10004FF60((uint64_t)v22, &qword_1011A30F0);
  v71 = (void *)v29;
  v72 = v19;
  v36 = (uint64_t)v80;
  v37 = v81;
  (*(void (**)(char *, _QWORD *, _QWORD *))(v24 + 32))(v27, v22, v23);
  v38 = (uint64_t)v16;
  sub_100085568(v16);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v78 + 6))(v16, 1, v79) == 1)
  {
    (*(void (**)(char *, _QWORD *))(v33 + 8))(v27, v23);
    return sub_10004FF60((uint64_t)v16, &qword_10119F388);
  }
  else
  {
    v78 = v27;
    v79 = v33;
    v39 = (uint64_t)v72;
    sub_100065228(v38, (uint64_t)v72, &qword_10119F390);
    v40 = v82;
    sub_10004A160(v39, v82, &qword_10119F390);
    v41 = sub_100007E8C(&qword_10119F398);
    v42 = v40 + *(int *)(v41 + 36);
    v43 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 1, 1, v43);
    v44 = sub_100007E8C(&qword_10119F3A0);
    swift_storeEnumTagMultiPayload(v42, v44, 0);
    *(_BYTE *)(v40 + *(int *)(v41 + 40)) = 2;
    v45 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
    v46 = *(void **)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 208));
    __chkstk_darwin(v45);
    v47 = v71;
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v47;
    v48 = swift_getKeyPath(&unk_100EA8C28);
    __chkstk_darwin(v48);
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v47;
    v49 = swift_getKeyPath(&unk_100EA8C60);
    v70 = v46;
    v69 = v46;
    v50 = (uint64_t)v37;
    static Published.subscript.getter(v37, v1, v48, v49);
    swift_release(v48);
    v51 = swift_release(v49);
    v53 = v74;
    v52 = v75;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v74 + 48))(v50, 1, v75, v51))
    {
      sub_10004FF60(v50, &qword_10119F0B8);
      v54 = type metadata accessor for Genre(0);
      v55 = v76;
      v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v76, 1, 1, v54);
    }
    else
    {
      v57 = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v73, v50, v52);
      sub_10004FF60(v50, &qword_10119F0B8);
      v55 = v76;
      sub_10031E308(v76);
      v56 = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v57, v52);
    }
    v58 = v77;
    __chkstk_darwin(v56);
    v59 = v71;
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v59;
    v60 = swift_getKeyPath(&unk_100EA8C80);
    __chkstk_darwin(v60);
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v59;
    v61 = swift_getKeyPath(&unk_100EA8CB8);
    static Published.subscript.getter(&v87, v1, v60, v61);
    swift_release(v60);
    swift_release(v61);
    v62 = v88;
    v63 = v82;
    v64 = v78;
    sub_100217B6C(v82, v70, v87, v88, v58);

    swift_bridgeObjectRelease(v62);
    sub_10004FF60(v55, &qword_10119ED08);
    sub_10004FF60(v63, &qword_10119F380);
    v65 = sub_100007E8C(&qword_10119F368);
    v66 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v58, 0, 1, v65);
    __chkstk_darwin(v66);
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v59;
    v67 = swift_getKeyPath(&unk_100EA8CD8);
    __chkstk_darwin(v67);
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v59;
    v68 = swift_getKeyPath(&unk_100EA8D10);
    sub_10004A160((uint64_t)v58, v36, &qword_10119F318);
    swift_retain(v1);
    static Published.subscript.setter(v36, v1, v67, v68);
    sub_10004FF60((uint64_t)v58, &qword_10119F318);
    sub_10004FF60((uint64_t)v72, &qword_10119F390);
    return (*(uint64_t (**)(char *, _QWORD *))(v79 + 8))(v64, v23);
  }
}

uint64_t sub_10008FAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  void *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011ACAE0);
  v74 = *(_QWORD *)(v2 - 8);
  v75 = v2;
  __chkstk_darwin(v2);
  v73 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119F0B8);
  __chkstk_darwin(v4);
  v81 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v6);
  v76 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119F140);
  __chkstk_darwin(v8);
  v82 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119F080);
  v11 = __chkstk_darwin(v10);
  v80 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v77 = (uint64_t *)((char *)&v69 - v13);
  v14 = sub_100007E8C(&qword_10119F148);
  __chkstk_darwin(v14);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_10119F150);
  v78 = *(char **)(v17 - 8);
  v79 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v20);
  v22 = (id *)((char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = (_QWORD *)type metadata accessor for Album(0);
  v24 = *(v23 - 1);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = v25;
  v29 = sub_100048748(&qword_10119EDC8, v28, (uint64_t)&unk_100EAEF20);
  v86 = v29;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  v83 = v23;
  v84 = v29;
  v31 = swift_getKeyPath(&unk_100EA8C08);
  static Published.subscript.getter(v22, v1, KeyPath, v31);
  swift_release(KeyPath);
  v32 = v31;
  v33 = v24;
  v34 = swift_release(v32);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, _QWORD *, __n128))(v24 + 48))(v22, 1, v23, v34) == 1)
    return sub_10004FF60((uint64_t)v22, &qword_1011A8FA0);
  v71 = (void *)v29;
  v72 = v19;
  v36 = (uint64_t)v80;
  v37 = v81;
  (*(void (**)(char *, _QWORD *, _QWORD *))(v24 + 32))(v27, v22, v23);
  v38 = (uint64_t)v16;
  sub_10008589C(v16);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v78 + 6))(v16, 1, v79) == 1)
  {
    (*(void (**)(char *, _QWORD *))(v33 + 8))(v27, v23);
    return sub_10004FF60((uint64_t)v16, &qword_10119F148);
  }
  else
  {
    v78 = v27;
    v79 = v33;
    v39 = (uint64_t)v72;
    sub_100065228(v38, (uint64_t)v72, &qword_10119F150);
    v40 = v82;
    sub_10004A160(v39, v82, &qword_10119F150);
    v41 = sub_100007E8C(&qword_10119F158);
    v42 = v40 + *(int *)(v41 + 36);
    v43 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 1, 1, v43);
    v44 = sub_100007E8C(&qword_10119F160);
    swift_storeEnumTagMultiPayload(v42, v44, 0);
    *(_BYTE *)(v40 + *(int *)(v41 + 40)) = 2;
    v45 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
    v46 = *(void **)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 208));
    __chkstk_darwin(v45);
    v47 = v71;
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v47;
    v48 = swift_getKeyPath(&unk_100EA8C28);
    __chkstk_darwin(v48);
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v47;
    v49 = swift_getKeyPath(&unk_100EA8C60);
    v70 = v46;
    v69 = v46;
    v50 = (uint64_t)v37;
    static Published.subscript.getter(v37, v1, v48, v49);
    swift_release(v48);
    v51 = swift_release(v49);
    v53 = v74;
    v52 = v75;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v74 + 48))(v50, 1, v75, v51))
    {
      sub_10004FF60(v50, &qword_10119F0B8);
      v54 = type metadata accessor for Genre(0);
      v55 = v76;
      v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v76, 1, 1, v54);
    }
    else
    {
      v57 = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v73, v50, v52);
      sub_10004FF60(v50, &qword_10119F0B8);
      v55 = v76;
      sub_10031E308(v76);
      v56 = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v57, v52);
    }
    v58 = v77;
    __chkstk_darwin(v56);
    v59 = v71;
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v59;
    v60 = swift_getKeyPath(&unk_100EA8C80);
    __chkstk_darwin(v60);
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v59;
    v61 = swift_getKeyPath(&unk_100EA8CB8);
    static Published.subscript.getter(&v87, v1, v60, v61);
    swift_release(v60);
    swift_release(v61);
    v62 = v88;
    v63 = v82;
    v64 = v78;
    sub_100216530(v82, v70, v55, v87, v88, v58);

    swift_bridgeObjectRelease(v62);
    sub_10004FF60(v55, &qword_10119ED08);
    sub_10004FF60(v63, &qword_10119F140);
    v65 = sub_100007E8C(&qword_10119F128);
    v66 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v58, 0, 1, v65);
    __chkstk_darwin(v66);
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v59;
    v67 = swift_getKeyPath(&unk_100EA8CD8);
    __chkstk_darwin(v67);
    *(&v69 - 2) = v23;
    *(&v69 - 1) = v59;
    v68 = swift_getKeyPath(&unk_100EA8D10);
    sub_10004A160((uint64_t)v58, v36, &qword_10119F080);
    swift_retain(v1);
    static Published.subscript.setter(v36, v1, v67, v68);
    sub_10004FF60((uint64_t)v58, &qword_10119F080);
    sub_10004FF60((uint64_t)v72, &qword_10119F150);
    return (*(uint64_t (**)(char *, _QWORD *))(v79 + 8))(v64, v23);
  }
}

uint64_t sub_100090258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = sub_100007E8C(&qword_1011B1F10);
  v3[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicPropertySource(0);
  v3[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[7] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[8] = swift_task_alloc(v7);
  v3[9] = swift_task_alloc(v7);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[10] = swift_task_alloc(v8);
  v3[11] = swift_task_alloc(v8);
  v3[12] = swift_task_alloc(v8);
  v3[13] = swift_task_alloc(v8);
  v9 = type metadata accessor for Album(0);
  v3[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[15] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v11);
  v3[17] = swift_task_alloc(v11);
  v3[18] = swift_task_alloc(v11);
  v3[19] = swift_task_alloc(v11);
  v3[20] = swift_task_alloc(v11);
  v12 = sub_100007E8C(&qword_10119F1D8);
  v3[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000903BC, 0, 0);
}

uint64_t sub_1000903BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 168);
  sub_10004A160(*(_QWORD *)(v0 + 24), v1, &qword_10119F1D8);
  v2 = sub_100007E8C(&qword_10119ED10);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  v4 = *(_QWORD *)(v0 + 168);
  if (v3 == 1)
  {
    v5 = &qword_10119F1D8;
    v6 = *(_QWORD *)(v0 + 168);
LABEL_6:
    sub_10004FF60(v6, v5);
    goto LABEL_7;
  }
  v7 = type metadata accessor for Library.Context(0);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7);
  sub_10004FF60(v4, &qword_10119ED10);
  if (v8 == 1)
  {
LABEL_7:
    v12 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v19 = *(_QWORD *)(v0 + 88);
    v38 = *(_QWORD *)(v0 + 72);
    v39 = *(_QWORD *)(v0 + 64);
    v40 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 104);
  sub_10004A160(*(_QWORD *)(v0 + 16), v11, &qword_1011A8FA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    v6 = *(_QWORD *)(v0 + 104);
    v5 = &qword_1011A8FA0;
    goto LABEL_6;
  }
  v23 = *(_QWORD *)(v0 + 152);
  v22 = *(_QWORD *)(v0 + 160);
  v24 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 112);
  v26 = *(_QWORD *)(v0 + 120);
  v27 = *(_QWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 72);
  v29 = *(_QWORD *)(v0 + 56);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32);
  *(_QWORD *)(v0 + 176) = v30;
  v30(v23, v27, v25);
  v30(v22, v23, v25);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
  *(_QWORD *)(v0 + 184) = v31;
  v31(v24, v22, v25);
  v32 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  *(_QWORD *)(v0 + 192) = v32;
  v33 = swift_allocObject(v32, 40, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v0 + 200) = sub_100007E8C((uint64_t *)&unk_1011B6AB0);
  v34 = static PartialMusicProperty<A>.recordLabels.getter();
  *(_QWORD *)(v33 + 32) = v34;
  specialized Array._endMutation()(v34);
  *(_QWORD *)(v0 + 208) = v33;
  *(_DWORD *)(v0 + 296) = enum case for MusicPropertySource.catalog(_:);
  v35 = *(void (**)(uint64_t))(v29 + 104);
  *(_QWORD *)(v0 + 216) = v35;
  v35(v28);
  v36 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
  *(_QWORD *)(v0 + 224) = v36;
  v37 = sub_100048748(&qword_10119F200, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
  *(_QWORD *)(v0 + 232) = v37;
  *v36 = v0;
  v36[1] = sub_1000906D0;
  return MusicItem<>.with(_:preferredSource:)(*(_QWORD *)(v0 + 96), v33, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 112), &protocol witness table for Album, &protocol witness table for Album, v37);
}

uint64_t sub_1000906D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t (*v8)();
  void (*v9)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 224));
  v3 = v2[26];
  v4 = v2[9];
  v5 = v2[6];
  v6 = v2[7];
  if (v0)
  {
    swift_bridgeObjectRelease(v2[26]);
    swift_errorRelease(v0);
    v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v2[31] = v7;
    v7(v4, v5);
    v8 = sub_1000908D4;
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v2[30] = v9;
    v9(v4, v5);
    swift_bridgeObjectRelease(v3);
    v8 = sub_10009078C;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_10009078C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 176);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56);
  v7(v6, 0, 1, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v1(v2, v6, v4);
  v1(v3, v2, v4);
  v8 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 256) = v7;
  *(_QWORD *)(v0 + 264) = v8;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 216);
  v10 = *(unsigned int *)(v0 + 296);
  v11 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 48);
  v13 = swift_allocObject(*(_QWORD *)(v0 + 192), 40, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100EA7A90;
  v14 = static PartialMusicProperty<A>.genres.getter();
  *(_QWORD *)(v13 + 32) = v14;
  specialized Array._endMutation()(v14);
  *(_QWORD *)(v0 + 272) = v13;
  v9(v11, v10, v12);
  v15 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
  *(_QWORD *)(v0 + 280) = v15;
  *v15 = v0;
  v15[1] = sub_1000909F0;
  return MusicItem<>.with(_:preferredSource:)(*(_QWORD *)(v0 + 88), v13, *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 112), &protocol witness table for Album, &protocol witness table for Album, *(_QWORD *)(v0 + 232));
}

uint64_t sub_1000908D4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 56);
  v2(v1, 1, 1, *(_QWORD *)(v0 + 112));
  sub_10004FF60(v1, &qword_1011A8FA0);
  v3 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 256) = v2;
  *(_QWORD *)(v0 + 264) = v3;
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 216);
  v5 = *(unsigned int *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = swift_allocObject(*(_QWORD *)(v0 + 192), 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EA7A90;
  v9 = static PartialMusicProperty<A>.genres.getter();
  *(_QWORD *)(v8 + 32) = v9;
  specialized Array._endMutation()(v9);
  *(_QWORD *)(v0 + 272) = v8;
  v4(v6, v5, v7);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
  *(_QWORD *)(v0 + 280) = v10;
  *v10 = v0;
  v10[1] = sub_1000909F0;
  return MusicItem<>.with(_:preferredSource:)(*(_QWORD *)(v0 + 88), v8, *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 112), &protocol witness table for Album, &protocol witness table for Album, *(_QWORD *)(v0 + 232));
}

uint64_t sub_1000909F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 280));
  v4 = (void (*)(uint64_t, uint64_t))v2[33];
  v3 = v2[34];
  v5 = v2[8];
  v6 = v2[6];
  if (v0)
  {
    swift_bridgeObjectRelease(v3);
    swift_errorRelease(v0);
    v4(v5, v6);
    v7 = sub_100090BD0;
  }
  else
  {
    v4(v5, v6);
    swift_bridgeObjectRelease(v3);
    v7 = sub_100090A9C;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100090A9C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 176);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 256))(v6, 0, 1, v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  v1(v3, v6, v5);
  v1(v2, v3, v5);
  v7 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 256);
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 184))(v9, *(_QWORD *)(v0 + 144), v8);
  v7(v9, 0, 1, v8);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 288) = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  return swift_task_switch(sub_100090CCC, v14, v15);
}

uint64_t sub_100090BD0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 256))(v1, 1, 1, *(_QWORD *)(v0 + 112));
  sub_10004FF60(v1, &qword_1011A8FA0);
  v2 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 256);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 184))(v4, *(_QWORD *)(v0 + 144), v3);
  v2(v4, 0, 1, v3);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 288) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_100090CCC, v9, v10);
}

uint64_t sub_100090CCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[10];
  v2 = v0[5];
  swift_release(v0[36]);
  sub_10008DAE4(v1, v2);
  sub_10004FF60(v2, &qword_1011B1F10);
  sub_10004FF60(v1, &qword_1011A8FA0);
  return swift_task_switch(sub_100090D44, 0, 0);
}

uint64_t sub_100090D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 8);
  v3(*(_QWORD *)(v0 + 144), v2);
  v3(v1, v2);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100090E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D0BB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[6] = swift_task_alloc(v4);
  v3[7] = swift_task_alloc(v4);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v3[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[11] = swift_task_alloc(v7);
  v3[12] = swift_task_alloc(v7);
  v8 = type metadata accessor for Playlist(0);
  v3[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[14] = v9;
  v3[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v3[16] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v3[17] = v12;
  v3[18] = v13;
  return swift_task_switch(sub_100090F68, v12, v13);
}

uint64_t sub_100090F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_10004A160(*(_QWORD *)(v0 + 24), v3, &qword_1011A30F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 96);
    swift_release(*(_QWORD *)(v0 + 128));
    v5 = &qword_1011A30F0;
    v6 = v4;
LABEL_5:
    sub_10004FF60(v6, v5);
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 48);
    v16 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v14);
    swift_task_dealloc(v13);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_QWORD *)(v0 + 32);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  sub_10004A160(v10, v9, (uint64_t *)&unk_1011D0BB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    v11 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 56);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
    swift_release(v11);
    v5 = (uint64_t *)&unk_1011D0BB0;
    v6 = v12;
    goto LABEL_5;
  }
  v20 = *(_QWORD *)(v0 + 112);
  v19 = *(_QWORD *)(v0 + 120);
  v21 = *(_QWORD *)(v0 + 104);
  v23 = *(_QWORD *)(v0 + 80);
  v22 = *(_QWORD *)(v0 + 88);
  v24 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 32))(v23, *(_QWORD *)(v0 + 56), v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v23, v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v22, v19, v21);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v21);
  v27 = (_QWORD *)swift_task_alloc(dword_10119F47C);
  *(_QWORD *)(v0 + 152) = v27;
  *v27 = v0;
  v27[1] = sub_100091174;
  return sub_100091B9C(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 88));
}

uint64_t sub_100091174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = a1;
  swift_task_dealloc(v2);
  sub_10004FF60(v3, &qword_1011A30F0);
  sub_10004FF60(v4, (uint64_t *)&unk_1011D0BB0);
  return swift_task_switch(sub_1000911F8, 0, 0);
}

uint64_t sub_1000911F8()
{
  _QWORD *v0;

  v0[21] = sub_10004262C((uint64_t)_swiftEmptyArrayStorage);
  return swift_task_switch(sub_100091238, v0[17], v0[18]);
}

uint64_t sub_100091238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t KeyPath;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 104);
  v19 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease(v1);
  v8 = (_QWORD *)swift_task_alloc(16);
  *v8 = v3;
  v9 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
  v8[1] = v9;
  KeyPath = swift_getKeyPath(&unk_100EA8F98);
  swift_task_dealloc(v8);
  v11 = (_QWORD *)swift_task_alloc(16);
  *v11 = v3;
  v11[1] = v9;
  v12 = swift_getKeyPath(&unk_100EA8FD0);
  swift_task_dealloc(v11);
  *(_QWORD *)(v0 + 16) = v2;
  swift_retain(v7);
  static Published.subscript.setter(v0 + 16, v7, KeyPath, v12);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v3);
  v13 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 80);
  v17 = *(_QWORD *)(v0 + 48);
  v16 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v14);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000913A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011B1F10) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[9] = swift_task_alloc(v5);
  v4[10] = swift_task_alloc(v5);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v4[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[12] = v7;
  v4[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[14] = swift_task_alloc(v8);
  v4[15] = swift_task_alloc(v8);
  v9 = type metadata accessor for Album(0);
  v4[16] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[17] = v10;
  v4[18] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v4[19] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v4[20] = v13;
  v4[21] = v14;
  return swift_task_switch(sub_1000914D0, v13, v14);
}

uint64_t sub_1000914D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  void (*v28)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t, uint64_t);
  void (*v30)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v31;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_10004A160(*(_QWORD *)(v0 + 40), v3, &qword_1011A8FA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 120);
    swift_release(*(_QWORD *)(v0 + 152));
    v5 = &qword_1011A8FA0;
    v6 = v4;
LABEL_5:
    sub_10004FF60(v6, v5);
    v13 = *(_QWORD *)(v0 + 112);
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 104);
    v17 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v14);
    swift_task_dealloc(v13);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 48);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 32))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  sub_10004A160(v10, v9, &qword_1011B1F10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    v11 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    swift_release(v11);
    v5 = &qword_1011B1F10;
    v6 = v12;
    goto LABEL_5;
  }
  v20 = *(_QWORD *)(v0 + 136);
  v19 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD *)(v0 + 112);
  v24 = *(_QWORD *)(v0 + 88);
  v25 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 32))(v23, *(_QWORD *)(v0 + 80), v24);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
  *(_QWORD *)(v0 + 176) = v27;
  v27(v26, v23, v24);
  v28 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56);
  *(_QWORD *)(v0 + 184) = v28;
  v28(v26, 0, 1, v24);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  *(_QWORD *)(v0 + 192) = v29;
  v29(v22, v19, v21);
  v30 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56);
  *(_QWORD *)(v0 + 200) = v30;
  v30(v22, 0, 1, v21);
  v31 = (_QWORD *)swift_task_alloc(dword_10119F26C);
  *(_QWORD *)(v0 + 208) = v31;
  *v31 = v0;
  v31[1] = sub_1000916EC;
  return sub_10009386C(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 112));
}

uint64_t sub_1000916EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  v4 = *(_QWORD *)(*v1 + 112);
  v5 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 216) = a1;
  swift_task_dealloc(v3);
  sub_10004FF60(v4, &qword_1011A8FA0);
  sub_10004FF60(v5, &qword_1011B1F10);
  return swift_task_switch(sub_100091774, *(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 168));
}

uint64_t sub_100091774()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 200);
  v3 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 184);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 176))(v8, *(_QWORD *)(v0 + 104), v7);
  v3(v8, 0, 1, v7);
  v2(v6, v4, v5);
  v1(v6, 0, 1, v5);
  v9 = (_QWORD *)swift_task_alloc(dword_10119F274);
  *(_QWORD *)(v0 + 224) = v9;
  *v9 = v0;
  v9[1] = sub_100091840;
  return sub_1000954E0(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 56));
}

uint64_t sub_100091840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 224);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 112);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  v3[29] = a1;
  v3[30] = a2;
  swift_task_dealloc(v4);
  sub_10004FF60(v5, &qword_1011A8FA0);
  sub_10004FF60(v6, &qword_1011B1F10);
  return swift_task_switch(sub_1000918C8, v3[20], v3[21]);
}

uint64_t sub_1000918C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t KeyPath;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 152));
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 232);
    v3 = *(_QWORD *)(v0 + 240);
    v4 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 136);
    v36 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));
    v7 = (_QWORD *)swift_task_alloc(16);
    *v7 = v4;
    v8 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
    v7[1] = v8;
    KeyPath = swift_getKeyPath(&unk_100EA8EE8);
    swift_task_dealloc(v7);
    v10 = (_QWORD *)swift_task_alloc(16);
    *v10 = v4;
    v10[1] = v8;
    v11 = swift_getKeyPath(&unk_100EA8F20);
    swift_task_dealloc(v10);
    *(_QWORD *)(v0 + 16) = v3;
    swift_retain(v6);
    static Published.subscript.setter(v0 + 16, v6, KeyPath, v11);
    v12 = (_QWORD *)swift_task_alloc(16);
    *v12 = v4;
    v12[1] = v8;
    v13 = swift_getKeyPath(&unk_100EA8F40);
    swift_task_dealloc(v12);
    v14 = (_QWORD *)swift_task_alloc(16);
    *v14 = v4;
    v14[1] = v8;
    v15 = swift_getKeyPath(&unk_100EA8F78);
    swift_task_dealloc(v14);
    *(_QWORD *)(v0 + 24) = v2;
    swift_retain(v6);
    static Published.subscript.setter(v0 + 24, v6, v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v34, v33);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 240);
    v17 = *(_QWORD *)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 136);
    v36 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 232));
    swift_bridgeObjectRelease(v16);
    v22 = (_QWORD *)swift_task_alloc(16);
    *v22 = v4;
    v23 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
    v22[1] = v23;
    v24 = swift_getKeyPath(&unk_100EA8F98);
    swift_task_dealloc(v22);
    v25 = (_QWORD *)swift_task_alloc(16);
    *v25 = v4;
    v25[1] = v23;
    v26 = swift_getKeyPath(&unk_100EA8FD0);
    swift_task_dealloc(v25);
    *(_QWORD *)(v0 + 32) = v17;
    swift_retain(v21);
    static Published.subscript.setter(v0 + 32, v21, v24, v26);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
  }
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v4);
  v27 = *(_QWORD *)(v0 + 112);
  v28 = *(_QWORD *)(v0 + 120);
  v29 = *(_QWORD *)(v0 + 104);
  v31 = *(_QWORD *)(v0 + 72);
  v30 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v28);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100091B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  v4 = sub_100007E8C(&qword_10119F480);
  v3[14] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[15] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v6);
  v3[17] = swift_task_alloc(v6);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F488) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[18] = swift_task_alloc(v7);
  v3[19] = swift_task_alloc(v7);
  v8 = sub_100007E8C(&qword_10119F390);
  v3[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[21] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[22] = swift_task_alloc(v10);
  v3[23] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F388) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[24] = swift_task_alloc(v11);
  v3[25] = swift_task_alloc(v11);
  v3[26] = swift_task_alloc(v11);
  v3[27] = swift_task_alloc(v11);
  v12 = type metadata accessor for Library.Context(0);
  v3[28] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[29] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[30] = swift_task_alloc(v14);
  v3[31] = swift_task_alloc(v14);
  v3[32] = swift_task_alloc(v14);
  v15 = sub_100007E8C(&qword_10119EE48);
  v3[33] = v15;
  v3[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C5B80) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[35] = swift_task_alloc(v16);
  v3[36] = swift_task_alloc(v16);
  v3[37] = swift_task_alloc(v16);
  v3[38] = swift_task_alloc(v16);
  v3[39] = swift_task_alloc(v16);
  v3[40] = swift_task_alloc(v16);
  v17 = sub_100007E8C(&qword_10119F380);
  v3[41] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Playlist.Entry(0);
  v3[42] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v3[43] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[44] = swift_task_alloc(v20);
  v3[45] = swift_task_alloc(v20);
  v21 = sub_100007E8C((uint64_t *)&unk_1011D0D00);
  v3[46] = v21;
  v22 = (*(_QWORD *)(*(_QWORD *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[47] = swift_task_alloc(v22);
  v3[48] = swift_task_alloc(v22);
  v23 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  v3[49] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v23 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v3[50] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v3[51] = v25;
  v26 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[52] = swift_task_alloc(v26);
  v3[53] = swift_task_alloc(v26);
  v27 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[54] = swift_task_alloc(v27);
  v3[55] = swift_task_alloc(v27);
  v3[56] = swift_task_alloc(v27);
  v28 = type metadata accessor for Playlist(0);
  v3[57] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v3[58] = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[59] = swift_task_alloc(v30);
  v3[60] = swift_task_alloc(v30);
  v3[61] = swift_task_alloc(v30);
  return swift_task_switch(sub_100091F18, 0, 0);
}

uint64_t sub_100091F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, _QWORD);
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int (*v56)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t KeyPath;
  _QWORD *v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 448);
  sub_10004A160(*(_QWORD *)(v0 + 96), v3, &qword_1011A30F0);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v0 + 496) = v4;
  if (v4(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 448), &qword_1011A30F0);
LABEL_7:
    v33 = *(_QWORD *)(v0 + 480);
    v34 = *(_QWORD *)(v0 + 472);
    v36 = *(_QWORD *)(v0 + 440);
    v35 = *(_QWORD *)(v0 + 448);
    v38 = *(_QWORD *)(v0 + 424);
    v37 = *(_QWORD *)(v0 + 432);
    v39 = *(_QWORD *)(v0 + 416);
    v40 = *(_QWORD *)(v0 + 384);
    v41 = *(_QWORD *)(v0 + 392);
    v116 = *(_QWORD *)(v0 + 376);
    v117 = *(_QWORD *)(v0 + 360);
    v118 = *(_QWORD *)(v0 + 352);
    v119 = *(_QWORD *)(v0 + 328);
    v120 = *(_QWORD *)(v0 + 320);
    v121 = *(_QWORD *)(v0 + 312);
    v122 = *(_QWORD *)(v0 + 304);
    v123 = *(_QWORD *)(v0 + 296);
    v124 = *(_QWORD *)(v0 + 288);
    v125 = *(_QWORD *)(v0 + 280);
    v126 = *(_QWORD *)(v0 + 272);
    v127 = *(_QWORD *)(v0 + 256);
    v128 = *(_QWORD *)(v0 + 248);
    v130 = *(_QWORD *)(v0 + 240);
    v132 = *(_QWORD *)(v0 + 216);
    v134 = *(_QWORD *)(v0 + 208);
    v136 = *(_QWORD *)(v0 + 200);
    v138 = *(_QWORD *)(v0 + 192);
    v140 = *(_QWORD *)(v0 + 184);
    v142 = *(_QWORD *)(v0 + 176);
    v144 = *(_QWORD *)(v0 + 152);
    v146 = *(_QWORD *)(v0 + 144);
    v148 = *(_QWORD *)(v0 + 136);
    v150 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 488));
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v40);
    swift_task_dealloc(v116);
    swift_task_dealloc(v117);
    swift_task_dealloc(v118);
    swift_task_dealloc(v119);
    swift_task_dealloc(v120);
    swift_task_dealloc(v121);
    swift_task_dealloc(v122);
    swift_task_dealloc(v123);
    swift_task_dealloc(v124);
    swift_task_dealloc(v125);
    swift_task_dealloc(v126);
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v130);
    swift_task_dealloc(v132);
    swift_task_dealloc(v134);
    swift_task_dealloc(v136);
    swift_task_dealloc(v138);
    swift_task_dealloc(v140);
    swift_task_dealloc(v142);
    swift_task_dealloc(v144);
    swift_task_dealloc(v146);
    swift_task_dealloc(v148);
    swift_task_dealloc(v150);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
  v5 = *(_QWORD *)(v0 + 488);
  v6 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 448);
  v8 = *(_QWORD *)(v0 + 400);
  v9 = *(_QWORD *)(v0 + 408);
  v10 = *(_QWORD *)(v0 + 392);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 464) + 32);
  *(_QWORD *)(v0 + 504) = v12;
  v12(v5, v7, v6);
  sub_10004A160(v11, v10, (uint64_t *)&unk_1011D0BB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
  {
    v13 = *(_QWORD *)(v0 + 392);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 464) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 456));
    sub_10004FF60(v13, (uint64_t *)&unk_1011D0BB0);
    goto LABEL_7;
  }
  v14 = *(_QWORD *)(v0 + 424);
  v15 = *(_QWORD *)(v0 + 400);
  v16 = *(_QWORD *)(v0 + 408);
  v17 = *(_QWORD *)(v0 + 384);
  v19 = *(_QWORD *)(v0 + 368);
  v18 = *(_QWORD *)(v0 + 376);
  v20 = *(uint64_t **)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 32))(v14, *(_QWORD *)(v0 + 392), v15);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  *(_QWORD *)(v0 + 512) = v21;
  v21(v18, v14, v15);
  v22 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  *(_QWORD *)(v0 + 520) = v22;
  dispatch thunk of Collection.startIndex.getter(v15);
  *(_QWORD *)(v18 + *(int *)(v19 + 36)) = *(_QWORD *)(v0 + 72);
  sub_100065228(v18, v17, (uint64_t *)&unk_1011D0D00);
  v23 = *(int *)(v19 + 36);
  *(_DWORD *)(v0 + 568) = v23;
  v24 = *v20;
  v25 = *(_QWORD *)(*v20 + 104);
  *(_QWORD *)(v0 + 528) = v25;
  *(_QWORD *)(v0 + 536) = *(_QWORD *)(v24 + 208);
  swift_beginAccess((char *)v20 + v25, v0 + 48, 0, 0);
  v26 = *(_QWORD *)(v17 + v23);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 80), v15, v22);
  if (v26 == *(_QWORD *)(v0 + 80))
  {
    v27 = *(_QWORD *)(v0 + 488);
    v28 = *(_QWORD *)(v0 + 456);
    v29 = *(_QWORD *)(v0 + 464);
    v30 = *(_QWORD *)(v0 + 424);
    v31 = *(_QWORD *)(v0 + 400);
    v32 = *(_QWORD *)(v0 + 408);
    sub_10004FF60(*(_QWORD *)(v0 + 384), (uint64_t *)&unk_1011D0D00);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    goto LABEL_7;
  }
  *(_QWORD *)(v0 + 544) = _swiftEmptyArrayStorage;
  v131 = *(_QWORD *)(v0 + 520);
  v133 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
  v43 = *(_QWORD *)(v0 + 416);
  v135 = *(_QWORD *)(v0 + 408);
  v44 = *(_QWORD *)(v0 + 400);
  v45 = *(_QWORD *)(v0 + 384);
  v46 = *(_QWORD *)(v0 + 360);
  v139 = *(_QWORD *)(v0 + 352);
  v47 = *(_QWORD *)(v0 + 336);
  v48 = *(_QWORD *)(v0 + 344);
  v143 = *(_QWORD *)(v0 + 320);
  v151 = *(_QWORD *)(v0 + 264);
  v147 = *(_QWORD *)(v0 + 312);
  v149 = *(_QWORD *)(v0 + 272);
  v137 = *(_QWORD *)(v0 + 104) + *(_QWORD *)(v0 + 528);
  v49 = v45 + *(int *)(v0 + 568);
  v141 = *(_QWORD *)(v0 + 232);
  v145 = *(_QWORD *)(v0 + 224);
  v50 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v0 + 16, v49, v44, v131);
  v129 = *(void (**)(uint64_t))(v48 + 16);
  v129(v46);
  v50(v0 + 16, 0);
  v133(v43, v45, v44);
  dispatch thunk of Collection.formIndex(after:)(v49, v44, v131);
  (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v43, v44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v139, v46, v47);
  sub_10004A160(v137, v143, (uint64_t *)&unk_1011C5B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56))(v147, 1, 1, v145);
  v51 = v149 + *(int *)(v151 + 48);
  sub_10004A160(v143, v149, (uint64_t *)&unk_1011C5B80);
  sub_10004A160(v147, v51, (uint64_t *)&unk_1011C5B80);
  v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48);
  *(_QWORD *)(v0 + 552) = v52;
  if (v52(v149, 1, v145) == 1)
  {
    if (v52(v51, 1, *(_QWORD *)(v0 + 224)) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 272), (uint64_t *)&unk_1011C5B80);
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  v53 = *(_QWORD *)(v0 + 224);
  sub_10004A160(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 304), (uint64_t *)&unk_1011C5B80);
  v54 = v52(v51, 1, v53);
  v55 = *(_QWORD *)(v0 + 304);
  if (v54 == 1)
  {
    sub_10005B748(*(_QWORD *)(v0 + 304), type metadata accessor for Library.Context);
LABEL_13:
    sub_10004FF60(*(_QWORD *)(v0 + 272), &qword_10119EE48);
LABEL_14:
    v56 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v0 + 496);
    v57 = *(_QWORD *)(v0 + 456);
    v58 = *(_QWORD **)(v0 + 440);
    v59 = *(_QWORD *)(v0 + 320);
    v60 = *(_QWORD *)(v0 + 104);
    sub_10004FF60(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_1011C5B80);
    sub_10004FF60(v59, (uint64_t *)&unk_1011C5B80);
    v61 = (_QWORD *)swift_task_alloc(16);
    *v61 = v57;
    v62 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
    v61[1] = v62;
    KeyPath = swift_getKeyPath(&unk_100EA8BD0);
    swift_task_dealloc(v61);
    v64 = (_QWORD *)swift_task_alloc(16);
    *v64 = v57;
    v64[1] = v62;
    v65 = swift_getKeyPath(&unk_100EA8C08);
    swift_task_dealloc(v64);
    static Published.subscript.getter(v58, v60, KeyPath, v65);
    swift_release(v65);
    v66 = swift_release(KeyPath);
    if (v56(v58, 1, v57, v66) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 440), &qword_1011A30F0);
      v67 = 1;
    }
    else
    {
      v68 = *(_QWORD *)(v0 + 296);
      v69 = *(_QWORD *)(v0 + 224);
      v70 = *(_QWORD *)(v0 + 104) + *(_QWORD *)(v0 + 528);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 504))(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 456));
      sub_10004A160(v70, v68, (uint64_t *)&unk_1011C5B80);
      v71 = v52(v68, 1, v69);
      v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
      v73 = *(_QWORD *)(v0 + 480);
      v74 = *(_QWORD *)(v0 + 456);
      v75 = *(_QWORD *)(v0 + 296);
      if (v71 == 1)
      {
        v76 = *(_QWORD *)(v0 + 200);
        v77 = *(_QWORD *)(v0 + 160);
        sub_10004FF60(v75, (uint64_t *)&unk_1011C5B80);
        v72(v76, v73, v74);
        v78 = v76;
        v79 = v77;
        v80 = 1;
      }
      else
      {
        v99 = *(_QWORD *)(v0 + 248);
        v100 = *(_QWORD *)(v0 + 200);
        v101 = *(_QWORD *)(v0 + 160);
        sub_10005B6C0(v75, v99, type metadata accessor for Library.Context);
        v102 = v100 + *(int *)(sub_100007E8C(&qword_10119F3A8) + 48);
        v72(v100, v73, v74);
        sub_10005B6C0(v99, v102, type metadata accessor for Library.Context);
        v78 = v100;
        v79 = v101;
        v80 = 0;
      }
      swift_storeEnumTagMultiPayload(v78, v79, v80);
      v67 = 0;
    }
    v85 = (uint64_t *)(v0 + 200);
    v103 = *(_QWORD *)(v0 + 200);
    v104 = *(_QWORD *)(v0 + 192);
    v105 = *(_QWORD *)(v0 + 160);
    v106 = *(_QWORD *)(v0 + 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v103, v67, 1, v105);
    sub_10004A160(v103, v104, &qword_10119F388);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105) == 1)
    {
      v92 = *(_QWORD *)(v0 + 328);
      v93 = *(_QWORD *)(v0 + 192);
      goto LABEL_26;
    }
    v94 = *(_QWORD *)(v0 + 344);
    v153 = *(_QWORD *)(v0 + 352);
    v95 = *(_QWORD *)(v0 + 328);
    v96 = *(_QWORD *)(v0 + 336);
    v97 = *(_QWORD *)(v0 + 192);
    v98 = *(_QWORD *)(v0 + 176);
LABEL_28:
    sub_100065228(v97, v98, &qword_10119F390);
    sub_10004A160(v98, v95, &qword_10119F390);
    v108 = sub_100007E8C(&qword_10119F398);
    v109 = v95 + *(int *)(v108 + 36);
    v110 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
    v110(v109, 1, 1, v96);
    v111 = sub_100007E8C(&qword_10119F3A0);
    swift_storeEnumTagMultiPayload(v109, v111, 0);
    *(_BYTE *)(v95 + *(int *)(v108 + 40)) = 2;
    sub_10004FF60(v109, &qword_10119F3A0);
    ((void (*)(uint64_t, uint64_t, uint64_t))v129)(v109, v153, v96);
    v110(v109, 0, 1, v96);
    swift_storeEnumTagMultiPayload(v109, v111, 0);
    sub_10004FF60(v98, &qword_10119F390);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v95, 0, 1, v108);
    goto LABEL_29;
  }
  v81 = *(_QWORD *)(v0 + 272);
  v82 = *(_QWORD *)(v0 + 256);
  sub_10005B6C0(v51, v82, type metadata accessor for Library.Context);
  v83 = static Library.Context.__derived_struct_equals(_:_:)(v55, v82);
  sub_10005B748(v82, type metadata accessor for Library.Context);
  sub_10005B748(v55, type metadata accessor for Library.Context);
  sub_10004FF60(v81, (uint64_t *)&unk_1011C5B80);
  if ((v83 & 1) == 0)
    goto LABEL_14;
LABEL_19:
  v85 = (uint64_t *)(v0 + 216);
  v84 = *(_QWORD *)(v0 + 216);
  v152 = *(_QWORD *)(v0 + 488);
  v86 = *(_QWORD *)(v0 + 456);
  v87 = *(_QWORD *)(v0 + 464);
  v88 = *(_QWORD *)(v0 + 320);
  v89 = *(_QWORD *)(v0 + 208);
  v91 = *(_QWORD *)(v0 + 160);
  v90 = *(_QWORD *)(v0 + 168);
  sub_10004FF60(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_1011C5B80);
  sub_10004FF60(v88, (uint64_t *)&unk_1011C5B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v84, v152, v86);
  swift_storeEnumTagMultiPayload(v84, v91, 1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v84, 0, 1, v91);
  sub_10004A160(v84, v89, &qword_10119F388);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v89, 1, v91) != 1)
  {
    v94 = *(_QWORD *)(v0 + 344);
    v153 = *(_QWORD *)(v0 + 352);
    v95 = *(_QWORD *)(v0 + 328);
    v96 = *(_QWORD *)(v0 + 336);
    v97 = *(_QWORD *)(v0 + 208);
    v98 = *(_QWORD *)(v0 + 184);
    goto LABEL_28;
  }
  v92 = *(_QWORD *)(v0 + 328);
  v93 = *(_QWORD *)(v0 + 208);
LABEL_26:
  sub_10004FF60(v93, &qword_10119F388);
  v107 = sub_100007E8C(&qword_10119F398);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v92, 1, 1, v107);
LABEL_29:
  sub_10004FF60(*v85, &qword_10119F388);
  v112 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 560) = static MainActor.shared.getter(v113);
  v114 = dispatch thunk of Actor.unownedExecutor.getter(v112, &protocol witness table for MainActor);
  return swift_task_switch(sub_100092A60, v114, v115);
}

uint64_t sub_100092A60()
{
  _QWORD *v0;
  unsigned int (*v1)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t KeyPath;
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v1 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v0[62];
  v2 = v0[57];
  v3 = (_QWORD *)v0[54];
  v4 = v0[13];
  swift_release(v0[70]);
  v5 = (_QWORD *)swift_task_alloc(16);
  *v5 = v2;
  v6 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
  v5[1] = v6;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  swift_task_dealloc(v5);
  v8 = (_QWORD *)swift_task_alloc(16);
  *v8 = v2;
  v8[1] = v6;
  v9 = swift_getKeyPath(&unk_100EA8C08);
  swift_task_dealloc(v8);
  static Published.subscript.getter(v3, v4, KeyPath, v9);
  swift_release(v9);
  v10 = swift_release(KeyPath);
  if (v1(v3, 1, v2, v10))
  {
    v11 = v0[19];
    v12 = v0[14];
    v13 = v0[15];
    sub_10004FF60(v0[54], &qword_1011A30F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  else
  {
    v14 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[69];
    v15 = v0[67];
    v16 = v0[54];
    v18 = v0[35];
    v17 = v0[36];
    v19 = v0[28];
    v20 = v0[13];
    v21 = v20 + v0[66];
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[58] + 16))(v0[59], v16, v0[57]);
    sub_10004FF60(v16, &qword_1011A30F0);
    v22 = *(void **)(v20 + v15);
    sub_10004A160(v21, v17, (uint64_t *)&unk_1011C5B80);
    sub_10004A160(v17, v18, (uint64_t *)&unk_1011C5B80);
    if (v14(v18, 1, v19) == 1)
    {
      type metadata accessor for MusicLibrary(0);
      v23 = static MusicLibrary.shared.getter(v22);
    }
    else
    {
      v24 = (uint64_t *)v0[30];
      sub_10005B6C0(v0[35], (uint64_t)v24, type metadata accessor for Library.Context);
      v23 = *v24;
      v25 = v22;
      swift_retain(v23);
      sub_10005B748((uint64_t)v24, type metadata accessor for Library.Context);
    }
    v27 = v0[58];
    v26 = v0[59];
    v28 = v0[57];
    v29 = v0[44];
    v30 = v0[41];
    v31 = (_QWORD *)v0[19];
    sub_10004FF60(v0[36], (uint64_t *)&unk_1011C5B80);
    sub_100217F48(v29, v30, v23, v31);
    swift_release(v23);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  }
  return swift_task_switch(sub_100092CE0, 0, 0);
}

uint64_t sub_100092CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, _QWORD);
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  unsigned int (*v61)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t KeyPath;
  _QWORD *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;

  if ((Playlist.isChart.getter(a1) & 1) == 0
    || (v2 = *(_QWORD *)(v1 + 152),
        v3 = *(_QWORD *)(v1 + 112),
        v4 = *(_QWORD *)(v1 + 120),
        v5 = Playlist.Entry.position.getter(),
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3),
        (_DWORD)result))
  {
LABEL_5:
    v8 = *(_QWORD *)(v1 + 144);
    v10 = *(_QWORD *)(v1 + 112);
    v9 = *(_QWORD *)(v1 + 120);
    sub_10004A160(*(_QWORD *)(v1 + 152), v8, &qword_10119F488);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v8, 1, v10) == 1)
    {
      v12 = *(_QWORD *)(v1 + 344);
      v11 = *(_QWORD *)(v1 + 352);
      v13 = *(_QWORD *)(v1 + 336);
      v14 = *(_QWORD *)(v1 + 144);
      sub_10004FF60(*(_QWORD *)(v1 + 328), &qword_10119F380);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      sub_10004FF60(v14, &qword_10119F488);
      v15 = *(_QWORD *)(v1 + 544);
    }
    else
    {
      v16 = *(_QWORD *)(v1 + 544);
      v17 = *(_QWORD *)(v1 + 136);
      v18 = *(_QWORD *)(v1 + 128);
      sub_100065228(*(_QWORD *)(v1 + 144), v17, &qword_10119F480);
      sub_10004A160(v17, v18, &qword_10119F480);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
      v15 = *(_QWORD *)(v1 + 544);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v15 = sub_1004317A4(0, *(_QWORD *)(v15 + 16) + 1, 1, *(_QWORD *)(v1 + 544));
      v21 = *(_QWORD *)(v15 + 16);
      v20 = *(_QWORD *)(v15 + 24);
      if (v21 >= v20 >> 1)
        v15 = sub_1004317A4(v20 > 1, v21 + 1, 1, v15);
      v23 = *(_QWORD *)(v1 + 344);
      v22 = *(_QWORD *)(v1 + 352);
      v25 = *(_QWORD *)(v1 + 328);
      v24 = *(_QWORD *)(v1 + 336);
      v26 = *(_QWORD *)(v1 + 128);
      v27 = *(_QWORD *)(v1 + 136);
      v28 = *(_QWORD *)(v1 + 120);
      *(_QWORD *)(v15 + 16) = v21 + 1;
      sub_100065228(v26, v15+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v21, &qword_10119F480);
      sub_10004FF60(v27, &qword_10119F480);
      sub_10004FF60(v25, &qword_10119F380);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    v29 = *(int *)(v1 + 568);
    v30 = *(_QWORD *)(v1 + 520);
    v31 = *(_QWORD *)(v1 + 400);
    v32 = *(_QWORD *)(v1 + 384);
    sub_10004FF60(*(_QWORD *)(v1 + 152), &qword_10119F488);
    v33 = *(_QWORD *)(v32 + v29);
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v1 + 80), v31, v30);
    if (v33 == *(_QWORD *)(v1 + 80))
    {
      v34 = *(_QWORD *)(v1 + 488);
      v35 = *(_QWORD *)(v1 + 456);
      v36 = *(_QWORD *)(v1 + 464);
      v37 = *(_QWORD *)(v1 + 424);
      v38 = *(_QWORD *)(v1 + 400);
      v39 = *(_QWORD *)(v1 + 408);
      sub_10004FF60(*(_QWORD *)(v1 + 384), (uint64_t *)&unk_1011D0D00);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
      v40 = *(_QWORD *)(v1 + 480);
      v41 = *(_QWORD *)(v1 + 472);
      v43 = *(_QWORD *)(v1 + 440);
      v42 = *(_QWORD *)(v1 + 448);
      v45 = *(_QWORD *)(v1 + 424);
      v44 = *(_QWORD *)(v1 + 432);
      v46 = *(_QWORD *)(v1 + 416);
      v47 = *(_QWORD *)(v1 + 392);
      v121 = *(_QWORD *)(v1 + 384);
      v122 = *(_QWORD *)(v1 + 376);
      v123 = *(_QWORD *)(v1 + 360);
      v124 = *(_QWORD *)(v1 + 352);
      v125 = *(_QWORD *)(v1 + 328);
      v126 = *(_QWORD *)(v1 + 320);
      v127 = *(_QWORD *)(v1 + 312);
      v128 = *(_QWORD *)(v1 + 304);
      v129 = *(_QWORD *)(v1 + 296);
      v130 = *(_QWORD *)(v1 + 288);
      v131 = *(_QWORD *)(v1 + 280);
      v132 = *(_QWORD *)(v1 + 272);
      v133 = *(_QWORD *)(v1 + 256);
      v134 = *(_QWORD *)(v1 + 248);
      v136 = *(_QWORD *)(v1 + 240);
      v138 = *(_QWORD *)(v1 + 216);
      v140 = *(_QWORD *)(v1 + 208);
      v142 = *(_QWORD *)(v1 + 200);
      v144 = *(_QWORD *)(v1 + 192);
      v146 = *(_QWORD *)(v1 + 184);
      v148 = *(_QWORD *)(v1 + 176);
      v150 = *(_QWORD *)(v1 + 152);
      v152 = *(_QWORD *)(v1 + 144);
      v154 = *(_QWORD *)(v1 + 136);
      v156 = *(_QWORD *)(v1 + 128);
      swift_task_dealloc(*(_QWORD *)(v1 + 488));
      swift_task_dealloc(v40);
      swift_task_dealloc(v41);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      swift_task_dealloc(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      swift_task_dealloc(v47);
      swift_task_dealloc(v121);
      swift_task_dealloc(v122);
      swift_task_dealloc(v123);
      swift_task_dealloc(v124);
      swift_task_dealloc(v125);
      swift_task_dealloc(v126);
      swift_task_dealloc(v127);
      swift_task_dealloc(v128);
      swift_task_dealloc(v129);
      swift_task_dealloc(v130);
      swift_task_dealloc(v131);
      swift_task_dealloc(v132);
      swift_task_dealloc(v133);
      swift_task_dealloc(v134);
      swift_task_dealloc(v136);
      swift_task_dealloc(v138);
      swift_task_dealloc(v140);
      swift_task_dealloc(v142);
      swift_task_dealloc(v144);
      swift_task_dealloc(v146);
      swift_task_dealloc(v148);
      swift_task_dealloc(v150);
      swift_task_dealloc(v152);
      swift_task_dealloc(v154);
      swift_task_dealloc(v156);
      return (*(uint64_t (**)(unint64_t))(v1 + 8))(v15);
    }
    *(_QWORD *)(v1 + 544) = v15;
    v137 = *(_QWORD *)(v1 + 520);
    v139 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 512);
    v48 = *(_QWORD *)(v1 + 416);
    v141 = *(_QWORD *)(v1 + 408);
    v49 = *(_QWORD *)(v1 + 400);
    v50 = *(_QWORD *)(v1 + 384);
    v51 = *(_QWORD *)(v1 + 360);
    v145 = *(_QWORD *)(v1 + 352);
    v52 = *(_QWORD *)(v1 + 336);
    v53 = *(_QWORD *)(v1 + 344);
    v149 = *(_QWORD *)(v1 + 320);
    v157 = *(_QWORD *)(v1 + 272);
    v153 = *(_QWORD *)(v1 + 312);
    v155 = *(_QWORD *)(v1 + 264);
    v143 = *(_QWORD *)(v1 + 104) + *(_QWORD *)(v1 + 528);
    v54 = v50 + *(int *)(v1 + 568);
    v147 = *(_QWORD *)(v1 + 232);
    v151 = *(_QWORD *)(v1 + 224);
    v55 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v1 + 16, v54, v49, v137);
    v135 = *(void (**)(uint64_t))(v53 + 16);
    v135(v51);
    v55(v1 + 16, 0);
    v139(v48, v50, v49);
    dispatch thunk of Collection.formIndex(after:)(v54, v49, v137);
    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v48, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v145, v51, v52);
    sub_10004A160(v143, v149, (uint64_t *)&unk_1011C5B80);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56))(v153, 1, 1, v151);
    v56 = v157 + *(int *)(v155 + 48);
    sub_10004A160(v149, v157, (uint64_t *)&unk_1011C5B80);
    sub_10004A160(v153, v56, (uint64_t *)&unk_1011C5B80);
    v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 48);
    *(_QWORD *)(v1 + 552) = v57;
    if (v57(v157, 1, v151) == 1)
    {
      if (v57(v56, 1, *(_QWORD *)(v1 + 224)) == 1)
      {
        sub_10004FF60(*(_QWORD *)(v1 + 272), (uint64_t *)&unk_1011C5B80);
LABEL_25:
        v90 = (uint64_t *)(v1 + 216);
        v89 = *(_QWORD *)(v1 + 216);
        v158 = *(_QWORD *)(v1 + 488);
        v91 = *(_QWORD *)(v1 + 456);
        v92 = *(_QWORD *)(v1 + 464);
        v93 = *(_QWORD *)(v1 + 320);
        v94 = *(_QWORD *)(v1 + 208);
        v96 = *(_QWORD *)(v1 + 160);
        v95 = *(_QWORD *)(v1 + 168);
        sub_10004FF60(*(_QWORD *)(v1 + 312), (uint64_t *)&unk_1011C5B80);
        sub_10004FF60(v93, (uint64_t *)&unk_1011C5B80);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16))(v89, v158, v91);
        swift_storeEnumTagMultiPayload(v89, v96, 1);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v89, 0, 1, v96);
        sub_10004A160(v89, v94, &qword_10119F388);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v94, 1, v96) == 1)
        {
          v97 = *(_QWORD *)(v1 + 328);
          v98 = *(_QWORD *)(v1 + 208);
LABEL_32:
          sub_10004FF60(v98, &qword_10119F388);
          v112 = sub_100007E8C(&qword_10119F398);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v97, 1, 1, v112);
LABEL_35:
          sub_10004FF60(*v90, &qword_10119F388);
          v117 = type metadata accessor for MainActor(0);
          *(_QWORD *)(v1 + 560) = static MainActor.shared.getter(v118);
          v119 = dispatch thunk of Actor.unownedExecutor.getter(v117, &protocol witness table for MainActor);
          return swift_task_switch(sub_100092A60, v119, v120);
        }
        v99 = *(_QWORD *)(v1 + 344);
        v159 = *(_QWORD *)(v1 + 352);
        v100 = *(_QWORD *)(v1 + 328);
        v101 = *(_QWORD *)(v1 + 336);
        v102 = *(_QWORD *)(v1 + 208);
        v103 = *(_QWORD *)(v1 + 184);
        goto LABEL_34;
      }
    }
    else
    {
      v58 = *(_QWORD *)(v1 + 224);
      sub_10004A160(*(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 304), (uint64_t *)&unk_1011C5B80);
      v59 = v57(v56, 1, v58);
      v60 = *(_QWORD *)(v1 + 304);
      if (v59 != 1)
      {
        v86 = *(_QWORD *)(v1 + 272);
        v87 = *(_QWORD *)(v1 + 256);
        sub_10005B6C0(v56, v87, type metadata accessor for Library.Context);
        v88 = static Library.Context.__derived_struct_equals(_:_:)(v60, v87);
        sub_10005B748(v87, type metadata accessor for Library.Context);
        sub_10005B748(v60, type metadata accessor for Library.Context);
        sub_10004FF60(v86, (uint64_t *)&unk_1011C5B80);
        if ((v88 & 1) != 0)
          goto LABEL_25;
LABEL_20:
        v61 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v1 + 496);
        v62 = *(_QWORD *)(v1 + 456);
        v63 = *(_QWORD **)(v1 + 440);
        v64 = *(_QWORD *)(v1 + 320);
        v65 = *(_QWORD *)(v1 + 104);
        sub_10004FF60(*(_QWORD *)(v1 + 312), (uint64_t *)&unk_1011C5B80);
        sub_10004FF60(v64, (uint64_t *)&unk_1011C5B80);
        v66 = (_QWORD *)swift_task_alloc(16);
        *v66 = v62;
        v67 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
        v66[1] = v67;
        KeyPath = swift_getKeyPath(&unk_100EA8BD0);
        swift_task_dealloc(v66);
        v69 = (_QWORD *)swift_task_alloc(16);
        *v69 = v62;
        v69[1] = v67;
        v70 = swift_getKeyPath(&unk_100EA8C08);
        swift_task_dealloc(v69);
        static Published.subscript.getter(v63, v65, KeyPath, v70);
        swift_release(v70);
        v71 = swift_release(KeyPath);
        if (v61(v63, 1, v62, v71) == 1)
        {
          sub_10004FF60(*(_QWORD *)(v1 + 440), &qword_1011A30F0);
          v72 = 1;
        }
        else
        {
          v73 = *(_QWORD *)(v1 + 296);
          v74 = *(_QWORD *)(v1 + 224);
          v75 = *(_QWORD *)(v1 + 104) + *(_QWORD *)(v1 + 528);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 504))(*(_QWORD *)(v1 + 480), *(_QWORD *)(v1 + 440), *(_QWORD *)(v1 + 456));
          sub_10004A160(v75, v73, (uint64_t *)&unk_1011C5B80);
          v76 = v57(v73, 1, v74);
          v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 504);
          v78 = *(_QWORD *)(v1 + 480);
          v79 = *(_QWORD *)(v1 + 456);
          v80 = *(_QWORD *)(v1 + 296);
          if (v76 == 1)
          {
            v81 = *(_QWORD *)(v1 + 200);
            v82 = *(_QWORD *)(v1 + 160);
            sub_10004FF60(v80, (uint64_t *)&unk_1011C5B80);
            v77(v81, v78, v79);
            v83 = v81;
            v84 = v82;
            v85 = 1;
          }
          else
          {
            v104 = *(_QWORD *)(v1 + 248);
            v105 = *(_QWORD *)(v1 + 200);
            v106 = *(_QWORD *)(v1 + 160);
            sub_10005B6C0(v80, v104, type metadata accessor for Library.Context);
            v107 = v105 + *(int *)(sub_100007E8C(&qword_10119F3A8) + 48);
            v77(v105, v78, v79);
            sub_10005B6C0(v104, v107, type metadata accessor for Library.Context);
            v83 = v105;
            v84 = v106;
            v85 = 0;
          }
          swift_storeEnumTagMultiPayload(v83, v84, v85);
          v72 = 0;
        }
        v90 = (uint64_t *)(v1 + 200);
        v108 = *(_QWORD *)(v1 + 200);
        v109 = *(_QWORD *)(v1 + 192);
        v110 = *(_QWORD *)(v1 + 160);
        v111 = *(_QWORD *)(v1 + 168);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56))(v108, v72, 1, v110);
        sub_10004A160(v108, v109, &qword_10119F388);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110) == 1)
        {
          v97 = *(_QWORD *)(v1 + 328);
          v98 = *(_QWORD *)(v1 + 192);
          goto LABEL_32;
        }
        v99 = *(_QWORD *)(v1 + 344);
        v159 = *(_QWORD *)(v1 + 352);
        v100 = *(_QWORD *)(v1 + 328);
        v101 = *(_QWORD *)(v1 + 336);
        v102 = *(_QWORD *)(v1 + 192);
        v103 = *(_QWORD *)(v1 + 176);
LABEL_34:
        sub_100065228(v102, v103, &qword_10119F390);
        sub_10004A160(v103, v100, &qword_10119F390);
        v113 = sub_100007E8C(&qword_10119F398);
        v114 = v100 + *(int *)(v113 + 36);
        v115 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56);
        v115(v114, 1, 1, v101);
        v116 = sub_100007E8C(&qword_10119F3A0);
        swift_storeEnumTagMultiPayload(v114, v116, 0);
        *(_BYTE *)(v100 + *(int *)(v113 + 40)) = 2;
        sub_10004FF60(v114, &qword_10119F3A0);
        ((void (*)(uint64_t, uint64_t, uint64_t))v135)(v114, v159, v101);
        v115(v114, 0, 1, v101);
        swift_storeEnumTagMultiPayload(v114, v116, 0);
        sub_10004FF60(v103, &qword_10119F390);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v100, 0, 1, v113);
        goto LABEL_35;
      }
      sub_10005B748(*(_QWORD *)(v1 + 304), type metadata accessor for Library.Context);
    }
    sub_10004FF60(*(_QWORD *)(v1 + 272), &qword_10119EE48);
    goto LABEL_20;
  }
  if (!__OFADD__(v5, 1))
  {
    v7 = *(_QWORD *)(v1 + 152) + *(int *)(*(_QWORD *)(v1 + 112) + 108);
    *(_QWORD *)v7 = v5 + 1;
    *(_BYTE *)(v7 + 8) = 1;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009386C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  v4 = sub_100007E8C(&qword_10119F288);
  v3[14] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[15] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v6);
  v3[17] = swift_task_alloc(v6);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F280) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[18] = swift_task_alloc(v7);
  v3[19] = swift_task_alloc(v7);
  v8 = sub_100007E8C(&qword_10119F150);
  v3[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[21] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[22] = swift_task_alloc(v10);
  v3[23] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F148) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[24] = swift_task_alloc(v11);
  v3[25] = swift_task_alloc(v11);
  v3[26] = swift_task_alloc(v11);
  v3[27] = swift_task_alloc(v11);
  v12 = type metadata accessor for Library.Context(0);
  v3[28] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[29] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[30] = swift_task_alloc(v14);
  v3[31] = swift_task_alloc(v14);
  v3[32] = swift_task_alloc(v14);
  v15 = sub_100007E8C(&qword_10119EE40);
  v3[33] = v15;
  v3[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119ED10) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[35] = swift_task_alloc(v16);
  v3[36] = swift_task_alloc(v16);
  v3[37] = swift_task_alloc(v16);
  v3[38] = swift_task_alloc(v16);
  v3[39] = swift_task_alloc(v16);
  v3[40] = swift_task_alloc(v16);
  v17 = sub_100007E8C(&qword_10119F140);
  v3[41] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Track(0);
  v3[42] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v3[43] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[44] = swift_task_alloc(v20);
  v3[45] = swift_task_alloc(v20);
  v21 = sub_100007E8C((uint64_t *)&unk_1011ACA90);
  v3[46] = v21;
  v22 = (*(_QWORD *)(*(_QWORD *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[47] = swift_task_alloc(v22);
  v3[48] = swift_task_alloc(v22);
  v23 = sub_100007E8C(&qword_1011B1F10);
  v3[49] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v23 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v3[50] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v3[51] = v25;
  v26 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[52] = swift_task_alloc(v26);
  v3[53] = swift_task_alloc(v26);
  v27 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[54] = swift_task_alloc(v27);
  v3[55] = swift_task_alloc(v27);
  v3[56] = swift_task_alloc(v27);
  v28 = type metadata accessor for Album(0);
  v3[57] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v3[58] = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[59] = swift_task_alloc(v30);
  v3[60] = swift_task_alloc(v30);
  v3[61] = swift_task_alloc(v30);
  return swift_task_switch(sub_100093BE8, 0, 0);
}

uint64_t sub_100093BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, _QWORD);
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int (*v56)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t KeyPath;
  _QWORD *v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 448);
  sub_10004A160(*(_QWORD *)(v0 + 96), v3, &qword_1011A8FA0);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v0 + 496) = v4;
  if (v4(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 448), &qword_1011A8FA0);
LABEL_7:
    v33 = *(_QWORD *)(v0 + 480);
    v34 = *(_QWORD *)(v0 + 472);
    v36 = *(_QWORD *)(v0 + 440);
    v35 = *(_QWORD *)(v0 + 448);
    v38 = *(_QWORD *)(v0 + 424);
    v37 = *(_QWORD *)(v0 + 432);
    v39 = *(_QWORD *)(v0 + 416);
    v40 = *(_QWORD *)(v0 + 384);
    v41 = *(_QWORD *)(v0 + 392);
    v116 = *(_QWORD *)(v0 + 376);
    v117 = *(_QWORD *)(v0 + 360);
    v118 = *(_QWORD *)(v0 + 352);
    v119 = *(_QWORD *)(v0 + 328);
    v120 = *(_QWORD *)(v0 + 320);
    v121 = *(_QWORD *)(v0 + 312);
    v122 = *(_QWORD *)(v0 + 304);
    v123 = *(_QWORD *)(v0 + 296);
    v124 = *(_QWORD *)(v0 + 288);
    v125 = *(_QWORD *)(v0 + 280);
    v126 = *(_QWORD *)(v0 + 272);
    v127 = *(_QWORD *)(v0 + 256);
    v128 = *(_QWORD *)(v0 + 248);
    v130 = *(_QWORD *)(v0 + 240);
    v132 = *(_QWORD *)(v0 + 216);
    v134 = *(_QWORD *)(v0 + 208);
    v136 = *(_QWORD *)(v0 + 200);
    v138 = *(_QWORD *)(v0 + 192);
    v140 = *(_QWORD *)(v0 + 184);
    v142 = *(_QWORD *)(v0 + 176);
    v144 = *(_QWORD *)(v0 + 152);
    v146 = *(_QWORD *)(v0 + 144);
    v148 = *(_QWORD *)(v0 + 136);
    v150 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 488));
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v40);
    swift_task_dealloc(v116);
    swift_task_dealloc(v117);
    swift_task_dealloc(v118);
    swift_task_dealloc(v119);
    swift_task_dealloc(v120);
    swift_task_dealloc(v121);
    swift_task_dealloc(v122);
    swift_task_dealloc(v123);
    swift_task_dealloc(v124);
    swift_task_dealloc(v125);
    swift_task_dealloc(v126);
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v130);
    swift_task_dealloc(v132);
    swift_task_dealloc(v134);
    swift_task_dealloc(v136);
    swift_task_dealloc(v138);
    swift_task_dealloc(v140);
    swift_task_dealloc(v142);
    swift_task_dealloc(v144);
    swift_task_dealloc(v146);
    swift_task_dealloc(v148);
    swift_task_dealloc(v150);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
  v5 = *(_QWORD *)(v0 + 488);
  v6 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 448);
  v8 = *(_QWORD *)(v0 + 400);
  v9 = *(_QWORD *)(v0 + 408);
  v10 = *(_QWORD *)(v0 + 392);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 464) + 32);
  *(_QWORD *)(v0 + 504) = v12;
  v12(v5, v7, v6);
  sub_10004A160(v11, v10, &qword_1011B1F10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
  {
    v13 = *(_QWORD *)(v0 + 392);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 464) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 456));
    sub_10004FF60(v13, &qword_1011B1F10);
    goto LABEL_7;
  }
  v14 = *(_QWORD *)(v0 + 424);
  v15 = *(_QWORD *)(v0 + 400);
  v16 = *(_QWORD *)(v0 + 408);
  v17 = *(_QWORD *)(v0 + 384);
  v19 = *(_QWORD *)(v0 + 368);
  v18 = *(_QWORD *)(v0 + 376);
  v20 = *(uint64_t **)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 32))(v14, *(_QWORD *)(v0 + 392), v15);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  *(_QWORD *)(v0 + 512) = v21;
  v21(v18, v14, v15);
  v22 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  *(_QWORD *)(v0 + 520) = v22;
  dispatch thunk of Collection.startIndex.getter(v15);
  *(_QWORD *)(v18 + *(int *)(v19 + 36)) = *(_QWORD *)(v0 + 72);
  sub_100065228(v18, v17, (uint64_t *)&unk_1011ACA90);
  v23 = *(int *)(v19 + 36);
  *(_DWORD *)(v0 + 568) = v23;
  v24 = *v20;
  v25 = *(_QWORD *)(*v20 + 104);
  *(_QWORD *)(v0 + 528) = v25;
  *(_QWORD *)(v0 + 536) = *(_QWORD *)(v24 + 208);
  swift_beginAccess((char *)v20 + v25, v0 + 48, 0, 0);
  v26 = *(_QWORD *)(v17 + v23);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 80), v15, v22);
  if (v26 == *(_QWORD *)(v0 + 80))
  {
    v27 = *(_QWORD *)(v0 + 488);
    v28 = *(_QWORD *)(v0 + 456);
    v29 = *(_QWORD *)(v0 + 464);
    v30 = *(_QWORD *)(v0 + 424);
    v31 = *(_QWORD *)(v0 + 400);
    v32 = *(_QWORD *)(v0 + 408);
    sub_10004FF60(*(_QWORD *)(v0 + 384), (uint64_t *)&unk_1011ACA90);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    goto LABEL_7;
  }
  *(_QWORD *)(v0 + 544) = _swiftEmptyArrayStorage;
  v131 = *(_QWORD *)(v0 + 520);
  v133 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
  v43 = *(_QWORD *)(v0 + 416);
  v135 = *(_QWORD *)(v0 + 408);
  v44 = *(_QWORD *)(v0 + 400);
  v45 = *(_QWORD *)(v0 + 384);
  v46 = *(_QWORD *)(v0 + 360);
  v139 = *(_QWORD *)(v0 + 352);
  v47 = *(_QWORD *)(v0 + 336);
  v48 = *(_QWORD *)(v0 + 344);
  v143 = *(_QWORD *)(v0 + 320);
  v151 = *(_QWORD *)(v0 + 264);
  v147 = *(_QWORD *)(v0 + 312);
  v149 = *(_QWORD *)(v0 + 272);
  v137 = *(_QWORD *)(v0 + 104) + *(_QWORD *)(v0 + 528);
  v49 = v45 + *(int *)(v0 + 568);
  v141 = *(_QWORD *)(v0 + 232);
  v145 = *(_QWORD *)(v0 + 224);
  v50 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v0 + 16, v49, v44, v131);
  v129 = *(void (**)(uint64_t))(v48 + 16);
  v129(v46);
  v50(v0 + 16, 0);
  v133(v43, v45, v44);
  dispatch thunk of Collection.formIndex(after:)(v49, v44, v131);
  (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v43, v44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v139, v46, v47);
  sub_10004A160(v137, v143, &qword_10119ED10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56))(v147, 1, 1, v145);
  v51 = v149 + *(int *)(v151 + 48);
  sub_10004A160(v143, v149, &qword_10119ED10);
  sub_10004A160(v147, v51, &qword_10119ED10);
  v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48);
  *(_QWORD *)(v0 + 552) = v52;
  if (v52(v149, 1, v145) == 1)
  {
    if (v52(v51, 1, *(_QWORD *)(v0 + 224)) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 272), &qword_10119ED10);
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  v53 = *(_QWORD *)(v0 + 224);
  sub_10004A160(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 304), &qword_10119ED10);
  v54 = v52(v51, 1, v53);
  v55 = *(_QWORD *)(v0 + 304);
  if (v54 == 1)
  {
    sub_10005B748(*(_QWORD *)(v0 + 304), type metadata accessor for Library.Context);
LABEL_13:
    sub_10004FF60(*(_QWORD *)(v0 + 272), &qword_10119EE40);
LABEL_14:
    v56 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v0 + 496);
    v57 = *(_QWORD *)(v0 + 456);
    v58 = *(_QWORD **)(v0 + 440);
    v59 = *(_QWORD *)(v0 + 320);
    v60 = *(_QWORD *)(v0 + 104);
    sub_10004FF60(*(_QWORD *)(v0 + 312), &qword_10119ED10);
    sub_10004FF60(v59, &qword_10119ED10);
    v61 = (_QWORD *)swift_task_alloc(16);
    *v61 = v57;
    v62 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
    v61[1] = v62;
    KeyPath = swift_getKeyPath(&unk_100EA8BD0);
    swift_task_dealloc(v61);
    v64 = (_QWORD *)swift_task_alloc(16);
    *v64 = v57;
    v64[1] = v62;
    v65 = swift_getKeyPath(&unk_100EA8C08);
    swift_task_dealloc(v64);
    static Published.subscript.getter(v58, v60, KeyPath, v65);
    swift_release(v65);
    v66 = swift_release(KeyPath);
    if (v56(v58, 1, v57, v66) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 440), &qword_1011A8FA0);
      v67 = 1;
    }
    else
    {
      v68 = *(_QWORD *)(v0 + 296);
      v69 = *(_QWORD *)(v0 + 224);
      v70 = *(_QWORD *)(v0 + 104) + *(_QWORD *)(v0 + 528);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 504))(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 456));
      sub_10004A160(v70, v68, &qword_10119ED10);
      v71 = v52(v68, 1, v69);
      v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
      v73 = *(_QWORD *)(v0 + 480);
      v74 = *(_QWORD *)(v0 + 456);
      v75 = *(_QWORD *)(v0 + 296);
      if (v71 == 1)
      {
        v76 = *(_QWORD *)(v0 + 200);
        v77 = *(_QWORD *)(v0 + 160);
        sub_10004FF60(v75, &qword_10119ED10);
        v72(v76, v73, v74);
        v78 = v76;
        v79 = v77;
        v80 = 1;
      }
      else
      {
        v99 = *(_QWORD *)(v0 + 248);
        v100 = *(_QWORD *)(v0 + 200);
        v101 = *(_QWORD *)(v0 + 160);
        sub_10005B6C0(v75, v99, type metadata accessor for Library.Context);
        v102 = v100 + *(int *)(sub_100007E8C(&qword_10119F168) + 48);
        v72(v100, v73, v74);
        sub_10005B6C0(v99, v102, type metadata accessor for Library.Context);
        v78 = v100;
        v79 = v101;
        v80 = 0;
      }
      swift_storeEnumTagMultiPayload(v78, v79, v80);
      v67 = 0;
    }
    v85 = (uint64_t *)(v0 + 200);
    v103 = *(_QWORD *)(v0 + 200);
    v104 = *(_QWORD *)(v0 + 192);
    v105 = *(_QWORD *)(v0 + 160);
    v106 = *(_QWORD *)(v0 + 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v103, v67, 1, v105);
    sub_10004A160(v103, v104, &qword_10119F148);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105) == 1)
    {
      v92 = *(_QWORD *)(v0 + 328);
      v93 = *(_QWORD *)(v0 + 192);
      goto LABEL_26;
    }
    v94 = *(_QWORD *)(v0 + 344);
    v153 = *(_QWORD *)(v0 + 352);
    v95 = *(_QWORD *)(v0 + 328);
    v96 = *(_QWORD *)(v0 + 336);
    v97 = *(_QWORD *)(v0 + 192);
    v98 = *(_QWORD *)(v0 + 176);
LABEL_28:
    sub_100065228(v97, v98, &qword_10119F150);
    sub_10004A160(v98, v95, &qword_10119F150);
    v108 = sub_100007E8C(&qword_10119F158);
    v109 = v95 + *(int *)(v108 + 36);
    v110 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
    v110(v109, 1, 1, v96);
    v111 = sub_100007E8C(&qword_10119F160);
    swift_storeEnumTagMultiPayload(v109, v111, 0);
    *(_BYTE *)(v95 + *(int *)(v108 + 40)) = 2;
    sub_10004FF60(v109, &qword_10119F160);
    ((void (*)(uint64_t, uint64_t, uint64_t))v129)(v109, v153, v96);
    v110(v109, 0, 1, v96);
    swift_storeEnumTagMultiPayload(v109, v111, 0);
    sub_10004FF60(v98, &qword_10119F150);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v95, 0, 1, v108);
    goto LABEL_29;
  }
  v81 = *(_QWORD *)(v0 + 272);
  v82 = *(_QWORD *)(v0 + 256);
  sub_10005B6C0(v51, v82, type metadata accessor for Library.Context);
  v83 = static Library.Context.__derived_struct_equals(_:_:)(v55, v82);
  sub_10005B748(v82, type metadata accessor for Library.Context);
  sub_10005B748(v55, type metadata accessor for Library.Context);
  sub_10004FF60(v81, &qword_10119ED10);
  if ((v83 & 1) == 0)
    goto LABEL_14;
LABEL_19:
  v85 = (uint64_t *)(v0 + 216);
  v84 = *(_QWORD *)(v0 + 216);
  v152 = *(_QWORD *)(v0 + 488);
  v86 = *(_QWORD *)(v0 + 456);
  v87 = *(_QWORD *)(v0 + 464);
  v88 = *(_QWORD *)(v0 + 320);
  v89 = *(_QWORD *)(v0 + 208);
  v91 = *(_QWORD *)(v0 + 160);
  v90 = *(_QWORD *)(v0 + 168);
  sub_10004FF60(*(_QWORD *)(v0 + 312), &qword_10119ED10);
  sub_10004FF60(v88, &qword_10119ED10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v84, v152, v86);
  swift_storeEnumTagMultiPayload(v84, v91, 1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v84, 0, 1, v91);
  sub_10004A160(v84, v89, &qword_10119F148);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v89, 1, v91) != 1)
  {
    v94 = *(_QWORD *)(v0 + 344);
    v153 = *(_QWORD *)(v0 + 352);
    v95 = *(_QWORD *)(v0 + 328);
    v96 = *(_QWORD *)(v0 + 336);
    v97 = *(_QWORD *)(v0 + 208);
    v98 = *(_QWORD *)(v0 + 184);
    goto LABEL_28;
  }
  v92 = *(_QWORD *)(v0 + 328);
  v93 = *(_QWORD *)(v0 + 208);
LABEL_26:
  sub_10004FF60(v93, &qword_10119F148);
  v107 = sub_100007E8C(&qword_10119F158);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v92, 1, 1, v107);
LABEL_29:
  sub_10004FF60(*v85, &qword_10119F148);
  v112 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 560) = static MainActor.shared.getter(v113);
  v114 = dispatch thunk of Actor.unownedExecutor.getter(v112, &protocol witness table for MainActor);
  return swift_task_switch(sub_100094730, v114, v115);
}

uint64_t sub_100094730()
{
  _QWORD *v0;
  unsigned int (*v1)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t KeyPath;
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v1 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v0[62];
  v2 = v0[57];
  v3 = (_QWORD *)v0[54];
  v4 = v0[13];
  swift_release(v0[70]);
  v5 = (_QWORD *)swift_task_alloc(16);
  *v5 = v2;
  v6 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  v5[1] = v6;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  swift_task_dealloc(v5);
  v8 = (_QWORD *)swift_task_alloc(16);
  *v8 = v2;
  v8[1] = v6;
  v9 = swift_getKeyPath(&unk_100EA8C08);
  swift_task_dealloc(v8);
  static Published.subscript.getter(v3, v4, KeyPath, v9);
  swift_release(v9);
  v10 = swift_release(KeyPath);
  if (v1(v3, 1, v2, v10))
  {
    v11 = v0[19];
    v12 = v0[14];
    v13 = v0[15];
    sub_10004FF60(v0[54], &qword_1011A8FA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  else
  {
    v14 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[69];
    v15 = v0[67];
    v16 = v0[54];
    v18 = v0[35];
    v17 = v0[36];
    v19 = v0[28];
    v20 = v0[13];
    v21 = v20 + v0[66];
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[58] + 16))(v0[59], v16, v0[57]);
    sub_10004FF60(v16, &qword_1011A8FA0);
    v22 = *(void **)(v20 + v15);
    sub_10004A160(v21, v17, &qword_10119ED10);
    sub_10004A160(v17, v18, &qword_10119ED10);
    if (v14(v18, 1, v19) == 1)
    {
      type metadata accessor for MusicLibrary(0);
      v23 = static MusicLibrary.shared.getter(v22);
    }
    else
    {
      v24 = (uint64_t *)v0[30];
      sub_10005B6C0(v0[35], (uint64_t)v24, type metadata accessor for Library.Context);
      v23 = *v24;
      v25 = v22;
      swift_retain(v23);
      sub_10005B748((uint64_t)v24, type metadata accessor for Library.Context);
    }
    v27 = v0[58];
    v26 = v0[59];
    v28 = v0[57];
    v29 = v0[44];
    v30 = v0[41];
    v31 = (_QWORD *)v0[19];
    sub_10004FF60(v0[36], &qword_10119ED10);
    sub_100216D18(v29, v30, v23, v31);
    swift_release(v23);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  }
  return swift_task_switch(sub_1000949B0, 0, 0);
}

uint64_t sub_1000949B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, _QWORD);
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t KeyPath;
  _QWORD *v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  sub_10004A160(*(_QWORD *)(v0 + 152), v1, &qword_10119F280);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 344);
    v4 = *(_QWORD *)(v0 + 352);
    v6 = *(_QWORD *)(v0 + 336);
    v7 = *(_QWORD *)(v0 + 144);
    sub_10004FF60(*(_QWORD *)(v0 + 328), &qword_10119F140);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    sub_10004FF60(v7, &qword_10119F280);
    v8 = *(_QWORD *)(v0 + 544);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 544);
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 128);
    sub_100065228(*(_QWORD *)(v0 + 144), v10, &qword_10119F288);
    sub_10004A160(v10, v11, &qword_10119F288);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    v8 = *(_QWORD *)(v0 + 544);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v8 = sub_1004319D8(0, *(_QWORD *)(v8 + 16) + 1, 1, *(_QWORD *)(v0 + 544));
    v14 = *(_QWORD *)(v8 + 16);
    v13 = *(_QWORD *)(v8 + 24);
    if (v14 >= v13 >> 1)
      v8 = sub_1004319D8(v13 > 1, v14 + 1, 1, v8);
    v16 = *(_QWORD *)(v0 + 344);
    v15 = *(_QWORD *)(v0 + 352);
    v18 = *(_QWORD *)(v0 + 328);
    v17 = *(_QWORD *)(v0 + 336);
    v19 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)(v8 + 16) = v14 + 1;
    sub_100065228(v19, v8+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v14, &qword_10119F288);
    sub_10004FF60(v20, &qword_10119F288);
    sub_10004FF60(v18, &qword_10119F140);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  v22 = *(int *)(v0 + 568);
  v23 = *(_QWORD *)(v0 + 520);
  v24 = *(_QWORD *)(v0 + 400);
  v25 = *(_QWORD *)(v0 + 384);
  sub_10004FF60(*(_QWORD *)(v0 + 152), &qword_10119F280);
  v26 = *(_QWORD *)(v25 + v22);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 80), v24, v23);
  if (v26 == *(_QWORD *)(v0 + 80))
  {
    v27 = *(_QWORD *)(v0 + 488);
    v28 = *(_QWORD *)(v0 + 456);
    v29 = *(_QWORD *)(v0 + 464);
    v30 = *(_QWORD *)(v0 + 424);
    v31 = *(_QWORD *)(v0 + 400);
    v32 = *(_QWORD *)(v0 + 408);
    sub_10004FF60(*(_QWORD *)(v0 + 384), (uint64_t *)&unk_1011ACA90);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    v33 = *(_QWORD *)(v0 + 480);
    v34 = *(_QWORD *)(v0 + 472);
    v36 = *(_QWORD *)(v0 + 440);
    v35 = *(_QWORD *)(v0 + 448);
    v38 = *(_QWORD *)(v0 + 424);
    v37 = *(_QWORD *)(v0 + 432);
    v39 = *(_QWORD *)(v0 + 416);
    v40 = *(_QWORD *)(v0 + 392);
    v115 = *(_QWORD *)(v0 + 384);
    v116 = *(_QWORD *)(v0 + 376);
    v117 = *(_QWORD *)(v0 + 360);
    v118 = *(_QWORD *)(v0 + 352);
    v119 = *(_QWORD *)(v0 + 328);
    v120 = *(_QWORD *)(v0 + 320);
    v121 = *(_QWORD *)(v0 + 312);
    v122 = *(_QWORD *)(v0 + 304);
    v123 = *(_QWORD *)(v0 + 296);
    v124 = *(_QWORD *)(v0 + 288);
    v125 = *(_QWORD *)(v0 + 280);
    v126 = *(_QWORD *)(v0 + 272);
    v127 = *(_QWORD *)(v0 + 256);
    v128 = *(_QWORD *)(v0 + 248);
    v130 = *(_QWORD *)(v0 + 240);
    v132 = *(_QWORD *)(v0 + 216);
    v134 = *(_QWORD *)(v0 + 208);
    v136 = *(_QWORD *)(v0 + 200);
    v138 = *(_QWORD *)(v0 + 192);
    v140 = *(_QWORD *)(v0 + 184);
    v142 = *(_QWORD *)(v0 + 176);
    v144 = *(_QWORD *)(v0 + 152);
    v146 = *(_QWORD *)(v0 + 144);
    v148 = *(_QWORD *)(v0 + 136);
    v150 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 488));
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v115);
    swift_task_dealloc(v116);
    swift_task_dealloc(v117);
    swift_task_dealloc(v118);
    swift_task_dealloc(v119);
    swift_task_dealloc(v120);
    swift_task_dealloc(v121);
    swift_task_dealloc(v122);
    swift_task_dealloc(v123);
    swift_task_dealloc(v124);
    swift_task_dealloc(v125);
    swift_task_dealloc(v126);
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v130);
    swift_task_dealloc(v132);
    swift_task_dealloc(v134);
    swift_task_dealloc(v136);
    swift_task_dealloc(v138);
    swift_task_dealloc(v140);
    swift_task_dealloc(v142);
    swift_task_dealloc(v144);
    swift_task_dealloc(v146);
    swift_task_dealloc(v148);
    swift_task_dealloc(v150);
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v8);
  }
  *(_QWORD *)(v0 + 544) = v8;
  v131 = *(_QWORD *)(v0 + 520);
  v133 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
  v42 = *(_QWORD *)(v0 + 416);
  v135 = *(_QWORD *)(v0 + 408);
  v43 = *(_QWORD *)(v0 + 400);
  v44 = *(_QWORD *)(v0 + 384);
  v45 = *(_QWORD *)(v0 + 360);
  v139 = *(_QWORD *)(v0 + 352);
  v46 = *(_QWORD *)(v0 + 336);
  v47 = *(_QWORD *)(v0 + 344);
  v143 = *(_QWORD *)(v0 + 320);
  v151 = *(_QWORD *)(v0 + 272);
  v147 = *(_QWORD *)(v0 + 312);
  v149 = *(_QWORD *)(v0 + 264);
  v137 = *(_QWORD *)(v0 + 104) + *(_QWORD *)(v0 + 528);
  v48 = v44 + *(int *)(v0 + 568);
  v141 = *(_QWORD *)(v0 + 232);
  v145 = *(_QWORD *)(v0 + 224);
  v49 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v0 + 16, v48, v43, v131);
  v129 = *(void (**)(uint64_t))(v47 + 16);
  v129(v45);
  v49(v0 + 16, 0);
  v133(v42, v44, v43);
  dispatch thunk of Collection.formIndex(after:)(v48, v43, v131);
  (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v42, v43);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v139, v45, v46);
  sub_10004A160(v137, v143, &qword_10119ED10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56))(v147, 1, 1, v145);
  v50 = v151 + *(int *)(v149 + 48);
  sub_10004A160(v143, v151, &qword_10119ED10);
  sub_10004A160(v147, v50, &qword_10119ED10);
  v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48);
  *(_QWORD *)(v0 + 552) = v51;
  if (v51(v151, 1, v145) == 1)
  {
    if (v51(v50, 1, *(_QWORD *)(v0 + 224)) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 272), &qword_10119ED10);
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  v52 = *(_QWORD *)(v0 + 224);
  sub_10004A160(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 304), &qword_10119ED10);
  v53 = v51(v50, 1, v52);
  v54 = *(_QWORD *)(v0 + 304);
  if (v53 == 1)
  {
    sub_10005B748(*(_QWORD *)(v0 + 304), type metadata accessor for Library.Context);
LABEL_15:
    sub_10004FF60(*(_QWORD *)(v0 + 272), &qword_10119EE40);
LABEL_19:
    v68 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v0 + 496);
    v69 = *(_QWORD *)(v0 + 456);
    v70 = *(_QWORD **)(v0 + 440);
    v71 = *(_QWORD *)(v0 + 320);
    v72 = *(_QWORD *)(v0 + 104);
    sub_10004FF60(*(_QWORD *)(v0 + 312), &qword_10119ED10);
    sub_10004FF60(v71, &qword_10119ED10);
    v73 = (_QWORD *)swift_task_alloc(16);
    *v73 = v69;
    v74 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
    v73[1] = v74;
    KeyPath = swift_getKeyPath(&unk_100EA8BD0);
    swift_task_dealloc(v73);
    v76 = (_QWORD *)swift_task_alloc(16);
    *v76 = v69;
    v76[1] = v74;
    v77 = swift_getKeyPath(&unk_100EA8C08);
    swift_task_dealloc(v76);
    static Published.subscript.getter(v70, v72, KeyPath, v77);
    swift_release(v77);
    v78 = swift_release(KeyPath);
    if (v68(v70, 1, v69, v78) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 440), &qword_1011A8FA0);
      v79 = 1;
    }
    else
    {
      v80 = *(_QWORD *)(v0 + 296);
      v81 = *(_QWORD *)(v0 + 224);
      v82 = *(_QWORD *)(v0 + 104) + *(_QWORD *)(v0 + 528);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 504))(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 456));
      sub_10004A160(v82, v80, &qword_10119ED10);
      v83 = v51(v80, 1, v81);
      v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
      v85 = *(_QWORD *)(v0 + 480);
      v86 = *(_QWORD *)(v0 + 456);
      v87 = *(_QWORD *)(v0 + 296);
      if (v83 == 1)
      {
        v88 = *(_QWORD *)(v0 + 200);
        v89 = *(_QWORD *)(v0 + 160);
        sub_10004FF60(v87, &qword_10119ED10);
        v84(v88, v85, v86);
        v90 = v88;
        v91 = v89;
        v92 = 1;
      }
      else
      {
        v98 = *(_QWORD *)(v0 + 248);
        v99 = *(_QWORD *)(v0 + 200);
        v100 = *(_QWORD *)(v0 + 160);
        sub_10005B6C0(v87, v98, type metadata accessor for Library.Context);
        v101 = v99 + *(int *)(sub_100007E8C(&qword_10119F168) + 48);
        v84(v99, v85, v86);
        sub_10005B6C0(v98, v101, type metadata accessor for Library.Context);
        v90 = v99;
        v91 = v100;
        v92 = 0;
      }
      swift_storeEnumTagMultiPayload(v90, v91, v92);
      v79 = 0;
    }
    v59 = (uint64_t *)(v0 + 200);
    v102 = *(_QWORD *)(v0 + 200);
    v103 = *(_QWORD *)(v0 + 192);
    v104 = *(_QWORD *)(v0 + 160);
    v105 = *(_QWORD *)(v0 + 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v102, v79, 1, v104);
    sub_10004A160(v102, v103, &qword_10119F148);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104) == 1)
    {
      v66 = *(_QWORD *)(v0 + 328);
      v67 = *(_QWORD *)(v0 + 192);
      goto LABEL_28;
    }
    v93 = *(_QWORD *)(v0 + 344);
    v153 = *(_QWORD *)(v0 + 352);
    v94 = *(_QWORD *)(v0 + 328);
    v95 = *(_QWORD *)(v0 + 336);
    v96 = *(_QWORD *)(v0 + 192);
    v97 = *(_QWORD *)(v0 + 176);
LABEL_30:
    sub_100065228(v96, v97, &qword_10119F150);
    sub_10004A160(v97, v94, &qword_10119F150);
    v107 = sub_100007E8C(&qword_10119F158);
    v108 = v94 + *(int *)(v107 + 36);
    v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56);
    v109(v108, 1, 1, v95);
    v110 = sub_100007E8C(&qword_10119F160);
    swift_storeEnumTagMultiPayload(v108, v110, 0);
    *(_BYTE *)(v94 + *(int *)(v107 + 40)) = 2;
    sub_10004FF60(v108, &qword_10119F160);
    ((void (*)(uint64_t, uint64_t, uint64_t))v129)(v108, v153, v95);
    v109(v108, 0, 1, v95);
    swift_storeEnumTagMultiPayload(v108, v110, 0);
    sub_10004FF60(v97, &qword_10119F150);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v94, 0, 1, v107);
    goto LABEL_31;
  }
  v55 = *(_QWORD *)(v0 + 272);
  v56 = *(_QWORD *)(v0 + 256);
  sub_10005B6C0(v50, v56, type metadata accessor for Library.Context);
  v57 = static Library.Context.__derived_struct_equals(_:_:)(v54, v56);
  sub_10005B748(v56, type metadata accessor for Library.Context);
  sub_10005B748(v54, type metadata accessor for Library.Context);
  sub_10004FF60(v55, &qword_10119ED10);
  if ((v57 & 1) == 0)
    goto LABEL_19;
LABEL_17:
  v59 = (uint64_t *)(v0 + 216);
  v58 = *(_QWORD *)(v0 + 216);
  v152 = *(_QWORD *)(v0 + 488);
  v60 = *(_QWORD *)(v0 + 456);
  v61 = *(_QWORD *)(v0 + 464);
  v62 = *(_QWORD *)(v0 + 320);
  v63 = *(_QWORD *)(v0 + 208);
  v65 = *(_QWORD *)(v0 + 160);
  v64 = *(_QWORD *)(v0 + 168);
  sub_10004FF60(*(_QWORD *)(v0 + 312), &qword_10119ED10);
  sub_10004FF60(v62, &qword_10119ED10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v58, v152, v60);
  swift_storeEnumTagMultiPayload(v58, v65, 1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v58, 0, 1, v65);
  sub_10004A160(v58, v63, &qword_10119F148);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v63, 1, v65) != 1)
  {
    v93 = *(_QWORD *)(v0 + 344);
    v153 = *(_QWORD *)(v0 + 352);
    v94 = *(_QWORD *)(v0 + 328);
    v95 = *(_QWORD *)(v0 + 336);
    v96 = *(_QWORD *)(v0 + 208);
    v97 = *(_QWORD *)(v0 + 184);
    goto LABEL_30;
  }
  v66 = *(_QWORD *)(v0 + 328);
  v67 = *(_QWORD *)(v0 + 208);
LABEL_28:
  sub_10004FF60(v67, &qword_10119F148);
  v106 = sub_100007E8C(&qword_10119F158);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v66, 1, 1, v106);
LABEL_31:
  sub_10004FF60(*v59, &qword_10119F148);
  v111 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 560) = static MainActor.shared.getter(v112);
  v113 = dispatch thunk of Actor.unownedExecutor.getter(v111, &protocol witness table for MainActor);
  return swift_task_switch(sub_100094730, v113, v114);
}

uint64_t sub_1000954E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v4[24] = a3;
  v4[25] = v3;
  v4[22] = a1;
  v4[23] = a2;
  v5 = type metadata accessor for Logger(0);
  v4[26] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[27] = v6;
  v4[28] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F278) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[29] = swift_task_alloc(v7);
  v4[30] = swift_task_alloc(v7);
  v8 = sub_100007E8C(&qword_10119F280);
  v4[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119F288);
  v4[32] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[33] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[34] = swift_task_alloc(v11);
  v4[35] = swift_task_alloc(v11);
  v12 = sub_100007E8C(&qword_10119F150);
  v4[36] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[37] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[38] = swift_task_alloc(v14);
  v4[39] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F148) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[40] = swift_task_alloc(v15);
  v4[41] = swift_task_alloc(v15);
  v4[42] = swift_task_alloc(v15);
  v4[43] = swift_task_alloc(v15);
  v16 = type metadata accessor for Library.Context(0);
  v4[44] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v4[45] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[46] = swift_task_alloc(v18);
  v4[47] = swift_task_alloc(v18);
  v19 = sub_100007E8C(&qword_10119EE40);
  v4[48] = v19;
  v4[49] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_10119F290);
  v4[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011A9A00);
  v4[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F140) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[52] = swift_task_alloc(v22);
  v4[53] = swift_task_alloc(v22);
  v4[54] = swift_task_alloc(v22);
  v23 = sub_100007E8C(&qword_10119F298);
  v4[55] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v4[56] = v24;
  v4[57] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_10119F2A0);
  v4[58] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v4[59] = v26;
  v4[60] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_10119ED10);
  v4[61] = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v4[62] = v28;
  v29 = (*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[63] = swift_task_alloc(v29);
  v4[64] = swift_task_alloc(v29);
  v4[65] = swift_task_alloc(v29);
  v4[66] = swift_task_alloc(v29);
  v4[67] = swift_task_alloc(v29);
  v30 = sub_100007E8C(&qword_10119F2A8);
  v4[68] = v30;
  v31 = *(_QWORD *)(v30 - 8);
  v4[69] = v31;
  v32 = (*(_QWORD *)(v31 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[70] = swift_task_alloc(v32);
  v4[71] = swift_task_alloc(v32);
  v4[72] = swift_task_alloc(v32);
  v4[73] = swift_task_alloc(v32);
  v4[74] = swift_task_alloc(v32);
  v4[75] = swift_task_alloc(v32);
  v4[76] = swift_task_alloc(v32);
  v33 = sub_100007E8C(&qword_10119F2B0);
  v4[77] = v33;
  v34 = *(_QWORD *)(v33 - 8);
  v4[78] = v34;
  v35 = (*(_QWORD *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[79] = swift_task_alloc(v35);
  v4[80] = swift_task_alloc(v35);
  v4[81] = swift_task_alloc(v35);
  v4[82] = swift_task_alloc(v35);
  v4[83] = swift_task_alloc(v35);
  v4[84] = swift_task_alloc(v35);
  v4[85] = swift_task_alloc(v35);
  v4[86] = swift_task_alloc(v35);
  v36 = sub_100007E8C(&qword_10119F2B8);
  v4[87] = v36;
  v4[88] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v36 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F1D8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[89] = swift_task_alloc(v37);
  v4[90] = swift_task_alloc(v37);
  v38 = sub_100007E8C(&qword_10119E480);
  v4[91] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v38 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for Song(0);
  v4[92] = v39;
  v40 = *(_QWORD *)(v39 - 8);
  v4[93] = v40;
  v4[94] = swift_task_alloc((*(_QWORD *)(v40 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for Track(0);
  v4[95] = v41;
  v42 = *(_QWORD *)(v41 - 8);
  v4[96] = v42;
  v43 = (*(_QWORD *)(v42 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[97] = swift_task_alloc(v43);
  v4[98] = swift_task_alloc(v43);
  v4[99] = swift_task_alloc(v43);
  v44 = sub_100007E8C((uint64_t *)&unk_1011ACA90);
  v4[100] = v44;
  v45 = (*(_QWORD *)(*(_QWORD *)(v44 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[101] = swift_task_alloc(v45);
  v4[102] = swift_task_alloc(v45);
  v46 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011B1F10) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[103] = swift_task_alloc(v46);
  v4[104] = swift_task_alloc(v46);
  v47 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v4[105] = v47;
  v48 = *(_QWORD *)(v47 - 8);
  v4[106] = v48;
  v49 = (*(_QWORD *)(v48 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[107] = swift_task_alloc(v49);
  v4[108] = swift_task_alloc(v49);
  v50 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[109] = swift_task_alloc(v50);
  v4[110] = swift_task_alloc(v50);
  v51 = type metadata accessor for Album(0);
  v4[111] = v51;
  v52 = *(_QWORD *)(v51 - 8);
  v4[112] = v52;
  v53 = (*(_QWORD *)(v52 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[113] = swift_task_alloc(v53);
  v4[114] = swift_task_alloc(v53);
  return swift_task_switch(sub_100095AFC, 0, 0);
}

uint64_t sub_100095AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, _QWORD);
  void (*v61)(uint64_t);
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v90;
  char v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(uint64_t, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t *v165;
  uint64_t *v166;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  __n128 v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t KeyPath;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unsigned int (*v193)(uint64_t, uint64_t, uint64_t);
  uint64_t v194;
  unsigned int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unsigned int (*v210)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  __n128 v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unsigned int v225;
  void (*v226)(uint64_t, uint64_t, uint64_t);
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void (*v235)(uint64_t, uint64_t, uint64_t);
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  void (*v243)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void (*v256)(uint64_t, uint64_t, uint64_t);
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  void (*v264)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  __n128 v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  int *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  _QWORD *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  unint64_t v333;
  uint64_t v334;
  uint64_t v335;
  unint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  void (*v344)(uint64_t, uint64_t, uint64_t);
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  _QWORD *v350;
  uint64_t v351;
  _QWORD *v352;
  uint64_t v353;
  uint64_t *v354;
  uint64_t *v355;
  uint64_t v356;
  uint64_t v357;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 896);
  v3 = *(_QWORD *)(v1 + 888);
  v4 = *(_QWORD *)(v1 + 880);
  sub_10004A160(*(_QWORD *)(v1 + 184), v4, &qword_1011A8FA0);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v1 + 920) = v5;
  if (v5(v4, 1, v3) == 1)
  {
    v6 = *(_QWORD *)(v1 + 880);
    v7 = &qword_1011A8FA0;
LABEL_5:
    sub_10004FF60(v6, v7);
    v271 = sub_100042638((uint64_t)_swiftEmptyArrayStorage);
LABEL_8:
    v38 = *(_QWORD *)(v1 + 912);
    v39 = *(_QWORD *)(v1 + 904);
    v40 = *(_QWORD *)(v1 + 880);
    v41 = *(_QWORD *)(v1 + 872);
    v42 = *(_QWORD *)(v1 + 864);
    v43 = *(_QWORD *)(v1 + 856);
    v44 = *(_QWORD *)(v1 + 832);
    v45 = v1;
    v46 = *(_QWORD *)(v1 + 824);
    v47 = *(_QWORD *)(v45 + 816);
    v48 = *(_QWORD *)(v45 + 808);
    v272 = *(_QWORD *)(v45 + 792);
    v273 = *(_QWORD *)(v45 + 784);
    v274 = *(_QWORD *)(v45 + 776);
    v275 = *(_QWORD *)(v45 + 752);
    v276 = *(_QWORD *)(v45 + 728);
    v277 = *(_QWORD *)(v45 + 720);
    v278 = *(_QWORD *)(v45 + 712);
    v279 = *(_QWORD *)(v45 + 704);
    v280 = *(_QWORD *)(v45 + 688);
    v281 = *(_QWORD *)(v45 + 680);
    v282 = *(_QWORD *)(v45 + 672);
    v283 = *(_QWORD *)(v45 + 664);
    v284 = *(_QWORD *)(v45 + 656);
    v285 = *(_QWORD *)(v45 + 648);
    v286 = *(_QWORD *)(v45 + 640);
    v287 = *(_QWORD *)(v45 + 632);
    v288 = *(_QWORD *)(v45 + 608);
    v289 = *(_QWORD *)(v45 + 600);
    v290 = *(_QWORD *)(v45 + 592);
    v291 = *(_QWORD *)(v45 + 584);
    v292 = *(_QWORD *)(v45 + 576);
    v293 = *(_QWORD *)(v45 + 568);
    v294 = *(_QWORD *)(v45 + 560);
    v295 = *(_QWORD *)(v45 + 536);
    v296 = *(_QWORD *)(v45 + 528);
    v297 = *(_QWORD *)(v45 + 520);
    v298 = *(_QWORD *)(v45 + 512);
    v299 = *(_QWORD *)(v45 + 504);
    v300 = *(_QWORD *)(v45 + 480);
    v301 = *(_QWORD *)(v45 + 456);
    v302 = *(_QWORD *)(v45 + 432);
    v303 = *(_QWORD *)(v45 + 424);
    v304 = *(_QWORD *)(v45 + 416);
    v305 = *(_QWORD *)(v45 + 408);
    v307 = *(_QWORD *)(v45 + 400);
    v309 = *(_QWORD *)(v45 + 392);
    v311 = *(_QWORD *)(v45 + 376);
    v313 = *(_QWORD *)(v45 + 368);
    v316 = *(_QWORD *)(v45 + 344);
    v319 = *(_QWORD *)(v45 + 336);
    v321 = *(_QWORD *)(v45 + 328);
    v325 = *(_QWORD *)(v45 + 320);
    v330 = *(_QWORD *)(v45 + 312);
    v332 = *(_QWORD *)(v45 + 304);
    v335 = *(_QWORD *)(v45 + 280);
    v338 = *(_QWORD *)(v45 + 272);
    v342 = *(_QWORD *)(v45 + 248);
    v347 = *(_QWORD *)(v45 + 240);
    v351 = *(_QWORD *)(v45 + 232);
    v357 = *(_QWORD *)(v45 + 224);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v272);
    swift_task_dealloc(v273);
    swift_task_dealloc(v274);
    swift_task_dealloc(v275);
    swift_task_dealloc(v276);
    swift_task_dealloc(v277);
    swift_task_dealloc(v278);
    swift_task_dealloc(v279);
    swift_task_dealloc(v280);
    swift_task_dealloc(v281);
    swift_task_dealloc(v282);
    swift_task_dealloc(v283);
    swift_task_dealloc(v284);
    swift_task_dealloc(v285);
    swift_task_dealloc(v286);
    swift_task_dealloc(v287);
    swift_task_dealloc(v288);
    swift_task_dealloc(v289);
    swift_task_dealloc(v290);
    swift_task_dealloc(v291);
    swift_task_dealloc(v292);
    swift_task_dealloc(v293);
    swift_task_dealloc(v294);
    swift_task_dealloc(v295);
    swift_task_dealloc(v296);
    swift_task_dealloc(v297);
    swift_task_dealloc(v298);
    swift_task_dealloc(v299);
    swift_task_dealloc(v300);
    swift_task_dealloc(v301);
    swift_task_dealloc(v302);
    swift_task_dealloc(v303);
    swift_task_dealloc(v304);
    swift_task_dealloc(v305);
    swift_task_dealloc(v307);
    swift_task_dealloc(v309);
    swift_task_dealloc(v311);
    swift_task_dealloc(v313);
    swift_task_dealloc(v316);
    swift_task_dealloc(v319);
    swift_task_dealloc(v321);
    swift_task_dealloc(v325);
    swift_task_dealloc(v330);
    swift_task_dealloc(v332);
    swift_task_dealloc(v335);
    swift_task_dealloc(v338);
    swift_task_dealloc(v342);
    swift_task_dealloc(v347);
    swift_task_dealloc(v351);
    swift_task_dealloc(v357);
    return (*(uint64_t (**)(_QWORD *, unint64_t))(v45 + 8))(_swiftEmptyArrayStorage, v271);
  }
  v8 = *(_QWORD *)(v1 + 912);
  v9 = *(_QWORD *)(v1 + 888);
  v10 = *(_QWORD *)(v1 + 880);
  v11 = *(_QWORD *)(v1 + 848);
  v12 = *(_QWORD *)(v1 + 840);
  v13 = *(_QWORD *)(v1 + 832);
  v14 = *(_QWORD *)(v1 + 176);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 896) + 32);
  *(_QWORD *)(v1 + 928) = v15;
  v15(v8, v10, v9);
  sub_10004A160(v14, v13, &qword_1011B1F10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v12) == 1)
  {
    v16 = *(_QWORD *)(v1 + 832);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 896) + 8))(*(_QWORD *)(v1 + 912), *(_QWORD *)(v1 + 888));
    v7 = &qword_1011B1F10;
    v6 = v16;
    goto LABEL_5;
  }
  v350 = (_QWORD *)(v1 + 80);
  v17 = (_QWORD *)(v1 + 144);
  v18 = *(_QWORD *)(v1 + 864);
  v19 = *(_QWORD *)(v1 + 848);
  v20 = *(_QWORD *)(v1 + 840);
  v21 = *(_QWORD *)(v1 + 816);
  v22 = *(_QWORD *)(v1 + 808);
  v23 = *(_QWORD *)(v1 + 800);
  v24 = *(_QWORD *)(v1 + 200);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 32))(v18, *(_QWORD *)(v1 + 832), v20);
  *(_QWORD *)(v1 + 168) = sub_100042638((uint64_t)_swiftEmptyArrayStorage);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  *(_QWORD *)(v1 + 936) = v25;
  v25(v22, v18, v20);
  v356 = v1;
  v26 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  *(_QWORD *)(v356 + 944) = v26;
  dispatch thunk of Collection.startIndex.getter(v20);
  *(_QWORD *)(v22 + *(int *)(v23 + 36)) = *(_QWORD *)(v356 + 136);
  sub_100065228(v22, v21, (uint64_t *)&unk_1011ACA90);
  v27 = *(int *)(v23 + 36);
  *(_DWORD *)(v356 + 1056) = v27;
  v28 = *(_QWORD *)(*(_QWORD *)v24 + 104);
  *(_QWORD *)(v356 + 952) = v28;
  swift_beginAccess(v24 + v28, v350, 0, 0);
  v29 = *(_QWORD *)(v21 + v27);
  v329 = v17;
  v30 = v26;
  v1 = v356;
  dispatch thunk of Collection.endIndex.getter(v17, v20, v30);
  if (v29 == *(_QWORD *)(v356 + 144))
  {
LABEL_7:
    v31 = *(_QWORD *)(v1 + 912);
    v32 = *(_QWORD *)(v1 + 896);
    v33 = *(_QWORD *)(v1 + 888);
    v34 = *(_QWORD *)(v1 + 864);
    v35 = *(_QWORD *)(v1 + 848);
    v36 = *(_QWORD *)(v1 + 840);
    sub_10004FF60(*(_QWORD *)(v1 + 816), (uint64_t *)&unk_1011ACA90);
    v37 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    (*(void (**)(uint64_t, uint64_t, __n128))(v35 + 8))(v34, v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    v271 = *(_QWORD *)(v1 + 168);
    goto LABEL_8;
  }
  *(_DWORD *)(v356 + 1060) = enum case for Track.song(_:);
  *(_QWORD *)(v356 + 1048) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v356 + 1040) = _swiftEmptyArrayStorage;
  v50 = v356 + 48;
  while (1)
  {
    LODWORD(v350) = *(_DWORD *)(v1 + 1060);
    v52 = *(int *)(v1 + 1056);
    v333 = *(_QWORD *)(v1 + 944);
    v336 = *(_QWORD *)(v1 + 936);
    v53 = *(_QWORD *)(v356 + 856);
    v54 = *(_QWORD *)(v356 + 840);
    v55 = *(_QWORD *)(v356 + 816);
    v56 = *(_QWORD *)(v356 + 792);
    v339 = *(_QWORD *)(v356 + 848);
    v343 = *(_QWORD *)(v356 + 784);
    v348 = *(_QWORD *)(v356 + 776);
    v57 = *(_QWORD *)(v356 + 768);
    v58 = v55 + v52;
    v59 = *(_QWORD *)(v356 + 760);
    v60 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v50, v55 + v52, v54, v333);
    v61 = *(void (**)(uint64_t))(v57 + 16);
    *(_QWORD *)(v356 + 960) = v61;
    v61(v56);
    v60(v50, 0);
    ((void (*)(uint64_t, uint64_t, uint64_t))v336)(v53, v55, v54);
    dispatch thunk of Collection.formIndex(after:)(v58, v54, v333);
    v62 = *(void (**)(uint64_t, uint64_t))(v339 + 8);
    v63 = v53;
    v1 = v356;
    v62(v63, v54);
    v64 = v343;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v343, v56, v59);
    v344 = (void (*)(uint64_t, uint64_t, uint64_t))v61;
    ((void (*)(uint64_t, uint64_t, uint64_t))v61)(v348, v64, v59);
    v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 88))(v348, v59);
    v66 = *(_QWORD *)(v356 + 776);
    v67 = *(_QWORD *)(v356 + 768);
    v68 = *(_QWORD *)(v356 + 760);
    v69 = *(_QWORD *)(v356 + 744);
    v70 = *(_QWORD *)(v356 + 736);
    v71 = *(_QWORD *)(v356 + 728);
    if (v65 == (_DWORD)v350)
    {
      (*(void (**)(_QWORD, _QWORD))(v67 + 96))(*(_QWORD *)(v356 + 776), *(_QWORD *)(v356 + 760));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v71, v66, v70);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v71, 0, 1, v70);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v69 + 56))(*(_QWORD *)(v356 + 728), 1, 1, *(_QWORD *)(v356 + 736));
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
    }
    v72 = *(_QWORD *)(v356 + 744);
    v73 = *(_QWORD *)(v356 + 736);
    v74 = *(_QWORD *)(v356 + 728);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v74, 1, v73) != 1)
      break;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v356 + 768) + 8))(*(_QWORD *)(v356 + 784), *(_QWORD *)(v356 + 760));
    sub_10004FF60(v74, &qword_10119E480);
LABEL_11:
    v51 = *(_QWORD *)(*(_QWORD *)(v356 + 816) + *(int *)(v356 + 1056));
    dispatch thunk of Collection.endIndex.getter(v329, *(_QWORD *)(v356 + 840), *(_QWORD *)(v356 + 944));
    if (v51 == *(_QWORD *)(v356 + 144))
      goto LABEL_7;
  }
  v75 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v72 + 32))(*(_QWORD *)(v356 + 752), v74, v73);
  v76 = Song.workName.getter(v75);
  *(_QWORD *)(v356 + 968) = v77;
  if (!v77)
  {
    v78 = *(_QWORD *)(v356 + 784);
    v79 = *(_QWORD *)(v356 + 768);
    v80 = *(_QWORD *)(v356 + 760);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v356 + 744) + 8))(*(_QWORD *)(v356 + 752), *(_QWORD *)(v356 + 736));
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
    goto LABEL_11;
  }
  *(_QWORD *)(v356 + 976) = v76;
  v81 = _swiftEmptyArrayStorage;
  v82 = _swiftEmptyArrayStorage[2];
  if (!v82)
  {
LABEL_34:
    v128 = *(_QWORD *)(v356 + 720);
    v129 = *(_QWORD *)(v356 + 704);
    v130 = *(_QWORD *)(v356 + 696);
    v131 = *(_QWORD *)(v356 + 488);
    v132 = *(_QWORD *)(v356 + 496);
    v133 = *(_QWORD *)(v356 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v356 + 360) + 56))(v128, 1, 1, *(_QWORD *)(v356 + 352));
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v132 + 56))(v128, 0, 1, v131);
    v134 = v129 + *(int *)(v130 + 48);
    sub_10004A160(v133, v129, &qword_10119F1D8);
    sub_10004A160(v128, v134, &qword_10119F1D8);
    v135 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48);
    if (v135(v129, 1, v131) == 1)
    {
      v136 = *(_QWORD *)(v356 + 488);
      sub_10004FF60(*(_QWORD *)(v356 + 720), &qword_10119F1D8);
      if (v135(v134, 1, v136) == 1)
      {
        v137 = sub_10004FF60(*(_QWORD *)(v356 + 704), &qword_10119F1D8);
LABEL_42:
        v145 = Song.composerName.getter(v137);
        v337 = v146;
        v341 = v145;
        v147 = *(void (**)(uint64_t, uint64_t, uint64_t))(v356 + 960);
        v315 = *(_QWORD *)(v356 + 968);
        v318 = *(_QWORD *)(v356 + 856);
        v346 = *(_QWORD *)(v356 + 1040);
        v349 = *(_QWORD *)(v356 + 848);
        v353 = *(_QWORD *)(v356 + 840);
        v148 = *(_QWORD *)(v356 + 824);
        v149 = *(_QWORD *)(v356 + 784);
        v150 = *(_QWORD *)(v356 + 768);
        v151 = *(_QWORD *)(v356 + 760);
        v328 = *(_QWORD *)(v356 + 976);
        v331 = *(_QWORD *)(v356 + 656);
        v152 = *(_QWORD **)(v356 + 648);
        v334 = *(_QWORD *)(v356 + 640);
        v324 = *(int **)(v356 + 616);
        v153 = *(_QWORD *)(v356 + 408);
        v310 = *(_QWORD *)(v356 + 432);
        v306 = v149;
        v147(v153, v149, v151);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v150 + 56))(v153, 0, 1, v151);
        v308 = sub_100007E8C(&qword_10119F2C8);
        v154 = *(unsigned __int8 *)(v150 + 80);
        v155 = (v154 + 32) & ~v154;
        v156 = v155 + *(_QWORD *)(v150 + 72);
        v157 = v154 | 7;
        v158 = swift_allocObject(v308, v156, v154 | 7);
        *(_OWORD *)(v158 + 16) = xmmword_100EA7AA0;
        v147(v158 + v155, v149, v151);
        MusicItemCollection.init(arrayLiteral:)(v158, v151, &protocol witness table for Track);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v349 + 56))(v148, 0, 1, v353);
        sub_10009A6E4(v153, v148, v310);
        sub_10004FF60(v148, &qword_1011B1F10);
        sub_10004FF60(v153, &qword_1011A9A00);
        v159 = swift_allocObject(v308, v156, v157);
        *(_OWORD *)(v159 + 16) = xmmword_100EA7AA0;
        v147(v159 + v155, v306, v151);
        swift_bridgeObjectRetain();
        v160 = MusicItemCollection.init(arrayLiteral:)(v159, v151, &protocol witness table for Track);
        v161 = Song.artistName.getter(v160);
        v163 = v162;
        v164 = (char *)v152 + v324[9];
        MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v151, &protocol witness table for Track);
        *v152 = v328;
        v152[1] = v315;
        (*(void (**)(char *, uint64_t, uint64_t))(v349 + 40))(v164, v318, v353);
        v165 = (_QWORD *)((char *)v152 + v324[10]);
        *v165 = v341;
        v165[1] = v337;
        v166 = (_QWORD *)((char *)v152 + v324[11]);
        *v166 = v161;
        v166[1] = v163;
        sub_100065228((uint64_t)v152, v331, &qword_10119F2B0);
        sub_10004A160(v331, v334, &qword_10119F2B0);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v346);
        v168 = *(_QWORD *)(v356 + 1040);
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v168 = sub_1004319EC(0, *(_QWORD *)(v168 + 16) + 1, 1, v168);
        v170 = *(_QWORD *)(v168 + 16);
        v169 = *(_QWORD *)(v168 + 24);
        if (v170 >= v169 >> 1)
          v168 = sub_1004319EC(v169 > 1, v170 + 1, 1, v168);
        *(_QWORD *)(v356 + 1000) = v168;
        v171 = *(_QWORD *)(v356 + 640);
        v172 = *(_QWORD *)(v356 + 624);
        *(_QWORD *)(v168 + 16) = v170 + 1;
        sub_100065228(v171, v168+ ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80))+ *(_QWORD *)(v172 + 72) * v170, &qword_10119F2B0);
        v173 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v356 + 1008) = static MainActor.shared.getter(v174);
        v175 = dispatch thunk of Actor.unownedExecutor.getter(v173, &protocol witness table for MainActor);
        return swift_task_switch(sub_10009762C, v175, v176);
      }
    }
    else
    {
      v138 = *(_QWORD *)(v356 + 488);
      sub_10004A160(*(_QWORD *)(v356 + 704), *(_QWORD *)(v356 + 712), &qword_10119F1D8);
      v139 = v135(v134, 1, v138);
      v140 = *(_QWORD *)(v356 + 720);
      v141 = *(_QWORD *)(v356 + 712);
      if (v139 != 1)
      {
        v142 = *(_QWORD *)(v356 + 704);
        v143 = *(_QWORD *)(v356 + 536);
        sub_100065228(v134, v143, &qword_10119ED10);
        v144 = sub_1000805B8(v141, v143, &qword_10119ED10, &qword_10119EE40);
        sub_10004FF60(v143, &qword_10119ED10);
        sub_10004FF60(v140, &qword_10119F1D8);
        sub_10004FF60(v141, &qword_10119ED10);
        v137 = sub_10004FF60(v142, &qword_10119F1D8);
        if ((v144 & 1) != 0)
          goto LABEL_42;
LABEL_47:
        v177 = *(_QWORD *)(v356 + 736);
        v178 = *(_QWORD *)(v356 + 464);
        v179 = type metadata accessor for Composer(0);
        v180 = sub_100048748(&qword_10119F2C0, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
        MusicLibrarySectionedRequest.init()(v179, v177, v180, &protocol witness table for Song);
        KeyPath = swift_getKeyPath(&unk_100EA8FF0);
        v182 = Song.id.getter(KeyPath);
        v184 = v183;
        *(_QWORD *)(v356 + 120) = v182;
        *(_QWORD *)(v356 + 128) = v183;
        MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(KeyPath, v356 + 120, v178, &protocol witness table for MusicItemID);
        swift_release(KeyPath);
        swift_bridgeObjectRelease(v184);
        v185 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrarySectionedRequest.response()[1]);
        *(_QWORD *)(v356 + 984) = v185;
        *v185 = v356;
        v185[1] = sub_1000975C8;
        return MusicLibrarySectionedRequest.response()(*(_QWORD *)(v356 + 456), *(_QWORD *)(v356 + 464));
      }
      sub_10004FF60(*(_QWORD *)(v356 + 720), &qword_10119F1D8);
      sub_10004FF60(v141, &qword_10119ED10);
    }
    sub_10004FF60(*(_QWORD *)(v356 + 704), &qword_10119F2B8);
    goto LABEL_47;
  }
  v83 = v77;
  v84 = *(_QWORD *)(v356 + 624);
  v85 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  v86 = *(_QWORD *)(v84 + 72);
  v87 = (_QWORD *)((char *)_swiftEmptyArrayStorage + v85 + v86 * (v82 - 1));
  v88 = v87[1];
  if (*v87 == v76 && v83 == v88)
  {
LABEL_25:
    v90 = _swiftEmptyArrayStorage;
    v91 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
    v92 = _swiftEmptyArrayStorage;
    if ((v91 & 1) != 0)
    {
      v93 = _swiftEmptyArrayStorage[2];
      if (v93)
        goto LABEL_27;
    }
    else
    {
      v92 = (_QWORD *)sub_10072E074((unint64_t)_swiftEmptyArrayStorage);
      v93 = v92[2];
      if (v93)
      {
LABEL_27:
        v94 = *(_QWORD *)(v356 + 688);
        v95 = *(_QWORD *)(v356 + 680);
        v96 = *(_QWORD *)(v356 + 672);
        v90 = *(_QWORD **)(v356 + 664);
        v71 = v93 - 1;
        v348 = v86;
        v97 = v92;
        sub_100065228((uint64_t)v92 + v85 + (v93 - 1) * v86, (uint64_t)v90, &qword_10119F2B0);
        v350 = v97;
        v97[2] = v71;
        sub_100065228((uint64_t)v90, v96, &qword_10119F2B0);
        sub_100065228(v96, v95, &qword_10119F2B0);
        sub_100065228(v95, v94, &qword_10119F2B0);
        if (!_swiftEmptyArrayStorage[2])
        {
          sub_10004FF60(*(_QWORD *)(v356 + 688), &qword_10119F2B0);
          v81 = _swiftEmptyArrayStorage;
          v127 = v350;
          goto LABEL_49;
        }
        v98 = _swiftEmptyArrayStorage;
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) != 0)
        {
LABEL_29:
          v340 = v85;
          v100 = v98[2];
          if (v100)
          {
            v320 = *(_QWORD *)(v356 + 856);
            v322 = *(_QWORD *)(v356 + 840);
            v101 = *(_QWORD *)(v356 + 768);
            v102 = *(_QWORD *)(v356 + 760);
            v103 = *(_QWORD *)(v356 + 688);
            v314 = *(_QWORD *)(v356 + 784);
            v317 = *(_QWORD *)(v356 + 616);
            v312 = *(_QWORD *)(v356 + 608);
            v104 = *(_QWORD *)(v356 + 600);
            v105 = *(_QWORD *)(v356 + 576);
            v106 = *(_QWORD *)(v356 + 568);
            v107 = *(_QWORD *)(v356 + 552);
            v108 = v100 - 1;
            v333 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
            v326 = *(_QWORD *)(v356 + 632);
            v329 = *(_QWORD **)(v107 + 72);
            sub_100065228((uint64_t)v98 + v333 + (_QWORD)v329 * (v100 - 1), v106, &qword_10119F2A8);
            v336 = (unint64_t)v98;
            v98[2] = v108;
            sub_100065228(v106, v105, &qword_10119F2A8);
            sub_100065228(v105, v104, &qword_10119F2A8);
            sub_100065228(v104, v312, &qword_10119F2A8);
            v109 = sub_100007E8C(&qword_10119F2C8);
            v110 = *(_QWORD *)(v101 + 72);
            v111 = *(unsigned __int8 *)(v101 + 80);
            v112 = (v111 + 32) & ~v111;
            v113 = swift_allocObject(v109, v112 + v110, v111 | 7);
            *(_OWORD *)(v113 + 16) = xmmword_100EA7AA0;
            v344(v113 + v112, v314, v102);
            MusicItemCollection.init(arrayLiteral:)(v113, v102, &protocol witness table for Track);
            v71 = v103 + *(int *)(v317 + 36);
            static MusicItemCollection.+= infix(_:_:)(v71, v320, v102, &protocol witness table for Track);
            v62(v320, v322);
            sub_10004A160(v103, v326, &qword_10119F2B0);
            v99 = (unint64_t)v350;
            v85 = v350[2];
            v100 = v350[3];
            v90 = (_QWORD *)(v85 + 1);
            if (v85 < v100 >> 1)
            {
LABEL_31:
              v114 = *(void (**)(uint64_t, uint64_t, uint64_t))(v356 + 936);
              v115 = *(_QWORD *)(v356 + 848);
              v116 = *(_QWORD *)(v356 + 840);
              v117 = *(_QWORD *)(v356 + 824);
              v118 = *(_QWORD *)(v356 + 632);
              v345 = *(_QWORD *)(v356 + 560);
              v323 = *(_QWORD *)(v356 + 544);
              v327 = *(_QWORD *)(v356 + 608);
              v120 = *(_QWORD *)(v356 + 408);
              v119 = *(_QWORD *)(v356 + 416);
              v352 = (_QWORD *)v99;
              *(_QWORD *)(v99 + 16) = v90;
              sub_100065228(v118, v99 + v340 + v85 * v348, &qword_10119F2B0);
              sub_10031E324(v120);
              v114(v117, v71, v116);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v115 + 56))(v117, 0, 1, v116);
              sub_10009A6E4(v120, v117, v119);
              sub_10004FF60(v117, &qword_1011B1F10);
              sub_10004FF60(v120, &qword_1011A9A00);
              sub_1000A3500(v119, v327 + *(int *)(v323 + 84));
              sub_10004A160(v327, v345, &qword_10119F2A8);
              v81 = (_QWORD *)v336;
              v122 = *(_QWORD *)(v336 + 16);
              v121 = *(_QWORD *)(v336 + 24);
              if (v122 >= v121 >> 1)
                v81 = (_QWORD *)sub_1004317B8(v121 > 1, v122 + 1, 1, v336);
              v1 = v356;
              v123 = *(_QWORD *)(v356 + 688);
              v124 = *(_QWORD *)(v356 + 608);
              v125 = *(_QWORD *)(v356 + 560);
              v126 = *(_QWORD *)(v356 + 416);
              v81[2] = v122 + 1;
              sub_100065228(v125, (uint64_t)v81 + v333 + v122 * (_QWORD)v329, &qword_10119F2A8);
              sub_10004FF60(v126, &qword_10119F140);
              sub_10004FF60(v123, &qword_10119F2B0);
              sub_10004FF60(v124, &qword_10119F2A8);
              v127 = v352;
              goto LABEL_49;
            }
          }
          else
          {
            __break(1u);
          }
          v99 = sub_1004319EC(v100 > 1, (int64_t)v90, 1, v99);
          goto LABEL_31;
        }
LABEL_72:
        v98 = (_QWORD *)sub_10072E060((unint64_t)_swiftEmptyArrayStorage);
        goto LABEL_29;
      }
    }
    __break(1u);
    goto LABEL_72;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v87, v88, v76, v83, 0) & 1) == 0)
    goto LABEL_34;
  if (_swiftEmptyArrayStorage[2])
    goto LABEL_25;
  v127 = _swiftEmptyArrayStorage;
LABEL_49:
  *(_QWORD *)(v1 + 1024) = v127;
  *(_QWORD *)(v1 + 1016) = v81;
  v186 = *(_QWORD *)(v1 + 528);
  v187 = *(_QWORD *)(v1 + 520);
  v188 = *(_QWORD *)(v1 + 384);
  v189 = *(_QWORD *)(v1 + 392);
  v190 = *(_QWORD *)(v1 + 352);
  v191 = *(_QWORD *)(v1 + 360);
  sub_10004A160(*(_QWORD *)(v1 + 200) + *(_QWORD *)(v1 + 952), v186, &qword_10119ED10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v191 + 56))(v187, 1, 1, v190);
  v192 = v189 + *(int *)(v188 + 48);
  sub_10004A160(v186, v189, &qword_10119ED10);
  sub_10004A160(v187, v192, &qword_10119ED10);
  v193 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48);
  if (v193(v189, 1, v190) == 1)
  {
    if (v193(v192, 1, *(_QWORD *)(v1 + 352)) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v1 + 392), &qword_10119ED10);
      goto LABEL_56;
    }
LABEL_54:
    sub_10004FF60(*(_QWORD *)(v1 + 392), &qword_10119EE40);
    goto LABEL_58;
  }
  v194 = *(_QWORD *)(v1 + 352);
  sub_10004A160(*(_QWORD *)(v1 + 392), *(_QWORD *)(v1 + 512), &qword_10119ED10);
  v195 = v193(v192, 1, v194);
  v196 = *(_QWORD *)(v1 + 512);
  if (v195 == 1)
  {
    sub_10005B748(*(_QWORD *)(v1 + 512), type metadata accessor for Library.Context);
    goto LABEL_54;
  }
  v197 = *(_QWORD *)(v1 + 392);
  v198 = *(_QWORD *)(v1 + 376);
  sub_10005B6C0(v192, v198, type metadata accessor for Library.Context);
  v199 = static Library.Context.__derived_struct_equals(_:_:)(v196, v198);
  sub_10005B748(v198, type metadata accessor for Library.Context);
  sub_10005B748(v196, type metadata accessor for Library.Context);
  sub_10004FF60(v197, &qword_10119ED10);
  if ((v199 & 1) != 0)
  {
LABEL_56:
    v200 = *(_QWORD *)(v1 + 912);
    v201 = *(_QWORD *)(v1 + 896);
    v202 = *(_QWORD *)(v1 + 888);
    v203 = *(_QWORD *)(v1 + 528);
    v354 = (uint64_t *)(v1 + 344);
    v205 = *(_QWORD *)(v1 + 336);
    v204 = *(_QWORD *)(v1 + 344);
    v206 = *(_QWORD *)(v1 + 288);
    v207 = *(_QWORD *)(v1 + 296);
    sub_10004FF60(*(_QWORD *)(v1 + 520), &qword_10119ED10);
    sub_10004FF60(v203, &qword_10119ED10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v201 + 16))(v204, v200, v202);
    swift_storeEnumTagMultiPayload(v204, v206, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v207 + 56))(v204, 0, 1, v206);
    sub_10004A160(v204, v205, &qword_10119F148);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v207 + 48))(v205, 1, v206) == 1)
    {
      v208 = *(_QWORD *)(v1 + 424);
      sub_10004FF60(*(_QWORD *)(v1 + 336), &qword_10119F148);
      v209 = sub_100007E8C(&qword_10119F158);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 56))(v208, 1, 1, v209);
    }
    else
    {
      v235 = *(void (**)(uint64_t, uint64_t, uint64_t))(v356 + 960);
      v236 = *(_QWORD *)(v356 + 784);
      v237 = *(_QWORD *)(v356 + 768);
      v238 = *(_QWORD *)(v356 + 760);
      v239 = *(_QWORD *)(v356 + 424);
      v240 = *(_QWORD *)(v356 + 312);
      sub_100065228(*(_QWORD *)(v356 + 336), v240, &qword_10119F150);
      sub_10004A160(v240, v239, &qword_10119F150);
      v241 = sub_100007E8C(&qword_10119F158);
      v242 = v239 + *(int *)(v241 + 36);
      v243 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v237 + 56);
      v243(v242, 1, 1, v238);
      v244 = sub_100007E8C(&qword_10119F160);
      swift_storeEnumTagMultiPayload(v242, v244, 0);
      *(_BYTE *)(v239 + *(int *)(v241 + 40)) = 2;
      sub_10004FF60(v242, &qword_10119F160);
      v235(v242, v236, v238);
      v1 = v356;
      v243(v242, 0, 1, v238);
      swift_storeEnumTagMultiPayload(v242, v244, 0);
      sub_10004FF60(v240, &qword_10119F150);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v241 - 8) + 56))(v239, 0, 1, v241);
    }
    v245 = v354;
  }
  else
  {
LABEL_58:
    v210 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v1 + 920);
    v211 = *(_QWORD *)(v1 + 888);
    v212 = *(_QWORD **)(v1 + 872);
    v213 = *(_QWORD *)(v1 + 528);
    v214 = *(_QWORD *)(v1 + 200);
    sub_10004FF60(*(_QWORD *)(v1 + 520), &qword_10119ED10);
    sub_10004FF60(v213, &qword_10119ED10);
    v215 = (_QWORD *)swift_task_alloc(16);
    *v215 = v211;
    v216 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
    v215[1] = v216;
    v217 = swift_getKeyPath(&unk_100EA8BD0);
    swift_task_dealloc(v215);
    v218 = (_QWORD *)swift_task_alloc(16);
    *v218 = v211;
    v218[1] = v216;
    v219 = swift_getKeyPath(&unk_100EA8C08);
    swift_task_dealloc(v218);
    static Published.subscript.getter(v212, v214, v217, v219);
    swift_release(v219);
    v220 = swift_release(v217);
    if (v210(v212, 1, v211, v220) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v1 + 872), &qword_1011A8FA0);
      v221 = 1;
    }
    else
    {
      v222 = *(_QWORD *)(v1 + 504);
      v223 = *(_QWORD *)(v1 + 352);
      v224 = *(_QWORD *)(v1 + 200) + *(_QWORD *)(v1 + 952);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 928))(*(_QWORD *)(v1 + 904), *(_QWORD *)(v1 + 872), *(_QWORD *)(v1 + 888));
      sub_10004A160(v224, v222, &qword_10119ED10);
      v225 = v193(v222, 1, v223);
      v226 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 928);
      v227 = *(_QWORD *)(v1 + 904);
      v228 = *(_QWORD *)(v1 + 888);
      v229 = *(_QWORD *)(v1 + 504);
      if (v225 == 1)
      {
        v230 = *(_QWORD *)(v1 + 328);
        v231 = *(_QWORD *)(v1 + 288);
        sub_10004FF60(v229, &qword_10119ED10);
        v226(v230, v227, v228);
        v232 = v230;
        v233 = v231;
        v234 = 1;
      }
      else
      {
        v246 = *(_QWORD *)(v1 + 368);
        v247 = *(_QWORD *)(v1 + 328);
        v248 = *(_QWORD *)(v1 + 288);
        sub_10005B6C0(v229, v246, type metadata accessor for Library.Context);
        v249 = v247 + *(int *)(sub_100007E8C(&qword_10119F168) + 48);
        v226(v247, v227, v228);
        sub_10005B6C0(v246, v249, type metadata accessor for Library.Context);
        v232 = v247;
        v233 = v248;
        v234 = 0;
      }
      swift_storeEnumTagMultiPayload(v232, v233, v234);
      v221 = 0;
    }
    v245 = (uint64_t *)(v1 + 328);
    v251 = *(_QWORD *)(v1 + 320);
    v250 = *(_QWORD *)(v1 + 328);
    v252 = *(_QWORD *)(v1 + 288);
    v253 = *(_QWORD *)(v1 + 296);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v253 + 56))(v250, v221, 1, v252);
    sub_10004A160(v250, v251, &qword_10119F148);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v253 + 48))(v251, 1, v252) == 1)
    {
      v254 = *(_QWORD *)(v1 + 424);
      sub_10004FF60(*(_QWORD *)(v1 + 320), &qword_10119F148);
      v255 = sub_100007E8C(&qword_10119F158);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v255 - 8) + 56))(v254, 1, 1, v255);
    }
    else
    {
      v256 = *(void (**)(uint64_t, uint64_t, uint64_t))(v356 + 960);
      v257 = *(_QWORD *)(v356 + 784);
      v258 = *(_QWORD *)(v356 + 768);
      v355 = v245;
      v259 = *(_QWORD *)(v356 + 760);
      v260 = *(_QWORD *)(v356 + 424);
      v261 = *(_QWORD *)(v356 + 304);
      sub_100065228(*(_QWORD *)(v356 + 320), v261, &qword_10119F150);
      sub_10004A160(v261, v260, &qword_10119F150);
      v262 = sub_100007E8C(&qword_10119F158);
      v263 = v260 + *(int *)(v262 + 36);
      v264 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v258 + 56);
      v264(v263, 1, 1, v259);
      v265 = sub_100007E8C(&qword_10119F160);
      swift_storeEnumTagMultiPayload(v263, v265, 0);
      *(_BYTE *)(v260 + *(int *)(v262 + 40)) = 2;
      sub_10004FF60(v263, &qword_10119F160);
      v256(v263, v257, v259);
      v266 = v259;
      v245 = v355;
      v1 = v356;
      v264(v263, 0, 1, v266);
      swift_storeEnumTagMultiPayload(v263, v265, 0);
      sub_10004FF60(v261, &qword_10119F150);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v262 - 8) + 56))(v260, 0, 1, v262);
    }
  }
  sub_10004FF60(*v245, &qword_10119F148);
  v267 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 1032) = static MainActor.shared.getter(v268);
  v269 = dispatch thunk of Actor.unownedExecutor.getter(v267, &protocol witness table for MainActor);
  return swift_task_switch(sub_100097FE4, v269, v270);
}

uint64_t sub_1000975C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 984);
  *(_QWORD *)(*(_QWORD *)v1 + 992) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10009A070;
  else
    v3 = sub_100099B88;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10009762C()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;

  v1 = (uint64_t *)v0[82];
  v2 = v0[54];
  v3 = (uint64_t *)v0[50];
  swift_release(v0[126]);
  sub_10009A97C(v1, v2, v3);
  return swift_task_switch(sub_100097690, 0, 0);
}

uint64_t sub_100097690()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t KeyPath;
  _QWORD *v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  void (*v96)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  void (*v103)(uint64_t, uint64_t, uint64_t);
  void (*v104)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 400);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 552) + 48))(v1, 1, *(_QWORD *)(v0 + 544)) == 1)
  {
    sub_10004FF60(v1, &qword_10119F290);
    v2 = *(_QWORD *)(v0 + 1048);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 1048);
    v4 = *(_QWORD *)(v0 + 592);
    v5 = *(_QWORD *)(v0 + 584);
    sub_100065228(v1, v4, &qword_10119F2A8);
    sub_10004A160(v4, v5, &qword_10119F2A8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
    v2 = *(_QWORD *)(v0 + 1048);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v2 = sub_1004317B8(0, *(_QWORD *)(v2 + 16) + 1, 1, *(_QWORD *)(v0 + 1048));
    v8 = *(_QWORD *)(v2 + 16);
    v7 = *(_QWORD *)(v2 + 24);
    if (v8 >= v7 >> 1)
      v2 = sub_1004317B8(v7 > 1, v8 + 1, 1, v2);
    v9 = *(_QWORD *)(v0 + 592);
    v10 = *(_QWORD *)(v0 + 584);
    v11 = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v2 + 16) = v8 + 1;
    sub_100065228(v10, v2+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v8, &qword_10119F2A8);
    sub_10004FF60(v9, &qword_10119F2A8);
  }
  v12 = *(_QWORD *)(v0 + 976);
  v13 = *(_QWORD *)(v0 + 968);
  v14 = *(_QWORD *)(v0 + 656);
  v15 = *(_QWORD *)(v0 + 432);
  swift_bridgeObjectRetain();
  v16 = *(_QWORD *)(v0 + 168);
  v17 = swift_isUniquelyReferenced_nonNull_native(v16);
  sub_1005ECE78((uint64_t)_swiftEmptyArrayStorage, v12, v13, v17);
  *(_QWORD *)(v0 + 168) = v16;
  swift_bridgeObjectRelease(0x8000000000000000);
  swift_bridgeObjectRelease(v13);
  sub_10004FF60(v14, &qword_10119F2B0);
  sub_10004FF60(v15, &qword_10119F140);
  *(_QWORD *)(v0 + 1024) = *(_QWORD *)(v0 + 1000);
  *(_QWORD *)(v0 + 1016) = v2;
  v18 = *(_QWORD *)(v0 + 528);
  v19 = *(_QWORD *)(v0 + 520);
  v20 = *(_QWORD *)(v0 + 384);
  v21 = *(_QWORD *)(v0 + 392);
  v22 = *(_QWORD *)(v0 + 352);
  v23 = *(_QWORD *)(v0 + 360);
  sub_10004A160(*(_QWORD *)(v0 + 200) + *(_QWORD *)(v0 + 952), v18, &qword_10119ED10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v19, 1, 1, v22);
  v24 = v21 + *(int *)(v20 + 48);
  sub_10004A160(v18, v21, &qword_10119ED10);
  sub_10004A160(v19, v24, &qword_10119ED10);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v25(v21, 1, v22) == 1)
  {
    if (v25(v24, 1, *(_QWORD *)(v0 + 352)) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 392), &qword_10119ED10);
LABEL_15:
      v32 = *(_QWORD *)(v0 + 912);
      v33 = *(_QWORD *)(v0 + 896);
      v34 = *(_QWORD *)(v0 + 888);
      v35 = *(_QWORD *)(v0 + 528);
      v37 = *(_QWORD *)(v0 + 336);
      v36 = *(_QWORD *)(v0 + 344);
      v38 = *(_QWORD *)(v0 + 288);
      v39 = *(_QWORD *)(v0 + 296);
      sub_10004FF60(*(_QWORD *)(v0 + 520), &qword_10119ED10);
      sub_10004FF60(v35, &qword_10119ED10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v36, v32, v34);
      swift_storeEnumTagMultiPayload(v36, v38, 1);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      sub_10004A160(v36, v37, &qword_10119F148);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
      {
        v40 = *(_QWORD *)(v0 + 424);
        sub_10004FF60(*(_QWORD *)(v0 + 336), &qword_10119F148);
        v41 = sub_100007E8C(&qword_10119F158);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
      }
      else
      {
        v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 960);
        v67 = *(_QWORD *)(v0 + 784);
        v68 = *(_QWORD *)(v0 + 768);
        v69 = *(_QWORD *)(v0 + 760);
        v70 = *(_QWORD *)(v0 + 424);
        v71 = *(_QWORD *)(v0 + 312);
        sub_100065228(*(_QWORD *)(v0 + 336), v71, &qword_10119F150);
        sub_10004A160(v71, v70, &qword_10119F150);
        v72 = sub_100007E8C(&qword_10119F158);
        v73 = v70 + *(int *)(v72 + 36);
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56);
        v74(v73, 1, 1, v69);
        v75 = sub_100007E8C(&qword_10119F160);
        swift_storeEnumTagMultiPayload(v73, v75, 0);
        *(_BYTE *)(v70 + *(int *)(v72 + 40)) = 2;
        sub_10004FF60(v73, &qword_10119F160);
        v103(v73, v67, v69);
        v74(v73, 0, 1, v69);
        swift_storeEnumTagMultiPayload(v73, v75, 0);
        sub_10004FF60(v71, &qword_10119F150);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v70, 0, 1, v72);
      }
      v76 = (uint64_t *)(v0 + 344);
      goto LABEL_28;
    }
    goto LABEL_13;
  }
  v26 = *(_QWORD *)(v0 + 352);
  sub_10004A160(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 512), &qword_10119ED10);
  v27 = v25(v24, 1, v26);
  v28 = *(_QWORD *)(v0 + 512);
  if (v27 == 1)
  {
    sub_10005B748(*(_QWORD *)(v0 + 512), type metadata accessor for Library.Context);
LABEL_13:
    sub_10004FF60(*(_QWORD *)(v0 + 392), &qword_10119EE40);
    goto LABEL_17;
  }
  v29 = *(_QWORD *)(v0 + 392);
  v30 = *(_QWORD *)(v0 + 376);
  sub_10005B6C0(v24, v30, type metadata accessor for Library.Context);
  v31 = static Library.Context.__derived_struct_equals(_:_:)(v28, v30);
  sub_10005B748(v30, type metadata accessor for Library.Context);
  sub_10005B748(v28, type metadata accessor for Library.Context);
  sub_10004FF60(v29, &qword_10119ED10);
  if ((v31 & 1) != 0)
    goto LABEL_15;
LABEL_17:
  v42 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v0 + 920);
  v43 = *(_QWORD *)(v0 + 888);
  v44 = *(_QWORD **)(v0 + 872);
  v45 = *(_QWORD *)(v0 + 528);
  v46 = *(_QWORD *)(v0 + 200);
  sub_10004FF60(*(_QWORD *)(v0 + 520), &qword_10119ED10);
  sub_10004FF60(v45, &qword_10119ED10);
  v47 = (_QWORD *)swift_task_alloc(16);
  *v47 = v43;
  v48 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  v47[1] = v48;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  swift_task_dealloc(v47);
  v50 = (_QWORD *)swift_task_alloc(16);
  *v50 = v43;
  v50[1] = v48;
  v51 = swift_getKeyPath(&unk_100EA8C08);
  swift_task_dealloc(v50);
  static Published.subscript.getter(v44, v46, KeyPath, v51);
  swift_release(v51);
  v52 = swift_release(KeyPath);
  if (v42(v44, 1, v43, v52) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 872), &qword_1011A8FA0);
    v53 = 1;
  }
  else
  {
    v54 = *(_QWORD *)(v0 + 504);
    v55 = *(_QWORD *)(v0 + 352);
    v56 = *(_QWORD *)(v0 + 200) + *(_QWORD *)(v0 + 952);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 928))(*(_QWORD *)(v0 + 904), *(_QWORD *)(v0 + 872), *(_QWORD *)(v0 + 888));
    sub_10004A160(v56, v54, &qword_10119ED10);
    v57 = v25(v54, 1, v55);
    v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 928);
    v59 = *(_QWORD *)(v0 + 904);
    v60 = *(_QWORD *)(v0 + 888);
    v61 = *(_QWORD *)(v0 + 504);
    if (v57 == 1)
    {
      v62 = *(_QWORD *)(v0 + 328);
      v63 = *(_QWORD *)(v0 + 288);
      sub_10004FF60(v61, &qword_10119ED10);
      v58(v62, v59, v60);
      v64 = v62;
      v65 = v63;
      v66 = 1;
    }
    else
    {
      v77 = *(_QWORD *)(v0 + 368);
      v78 = *(_QWORD *)(v0 + 328);
      v79 = *(_QWORD *)(v0 + 288);
      sub_10005B6C0(v61, v77, type metadata accessor for Library.Context);
      v80 = v78 + *(int *)(sub_100007E8C(&qword_10119F168) + 48);
      v58(v78, v59, v60);
      sub_10005B6C0(v77, v80, type metadata accessor for Library.Context);
      v64 = v78;
      v65 = v79;
      v66 = 0;
    }
    swift_storeEnumTagMultiPayload(v64, v65, v66);
    v53 = 0;
  }
  v76 = (uint64_t *)(v0 + 328);
  v81 = *(_QWORD *)(v0 + 320);
  v82 = *(_QWORD *)(v0 + 328);
  v83 = *(_QWORD *)(v0 + 288);
  v84 = *(_QWORD *)(v0 + 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v82, v53, 1, v83);
  sub_10004A160(v82, v81, &qword_10119F148);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v81, 1, v83) == 1)
  {
    v85 = *(_QWORD *)(v0 + 424);
    sub_10004FF60(*(_QWORD *)(v0 + 320), &qword_10119F148);
    v86 = sub_100007E8C(&qword_10119F158);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v85, 1, 1, v86);
  }
  else
  {
    v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 960);
    v87 = *(_QWORD *)(v0 + 784);
    v88 = *(_QWORD *)(v0 + 768);
    v89 = *(_QWORD *)(v0 + 760);
    v90 = *(_QWORD *)(v0 + 424);
    v91 = *(_QWORD *)(v0 + 304);
    sub_100065228(*(_QWORD *)(v0 + 320), v91, &qword_10119F150);
    sub_10004A160(v91, v90, &qword_10119F150);
    v92 = sub_100007E8C(&qword_10119F158);
    v93 = v90 + *(int *)(v92 + 36);
    v94 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56);
    v94(v93, 1, 1, v89);
    v95 = sub_100007E8C(&qword_10119F160);
    swift_storeEnumTagMultiPayload(v93, v95, 0);
    *(_BYTE *)(v90 + *(int *)(v92 + 40)) = 2;
    sub_10004FF60(v93, &qword_10119F160);
    v104(v93, v87, v89);
    v94(v93, 0, 1, v89);
    swift_storeEnumTagMultiPayload(v93, v95, 0);
    sub_10004FF60(v91, &qword_10119F150);
    v96 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56);
    v97 = v92;
    v76 = (uint64_t *)(v0 + 328);
    v96(v90, 0, 1, v97);
  }
LABEL_28:
  sub_10004FF60(*v76, &qword_10119F148);
  v98 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 1032) = static MainActor.shared.getter(v99);
  v100 = dispatch thunk of Actor.unownedExecutor.getter(v98, &protocol witness table for MainActor);
  return swift_task_switch(sub_100097FE4, v100, v101);
}

uint64_t sub_100097FE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[98];
  v2 = v0[53];
  v3 = v0[31];
  swift_release(v0[129]);
  sub_10009AE64(v1, v2, v3);
  return swift_task_switch(sub_100098048, 0, 0);
}

uint64_t sub_100098048()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD *);
  unint64_t *v15;
  unint64_t *v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(unint64_t, _QWORD);
  void (*v66)(uint64_t);
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  void (*v112)(uint64_t, unint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned int (*v151)(uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t *v177;
  uint64_t *v178;
  char v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __n128 v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t KeyPath;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unsigned int (*v211)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  uint64_t v220;
  __n128 v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unsigned int v226;
  void (*v227)(uint64_t, uint64_t, uint64_t);
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void (*v236)(uint64_t, uint64_t, uint64_t);
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  void (*v244)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v245;
  uint64_t *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  void (*v257)(uint64_t, uint64_t, uint64_t);
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  void (*v265)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  __n128 v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  unint64_t v322;
  unint64_t v323;
  uint64_t v324;
  int *v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  _QWORD *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  void (*v341)(uint64_t, uint64_t, uint64_t);
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  unint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  unint64_t v355;
  uint64_t v356;
  uint64_t v357;
  void (*v358)(unint64_t, _QWORD);
  uint64_t v359;
  uint64_t v360;
  int v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t *v364;
  uint64_t *v365;
  unint64_t v366;

  v1 = (unint64_t)v0;
  v330 = v0 + 18;
  v2 = v0[32];
  v3 = v0[33];
  v4 = v0[31];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    v5 = *(_QWORD *)(v1 + 784);
    v6 = *(_QWORD *)(v1 + 768);
    v7 = *(_QWORD *)(v1 + 760);
    v8 = *(_QWORD *)(v1 + 752);
    v9 = *(_QWORD *)(v1 + 744);
    v10 = *(_QWORD *)(v1 + 736);
    v11 = *(_QWORD *)(v1 + 424);
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 968));
    sub_10004FF60(v11, &qword_10119F140);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    sub_10004FF60(v4, &qword_10119F280);
  }
  else
  {
    v12 = *(_QWORD *)(v1 + 976);
    v13 = *(_QWORD *)(v1 + 968);
    sub_100065228(v4, *(_QWORD *)(v1 + 280), &qword_10119F288);
    v14 = sub_10009A5D0((_QWORD *)(v1 + 16), v12, v13);
    if (*v15)
    {
      v16 = v15;
      v358 = (void (*)(unint64_t, _QWORD))v14;
      sub_10004A160(*(_QWORD *)(v1 + 280), *(_QWORD *)(v1 + 272), &qword_10119F288);
      v17 = *v16;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v16);
      *v16 = v17;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v17 = sub_1004319D8(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
        *v16 = v17;
      }
      v20 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      if (v20 >= v19 >> 1)
      {
        v17 = sub_1004319D8(v19 > 1, v20 + 1, 1, v17);
        *v16 = v17;
      }
      v21 = *(_QWORD *)(v1 + 968);
      v349 = *(_QWORD *)(v1 + 760);
      v353 = *(_QWORD *)(v1 + 784);
      v339 = *(_QWORD *)(v1 + 752);
      v345 = *(_QWORD *)(v1 + 768);
      v22 = *(_QWORD *)(v1 + 744);
      v23 = *(_QWORD *)(v1 + 736);
      v24 = *(_QWORD *)(v1 + 424);
      v25 = *(_QWORD *)(v1 + 272);
      v26 = *(_QWORD *)(v1 + 280);
      v27 = *(_QWORD *)(v1 + 264);
      *(_QWORD *)(v17 + 16) = v20 + 1;
      sub_100065228(v25, v17+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v20, &qword_10119F288);
      v358(v1 + 16, 0);
      swift_bridgeObjectRelease(v21);
      sub_10004FF60(v26, &qword_10119F288);
      sub_10004FF60(v24, &qword_10119F140);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v339, v23);
      (*(void (**)(uint64_t, uint64_t))(v345 + 8))(v353, v349);
    }
    else
    {
      v28 = *(_QWORD *)(v1 + 968);
      v359 = *(_QWORD *)(v1 + 784);
      v29 = *(_QWORD *)(v1 + 768);
      v30 = *(_QWORD *)(v1 + 760);
      v31 = *(_QWORD *)(v1 + 752);
      v32 = *(_QWORD *)(v1 + 744);
      v33 = *(_QWORD *)(v1 + 736);
      v34 = *(_QWORD *)(v1 + 424);
      v35 = *(_QWORD *)(v1 + 280);
      ((void (*)(unint64_t, _QWORD))v14)(v1 + 16, 0);
      swift_bridgeObjectRelease(v28);
      sub_10004FF60(v35, &qword_10119F288);
      sub_10004FF60(v34, &qword_10119F140);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v359, v30);
    }
  }
  v36 = *(_QWORD *)(*(_QWORD *)(v1 + 816) + *(int *)(v1 + 1056));
  dispatch thunk of Collection.endIndex.getter(v330, *(_QWORD *)(v1 + 840), *(_QWORD *)(v1 + 944));
  v322 = *(_QWORD *)(v1 + 1016);
  v323 = *(_QWORD *)(v1 + 1024);
  if (v36 == *(_QWORD *)(v1 + 144))
  {
LABEL_11:
    v37 = *(_QWORD *)(v1 + 912);
    v38 = *(_QWORD *)(v1 + 896);
    v39 = *(_QWORD *)(v1 + 888);
    v40 = *(_QWORD *)(v1 + 864);
    v41 = *(_QWORD *)(v1 + 848);
    v42 = *(_QWORD *)(v1 + 840);
    sub_10004FF60(*(_QWORD *)(v1 + 816), (uint64_t *)&unk_1011ACA90);
    v43 = swift_bridgeObjectRelease(v323);
    (*(void (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v40, v42, v43);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    v360 = *(_QWORD *)(v1 + 168);
    v44 = *(_QWORD *)(v1 + 912);
    v45 = *(_QWORD *)(v1 + 904);
    v46 = *(_QWORD *)(v1 + 880);
    v47 = *(_QWORD *)(v1 + 872);
    v48 = *(_QWORD *)(v1 + 864);
    v49 = *(_QWORD *)(v1 + 856);
    v50 = *(_QWORD *)(v1 + 832);
    v51 = *(_QWORD *)(v1 + 824);
    v52 = v1;
    v53 = *(_QWORD *)(v1 + 816);
    v54 = *(_QWORD *)(v52 + 808);
    v272 = *(_QWORD *)(v52 + 792);
    v273 = *(_QWORD *)(v52 + 784);
    v274 = *(_QWORD *)(v52 + 776);
    v275 = *(_QWORD *)(v52 + 752);
    v276 = *(_QWORD *)(v52 + 728);
    v277 = *(_QWORD *)(v52 + 720);
    v278 = *(_QWORD *)(v52 + 712);
    v279 = *(_QWORD *)(v52 + 704);
    v280 = *(_QWORD *)(v52 + 688);
    v281 = *(_QWORD *)(v52 + 680);
    v282 = *(_QWORD *)(v52 + 672);
    v283 = *(_QWORD *)(v52 + 664);
    v284 = *(_QWORD *)(v52 + 656);
    v285 = *(_QWORD *)(v52 + 648);
    v286 = *(_QWORD *)(v52 + 640);
    v287 = *(_QWORD *)(v52 + 632);
    v288 = *(_QWORD *)(v52 + 608);
    v289 = *(_QWORD *)(v52 + 600);
    v290 = *(_QWORD *)(v52 + 592);
    v291 = *(_QWORD *)(v52 + 584);
    v292 = *(_QWORD *)(v52 + 576);
    v293 = *(_QWORD *)(v52 + 568);
    v294 = *(_QWORD *)(v52 + 560);
    v295 = *(_QWORD *)(v52 + 536);
    v296 = *(_QWORD *)(v52 + 528);
    v297 = *(_QWORD *)(v52 + 520);
    v298 = *(_QWORD *)(v52 + 512);
    v299 = *(_QWORD *)(v52 + 504);
    v300 = *(_QWORD *)(v52 + 480);
    v301 = *(_QWORD *)(v52 + 456);
    v302 = *(_QWORD *)(v52 + 432);
    v303 = *(_QWORD *)(v52 + 424);
    v304 = *(_QWORD *)(v52 + 416);
    v305 = *(_QWORD *)(v52 + 408);
    v306 = *(_QWORD *)(v52 + 400);
    v307 = *(_QWORD *)(v52 + 392);
    v308 = *(_QWORD *)(v52 + 376);
    v310 = *(_QWORD *)(v52 + 368);
    v312 = *(_QWORD *)(v52 + 344);
    v314 = *(_QWORD *)(v52 + 336);
    v316 = *(_QWORD *)(v52 + 328);
    v319 = *(_QWORD *)(v52 + 320);
    v324 = *(_QWORD *)(v52 + 312);
    v326 = *(_QWORD *)(v52 + 304);
    v331 = *(_QWORD *)(v52 + 280);
    v334 = *(_QWORD *)(v52 + 272);
    v340 = *(_QWORD *)(v52 + 248);
    v346 = *(_QWORD *)(v52 + 240);
    v350 = *(_QWORD *)(v52 + 232);
    v354 = *(_QWORD *)(v52 + 224);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v272);
    swift_task_dealloc(v273);
    swift_task_dealloc(v274);
    swift_task_dealloc(v275);
    swift_task_dealloc(v276);
    swift_task_dealloc(v277);
    swift_task_dealloc(v278);
    swift_task_dealloc(v279);
    swift_task_dealloc(v280);
    swift_task_dealloc(v281);
    swift_task_dealloc(v282);
    swift_task_dealloc(v283);
    swift_task_dealloc(v284);
    swift_task_dealloc(v285);
    swift_task_dealloc(v286);
    swift_task_dealloc(v287);
    swift_task_dealloc(v288);
    swift_task_dealloc(v289);
    swift_task_dealloc(v290);
    swift_task_dealloc(v291);
    swift_task_dealloc(v292);
    swift_task_dealloc(v293);
    swift_task_dealloc(v294);
    swift_task_dealloc(v295);
    swift_task_dealloc(v296);
    swift_task_dealloc(v297);
    swift_task_dealloc(v298);
    swift_task_dealloc(v299);
    swift_task_dealloc(v300);
    swift_task_dealloc(v301);
    swift_task_dealloc(v302);
    swift_task_dealloc(v303);
    swift_task_dealloc(v304);
    swift_task_dealloc(v305);
    swift_task_dealloc(v306);
    swift_task_dealloc(v307);
    swift_task_dealloc(v308);
    swift_task_dealloc(v310);
    swift_task_dealloc(v312);
    swift_task_dealloc(v314);
    swift_task_dealloc(v316);
    swift_task_dealloc(v319);
    swift_task_dealloc(v324);
    swift_task_dealloc(v326);
    swift_task_dealloc(v331);
    swift_task_dealloc(v334);
    swift_task_dealloc(v340);
    swift_task_dealloc(v346);
    swift_task_dealloc(v350);
    swift_task_dealloc(v354);
    return (*(uint64_t (**)(unint64_t, uint64_t))(v52 + 8))(v322, v360);
  }
  v327 = v1 + 48;
  *(_QWORD *)(v1 + 1048) = v322;
  *(_QWORD *)(v1 + 1040) = v323;
  v366 = v1;
  while (1)
  {
    v361 = *(_DWORD *)(v1 + 1060);
    v57 = *(int *)(v1 + 1056);
    v335 = *(_QWORD *)(v1 + 944);
    v341 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 936);
    v58 = *(_QWORD *)(v366 + 856);
    v59 = *(_QWORD *)(v366 + 840);
    v60 = *(_QWORD *)(v366 + 816);
    v61 = *(_QWORD *)(v366 + 792);
    v347 = *(_QWORD *)(v366 + 848);
    v351 = *(_QWORD *)(v366 + 784);
    v355 = *(_QWORD *)(v366 + 776);
    v62 = *(_QWORD *)(v366 + 768);
    v63 = v60 + v57;
    v64 = *(_QWORD *)(v366 + 760);
    v65 = (void (*)(unint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v327, v60 + v57, v59, v335);
    v66 = *(void (**)(uint64_t))(v62 + 16);
    *(_QWORD *)(v366 + 960) = v66;
    v66(v61);
    v65(v327, 0);
    v341(v58, v60, v59);
    dispatch thunk of Collection.formIndex(after:)(v63, v59, v335);
    v67 = *(void (**)(uint64_t, uint64_t))(v347 + 8);
    v68 = v58;
    v1 = v366;
    v67(v68, v59);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v62 + 32))(v351, v61, v64);
    v69 = (void (*)(uint64_t, uint64_t, uint64_t))v66;
    ((void (*)(unint64_t, unint64_t, uint64_t))v66)(v355, v351, v64);
    v70 = (*(uint64_t (**)(unint64_t, uint64_t))(v62 + 88))(v355, v64);
    v71 = *(_QWORD *)(v366 + 776);
    v72 = *(_QWORD *)(v366 + 768);
    v73 = *(_QWORD *)(v366 + 760);
    v74 = *(_QWORD *)(v366 + 744);
    v75 = *(_QWORD *)(v366 + 736);
    v76 = *(_QWORD *)(v366 + 728);
    if (v70 == v361)
    {
      (*(void (**)(_QWORD, _QWORD))(v72 + 96))(*(_QWORD *)(v366 + 776), *(_QWORD *)(v366 + 760));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v76, v71, v75);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 56))(v76, 0, 1, v75);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v74 + 56))(*(_QWORD *)(v366 + 728), 1, 1, *(_QWORD *)(v366 + 736));
      (*(void (**)(uint64_t, unint64_t))(v72 + 8))(v71, v73);
    }
    v77 = *(_QWORD *)(v366 + 744);
    v78 = *(_QWORD *)(v366 + 736);
    v79 = *(_QWORD *)(v366 + 728);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v79, 1, v78) != 1)
      break;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v366 + 768) + 8))(*(_QWORD *)(v366 + 784), *(_QWORD *)(v366 + 760));
    sub_10004FF60(v79, &qword_10119E480);
LABEL_14:
    v56 = *(_QWORD *)(*(_QWORD *)(v366 + 816) + *(int *)(v366 + 1056));
    dispatch thunk of Collection.endIndex.getter(v330, *(_QWORD *)(v366 + 840), *(_QWORD *)(v366 + 944));
    if (v56 == *(_QWORD *)(v366 + 144))
      goto LABEL_11;
  }
  v80 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v77 + 32))(*(_QWORD *)(v366 + 752), v79, v78);
  v81 = Song.workName.getter(v80);
  *(_QWORD *)(v366 + 968) = v82;
  if (!v82)
  {
    v83 = *(_QWORD *)(v366 + 784);
    v84 = *(_QWORD *)(v366 + 768);
    v85 = *(_QWORD *)(v366 + 760);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v366 + 744) + 8))(*(_QWORD *)(v366 + 752), *(_QWORD *)(v366 + 736));
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
    goto LABEL_14;
  }
  *(_QWORD *)(v366 + 976) = v81;
  v86 = v323;
  v87 = *(_QWORD *)(v323 + 16);
  if (!v87)
  {
LABEL_35:
    v130 = *(_QWORD *)(v366 + 720);
    v131 = *(_QWORD *)(v366 + 704);
    v132 = *(_QWORD *)(v366 + 696);
    v133 = *(_QWORD *)(v366 + 488);
    v134 = *(_QWORD *)(v366 + 496);
    v135 = *(_QWORD *)(v366 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v366 + 360) + 56))(v130, 1, 1, *(_QWORD *)(v366 + 352));
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v134 + 56))(v130, 0, 1, v133);
    v136 = v131 + *(int *)(v132 + 48);
    sub_10004A160(v135, v131, &qword_10119F1D8);
    sub_10004A160(v130, v136, &qword_10119F1D8);
    v137 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48);
    if (v137(v131, 1, v133) == 1)
    {
      v138 = *(_QWORD *)(v366 + 488);
      sub_10004FF60(*(_QWORD *)(v366 + 720), &qword_10119F1D8);
      if (v137(v136, 1, v138) == 1)
      {
        v139 = sub_10004FF60(*(_QWORD *)(v366 + 704), &qword_10119F1D8);
LABEL_50:
        v158 = Song.composerName.getter(v139);
        v344 = v159;
        v348 = v158;
        v160 = *(void (**)(uint64_t, uint64_t, uint64_t))(v366 + 960);
        v318 = *(_QWORD *)(v366 + 968);
        v321 = *(_QWORD *)(v366 + 856);
        v352 = *(_QWORD *)(v366 + 1040);
        v357 = *(_QWORD *)(v366 + 848);
        v363 = *(_QWORD *)(v366 + 840);
        v161 = *(_QWORD *)(v366 + 824);
        v162 = *(_QWORD *)(v366 + 768);
        v163 = *(_QWORD *)(v366 + 760);
        v329 = *(_QWORD *)(v366 + 976);
        v333 = *(_QWORD *)(v366 + 656);
        v164 = *(_QWORD **)(v366 + 648);
        v338 = *(_QWORD *)(v366 + 640);
        v325 = *(int **)(v366 + 616);
        v165 = *(_QWORD *)(v366 + 408);
        v313 = *(_QWORD *)(v366 + 432);
        v309 = *(_QWORD *)(v366 + 784);
        v160(v165, v309, v163);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v162 + 56))(v165, 0, 1, v163);
        v311 = sub_100007E8C(&qword_10119F2C8);
        v166 = *(unsigned __int8 *)(v162 + 80);
        v167 = (v166 + 32) & ~v166;
        v168 = v167 + *(_QWORD *)(v162 + 72);
        v169 = v166 | 7;
        v170 = swift_allocObject(v311, v168, v166 | 7);
        *(_OWORD *)(v170 + 16) = xmmword_100EA7AA0;
        v160(v170 + v167, v309, v163);
        MusicItemCollection.init(arrayLiteral:)(v170, v163, &protocol witness table for Track);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v357 + 56))(v161, 0, 1, v363);
        sub_10009A6E4(v165, v161, v313);
        sub_10004FF60(v161, &qword_1011B1F10);
        sub_10004FF60(v165, &qword_1011A9A00);
        v171 = swift_allocObject(v311, v168, v169);
        *(_OWORD *)(v171 + 16) = xmmword_100EA7AA0;
        v160(v171 + v167, v309, v163);
        swift_bridgeObjectRetain();
        v172 = MusicItemCollection.init(arrayLiteral:)(v171, v163, &protocol witness table for Track);
        v173 = Song.artistName.getter(v172);
        v175 = v174;
        v176 = (char *)v164 + v325[9];
        MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v163, &protocol witness table for Track);
        *v164 = v329;
        v164[1] = v318;
        (*(void (**)(char *, uint64_t, uint64_t))(v357 + 40))(v176, v321, v363);
        v177 = (_QWORD *)((char *)v164 + v325[10]);
        *v177 = v348;
        v177[1] = v344;
        v178 = (_QWORD *)((char *)v164 + v325[11]);
        *v178 = v173;
        v178[1] = v175;
        sub_100065228((uint64_t)v164, v333, &qword_10119F2B0);
        sub_10004A160(v333, v338, &qword_10119F2B0);
        v179 = swift_isUniquelyReferenced_nonNull_native(v352);
        v180 = *(_QWORD *)(v366 + 1040);
        if ((v179 & 1) == 0)
          v180 = sub_1004319EC(0, *(_QWORD *)(v180 + 16) + 1, 1, v180);
        v182 = *(_QWORD *)(v180 + 16);
        v181 = *(_QWORD *)(v180 + 24);
        if (v182 >= v181 >> 1)
          v180 = sub_1004319EC(v181 > 1, v182 + 1, 1, v180);
        *(_QWORD *)(v366 + 1000) = v180;
        v183 = *(_QWORD *)(v366 + 640);
        v184 = *(_QWORD *)(v366 + 624);
        *(_QWORD *)(v180 + 16) = v182 + 1;
        sub_100065228(v183, v180+ ((*(unsigned __int8 *)(v184 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v184 + 80))+ *(_QWORD *)(v184 + 72) * v182, &qword_10119F2B0);
        v185 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v366 + 1008) = static MainActor.shared.getter(v186);
        v187 = dispatch thunk of Actor.unownedExecutor.getter(v185, &protocol witness table for MainActor);
        return swift_task_switch(sub_10009762C, v187, v188);
      }
    }
    else
    {
      v140 = *(_QWORD *)(v366 + 488);
      sub_10004A160(*(_QWORD *)(v366 + 704), *(_QWORD *)(v366 + 712), &qword_10119F1D8);
      v141 = v137(v136, 1, v140);
      v142 = *(_QWORD *)(v366 + 720);
      v143 = *(_QWORD *)(v366 + 712);
      if (v141 != 1)
      {
        v155 = *(_QWORD *)(v366 + 704);
        v156 = *(_QWORD *)(v366 + 536);
        sub_100065228(v136, v156, &qword_10119ED10);
        v157 = sub_1000805B8(v143, v156, &qword_10119ED10, &qword_10119EE40);
        sub_10004FF60(v156, &qword_10119ED10);
        sub_10004FF60(v142, &qword_10119F1D8);
        sub_10004FF60(v143, &qword_10119ED10);
        v139 = sub_10004FF60(v155, &qword_10119F1D8);
        if ((v157 & 1) != 0)
          goto LABEL_50;
LABEL_55:
        v189 = *(_QWORD *)(v366 + 736);
        v190 = *(_QWORD *)(v366 + 464);
        v191 = type metadata accessor for Composer(0);
        v192 = sub_100048748(&qword_10119F2C0, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
        MusicLibrarySectionedRequest.init()(v191, v189, v192, &protocol witness table for Song);
        KeyPath = swift_getKeyPath(&unk_100EA8FF0);
        v194 = Song.id.getter(KeyPath);
        v196 = v195;
        *(_QWORD *)(v366 + 120) = v194;
        *(_QWORD *)(v366 + 128) = v195;
        MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(KeyPath, v366 + 120, v190, &protocol witness table for MusicItemID);
        swift_release(KeyPath);
        swift_bridgeObjectRelease(v196);
        v197 = (unint64_t *)swift_task_alloc(async function pointer to MusicLibrarySectionedRequest.response()[1]);
        *(_QWORD *)(v366 + 984) = v197;
        *v197 = v366;
        v197[1] = (unint64_t)sub_1000975C8;
        return MusicLibrarySectionedRequest.response()(*(_QWORD *)(v366 + 456), *(_QWORD *)(v366 + 464));
      }
      sub_10004FF60(*(_QWORD *)(v366 + 720), &qword_10119F1D8);
      sub_10004FF60(v143, &qword_10119ED10);
    }
    sub_10004FF60(*(_QWORD *)(v366 + 704), &qword_10119F2B8);
    goto LABEL_55;
  }
  v88 = v82;
  v89 = *(_QWORD *)(v366 + 624);
  v90 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  v362 = *(_QWORD *)(v89 + 72);
  v91 = (_QWORD *)(v323 + v90 + v362 * (v87 - 1));
  v92 = v91[1];
  if (*v91 == v81 && v88 == v92)
  {
LABEL_26:
    if ((swift_isUniquelyReferenced_nonNull_native(v323) & 1) != 0)
    {
      v93 = *(_QWORD *)(v323 + 16);
      if (v93)
        goto LABEL_28;
    }
    else
    {
      v86 = sub_10072E074(v323);
      v93 = *(_QWORD *)(v86 + 16);
      if (v93)
      {
LABEL_28:
        v73 = v86;
        v86 = *(_QWORD *)(v366 + 688);
        v94 = *(_QWORD *)(v366 + 680);
        v95 = *(_QWORD *)(v366 + 672);
        v96 = *(_QWORD *)(v366 + 664);
        v97 = v93 - 1;
        v355 = v90;
        sub_100065228(v73 + v90 + (v93 - 1) * v362, v96, &qword_10119F2B0);
        v323 = v73;
        *(_QWORD *)(v73 + 16) = v97;
        sub_100065228(v96, v95, &qword_10119F2B0);
        sub_100065228(v95, v94, &qword_10119F2B0);
        sub_100065228(v94, v86, &qword_10119F2B0);
        if (!*(_QWORD *)(v322 + 16))
        {
          v128 = *(_QWORD *)(v366 + 688);
          v129 = &qword_10119F2B0;
          v127 = v322;
LABEL_42:
          sub_10004FF60(v128, v129);
          v86 = v323;
          goto LABEL_43;
        }
        if ((swift_isUniquelyReferenced_nonNull_native(v322) & 1) != 0)
        {
LABEL_30:
          v99 = *(_QWORD *)(v322 + 16);
          if (v99)
          {
            v317 = *(_QWORD *)(v366 + 784);
            v100 = *(_QWORD *)(v366 + 768);
            v101 = *(_QWORD *)(v366 + 760);
            v328 = *(_QWORD *)(v366 + 856);
            v332 = *(_QWORD *)(v366 + 688);
            v336 = *(_QWORD *)(v366 + 840);
            v342 = *(_QWORD *)(v366 + 632);
            v320 = *(_QWORD *)(v366 + 616);
            v315 = *(_QWORD *)(v366 + 608);
            v102 = *(_QWORD *)(v366 + 600);
            v103 = *(_QWORD *)(v366 + 576);
            v104 = *(_QWORD *)(v366 + 568);
            v105 = *(_QWORD *)(v366 + 552);
            v106 = v99 - 1;
            v351 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
            v347 = *(_QWORD *)(v105 + 72);
            sub_100065228(v322 + v351 + v347 * (v99 - 1), v104, &qword_10119F2A8);
            *(_QWORD *)(v322 + 16) = v106;
            sub_100065228(v104, v103, &qword_10119F2A8);
            sub_100065228(v103, v102, &qword_10119F2A8);
            sub_100065228(v102, v315, &qword_10119F2A8);
            v107 = sub_100007E8C(&qword_10119F2C8);
            v108 = *(unsigned __int8 *)(v100 + 80);
            v109 = (v108 + 32) & ~v108;
            v110 = swift_allocObject(v107, v109 + *(_QWORD *)(v100 + 72), v108 | 7);
            *(_OWORD *)(v110 + 16) = xmmword_100EA7AA0;
            v69(v110 + v109, v317, v101);
            MusicItemCollection.init(arrayLiteral:)(v110, v101, &protocol witness table for Track);
            v73 = v332 + *(int *)(v320 + 36);
            static MusicItemCollection.+= infix(_:_:)(v73, v328, v101, &protocol witness table for Track);
            v67(v328, v336);
            sub_10004A160(v332, v342, &qword_10119F2B0);
            v98 = v323;
            v1 = *(_QWORD *)(v323 + 16);
            v99 = *(_QWORD *)(v323 + 24);
            v86 = v1 + 1;
            if (v1 < v99 >> 1)
            {
LABEL_32:
              v111 = v355;
              v112 = *(void (**)(uint64_t, unint64_t, uint64_t))(v366 + 936);
              v113 = *(_QWORD *)(v366 + 848);
              v114 = *(_QWORD *)(v366 + 840);
              v115 = *(_QWORD *)(v366 + 824);
              v116 = *(_QWORD *)(v366 + 632);
              v356 = *(_QWORD *)(v366 + 560);
              v337 = *(_QWORD *)(v366 + 544);
              v343 = *(_QWORD *)(v366 + 608);
              v118 = *(_QWORD *)(v366 + 408);
              v117 = *(_QWORD *)(v366 + 416);
              *(_QWORD *)(v323 + 16) = v86;
              sub_100065228(v116, v323 + v111 + v1 * v362, &qword_10119F2B0);
              sub_10031E324(v118);
              v112(v115, v73, v114);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v113 + 56))(v115, 0, 1, v114);
              sub_10009A6E4(v118, v115, v117);
              sub_10004FF60(v115, &qword_1011B1F10);
              sub_10004FF60(v118, &qword_1011A9A00);
              sub_1000A3500(v117, v343 + *(int *)(v337 + 84));
              sub_10004A160(v343, v356, &qword_10119F2A8);
              v119 = v322;
              v121 = *(_QWORD *)(v322 + 16);
              v120 = *(_QWORD *)(v322 + 24);
              if (v121 >= v120 >> 1)
                v119 = sub_1004317B8(v120 > 1, v121 + 1, 1, v322);
              v1 = v366;
              v122 = *(_QWORD *)(v366 + 688);
              v123 = *(_QWORD *)(v366 + 608);
              v124 = *(_QWORD *)(v366 + 560);
              v125 = *(_QWORD *)(v366 + 416);
              v126 = v119 + v351 + v121 * v347;
              *(_QWORD *)(v119 + 16) = v121 + 1;
              v127 = v119;
              sub_100065228(v124, v126, &qword_10119F2A8);
              sub_10004FF60(v125, &qword_10119F140);
              sub_10004FF60(v122, &qword_10119F2B0);
              v128 = v123;
              v129 = &qword_10119F2A8;
              goto LABEL_42;
            }
          }
          else
          {
            __break(1u);
          }
          v323 = sub_1004319EC(v99 > 1, v86, 1, v98);
          goto LABEL_32;
        }
LABEL_74:
        v322 = sub_10072E060(v322);
        goto LABEL_30;
      }
    }
    __break(1u);
    goto LABEL_74;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v91, v92, v81, v88, 0) & 1) == 0)
    goto LABEL_35;
  if (*(_QWORD *)(v323 + 16))
    goto LABEL_26;
  v127 = v322;
LABEL_43:
  *(_QWORD *)(v1 + 1024) = v86;
  *(_QWORD *)(v1 + 1016) = v127;
  v144 = *(_QWORD *)(v1 + 528);
  v145 = *(_QWORD *)(v1 + 520);
  v146 = *(_QWORD *)(v1 + 384);
  v147 = *(_QWORD *)(v1 + 392);
  v148 = *(_QWORD *)(v1 + 352);
  v149 = *(_QWORD *)(v1 + 360);
  sub_10004A160(*(_QWORD *)(v1 + 200) + *(_QWORD *)(v1 + 952), v144, &qword_10119ED10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v149 + 56))(v145, 1, 1, v148);
  v150 = v147 + *(int *)(v146 + 48);
  sub_10004A160(v144, v147, &qword_10119ED10);
  sub_10004A160(v145, v150, &qword_10119ED10);
  v151 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v149 + 48);
  if (v151(v147, 1, v148) == 1)
  {
    if (v151(v150, 1, *(_QWORD *)(v1 + 352)) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v1 + 392), &qword_10119ED10);
      goto LABEL_57;
    }
LABEL_48:
    sub_10004FF60(*(_QWORD *)(v1 + 392), &qword_10119EE40);
    goto LABEL_59;
  }
  v152 = *(_QWORD *)(v1 + 352);
  sub_10004A160(*(_QWORD *)(v1 + 392), *(_QWORD *)(v1 + 512), &qword_10119ED10);
  v153 = v151(v150, 1, v152);
  v154 = *(_QWORD *)(v1 + 512);
  if (v153 == 1)
  {
    sub_10005B748(*(_QWORD *)(v1 + 512), type metadata accessor for Library.Context);
    goto LABEL_48;
  }
  v198 = *(_QWORD *)(v1 + 392);
  v199 = *(_QWORD *)(v1 + 376);
  sub_10005B6C0(v150, v199, type metadata accessor for Library.Context);
  v200 = static Library.Context.__derived_struct_equals(_:_:)(v154, v199);
  sub_10005B748(v199, type metadata accessor for Library.Context);
  sub_10005B748(v154, type metadata accessor for Library.Context);
  sub_10004FF60(v198, &qword_10119ED10);
  if ((v200 & 1) != 0)
  {
LABEL_57:
    v201 = *(_QWORD *)(v1 + 912);
    v202 = *(_QWORD *)(v1 + 896);
    v203 = *(_QWORD *)(v1 + 888);
    v204 = *(_QWORD *)(v1 + 528);
    v364 = (uint64_t *)(v1 + 344);
    v206 = *(_QWORD *)(v1 + 336);
    v205 = *(_QWORD *)(v1 + 344);
    v207 = *(_QWORD *)(v1 + 288);
    v208 = *(_QWORD *)(v1 + 296);
    sub_10004FF60(*(_QWORD *)(v1 + 520), &qword_10119ED10);
    sub_10004FF60(v204, &qword_10119ED10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v202 + 16))(v205, v201, v203);
    swift_storeEnumTagMultiPayload(v205, v207, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v208 + 56))(v205, 0, 1, v207);
    sub_10004A160(v205, v206, &qword_10119F148);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v208 + 48))(v206, 1, v207) == 1)
    {
      v209 = *(_QWORD *)(v1 + 424);
      sub_10004FF60(*(_QWORD *)(v1 + 336), &qword_10119F148);
      v210 = sub_100007E8C(&qword_10119F158);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v210 - 8) + 56))(v209, 1, 1, v210);
    }
    else
    {
      v236 = *(void (**)(uint64_t, uint64_t, uint64_t))(v366 + 960);
      v237 = *(_QWORD *)(v366 + 784);
      v238 = *(_QWORD *)(v366 + 768);
      v239 = *(_QWORD *)(v366 + 760);
      v240 = *(_QWORD *)(v366 + 424);
      v241 = *(_QWORD *)(v366 + 312);
      sub_100065228(*(_QWORD *)(v366 + 336), v241, &qword_10119F150);
      sub_10004A160(v241, v240, &qword_10119F150);
      v242 = sub_100007E8C(&qword_10119F158);
      v243 = v240 + *(int *)(v242 + 36);
      v244 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v238 + 56);
      v244(v243, 1, 1, v239);
      v245 = sub_100007E8C(&qword_10119F160);
      swift_storeEnumTagMultiPayload(v243, v245, 0);
      *(_BYTE *)(v240 + *(int *)(v242 + 40)) = 2;
      sub_10004FF60(v243, &qword_10119F160);
      v236(v243, v237, v239);
      v1 = v366;
      v244(v243, 0, 1, v239);
      swift_storeEnumTagMultiPayload(v243, v245, 0);
      sub_10004FF60(v241, &qword_10119F150);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v242 - 8) + 56))(v240, 0, 1, v242);
    }
    v246 = v364;
  }
  else
  {
LABEL_59:
    v211 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v1 + 920);
    v212 = *(_QWORD *)(v1 + 888);
    v213 = *(_QWORD **)(v1 + 872);
    v214 = *(_QWORD *)(v1 + 528);
    v215 = *(_QWORD *)(v1 + 200);
    sub_10004FF60(*(_QWORD *)(v1 + 520), &qword_10119ED10);
    sub_10004FF60(v214, &qword_10119ED10);
    v216 = (_QWORD *)swift_task_alloc(16);
    *v216 = v212;
    v217 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
    v216[1] = v217;
    v218 = swift_getKeyPath(&unk_100EA8BD0);
    swift_task_dealloc(v216);
    v219 = (_QWORD *)swift_task_alloc(16);
    *v219 = v212;
    v219[1] = v217;
    v220 = swift_getKeyPath(&unk_100EA8C08);
    swift_task_dealloc(v219);
    static Published.subscript.getter(v213, v215, v218, v220);
    swift_release(v220);
    v221 = swift_release(v218);
    if (v211(v213, 1, v212, v221) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v1 + 872), &qword_1011A8FA0);
      v222 = 1;
    }
    else
    {
      v223 = *(_QWORD *)(v1 + 504);
      v224 = *(_QWORD *)(v1 + 352);
      v225 = *(_QWORD *)(v1 + 200) + *(_QWORD *)(v1 + 952);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 928))(*(_QWORD *)(v1 + 904), *(_QWORD *)(v1 + 872), *(_QWORD *)(v1 + 888));
      sub_10004A160(v225, v223, &qword_10119ED10);
      v226 = v151(v223, 1, v224);
      v227 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 928);
      v228 = *(_QWORD *)(v1 + 904);
      v229 = *(_QWORD *)(v1 + 888);
      v230 = *(_QWORD *)(v1 + 504);
      if (v226 == 1)
      {
        v231 = *(_QWORD *)(v1 + 328);
        v232 = *(_QWORD *)(v1 + 288);
        sub_10004FF60(v230, &qword_10119ED10);
        v227(v231, v228, v229);
        v233 = v231;
        v234 = v232;
        v235 = 1;
      }
      else
      {
        v247 = *(_QWORD *)(v1 + 368);
        v248 = *(_QWORD *)(v1 + 328);
        v249 = *(_QWORD *)(v1 + 288);
        sub_10005B6C0(v230, v247, type metadata accessor for Library.Context);
        v250 = v248 + *(int *)(sub_100007E8C(&qword_10119F168) + 48);
        v227(v248, v228, v229);
        sub_10005B6C0(v247, v250, type metadata accessor for Library.Context);
        v233 = v248;
        v234 = v249;
        v235 = 0;
      }
      swift_storeEnumTagMultiPayload(v233, v234, v235);
      v222 = 0;
    }
    v246 = (uint64_t *)(v1 + 328);
    v252 = *(_QWORD *)(v1 + 320);
    v251 = *(_QWORD *)(v1 + 328);
    v253 = *(_QWORD *)(v1 + 288);
    v254 = *(_QWORD *)(v1 + 296);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v254 + 56))(v251, v222, 1, v253);
    sub_10004A160(v251, v252, &qword_10119F148);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v254 + 48))(v252, 1, v253) == 1)
    {
      v255 = *(_QWORD *)(v1 + 424);
      sub_10004FF60(*(_QWORD *)(v1 + 320), &qword_10119F148);
      v256 = sub_100007E8C(&qword_10119F158);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v256 - 8) + 56))(v255, 1, 1, v256);
    }
    else
    {
      v257 = *(void (**)(uint64_t, uint64_t, uint64_t))(v366 + 960);
      v258 = *(_QWORD *)(v366 + 784);
      v259 = *(_QWORD *)(v366 + 768);
      v365 = v246;
      v260 = *(_QWORD *)(v366 + 760);
      v261 = *(_QWORD *)(v366 + 424);
      v262 = *(_QWORD *)(v366 + 304);
      sub_100065228(*(_QWORD *)(v366 + 320), v262, &qword_10119F150);
      sub_10004A160(v262, v261, &qword_10119F150);
      v263 = sub_100007E8C(&qword_10119F158);
      v264 = v261 + *(int *)(v263 + 36);
      v265 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v259 + 56);
      v265(v264, 1, 1, v260);
      v266 = sub_100007E8C(&qword_10119F160);
      swift_storeEnumTagMultiPayload(v264, v266, 0);
      *(_BYTE *)(v261 + *(int *)(v263 + 40)) = 2;
      sub_10004FF60(v264, &qword_10119F160);
      v257(v264, v258, v260);
      v267 = v260;
      v246 = v365;
      v1 = v366;
      v265(v264, 0, 1, v267);
      swift_storeEnumTagMultiPayload(v264, v266, 0);
      sub_10004FF60(v262, &qword_10119F150);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v263 - 8) + 56))(v261, 0, 1, v263);
    }
  }
  sub_10004FF60(*v246, &qword_10119F148);
  v268 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 1032) = static MainActor.shared.getter(v269);
  v270 = dispatch thunk of Actor.unownedExecutor.getter(v268, &protocol witness table for MainActor);
  return swift_task_switch(sub_100097FE4, v270, v271);
}

uint64_t sub_100099B88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t *v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v1 = MusicLibrarySectionedResponse.sections.getter(v0[55]);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = sub_100007E8C(&qword_10119F2D0);
  v4 = *(_QWORD *)(v3 - 8);
  if (v2)
  {
    (*(void (**)(_QWORD, unint64_t, uint64_t))(v4 + 16))(v0[30], v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3);
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  v7 = v0[29];
  v6 = v0[30];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v6, v5, 1, v3);
  swift_bridgeObjectRelease(v1);
  sub_10004A160(v6, v7, &qword_10119F278);
  v8 = sub_100007E8C(&qword_10119F2D0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  v11 = v0[60];
  v64 = v0[59];
  v12 = v0[57];
  v13 = v0[58];
  v15 = v0[55];
  v14 = v0[56];
  v16 = v0[29];
  v17 = v0[30];
  if (v10 == 1)
  {
    sub_10004FF60(v0[30], &qword_10119F278);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v15);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v11, v13);
    sub_10004FF60(v16, &qword_10119F278);
    v60 = 0;
    v59 = 0;
  }
  else
  {
    v61 = v0[58];
    KeyPath = swift_getKeyPath(&unk_100EA9018);
    MusicLibrarySection.subscript.getter(KeyPath, v8);
    swift_release(KeyPath);
    sub_10004FF60(v17, &qword_10119F278);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v15);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v11, v61);
    v60 = v0[13];
    v59 = v0[14];
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
  }
  v62 = v0[130];
  v56 = v0[122];
  v19 = (void (*)(uint64_t, uint64_t, uint64_t))v0[120];
  v53 = v0[121];
  v54 = v0[107];
  v63 = v0[106];
  v65 = v0[105];
  v20 = v0[103];
  v21 = v0[98];
  v22 = v0[96];
  v23 = v0[95];
  v24 = (_QWORD *)v0[81];
  v57 = v0[82];
  v58 = v0[80];
  v55 = (int *)v0[77];
  v25 = v0[51];
  v52 = v0[54];
  v19(v25, v21, v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v23);
  v26 = sub_100007E8C(&qword_10119F2C8);
  v27 = *(unsigned __int8 *)(v22 + 80);
  v28 = (v27 + 32) & ~v27;
  v50 = v28 + *(_QWORD *)(v22 + 72);
  v51 = v26;
  v29 = v27 | 7;
  v30 = swift_allocObject(v26, v50, v27 | 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EA7AA0;
  v19(v30 + v28, v21, v23);
  MusicItemCollection.init(arrayLiteral:)(v30, v23, &protocol witness table for Track);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v20, 0, 1, v65);
  sub_10009A6E4(v25, v20, v52);
  sub_10004FF60(v20, &qword_1011B1F10);
  sub_10004FF60(v25, &qword_1011A9A00);
  v31 = swift_allocObject(v51, v50, v29);
  *(_OWORD *)(v31 + 16) = xmmword_100EA7AA0;
  v19(v31 + v28, v21, v23);
  swift_bridgeObjectRetain();
  v32 = MusicItemCollection.init(arrayLiteral:)(v31, v23, &protocol witness table for Track);
  v33 = Song.artistName.getter(v32);
  v35 = v34;
  v36 = (char *)v24 + v55[9];
  MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v23, &protocol witness table for Track);
  *v24 = v56;
  v24[1] = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 40))(v36, v54, v65);
  v37 = (_QWORD *)((char *)v24 + v55[10]);
  *v37 = v60;
  v37[1] = v59;
  v38 = (_QWORD *)((char *)v24 + v55[11]);
  *v38 = v33;
  v38[1] = v35;
  sub_100065228((uint64_t)v24, v57, &qword_10119F2B0);
  sub_10004A160(v57, v58, &qword_10119F2B0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v62);
  v40 = v0[130];
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v40 = sub_1004319EC(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
  v42 = *(_QWORD *)(v40 + 16);
  v41 = *(_QWORD *)(v40 + 24);
  if (v42 >= v41 >> 1)
    v40 = sub_1004319EC(v41 > 1, v42 + 1, 1, v40);
  v0[125] = v40;
  v43 = v0[80];
  v44 = v0[78];
  *(_QWORD *)(v40 + 16) = v42 + 1;
  sub_100065228(v43, v40+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v42, &qword_10119F2B0);
  v45 = type metadata accessor for MainActor(0);
  v0[126] = static MainActor.shared.getter(v46);
  v47 = dispatch thunk of Actor.unownedExecutor.getter(v45, &protocol witness table for MainActor);
  return swift_task_switch(sub_10009762C, v47, v48);
}

uint64_t sub_10009A070()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t *v44;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v1 = v0[124];
  v3 = v0[27];
  v2 = v0[28];
  v4 = v0[26];
  v5 = Logger.musicKit.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = v0[124];
    v70 = v0[60];
    v66 = v0[59];
    v68 = v0[58];
    v10 = v0[27];
    v64 = v0[28];
    v11 = v0[26];
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v72 = v13;
    *(_DWORD *)v12 = 136446210;
    v0[19] = v9;
    swift_errorRetain(v9);
    v14 = sub_100007E8C(&qword_1011A14B0);
    v15 = String.init<A>(describing:)(v0 + 19, v14);
    v17 = v16;
    v0[20] = sub_100322200(v15, v16, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 20, v0 + 21);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to retrieve composer for song: %{public}s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v64, v11);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v70, v68);
  }
  else
  {
    v18 = v0[124];
    v20 = v0[59];
    v19 = v0[60];
    v21 = v0[58];
    v23 = v0[27];
    v22 = v0[28];
    v24 = v0[26];

    swift_errorRelease(v18);
    swift_errorRelease(v18);
    swift_errorRelease(v18);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  v67 = v0[130];
  v62 = v0[122];
  v25 = (void (*)(uint64_t, uint64_t, uint64_t))v0[120];
  v59 = v0[121];
  v60 = v0[107];
  v69 = v0[106];
  v71 = v0[105];
  v26 = v0[103];
  v27 = v0[98];
  v28 = v0[96];
  v29 = v0[95];
  v30 = (_QWORD *)v0[81];
  v63 = v0[82];
  v65 = v0[80];
  v61 = (int *)v0[77];
  v31 = v0[51];
  v58 = v0[54];
  v25(v31, v27, v29);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v29);
  v32 = sub_100007E8C(&qword_10119F2C8);
  v33 = *(unsigned __int8 *)(v28 + 80);
  v34 = (v33 + 32) & ~v33;
  v56 = v34 + *(_QWORD *)(v28 + 72);
  v57 = v32;
  v35 = v33 | 7;
  v36 = swift_allocObject(v32, v56, v33 | 7);
  *(_OWORD *)(v36 + 16) = xmmword_100EA7AA0;
  v25(v36 + v34, v27, v29);
  MusicItemCollection.init(arrayLiteral:)(v36, v29, &protocol witness table for Track);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v26, 0, 1, v71);
  sub_10009A6E4(v31, v26, v58);
  sub_10004FF60(v26, &qword_1011B1F10);
  sub_10004FF60(v31, &qword_1011A9A00);
  v37 = swift_allocObject(v57, v56, v35);
  *(_OWORD *)(v37 + 16) = xmmword_100EA7AA0;
  v25(v37 + v34, v27, v29);
  swift_bridgeObjectRetain();
  v38 = MusicItemCollection.init(arrayLiteral:)(v37, v29, &protocol witness table for Track);
  v39 = Song.artistName.getter(v38);
  v41 = v40;
  v42 = (char *)v30 + v61[9];
  MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v29, &protocol witness table for Track);
  *v30 = v62;
  v30[1] = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 40))(v42, v60, v71);
  v43 = (_QWORD *)((char *)v30 + v61[10]);
  *v43 = 0;
  v43[1] = 0;
  v44 = (_QWORD *)((char *)v30 + v61[11]);
  *v44 = v39;
  v44[1] = v41;
  sub_100065228((uint64_t)v30, v63, &qword_10119F2B0);
  sub_10004A160(v63, v65, &qword_10119F2B0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v67);
  v46 = v0[130];
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v46 = sub_1004319EC(0, *(_QWORD *)(v46 + 16) + 1, 1, v46);
  v48 = *(_QWORD *)(v46 + 16);
  v47 = *(_QWORD *)(v46 + 24);
  if (v48 >= v47 >> 1)
    v46 = sub_1004319EC(v47 > 1, v48 + 1, 1, v46);
  v0[125] = v46;
  v49 = v0[80];
  v50 = v0[78];
  *(_QWORD *)(v46 + 16) = v48 + 1;
  sub_100065228(v49, v46+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v48, &qword_10119F2B0);
  v51 = type metadata accessor for MainActor(0);
  v0[126] = static MainActor.shared.getter(v52);
  v53 = dispatch thunk of Actor.unownedExecutor.getter(v51, &protocol witness table for MainActor);
  return swift_task_switch(sub_10009762C, v53, v54);
}

uint64_t sub_10009A5A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Composer.name.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void (*sub_10009A5D0(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_10009DB8C(v6, a2, a3);
  return sub_10009A63C;
}

void (*sub_10009A640(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_10009DC20(v6, a2, a3);
  return sub_10009A63C;
}

void sub_10009A6AC(_QWORD *a1)
{
  void *v1;
  uint64_t v2;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease(v2);
  free(v1);
}

uint64_t sub_10009A6E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_100007E8C(&qword_10119F148);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B1F10);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a2, (uint64_t)v11, &qword_1011B1F10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10004FF60((uint64_t)v11, &qword_1011B1F10);
    v16 = sub_100007E8C(&qword_10119F158);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v15, v12);
    v18 = sub_100007E8C(&qword_10119F150);
    swift_storeEnumTagMultiPayload(v8, v18, 2);
    v19 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
    __chkstk_darwin(v19);
    *(&v20 - 2) = a1;
    sub_100415A94((uint64_t)v8, (void (*)(uint64_t))sub_1000A3930, a3);
    sub_10004FF60((uint64_t)v8, &qword_10119F148);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_10009A904(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + *(int *)(sub_100007E8C(&qword_10119F158) + 36);
  sub_10004FF60(v3, &qword_10119F160);
  sub_10004A160(a2, v3, &qword_1011A9A00);
  v4 = sub_100007E8C(&qword_10119F160);
  return swift_storeEnumTagMultiPayload(v3, v4, 0);
}

uint64_t sub_10009A97C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  char *v38;
  uint64_t v39;

  v6 = type metadata accessor for Album(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v38 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100007E8C(&qword_1011A9A00);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_10119F2B0);
  v37 = a1;
  sub_10031E324((uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10004FF60((uint64_t)v14, &qword_1011A9A00);
    v19 = sub_100007E8C(&qword_10119F2A8);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
  else
  {
    v35 = a2;
    v36 = a3;
    v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    __chkstk_darwin(v21);
    *(&v34 - 2) = v6;
    v22 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
    *(&v34 - 1) = v22;
    KeyPath = swift_getKeyPath(&unk_100EA8BD0);
    __chkstk_darwin(KeyPath);
    *(&v34 - 2) = v6;
    *(&v34 - 1) = v22;
    v24 = swift_getKeyPath(&unk_100EA8C08);
    static Published.subscript.getter(v11, v39, KeyPath, v24);
    swift_release(KeyPath);
    v25 = swift_release(v24);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v7 + 48))(v11, 1, v6, v25))
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      sub_10004FF60((uint64_t)v11, &qword_1011A8FA0);
      v26 = sub_100007E8C(&qword_10119F2A8);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v36, 1, 1, v26);
    }
    else
    {
      v27 = v38;
      (*(void (**)(char *, _QWORD *, uint64_t))(v7 + 16))(v38, v11, v6);
      sub_10004FF60((uint64_t)v11, &qword_1011A8FA0);
      v28 = *v37;
      v29 = v37[1];
      v30 = sub_10009ACD4();
      v32 = v31;
      sub_10009D0B0((uint64_t)v18, v28, v29, v30, v31, v35, v36);
      v33 = swift_bridgeObjectRelease(v32);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v27, v6, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
}

uint64_t sub_10009ACD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  Swift::String v16;
  void *object;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;

  v1 = type metadata accessor for Locale(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119F2B0);
  v8 = (uint64_t *)(v0 + *(int *)(v7 + 40));
  v9 = *v8;
  if (v8[1])
  {
    v10 = v8[1];
  }
  else
  {
    v11 = String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
    static Locale.current.getter(v11);
    v9 = String.init(localized:table:bundle:locale:comment:)(v6, v9, 0, 0, v3, "Unknown composer name", 21, 2);
  }
  v20 = v9;
  v21 = v10;
  swift_bridgeObjectRetain();
  result = String.init<A>(_:)(&v20, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v20 = result;
  v21 = v13;
  v14 = (uint64_t *)(v0 + *(int *)(v7 + 44));
  v15 = (void *)v14[1];
  if (v15)
  {
    v16._countAndFlagsBits = *v14;
    v19._countAndFlagsBits = 0x209380E220;
    v19._object = (void *)0xA500000000000000;
    v16._object = v15;
    String.append(_:)(v16);
    object = v19._object;
    String.append(_:)(v19);
    swift_bridgeObjectRelease(object);
    return v20;
  }
  return result;
}

uint64_t sub_10009AE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD *, uint64_t);
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  char *v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  Swift::String v74;
  Swift::String v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109[24];
  uint64_t v110;
  uint64_t v111;

  v4 = v3;
  v88 = a2;
  v98 = a1;
  v104 = a3;
  v101 = type metadata accessor for Track(0);
  v94 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v100 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v6);
  v102 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v96 = *(_QWORD *)(v8 - 8);
  v97 = v8;
  __chkstk_darwin(v8);
  v103 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100007E8C(&qword_10119F288);
  v10 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v95 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for Library.Context(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v89 = (uint64_t *)((char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100007E8C(&qword_10119ED10);
  v14 = __chkstk_darwin(v13);
  v91 = (uint64_t)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v90 = (uint64_t)&v83 - v16;
  v17 = type metadata accessor for Album(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = sub_100007E8C(&qword_10119F280);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v29 = (char *)&v83 - v28;
  v107 = v17;
  v30 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  v108 = v30;
  KeyPath = swift_getKeyPath(&unk_100EA8BD0);
  v105 = v17;
  v106 = v30;
  v32 = swift_getKeyPath(&unk_100EA8C08);
  static Published.subscript.getter(v23, v4, KeyPath, v32);
  swift_release(KeyPath);
  v33 = swift_release(v32);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v18 + 48))(v23, 1, v17, v33))
  {
    sub_10004FF60((uint64_t)v23, &qword_1011A8FA0);
    v34 = v99;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v29, 1, 1, v99);
    v35 = v103;
    v36 = v104;
    v38 = v101;
    v37 = v102;
    v39 = v100;
    v40 = v29;
  }
  else
  {
    v41 = v89;
    v84 = v29;
    v87 = v10;
    v42 = v99;
    v86 = v18;
    v43 = *(void (**)(char *, _QWORD *, uint64_t))(v18 + 16);
    v85 = v20;
    v43(v20, v23, v17);
    sub_10004FF60((uint64_t)v23, &qword_1011A8FA0);
    v44 = *(void **)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 208));
    v45 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 104);
    swift_beginAccess(v45, v109, 0, 0);
    v46 = v90;
    sub_10004A160(v45, v90, &qword_10119ED10);
    v47 = v91;
    sub_10004A160(v46, v91, &qword_10119ED10);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v47, 1, v93) == 1)
    {
      type metadata accessor for MusicLibrary(0);
      v48 = static MusicLibrary.shared.getter(v44);
    }
    else
    {
      sub_10005B6C0(v47, (uint64_t)v41, type metadata accessor for Library.Context);
      v48 = *v41;
      v49 = v44;
      swift_retain(v48);
      sub_10005B748((uint64_t)v41, type metadata accessor for Library.Context);
    }
    v36 = v104;
    v34 = v42;
    v40 = v84;
    v50 = v88;
    v51 = v85;
    sub_10004FF60(v46, &qword_10119ED10);
    sub_100216D18(v98, v50, v48, v40);

    v52 = swift_release(v48);
    (*(void (**)(char *, uint64_t, __n128))(v86 + 8))(v51, v17, v52);
    v10 = v87;
    v37 = v102;
    v35 = v103;
    v39 = v100;
    v38 = v101;
  }
  sub_10004A160((uint64_t)v40, (uint64_t)v27, &qword_10119F280);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v27, 1, v34) == 1)
  {
    sub_10004FF60((uint64_t)v40, &qword_10119F280);
    sub_10004FF60((uint64_t)v27, &qword_10119F280);
  }
  else
  {
    v53 = v95;
    sub_100065228((uint64_t)v27, v95, &qword_10119F288);
    v54 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v39, v98, v38);
    if ((*(unsigned int (**)(char *, uint64_t))(v54 + 88))(v39, v38) == enum case for Track.song(_:))
    {
      (*(void (**)(char *, uint64_t))(v54 + 96))(v39, v38);
      v56 = v96;
      v55 = v97;
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v37, v39, v97);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v37, 0, 1, v55);
    }
    else
    {
      v87 = v10;
      v57 = v34;
      v58 = v35;
      v59 = v53;
      v60 = v40;
      v61 = v54;
      v56 = v96;
      v55 = v97;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v37, 1, 1, v97);
      v62 = *(void (**)(char *, uint64_t))(v61 + 8);
      v40 = v60;
      v53 = v59;
      v35 = v58;
      v34 = v57;
      v10 = v87;
      v62(v39, v38);
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v37, 1, v55) == 1)
    {
      sub_10004FF60((uint64_t)v40, &qword_10119F280);
      v63 = &qword_10119E480;
      v64 = (uint64_t)v37;
    }
    else
    {
      v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v56 + 32))(v35, v37, v55);
      v67 = Song.movementName.getter(v65, v66);
      if (v68)
      {
        v69 = v67;
        v70 = v68;
        v71 = Song.movementNumber.getter(v67);
        v110 = sub_1000A36DC(v71, v72 & 1);
        v111 = v73;
        v74._countAndFlagsBits = 32;
        v74._object = (void *)0xE100000000000000;
        String.append(_:)(v74);
        v75._countAndFlagsBits = v69;
        v75._object = v70;
        String.append(_:)(v75);
        v76 = swift_bridgeObjectRelease(v70);
        v77 = v53;
        v78 = v110;
        v79 = v111;
        (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v35, v55, v76);
        sub_10004FF60((uint64_t)v40, &qword_10119F280);
        v80 = (uint64_t *)(v77 + *(int *)(v34 + 100));
        swift_bridgeObjectRelease(v80[1]);
        *v80 = v78;
        v80[1] = v79;
        v81 = v104;
        sub_10004A160(v77, v104, &qword_10119F288);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v81, 0, 1, v34);
        return sub_10004FF60(v77, &qword_10119F288);
      }
      (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v55);
      v63 = &qword_10119F280;
      v64 = (uint64_t)v40;
    }
    sub_10004FF60(v64, v63);
    sub_10004FF60(v53, &qword_10119F288);
    v36 = v104;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v36, 1, 1, v34);
}

uint64_t sub_10009B648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[6] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[8] = v7;
  v4[9] = v8;
  return swift_task_switch(sub_10009B6B4, v7, v8);
}

uint64_t sub_10009B6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_10119F474);
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_10009B744;
    return sub_10009BAB0();
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_10009B744(double a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(double *)(*v1 + 96) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10009B794, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_10009B794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 56));
  v3 = (uint64_t *)swift_task_alloc(16);
  v4 = type metadata accessor for Playlist(0);
  *v3 = v4;
  v5 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
  v3[1] = v5;
  KeyPath = swift_getKeyPath(&unk_100EA8DE0);
  swift_task_dealloc(v3);
  v7 = (uint64_t *)swift_task_alloc(16);
  *v7 = v4;
  v7[1] = v5;
  v8 = swift_getKeyPath(&unk_100EA8E18);
  swift_task_dealloc(v7);
  *(_QWORD *)(v0 + 40) = v1;
  static Published.subscript.setter(v0 + 40, v2, KeyPath, v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10009B87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[6] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[8] = v7;
  v4[9] = v8;
  return swift_task_switch(sub_10009B8E8, v7, v8);
}

uint64_t sub_10009B8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_10119F264);
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_10009B978;
    return sub_10009BF24();
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_10009B978(double a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(double *)(*v1 + 96) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10009B9C8, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_10009B9C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 56));
  v3 = (uint64_t *)swift_task_alloc(16);
  v4 = type metadata accessor for Album(0);
  *v3 = v4;
  v5 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  v3[1] = v5;
  KeyPath = swift_getKeyPath(&unk_100EA8DE0);
  swift_task_dealloc(v3);
  v7 = (uint64_t *)swift_task_alloc(16);
  *v7 = v4;
  v7[1] = v5;
  v8 = swift_getKeyPath(&unk_100EA8E18);
  swift_task_dealloc(v7);
  *(_QWORD *)(v0 + 40) = v1;
  static Published.subscript.setter(v0 + 40, v2, KeyPath, v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10009BAB0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1[7] = v0;
  v2 = type metadata accessor for Playlist.Entry(0);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[10] = swift_task_alloc(v4);
  v1[11] = swift_task_alloc(v4);
  v5 = sub_100007E8C((uint64_t *)&unk_1011D0D00);
  v1[12] = v5;
  v1[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v1[14] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[15] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[16] = swift_task_alloc(v8);
  v1[17] = swift_task_alloc(v8);
  v9 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  v1[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10009BBA8, 0, 0);
}

uint64_t sub_10009BBA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t *v9;
  uint64_t v10;
  __n128 v11;
  int v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, _QWORD);
  uint64_t v32;
  double v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;

  v1 = *(_QWORD **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = (uint64_t *)swift_task_alloc(16);
  v6 = type metadata accessor for Playlist(0);
  *v5 = v6;
  v7 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
  v5[1] = v7;
  KeyPath = swift_getKeyPath(&unk_100EA8D88);
  swift_task_dealloc(v5);
  v9 = (uint64_t *)swift_task_alloc(16);
  *v9 = v6;
  v9[1] = v7;
  v10 = swift_getKeyPath(&unk_100EA8DC0);
  swift_task_dealloc(v9);
  static Published.subscript.getter(v1, v4, KeyPath, v10);
  swift_release(v10);
  v11 = swift_release(KeyPath);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v3 + 48))(v1, 1, v2, v11);
  v13 = *(_QWORD *)(v0 + 144);
  if (v12)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 144), (uint64_t *)&unk_1011D0BB0);
    v14 = 0.0;
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 104);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 16);
    v20(v15, *(_QWORD *)(v0 + 144), v17);
    sub_10004FF60(v13, (uint64_t *)&unk_1011D0BB0);
    v47 = v20;
    v20(v16, v15, v17);
    v21 = sub_100049F28(&qword_1011C6810, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Sequence.makeIterator()(v17, v21);
    v22 = (uint64_t *)(v19 + *(int *)(v18 + 36));
    v23 = *v22;
    v24 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 48), v17, v24);
    v14 = 0.0;
    if (v23 != *(_QWORD *)(v0 + 48))
    {
      v45 = *(_QWORD *)(v0 + 120);
      v46 = v0 + 16;
      v25 = *(_QWORD *)(v0 + 72);
      do
      {
        v26 = *(_QWORD *)(v0 + 128);
        v27 = *(_QWORD *)(v0 + 112);
        v48 = *(_QWORD *)(v0 + 104);
        v29 = *(_QWORD *)(v0 + 80);
        v28 = *(_QWORD *)(v0 + 88);
        v30 = *(_QWORD *)(v0 + 64);
        v31 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v46, v22, v27, v24);
        (*(void (**)(uint64_t))(v25 + 16))(v28);
        v31(v46, 0);
        v47(v26, v48, v27);
        dispatch thunk of Collection.formIndex(after:)(v22, v27, v24);
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v26, v27);
        v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v29, v28, v30);
        v33 = COERCE_DOUBLE(Playlist.Entry.duration.getter(v32));
        if ((v34 & 1) != 0)
          v33 = 0.0;
        v14 = v14 + v33;
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v29, v30);
        v35 = *v22;
        dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 48), v27, v24);
      }
      while (v35 != *(_QWORD *)(v0 + 48));
    }
    v36 = *(_QWORD *)(v0 + 136);
    v37 = *(_QWORD *)(v0 + 112);
    v38 = *(_QWORD *)(v0 + 120);
    sub_10004FF60(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_1011D0D00);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
  }
  v39 = *(_QWORD *)(v0 + 136);
  v40 = *(_QWORD *)(v0 + 128);
  v41 = *(_QWORD *)(v0 + 104);
  v43 = *(_QWORD *)(v0 + 80);
  v42 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(double))(v0 + 8))(v14);
}

uint64_t sub_10009BF24()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1[7] = v0;
  v2 = type metadata accessor for Track(0);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[10] = swift_task_alloc(v4);
  v1[11] = swift_task_alloc(v4);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACA90);
  v1[12] = v5;
  v1[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v1[14] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[15] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[16] = swift_task_alloc(v8);
  v1[17] = swift_task_alloc(v8);
  v9 = sub_100007E8C(&qword_1011B1F10);
  v1[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10009C01C, 0, 0);
}

uint64_t sub_10009C01C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t *v9;
  uint64_t v10;
  __n128 v11;
  int v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, _QWORD);
  uint64_t v32;
  double v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;

  v1 = *(_QWORD **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = (uint64_t *)swift_task_alloc(16);
  v6 = type metadata accessor for Album(0);
  *v5 = v6;
  v7 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  v5[1] = v7;
  KeyPath = swift_getKeyPath(&unk_100EA8D88);
  swift_task_dealloc(v5);
  v9 = (uint64_t *)swift_task_alloc(16);
  *v9 = v6;
  v9[1] = v7;
  v10 = swift_getKeyPath(&unk_100EA8DC0);
  swift_task_dealloc(v9);
  static Published.subscript.getter(v1, v4, KeyPath, v10);
  swift_release(v10);
  v11 = swift_release(KeyPath);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v3 + 48))(v1, 1, v2, v11);
  v13 = *(_QWORD *)(v0 + 144);
  if (v12)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 144), &qword_1011B1F10);
    v14 = 0.0;
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 104);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 16);
    v20(v15, *(_QWORD *)(v0 + 144), v17);
    sub_10004FF60(v13, &qword_1011B1F10);
    v47 = v20;
    v20(v16, v15, v17);
    v21 = sub_100049F28((unint64_t *)&unk_1011B5730, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Sequence.makeIterator()(v17, v21);
    v22 = (uint64_t *)(v19 + *(int *)(v18 + 36));
    v23 = *v22;
    v24 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 48), v17, v24);
    v14 = 0.0;
    if (v23 != *(_QWORD *)(v0 + 48))
    {
      v45 = *(_QWORD *)(v0 + 120);
      v46 = v0 + 16;
      v25 = *(_QWORD *)(v0 + 72);
      do
      {
        v26 = *(_QWORD *)(v0 + 128);
        v27 = *(_QWORD *)(v0 + 112);
        v48 = *(_QWORD *)(v0 + 104);
        v29 = *(_QWORD *)(v0 + 80);
        v28 = *(_QWORD *)(v0 + 88);
        v30 = *(_QWORD *)(v0 + 64);
        v31 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v46, v22, v27, v24);
        (*(void (**)(uint64_t))(v25 + 16))(v28);
        v31(v46, 0);
        v47(v26, v48, v27);
        dispatch thunk of Collection.formIndex(after:)(v22, v27, v24);
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v26, v27);
        v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v29, v28, v30);
        v33 = COERCE_DOUBLE(Track.duration.getter(v32));
        if ((v34 & 1) != 0)
          v33 = 0.0;
        v14 = v14 + v33;
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v29, v30);
        v35 = *v22;
        dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 48), v27, v24);
      }
      while (v35 != *(_QWORD *)(v0 + 48));
    }
    v36 = *(_QWORD *)(v0 + 136);
    v37 = *(_QWORD *)(v0 + 112);
    v38 = *(_QWORD *)(v0 + 120);
    sub_10004FF60(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_1011ACA90);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
  }
  v39 = *(_QWORD *)(v0 + 136);
  v40 = *(_QWORD *)(v0 + 128);
  v41 = *(_QWORD *)(v0 + 104);
  v43 = *(_QWORD *)(v0 + 80);
  v42 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(double))(v0 + 8))(v14);
}

uint64_t sub_10009C398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50[24];
  _QWORD v51[16];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ApplicationCapabilities.shared.getter((uint64_t)v51);
  v18 = (uint64_t)sub_100065184(v51);
  if ((v51[0] & 0x100) != 0)
  {
    v19 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
    swift_beginAccess(v19, v50, 0, 0);
    sub_10004A160(v19, (uint64_t)v17, (uint64_t *)&unk_1011C5B80);
    v20 = type metadata accessor for Library.Context(0);
    LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v17, 1, v20);
    v18 = sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011C5B80);
    if ((_DWORD)v19 != 1)
    {
      v46 = v4;
      v47 = v7;
      __chkstk_darwin(v18);
      v25 = type metadata accessor for Playlist(0);
      *(&v45 - 2) = v25;
      v26 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
      *(&v45 - 1) = v26;
      KeyPath = swift_getKeyPath(&unk_100EA8E90);
      __chkstk_darwin(KeyPath);
      *(&v45 - 2) = v25;
      *(&v45 - 1) = v26;
      v28 = swift_getKeyPath(&unk_100EA8EC8);
      static Published.subscript.getter(&v49, v1, KeyPath, v28);
      swift_release(KeyPath);
      swift_release(v28);
      v45 = v49;
      __chkstk_darwin(v29);
      *(&v45 - 2) = v25;
      *(&v45 - 1) = v26;
      v30 = swift_getKeyPath(&unk_100EA8D88);
      __chkstk_darwin(v30);
      *(&v45 - 2) = v25;
      *(&v45 - 1) = v26;
      v31 = swift_getKeyPath(&unk_100EA8DC0);
      static Published.subscript.getter(v14, v1, v30, v31);
      swift_release(v30);
      v32 = swift_release(v31);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v9 + 48))(v14, 1, v8, v32))
      {
        v33 = sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011D0BB0);
      }
      else
      {
        (*(void (**)(char *, _QWORD *, uint64_t))(v9 + 16))(v11, v14, v8);
        sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011D0BB0);
        v34 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
        dispatch thunk of Collection.startIndex.getter(v8);
        dispatch thunk of Collection.endIndex.getter(&v48, v8, v34);
        v35 = dispatch thunk of Collection.distance(from:to:)(&v49, &v48, v8, v34);
        v33 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        if (v45 == v35)
        {
          v36 = 0;
LABEL_9:
          __chkstk_darwin(v33);
          *(&v45 - 2) = v25;
          *(&v45 - 1) = v26;
          v23 = swift_getKeyPath(&unk_100EA8E38);
          __chkstk_darwin(v23);
          *(&v45 - 2) = v25;
          *(&v45 - 1) = v26;
          v24 = swift_getKeyPath(&unk_100EA8E70);
          LOBYTE(v49) = v36;
          goto LABEL_10;
        }
      }
      __chkstk_darwin(v33);
      *(&v45 - 2) = v25;
      *(&v45 - 1) = v26;
      v37 = swift_getKeyPath(&unk_100EA8BD0);
      __chkstk_darwin(v37);
      *(&v45 - 2) = v25;
      *(&v45 - 1) = v26;
      v38 = swift_getKeyPath(&unk_100EA8C08);
      v39 = v46;
      static Published.subscript.getter(v46, v1, v37, v38);
      swift_release(v37);
      v40 = swift_release(v38);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v25 - 8) + 48))(v39, 1, v25, v40);
      sub_10004FF60((uint64_t)v39, &qword_1011A30F0);
      v41 = type metadata accessor for Album(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = (uint64_t)v47;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v47, 1, 1, v41);
      v36 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v43, 1, v41) == 0;
      v33 = sub_10004FF60(v43, &qword_1011A8FA0);
      goto LABEL_9;
    }
  }
  __chkstk_darwin(v18);
  v21 = type metadata accessor for Playlist(0);
  *(&v45 - 2) = v21;
  v22 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
  *(&v45 - 1) = v22;
  v23 = swift_getKeyPath(&unk_100EA8E38);
  __chkstk_darwin(v23);
  *(&v45 - 2) = v21;
  *(&v45 - 1) = v22;
  v24 = swift_getKeyPath(&unk_100EA8E70);
  LOBYTE(v49) = 0;
LABEL_10:
  swift_retain(v1);
  return static Published.subscript.setter(&v49, v1, v23, v24);
}

uint64_t sub_10009CA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __n128 v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54[24];
  _QWORD v55[16];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A8FA0);
  v3 = __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  v7 = (char *)&v47 - v6;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011B1F10);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_100007E8C(&qword_10119ED10);
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ApplicationCapabilities.shared.getter((uint64_t)v55);
  v18 = (uint64_t)sub_100065184(v55);
  if ((v55[0] & 0x100) != 0)
  {
    v19 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
    swift_beginAccess(v19, v54, 0, 0);
    sub_10004A160(v19, (uint64_t)v17, &qword_10119ED10);
    v20 = type metadata accessor for Library.Context(0);
    LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v17, 1, v20);
    v18 = sub_10004FF60((uint64_t)v17, &qword_10119ED10);
    if ((_DWORD)v19 != 1)
    {
      v49 = v5;
      v50 = v7;
      __chkstk_darwin(v18);
      v25 = type metadata accessor for Album(0);
      *(&v47 - 2) = v25;
      v26 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
      *(&v47 - 1) = v26;
      KeyPath = swift_getKeyPath(&unk_100EA8E90);
      __chkstk_darwin(KeyPath);
      *(&v47 - 2) = v25;
      *(&v47 - 1) = v26;
      v28 = swift_getKeyPath(&unk_100EA8EC8);
      static Published.subscript.getter(&v53, v1, KeyPath, v28);
      swift_release(KeyPath);
      swift_release(v28);
      v48 = v53;
      __chkstk_darwin(v29);
      *(&v47 - 2) = v25;
      *(&v47 - 1) = v26;
      v30 = swift_getKeyPath(&unk_100EA8D88);
      __chkstk_darwin(v30);
      *(&v47 - 2) = v25;
      *(&v47 - 1) = v26;
      v51 = v26;
      v31 = swift_getKeyPath(&unk_100EA8DC0);
      static Published.subscript.getter(v14, v1, v30, v31);
      swift_release(v30);
      v32 = swift_release(v31);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v9 + 48))(v14, 1, v8, v32))
      {
        v33 = sub_10004FF60((uint64_t)v14, &qword_1011B1F10);
      }
      else
      {
        (*(void (**)(char *, _QWORD *, uint64_t))(v9 + 16))(v11, v14, v8);
        sub_10004FF60((uint64_t)v14, &qword_1011B1F10);
        v34 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
        dispatch thunk of Collection.startIndex.getter(v8);
        dispatch thunk of Collection.endIndex.getter(&v52, v8, v34);
        v35 = dispatch thunk of Collection.distance(from:to:)(&v53, &v52, v8, v34);
        v33 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        if (v48 == v35)
        {
          v36 = 0;
          v37 = v51;
LABEL_12:
          __chkstk_darwin(v33);
          *(&v47 - 2) = v25;
          *(&v47 - 1) = v37;
          v23 = swift_getKeyPath(&unk_100EA8E38);
          __chkstk_darwin(v23);
          *(&v47 - 2) = v25;
          *(&v47 - 1) = v37;
          v24 = swift_getKeyPath(&unk_100EA8E70);
          LOBYTE(v53) = v36;
          goto LABEL_13;
        }
      }
      __chkstk_darwin(v33);
      v37 = v51;
      *(&v47 - 2) = v25;
      *(&v47 - 1) = v37;
      v38 = swift_getKeyPath(&unk_100EA8BD0);
      __chkstk_darwin(v38);
      *(&v47 - 2) = v25;
      *(&v47 - 1) = v37;
      v39 = swift_getKeyPath(&unk_100EA8C08);
      v40 = v49;
      static Published.subscript.getter(v49, v1, v38, v39);
      swift_release(v38);
      v41 = swift_release(v39);
      v42 = *(_QWORD *)(v25 - 8);
      v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
      if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v43)(v40, 1, v25, v41) == 1)
      {
        sub_10004FF60((uint64_t)v40, &qword_1011A8FA0);
        v44 = 1;
        v45 = (uint64_t)v50;
      }
      else
      {
        v45 = (uint64_t)v50;
        (*(void (**)(char *, _QWORD *, uint64_t))(v42 + 32))(v50, v40, v25);
        v44 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v45, v44, 1, v25);
      v36 = v43(v45, 1, v25) == 0;
      v33 = sub_10004FF60(v45, &qword_1011A8FA0);
      goto LABEL_12;
    }
  }
  __chkstk_darwin(v18);
  v21 = type metadata accessor for Album(0);
  *(&v47 - 2) = v21;
  v22 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  *(&v47 - 1) = v22;
  v23 = swift_getKeyPath(&unk_100EA8E38);
  __chkstk_darwin(v23);
  *(&v47 - 2) = v21;
  *(&v47 - 1) = v22;
  v24 = swift_getKeyPath(&unk_100EA8E70);
  LOBYTE(v53) = 0;
LABEL_13:
  swift_retain(v1);
  return static Published.subscript.setter(&v53, v1, v23, v24);
}

uint64_t sub_10009D0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a4;
  v37 = a5;
  v35 = a2;
  v11 = type metadata accessor for Track(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_10119F140);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = dispatch thunk of MusicItem.id.getter(v11, &protocol witness table for Track);
  v33 = v19;
  v34 = v18;
  sub_10004A160(a6, (uint64_t)v17, &qword_10119F140);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  v20 = qword_10119B8B0;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v21 = Player.state<A>(for:)((uint64_t)v14, v11, (uint64_t)&protocol witness table for Track);
  v22 = sub_100007E8C((uint64_t *)&unk_1011D12F0);
  v23 = sub_100049F28((unint64_t *)&unk_1011A97B0, (uint64_t *)&unk_1011D12F0, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
  v24 = ObservedObject.init(wrappedValue:)(v21, v22, v23);
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v27 = v33;
  *a7 = v34;
  a7[1] = v27;
  a7[2] = v35;
  a7[3] = a3;
  v28 = v37;
  a7[4] = v36;
  a7[5] = v28;
  v29 = (int *)sub_100007E8C(&qword_10119F2A8);
  sub_100065228((uint64_t)v17, (uint64_t)a7 + v29[21], &qword_10119F140);
  v30 = (uint64_t *)((char *)a7 + v29[22]);
  *v30 = v24;
  v30[1] = v26;
  *(uint64_t *)((char *)a7 + v29[23]) = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(*((_QWORD *)v29 - 1) + 56))(a7, 0, 1, v29);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10009D2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a4;
  v37 = a5;
  v35 = a2;
  v11 = type metadata accessor for Playlist.Entry(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_10119F380);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = dispatch thunk of MusicItem.id.getter(v11, &protocol witness table for Playlist.Entry);
  v33 = v19;
  v34 = v18;
  sub_10004A160(a6, (uint64_t)v17, &qword_10119F380);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  v20 = qword_10119B8B0;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v21 = Player.state<A>(for:)((uint64_t)v14, v11, (uint64_t)&protocol witness table for Playlist.Entry);
  v22 = sub_100007E8C((uint64_t *)&unk_1011D0C40);
  v23 = sub_100049F28((unint64_t *)&unk_1011D1350, (uint64_t *)&unk_1011D0C40, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
  v24 = ObservedObject.init(wrappedValue:)(v21, v22, v23);
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v27 = v33;
  *a7 = v34;
  a7[1] = v27;
  a7[2] = v35;
  a7[3] = a3;
  v28 = v37;
  a7[4] = v36;
  a7[5] = v28;
  v29 = (int *)sub_100007E8C(&qword_10119F4C0);
  sub_100065228((uint64_t)v17, (uint64_t)a7 + v29[21], &qword_10119F380);
  v30 = (uint64_t *)((char *)a7 + v29[22]);
  *v30 = v24;
  v30[1] = v26;
  *(uint64_t *)((char *)a7 + v29[23]) = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(*((_QWORD *)v29 - 1) + 56))(a7, 0, 1, v29);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10009D500@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_100203BE0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10009D52C(char *a1)
{
  return sub_100203C7C(*a1);
}

uint64_t sub_10009D550@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100203D1C();
  *a1 = result;
  return result;
}

uint64_t sub_10009D578()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_100203D30(v0);
}

uint64_t sub_10009D5A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100203D44();
  *a1 = result;
  return result;
}

uint64_t sub_10009D5C8()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_100203D58(v0);
}

uint64_t sub_10009D5F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100203D6C();
  *a1 = result;
  return result;
}

uint64_t sub_10009D618()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_100203E08(v0);
}

uint64_t sub_10009D640@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EA8D88);
  v5 = swift_getKeyPath(&unk_100EA8DC0);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_10009D6D4(uint64_t a1)
{
  return sub_10021ED00(a1);
}

void sub_10009D6F4(double *a1@<X8>)
{
  *a1 = sub_100204220();
}

uint64_t sub_10009D71C(double *a1)
{
  return sub_1002042A8(*a1);
}

uint64_t sub_10009D740@<X0>(_QWORD *a1@<X8>)
{
  return sub_100204334(a1);
}

uint64_t sub_10009D760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10009D7A8(a1, a2, a3, a4, &qword_1011A4150, (uint64_t (*)(char *))sub_100204348);
}

uint64_t sub_10009D774@<X0>(_QWORD *a1@<X8>)
{
  return sub_100204364(a1);
}

uint64_t sub_10009D794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10009D7A8(a1, a2, a3, a4, &qword_10119F0B8, (uint64_t (*)(char *))sub_100204378);
}

uint64_t sub_10009D7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v9 = sub_100007E8C(a5);
  __chkstk_darwin(v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v11, a5);
  return a6(v11);
}

uint64_t sub_10009D834@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100204518();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10009D85C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1002045B4(v1, v2);
}

uint64_t sub_10009D898@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100204670();
  *a1 = result;
  return result;
}

uint64_t sub_10009D8C0(uint64_t *a1)
{
  return sub_1002046F8(*a1);
}

uint64_t sub_10009D8E4@<X0>(_QWORD *a1@<X8>)
{
  return sub_100204C30(a1);
}

uint64_t sub_10009D904(uint64_t a1)
{
  return sub_10021EEC4(a1);
}

void sub_10009D924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_10009D984(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x10009DB68);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void (*sub_10009DB8C(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  _QWORD *v3;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;

  v7 = malloc(0x58uLL);
  *a1 = v7;
  v7[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  swift_bridgeObjectRetain();
  v7[9] = sub_10009E050(v7);
  v7[10] = sub_10009DD00(v7 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_10009DC1C;
}

void (*sub_10009DC20(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  _QWORD *v3;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;

  v7 = malloc(0x58uLL);
  *a1 = v7;
  v7[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  swift_bridgeObjectRetain();
  v7[9] = sub_10009E070(v7);
  v7[10] = sub_10009DE68(v7 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_10009DC1C;
}

void sub_10009DCB0(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  uint64_t v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease(v3);
  v2(v1, 0);
  free(v1);
}

void (*sub_10009DD00(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_10079C2C4(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_10009DE2C;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1007A68D0();
      goto LABEL_7;
    }
    sub_10079F3C4(v16, a4 & 1);
    v20 = sub_10079C2C4(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_10009DE2C(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_10009E09C(*a1, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease(*v1);
  free(v1);
}

void (*sub_10009DE68(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[3] = a3;
  v10[4] = v5;
  v10[2] = a2;
  v11 = *v5;
  v13 = sub_10079C1D4(a2, a3);
  *((_BYTE *)v10 + 9) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[5] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v5 + 56) + 16 * v13;
        v20 = *(_QWORD *)v19;
        v21 = *(_BYTE *)(v19 + 8);
LABEL_12:
        *v10 = v20;
        *((_BYTE *)v10 + 8) = v21;
        return sub_10009DFA4;
      }
LABEL_11:
      v20 = 0;
      v21 = 2;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1007A8CE8();
      goto LABEL_7;
    }
    sub_1007A3658(v16, a4 & 1);
    v22 = sub_10079C1D4(a2, a3);
    if ((v17 & 1) == (v23 & 1))
    {
      v13 = v22;
      v10[5] = v22;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
  __break(1u);
  return result;
}

void sub_10009DFA4(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  int v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  _QWORD **v9;
  uint64_t v10;

  v1 = *a1;
  v2 = **a1;
  v3 = *((unsigned __int8 *)*a1 + 8);
  v4 = *((_BYTE *)*a1 + 9);
  if (v3 == 2)
  {
    if ((*((_BYTE *)*a1 + 9) & 1) != 0)
    {
      v5 = v1[5];
      v6 = *(_QWORD *)v1[4];
      swift_arrayDestroy(*(_QWORD *)(v6 + 48) + 16 * v5, 1, &type metadata for MusicItemID);
      sub_1007ABDB0(v5, v6);
    }
  }
  else
  {
    v7 = v3 & 1;
    v9 = (_QWORD **)v1[4];
    v8 = v1[5];
    if ((v4 & 1) != 0)
    {
      v10 = (*v9)[7] + 16 * v8;
      *(_QWORD *)v10 = v2;
      *(_BYTE *)(v10 + 8) = v7;
    }
    else
    {
      sub_1005EF964(v8, v1[2], v1[3], v2, v7, *v9);
      swift_bridgeObjectRetain();
    }
  }
  free(v1);
}

uint64_t (*sub_10009E050(_QWORD *a1))()
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1000A5830;
}

uint64_t (*sub_10009E070(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_10009E090;
}

uint64_t sub_10009E090(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_10009E09C(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_1005EF5B4(a4, a5, a6, v8, (_QWORD *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + 16 * a4, 1, &type metadata for String);
    sub_1007AA65C(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_10009E138(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  Class isa;
  id v33;
  uint64_t v35;
  unint64_t v36;
  _BYTE v37[96];

  v2 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
  v14 = Playlist.catalogID.getter(v13);
  if (v15)
  {
    v16 = v14;
    v17 = v15;
    v18 = sub_100007E8C(&qword_1011AD3F0);
    inited = swift_initStackObject(v18, v37);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = 25705;
    *(_QWORD *)(inited + 40) = 0xE200000000000000;
    *(_QWORD *)(inited + 48) = v16;
    *(_QWORD *)(inited + 56) = v17;
    *(_QWORD *)(inited + 64) = 1684957547;
    *(_QWORD *)(inited + 72) = 0xE400000000000000;
    *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindPlaylist);
    *(_QWORD *)(inited + 88) = v20;
    v21 = sub_100041F44(inited);
    Playlist.url.getter(v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_10004FF60((uint64_t)v4, &qword_10119E460);
    }
    else
    {
      v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      v24 = URL.absoluteString.getter(v23);
      v26 = v25;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
      v36 = v21;
      sub_1005ECBC8(v24, v26, 7107189, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
      v21 = v36;
      v28 = swift_bridgeObjectRelease(0x8000000000000000);
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v28);
    }
    type metadata accessor for JSContainerDetailComponentController(0);
    sub_10032832C(v21);
    v30 = v29;
    swift_bridgeObjectRelease(v21);
    v31 = objc_allocWithZone((Class)MPStoreItemMetadata);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v33 = objc_msgSend(v31, "initWithStorePlatformDictionary:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

    v22 = JSContainerDetailComponentController.__allocating_init(kind:containerStoreItemMetadata:mediaAPIDictionary:isUsingMediaAPI:headerConfigurationHandler:)(0, v33, 0, 1, (void (*)(id, __n128))UIScreen.Dimensions.size.getter, 0);
  }
  else
  {
    v22 = 0;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v22;
}

uint64_t sub_10009E414(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  Class isa;
  id v33;
  uint64_t v35;
  unint64_t v36;
  _BYTE v37[96];

  v2 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
  v14 = Album.catalogID.getter(v13);
  if (v15)
  {
    v16 = v14;
    v17 = v15;
    v18 = sub_100007E8C(&qword_1011AD3F0);
    inited = swift_initStackObject(v18, v37);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = 25705;
    *(_QWORD *)(inited + 40) = 0xE200000000000000;
    *(_QWORD *)(inited + 48) = v16;
    *(_QWORD *)(inited + 56) = v17;
    *(_QWORD *)(inited + 64) = 1684957547;
    *(_QWORD *)(inited + 72) = 0xE400000000000000;
    *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindAlbum);
    *(_QWORD *)(inited + 88) = v20;
    v21 = sub_100041F44(inited);
    Album.url.getter(v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_10004FF60((uint64_t)v4, &qword_10119E460);
    }
    else
    {
      v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      v24 = URL.absoluteString.getter(v23);
      v26 = v25;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
      v36 = v21;
      sub_1005ECBC8(v24, v26, 7107189, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
      v21 = v36;
      v28 = swift_bridgeObjectRelease(0x8000000000000000);
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v28);
    }
    type metadata accessor for JSContainerDetailComponentController(0);
    sub_10032832C(v21);
    v30 = v29;
    swift_bridgeObjectRelease(v21);
    v31 = objc_allocWithZone((Class)MPStoreItemMetadata);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v33 = objc_msgSend(v31, "initWithStorePlatformDictionary:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

    v22 = JSContainerDetailComponentController.__allocating_init(kind:containerStoreItemMetadata:mediaAPIDictionary:isUsingMediaAPI:headerConfigurationHandler:)(2, v33, 0, 1, (void (*)(id, __n128))UIScreen.Dimensions.size.getter, 0);
  }
  else
  {
    v22 = 0;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v22;
}

uint64_t sub_10009E6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_10009D924((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_10009E7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = __DataStorage._bytes.getter();
  v11 = result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = __DataStorage._length.getter();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_10009D924(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_10009E878(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_10009E8C4()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_10009E8F8 + *((int *)qword_10009EAD0 + (v0 >> 62))))();
}

uint64_t sub_10009E908@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

void sub_10009EAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  _QWORD v33[18];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v39 = a1;
  v40 = (char *)a2;
  v2 = _s14TVEpisodesViewV10DataSourceOMa(0);
  __chkstk_darwin(v2);
  v33[4] = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for Genre(0);
  v33[17] = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v33[3] = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for Composer(0);
  v33[16] = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v33[2] = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for Artist(0);
  v33[15] = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v33[1] = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  v8 = __chkstk_darwin(v7);
  v33[7] = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v33[9] = (char *)v33 - v10;
  v38 = type metadata accessor for Playlist(0);
  v33[14] = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v33[8] = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119ED10);
  v13 = __chkstk_darwin(v12);
  v33[5] = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v33[6] = (char *)v33 - v15;
  v37 = type metadata accessor for Album(0);
  v33[13] = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v33[10] = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for NavigationDestinationItem(0);
  v18 = __chkstk_darwin(v17);
  v19 = __chkstk_darwin(v18);
  v33[12] = (char *)v33 - v20;
  v21 = __chkstk_darwin(v19);
  v33[11] = (char *)v33 - v22;
  v23 = __chkstk_darwin(v21);
  v24 = __chkstk_darwin(v23);
  v25 = __chkstk_darwin(v24);
  v26 = __chkstk_darwin(v25);
  __chkstk_darwin(v26);
  v27 = sub_100007E8C(&qword_10119EE38);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)v33 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = (uint64_t)&v30[*(int *)(v28 + 48)];
  sub_10005B704(v39, (uint64_t)v30, type metadata accessor for NavigationDestinationItem);
  v39 = v31;
  sub_10005B704((uint64_t)v40, v31, type metadata accessor for NavigationDestinationItem);
  v40 = v30;
  v32 = (char *)sub_10009EEF0 + 4 * word_100EA8992[swift_getEnumCaseMultiPayload(v30, v17)];
  __asm { BR              X10 }
}

uint64_t sub_10009EEF0()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v3 = *(_QWORD *)(v2 - 96);
  sub_10005B704(v3, (uint64_t)v0, type metadata accessor for NavigationDestinationItem);
  v5 = *v0;
  v4 = (uint64_t)v0[1];
  v6 = (unint64_t)v0[2];
  v7 = *(_QWORD *)(v2 - 104);
  if (!swift_getEnumCaseMultiPayload(v7, v1))
  {
    v10 = *(void **)v7;
    v9 = *(_QWORD *)(v7 + 8);
    v11 = *(_QWORD *)(v7 + 16);
    sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
    v12 = static NSObject.== infix(_:_:)(v5, v10);

    if ((v12 & 1) == 0)
    {
      sub_1000822B4(v9, v11);
      v14 = v4;
      v13 = v6;
LABEL_8:
      sub_1000822B4(v14, v13);
LABEL_9:
      sub_10005B748(v3, type metadata accessor for NavigationDestinationItem);
      return 0;
    }
    if (v6 >> 60 == 15)
    {
      if (v11 >> 60 != 15)
        goto LABEL_13;
    }
    else
    {
      if (v11 >> 60 == 15)
      {
LABEL_13:
        sub_1000822B4(v4, v6);
        v14 = v9;
        v13 = v11;
        goto LABEL_8;
      }
      sub_1000A0168(v9, v11);
      sub_1000A0168(v4, v6);
      sub_10009E878(v4, v6);
      v16 = v15;
      sub_1000822B4(v9, v11);
      sub_1000822B4(v9, v11);
      sub_1000822B4(v4, v6);
      sub_1000822B4(v4, v6);
      if ((v16 & 1) == 0)
        goto LABEL_9;
    }
    sub_10005B748(v3, type metadata accessor for NavigationDestinationItem);
    return 1;
  }
  sub_1000822B4(v4, v6);

  sub_10004FF60(v3, &qword_10119EE38);
  return 0;
}

uint64_t sub_1000A0168(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_100079DE4(result, a2);
  return result;
}

unint64_t sub_1000A017C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EF40;
  if (!qword_10119EF40)
  {
    v1 = sub_100044B54(&qword_10119EE68);
    sub_1000A01E8();
    sub_1000A0284();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119EF40);
  }
  return result;
}

unint64_t sub_1000A01E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EF48;
  if (!qword_10119EF48)
  {
    v1 = sub_100044B54(&qword_10119EE60);
    sub_100048748(&qword_10119EF50, _s14TVEpisodesViewVMa, (uint64_t)&unk_100EAA124);
    sub_100049F28(&qword_10119EF58, &qword_10119EF60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119EF48);
  }
  return result;
}

unint64_t sub_1000A0284()
{
  unint64_t result;

  result = qword_10119EF68;
  if (!qword_10119EF68)
  {
    result = swift_getWitnessTable(&unk_100EA9160, &type metadata for PushedViewStyle);
    atomic_store(result, (unint64_t *)&qword_10119EF68);
  }
  return result;
}

unint64_t sub_1000A02C8()
{
  unint64_t result;

  result = qword_10119EF70;
  if (!qword_10119EF70)
  {
    result = swift_getWitnessTable(&unk_100EC31D0, &type metadata for LoadingView);
    atomic_store(result, (unint64_t *)&qword_10119EF70);
  }
  return result;
}

unint64_t sub_1000A030C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EF78;
  if (!qword_10119EF78)
  {
    v1 = sub_100044B54(&qword_10119EE80);
    sub_1000A0370();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119EF78);
  }
  return result;
}

unint64_t sub_1000A0370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EF80;
  if (!qword_10119EF80)
  {
    v1 = sub_100044B54(&qword_10119EE90);
    sub_1000A03DC();
    sub_1000A0284();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119EF80);
  }
  return result;
}

unint64_t sub_1000A03DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EF88;
  if (!qword_10119EF88)
  {
    v1 = sub_100044B54(&qword_10119EF90);
    sub_1000A0460();
    sub_100049F28(&qword_10119EF58, &qword_10119EF60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119EF88);
  }
  return result;
}

unint64_t sub_1000A0460()
{
  unint64_t result;

  result = qword_10119EF98;
  if (!qword_10119EF98)
  {
    result = swift_getWitnessTable(&unk_100EB43D4, &_s10AlbumsViewVN);
    atomic_store(result, (unint64_t *)&qword_10119EF98);
  }
  return result;
}

unint64_t sub_1000A04A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EFA0;
  if (!qword_10119EFA0)
  {
    v1 = sub_100044B54(&qword_10119EE58);
    sub_1000A017C();
    sub_1000A02C8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119EFA0);
  }
  return result;
}

unint64_t sub_1000A0510()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EFA8;
  if (!qword_10119EFA8)
  {
    v1 = sub_100044B54(&qword_10119EF38);
    sub_1000A057C();
    sub_1000A0840();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119EFA8);
  }
  return result;
}

unint64_t sub_1000A057C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EFB0;
  if (!qword_10119EFB0)
  {
    v1 = sub_100044B54(&qword_10119EF30);
    sub_1000A05E8();
    sub_1000A062C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119EFB0);
  }
  return result;
}

unint64_t sub_1000A05E8()
{
  unint64_t result;

  result = qword_10119EFB8;
  if (!qword_10119EFB8)
  {
    result = swift_getWitnessTable(&unk_100EB0508, &type metadata for CatalogComponentView);
    atomic_store(result, (unint64_t *)&qword_10119EFB8);
  }
  return result;
}

unint64_t sub_1000A062C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = qword_10119EFC0;
  if (!qword_10119EFC0)
  {
    v1 = sub_100044B54(&qword_10119EF10);
    sub_1000A077C();
    v2 = sub_100044B54(&qword_10119EEF8);
    v3 = sub_100044B54(&qword_10119EFD0);
    v8 = sub_100044B54(&qword_10119EEF0);
    v9 = sub_1000A07C0(&qword_10119EFD8, &qword_10119EEF0, &qword_10119EFE0, &qword_10119EEE8);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
    v5 = sub_100044B54(&qword_10119EFE8);
    v6 = sub_100049F28(&qword_10119EFF0, &qword_10119EFE8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    v8 = v5;
    v9 = v6;
    v7 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v8 = v2;
    v9 = v3;
    v10 = OpaqueTypeConformance2;
    v11 = v7;
    swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119EFC0);
  }
  return result;
}

unint64_t sub_1000A077C()
{
  unint64_t result;

  result = qword_10119EFC8;
  if (!qword_10119EFC8)
  {
    result = swift_getWitnessTable(&unk_100ECC790, &type metadata for ContainerDetail.RepresentableView);
    atomic_store(result, (unint64_t *)&qword_10119EFC8);
  }
  return result;
}

uint64_t sub_1000A07C0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    sub_100049F28(a3, a4, (uint64_t)"ٴ ");
    sub_1000A0284();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A0840()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119EFF8;
  if (!qword_10119EFF8)
  {
    v1 = sub_100044B54(&qword_10119EEB0);
    sub_1000A08AC();
    sub_1000A09FC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119EFF8);
  }
  return result;
}

unint64_t sub_1000A08AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = qword_10119F000;
  if (!qword_10119F000)
  {
    v1 = sub_100044B54(&qword_10119EEE0);
    sub_1000A077C();
    v2 = sub_100044B54(&qword_10119EEC8);
    v3 = sub_100044B54(&qword_10119EFD0);
    v8 = sub_100044B54(&qword_10119EEC0);
    v9 = sub_1000A07C0(&qword_10119F008, &qword_10119EEC0, &qword_10119F010, &qword_10119EEB8);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
    v5 = sub_100044B54(&qword_10119EFE8);
    v6 = sub_100049F28(&qword_10119EFF0, &qword_10119EFE8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    v8 = v5;
    v9 = v6;
    v7 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v8 = v2;
    v9 = v3;
    v10 = OpaqueTypeConformance2;
    v11 = v7;
    swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F000);
  }
  return result;
}

unint64_t sub_1000A09FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F018;
  if (!qword_10119F018)
  {
    v1 = sub_100044B54(&qword_10119EEA0);
    sub_100048748(&qword_10119F020, _s16ArtistDetailViewVMa, (uint64_t)&unk_100ED2CE8);
    sub_1000A0284();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F018);
  }
  return result;
}

unint64_t sub_1000A0A80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F028;
  if (!qword_10119F028)
  {
    v1 = sub_100044B54(&qword_10119EE88);
    sub_1000A030C();
    sub_1000A04A4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F028);
  }
  return result;
}

uint64_t sub_1000A0B14(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  _QWORD *v54;
  uint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  void (*v101)(uint64_t, char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void *v113;
  void *v114;
  void *v115;
  id v116;
  uint64_t v117;
  id v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t KeyPath;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;

  v6 = v5;
  v200 = a4;
  v201 = a5;
  v140 = a3;
  v199 = a2;
  v202 = a1;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v139 = (char *)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119F078);
  v197 = *(_QWORD *)(v9 - 8);
  v198 = v9;
  __chkstk_darwin(v9);
  v196 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = sub_100007E8C(&qword_10119F080);
  v11 = __chkstk_darwin(v195);
  v194 = (uint64_t)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v193 = (char *)&v138 - v13;
  v14 = sub_100007E8C(&qword_10119F088);
  v191 = *(_QWORD *)(v14 - 8);
  v192 = v14;
  __chkstk_darwin(v14);
  v190 = (char *)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A8F30);
  v188 = *(_QWORD *)(v16 - 8);
  v189 = v16;
  __chkstk_darwin(v16);
  v187 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_10119F090);
  v185 = *(_QWORD *)(v18 - 8);
  v186 = v18;
  __chkstk_darwin(v18);
  v184 = (char *)&v138 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_100007E8C(&qword_10119F098);
  v182 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v180 = (char *)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_100007E8C(&qword_10119F0A0);
  v178 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v176 = (char *)&v138 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_100007E8C(&qword_10119F0A8);
  v174 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v173 = (char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_100007E8C(&qword_10119F0B0);
  v171 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v170 = (char *)&v138 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = sub_100007E8C(&qword_10119F0B8);
  v24 = __chkstk_darwin(v169);
  v168 = (uint64_t)&v138 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v167 = (char *)&v138 - v26;
  v166 = sub_100007E8C((uint64_t *)&unk_1011A4320);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v164 = (char *)&v138 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_100007E8C(&qword_1011A4150);
  v28 = __chkstk_darwin(v163);
  v162 = (uint64_t)&v138 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v161 = (char *)&v138 - v30;
  v160 = sub_100007E8C(&qword_10119F0C0);
  v159 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v158 = (char *)&v138 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100007E8C(&qword_10119F0C8);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v155 = (char *)&v138 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_100007E8C(&qword_1011B1F10);
  v33 = __chkstk_darwin(v154);
  v153 = (uint64_t)&v138 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v152 = (char *)&v138 - v35;
  v151 = sub_100007E8C(&qword_10119F0D0);
  v150 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v149 = (char *)&v138 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100007E8C(&qword_10119F0D8);
  v147 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v146 = (char *)&v138 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100007E8C(&qword_10119F0E0);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (char *)&v138 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v142 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v40 = (char *)&v138 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_10119F0E8);
  v42 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v44 = (char *)&v138 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100007E8C(&qword_1011A8FA0);
  v46 = __chkstk_darwin(v45);
  v48 = (char *)&v138 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v50 = (char *)&v138 - v49;
  v51 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 96);
  v52 = type metadata accessor for Album(0);
  v53 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56);
  v177 = v52;
  v53(v50, 1, 1);
  sub_10004A160((uint64_t)v50, (uint64_t)v48, &qword_1011A8FA0);
  Published.init(initialValue:)(v48, v45);
  v181 = v50;
  sub_10004FF60((uint64_t)v50, &qword_1011A8FA0);
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v51, v44, v41);
  v54 = (_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 112));
  *v54 = 0;
  v54[1] = 0;
  v55 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 120);
  LOBYTE(v203) = 0;
  Published.init(initialValue:)(&v203, &type metadata for Bool);
  v56 = *(void (**)(uint64_t, char *, uint64_t))(v142 + 32);
  v57 = v141;
  v56(v55, v40, v141);
  v58 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 128);
  LOBYTE(v203) = 0;
  Published.init(initialValue:)(&v203, &type metadata for Bool);
  v56(v58, v40, v57);
  v59 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 136);
  v60 = sub_100007E8C(&qword_10119F0F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 144)) = 0;
  v61 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 152);
  v203 = _swiftEmptyArrayStorage;
  v62 = sub_100007E8C(&qword_10119F0F8);
  v63 = v143;
  Published.init(initialValue:)(&v203, v62);
  (*(void (**)(uint64_t, char *, uint64_t))(v144 + 32))(v61, v63, v145);
  v64 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 160);
  v203 = (_QWORD *)sub_100042638((uint64_t)_swiftEmptyArrayStorage);
  v65 = sub_100007E8C(&qword_10119F100);
  v66 = v146;
  Published.init(initialValue:)(&v203, v65);
  (*(void (**)(uint64_t, char *, uint64_t))(v147 + 32))(v64, v66, v148);
  v67 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 168);
  v203 = _swiftEmptyArrayStorage;
  v68 = sub_100007E8C(&qword_10119F108);
  v69 = v149;
  Published.init(initialValue:)(&v203, v68);
  (*(void (**)(uint64_t, char *, uint64_t))(v150 + 32))(v67, v69, v151);
  v70 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 176);
  v71 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v72 = (uint64_t)v152;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v152, 1, 1, v71);
  v73 = v153;
  sub_10004A160(v72, v153, &qword_1011B1F10);
  v74 = v155;
  Published.init(initialValue:)(v73, v154);
  sub_10004FF60(v72, &qword_1011B1F10);
  (*(void (**)(uint64_t, char *, uint64_t))(v156 + 32))(v70, v74, v157);
  v75 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 184);
  v203 = 0;
  v76 = v158;
  Published.init(initialValue:)(&v203, &type metadata for Double);
  (*(void (**)(uint64_t, char *, uint64_t))(v159 + 32))(v75, v76, v160);
  v77 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 192);
  v78 = sub_100007E8C((uint64_t *)&unk_1011D0B50);
  v79 = (uint64_t)v161;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v161, 1, 1, v78);
  v80 = v162;
  sub_10004A160(v79, v162, &qword_1011A4150);
  v81 = v164;
  Published.init(initialValue:)(v80, v163);
  sub_10004FF60(v79, &qword_1011A4150);
  (*(void (**)(uint64_t, char *, uint64_t))(v165 + 32))(v77, v81, v166);
  v82 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 200);
  v83 = sub_100007E8C((uint64_t *)&unk_1011ACAE0);
  v84 = (uint64_t)v167;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v167, 1, 1, v83);
  v85 = v168;
  sub_10004A160(v84, v168, &qword_10119F0B8);
  v86 = v170;
  Published.init(initialValue:)(v85, v169);
  sub_10004FF60(v84, &qword_10119F0B8);
  (*(void (**)(uint64_t, char *, uint64_t))(v171 + 32))(v82, v86, v172);
  v87 = *(_QWORD *)(*(_QWORD *)v6 + 208);
  *(_QWORD *)(v6 + v87) = 0;
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 216)) = 0;
  v88 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 224);
  v203 = 0;
  v89 = sub_100007E8C(&qword_10119F110);
  v90 = v173;
  Published.init(initialValue:)(&v203, v89);
  (*(void (**)(uint64_t, char *, uint64_t))(v174 + 32))(v88, v90, v175);
  v91 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 232);
  v203 = 0;
  v92 = sub_100007E8C(&qword_10119F118);
  v93 = v176;
  Published.init(initialValue:)(&v203, v92);
  (*(void (**)(uint64_t, char *, uint64_t))(v178 + 32))(v91, v93, v179);
  v94 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 240);
  v203 = 0;
  v95 = sub_100007E8C((uint64_t *)&unk_1011A4160);
  v96 = v180;
  Published.init(initialValue:)(&v203, v95);
  (*(void (**)(uint64_t, char *, uint64_t))(v182 + 32))(v94, v96, v183);
  v97 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 248);
  v203 = 0;
  v204 = 0;
  v98 = sub_100007E8C(&qword_10119DCA0);
  v99 = v184;
  Published.init(initialValue:)(&v203, v98);
  v100 = v186;
  v101 = *(void (**)(uint64_t, char *, uint64_t))(v185 + 32);
  v101(v97, v99, v186);
  v102 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 256);
  v203 = 0;
  v204 = 0;
  Published.init(initialValue:)(&v203, v98);
  v101(v102, v99, v100);
  v103 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 264);
  v203 = 0;
  v104 = sub_100007E8C(&qword_10119F120);
  v105 = v187;
  Published.init(initialValue:)(&v203, v104);
  (*(void (**)(uint64_t, char *, uint64_t))(v188 + 32))(v103, v105, v189);
  v106 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 272);
  v203 = 0;
  v107 = v190;
  Published.init(initialValue:)(&v203, &type metadata for Int);
  (*(void (**)(uint64_t, char *, uint64_t))(v191 + 32))(v106, v107, v192);
  v108 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 280);
  v109 = sub_100007E8C(&qword_10119F128);
  v110 = (uint64_t)v193;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v193, 1, 1, v109);
  v111 = v194;
  sub_10004A160(v110, v194, &qword_10119F080);
  v112 = v196;
  Published.init(initialValue:)(v111, v195);
  sub_10004FF60(v110, &qword_10119F080);
  (*(void (**)(uint64_t, char *, uint64_t))(v197 + 32))(v108, v112, v198);
  sub_10004A160(v202, v6 + *(_QWORD *)(*(_QWORD *)v6 + 104), &qword_10119ED10);
  v113 = *(void **)(v6 + v87);
  v114 = v199;
  *(_QWORD *)(v6 + v87) = v199;
  v115 = v114;
  v116 = v114;

  if (v115)
  {
    v118 = v116;
    v119 = (_QWORD *)JSComponentController.headerItem.getter();

    v120 = (*(uint64_t (**)(void))((swift_isaMask & *v119) + 0x1F0))();
    if (v120)
    {
      v121 = (_QWORD *)v120;
      v122 = sub_10079B648();

      v119 = v121;
    }
    else
    {
      v122 = 0;
    }
    v123 = v140;
    v124 = (uint64_t)v139;

  }
  else
  {
    v122 = 0;
    v123 = v140;
    v124 = (uint64_t)v139;
  }
  __chkstk_darwin(v117);
  v125 = v177;
  *(&v138 - 2) = v177;
  v126 = sub_100048748(&qword_10119EDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&unk_100EAEF20);
  *(&v138 - 1) = v126;
  KeyPath = swift_getKeyPath(&unk_100EA8B78);
  __chkstk_darwin(KeyPath);
  *(&v138 - 2) = v125;
  *(&v138 - 1) = v126;
  v128 = swift_getKeyPath(&unk_100EA8BB0);
  v203 = (_QWORD *)v122;
  swift_retain(v6);
  static Published.subscript.setter(&v203, v6, KeyPath, v128);
  v129 = (uint64_t)v181;
  sub_10004A160(v123, (uint64_t)v181, &qword_1011A8FA0);
  sub_10008493C(v129);
  v130 = v54[1];
  v131 = v201;
  *v54 = v200;
  v54[1] = v131;
  swift_bridgeObjectRelease(v130);
  v132 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v124, 1, 1, v132);
  type metadata accessor for MainActor(0);
  v133 = swift_retain(v6);
  v134 = static MainActor.shared.getter(v133);
  v135 = (_QWORD *)swift_allocObject(&unk_1010AFBA8, 40, 7);
  v135[2] = v134;
  v135[3] = &protocol witness table for MainActor;
  v135[4] = v6;
  v136 = sub_100166D14(v124, (uint64_t)&unk_10119F138, (uint64_t)v135);
  swift_release(v136);
  sub_10004FF60(v123, &qword_1011A8FA0);
  sub_10004FF60(v202, &qword_10119ED10);
  return v6;
}

uint64_t sub_1000A1BD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10020465C();
  *a1 = result;
  return result;
}

uint64_t sub_1000A1BF8()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_100203494(v0);
}

uint64_t sub_1000A1C20()
{
  return 16;
}

__n128 sub_1000A1C2C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A1C3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10119F134);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100084D30(a1, v4, v5, v6);
}

uint64_t sub_1000A1CA8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1002039A4(a1);
}

uint64_t sub_1000A1CC8(uint64_t a1)
{
  return sub_10021EB8C(a1);
}

uint64_t sub_1000A1CE8()
{
  return 16;
}

__n128 sub_1000A1CF4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A1D00@<X0>(_QWORD *a1@<X8>)
{
  return sub_100204364(a1);
}

uint64_t sub_1000A1D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10009D7A8(a1, a2, a3, a4, &qword_10119F0B8, (uint64_t (*)(char *))sub_100204378);
}

uint64_t sub_1000A1D44()
{
  return 16;
}

__n128 sub_1000A1D50(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A1D5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100204518();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000A1D84(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1002045B4(v1, v2);
}

uint64_t sub_1000A1DC0()
{
  return 16;
}

__n128 sub_1000A1DCC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A1DD8@<X0>(_QWORD *a1@<X8>)
{
  return sub_100204C30(a1);
}

uint64_t sub_1000A1DF8(uint64_t a1)
{
  return sub_10021EEC4(a1);
}

uint64_t sub_1000A1E18()
{
  return 16;
}

__n128 sub_1000A1E24(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A1E30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  _QWORD *v54;
  uint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  void (*v101)(uint64_t, char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void *v113;
  void *v114;
  void *v115;
  id v116;
  uint64_t v117;
  id v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t KeyPath;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;

  v6 = v5;
  v200 = a4;
  v201 = a5;
  v140 = a3;
  v199 = a2;
  v202 = a1;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v139 = (char *)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119F310);
  v197 = *(_QWORD *)(v9 - 8);
  v198 = v9;
  __chkstk_darwin(v9);
  v196 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = sub_100007E8C(&qword_10119F318);
  v11 = __chkstk_darwin(v195);
  v194 = (uint64_t)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v193 = (char *)&v138 - v13;
  v14 = sub_100007E8C(&qword_10119F088);
  v191 = *(_QWORD *)(v14 - 8);
  v192 = v14;
  __chkstk_darwin(v14);
  v190 = (char *)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A8F30);
  v188 = *(_QWORD *)(v16 - 8);
  v189 = v16;
  __chkstk_darwin(v16);
  v187 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_10119F090);
  v185 = *(_QWORD *)(v18 - 8);
  v186 = v18;
  __chkstk_darwin(v18);
  v184 = (char *)&v138 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_100007E8C(&qword_10119F098);
  v182 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v180 = (char *)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_100007E8C(&qword_10119F0A0);
  v178 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v176 = (char *)&v138 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_100007E8C(&qword_10119F0A8);
  v174 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v173 = (char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_100007E8C(&qword_10119F0B0);
  v171 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v170 = (char *)&v138 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = sub_100007E8C(&qword_10119F0B8);
  v24 = __chkstk_darwin(v169);
  v168 = (uint64_t)&v138 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v167 = (char *)&v138 - v26;
  v166 = sub_100007E8C((uint64_t *)&unk_1011A4320);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v164 = (char *)&v138 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_100007E8C(&qword_1011A4150);
  v28 = __chkstk_darwin(v163);
  v162 = (uint64_t)&v138 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v161 = (char *)&v138 - v30;
  v160 = sub_100007E8C(&qword_10119F0C0);
  v159 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v158 = (char *)&v138 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100007E8C(&qword_10119F320);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v155 = (char *)&v138 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  v33 = __chkstk_darwin(v154);
  v153 = (uint64_t)&v138 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v152 = (char *)&v138 - v35;
  v151 = sub_100007E8C(&qword_10119F328);
  v150 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v149 = (char *)&v138 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100007E8C(&qword_10119F330);
  v147 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v146 = (char *)&v138 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100007E8C(&qword_10119F338);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (char *)&v138 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v142 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v40 = (char *)&v138 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_10119F340);
  v42 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v44 = (char *)&v138 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100007E8C(&qword_1011A30F0);
  v46 = __chkstk_darwin(v45);
  v48 = (char *)&v138 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v50 = (char *)&v138 - v49;
  v51 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 96);
  v52 = type metadata accessor for Playlist(0);
  v53 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56);
  v177 = v52;
  v53(v50, 1, 1);
  sub_10004A160((uint64_t)v50, (uint64_t)v48, &qword_1011A30F0);
  Published.init(initialValue:)(v48, v45);
  v181 = v50;
  sub_10004FF60((uint64_t)v50, &qword_1011A30F0);
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v51, v44, v41);
  v54 = (_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 112));
  *v54 = 0;
  v54[1] = 0;
  v55 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 120);
  LOBYTE(v203) = 0;
  Published.init(initialValue:)(&v203, &type metadata for Bool);
  v56 = *(void (**)(uint64_t, char *, uint64_t))(v142 + 32);
  v57 = v141;
  v56(v55, v40, v141);
  v58 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 128);
  LOBYTE(v203) = 0;
  Published.init(initialValue:)(&v203, &type metadata for Bool);
  v56(v58, v40, v57);
  v59 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 136);
  v60 = sub_100007E8C(&qword_10119F348);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 144)) = 0;
  v61 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 152);
  v203 = _swiftEmptyArrayStorage;
  v62 = sub_100007E8C(&qword_10119F350);
  v63 = v143;
  Published.init(initialValue:)(&v203, v62);
  (*(void (**)(uint64_t, char *, uint64_t))(v144 + 32))(v61, v63, v145);
  v64 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 160);
  v203 = (_QWORD *)sub_10004262C((uint64_t)_swiftEmptyArrayStorage);
  v65 = sub_100007E8C(&qword_10119F358);
  v66 = v146;
  Published.init(initialValue:)(&v203, v65);
  (*(void (**)(uint64_t, char *, uint64_t))(v147 + 32))(v64, v66, v148);
  v67 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 168);
  v203 = _swiftEmptyArrayStorage;
  v68 = sub_100007E8C(&qword_10119F360);
  v69 = v149;
  Published.init(initialValue:)(&v203, v68);
  (*(void (**)(uint64_t, char *, uint64_t))(v150 + 32))(v67, v69, v151);
  v70 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 176);
  v71 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v72 = (uint64_t)v152;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v152, 1, 1, v71);
  v73 = v153;
  sub_10004A160(v72, v153, (uint64_t *)&unk_1011D0BB0);
  v74 = v155;
  Published.init(initialValue:)(v73, v154);
  sub_10004FF60(v72, (uint64_t *)&unk_1011D0BB0);
  (*(void (**)(uint64_t, char *, uint64_t))(v156 + 32))(v70, v74, v157);
  v75 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 184);
  v203 = 0;
  v76 = v158;
  Published.init(initialValue:)(&v203, &type metadata for Double);
  (*(void (**)(uint64_t, char *, uint64_t))(v159 + 32))(v75, v76, v160);
  v77 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 192);
  v78 = sub_100007E8C((uint64_t *)&unk_1011D0B50);
  v79 = (uint64_t)v161;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v161, 1, 1, v78);
  v80 = v162;
  sub_10004A160(v79, v162, &qword_1011A4150);
  v81 = v164;
  Published.init(initialValue:)(v80, v163);
  sub_10004FF60(v79, &qword_1011A4150);
  (*(void (**)(uint64_t, char *, uint64_t))(v165 + 32))(v77, v81, v166);
  v82 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 200);
  v83 = sub_100007E8C((uint64_t *)&unk_1011ACAE0);
  v84 = (uint64_t)v167;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v167, 1, 1, v83);
  v85 = v168;
  sub_10004A160(v84, v168, &qword_10119F0B8);
  v86 = v170;
  Published.init(initialValue:)(v85, v169);
  sub_10004FF60(v84, &qword_10119F0B8);
  (*(void (**)(uint64_t, char *, uint64_t))(v171 + 32))(v82, v86, v172);
  v87 = *(_QWORD *)(*(_QWORD *)v6 + 208);
  *(_QWORD *)(v6 + v87) = 0;
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 216)) = 0;
  v88 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 224);
  v203 = 0;
  v89 = sub_100007E8C(&qword_10119F110);
  v90 = v173;
  Published.init(initialValue:)(&v203, v89);
  (*(void (**)(uint64_t, char *, uint64_t))(v174 + 32))(v88, v90, v175);
  v91 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 232);
  v203 = 0;
  v92 = sub_100007E8C(&qword_10119F118);
  v93 = v176;
  Published.init(initialValue:)(&v203, v92);
  (*(void (**)(uint64_t, char *, uint64_t))(v178 + 32))(v91, v93, v179);
  v94 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 240);
  v203 = 0;
  v95 = sub_100007E8C((uint64_t *)&unk_1011A4160);
  v96 = v180;
  Published.init(initialValue:)(&v203, v95);
  (*(void (**)(uint64_t, char *, uint64_t))(v182 + 32))(v94, v96, v183);
  v97 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 248);
  v203 = 0;
  v204 = 0;
  v98 = sub_100007E8C(&qword_10119DCA0);
  v99 = v184;
  Published.init(initialValue:)(&v203, v98);
  v100 = v186;
  v101 = *(void (**)(uint64_t, char *, uint64_t))(v185 + 32);
  v101(v97, v99, v186);
  v102 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 256);
  v203 = 0;
  v204 = 0;
  Published.init(initialValue:)(&v203, v98);
  v101(v102, v99, v100);
  v103 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 264);
  v203 = 0;
  v104 = sub_100007E8C(&qword_10119F120);
  v105 = v187;
  Published.init(initialValue:)(&v203, v104);
  (*(void (**)(uint64_t, char *, uint64_t))(v188 + 32))(v103, v105, v189);
  v106 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 272);
  v203 = 0;
  v107 = v190;
  Published.init(initialValue:)(&v203, &type metadata for Int);
  (*(void (**)(uint64_t, char *, uint64_t))(v191 + 32))(v106, v107, v192);
  v108 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 280);
  v109 = sub_100007E8C(&qword_10119F368);
  v110 = (uint64_t)v193;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v193, 1, 1, v109);
  v111 = v194;
  sub_10004A160(v110, v194, &qword_10119F318);
  v112 = v196;
  Published.init(initialValue:)(v111, v195);
  sub_10004FF60(v110, &qword_10119F318);
  (*(void (**)(uint64_t, char *, uint64_t))(v197 + 32))(v108, v112, v198);
  sub_10004A160(v202, v6 + *(_QWORD *)(*(_QWORD *)v6 + 104), (uint64_t *)&unk_1011C5B80);
  v113 = *(void **)(v6 + v87);
  v114 = v199;
  *(_QWORD *)(v6 + v87) = v199;
  v115 = v114;
  v116 = v114;

  if (v115)
  {
    v118 = v116;
    v119 = (_QWORD *)JSComponentController.headerItem.getter();

    v120 = (*(uint64_t (**)(void))((swift_isaMask & *v119) + 0x1F0))();
    if (v120)
    {
      v121 = (_QWORD *)v120;
      v122 = sub_10079B648();

      v119 = v121;
    }
    else
    {
      v122 = 0;
    }
    v123 = v140;
    v124 = (uint64_t)v139;

  }
  else
  {
    v122 = 0;
    v123 = v140;
    v124 = (uint64_t)v139;
  }
  __chkstk_darwin(v117);
  v125 = v177;
  *(&v138 - 2) = v177;
  v126 = sub_100048748((unint64_t *)&unk_10119EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&unk_100EAEF4C);
  *(&v138 - 1) = v126;
  KeyPath = swift_getKeyPath(&unk_100EA8B78);
  __chkstk_darwin(KeyPath);
  *(&v138 - 2) = v125;
  *(&v138 - 1) = v126;
  v128 = swift_getKeyPath(&unk_100EA8BB0);
  v203 = (_QWORD *)v122;
  swift_retain(v6);
  static Published.subscript.setter(&v203, v6, KeyPath, v128);
  v129 = (uint64_t)v181;
  sub_10004A160(v123, (uint64_t)v181, &qword_1011A30F0);
  sub_1000845E8(v129);
  v130 = v54[1];
  v131 = v201;
  *v54 = v200;
  v54[1] = v131;
  swift_bridgeObjectRelease(v130);
  v132 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v124, 1, 1, v132);
  type metadata accessor for MainActor(0);
  v133 = swift_retain(v6);
  v134 = static MainActor.shared.getter(v133);
  v135 = (_QWORD *)swift_allocObject(&unk_1010AFCC0, 40, 7);
  v135[2] = v134;
  v135[3] = &protocol witness table for MainActor;
  v135[4] = v6;
  v136 = sub_100166D14(v124, (uint64_t)&unk_10119F378, (uint64_t)v135);
  swift_release(v136);
  sub_10004FF60(v123, &qword_1011A30F0);
  sub_10004FF60(v202, (uint64_t *)&unk_1011C5B80);
  return v6;
}

uint64_t sub_1000A2EF0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10119F174);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  v2 = (_QWORD *)swift_task_alloc(dword_10119F184);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return sub_100086338();
}

uint64_t sub_1000A2F58(uint64_t a1)
{
  uint64_t v1;

  return sub_100087660(a1, v1);
}

uint64_t sub_1000A2F64()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10119F1BC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10005AEE4;
  return sub_1000882F4();
}

unint64_t sub_1000A2FD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F220;
  if (!qword_10119F220)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011ACAE0);
    sub_100048748(&qword_10119F228, (uint64_t (*)(uint64_t))&type metadata accessor for Genre, (uint64_t)&protocol conformance descriptor for Genre);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F220);
  }
  return result;
}

uint64_t sub_1000A3050@<X0>(_QWORD *a1@<X8>)
{
  return sub_100204334(a1);
}

uint64_t sub_1000A3070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10009D7A8(a1, a2, a3, a4, &qword_1011A4150, (uint64_t (*)(char *))sub_100204348);
}

uint64_t sub_1000A3094()
{
  return 16;
}

__n128 sub_1000A30A0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1000A30AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F230;
  if (!qword_10119F230)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011D0B50);
    sub_100048748(&qword_10119F238, (uint64_t (*)(uint64_t))&type metadata accessor for RecordLabel, (uint64_t)&protocol conformance descriptor for RecordLabel);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F230);
  }
  return result;
}

uint64_t sub_1000A312C(uint64_t a1)
{
  return sub_10021ED00(a1);
}

uint64_t sub_1000A314C()
{
  return 16;
}

__n128 sub_1000A3158(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A3168(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10119F244);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10009B87C(a1, v4, v5, v6);
}

unint64_t sub_1000A31D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F250;
  if (!qword_10119F250)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011A96F0);
    sub_100048748(&qword_1011B6980, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F250);
  }
  return result;
}

void sub_1000A3254(double *a1@<X8>)
{
  *a1 = sub_100204220();
}

uint64_t sub_1000A327C(double *a1)
{
  return sub_1002042A8(*a1);
}

uint64_t sub_1000A32A0()
{
  return 16;
}

__n128 sub_1000A32AC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A32B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_100203BE0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000A32E4(char *a1)
{
  return sub_100203C7C(*a1);
}

uint64_t sub_1000A3308()
{
  return 16;
}

__n128 sub_1000A3314(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A3320@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100204670();
  *a1 = result;
  return result;
}

uint64_t sub_1000A3348(uint64_t *a1)
{
  return sub_1002046F8(*a1);
}

uint64_t sub_1000A336C()
{
  return 16;
}

__n128 sub_1000A3378(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A3384@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100203D44();
  *a1 = result;
  return result;
}

uint64_t sub_1000A33AC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000A3450(a1, a2, a3, a4, sub_100203D58);
}

uint64_t sub_1000A33B8()
{
  return 16;
}

__n128 sub_1000A33C4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A33D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100203D6C();
  *a1 = result;
  return result;
}

uint64_t sub_1000A33F8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000A3450(a1, a2, a3, a4, sub_100203E08);
}

uint64_t sub_1000A3404()
{
  return 16;
}

__n128 sub_1000A3410(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A341C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100203D1C();
  *a1 = result;
  return result;
}

uint64_t sub_1000A3444(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000A3450(a1, a2, a3, a4, sub_100203D30);
}

uint64_t sub_1000A3450(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;

  v6 = swift_bridgeObjectRetain(*a1);
  return a5(v6);
}

uint64_t sub_1000A347C()
{
  return 16;
}

__n128 sub_1000A3488(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000A3494@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibrarySongFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1000A34D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Composer.name.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000A3500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119F140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A3548(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_100007E8C(&qword_1011A30F0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119F428);
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000A35C8, 0, 0);
}

uint64_t sub_1000A35C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 40);
  sub_10004A160(*(_QWORD *)(v0 + 24), v1, &qword_10119F428);
  v2 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  v4 = *(_QWORD *)(v0 + 40);
  if (v3 == 1)
  {
    v5 = &qword_10119F428;
    v6 = *(_QWORD *)(v0 + 40);
LABEL_5:
    sub_10004FF60(v6, v5);
    goto LABEL_6;
  }
  v7 = type metadata accessor for Library.Context(0);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7);
  sub_10004FF60(v4, (uint64_t *)&unk_1011C5B80);
  if (v8 != 1)
  {
    v9 = *(_QWORD *)(v0 + 32);
    sub_10004A160(*(_QWORD *)(v0 + 16), v9, &qword_1011A30F0);
    v10 = type metadata accessor for Playlist(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10);
    v6 = v9;
    v5 = &qword_1011A30F0;
    goto LABEL_5;
  }
LABEL_6:
  v11 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000A36DC(uint64_t a1, char a2)
{
  uint64_t result;
  _QWORD *v4;
  unint64_t v5;
  char v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  BOOL v17;
  Swift::String v18;
  char isUniquelyReferenced_nonNull_native;
  void *v20;
  Swift::String v21;
  uint64_t v22;
  void *v23;
  _QWORD v24[3];

  result = 0;
  if ((a2 & 1) == 0 && a1 >= 1)
  {
    if (qword_10119BBF0 != -1)
      goto LABEL_25;
    while (1)
    {
      swift_beginAccess(&off_1011A7198, v24, 32, 0);
      v4 = off_1011A7198;
      if (*((_QWORD *)off_1011A7198 + 2))
      {
        v5 = sub_10079C56C(a1);
        if ((v6 & 1) != 0)
        {
          v7 = (uint64_t *)(v4[7] + 16 * v5);
          v9 = *v7;
          v8 = v7[1];
          swift_endAccess(v24);
          swift_bridgeObjectRetain();
          goto LABEL_21;
        }
      }
      swift_endAccess(v24);
      if (qword_10119BBF8 != -1)
        swift_once(&qword_10119BBF8, sub_100201988);
      v10 = off_1011A71A0;
      v11 = *((_QWORD *)off_1011A71A0 + 2);
      if (!v11)
        break;
      swift_bridgeObjectRetain();
      v12 = 0;
      v22 = a1;
      while (v12 < v10[2])
      {
        v13 = &v10[3 * v12 + 4];
        v14 = *v13;
        if (a1 >= *v13)
        {
          v16 = v13[1];
          v15 = (void *)v13[2];
          swift_bridgeObjectRetain();
          while (1)
          {
            v17 = __OFSUB__(a1, v14);
            a1 -= v14;
            if (v17)
              break;
            v18._countAndFlagsBits = v16;
            v18._object = v15;
            String.append(_:)(v18);
            if (a1 < v14)
            {
              swift_bridgeObjectRelease(v15);
              goto LABEL_11;
            }
          }
          __break(1u);
          break;
        }
LABEL_11:
        if (++v12 == v11)
        {
          swift_bridgeObjectRelease(v10);
          v9 = 0;
          v8 = 0xE000000000000000;
          a1 = v22;
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_25:
      swift_once(&qword_10119BBF0, sub_100201964);
    }
    v9 = 0;
    v8 = 0xE000000000000000;
LABEL_20:
    swift_beginAccess(&off_1011A7198, v24, 33, 0);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_1011A7198);
    v23 = off_1011A7198;
    off_1011A7198 = (_UNKNOWN *)0x8000000000000000;
    sub_1005ECD3C(0, 0xE000000000000000, a1, isUniquelyReferenced_nonNull_native);
    v20 = off_1011A7198;
    off_1011A7198 = v23;
    swift_bridgeObjectRelease(v20);
    swift_endAccess(v24);
LABEL_21:
    v24[0] = v9;
    v24[1] = v8;
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = 46;
    v21._object = (void *)0xE100000000000000;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(v8);
    return v24[0];
  }
  return result;
}

uint64_t sub_1000A3930(uint64_t a1)
{
  uint64_t v1;

  return sub_10009A904(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000A393C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10119F374);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100084C90(a1, v4, v5, v6);
}

uint64_t sub_1000A39AC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10119F3B4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  v2 = (_QWORD *)swift_task_alloc(dword_10119F3C4);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return sub_100085BD0();
}

uint64_t sub_1000A3A14(uint64_t a1)
{
  uint64_t v1;

  return sub_100086AA0(a1, v1);
}

uint64_t sub_1000A3A20()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10119F40C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return sub_100088220();
}

uint64_t sub_1000A3A90()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A3AB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10119F45C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10009B648(a1, v4, v5, v6);
}

unint64_t sub_1000A3B24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C6880;
  if (!qword_1011C6880)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011ACC20);
    sub_100048748((unint64_t *)&unk_1011D0D10, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6880);
  }
  return result;
}

uint64_t sub_1000A3BA4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

unint64_t sub_1000A3BD4()
{
  unint64_t result;

  result = qword_10119F4B0;
  if (!qword_10119F4B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.ContentFilterOption, &type metadata for Library.ContentFilterOption);
    atomic_store(result, (unint64_t *)&qword_10119F4B0);
  }
  return result;
}

uint64_t sub_1000A3C20()
{
  return 16;
}

__n128 sub_1000A3C2C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PushedViewStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t _s7ContextVwxx(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for PushedViewStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for PushedViewStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for PushedViewStyle()
{
  return &type metadata for PushedViewStyle;
}

uint64_t getEnumTagSinglePayload for NavigationDestinationItem.OverrideDestinationTab(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
  {
    v6 = *a1;
    v7 = v6 >= 6;
    v8 = v6 - 6;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 6;
    if (a2 + 6 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1000A3D3C + 4 * byte_100EA89A2[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for NavigationDestinationItem.OverrideDestinationTab(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 6;
  if (a3 + 6 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFA)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1000A3DE4 + 4 * byte_100EA89AC[v5]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1000A3E18 + 4 * byte_100EA89A7[v5]))();
}

uint64_t sub_1000A3E18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000A3E20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000A3E28);
  return result;
}

uint64_t sub_1000A3E34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000A3E3CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1000A3E40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000A3E48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000A3E54(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 6)
    return v1 - 5;
  else
    return 0;
}

_BYTE *sub_1000A3E68(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 5;
  return result;
}

ValueMetadata *type metadata accessor for NavigationDestinationItem.OverrideDestinationTab()
{
  return &type metadata for NavigationDestinationItem.OverrideDestinationTab;
}

unint64_t sub_1000A3E8C()
{
  unint64_t result;

  result = qword_10119F4C8;
  if (!qword_10119F4C8)
  {
    result = swift_getWitnessTable(&unk_100EA90F8, &type metadata for NavigationDestinationItem.OverrideDestinationTab);
    atomic_store(result, (unint64_t *)&qword_10119F4C8);
  }
  return result;
}

uint64_t sub_1000A3ED0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F94978, 1);
}

uint64_t type metadata accessor for PushPendingNavigationItemModifier(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_10119F550, (uint64_t)&nominal type descriptor for PushPendingNavigationItemModifier);
}

uint64_t sub_1000A3F04(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v5);
  }
  else
  {
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    v9 = *((_BYTE *)a2 + 24);
    swift_retain(v5);
    sub_10006B3F8(v8, v9);
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v9;
    v10 = a2[4];
    v11 = a2[5];
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    v12 = a3[7];
    v13 = (uint64_t *)(a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    swift_retain(v10);
    v15 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      v18 = *v14;
      *v13 = *v14;
      swift_retain(v18);
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
    v19 = a3[8];
    v20 = a3[9];
    v21 = (_QWORD *)(a1 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = *v22;
    v24 = v22[1];
    *v21 = v23;
    v21[1] = v24;
    v25 = (_QWORD *)(a1 + v20);
    v26 = (uint64_t *)((char *)a2 + v20);
    v28 = *v26;
    v27 = v26[1];
    *v25 = v28;
    v25[1] = v27;
    v29 = a3[10];
    v30 = a3[11];
    v31 = (_QWORD *)(a1 + v29);
    v32 = (uint64_t *)((char *)a2 + v29);
    v34 = *v32;
    v33 = v32[1];
    *v31 = v34;
    v31[1] = v33;
    v35 = (_QWORD *)(a1 + v30);
    v36 = (uint64_t *)((char *)a2 + v30);
    v38 = *v36;
    v37 = v36[1];
    *v35 = v38;
    v35[1] = v37;
    v39 = a3[12];
    v40 = a1 + v39;
    v41 = (uint64_t)a2 + v39;
    v42 = *(void **)v41;
    v43 = *(_BYTE *)(v41 + 8);
    swift_retain(v23);
    swift_retain(v28);
    swift_retain(v34);
    swift_retain(v38);
    sub_1000A4100(v42, v43);
    *(_QWORD *)v40 = v42;
    *(_BYTE *)(v40 + 8) = v43;
    v44 = a3[13];
    v45 = a1 + v44;
    v46 = (uint64_t)a2 + v44;
    v47 = *(_QWORD *)v46;
    v48 = *(_QWORD *)(v46 + 8);
    LOBYTE(v38) = *(_BYTE *)(v46 + 16);
    sub_1000A410C(*(_QWORD *)v46, v48, v38);
    *(_QWORD *)v45 = v47;
    *(_QWORD *)(v45 + 8) = v48;
    *(_BYTE *)(v45 + 16) = v38;
    v49 = a3[14];
    v50 = a1 + v49;
    v51 = (uint64_t)a2 + v49;
    v52 = *(_QWORD *)v51;
    v53 = *(_QWORD *)(v51 + 8);
    LOBYTE(v47) = *(_BYTE *)(v51 + 16);
    sub_1000A411C(*(_QWORD *)v51, v53, v47);
    *(_QWORD *)v50 = v52;
    *(_QWORD *)(v50 + 8) = v53;
    *(_BYTE *)(v50 + 16) = v47;
  }
  return a1;
}

id sub_1000A4100(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain(a1);
}

uint64_t sub_1000A410C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain(a2);
  else
    return swift_retain(a1);
}

double sub_1000A411C(uint64_t result, unint64_t a2, char a3)
{
  double v3;

  if ((a3 & 1) != 0)
    sub_1000A0168(result, a2);
  else
    *(_QWORD *)&v3 = swift_retain(result).n128_u64[0];
  return v3;
}

double sub_1000A4128(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)a1);
  sub_10006B604(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 32));
  v4 = (_QWORD *)(a1 + a2[7]);
  v5 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  swift_release(*(_QWORD *)(a1 + a2[8]));
  swift_release(*(_QWORD *)(a1 + a2[9]));
  swift_release(*(_QWORD *)(a1 + a2[10]));
  swift_release(*(_QWORD *)(a1 + a2[11]));
  sub_1000A4224(*(id *)(a1 + a2[12]), *(_BYTE *)(a1 + a2[12] + 8));
  sub_1000A4230(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 16));
  return sub_1000A4240(*(_QWORD *)(a1 + a2[14]), *(_QWORD *)(a1 + a2[14] + 8), *(_BYTE *)(a1 + a2[14] + 16));
}

void sub_1000A4224(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release(a1);
}

uint64_t sub_1000A4230(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(a2);
  else
    return swift_release(a1);
}

double sub_1000A4240(uint64_t result, unint64_t a2, char a3)
{
  double v3;

  if ((a3 & 1) != 0)
    sub_1000822B4(result, a2);
  else
    *(_QWORD *)&v3 = swift_release(result).n128_u64[0];
  return v3;
}

uint64_t sub_1000A424C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v6 = *a2;
  v7 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = a2[2];
  v9 = *((_BYTE *)a2 + 24);
  swift_retain(v6);
  sub_10006B3F8(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = a2[4];
  v11 = a2[5];
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  v12 = a3[7];
  v13 = (uint64_t *)(a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  swift_retain(v10);
  v15 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = 1;
  }
  else
  {
    v18 = *v14;
    *v13 = *v14;
    swift_retain(v18);
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v17);
  v19 = a3[8];
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (uint64_t *)((char *)a2 + v19);
  v23 = *v22;
  v24 = v22[1];
  *v21 = v23;
  v21[1] = v24;
  v25 = (_QWORD *)(a1 + v20);
  v26 = (uint64_t *)((char *)a2 + v20);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  v29 = a3[10];
  v30 = a3[11];
  v31 = (_QWORD *)(a1 + v29);
  v32 = (uint64_t *)((char *)a2 + v29);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  v35 = (_QWORD *)(a1 + v30);
  v36 = (uint64_t *)((char *)a2 + v30);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  v39 = a3[12];
  v40 = a1 + v39;
  v41 = (uint64_t)a2 + v39;
  v42 = *(void **)v41;
  v43 = *(_BYTE *)(v41 + 8);
  swift_retain(v23);
  swift_retain(v28);
  swift_retain(v34);
  swift_retain(v38);
  sub_1000A4100(v42, v43);
  *(_QWORD *)v40 = v42;
  *(_BYTE *)(v40 + 8) = v43;
  v44 = a3[13];
  v45 = a1 + v44;
  v46 = (uint64_t)a2 + v44;
  v47 = *(_QWORD *)v46;
  v48 = *(_QWORD *)(v46 + 8);
  LOBYTE(v38) = *(_BYTE *)(v46 + 16);
  sub_1000A410C(*(_QWORD *)v46, v48, v38);
  *(_QWORD *)v45 = v47;
  *(_QWORD *)(v45 + 8) = v48;
  *(_BYTE *)(v45 + 16) = v38;
  v49 = a3[14];
  v50 = a1 + v49;
  v51 = (uint64_t)a2 + v49;
  v52 = *(_QWORD *)v51;
  v53 = *(_QWORD *)(v51 + 8);
  LOBYTE(v47) = *(_BYTE *)(v51 + 16);
  sub_1000A411C(*(_QWORD *)v51, v53, v47);
  *(_QWORD *)v50 = v52;
  *(_QWORD *)(v50 + 8) = v53;
  *(_BYTE *)(v50 + 16) = v47;
  return a1;
}

uint64_t *sub_1000A4420(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  swift_retain(v7);
  swift_release(v6);
  a1[1] = a2[1];
  v8 = a2[2];
  v9 = *((_BYTE *)a2 + 24);
  sub_10006B3F8(v8, v9);
  v10 = a1[2];
  v11 = *((_BYTE *)a1 + 24);
  a1[2] = v8;
  *((_BYTE *)a1 + 24) = v9;
  sub_10006B604(v10, v11);
  v12 = a1[4];
  v13 = a2[4];
  a1[4] = v13;
  swift_retain(v13);
  swift_release(v12);
  a1[5] = a2[5];
  if (a1 != a2)
  {
    v14 = a3[7];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    sub_10004FF60((uint64_t)a1 + v14, &qword_10119F4E0);
    v17 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      v20 = *v16;
      *v15 = *v16;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
  }
  v21 = a3[8];
  v22 = (uint64_t)a1 + v21;
  v23 = (uint64_t)a2 + v21;
  v24 = *(uint64_t *)((char *)a1 + v21);
  v25 = *(uint64_t *)((char *)a2 + v21);
  *(uint64_t *)((char *)a1 + v21) = v25;
  swift_retain(v25);
  swift_release(v24);
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  v26 = a3[9];
  v27 = (uint64_t)a1 + v26;
  v28 = (uint64_t)a2 + v26;
  v29 = *(uint64_t *)((char *)a1 + v26);
  v30 = *(uint64_t *)((char *)a2 + v26);
  *(uint64_t *)((char *)a1 + v26) = v30;
  swift_retain(v30);
  swift_release(v29);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  v31 = a3[10];
  v32 = (uint64_t)a1 + v31;
  v33 = (uint64_t)a2 + v31;
  v34 = *(uint64_t *)((char *)a1 + v31);
  v35 = *(uint64_t *)((char *)a2 + v31);
  *(uint64_t *)((char *)a1 + v31) = v35;
  swift_retain(v35);
  swift_release(v34);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  v36 = a3[11];
  v37 = (uint64_t)a1 + v36;
  v38 = (uint64_t)a2 + v36;
  v39 = *(uint64_t *)((char *)a1 + v36);
  v40 = *(uint64_t *)((char *)a2 + v36);
  *(uint64_t *)((char *)a1 + v36) = v40;
  swift_retain(v40);
  swift_release(v39);
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  v41 = a3[12];
  v42 = (uint64_t)a1 + v41;
  v43 = (uint64_t)a2 + v41;
  v44 = *(id *)v43;
  LOBYTE(v37) = *(_BYTE *)(v43 + 8);
  sub_1000A4100(*(id *)v43, v37);
  v45 = *(void **)v42;
  v46 = *(_BYTE *)(v42 + 8);
  *(_QWORD *)v42 = v44;
  *(_BYTE *)(v42 + 8) = v37;
  sub_1000A4224(v45, v46);
  v47 = a3[13];
  v48 = (uint64_t)a1 + v47;
  v49 = (uint64_t)a2 + v47;
  v50 = *(_QWORD *)v49;
  v51 = *(_QWORD *)(v49 + 8);
  LOBYTE(v42) = *(_BYTE *)(v49 + 16);
  sub_1000A410C(*(_QWORD *)v49, v51, v42);
  v52 = *(_QWORD *)v48;
  v53 = *(_QWORD *)(v48 + 8);
  v54 = *(_BYTE *)(v48 + 16);
  *(_QWORD *)v48 = v50;
  *(_QWORD *)(v48 + 8) = v51;
  *(_BYTE *)(v48 + 16) = v42;
  sub_1000A4230(v52, v53, v54);
  v55 = a3[14];
  v56 = (uint64_t)a1 + v55;
  v57 = (uint64_t)a2 + v55;
  v58 = *(_QWORD *)v57;
  v59 = *(_QWORD *)(v57 + 8);
  LOBYTE(v50) = *(_BYTE *)(v57 + 16);
  sub_1000A411C(*(_QWORD *)v57, v59, v50);
  v60 = *(_QWORD *)v56;
  v61 = *(_QWORD *)(v56 + 8);
  v62 = *(_BYTE *)(v56 + 16);
  *(_QWORD *)v56 = v58;
  *(_QWORD *)(v56 + 8) = v59;
  *(_BYTE *)(v56 + 16) = v50;
  sub_1000A4240(v60, v61, v62);
  return a1;
}

uint64_t sub_1000A46A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v12 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[12];
  v14 = a3[13];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v19 = a3[14];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  return a1;
}

uint64_t *sub_1000A47F0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  void *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  char v51;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = *((_BYTE *)a2 + 24);
  v8 = a1[2];
  v9 = *((_BYTE *)a1 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *((_BYTE *)a1 + 24) = v7;
  sub_10006B604(v8, v9);
  v10 = a1[4];
  a1[4] = a2[4];
  swift_release(v10);
  a1[5] = a2[5];
  if (a1 != a2)
  {
    v11 = a3[7];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_10004FF60((uint64_t)a1 + v11, &qword_10119F4E0);
    v14 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  v16 = a3[8];
  v17 = (uint64_t)a1 + v16;
  v18 = (uint64_t)a2 + v16;
  v19 = *(uint64_t *)((char *)a1 + v16);
  *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
  swift_release(v19);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  v20 = a3[9];
  v21 = (uint64_t)a1 + v20;
  v22 = (uint64_t)a2 + v20;
  v23 = *(uint64_t *)((char *)a1 + v20);
  *(uint64_t *)((char *)a1 + v20) = *(uint64_t *)((char *)a2 + v20);
  swift_release(v23);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  v24 = a3[10];
  v25 = (uint64_t)a1 + v24;
  v26 = (uint64_t)a2 + v24;
  v27 = *(uint64_t *)((char *)a1 + v24);
  *(uint64_t *)((char *)a1 + v24) = *(uint64_t *)((char *)a2 + v24);
  swift_release(v27);
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  v28 = a3[11];
  v29 = (uint64_t)a1 + v28;
  v30 = (uint64_t)a2 + v28;
  v31 = *(uint64_t *)((char *)a1 + v28);
  *(uint64_t *)((char *)a1 + v28) = *(uint64_t *)((char *)a2 + v28);
  swift_release(v31);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  v32 = a3[12];
  v33 = (uint64_t)a1 + v32;
  v34 = (uint64_t *)((char *)a2 + v32);
  v35 = *v34;
  LOBYTE(v34) = *((_BYTE *)v34 + 8);
  v36 = *(void **)v33;
  v37 = *(_BYTE *)(v33 + 8);
  *(_QWORD *)v33 = v35;
  *(_BYTE *)(v33 + 8) = (_BYTE)v34;
  sub_1000A4224(v36, v37);
  v38 = a3[13];
  v39 = (uint64_t)a1 + v38;
  v40 = (uint64_t)a2 + v38;
  v41 = *(_BYTE *)(v40 + 16);
  v42 = *(_QWORD *)v39;
  v43 = *(_QWORD *)(v39 + 8);
  v44 = *(_BYTE *)(v39 + 16);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_BYTE *)(v39 + 16) = v41;
  sub_1000A4230(v42, v43, v44);
  v45 = a3[14];
  v46 = (uint64_t)a1 + v45;
  v47 = (uint64_t)a2 + v45;
  v48 = *(_BYTE *)(v47 + 16);
  v49 = *(_QWORD *)v46;
  v50 = *(_QWORD *)(v46 + 8);
  v51 = *(_BYTE *)(v46 + 16);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_BYTE *)(v46 + 16) = v48;
  sub_1000A4240(v49, v50, v51);
  return a1;
}

uint64_t sub_1000A4A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A4A10);
}

uint64_t sub_1000A4A10(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_100007E8C(&qword_10119F4F0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v9);
  }
}

uint64_t sub_1000A4A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A4AA8);
}

char *sub_1000A4AA8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = sub_100007E8C(&qword_10119F4F0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_1000A4B20(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_100EA89F8;
  v4[1] = "\t";
  v4[2] = &unk_100EA89F8;
  sub_1000A4BBC(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100EA89F8;
    v4[5] = &unk_100EA89F8;
    v4[6] = &unk_100EA89F8;
    v4[7] = &unk_100EA89F8;
    v4[8] = "\t";
    v4[9] = &unk_100EA9250;
    v4[10] = &unk_100EA9250;
    swift_initStructMetadata(a1, 256, 11, v4, a1 + 16);
  }
}

void sub_1000A4BBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10119F560)
  {
    v2 = type metadata accessor for OpenURLAction(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10119F560);
  }
}

uint64_t destroy for NavigationDestinationPushing(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[2]);
  swift_release(a1[4]);
  swift_release(a1[6]);
  return swift_release(a1[8]);
}

uint64_t *initializeWithCopy for NavigationDestinationPushing(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2[2];
  v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  v8 = a2[4];
  v7 = a2[5];
  a1[4] = v8;
  a1[5] = v7;
  v10 = a2[6];
  v9 = a2[7];
  a1[6] = v10;
  a1[7] = v9;
  v12 = a2[8];
  v11 = a2[9];
  a1[8] = v12;
  a1[9] = v11;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v8);
  swift_retain(v10);
  swift_retain(v12);
  return a1;
}

uint64_t *assignWithCopy for NavigationDestinationPushing(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  v6 = a1[2];
  v7 = a2[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v6);
  a1[3] = a2[3];
  v8 = a1[4];
  v9 = a2[4];
  a1[4] = v9;
  swift_retain(v9);
  swift_release(v8);
  a1[5] = a2[5];
  v10 = a1[6];
  v11 = a2[6];
  a1[6] = v11;
  swift_retain(v11);
  swift_release(v10);
  a1[7] = a2[7];
  v12 = a1[8];
  v13 = a2[8];
  a1[8] = v13;
  swift_retain(v13);
  swift_release(v12);
  a1[9] = a2[9];
  return a1;
}

__n128 initializeWithTake for NavigationDestinationPushing(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t *assignWithTake for NavigationDestinationPushing(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a1[2];
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_release(v5);
  v7 = a1[4];
  v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  swift_release(v7);
  v9 = a1[6];
  v10 = a2[6];
  a1[5] = a2[5];
  a1[6] = v10;
  swift_release(v9);
  v11 = a1[8];
  v12 = a2[8];
  a1[7] = a2[7];
  a1[8] = v12;
  swift_release(v11);
  a1[9] = a2[9];
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationDestinationPushing(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NavigationDestinationPushing(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationDestinationPushing()
{
  return &type metadata for NavigationDestinationPushing;
}

uint64_t sub_1000A4F04()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_10119F4D0);
  v1[1] = &type metadata for String;
  v1[2] = sub_100049F28(&qword_10119F4D8, &qword_10119F4D0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v1[3] = sub_100055B68();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
}

uint64_t sub_1000A4F7C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F949C8, 1);
}

uint64_t sub_1000A4F8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F949A0, 1);
}

uint64_t sub_1000A4FA0()
{
  type metadata accessor for PushPendingNavigationItemModifier(0);
  return sub_100082654();
}

uint64_t sub_1000A4FE0()
{
  return 8;
}

_QWORD *sub_1000A4FEC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1000A4FFC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for PushPendingNavigationItemModifier(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  sub_10006B604(*(_QWORD *)(v6 + 16), *(_BYTE *)(v6 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  v7 = (_QWORD *)(v0 + v4 + v1[7]);
  v8 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  swift_release(*(_QWORD *)(v6 + v1[8]));
  swift_release(*(_QWORD *)(v6 + v1[9]));
  swift_release(*(_QWORD *)(v6 + v1[10]));
  swift_release(*(_QWORD *)(v6 + v1[11]));
  sub_1000A4224(*(id *)(v6 + v1[12]), *(_BYTE *)(v6 + v1[12] + 8));
  sub_1000A4230(*(_QWORD *)(v6 + v1[13]), *(_QWORD *)(v6 + v1[13] + 8), *(_BYTE *)(v6 + v1[13] + 16));
  sub_1000A4240(*(_QWORD *)(v6 + v1[14]), *(_QWORD *)(v6 + v1[14] + 8), *(_BYTE *)(v6 + v1[14] + 16));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

unint64_t sub_1000A513C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F5D0;
  if (!qword_10119F5D0)
  {
    v1 = sub_100044B54(&qword_10119F5B8);
    sub_100049F28(&qword_10119F5D8, &qword_10119F5C8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F5D0);
  }
  return result;
}

unint64_t sub_1000A51C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F5E0;
  if (!qword_10119F5E0)
  {
    v1 = sub_100044B54(&qword_1011A3CF0);
    sub_100048748(&qword_10119EE08, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A40);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, &qword_10119F5E0);
  }
  return result;
}

uint64_t sub_1000A523C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = (int *)type metadata accessor for PushPendingNavigationItemModifier(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  sub_10006B604(*(_QWORD *)(v6 + 16), *(_BYTE *)(v6 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  v7 = (_QWORD *)(v0 + v4 + v1[7]);
  v8 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v6 + v1[8]));
  swift_release(*(_QWORD *)(v6 + v1[9]));
  swift_release(*(_QWORD *)(v6 + v1[10]));
  swift_release(*(_QWORD *)(v6 + v1[11]));
  sub_1000A4224(*(id *)(v6 + v1[12]), *(_BYTE *)(v6 + v1[12] + 8));
  sub_1000A4230(*(_QWORD *)(v6 + v1[13]), *(_QWORD *)(v6 + v1[13] + 8), *(_BYTE *)(v6 + v1[13] + 16));
  sub_1000A4240(*(_QWORD *)(v6 + v1[14]), *(_QWORD *)(v6 + v1[14] + 8), *(_BYTE *)(v6 + v1[14] + 16));

  return swift_deallocObject(v0, v10 + 8, v3 | 7);
}

uint64_t sub_1000A5398(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for PushPendingNavigationItemModifier(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_10119F5EC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_1000832B0(a1, v6, v7, v8, v9);
}

uint64_t sub_1000A543C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v15 = *(void **)(a1 + 8);
  v16 = *(void **)a1;
  v13 = *(void **)(a1 + 24);
  v14 = *(void **)(a1 + 16);
  v2 = *(void **)(a1 + 40);
  v12 = *(void **)(a1 + 32);
  v3 = *(void **)(a1 + 48);
  v4 = *(void **)(a1 + 56);
  v6 = *(void **)(a1 + 64);
  v5 = *(void **)(a1 + 72);
  v7 = *(void **)(a1 + 80);
  v8 = *(void **)(a1 + 88);
  v9 = *(void **)(a1 + 96);
  v10 = *(void **)(a1 + 104);

  return a1;
}

uint64_t sub_1000A5508(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100007E8C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A554C(uint64_t a1)
{
  destroy for JSSegue.Context(a1);
  return a1;
}

unint64_t sub_1000A5580()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F618;
  if (!qword_10119F618)
  {
    v1 = sub_100044B54(&qword_10119F600);
    sub_1000A55EC();
    sub_1000A5658();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F618);
  }
  return result;
}

unint64_t sub_1000A55EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F620;
  if (!qword_10119F620)
  {
    v1 = sub_100044B54(&qword_10119F628);
    sub_1000A0510();
    sub_1000A0A80();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F620);
  }
  return result;
}

unint64_t sub_1000A5658()
{
  unint64_t result;

  result = qword_1011D1200;
  if (!qword_1011D1200)
  {
    result = swift_getWitnessTable(&unk_100EC429C, &type metadata for StandardEnvironmentModifier);
    atomic_store(result, (unint64_t *)&qword_1011D1200);
  }
  return result;
}

unint64_t sub_1000A569C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A2190;
  if (!qword_1011A2190)
  {
    v1 = sub_10004A07C(255, &qword_1011A4630, UIScene_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1011A2190);
  }
  return result;
}

uint64_t sub_1000A56F4()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_10119F5B8);
  v1[1] = sub_100044B54(&qword_1011A3CF0);
  v1[2] = sub_1000A513C();
  v1[3] = sub_1000A51C0();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_1000A5764()
{
  _QWORD v1[6];

  v1[0] = sub_100044B54(&qword_10119F5F8);
  v1[1] = type metadata accessor for NavigationDestinationItem(255);
  v1[2] = sub_100044B54(&qword_10119F600);
  v1[3] = sub_100049F28(&qword_10119F608, &qword_10119F5F8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v1[4] = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
  v1[5] = sub_1000A5580();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>, 1);
}

uint64_t sub_1000A5840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TitledSection(0);
  v5 = type metadata accessor for MusicVideo(0);
  MusicLibrarySectionedRequest.init()(v4, v5, &protocol witness table for TitledSection, &protocol witness table for MusicVideo);
  v6 = sub_100049F28(&qword_10119F640, (uint64_t *)&unk_1011A3840, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v7 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v0, v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

unint64_t sub_1000A591C(unint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  int *v78;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v25 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v6 = a3;
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = v6[5];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(v3 + v10);
    v13 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
    v15 = *v12;
    *v11 = *v12;
    if (EnumCaseMultiPayload == 1)
    {
      v76 = v13;
      v77 = v3;
      v78 = v6;
      v16 = (int *)type metadata accessor for Library.Context(0);
      v17 = v16[5];
      v18 = (char *)v11 + v17;
      v19 = (char *)v12 + v17;
      v20 = type metadata accessor for Album(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v21 + 48);
      v23 = swift_retain(v15);
      if (v22(v19, 1, v20, v23))
      {
        v24 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v27 = v16[6];
      v28 = (char *)v11 + v27;
      v29 = (char *)v12 + v27;
      v30 = type metadata accessor for Artist(0);
      v31 = *(_QWORD *)(v30 - 8);
      v3 = v77;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v33 = v16[7];
      v34 = (char *)v11 + v33;
      v35 = (char *)v12 + v33;
      v36 = type metadata accessor for Composer(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v16[8];
      v40 = (char *)v11 + v39;
      v41 = (char *)v12 + v39;
      v42 = type metadata accessor for Genre(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_100007E8C(&qword_10119ED08);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = v16[9];
      v46 = (char *)v11 + v45;
      v47 = (char *)v12 + v45;
      v48 = type metadata accessor for Playlist(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      v51 = v16[10];
      v52 = (char *)v11 + v51;
      v53 = (char *)v12 + v51;
      v54 = type metadata accessor for TVShow(0);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        v56 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      v57 = v16[11];
      v58 = (char *)v11 + v57;
      v59 = (char *)v12 + v57;
      v60 = type metadata accessor for TVSeason(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
      {
        v62 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      v6 = v78;
      *((_BYTE *)v11 + v16[12]) = *((_BYTE *)v12 + v16[12]);
      *((_BYTE *)v11 + v16[13]) = *((_BYTE *)v12 + v16[13]);
      *((_BYTE *)v11 + v16[14]) = *((_BYTE *)v12 + v16[14]);
      v63 = v16[15];
      v64 = (_QWORD *)((char *)v11 + v63);
      v65 = (_QWORD *)((char *)v12 + v63);
      v66 = v65[1];
      *v64 = *v65;
      v64[1] = v66;
      *(_QWORD *)((char *)v11 + v16[16]) = *(_QWORD *)((char *)v12 + v16[16]);
      *((_BYTE *)v11 + v16[17]) = *((_BYTE *)v12 + v16[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = 1;
      v13 = v76;
    }
    else
    {
      swift_retain(v15);
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v26);
    v67 = v6[6];
    v68 = (uint64_t *)(a1 + v67);
    v69 = (uint64_t *)(v3 + v67);
    v70 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v69, v70) == 1)
    {
      v71 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v68, v69, v71);
      v72 = 1;
    }
    else
    {
      v73 = *v69;
      *v68 = *v69;
      swift_retain(v73);
      v72 = 0;
    }
    swift_storeEnumTagMultiPayload(v68, v70, v72);
    v74 = v6[7];
    v25 = *(_QWORD *)(v3 + v74);
    *(_QWORD *)(a1 + v74) = v25;
  }
  swift_retain(v25);
  return a1;
}

uint64_t KeyValueObservationTrigger.keyPath.getter(uint64_t a1, uint64_t a2)
{
  return swift_retain(a2);
}

double sub_1000A5EB8(uint64_t *a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  int *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  double result;

  sub_1000A6174(*a1, a1[1]);
  v4 = (uint64_t *)((char *)a1 + a2[5]);
  v5 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
  swift_release(*v4);
  if (EnumCaseMultiPayload == 1)
  {
    v7 = (int *)type metadata accessor for Library.Context(0);
    v8 = (char *)v4 + v7[5];
    v9 = type metadata accessor for Album(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = (char *)v4 + v7[6];
    v12 = type metadata accessor for Artist(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    v14 = (char *)v4 + v7[7];
    v15 = type metadata accessor for Composer(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    v17 = (char *)v4 + v7[8];
    v18 = type metadata accessor for Genre(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    v20 = (char *)v4 + v7[9];
    v21 = type metadata accessor for Playlist(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
    v23 = (char *)v4 + v7[10];
    v24 = type metadata accessor for TVShow(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
    v26 = (char *)v4 + v7[11];
    v27 = type metadata accessor for TVSeason(0);
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v7[15] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v7[16]));
  }
  v29 = (uint64_t *)((char *)a1 + a2[6]);
  v30 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
  {
    v31 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v29, v31);
  }
  else
  {
    swift_release(*v29);
  }
  *(_QWORD *)&result = swift_release(*(uint64_t *)((char *)a1 + a2[7])).n128_u64[0];
  return result;
}

uint64_t sub_1000A6174(uint64_t a1, uint64_t a2)
{
  return swift_release(a2);
}

uint64_t sub_1000A617C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  int *v76;
  uint64_t v77;

  v4 = a2;
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(v4 + v9);
  v12 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  v14 = *v11;
  *v10 = *v11;
  if (EnumCaseMultiPayload == 1)
  {
    v75 = v12;
    v76 = a3;
    v77 = v4;
    v15 = (int *)type metadata accessor for Library.Context(0);
    v16 = v15[5];
    v17 = (char *)v10 + v16;
    v18 = (char *)v11 + v16;
    v19 = type metadata accessor for Album(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48);
    v22 = swift_retain(v14);
    if (v21(v18, 1, v19, v22))
    {
      v23 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v25 = v15[6];
    v26 = (char *)v10 + v25;
    v27 = (char *)v11 + v25;
    v28 = type metadata accessor for Artist(0);
    v29 = *(_QWORD *)(v28 - 8);
    v4 = v77;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v31 = v15[7];
    v32 = (char *)v10 + v31;
    v33 = (char *)v11 + v31;
    v34 = type metadata accessor for Composer(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v37 = v15[8];
    v38 = (char *)v10 + v37;
    v39 = (char *)v11 + v37;
    v40 = type metadata accessor for Genre(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_100007E8C(&qword_10119ED08);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v43 = v15[9];
    v44 = (char *)v10 + v43;
    v45 = (char *)v11 + v43;
    v46 = type metadata accessor for Playlist(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v49 = v15[10];
    v50 = (char *)v10 + v49;
    v51 = (char *)v11 + v49;
    v52 = type metadata accessor for TVShow(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v55 = v15[11];
    v56 = (char *)v10 + v55;
    v57 = (char *)v11 + v55;
    v58 = type metadata accessor for TVSeason(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    a3 = v76;
    *((_BYTE *)v10 + v15[12]) = *((_BYTE *)v11 + v15[12]);
    *((_BYTE *)v10 + v15[13]) = *((_BYTE *)v11 + v15[13]);
    *((_BYTE *)v10 + v15[14]) = *((_BYTE *)v11 + v15[14]);
    v61 = v15[15];
    v62 = (_QWORD *)((char *)v10 + v61);
    v63 = (_QWORD *)((char *)v11 + v61);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    *(_QWORD *)((char *)v10 + v15[16]) = *(_QWORD *)((char *)v11 + v15[16]);
    *((_BYTE *)v10 + v15[17]) = *((_BYTE *)v11 + v15[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = 1;
    v12 = v75;
  }
  else
  {
    swift_retain(v14);
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v24);
  v65 = a3[6];
  v66 = (uint64_t *)(a1 + v65);
  v67 = (uint64_t *)(v4 + v65);
  v68 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v67, v68) == 1)
  {
    v69 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v66, v67, v69);
    v70 = 1;
  }
  else
  {
    v71 = *v67;
    *v66 = *v67;
    swift_retain(v71);
    v70 = 0;
  }
  swift_storeEnumTagMultiPayload(v66, v68, v70);
  v72 = a3[7];
  v73 = *(_QWORD *)(v4 + v72);
  *(_QWORD *)(a1 + v72) = v73;
  swift_retain(v73);
  return a1;
}

uint64_t sub_1000A66E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v76;
  uint64_t v77;
  int *v78;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_1000A6174(v9, v10);
  if (a1 != a2)
  {
    v11 = a3[5];
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    sub_10004FF60(a1 + v11, &qword_10119F030);
    v14 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v14);
    v16 = *v13;
    *v12 = *v13;
    if (EnumCaseMultiPayload == 1)
    {
      v77 = v14;
      v78 = a3;
      v76 = (int *)type metadata accessor for Library.Context(0);
      v17 = v76[5];
      v18 = (char *)v12 + v17;
      v19 = (char *)v13 + v17;
      v20 = type metadata accessor for Album(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v21 + 48);
      v23 = swift_retain(v16);
      if (v22(v19, 1, v20, v23))
      {
        v24 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v26 = v76[6];
      v27 = (char *)v12 + v26;
      v28 = (char *)v13 + v26;
      v29 = type metadata accessor for Artist(0);
      v30 = *(_QWORD *)(v29 - 8);
      v14 = v77;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v76[7];
      v33 = (char *)v12 + v32;
      v34 = (char *)v13 + v32;
      v35 = type metadata accessor for Composer(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v76[8];
      v39 = (char *)v12 + v38;
      v40 = (char *)v13 + v38;
      v41 = type metadata accessor for Genre(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_10119ED08);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v76[9];
      v45 = (char *)v12 + v44;
      v46 = (char *)v13 + v44;
      v47 = type metadata accessor for Playlist(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v76[10];
      v51 = (char *)v12 + v50;
      v52 = (char *)v13 + v50;
      v53 = type metadata accessor for TVShow(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v56 = v76[11];
      v57 = (char *)v12 + v56;
      v58 = (char *)v13 + v56;
      v59 = type metadata accessor for TVSeason(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        v61 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      a3 = v78;
      *((_BYTE *)v12 + v76[12]) = *((_BYTE *)v13 + v76[12]);
      *((_BYTE *)v12 + v76[13]) = *((_BYTE *)v13 + v76[13]);
      *((_BYTE *)v12 + v76[14]) = *((_BYTE *)v13 + v76[14]);
      v62 = v76[15];
      v63 = (_QWORD *)((char *)v12 + v62);
      v64 = (_QWORD *)((char *)v13 + v62);
      *v63 = *v64;
      v63[1] = v64[1];
      *(_QWORD *)((char *)v12 + v76[16]) = *(_QWORD *)((char *)v13 + v76[16]);
      *((_BYTE *)v12 + v76[17]) = *((_BYTE *)v13 + v76[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = 1;
    }
    else
    {
      swift_retain(v16);
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v25);
    v65 = a3[6];
    v66 = (uint64_t *)(a1 + v65);
    v67 = (uint64_t *)(a2 + v65);
    sub_10004FF60(a1 + v65, (uint64_t *)&unk_1011C72D0);
    v68 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v67, v68) == 1)
    {
      v69 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v66, v67, v69);
      v70 = 1;
    }
    else
    {
      v71 = *v67;
      *v66 = *v67;
      swift_retain(v71);
      v70 = 0;
    }
    swift_storeEnumTagMultiPayload(v66, v68, v70);
  }
  v72 = a3[7];
  v73 = *(_QWORD *)(a2 + v72);
  v74 = *(_QWORD *)(a1 + v72);
  *(_QWORD *)(a1 + v72) = v73;
  swift_retain(v73);
  swift_release(v74);
  return a1;
}

uint64_t sub_1000A6C9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v59 = v9;
    *v7 = *v8;
    v10 = (int *)type metadata accessor for Library.Context(0);
    v11 = v10[5];
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = type metadata accessor for Album(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = v10[6];
    v18 = (char *)v7 + v17;
    v19 = (char *)v8 + v17;
    v20 = type metadata accessor for Artist(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = v10[7];
    v24 = (char *)v7 + v23;
    v25 = (char *)v8 + v23;
    v26 = type metadata accessor for Composer(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = v10[8];
    v30 = (char *)v7 + v29;
    v31 = (char *)v8 + v29;
    v32 = type metadata accessor for Genre(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C(&qword_10119ED08);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v10[9];
    v36 = (char *)v7 + v35;
    v37 = (char *)v8 + v35;
    v38 = type metadata accessor for Playlist(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v10[10];
    v42 = (char *)v7 + v41;
    v43 = (char *)v8 + v41;
    v44 = type metadata accessor for TVShow(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v10[11];
    v48 = (char *)v7 + v47;
    v49 = (char *)v8 + v47;
    v50 = type metadata accessor for TVSeason(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    *((_BYTE *)v7 + v10[12]) = *((_BYTE *)v8 + v10[12]);
    *((_BYTE *)v7 + v10[13]) = *((_BYTE *)v8 + v10[13]);
    *((_BYTE *)v7 + v10[14]) = *((_BYTE *)v8 + v10[14]);
    *(_OWORD *)((char *)v7 + v10[15]) = *(_OWORD *)((char *)v8 + v10[15]);
    *(_QWORD *)((char *)v7 + v10[16]) = *(_QWORD *)((char *)v8 + v10[16]);
    *((_BYTE *)v7 + v10[17]) = *((_BYTE *)v8 + v10[17]);
    swift_storeEnumTagMultiPayload(v7, v59, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v53 = a3[6];
  v54 = (void *)(a1 + v53);
  v55 = (const void *)(a2 + v53);
  v56 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v55, v56) == 1)
  {
    v57 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v54, v55, v57);
    swift_storeEnumTagMultiPayload(v54, v56, 1);
  }
  else
  {
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1000A71D4(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1000A6174(v7, v8);
  if (a1 != a2)
  {
    v9 = a3[5];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    sub_10004FF60(a1 + v9, &qword_10119F030);
    v12 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v64 = v12;
      *v10 = *v11;
      v13 = (int *)type metadata accessor for Library.Context(0);
      v14 = v13[5];
      v15 = (char *)v10 + v14;
      v16 = (char *)v11 + v14;
      v17 = type metadata accessor for Album(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v20 = v13[6];
      v21 = (char *)v10 + v20;
      v22 = (char *)v11 + v20;
      v23 = type metadata accessor for Artist(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v26 = v13[7];
      v27 = (char *)v10 + v26;
      v28 = (char *)v11 + v26;
      v29 = type metadata accessor for Composer(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v13[8];
      v33 = (char *)v10 + v32;
      v34 = (char *)v11 + v32;
      v35 = type metadata accessor for Genre(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C(&qword_10119ED08);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v13[9];
      v39 = (char *)v10 + v38;
      v40 = (char *)v11 + v38;
      v41 = type metadata accessor for Playlist(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v13[10];
      v45 = (char *)v10 + v44;
      v46 = (char *)v11 + v44;
      v47 = type metadata accessor for TVShow(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v13[11];
      v51 = (char *)v10 + v50;
      v52 = (char *)v11 + v50;
      v53 = type metadata accessor for TVSeason(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      *((_BYTE *)v10 + v13[12]) = *((_BYTE *)v11 + v13[12]);
      *((_BYTE *)v10 + v13[13]) = *((_BYTE *)v11 + v13[13]);
      *((_BYTE *)v10 + v13[14]) = *((_BYTE *)v11 + v13[14]);
      *(_OWORD *)((char *)v10 + v13[15]) = *(_OWORD *)((char *)v11 + v13[15]);
      *(_QWORD *)((char *)v10 + v13[16]) = *(_QWORD *)((char *)v11 + v13[16]);
      *((_BYTE *)v10 + v13[17]) = *((_BYTE *)v11 + v13[17]);
      swift_storeEnumTagMultiPayload(v10, v64, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    v56 = a3[6];
    v57 = (void *)(a1 + v56);
    v58 = (const void *)(a2 + v56);
    sub_10004FF60(a1 + v56, (uint64_t *)&unk_1011C72D0);
    v59 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v58, v59) == 1)
    {
      v60 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v57, v58, v60);
      swift_storeEnumTagMultiPayload(v57, v59, 1);
    }
    else
    {
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
  }
  v61 = a3[7];
  v62 = *(_QWORD *)(a1 + v61);
  *(_QWORD *)(a1 + v61) = *(_QWORD *)(a2 + v61);
  swift_release(v62);
  return a1;
}

uint64_t sub_1000A774C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A7758);
}

uint64_t sub_1000A7758(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = sub_100007E8C(&qword_10119EE98);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[7]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t sub_1000A7804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A7810);
}

uint64_t sub_1000A7810(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = sub_100007E8C(&qword_10119EE98);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_100007E8C((uint64_t *)&unk_1011C72A0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
  return result;
}

uint64_t _s15MusicVideosViewVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_10119F6A0;
  if (!qword_10119F6A0)
    return swift_getSingletonMetadata(a1, &_s15MusicVideosViewVMn);
  return result;
}

void sub_1000A78F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_100EA93C8;
  sub_1000A79B0(319, (unint64_t *)&qword_10119F6B0, type metadata accessor for Library.Context);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000A79B0(319, (unint64_t *)&qword_10119F6B8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

void sub_1000A79B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Environment.Content(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1000A79FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F94A18, 1);
}

uint64_t sub_1000A7A0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t (**v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v97;
  int v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;

  v2 = v1;
  v121 = a1;
  v3 = type metadata accessor for ToolbarItemPlacement(0);
  v119 = *(_QWORD *)(v3 - 8);
  v120 = v3;
  v4 = __chkstk_darwin(v3);
  v118 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v117 = (char *)&v97 - v6;
  v114 = sub_100007E8C(&qword_10119F6F0);
  __chkstk_darwin(v114);
  v113 = (uint64_t)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_100007E8C(&qword_10119F6F8);
  __chkstk_darwin(v112);
  v111 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for Library.Context(0);
  v9 = __chkstk_darwin(v128);
  v105 = (uint64_t)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v106 = (uint64_t)&v97 - v12;
  __chkstk_darwin(v11);
  v127 = (uint64_t)&v97 - v13;
  v122 = _s15MusicVideosViewVMa(0);
  v102 = *(_QWORD *)(v122 - 8);
  v103 = *(_QWORD *)(v102 + 64);
  __chkstk_darwin(v122);
  v101 = (uint64_t)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3880);
  v16 = __chkstk_darwin(v15);
  v115 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v99 = (uint64_t)&v97 - v18;
  v19 = (int *)sub_100007E8C(&qword_10119F700);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v104 = (uint64_t)&v97 - v23;
  v24 = sub_100007E8C(&qword_10119F708);
  v25 = __chkstk_darwin(v24);
  v107 = (char *)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v108 = (uint64_t)&v97 - v27;
  v110 = sub_100007E8C(&qword_10119F710);
  __chkstk_darwin(v110);
  v109 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_10119F718);
  __chkstk_darwin(v29);
  v116 = (uint64_t)&v97 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(_QWORD *)v1;
  v31 = *(_QWORD *)(v1 + 8);
  v33 = *(unsigned __int8 *)(v1 + 16);
  v34 = sub_100007E8C(&qword_10119F720);
  v35 = sub_100049F28(&qword_10119F728, &qword_10119F720, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v123 = v35;
  v124 = v34;
  v36 = StateObject.wrappedValue.getter(v32, v31, v33, v34, v35);
  dispatch thunk of MusicAutoupdatingResponse.response.getter();
  swift_release(v36);
  v37 = StateObject.wrappedValue.getter(v32, v31, v33, v34, v35);
  v98 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v37);
  v38 = swift_release(v37);
  v39 = *(int *)(v122 + 28);
  v40 = *(_QWORD *)(v2 + v39);
  v126 = v39;
  AppStorage.projectedValue.getter(&v129, v40, &type metadata for Library.ContentFilterOption, v38);
  v41 = v129;
  v97 = v130;
  LOBYTE(v35) = v131;
  v42 = v101;
  sub_10005B704(v2, v101, _s15MusicVideosViewVMa);
  v43 = *(unsigned __int8 *)(v102 + 80);
  v44 = (v43 + 16) & ~v43;
  v45 = swift_allocObject(&unk_1010B0088, v44 + v103, v43 | 7);
  sub_10005B6C0(v42, v45 + v44, _s15MusicVideosViewVMa);
  v46 = &v22[v19[19]];
  *(_QWORD *)v46 = swift_getKeyPath(&unk_100EA9430);
  *((_QWORD *)v46 + 1) = 0;
  *((_QWORD *)v46 + 2) = 0;
  *((_QWORD *)v46 + 3) = 0;
  v46[32] = 0;
  sub_100065228(v99, (uint64_t)v22, (uint64_t *)&unk_1011A3880);
  v100 = v19;
  v22[v19[13]] = v98 & 1;
  v22[v19[14]] = 0;
  v47 = &v22[v19[15]];
  v48 = v97;
  *(_QWORD *)v47 = v41;
  *((_QWORD *)v47 + 1) = v48;
  v47[16] = v35;
  *(_QWORD *)&v22[v19[16]] = 4;
  *(_QWORD *)&v22[v19[17]] = 0x403E000000000000;
  v49 = (uint64_t (**)(uint64_t))&v22[v19[18]];
  *v49 = sub_1000A8CAC;
  v49[1] = (uint64_t (*)(uint64_t))v45;
  v50 = v104;
  sub_100065228((uint64_t)v22, v104, &qword_10119F700);
  v122 = v2 + *(int *)(v122 + 20);
  v51 = v106;
  sub_10082460C(v106);
  AppStorage.wrappedValue.getter(&v129, *(_QWORD *)(v2 + v39), &type metadata for Library.ContentFilterOption);
  LOBYTE(v45) = v129;
  v52 = v127;
  sub_10005B704(v51, v127, type metadata accessor for Library.Context);
  *(_BYTE *)(v52 + *(int *)(v128 + 56)) = v45;
  sub_10005B748(v51, type metadata accessor for Library.Context);
  v125 = v2;
  v54 = v123;
  v53 = v124;
  v55 = StateObject.wrappedValue.getter(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(unsigned __int8 *)(v2 + 16), v124, v123);
  v56 = (uint64_t)v111;
  v57 = v112;
  v58 = (uint64_t)&v111[*(int *)(v112 + 36)];
  sub_10005B704(v52, v58, type metadata accessor for Library.Context);
  v59 = (_QWORD *)(v58 + *(int *)(sub_100007E8C(&qword_10119F730) + 36));
  swift_retain(v55);
  *v59 = ObservedObject.init(wrappedValue:)(v60, v53, v54);
  v59[1] = v61;
  sub_10004A160(v50, v56, &qword_10119F700);
  v62 = v113;
  sub_10004A160(v56, v113, &qword_10119F6F8);
  swift_storeEnumTagMultiPayload(v62, v114, 0);
  v63 = sub_1000A8CC0();
  v64 = sub_100049F28(&qword_10119F740, &qword_10119F700, (uint64_t)&unk_100EC0C68);
  v65 = v107;
  _ConditionalContent<>.init(storage:)(v62, v57, v100, v63, v64);
  sub_10004FF60(v56, &qword_10119F6F8);
  v66 = (uint64_t)v65;
  v67 = v108;
  sub_100065228(v66, v108, &qword_10119F708);
  swift_release(v55);
  sub_10005B748(v52, type metadata accessor for Library.Context);
  sub_10004FF60(v50, &qword_10119F700);
  v69 = AppStorage.projectedValue.getter(&v129, *(_QWORD *)(v125 + v126), &type metadata for Library.ContentFilterOption, v68);
  v70 = v129;
  v71 = v130;
  LOBYTE(v19) = v131;
  v72 = v117;
  static ToolbarItemPlacement.navigationBarTrailing.getter(v69);
  v73 = (uint64_t)v109;
  v74 = &v109[*(int *)(v110 + 36)];
  v75 = _s25SortFilterContentModifierVMa(0);
  v76 = v119;
  v77 = v120;
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(&v74[*(int *)(v75 + 24)], v72, v120);
  *v74 = 4;
  v78 = v118;
  *((_QWORD *)v74 + 1) = v70;
  *((_QWORD *)v74 + 2) = v71;
  v74[24] = (char)v19;
  v79 = v77;
  v80 = v73;
  sub_10004A160(v67, v73, &qword_10119F708);
  v81 = *(void (**)(char *, uint64_t))(v76 + 8);
  v81(v72, v79);
  v82 = sub_10004FF60(v67, &qword_10119F708);
  v83 = (uint64_t)v78;
  static ToolbarItemPlacement.navigationBarTrailing.getter(v82);
  v84 = v127;
  sub_10082460C(v127);
  v85 = v125;
  AppStorage.wrappedValue.getter(&v129, *(_QWORD *)(v125 + v126), &type metadata for Library.ContentFilterOption);
  LOBYTE(v70) = v129;
  v86 = v105;
  sub_10005B704(v84, v105, type metadata accessor for Library.Context);
  v87 = (_QWORD *)v86;
  *(_BYTE *)(v86 + *(int *)(v128 + 56)) = v70;
  sub_10005B748(v84, type metadata accessor for Library.Context);
  v88 = (uint64_t)v115;
  v89 = StateObject.wrappedValue.getter(*(_QWORD *)v85, *(_QWORD *)(v85 + 8), *(unsigned __int8 *)(v85 + 16), v124, v123);
  dispatch thunk of MusicAutoupdatingResponse.response.getter();
  swift_release(v89);
  v90 = sub_100007E8C(&qword_1011A3890);
  v91 = *(_QWORD *)(v90 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v88, 1, v90) == 1)
  {
    sub_10004FF60(v88, (uint64_t *)&unk_1011A3880);
    v92 = 1;
  }
  else
  {
    v93 = MusicLibrarySectionedResponse.sections.getter(v90);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v88, v90);
    v94 = *(_QWORD *)(v93 + 16);
    swift_bridgeObjectRelease(v93);
    v92 = v94 == 0;
  }
  v95 = v116;
  sub_100301F08(v83, v87, v92, v116);
  sub_10005B748((uint64_t)v87, type metadata accessor for Library.Context);
  v81((char *)v83, v79);
  sub_10004FF60(v80, &qword_10119F710);
  return sub_100065228(v95, v121, &qword_10119F718);
}

uint64_t sub_1000A8378(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v10[4];
  uint64_t v11;

  KeyPath = swift_getKeyPath(&unk_100EA9458);
  v5 = sub_100007E8C(&qword_1011ADFC0);
  MusicLibrarySection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v10[2] = a1;
  v10[3] = a2;
  v6 = sub_100007E8C(&qword_10119F750);
  v7 = sub_1000A8D68();
  v8 = sub_1000A8DAC();
  return Section<>.init(header:content:)(&v11, sub_1000A8D60, v10, &_s6HeaderVN, v6, v7, v8);
}

uint64_t sub_1000A8434(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = _s15MusicVideosViewVMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100007E8C((uint64_t *)&unk_1011CF3D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011ADFC0);
  MusicLibrarySection.items.getter(v9, v10);
  sub_10005B704(a2, (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s15MusicVideosViewVMa);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010B00B0, v12 + v5, v11 | 7);
  sub_10005B6C0((uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, _s15MusicVideosViewVMa);
  v14 = sub_100007E8C(&qword_10119F770);
  v15 = sub_100049F28(&qword_10119F7A0, (uint64_t *)&unk_1011CF3D0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v16 = sub_1000A8E10();
  v17 = sub_100048748(&qword_10119F7A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
  return ForEach<>.init(_:content:)(v8, sub_1000A9238, v13, v6, &type metadata for MusicItemID, v14, v15, v16, v17);
}

uint64_t sub_1000A85D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  char *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v78 = a2;
  v82 = a3;
  v83 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v80 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119F7B0);
  __chkstk_darwin(v5);
  v77 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119F7B8);
  __chkstk_darwin(v7);
  v79 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v9);
  v75 = (uint64_t *)((char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (int *)_s5VideoO4CellVMa(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)_s5VideoO5ModelVMa(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v74 - v18;
  v20 = type metadata accessor for MusicVideo(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v76 = a1;
  v21(v19, a1, v20);
  v22 = enum case for GenericMusicItem.musicVideo(_:);
  v23 = type metadata accessor for GenericMusicItem(0);
  v24.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v19, v22, v23);
  v25 = MusicVideo.title.getter(v24);
  v27 = v26;
  v28 = MusicVideo.artistName.getter(v25);
  v30 = v29;
  v31 = &v19[v14[7]];
  v32 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 4, 10, v32);
  v33 = (uint64_t *)&v19[v14[5]];
  *v33 = v25;
  v33[1] = v27;
  v34 = (uint64_t *)&v19[v14[6]];
  *v34 = v28;
  v34[1] = v30;
  *(_QWORD *)&v19[v14[8]] = 0x3FFC71C71C71C71CLL;
  v35 = (uint64_t)v19;
  sub_10005B704((uint64_t)v19, (uint64_t)v17, _s5VideoO5ModelVMa);
  KeyPath = swift_getKeyPath(&unk_100EA9488);
  v37 = (uint64_t)v75;
  *v75 = KeyPath;
  v38 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v37, v38, 0);
  sub_10005B6C0((uint64_t)v17, (uint64_t)v13, _s5VideoO5ModelVMa);
  v39 = &v13[v11[5]];
  *(_QWORD *)v39 = swift_getKeyPath(&unk_100EA94B8);
  v39[8] = 0;
  sub_100065228(v37, (uint64_t)&v13[v11[6]], &qword_10119EE98);
  v40 = &v13[v11[7]];
  v41 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v42 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v40 = EnvironmentObject.init()(v41, v42);
  *((_QWORD *)v40 + 1) = v43;
  v44 = &v13[v11[8]];
  v45 = type metadata accessor for NoticePresenter(0);
  v46 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *(_QWORD *)v44 = EnvironmentObject.init()(v45, v46);
  *((_QWORD *)v44 + 1) = v47;
  v48 = &v13[v11[9]];
  *(_QWORD *)v48 = sub_1008419B0;
  *((_QWORD *)v48 + 1) = 0;
  v48[16] = 0;
  v49 = &v13[v11[10]];
  v50 = type metadata accessor for NavigationPusher();
  v51 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *(_QWORD *)v49 = EnvironmentObject.init()(v50, v51);
  *((_QWORD *)v49 + 1) = v52;
  v53 = &v13[v11[11]];
  v54 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v55 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v53 = EnvironmentObject.init()(v54, v55);
  *((_QWORD *)v53 + 1) = v56;
  v57 = &v13[v11[12]];
  v58 = type metadata accessor for TabSelectionManager(0);
  v59 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v57 = EnvironmentObject.init()(v58, v59);
  *((_QWORD *)v57 + 1) = v60;
  v61 = &v13[v11[13]];
  *(_QWORD *)v61 = swift_getKeyPath(&unk_100EA94E0);
  *((_QWORD *)v61 + 1) = 0;
  v61[16] = 0;
  v62 = &v13[v11[14]];
  *(_QWORD *)v62 = swift_getKeyPath(&unk_100EA9508);
  *((_QWORD *)v62 + 1) = 0;
  v62[16] = 0;
  v63 = *v78;
  v64 = v78[1];
  v65 = *((unsigned __int8 *)v78 + 16);
  v66 = sub_100007E8C(&qword_10119F720);
  v67 = sub_100049F28(&qword_10119F728, &qword_10119F720, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v68 = StateObject.wrappedValue.getter(v63, v64, v65, v66, v67);
  v69 = (uint64_t)v77;
  dispatch thunk of MusicAutoupdatingResponse.request.getter();
  swift_release(v68);
  v70 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 0, 1, v70);
  v84 = v76;
  v71 = v79;
  sub_100415C78(v69, (void (*)(uint64_t))sub_1000A92C0, v79);
  sub_10004FF60(v69, &qword_10119F7B0);
  _s15MusicVideosViewVMa(0);
  v72 = v80;
  sub_100824838(v80);
  sub_1003D56C4(v71, v72, 0, 0, v82);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v72, v83);
  sub_10004FF60(v71, &qword_10119F7B8);
  sub_10005B748((uint64_t)v13, _s5VideoO4CellVMa);
  return sub_10005B748(v35, _s5VideoO5ModelVMa);
}

uint64_t sub_1000A8BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a1 + *(int *)(sub_100007E8C(&qword_10119F7C0) + 36);
  sub_10004FF60(v3, &qword_10119F7C8);
  v4 = type metadata accessor for MusicVideo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v3, a2, v4);
  v5 = enum case for GenericMusicItem.musicVideo(_:);
  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v3, v5, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
  v8 = sub_100007E8C(&qword_10119F7C8);
  return swift_storeEnumTagMultiPayload(v3, v8, 0);
}

uint64_t sub_1000A8CAC(uint64_t a1)
{
  return sub_1000A9244(a1, sub_1000A8378);
}

unint64_t sub_1000A8CC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F738;
  if (!qword_10119F738)
  {
    v1 = sub_100044B54(&qword_10119F6F8);
    sub_100049F28(&qword_10119F740, &qword_10119F700, (uint64_t)&unk_100EC0C68);
    sub_100049F28(&qword_10119F748, &qword_10119F730, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F738);
  }
  return result;
}

uint64_t sub_1000A8D60()
{
  uint64_t v0;

  return sub_1000A8434(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1000A8D68()
{
  unint64_t result;

  result = qword_10119F758;
  if (!qword_10119F758)
  {
    result = swift_getWitnessTable(&unk_100ECA200, &_s6HeaderVN);
    atomic_store(result, (unint64_t *)&qword_10119F758);
  }
  return result;
}

unint64_t sub_1000A8DAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F760;
  if (!qword_10119F760)
  {
    v1 = sub_100044B54(&qword_10119F750);
    sub_1000A8E10();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F760);
  }
  return result;
}

unint64_t sub_1000A8E10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F768;
  if (!qword_10119F768)
  {
    v1 = sub_100044B54(&qword_10119F770);
    sub_1000A8E94();
    sub_100048748(&qword_10119F788, _s5VideoO4CellVMa, (uint64_t)&unk_100ED6F8C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F768);
  }
  return result;
}

unint64_t sub_1000A8E94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F778;
  if (!qword_10119F778)
  {
    v1 = sub_100044B54(&qword_10119F780);
    sub_100048748(&qword_10119F788, _s5VideoO4CellVMa, (uint64_t)&unk_100ED6F8C);
    sub_100049F28(&qword_10119F790, &qword_10119F798, (uint64_t)&protocol conformance descriptor for PlaybackSelection<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F778);
  }
  return result;
}

uint64_t sub_1000A8F34()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v1 = (int *)_s15MusicVideosViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  sub_1000A6174(*(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8));
  v7 = (_QWORD *)(v0 + v4 + v1[5]);
  v8 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  swift_release(*v7);
  if (EnumCaseMultiPayload == 1)
  {
    v36 = v5;
    v10 = (int *)type metadata accessor for Library.Context(0);
    v11 = (char *)v7 + v10[5];
    v12 = type metadata accessor for Album(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    v14 = (char *)v7 + v10[6];
    v15 = type metadata accessor for Artist(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    v17 = (char *)v7 + v10[7];
    v18 = type metadata accessor for Composer(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    v20 = (char *)v7 + v10[8];
    v21 = type metadata accessor for Genre(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
    v23 = (char *)v7 + v10[9];
    v24 = type metadata accessor for Playlist(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
    v26 = (char *)v7 + v10[10];
    v27 = type metadata accessor for TVShow(0);
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
    v29 = (char *)v7 + v10[11];
    v30 = type metadata accessor for TVSeason(0);
    v31 = *(_QWORD *)(v30 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v10[15] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v10[16]));
    v5 = v36;
  }
  v32 = (_QWORD *)(v6 + v1[6]);
  v33 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
  {
    v34 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v32, v34);
  }
  else
  {
    swift_release(*v32);
  }
  swift_release(*(_QWORD *)(v6 + v1[7]));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1000A9238(uint64_t a1)
{
  return sub_1000A9244(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1000A85D8);
}

uint64_t sub_1000A9244(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s15MusicVideosViewVMa(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_1000A92C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1000A8BD0(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1000A92CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F7D0;
  if (!qword_10119F7D0)
  {
    v1 = sub_100044B54(&qword_10119F718);
    sub_1000A9350();
    sub_100049F28(&qword_10119F7F0, &qword_10119F7F8, (uint64_t)&unk_100ED1EB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F7D0);
  }
  return result;
}

unint64_t sub_1000A9350()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F7D8;
  if (!qword_10119F7D8)
  {
    v1 = sub_100044B54(&qword_10119F710);
    sub_1000A93D4();
    sub_100048748(&qword_10119F7E8, _s25SortFilterContentModifierVMa, (uint64_t)&unk_100ED0D00);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F7D8);
  }
  return result;
}

unint64_t sub_1000A93D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F7E0;
  if (!qword_10119F7E0)
  {
    v1 = sub_100044B54(&qword_10119F708);
    sub_1000A8CC0();
    sub_100049F28(&qword_10119F740, &qword_10119F700, (uint64_t)&unk_100EC0C68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F7E0);
  }
  return result;
}

void *MCDSharePlayTogetherViewModel.notificationName.unsafeMutableAddressor()
{
  return &static MCDSharePlayTogetherViewModel.notificationName;
}

unint64_t static MCDSharePlayTogetherViewModel.notificationName.getter()
{
  return 0xD00000000000002DLL;
}

void sub_1000A95E4(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.sharePlayTogether.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = a2;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v11 = 134349056;
    v15 = v11 + 4;
    v12 = (*(uint64_t (**)(uint8_t *))((swift_isaMask & (uint64_t)v8->isa) + 0x180))(v11);
    v13 = *(_QWORD *)(v12 + 16);

    swift_bridgeObjectRelease(v12);
    v16 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[MCDSharePlayTogetherViewModel] session.objectWillChange participant count: %{public}ld", v11, 0xCu);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {

    v9 = v8;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v14 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_10119B898 != -1)
    swift_once(&qword_10119B898, sub_1000A98EC);
  objc_msgSend(v14, "postNotificationName:object:", qword_10124C760, 0);

}

id ModelObjectBackedStoreItemMetadata.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void MCDSharePlayTogetherViewModel.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.MCDSharePlayTogetherViewModel", 35, "init()", 6, 0);
  __break(1u);
}

id MCDSharePlayTogetherViewModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MCDSharePlayTogetherViewModel();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MCDSharePlayTogetherViewModel()
{
  return objc_opt_self(_TtC5Music29MCDSharePlayTogetherViewModel);
}

NSString sub_1000A98EC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10124C760 = (uint64_t)result;
  return result;
}

id sub_1000A9920(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  objc_class *v31;
  char *v33;
  uint64_t v34;
  objc_super v35;
  id v36;
  uint64_t v37;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A23C0);
  v34 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC5Music29MCDSharePlayTogetherViewModel_participantsSubscription;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29MCDSharePlayTogetherViewModel_participantsSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29MCDSharePlayTogetherViewModel_session] = a1;
  v11 = type metadata accessor for SharePlayTogetherSession(0);
  sub_100048748(&qword_10119F838, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
  v33 = v2;
  v12 = a1;
  v37 = ObservableObject<>.objectWillChange.getter(v11);
  v13 = sub_1000A9B84();
  v36 = (id)static OS_dispatch_queue.main.getter(v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
  v22 = type metadata accessor for ObservableObjectPublisher(0);
  v23 = sub_100048748((unint64_t *)&qword_1011A89B0, (uint64_t (*)(uint64_t))sub_1000A9B84, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(&v36, v6, v22, v13, &protocol witness table for ObservableObjectPublisher, v23);
  sub_1000A9BC0((uint64_t)v6);

  swift_release(v37);
  v24 = swift_allocObject(&unk_1010B0130, 24, 7);
  *(_QWORD *)(v24 + 16) = v12;
  v25 = sub_1000A9C2C();
  v26 = v12;
  v27 = Publisher<>.sink(receiveValue:)(sub_1000A9C24, v24, v7, v25);
  v28 = swift_release(v24);
  (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v9, v7, v28);
  v29 = *(_QWORD *)&v2[v10];
  *(_QWORD *)&v2[v10] = v27;
  v30 = v33;

  swift_release(v29);
  v31 = (objc_class *)type metadata accessor for MCDSharePlayTogetherViewModel();
  v35.receiver = v30;
  v35.super_class = v31;
  return objc_msgSendSuper2(&v35, "init");
}

unint64_t sub_1000A9B84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A2110;
  if (!qword_1011A2110)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011A2110);
  }
  return result;
}

uint64_t sub_1000A9BC0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011A08F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000A9C00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000A9C24(uint64_t a1)
{
  uint64_t v1;

  sub_1000A95E4(a1, *(void **)(v1 + 16));
}

unint64_t sub_1000A9C2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A23D0;
  if (!qword_1011A23D0)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011A23C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Publishers.ReceiveOn<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A23D0);
  }
  return result;
}

uint64_t sub_1000A9C78(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void **v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(void **, uint64_t, int *);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  __n128 v27;
  char *__dst;

  v4 = type metadata accessor for ItemButton(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v14);
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v7 = *(int *)(v4 + 28);
    v8 = (void **)(a1 + v7);
    v9 = (void **)((char *)a2 + v7);
    v10 = (int *)type metadata accessor for SegueContext(0);
    v11 = *((_QWORD *)v10 - 1);
    v12 = *(unsigned int (**)(void **, uint64_t, int *))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = sub_100007E8C(&qword_10119F840);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = *v9;
      *v8 = *v9;
      v16 = v10[5];
      __dst = (char *)v8 + v16;
      v17 = (char *)v9 + v16;
      v18 = type metadata accessor for GenericMusicItem(0);
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      v21 = v15;
      if (v20(v17, 1, v18))
      {
        v22 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      *((_BYTE *)v8 + v10[6]) = *((_BYTE *)v9 + v10[6]);
      v23 = v10[7];
      v24 = (void **)((char *)v8 + v23);
      v25 = (void **)((char *)v9 + v23);
      if (*v25)
      {
        v26 = v25[1];
        *v24 = *v25;
        v24[1] = v26;
        v27 = swift_retain(v26);
      }
      else
      {
        v27 = *(__n128 *)v25;
        *(_OWORD *)v24 = *(_OWORD *)v25;
      }
      (*(void (**)(void **, _QWORD, uint64_t, int *, __n128))(v11 + 56))(v8, 0, 1, v10, v27);
    }
  }
  return a1;
}

uint64_t type metadata accessor for ItemButton(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_10119F930, (uint64_t)&nominal type descriptor for ItemButton);
}

double sub_1000A9E64(uint64_t a1)
{
  id *v2;
  uint64_t v3;
  double result;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v2 = (id *)(a1 + *(int *)(type metadata accessor for ItemButton(0) + 28));
  v3 = type metadata accessor for SegueContext(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {

    v5 = (char *)v2 + *(int *)(v3 + 20);
    v6 = type metadata accessor for GenericMusicItem(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    v8 = (id *)((char *)v2 + *(int *)(v3 + 28));
    if (*v8)
      *(_QWORD *)&result = swift_release(v8[1]).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000A9F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void **v7;
  int *v8;
  uint64_t v9;
  unsigned int (*v10)(void **, uint64_t, int *);
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  char *__dst;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(int *)(type metadata accessor for ItemButton(0) + 28);
  v6 = (void **)(a1 + v5);
  v7 = (void **)(a2 + v5);
  v8 = (int *)type metadata accessor for SegueContext(0);
  v9 = *((_QWORD *)v8 - 1);
  v10 = *(unsigned int (**)(void **, uint64_t, int *))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = sub_100007E8C(&qword_10119F840);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = *v7;
    *v6 = *v7;
    v13 = v8[5];
    __dst = (char *)v6 + v13;
    v14 = (char *)v7 + v13;
    v15 = type metadata accessor for GenericMusicItem(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v18 = v12;
    if (v17(v14, 1, v15))
    {
      v19 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *((_BYTE *)v6 + v8[6]) = *((_BYTE *)v7 + v8[6]);
    v20 = v8[7];
    v21 = (void **)((char *)v6 + v20);
    v22 = (void **)((char *)v7 + v20);
    if (*v22)
    {
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
      v24 = swift_retain(v23);
    }
    else
    {
      v24 = *(__n128 *)v22;
      *(_OWORD *)v21 = *(_OWORD *)v22;
    }
    (*(void (**)(void **, _QWORD, uint64_t, int *, __n128))(v9 + 56))(v6, 0, 1, v8, v24);
  }
  return a1;
}

uint64_t sub_1000AA0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void **v7;
  int *v8;
  uint64_t v9;
  uint64_t (*v10)(void **, uint64_t, int *);
  int v11;
  int v12;
  void *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v5 = *(int *)(type metadata accessor for ItemButton(0) + 28);
  v6 = (void **)(a1 + v5);
  v7 = (void **)(a2 + v5);
  v8 = (int *)type metadata accessor for SegueContext(0);
  v9 = *((_QWORD *)v8 - 1);
  v10 = *(uint64_t (**)(void **, uint64_t, int *))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (v12)
    {
      sub_1000AA41C((uint64_t)v6);
      goto LABEL_7;
    }
    v22 = *v7;
    v23 = *v6;
    *v6 = *v7;
    v24 = v22;

    v25 = v8[5];
    v26 = (char *)v6 + v25;
    v27 = (char *)v7 + v25;
    v28 = type metadata accessor for GenericMusicItem(0);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
    v31 = v30(v26, 1, v28);
    v32 = v30(v27, 1, v28);
    if (v31)
    {
      if (!v32)
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        goto LABEL_20;
      }
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 24))(v26, v27, v28);
LABEL_20:
        *((_BYTE *)v6 + v8[6]) = *((_BYTE *)v7 + v8[6]);
        v40 = v8[7];
        v41 = (void **)((char *)v6 + v40);
        v42 = (char *)v7 + v40;
        v43 = *(uint64_t *)((char *)v7 + v40);
        if (*v41)
        {
          if (v43)
          {
            v44 = *((_QWORD *)v42 + 1);
            v45 = v41[1];
            *v41 = v43;
            v41[1] = v44;
            swift_retain(v44);
            swift_release(v45);
            return a1;
          }
          swift_release(v41[1]);
        }
        else if (v43)
        {
          v46 = *((_QWORD *)v42 + 1);
          *v41 = v43;
          v41[1] = v46;
          swift_retain(v46);
          return a1;
        }
        *(_OWORD *)v41 = *(_OWORD *)v42;
        return a1;
      }
      (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
    }
    v39 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_20;
  }
  if (v12)
  {
LABEL_7:
    v21 = sub_100007E8C(&qword_10119F840);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  v13 = *v7;
  *v6 = *v7;
  v14 = v8[5];
  __dst = (char *)v6 + v14;
  v15 = (char *)v7 + v14;
  v16 = type metadata accessor for GenericMusicItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v13;
  if (v18(v15, 1, v16))
  {
    v20 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
  }
  *((_BYTE *)v6 + v8[6]) = *((_BYTE *)v7 + v8[6]);
  v33 = v8[7];
  v34 = (void **)((char *)v6 + v33);
  v35 = (void **)((char *)v7 + v33);
  if (*v35)
  {
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = swift_retain(v36);
  }
  else
  {
    v37 = *(__n128 *)v35;
    *(_OWORD *)v34 = *(_OWORD *)v35;
  }
  (*(void (**)(void **, _QWORD, uint64_t, int *, __n128))(v9 + 56))(v6, 0, 1, v8, v37);
  return a1;
}

uint64_t sub_1000AA41C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SegueContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000AA458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for ItemButton(0) + 28);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  v7 = (int *)type metadata accessor for SegueContext(0);
  v8 = *((_QWORD *)v7 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_100007E8C(&qword_10119F840);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *v5 = *v6;
    v10 = v7[5];
    v11 = (char *)v5 + v10;
    v12 = (char *)v6 + v10;
    v13 = type metadata accessor for GenericMusicItem(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *((_BYTE *)v5 + v7[6]) = *((_BYTE *)v6 + v7[6]);
    v16 = v7[7];
    v17 = (_QWORD *)((char *)v5 + v16);
    v18 = (_QWORD *)((char *)v6 + v16);
    v19 = *v18;
    if (*v18)
    {
      v20 = v18[1];
      *v17 = v19;
      v17[1] = v20;
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1000AA5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = *(int *)(type metadata accessor for ItemButton(0) + 28);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for SegueContext(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1000AA41C((uint64_t)v7);
      goto LABEL_7;
    }
    v21 = (void *)*v7;
    *v7 = *v8;

    v22 = v9[5];
    v23 = (char *)v7 + v22;
    v24 = (char *)v8 + v22;
    v25 = type metadata accessor for GenericMusicItem(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v23, 1, v25);
    v29 = v27(v24, 1, v25);
    if (v28)
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        goto LABEL_20;
      }
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_20:
        *((_BYTE *)v7 + v9[6]) = *((_BYTE *)v8 + v9[6]);
        v37 = v9[7];
        v38 = (_QWORD *)((char *)v7 + v37);
        v39 = (_QWORD *)((char *)v8 + v37);
        v40 = *v39;
        if (*v38)
        {
          if (v40)
          {
            v41 = v39[1];
            v42 = v38[1];
            *v38 = v40;
            v38[1] = v41;
            swift_release(v42);
            return a1;
          }
          swift_release(v38[1]);
        }
        else if (v40)
        {
          v43 = v39[1];
          *v38 = v40;
          v38[1] = v43;
          return a1;
        }
        *(_OWORD *)v38 = *(_OWORD *)v39;
        return a1;
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    }
    v36 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_20;
  }
  if (v13)
  {
LABEL_7:
    v20 = sub_100007E8C(&qword_10119F840);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  *v7 = *v8;
  v14 = v9[5];
  v15 = (char *)v7 + v14;
  v16 = (char *)v8 + v14;
  v17 = type metadata accessor for GenericMusicItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *((_BYTE *)v7 + v9[6]) = *((_BYTE *)v8 + v9[6]);
  v30 = v9[7];
  v31 = (_QWORD *)((char *)v7 + v30);
  v32 = (_QWORD *)((char *)v8 + v30);
  v33 = *v32;
  if (*v32)
  {
    v34 = v32[1];
    *v31 = v33;
    v31[1] = v34;
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1000AA8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000AA8E0);
}

uint64_t sub_1000AA8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ItemButton(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1000AA91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000AA928);
}

uint64_t sub_1000AA928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ItemButton(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ItemButtonView(uint64_t a1)
{
  return sub_100055934(a1, qword_10119F8A0, (uint64_t)&nominal type descriptor for ItemButtonView);
}

uint64_t sub_1000AA97C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for ItemButton(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_1000AA9E4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void **v8;
  int *v9;
  uint64_t v10;
  unsigned int (*v11)(void **, uint64_t, int *);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  char *__dst;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v13);
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v6 = *(int *)(a3 + 28);
    v7 = (void **)(a1 + v6);
    v8 = (void **)((char *)a2 + v6);
    v9 = (int *)type metadata accessor for SegueContext(0);
    v10 = *((_QWORD *)v9 - 1);
    v11 = *(unsigned int (**)(void **, uint64_t, int *))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = sub_100007E8C(&qword_10119F840);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = *v8;
      *v7 = *v8;
      v15 = v9[5];
      __dst = (char *)v7 + v15;
      v16 = (char *)v8 + v15;
      v17 = type metadata accessor for GenericMusicItem(0);
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      v20 = v14;
      if (v19(v16, 1, v17))
      {
        v21 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
      }
      *((_BYTE *)v7 + v9[6]) = *((_BYTE *)v8 + v9[6]);
      v22 = v9[7];
      v23 = (void **)((char *)v7 + v22);
      v24 = (void **)((char *)v8 + v22);
      if (*v24)
      {
        v25 = v24[1];
        *v23 = *v24;
        v23[1] = v25;
        v26 = swift_retain(v25);
      }
      else
      {
        v26 = *(__n128 *)v24;
        *(_OWORD *)v23 = *(_OWORD *)v24;
      }
      (*(void (**)(void **, _QWORD, uint64_t, int *, __n128))(v10 + 56))(v7, 0, 1, v9, v26);
    }
  }
  return v3;
}

double sub_1000AABB0(uint64_t a1, uint64_t a2)
{
  id *v4;
  uint64_t v5;
  double result;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = (id *)(a1 + *(int *)(a2 + 28));
  v5 = type metadata accessor for SegueContext(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {

    v7 = (char *)v4 + *(int *)(v5 + 20);
    v8 = type metadata accessor for GenericMusicItem(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    v10 = (id *)((char *)v4 + *(int *)(v5 + 28));
    if (*v10)
      *(_QWORD *)&result = swift_release(v10[1]).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000AAC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void **v7;
  int *v8;
  uint64_t v9;
  unsigned int (*v10)(void **, uint64_t, int *);
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  char *__dst;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(int *)(a3 + 28);
  v6 = (void **)(a1 + v5);
  v7 = (void **)(a2 + v5);
  v8 = (int *)type metadata accessor for SegueContext(0);
  v9 = *((_QWORD *)v8 - 1);
  v10 = *(unsigned int (**)(void **, uint64_t, int *))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = sub_100007E8C(&qword_10119F840);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = *v7;
    *v6 = *v7;
    v13 = v8[5];
    __dst = (char *)v6 + v13;
    v14 = (char *)v7 + v13;
    v15 = type metadata accessor for GenericMusicItem(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v18 = v12;
    if (v17(v14, 1, v15))
    {
      v19 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *((_BYTE *)v6 + v8[6]) = *((_BYTE *)v7 + v8[6]);
    v20 = v8[7];
    v21 = (void **)((char *)v6 + v20);
    v22 = (void **)((char *)v7 + v20);
    if (*v22)
    {
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
      v24 = swift_retain(v23);
    }
    else
    {
      v24 = *(__n128 *)v22;
      *(_OWORD *)v21 = *(_OWORD *)v22;
    }
    (*(void (**)(void **, _QWORD, uint64_t, int *, __n128))(v9 + 56))(v6, 0, 1, v8, v24);
  }
  return a1;
}

uint64_t sub_1000AAE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void **v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(void **, uint64_t, int *);
  int v13;
  int v14;
  void *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v7 = *(int *)(a3 + 28);
  v8 = (void **)(a1 + v7);
  v9 = (void **)(a2 + v7);
  v10 = (int *)type metadata accessor for SegueContext(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(void **, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1000AA41C((uint64_t)v8);
      goto LABEL_7;
    }
    v24 = *v9;
    v25 = *v8;
    *v8 = *v9;
    v26 = v24;

    v27 = v10[5];
    v28 = (char *)v8 + v27;
    v29 = (char *)v9 + v27;
    v30 = type metadata accessor for GenericMusicItem(0);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
    v33 = v32(v28, 1, v30);
    v34 = v32(v29, 1, v30);
    if (v33)
    {
      if (!v34)
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        goto LABEL_20;
      }
    }
    else
    {
      if (!v34)
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v28, v29, v30);
LABEL_20:
        *((_BYTE *)v8 + v10[6]) = *((_BYTE *)v9 + v10[6]);
        v42 = v10[7];
        v43 = (void **)((char *)v8 + v42);
        v44 = (char *)v9 + v42;
        v45 = *(uint64_t *)((char *)v9 + v42);
        if (*v43)
        {
          if (v45)
          {
            v46 = *((_QWORD *)v44 + 1);
            v47 = v43[1];
            *v43 = v45;
            v43[1] = v46;
            swift_retain(v46);
            swift_release(v47);
            return a1;
          }
          swift_release(v43[1]);
        }
        else if (v45)
        {
          v48 = *((_QWORD *)v44 + 1);
          *v43 = v45;
          v43[1] = v48;
          swift_retain(v48);
          return a1;
        }
        *(_OWORD *)v43 = *(_OWORD *)v44;
        return a1;
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    }
    v41 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_20;
  }
  if (v14)
  {
LABEL_7:
    v23 = sub_100007E8C(&qword_10119F840);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  v15 = *v9;
  *v8 = *v9;
  v16 = v10[5];
  __dst = (char *)v8 + v16;
  v17 = (char *)v9 + v16;
  v18 = type metadata accessor for GenericMusicItem(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v15;
  if (v20(v17, 1, v18))
  {
    v22 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  *((_BYTE *)v8 + v10[6]) = *((_BYTE *)v9 + v10[6]);
  v35 = v10[7];
  v36 = (void **)((char *)v8 + v35);
  v37 = (void **)((char *)v9 + v35);
  if (*v37)
  {
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = swift_retain(v38);
  }
  else
  {
    v39 = *(__n128 *)v37;
    *(_OWORD *)v36 = *(_OWORD *)v37;
  }
  (*(void (**)(void **, _QWORD, uint64_t, int *, __n128))(v11 + 56))(v8, 0, 1, v10, v39);
  return a1;
}

uint64_t sub_1000AB154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  v7 = (int *)type metadata accessor for SegueContext(0);
  v8 = *((_QWORD *)v7 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_100007E8C(&qword_10119F840);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *v5 = *v6;
    v10 = v7[5];
    v11 = (char *)v5 + v10;
    v12 = (char *)v6 + v10;
    v13 = type metadata accessor for GenericMusicItem(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *((_BYTE *)v5 + v7[6]) = *((_BYTE *)v6 + v7[6]);
    v16 = v7[7];
    v17 = (_QWORD *)((char *)v5 + v16);
    v18 = (_QWORD *)((char *)v6 + v16);
    v19 = *v18;
    if (*v18)
    {
      v20 = v18[1];
      *v17 = v19;
      v17[1] = v20;
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1000AB2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v8 = *(int *)(a3 + 28);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = (int *)type metadata accessor for SegueContext(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_1000AA41C((uint64_t)v9);
      goto LABEL_7;
    }
    v23 = (void *)*v9;
    *v9 = *v10;

    v24 = v11[5];
    v25 = (char *)v9 + v24;
    v26 = (char *)v10 + v24;
    v27 = type metadata accessor for GenericMusicItem(0);
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
    v30 = v29(v25, 1, v27);
    v31 = v29(v26, 1, v27);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        goto LABEL_20;
      }
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
LABEL_20:
        *((_BYTE *)v9 + v11[6]) = *((_BYTE *)v10 + v11[6]);
        v39 = v11[7];
        v40 = (_QWORD *)((char *)v9 + v39);
        v41 = (_QWORD *)((char *)v10 + v39);
        v42 = *v41;
        if (*v40)
        {
          if (v42)
          {
            v43 = v41[1];
            v44 = v40[1];
            *v40 = v42;
            v40[1] = v43;
            swift_release(v44);
            return a1;
          }
          swift_release(v40[1]);
        }
        else if (v42)
        {
          v45 = v41[1];
          *v40 = v42;
          v40[1] = v45;
          return a1;
        }
        *(_OWORD *)v40 = *(_OWORD *)v41;
        return a1;
      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    }
    v38 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_20;
  }
  if (v15)
  {
LABEL_7:
    v22 = sub_100007E8C(&qword_10119F840);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  *v9 = *v10;
  v16 = v11[5];
  v17 = (char *)v9 + v16;
  v18 = (char *)v10 + v16;
  v19 = type metadata accessor for GenericMusicItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *((_BYTE *)v9 + v11[6]) = *((_BYTE *)v10 + v11[6]);
  v32 = v11[7];
  v33 = (_QWORD *)((char *)v9 + v32);
  v34 = (_QWORD *)((char *)v10 + v32);
  v35 = *v34;
  if (*v34)
  {
    v36 = v34[1];
    *v33 = v35;
    v33[1] = v36;
  }
  else
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1000AB5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000AB5CC);
}

uint64_t sub_1000AB5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_100007E8C(&qword_10119F840);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v9);
  }
}

uint64_t sub_1000AB658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000AB664);
}

uint64_t sub_1000AB664(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_100007E8C(&qword_10119F840);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1000AB6DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EA9578;
  v4[1] = &unk_100EA9590;
  v4[2] = &unk_100EA9590;
  sub_1000AB75C(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_1000AB75C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10119F940)
  {
    v2 = type metadata accessor for SegueContext(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10119F940);
  }
}

uint64_t sub_1000AB7B0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F94B14, 1);
}

uint64_t sub_1000AB7C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(uint64_t@<X8>);
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  char v68;
  char v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[7];

  v2 = v1;
  v76 = a1;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v74 = *(_QWORD *)(v3 - 8);
  v75 = v3;
  __chkstk_darwin(v3);
  v73 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ItemButtonView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = sub_100007E8C(&qword_10119F840);
  __chkstk_darwin(v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)sub_100007E8C(&qword_10119F978);
  __chkstk_darwin(v11);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100007E8C(&qword_10119F980);
  __chkstk_darwin(v70);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C(&qword_10119F988);
  __chkstk_darwin(v72);
  v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_10119F990);
  __chkstk_darwin(v18);
  v71 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ItemButton(0);
  sub_10004A160(v2 + *(int *)(v20 + 28), (uint64_t)v10, &qword_10119F840);
  sub_1000ABE64(v2, (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(unsigned __int8 *)(v6 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = swift_allocObject(&unk_1010B0158, v22 + v7, v21 | 7);
  sub_1000ABFAC((uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22);
  v24 = type metadata accessor for TabSelectionManager(0);
  v25 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v26 = EnvironmentObject.init()(v24, v25);
  v28 = v27;
  sub_100065228((uint64_t)v10, (uint64_t)v13, &qword_10119F840);
  v29 = (void (**)(uint64_t@<X8>))&v13[v11[9]];
  *v29 = sub_1000ABFF0;
  v29[1] = (void (*)(uint64_t@<X8>))v23;
  v30 = &v13[v11[10]];
  *(_QWORD *)v30 = sub_1006096B0;
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v31 = &v13[v11[11]];
  v32 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v33 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v31 = EnvironmentObject.init()(v32, v33);
  *((_QWORD *)v31 + 1) = v34;
  v35 = &v13[v11[12]];
  v36 = sub_100007E8C(&qword_10119F4E8);
  v37 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v35 = EnvironmentObject.init()(v36, v37);
  *((_QWORD *)v35 + 1) = v38;
  v39 = &v13[v11[13]];
  v40 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v41 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v39 = EnvironmentObject.init()(v40, v41);
  *((_QWORD *)v39 + 1) = v42;
  v43 = (uint64_t *)&v13[v11[14]];
  *v43 = v26;
  v43[1] = v28;
  v44 = &v13[v11[15]];
  *(_QWORD *)v44 = swift_getKeyPath(&unk_100EA95F8);
  v45 = sub_100007E8C(&qword_10119F4E0);
  swift_storeEnumTagMultiPayload(v44, v45, 0);
  v46 = &v13[v11[16]];
  *(_QWORD *)v46 = swift_getKeyPath(&unk_100EA9628);
  v46[8] = 0;
  v47 = &v13[v11[17]];
  *(_QWORD *)v47 = swift_getKeyPath(&unk_100EA9650);
  *((_QWORD *)v47 + 1) = 0;
  v47[16] = 0;
  v48 = &v13[v11[18]];
  *(_QWORD *)v48 = swift_getKeyPath(&unk_100EA9678);
  *((_QWORD *)v48 + 1) = 0;
  v48[16] = 0;
  v49 = &v13[v11[19]];
  KeyPath = swift_getKeyPath(&unk_100EA96A0);
  *(_QWORD *)v49 = KeyPath;
  v49[8] = 0;
  v51 = static Alignment.center.getter(KeyPath);
  v69 = 1;
  v68 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v77, 0x4059000000000000, 0, 0, 1, 0, 1, 0x4044000000000000, 0, 0, v68, 0, v69, v51, v52);
  sub_10004A160((uint64_t)v13, (uint64_t)v15, &qword_10119F978);
  v53 = &v15[*(int *)(v70 + 36)];
  v54 = v77[5];
  *((_OWORD *)v53 + 4) = v77[4];
  *((_OWORD *)v53 + 5) = v54;
  *((_OWORD *)v53 + 6) = v77[6];
  v55 = v77[1];
  *(_OWORD *)v53 = v77[0];
  *((_OWORD *)v53 + 1) = v55;
  v56 = v77[3];
  *((_OWORD *)v53 + 2) = v77[2];
  *((_OWORD *)v53 + 3) = v56;
  v57 = sub_10004FF60((uint64_t)v13, &qword_10119F978);
  v59 = static Color.accentColor.getter(v57, v58);
  v60 = swift_getKeyPath(&unk_100EA96C8);
  sub_10004A160((uint64_t)v15, (uint64_t)v17, &qword_10119F980);
  v61 = v72;
  v62 = (uint64_t *)&v17[*(int *)(v72 + 36)];
  *v62 = v60;
  v62[1] = v59;
  v63 = sub_10004FF60((uint64_t)v15, &qword_10119F980);
  v64 = v73;
  static AccessibilityTraits.isStaticText.getter(v63);
  v65 = sub_1000AC05C();
  v66 = (uint64_t)v71;
  View.accessibilityRemoveTraits(_:)(v64, v61, v65);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v64, v75);
  sub_10004FF60((uint64_t)v17, &qword_10119F988);
  return sub_100065228(v66, v76, &qword_10119F990);
}

void sub_1000ABD44(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  int v16;
  char v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = *a1;
  v4 = a1[1];
  v5 = sub_1004872C4((uint64_t)&off_1010AA3A0);
  swift_bridgeObjectRetain();
  v6 = Text.init(optional:options:)(v3, v4, v5);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = static Font.headline.getter();
  KeyPath = swift_getKeyPath(&unk_100EA96F8);
  v15 = static HierarchicalShapeStyle.primary.getter();
  v16 = v15;
  v17 = static Edge.Set.horizontal.getter(v15);
  v18 = EdgeInsets.init(_all:)(20.0);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = static Edge.Set.vertical.getter(v25);
  v27 = EdgeInsets.init(_all:)(14.0);
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = v13;
  *(_DWORD *)(a2 + 48) = v16;
  *(_BYTE *)(a2 + 56) = v17;
  *(double *)(a2 + 64) = v18;
  *(_QWORD *)(a2 + 72) = v20;
  *(_QWORD *)(a2 + 80) = v22;
  *(_QWORD *)(a2 + 88) = v24;
  *(_BYTE *)(a2 + 96) = 0;
  *(_BYTE *)(a2 + 104) = v26;
  *(double *)(a2 + 112) = v27;
  *(_QWORD *)(a2 + 120) = v28;
  *(_QWORD *)(a2 + 128) = v29;
  *(_QWORD *)(a2 + 136) = v30;
  *(_BYTE *)(a2 + 144) = 0;
}

uint64_t sub_1000ABE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ItemButtonView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000ABEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(type metadata accessor for ItemButtonView(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v3 + 8));
  v5 = (id *)(v0 + v3 + *(int *)(type metadata accessor for ItemButton(0) + 28));
  v6 = type metadata accessor for SegueContext(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {

    v7 = (char *)v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for GenericMusicItem(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    v10 = (id *)((char *)v5 + *(int *)(v6 + 28));
    if (*v10)
      swift_release(v10[1]);
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000ABFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ItemButtonView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1000ABFF0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ItemButtonView(0) - 8) + 80);
  sub_1000ABD44((uint64_t *)(v1 + ((v3 + 16) & ~v3)), a1);
}

unint64_t sub_1000AC05C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F998;
  if (!qword_10119F998)
  {
    v1 = sub_100044B54(&qword_10119F988);
    sub_1000AC0E0();
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F998);
  }
  return result;
}

unint64_t sub_1000AC0E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F9A0;
  if (!qword_10119F9A0)
  {
    v1 = sub_100044B54(&qword_10119F980);
    sub_100049F28(&qword_10119F9A8, &qword_10119F978, (uint64_t)&unk_100EC4FD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F9A0);
  }
  return result;
}

unint64_t sub_1000AC170()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119F9B0;
  if (!qword_10119F9B0)
  {
    v1 = sub_100044B54(&qword_10119F990);
    sub_1000AC05C();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119F9B0);
  }
  return result;
}

double sub_1000AC1F4@<D0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  v2 = sub_1000AD6EC();
  EnvironmentValues.subscript.getter(v6, &_s20ModuleViewContextKeyVN, &_s20ModuleViewContextKeyVN, v2);
  v3 = v7;
  result = *(double *)v6;
  v5 = v6[1];
  *(_OWORD *)a1 = v6[0];
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1000AC244()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_1000AD6A8();
  EnvironmentValues.subscript.getter(&v2, &_s15ModuleLayoutKeyVN, &_s15ModuleLayoutKeyVN, v0);
  return v2;
}

uint64_t sub_1000AC280(char a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  char v9;
  uint64_t KeyPath;
  uint64_t v11;
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  v9 = a1 & 1;
  KeyPath = swift_getKeyPath(&unk_100EA9790);
  v11 = swift_getKeyPath(&unk_100EA97B8);
  v13[0] = v9;
  v13[1] = a2;
  v13[2] = a3;
  v14 = KeyPath;
  v15 = 0;
  v16 = 0;
  v17 = v11;
  v18 = 0;
  View.modifier<A>(_:)(v13, a4, &type metadata for OrthogonalScrollingModifier, a5);
  swift_release(v11);
  return swift_release(KeyPath);
}

uint64_t sub_1000AC340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;

  if (a2 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = type metadata accessor for GridItem(0);
      v5 = (char *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      *((_QWORD *)v5 + 2) = a2;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v8 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      v8(&v5[v7], a1, v4);
      v9 = a2 - 1;
      if (a2 != 1)
      {
        v10 = *(_QWORD *)(v6 + 72);
        v11 = &v5[v10 + v7];
        do
        {
          v8(v11, a1, v4);
          v11 += v10;
          --v9;
        }
        while (v9);
      }
    }
    else
    {
      v5 = (char *)&_swiftEmptyArrayStorage;
    }
    v12 = type metadata accessor for GridItem(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_1000AC470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  if (a2 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = sub_100007E8C(&qword_10119FA90);
      v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v5[2] = a2;
      v6 = *(_QWORD *)(sub_100007E8C(&qword_10119FA90) - 8);
      v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      sub_10004A160(a1, (uint64_t)v5 + v7, &qword_10119FA90);
      v8 = a2 - 1;
      if (a2 != 1)
      {
        v9 = *(_QWORD *)(v6 + 72);
        v10 = (uint64_t)v5 + v9 + v7;
        do
        {
          sub_10004A160(a1, v10, &qword_10119FA90);
          v10 += v9;
          --v8;
        }
        while (v8);
      }
    }
    else
    {
      v5 = _swiftEmptyArrayStorage;
    }
    sub_10004FF60(a1, &qword_10119FA90);
    return (uint64_t)v5;
  }
  return result;
}

char *sub_1000AC59C(unint64_t a1, double a2)
{
  char *result;
  double *v4;
  unint64_t v5;
  double v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = (char *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  if (!a1)
    return (char *)&_swiftEmptyArrayStorage;
  result = (char *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1, &type metadata for CGFloat);
  *((_QWORD *)result + 2) = a1;
  v4 = (double *)(result + 32);
  if (a1 < 4)
  {
    v5 = 0;
    v6 = a2;
LABEL_9:
    v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  v6 = a2;
  v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  v8 = (int64x2_t *)(result + 48);
  v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1)
    goto LABEL_9;
  return result;
}

_QWORD *sub_1000AC68C(unint64_t a1, double a2, double a3)
{
  uint64_t v4;
  _QWORD *result;
  double *v6;
  unint64_t v7;
  double v8;
  double v9;
  int64x2_t v10;
  int64x2_t v11;
  double *v12;
  unint64_t v13;
  double *v14;
  unint64_t v15;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  if (!a1)
    return _swiftEmptyArrayStorage;
  type metadata accessor for CGSize(0);
  result = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1, v4);
  result[2] = a1;
  v6 = (double *)(result + 4);
  if (a1 < 4)
  {
    v7 = 0;
    v8 = a3;
    v9 = a2;
LABEL_9:
    v15 = a1 - v7;
    do
    {
      *v6 = v9;
      v6[1] = v8;
      v6 += 2;
      --v15;
    }
    while (v15);
    return result;
  }
  v7 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v6 += 2 * (a1 & 0xFFFFFFFFFFFFFFFCLL);
  v9 = a2;
  v10 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  v8 = a3;
  v11 = vdupq_lane_s64(*(uint64_t *)&a3, 0);
  v12 = (double *)(result + 8);
  v13 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v14 = v12 - 4;
    vst2q_f64(v14, *(float64x2x2_t *)v10.i8);
    vst2q_f64(v12, *(float64x2x2_t *)v10.i8);
    v12 += 8;
    v13 -= 4;
  }
  while (v13);
  if (v7 != a1)
    goto LABEL_9;
  return result;
}

double variable initialization expression of JSSegue.Context.performanceContext@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1000AC7AC(double *a1, double *a2)
{
  int v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  int v8;
  double v9;
  double v10;
  double v11;
  double v12;
  int v13;

  v2 = *((unsigned __int8 *)a1 + 1);
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = *(unsigned __int8 *)a2;
  v8 = *((unsigned __int8 *)a2 + 1);
  v9 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  v12 = a2[4];
  v13 = Axis.rawValue.getter(*(unsigned __int8 *)a1);
  if (v13 != Axis.rawValue.getter(v7) || ((v2 ^ v8) & 1) != 0)
    return 0;
  else
    return static EdgeInsets.== infix(_:_:)(v3, v4, v5, v6, v9, v10, v11, v12);
}

void sub_1000AC874(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1000AC87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_1000AED54();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_1000AC8CC()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_1000AE0F8();
  EnvironmentValues.subscript.getter(&v2, &_s19PersistentScrollKeyVN, &_s19PersistentScrollKeyVN, v0);
  return v2;
}

uint64_t sub_1000AC904()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_1000AE0B4();
  EnvironmentValues.subscript.getter(&v2, &_s27PersistentScrollObserverKeyVN, &_s27PersistentScrollObserverKeyVN, v0);
  return v2;
}

double sub_1000AC93C@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

uint64_t sub_1000AC954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1000AF178(&qword_10119FB30, &qword_10119EAD8, (void (*)(void))sub_1000AEA10);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_1000AC9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  __int128 v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_BYTE *)(a1 + 1);
  v11 = *(_OWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)a1 & 1;
  KeyPath = swift_getKeyPath(&unk_100EA9AF8);
  v12 = v8 & 0xFFFFFFFFFFFFFEFFLL | ((unint64_t)(v5 & 1) << 8);
  v13 = v11;
  v14 = v6;
  v15 = v7;
  View.environment<A>(_:_:)(KeyPath, &v12, a2, a3);
  return swift_release(KeyPath);
}

uint64_t sub_1000ACA60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (**v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  char v24;

  v3 = sub_100007E8C(&qword_10119FB40);
  __chkstk_darwin(v3);
  v5 = (uint64_t (**)(uint64_t))((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100007E8C(&qword_10119FB48);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  if ((Optional<A>.isOrthogonal(to:)(*(_BYTE *)v1, *(_BYTE *)(v1 + 1)) & 1) != 0)
  {
    v23 = *(_OWORD *)(v1 + 8);
    v24 = *(_BYTE *)(v1 + 24);
    v21 = *(_QWORD *)(v1 + 32);
    v22 = *(_BYTE *)(v1 + 40);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    v9 = *(unsigned __int8 *)(v7 + 80);
    v10 = (v9 + 57) & ~v9;
    v11 = (_OWORD *)swift_allocObject(&unk_1010B0478, v10 + v8, v9 | 7);
    v12 = *(_OWORD *)(v1 + 16);
    v11[1] = *(_OWORD *)v1;
    v11[2] = v12;
    *(_OWORD *)((char *)v11 + 41) = *(_OWORD *)(v1 + 25);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v11 + v10, (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    *v5 = sub_1000AEADC;
    v5[1] = (uint64_t (*)(uint64_t))v11;
    swift_storeEnumTagMultiPayload(v5, v3, 0);
    sub_1000AEB30((uint64_t)&v23);
    sub_1000AEB60(&v21);
    v13 = sub_100007E8C(&qword_10119FB50);
    v14 = sub_100049F28(&qword_10119FB58, &qword_10119FB50, (uint64_t)&protocol conformance descriptor for ScrollViewReader<A>);
    v15 = sub_100049F28(&qword_10119FB60, &qword_10119FB48, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    return _ConditionalContent<>.init(storage:)(v5, v13, v6, v14, v15);
  }
  else
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v17((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    v17((char *)v5, (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    swift_storeEnumTagMultiPayload(v5, v3, 1);
    v18 = sub_100007E8C(&qword_10119FB50);
    v19 = sub_100049F28(&qword_10119FB58, &qword_10119FB50, (uint64_t)&protocol conformance descriptor for ScrollViewReader<A>);
    v20 = sub_100049F28(&qword_10119FB60, &qword_10119FB48, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    _ConditionalContent<>.init(storage:)(v5, v18, v6, v19, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  }
}

uint64_t sub_1000ACCF0(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[6];

  v6 = Axis.Set.init(_:)(*a2);
  v10[2] = a3;
  v10[3] = a2;
  v10[4] = a1;
  v7 = sub_100007E8C(&qword_10119FB68);
  v8 = sub_1000AEB98();
  return ScrollView.init(_:showsIndicators:content:)(v6, 0, sub_1000AEB8C, v10, v7, v8);
}

uint64_t sub_1000ACD7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 (**v15)@<Q0>(uint64_t@<X0>, __n128 *@<X8>);
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;
  void (**v20)();
  uint64_t v22;
  char v23;
  __int128 v24;
  char v25;

  v8 = type metadata accessor for ScrollViewProxy(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = sub_100007E8C(&qword_10119FB80);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_10119FB48);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  v15 = (__n128 (**)@<Q0>(uint64_t@<X0>, __n128 *@<X8>))&v13[*(int *)(v11 + 36)];
  *v15 = sub_1000ACF4C;
  v15[1] = 0;
  v24 = *(_OWORD *)(a2 + 8);
  v25 = *(_BYTE *)(a2 + 24);
  v22 = *(_QWORD *)(a2 + 32);
  v23 = *(_BYTE *)(a2 + 40);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = (v16 + 57) & ~v16;
  v18 = (_OWORD *)swift_allocObject(&unk_1010B04A0, v17 + v10, v16 | 7);
  v19 = *(_OWORD *)(a2 + 16);
  v18[1] = *(_OWORD *)a2;
  v18[2] = v19;
  *(_OWORD *)((char *)v18 + 41) = *(_OWORD *)(a2 + 25);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))((char *)v18 + v17, (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  sub_10004A160((uint64_t)v13, a4, &qword_10119FB80);
  v20 = (void (**)())(a4 + *(int *)(sub_100007E8C(&qword_10119FB68) + 36));
  *v20 = sub_1000AED24;
  v20[1] = (void (*)())v18;
  v20[2] = 0;
  v20[3] = 0;
  sub_1000AEB30((uint64_t)&v24);
  sub_1000AEB60(&v22);
  return sub_10004FF60((uint64_t)v13, &qword_10119FB80);
}

__n128 sub_1000ACF4C@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  uint64_t KeyPath;
  uint64_t v7;
  __n128 result;
  __n128 v9;
  __n128 v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;

  sub_100065228(a1, (uint64_t)&v10, &qword_1011A22F0);
  v9 = v10;
  v3 = v11;
  v4 = v12;
  v5 = v13;
  KeyPath = swift_getKeyPath(&unk_100EA9790);
  v7 = swift_getKeyPath(&unk_100EA97B8);
  result = v9;
  *a2 = v9;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  a2[2].n128_u8[0] = v5;
  a2[2].n128_u64[1] = KeyPath;
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u8[8] = 0;
  a2[4].n128_u64[0] = v7;
  a2[4].n128_u8[8] = 0;
  return result;
}

void sub_1000ACFDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  double *v14;
  double v15;
  double v16;
  _BYTE v17[24];

  if ((*(_BYTE *)(a1 + 2) & 1) != 0)
  {
    v2 = *(_QWORD *)(a1 + 8);
    v3 = *(_QWORD *)(a1 + 16);
    v4 = *(_BYTE *)(a1 + 24);
    sub_1000A410C(v2, v3, v4);
    v5 = sub_100824224(v2, v3, v4);
    v7 = v6;
    sub_1000A4230(v2, v3, v4);
    if (v7)
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = *(_BYTE *)(a1 + 40);
      j__swift_retain(v8);
      v10 = sub_100824864(v8, v9);
      j__swift_release(v8);
      if (v10)
      {
        swift_beginAccess(v10 + 16, v17, 32, 0);
        v11 = *(_QWORD *)(v10 + 16);
        if (*(_QWORD *)(v11 + 16))
        {
          swift_bridgeObjectRetain();
          v12 = sub_10079C2C4(v5, v7);
          if ((v13 & 1) != 0)
          {
            v14 = (double *)(*(_QWORD *)(v11 + 56) + 16 * v12);
            v15 = *v14;
            v16 = v14[1];
            swift_endAccess(v17);
            swift_release(v10);
            swift_bridgeObjectRelease_n(v7, 2);
            ScrollViewProxy.setContentOffset(_:)(v15, v16);
          }
          else
          {
            swift_endAccess(v17);
            swift_release(v10);
            swift_bridgeObjectRelease_n(v7, 2);
          }
        }
        else
        {
          swift_endAccess(v17);
          swift_release(v10);
          swift_bridgeObjectRelease(v7);
        }
      }
      else
      {
        swift_bridgeObjectRelease(v7);
      }
    }
  }
}

double sub_1000AD174@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;

  v2 = sub_1000AE0F8();
  EnvironmentValues.subscript.getter(&v4, &_s19PersistentScrollKeyVN, &_s19PersistentScrollKeyVN, v2);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

uint64_t sub_1000AD1C0(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD v4[2];

  v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  v2 = sub_1000AE0F8();
  swift_bridgeObjectRetain();
  return EnvironmentValues.subscript.setter(v4, &_s19PersistentScrollKeyVN, &_s19PersistentScrollKeyVN, v2);
}

_QWORD *sub_1000AD21C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_1000AE0B4();
  result = EnvironmentValues.subscript.getter(&v4, &_s27PersistentScrollObserverKeyVN, &_s27PersistentScrollObserverKeyVN, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_1000AD268(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v3;

  v3 = *a1;
  v1 = sub_1000AE0B4();
  swift_retain(v3);
  return EnvironmentValues.subscript.setter(&v3, &_s27PersistentScrollObserverKeyVN, &_s27PersistentScrollObserverKeyVN, v1);
}

uint64_t sub_1000AD2C4(uint64_t a1)
{
  return sub_1000ACA60(a1);
}

void sub_1000AD2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v4;
  double v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v4 = *(double *)a2;
  v5 = *(double *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  v22[0] = 5;
  v7 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v7) & 1) == 0)
  {
    v8 = *(_QWORD *)(a3 + 64);
    v9 = *(_BYTE *)(a3 + 72);
    j__swift_retain(v8);
    v10 = sub_100824864(v8, v9);
    j__swift_release(v8);
    if (v10)
    {
      v11 = *(_QWORD *)(a3 + 40);
      v12 = *(_QWORD *)(a3 + 48);
      v13 = *(_BYTE *)(a3 + 56);
      sub_1000A410C(v11, v12, v13);
      v14 = sub_100824224(v11, v12, v13);
      v16 = v15;
      sub_1000A4230(v11, v12, v13);
      if (v16)
      {
        v17 = (uint64_t *)(v10 + 16);
        swift_beginAccess(v10 + 16, v22, 33, 0);
        swift_bridgeObjectRetain();
        if ((v6 & 1) != 0)
        {
          sub_1003AEB14(v14, v16);
          v18 = v16;
        }
        else
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v17);
          v21 = *v17;
          *v17 = 0x8000000000000000;
          sub_1005ECFD4(v14, v16, isUniquelyReferenced_nonNull_native, v4, v5);
          v20 = *v17;
          *v17 = v21;
          swift_bridgeObjectRelease(v16);
          v18 = v20;
        }
        swift_bridgeObjectRelease(v18);
        swift_endAccess(v22);
        swift_release(v10);
        swift_bridgeObjectRelease(v16);
      }
      else
      {
        swift_release(v10);
      }
    }
  }
}

uint64_t sub_1000AD494@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  _QWORD v21[2];
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  _BYTE v27[40];
  _QWORD v28[4];
  char v29;

  v3 = sub_100007E8C(&qword_10119FBB0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[3];
  v25 = v1[2];
  v26[0] = v7;
  *(_OWORD *)((char *)v26 + 9) = *(__int128 *)((char *)v1 + 57);
  v8 = v1[1];
  v23 = *v1;
  v24 = v8;
  sub_100065228((uint64_t)&v23, (uint64_t)v27, &qword_1011A22F0);
  sub_100065228((uint64_t)v27, (uint64_t)v28, &qword_1011A22F0);
  v9 = v28[0];
  v10 = v28[1];
  if (v29)
  {
    v9 = 0;
    v10 = 0;
  }
  v21[0] = v9;
  v21[1] = v10;
  v22 = v29;
  v11 = (_OWORD *)swift_allocObject(&unk_1010B0550, 89, 7);
  v12 = v26[0];
  v11[3] = v25;
  v11[4] = v12;
  *(_OWORD *)((char *)v11 + 73) = *(_OWORD *)((char *)v26 + 9);
  v13 = v24;
  v11[1] = v23;
  v11[2] = v13;
  sub_1000AF12C((uint64_t)&v23);
  v14 = sub_100007E8C(&qword_10119FBB8);
  v15 = sub_100007E8C(&qword_10119F058);
  v16 = sub_100049F28(&qword_10119FBC0, &qword_10119FBB8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v17 = sub_1000AF178(&qword_10119FBC8, &qword_10119F058, (void (*)(void))sub_1000AF1DC);
  View.onChange<A>(of:initial:_:)(v21, 0, sub_1000AF124, v11, v14, v15, v16, v17);
  v18 = swift_release(v11);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, __n128))(v4 + 32))(a1, v6, v3, v18);
}

uint64_t WeakValuesDictionary.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for PersistentScrollObserver()
{
  return objc_opt_self(_TtC5Music24PersistentScrollObserver);
}

unint64_t sub_1000AD6A8()
{
  unint64_t result;

  result = qword_10119FA58;
  if (!qword_10119FA58)
  {
    result = swift_getWitnessTable(&unk_100EA9A40, &_s15ModuleLayoutKeyVN);
    atomic_store(result, (unint64_t *)&qword_10119FA58);
  }
  return result;
}

unint64_t sub_1000AD6EC()
{
  unint64_t result;

  result = qword_10119FA60;
  if (!qword_10119FA60)
  {
    result = swift_getWitnessTable(&unk_100EA9A08, &_s20ModuleViewContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_10119FA60);
  }
  return result;
}

double sub_1000AD730(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  double result;
  _BYTE v11[8];
  uint64_t v12;
  uint64_t v13;

  v11[0] = a1;
  v12 = a2;
  v13 = a3;
  v9 = type metadata accessor for ScrollViewBoundsConditionalModifier(0, a5, a7, a4);
  swift_retain();
  View.modifier<A>(_:)(v11, a4, v9, a6);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1000AD7B4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v39 = a3;
  v40 = a4;
  v42 = a2;
  v43 = a1;
  v47 = a7;
  v9 = type metadata accessor for ScrollViewBoundsConditionalModifier(255, a5, a6, a4);
  WitnessTable = swift_getWitnessTable(&unk_100EA9B70, v9);
  v11 = type metadata accessor for _ViewModifier_Content(0, v9, WitnessTable);
  v41 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v38 - v15;
  v45 = type metadata accessor for _ScrollViewBoundsModifier(255, a5, a6);
  v17 = type metadata accessor for ModifiedContent(0, v11, v45);
  v38 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v38 - v21;
  v46 = type metadata accessor for _ConditionalContent(0, v17, v11);
  v44 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v24 = (char *)&v38 - v23;
  v25 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v11);
  if ((v42 & 1) != 0)
  {
    View.scrollViewBoundsModifier<A>(transform:)(v39, v40, v11, a5, v25, a6);
    v26 = v45;
    v27 = swift_getWitnessTable(&protocol conformance descriptor for _ScrollViewBoundsModifier<A>, v45);
    v48 = v25;
    v49 = v27;
    v28 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
    sub_10081EB14((uint64_t)v20, v17, (uint64_t)v22);
    v29 = *(void (**)(char *, uint64_t))(v38 + 8);
    v29(v20, v17);
    sub_1000EA744((uint64_t)v22, v17, (uint64_t)v20);
    sub_100817130((uint64_t)v20, v17, v11, v28, v25);
    v29(v20, v17);
    v30 = v22;
    v31 = v17;
  }
  else
  {
    sub_10081EB14(v43, v11, (uint64_t)v16);
    sub_1000EA744((uint64_t)v16, v11, (uint64_t)v14);
    v26 = v45;
    v32 = swift_getWitnessTable(&protocol conformance descriptor for _ScrollViewBoundsModifier<A>, v45);
    v54 = v25;
    v55 = v32;
    v33 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
    sub_1008171F4((uint64_t)v14, v17, v11, v33, v25);
    v29 = *(void (**)(char *, uint64_t))(v41 + 8);
    v29(v14, v11);
    v30 = v16;
    v31 = v11;
  }
  v29(v30, v31);
  v34 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v11);
  v35 = swift_getWitnessTable(&protocol conformance descriptor for _ScrollViewBoundsModifier<A>, v26);
  v52 = v34;
  v53 = v35;
  v50 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v51 = v34;
  v36 = v46;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v46);
  sub_1000EA744((uint64_t)v24, v36, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v24, v36);
}

uint64_t sub_1000ADB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 *v3;

  return sub_1000AD7B4(a1, *v3, *((_QWORD *)v3 + 1), *((_QWORD *)v3 + 2), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1000ADB44(double *a1, double *a2)
{
  uint64_t v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;

  v4 = *(unsigned __int8 *)a2;
  v5 = Axis.rawValue.getter(*(unsigned __int8 *)a1);
  if (v5 != Axis.rawValue.getter(v4))
    return 0;
  if (a1[1] != a2[1] || a1[2] != a2[2])
    return 0;
  v7 = 0xE700000000000000;
  v8 = 0xE700000000000000;
  v9 = 0x656C69666F7270;
  if (*((_BYTE *)a1 + 24) != 1)
  {
    v9 = 0x747369747261;
    v8 = 0xE600000000000000;
  }
  if (*((_BYTE *)a1 + 24))
    v10 = v9;
  else
    v10 = 0x746C7561666564;
  if (*((_BYTE *)a1 + 24))
    v11 = v8;
  else
    v11 = 0xE700000000000000;
  v12 = 0x656C69666F7270;
  if (*((_BYTE *)a2 + 24) != 1)
  {
    v12 = 0x747369747261;
    v7 = 0xE600000000000000;
  }
  if (*((_BYTE *)a2 + 24))
    v13 = v12;
  else
    v13 = 0x746C7561666564;
  if (*((_BYTE *)a2 + 24))
    v14 = v7;
  else
    v14 = 0xE700000000000000;
  if (v10 == v13 && v11 == v14)
  {
    swift_bridgeObjectRelease_n(v11, 2);
LABEL_27:
    v16 = *(int *)(type metadata accessor for ModuleLayout.Context(0) + 28);
    return static DynamicTypeSize.== infix(_:_:)((char *)a1 + v16, (char *)a2 + v16);
  }
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v13, v14, 0);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) != 0)
    goto LABEL_27;
  return 0;
}

uint64_t sub_1000ADCB0(char a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  double v17;
  uint64_t v18;
  int v19;
  unsigned __int8 v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[3];
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[16];
  uint64_t v42;
  char v43;

  v5 = a1 & 1;
  v6 = type metadata accessor for GridItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v35 - v11;
  v13 = type metadata accessor for GridItem.Size(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (double *)((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = a3 + -88.0;
  sub_100065228(a2, (uint64_t)v36, &qword_10119FA68);
  if (v37 == 1)
  {
    v18 = sub_100007E8C(&qword_10119FA70);
    *(_OWORD *)(swift_allocObject(v18, ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72), *(unsigned __int8 *)(v7 + 80) | 7)+ 16) = xmmword_100EA7AA0;
    *(_OWORD *)v16 = xmmword_100EA9740;
    (*(void (**)(double *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for GridItem.Size.flexible(_:), v13);
    GridItem.init(_:spacing:alignment:)(v16, 0, 1, 0, 0, 1);
    return v5;
  }
  v38 = v36[0];
  v39 = v36[1];
  v40 = v36[2];
  v19 = Axis.rawValue.getter(v5);
  v20 = Axis.rawValue.getter(1);
  v21 = *((_QWORD *)&v39 + 1);
  v22 = fmax(*(double *)&v40, 1.0);
  v23 = floor(v22);
  if (v19 == v20)
    v24 = v23;
  else
    v24 = v22;
  v25 = *(double *)&v39;
  v26 = (v17 - *(double *)&v39 * (v24 + -1.0)) / v24;
  sub_100065228((uint64_t)&v38, (uint64_t)v41, &qword_10119FA78);
  result = sub_100065228((uint64_t)v41, (uint64_t)&v42, &qword_10119FA78);
  if ((v43 & 1) == 0)
  {
    if (__OFSUB__(v42, 1))
    {
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v26 = v26 * (double)v42 + v25 * (double)(v42 - 1);
  }
  if (!(_DWORD)v5)
  {
    *(_OWORD *)v16 = xmmword_100EA9730;
    v28 = (*(uint64_t (**)(double *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for GridItem.Size.flexible(_:), v13);
    v29 = static Alignment.top.getter(v28);
    GridItem.init(_:spacing:alignment:)(v16, v21, 0, v29, v30, 0);
    if (*((uint64_t *)&v40 + 1) <= 1)
      v31 = 1;
    else
      v31 = *((_QWORD *)&v40 + 1);
    sub_1000AC340((uint64_t)v10, v31);
    return v5;
  }
  *v16 = v26;
  v32 = (*(uint64_t (**)(double *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for GridItem.Size.fixed(_:), v13);
  v33 = static Alignment.top.getter(v32);
  result = GridItem.init(_:spacing:alignment:)(v16, *(_QWORD *)&v25, 0, v33, v34, 0);
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
    goto LABEL_20;
  if (v24 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v24 < 9.22337204e18)
  {
    sub_1000AC340((uint64_t)v12, (uint64_t)v24);
    return v5;
  }
LABEL_22:
  __break(1u);
  return result;
}

double sub_1000AE014@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;

  v2 = sub_1000AE0F8();
  EnvironmentValues.subscript.getter(&v4, &_s19PersistentScrollKeyVN, &_s19PersistentScrollKeyVN, v2);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

_QWORD *sub_1000AE064@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_1000AE0B4();
  result = EnvironmentValues.subscript.getter(&v4, &_s27PersistentScrollObserverKeyVN, &_s27PersistentScrollObserverKeyVN, v2);
  *a1 = v4;
  return result;
}

unint64_t sub_1000AE0B4()
{
  unint64_t result;

  result = qword_10119FA80;
  if (!qword_10119FA80)
  {
    result = swift_getWitnessTable(&unk_100EA9980, &_s27PersistentScrollObserverKeyVN);
    atomic_store(result, (unint64_t *)&qword_10119FA80);
  }
  return result;
}

unint64_t sub_1000AE0F8()
{
  unint64_t result;

  result = qword_10119FA88;
  if (!qword_10119FA88)
  {
    result = swift_getWitnessTable(&unk_100EA9948, &_s19PersistentScrollKeyVN);
    atomic_store(result, (unint64_t *)&qword_10119FA88);
  }
  return result;
}

ValueMetadata *_s19PersistentScrollKeyVMa()
{
  return &_s19PersistentScrollKeyVN;
}

ValueMetadata *_s27PersistentScrollObserverKeyVMa()
{
  return &_s27PersistentScrollObserverKeyVN;
}

ValueMetadata *type metadata accessor for ModuleLayout.Metrics()
{
  return &type metadata for ModuleLayout.Metrics;
}

ValueMetadata *_s20ModuleViewContextKeyVMa()
{
  return &_s20ModuleViewContextKeyVN;
}

ValueMetadata *_s15ModuleLayoutKeyVMa()
{
  return &_s15ModuleLayoutKeyVN;
}

double destroy for OrthogonalScrollingModifier(uint64_t a1)
{
  double result;

  sub_1000A4230(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  *(_QWORD *)&result = j__swift_release(*(_QWORD *)(a1 + 32)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for OrthogonalScrollingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1000A410C(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(v2 + 32);
  LOBYTE(v2) = *(_BYTE *)(v2 + 40);
  j__swift_retain(v7);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v2;
  return a1;
}

uint64_t assignWithCopy for OrthogonalScrollingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1000A410C(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1000A4230(v7, v8, v9);
  v10 = *(_QWORD *)(v2 + 32);
  LOBYTE(v2) = *(_BYTE *)(v2 + 40);
  j__swift_retain(v10);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 40) = v2;
  j__swift_release(v11);
  return a1;
}

__n128 initializeWithTake for OrthogonalScrollingModifier(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for OrthogonalScrollingModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1000A4230(v5, v6, v7);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v8;
  j__swift_release(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for OrthogonalScrollingModifier(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[41])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OrthogonalScrollingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrthogonalScrollingModifier()
{
  return &type metadata for OrthogonalScrollingModifier;
}

__n128 initializeWithCopy for ModuleViewContext(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ModuleViewContext(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[40])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ModuleViewContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModuleViewContext()
{
  return &type metadata for ModuleViewContext;
}

_QWORD *sub_1000AE4CC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v5 = *(int *)(a3 + 28);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1000AE564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = type metadata accessor for DynamicTypeSize(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_1000AE59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_1000AE608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_1000AE67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1000AE6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1000AE754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000AE760);
}

uint64_t sub_1000AE760(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1000AE7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000AE7E0);
}

_BYTE *sub_1000AE7E0(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ModuleLayout.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_10119FAF0;
  if (!qword_10119FAF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ModuleLayout.Context);
  return result;
}

uint64_t sub_1000AE88C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EA98A0;
  v4[1] = &unk_100EA98B8;
  v4[2] = &unk_100EA98D0;
  result = type metadata accessor for DynamicTypeSize(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for ModuleLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for ModuleLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for ModuleLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for ModuleLayout()
{
  return &type metadata for ModuleLayout;
}

uint64_t sub_1000AEA00(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F94D34, 1);
}

unint64_t sub_1000AEA10()
{
  unint64_t result;

  result = qword_10119FB38;
  if (!qword_10119FB38)
  {
    result = swift_getWitnessTable(&unk_100EA9920, &type metadata for ModuleViewContext);
    atomic_store(result, (unint64_t *)&qword_10119FB38);
  }
  return result;
}

uint64_t sub_1000AEA54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_100007E8C(&qword_10119FB48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 57) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  sub_1000A4230(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  v7 = j__swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000AEADC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_10119FB48) - 8) + 80);
  return sub_1000ACCF0(a1, (char *)(v1 + 16), v1 + ((v3 + 57) & ~v3));
}

uint64_t sub_1000AEB30(uint64_t a1)
{
  sub_1000A410C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

_QWORD *sub_1000AEB60(_QWORD *a1)
{
  j__swift_retain(*a1);
  return a1;
}

uint64_t sub_1000AEB8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1000ACD7C(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_1000AEB98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119FB70;
  if (!qword_10119FB70)
  {
    v1 = sub_100044B54(&qword_10119FB68);
    sub_1000AEC04();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119FB70);
  }
  return result;
}

unint64_t sub_1000AEC04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119FB78;
  if (!qword_10119FB78)
  {
    v1 = sub_100044B54(&qword_10119FB80);
    sub_100049F28(&qword_10119FB60, &qword_10119FB48, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(&qword_10119FB88, &qword_10119FB90, (uint64_t)&protocol conformance descriptor for _ScrollViewBoundsModifier2<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119FB78);
  }
  return result;
}

uint64_t sub_1000AECA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for ScrollViewProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 57) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  sub_1000A4230(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  v7 = j__swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1000AED24()
{
  uint64_t v0;

  type metadata accessor for ScrollViewProxy(0);
  sub_1000ACFDC(v0 + 16);
}

unint64_t sub_1000AED54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119FB98;
  if (!qword_10119FB98)
  {
    v1 = sub_100044B54(&qword_10119DCA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10119FB98);
  }
  return result;
}

double destroy for PersistentScrollObserverModifier(uint64_t a1)
{
  double result;

  sub_1000A4230(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  *(_QWORD *)&result = j__swift_release(*(_QWORD *)(a1 + 64)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for PersistentScrollObserverModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = a2;
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_BYTE *)(a2 + 56);
  sub_1000A410C(v5, v6, v7);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(v2 + 64);
  LOBYTE(v2) = *(_BYTE *)(v2 + 72);
  j__swift_retain(v8);
  *(_QWORD *)(a1 + 64) = v8;
  *(_BYTE *)(a1 + 72) = v2;
  return a1;
}

uint64_t assignWithCopy for PersistentScrollObserverModifier(uint64_t a1, __int128 *a2)
{
  __int128 *v2;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v2 = a2;
  v4 = *a2;
  v5 = a2[1];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)a2 + 6);
  v8 = *((_BYTE *)a2 + 56);
  sub_1000A410C(v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  sub_1000A4230(v9, v10, v11);
  v12 = *((_QWORD *)v2 + 8);
  LOBYTE(v2) = *((_BYTE *)v2 + 72);
  j__swift_retain(v12);
  v13 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 72) = (_BYTE)v2;
  j__swift_release(v13);
  return a1;
}

__n128 initializeWithTake for PersistentScrollObserverModifier(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for PersistentScrollObserverModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v5;
  sub_1000A4230(v6, v7, v8);
  v9 = *(_BYTE *)(a2 + 72);
  v10 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = v9;
  j__swift_release(v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersistentScrollObserverModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PersistentScrollObserverModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersistentScrollObserverModifier()
{
  return &type metadata for PersistentScrollObserverModifier;
}

unint64_t sub_1000AF044()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119FBA0;
  if (!qword_10119FBA0)
  {
    v1 = sub_100044B54(&qword_10119FBA8);
    sub_100049F28(&qword_10119FB58, &qword_10119FB50, (uint64_t)&protocol conformance descriptor for ScrollViewReader<A>);
    sub_100049F28(&qword_10119FB60, &qword_10119FB48, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10119FBA0);
  }
  return result;
}

uint64_t sub_1000AF0E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F94DB8, 1);
}

uint64_t sub_1000AF0F0()
{
  uint64_t v0;

  sub_1000A4230(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  j__swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 89, 7);
}

void sub_1000AF124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1000AD2FC(a1, a2, v2 + 16);
}

uint64_t sub_1000AF12C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 64);
  sub_1000A410C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  j__swift_retain(v2);
  return a1;
}

uint64_t sub_1000AF178(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000AF1DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119FBD0[0];
  if (!qword_10119FBD0[0])
  {
    type metadata accessor for CGPoint(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CGPoint, v1);
    atomic_store(result, qword_10119FBD0);
  }
  return result;
}

uint64_t type metadata accessor for ScrollViewBoundsConditionalModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScrollViewBoundsConditionalModifier);
}

uint64_t sub_1000AF238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t _s10ImportViewVwxx(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 16));
}

uint64_t _s10ImportViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t _s10ManagementO4ViewV10ModerationO6ButtonVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t _s10ManagementO4ViewV10ModerationO6ButtonVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for Artwork.Caching(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Artwork.Caching(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1000AF380()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_10119FBB8);
  v1[1] = sub_100044B54(&qword_10119F058);
  v1[2] = sub_100049F28(&qword_10119FBC0, &qword_10119FBB8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v1[3] = sub_1000AF178(&qword_10119FBC8, &qword_10119F058, (void (*)(void))sub_1000AF1DC);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_1000AF420(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100F94E00, 1);
}

uint64_t sub_1000AF454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_1000AF480(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for ScrollViewBoundsConditionalModifier(255, *a1, v5, a4);
  WitnessTable = swift_getWitnessTable(&unk_100EA9B70, v6);
  v8 = type metadata accessor for _ViewModifier_Content(255, v6, WitnessTable);
  v9 = type metadata accessor for _ScrollViewBoundsModifier(255, v4, v5);
  v10 = type metadata accessor for ModifiedContent(255, v8, v9);
  v11 = type metadata accessor for _ConditionalContent(255, v10, v8);
  swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for _ScrollViewBoundsModifier<A>, v9);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11);
}

uint64_t sub_1000AF574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v16;
  int v17;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for MusicSiriRepresentation.Kind(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for MusicSiriRepresentation.Kind.album(_:))
  {
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.album(_:);
LABEL_8:
    v10 = *v9;
    v11 = type metadata accessor for IntentMediaItem.ItemType(0);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104);
    v13 = a1;
    v14 = v10;
    return v12(v13, v14, v11);
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.artist(_:))
  {
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.artist(_:);
    goto LABEL_8;
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.composer(_:)
    || v8 == enum case for MusicSiriRepresentation.Kind.curator(_:))
  {
    goto LABEL_7;
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.editorialItem(_:))
  {
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.unknown(_:);
    goto LABEL_8;
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.genre(_:))
  {
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.genre(_:);
    goto LABEL_8;
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.musicMovie(_:))
  {
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.movie(_:);
    goto LABEL_8;
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.musicVideo(_:))
  {
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.musicVideo(_:);
    goto LABEL_8;
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.playlist(_:))
  {
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.playlist(_:);
    goto LABEL_8;
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.playlistEntry(_:)
    || v8 == enum case for MusicSiriRepresentation.Kind.radioShow(_:)
    || v8 == enum case for MusicSiriRepresentation.Kind.recordLabel(_:))
  {
    goto LABEL_7;
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.song(_:))
  {
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.song(_:);
    goto LABEL_8;
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.station(_:))
  {
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.station(_:);
    goto LABEL_8;
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.tvEpisode(_:))
  {
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.tvShowEpisode(_:);
    goto LABEL_8;
  }
  v16 = v8;
  if (v8 == enum case for MusicSiriRepresentation.Kind.tvSeason(_:))
    goto LABEL_7;
  if (v8 == enum case for MusicSiriRepresentation.Kind.tvShow(_:))
  {
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.tvShow(_:);
    goto LABEL_8;
  }
  if (v8 == enum case for MusicSiriRepresentation.Kind.uploadedAudio(_:))
  {
LABEL_7:
    v9 = (unsigned int *)&enum case for IntentMediaItem.ItemType.music(_:);
    goto LABEL_8;
  }
  v17 = enum case for MusicSiriRepresentation.Kind.uploadedVideo(_:);
  v11 = type metadata accessor for IntentMediaItem.ItemType(0);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104);
  if (v16 != v17)
  {
    v12(a1, enum case for IntentMediaItem.ItemType.unknown(_:), v11);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v14 = enum case for IntentMediaItem.ItemType.music(_:);
  v13 = a1;
  return v12(v13, v14, v11);
}

uint64_t sub_1000AF884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;

  v3[76] = a3;
  v3[75] = a2;
  v3[74] = a1;
  v4 = sub_100007E8C(&qword_10119FC60);
  v3[77] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[78] = v5;
  v3[79] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119FC68);
  v3[80] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[81] = v7;
  v3[82] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119FC70);
  v3[83] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[84] = v9;
  v3[85] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119FC78);
  v3[86] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[87] = v11;
  v3[88] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119FC80);
  v3[89] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[90] = v13;
  v3[91] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_10119FC88);
  v3[92] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[93] = v15;
  v3[94] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_10119FC90);
  v3[95] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[96] = v17;
  v3[97] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_10119FC98);
  v3[98] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v3[99] = v19;
  v3[100] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_10119FCA0);
  v3[101] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v3[102] = v21;
  v3[103] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_10119FCA8);
  v3[104] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v3[105] = v23;
  v3[106] = swift_task_alloc((*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_10119FCB0);
  v3[107] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v3[108] = v25;
  v3[109] = swift_task_alloc((*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C(&qword_10119FCB8);
  v3[110] = v26;
  v27 = *(_QWORD *)(v26 - 8);
  v3[111] = v27;
  v3[112] = swift_task_alloc((*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C(&qword_10119FCC0);
  v3[113] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v3[114] = v29;
  v3[115] = swift_task_alloc((*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100007E8C(&qword_10119FCC8);
  v3[116] = v30;
  v31 = *(_QWORD *)(v30 - 8);
  v3[117] = v31;
  v3[118] = swift_task_alloc((*(_QWORD *)(v31 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_10119FCD0);
  v3[119] = v32;
  v33 = *(_QWORD *)(v32 - 8);
  v3[120] = v33;
  v3[121] = swift_task_alloc((*(_QWORD *)(v33 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007E8C(&qword_10119FCD8);
  v3[122] = v34;
  v35 = *(_QWORD *)(v34 - 8);
  v3[123] = v35;
  v3[124] = swift_task_alloc((*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007E8C((uint64_t *)&unk_1011C7310);
  v3[125] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v36 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100007E8C((uint64_t *)&unk_1011ACE60);
  v3[126] = v37;
  v38 = *(_QWORD *)(v37 - 8);
  v3[127] = v38;
  v3[128] = swift_task_alloc((*(_QWORD *)(v38 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for Composer(0);
  v3[129] = v39;
  v40 = *(_QWORD *)(v39 - 8);
  v3[130] = v40;
  v3[131] = swift_task_alloc((*(_QWORD *)(v40 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_10119FCE0);
  v3[132] = v41;
  v42 = *(_QWORD *)(v41 - 8);
  v3[133] = v42;
  v3[134] = swift_task_alloc((*(_QWORD *)(v42 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100007E8C(&qword_10119FCE8);
  v3[135] = v43;
  v44 = *(_QWORD *)(v43 - 8);
  v3[136] = v44;
  v3[137] = swift_task_alloc((*(_QWORD *)(v44 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100007E8C(&qword_10119FCF0);
  v3[138] = v45;
  v46 = *(_QWORD *)(v45 - 8);
  v3[139] = v46;
  v3[140] = swift_task_alloc((*(_QWORD *)(v46 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_10119FCF8);
  v3[141] = v47;
  v48 = *(_QWORD *)(v47 - 8);
  v3[142] = v48;
  v3[143] = swift_task_alloc((*(_QWORD *)(v48 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100007E8C(&qword_10119FD00);
  v3[144] = v49;
  v50 = *(_QWORD *)(v49 - 8);
  v3[145] = v50;
  v3[146] = swift_task_alloc((*(_QWORD *)(v50 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100007E8C(&qword_10119FD08);
  v3[147] = v51;
  v52 = *(_QWORD *)(v51 - 8);
  v3[148] = v52;
  v3[149] = swift_task_alloc((*(_QWORD *)(v52 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for MusicSiriRepresentation.Kind(0);
  v3[150] = v53;
  v54 = *(_QWORD *)(v53 - 8);
  v3[151] = v54;
  v55 = (*(_QWORD *)(v54 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[152] = swift_task_alloc(v55);
  v3[153] = swift_task_alloc(v55);
  v3[154] = swift_task_alloc(v55);
  v3[155] = swift_task_alloc(v55);
  v3[156] = swift_task_alloc(v55);
  v56 = type metadata accessor for Logger(0);
  v3[157] = v56;
  v57 = *(_QWORD *)(v56 - 8);
  v3[158] = v57;
  v3[159] = swift_task_alloc((*(_QWORD *)(v57 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100007E8C(&qword_10119FD10);
  v3[160] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v58 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100007E8C(&qword_10119FD18);
  v3[161] = v59;
  v60 = *(_QWORD *)(v59 - 8);
  v3[162] = v60;
  v3[163] = swift_task_alloc((*(_QWORD *)(v60 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for UploadedVideo(0);
  v3[164] = v61;
  v62 = *(_QWORD *)(v61 - 8);
  v3[165] = v62;
  v3[166] = swift_task_alloc((*(_QWORD *)(v62 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_10119FD20);
  v3[167] = v63;
  v64 = *(_QWORD *)(v63 - 8);
  v3[168] = v64;
  v3[169] = swift_task_alloc((*(_QWORD *)(v64 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_10119FD28);
  v3[170] = v65;
  v66 = *(_QWORD *)(v65 - 8);
  v3[171] = v66;
  v3[172] = swift_task_alloc((*(_QWORD *)(v66 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_10119FD30);
  v3[173] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v67 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100007E8C(&qword_10119FD38);
  v3[174] = v68;
  v69 = *(_QWORD *)(v68 - 8);
  v3[175] = v69;
  v3[176] = swift_task_alloc((*(_QWORD *)(v69 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for UploadedAudio(0);
  v3[177] = v70;
  v71 = *(_QWORD *)(v70 - 8);
  v3[178] = v71;
  v3[179] = swift_task_alloc((*(_QWORD *)(v71 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C(&qword_10119FD40);
  v3[180] = v72;
  v73 = *(_QWORD *)(v72 - 8);
  v3[181] = v73;
  v3[182] = swift_task_alloc((*(_QWORD *)(v73 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100007E8C(&qword_10119FD48);
  v3[183] = v74;
  v75 = *(_QWORD *)(v74 - 8);
  v3[184] = v75;
  v3[185] = swift_task_alloc((*(_QWORD *)(v75 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D1410) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[186] = swift_task_alloc(v76);
  v3[187] = swift_task_alloc(v76);
  v77 = sub_100007E8C(&qword_10119FD50);
  v3[188] = v77;
  v78 = *(_QWORD *)(v77 - 8);
  v3[189] = v78;
  v79 = (*(_QWORD *)(v78 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[190] = swift_task_alloc(v79);
  v3[191] = swift_task_alloc(v79);
  v80 = type metadata accessor for TVShow(0);
  v3[192] = v80;
  v81 = *(_QWORD *)(v80 - 8);
  v3[193] = v81;
  v82 = (*(_QWORD *)(v81 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[194] = swift_task_alloc(v82);
  v3[195] = swift_task_alloc(v82);
  v83 = sub_100007E8C(&qword_10119FD58);
  v3[196] = v83;
  v84 = *(_QWORD *)(v83 - 8);
  v3[197] = v84;
  v3[198] = swift_task_alloc((*(_QWORD *)(v84 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100007E8C(&qword_10119FD60);
  v3[199] = v85;
  v86 = *(_QWORD *)(v85 - 8);
  v3[200] = v86;
  v3[201] = swift_task_alloc((*(_QWORD *)(v86 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C7320) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[202] = swift_task_alloc(v87);
  v3[203] = swift_task_alloc(v87);
  v88 = sub_100007E8C(&qword_10119FD68);
  v3[204] = v88;
  v89 = *(_QWORD *)(v88 - 8);
  v3[205] = v89;
  v90 = (*(_QWORD *)(v89 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[206] = swift_task_alloc(v90);
  v3[207] = swift_task_alloc(v90);
  v91 = type metadata accessor for TVSeason(0);
  v3[208] = v91;
  v92 = *(_QWORD *)(v91 - 8);
  v3[209] = v92;
  v93 = (*(_QWORD *)(v92 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[210] = swift_task_alloc(v93);
  v3[211] = swift_task_alloc(v93);
  v94 = sub_100007E8C(&qword_10119FD70);
  v3[212] = v94;
  v95 = *(_QWORD *)(v94 - 8);
  v3[213] = v95;
  v3[214] = swift_task_alloc((*(_QWORD *)(v95 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100007E8C(&qword_10119FD78);
  v3[215] = v96;
  v97 = *(_QWORD *)(v96 - 8);
  v3[216] = v97;
  v3[217] = swift_task_alloc((*(_QWORD *)(v97 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119FD80) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[218] = swift_task_alloc(v98);
  v3[219] = swift_task_alloc(v98);
  v99 = sub_100007E8C(&qword_1011BEB40);
  v3[220] = v99;
  v100 = *(_QWORD *)(v99 - 8);
  v3[221] = v100;
  v101 = (*(_QWORD *)(v100 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[222] = swift_task_alloc(v101);
  v3[223] = swift_task_alloc(v101);
  v102 = type metadata accessor for TVEpisode(0);
  v3[224] = v102;
  v103 = *(_QWORD *)(v102 - 8);
  v3[225] = v103;
  v104 = (*(_QWORD *)(v103 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[226] = swift_task_alloc(v104);
  v3[227] = swift_task_alloc(v104);
  v105 = sub_100007E8C(&qword_10119FD88);
  v3[228] = v105;
  v106 = *(_QWORD *)(v105 - 8);
  v3[229] = v106;
  v3[230] = swift_task_alloc((*(_QWORD *)(v106 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100007E8C(&qword_10119FD90);
  v3[231] = v107;
  v108 = *(_QWORD *)(v107 - 8);
  v3[232] = v108;
  v3[233] = swift_task_alloc((*(_QWORD *)(v108 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100007E8C(&qword_10119FD98);
  v3[234] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v109 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100007E8C(&qword_10119FDA0);
  v3[235] = v110;
  v111 = *(_QWORD *)(v110 - 8);
  v3[236] = v111;
  v3[237] = swift_task_alloc((*(_QWORD *)(v111 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for Station(0);
  v3[238] = v112;
  v113 = *(_QWORD *)(v112 - 8);
  v3[239] = v113;
  v3[240] = swift_task_alloc((*(_QWORD *)(v113 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100007E8C(&qword_10119FDA8);
  v3[241] = v114;
  v115 = *(_QWORD *)(v114 - 8);
  v3[242] = v115;
  v3[243] = swift_task_alloc((*(_QWORD *)(v115 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C(&qword_10119FDB0);
  v3[244] = v116;
  v117 = *(_QWORD *)(v116 - 8);
  v3[245] = v117;
  v3[246] = swift_task_alloc((*(_QWORD *)(v117 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E480) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[247] = swift_task_alloc(v118);
  v3[248] = swift_task_alloc(v118);
  v119 = sub_100007E8C((uint64_t *)&unk_1011B8DA0);
  v3[249] = v119;
  v120 = *(_QWORD *)(v119 - 8);
  v3[250] = v120;
  v121 = (*(_QWORD *)(v120 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[251] = swift_task_alloc(v121);
  v3[252] = swift_task_alloc(v121);
  v122 = type metadata accessor for Song(0);
  v3[253] = v122;
  v123 = *(_QWORD *)(v122 - 8);
  v3[254] = v123;
  v124 = (*(_QWORD *)(v123 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[255] = swift_task_alloc(v124);
  v3[256] = swift_task_alloc(v124);
  v125 = sub_100007E8C(&qword_1011A9330);
  v3[257] = v125;
  v126 = *(_QWORD *)(v125 - 8);
  v3[258] = v126;
  v3[259] = swift_task_alloc((*(_QWORD *)(v126 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100007E8C((uint64_t *)&unk_1011A9320);
  v3[260] = v127;
  v128 = *(_QWORD *)(v127 - 8);
  v3[261] = v128;
  v3[262] = swift_task_alloc((*(_QWORD *)(v128 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_100007E8C(&qword_10119FDB8);
  v3[263] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v129 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100007E8C((uint64_t *)&unk_1011D0B50);
  v3[264] = v130;
  v131 = *(_QWORD *)(v130 - 8);
  v3[265] = v131;
  v3[266] = swift_task_alloc((*(_QWORD *)(v131 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for RecordLabel(0);
  v3[267] = v132;
  v133 = *(_QWORD *)(v132 - 8);
  v3[268] = v133;
  v3[269] = swift_task_alloc((*(_QWORD *)(v133 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_100007E8C(&qword_10119FDC0);
  v3[270] = v134;
  v135 = *(_QWORD *)(v134 - 8);
  v3[271] = v135;
  v3[272] = swift_task_alloc((*(_QWORD *)(v135 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100007E8C(&qword_10119FDC8);
  v3[273] = v136;
  v137 = *(_QWORD *)(v136 - 8);
  v3[274] = v137;
  v3[275] = swift_task_alloc((*(_QWORD *)(v137 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100007E8C((uint64_t *)&unk_1011D0BC0);
  v3[276] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v138 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_100007E8C(&qword_10119FDD0);
  v3[277] = v139;
  v140 = *(_QWORD *)(v139 - 8);
  v3[278] = v140;
  v3[279] = swift_task_alloc((*(_QWORD *)(v140 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for RadioShow(0);
  v3[280] = v141;
  v142 = *(_QWORD *)(v141 - 8);
  v3[281] = v142;
  v3[282] = swift_task_alloc((*(_QWORD *)(v142 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_100007E8C(&qword_10119FDD8);
  v3[283] = v143;
  v144 = *(_QWORD *)(v143 - 8);
  v3[284] = v144;
  v3[285] = swift_task_alloc((*(_QWORD *)(v144 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100007E8C(&qword_10119FDE0);
  v3[286] = v145;
  v146 = *(_QWORD *)(v145 - 8);
  v3[287] = v146;
  v3[288] = swift_task_alloc((*(_QWORD *)(v146 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[289] = swift_task_alloc(v147);
  v3[290] = swift_task_alloc(v147);
  v148 = sub_100007E8C((uint64_t *)&unk_1011ACAD0);
  v3[291] = v148;
  v149 = *(_QWORD *)(v148 - 8);
  v3[292] = v149;
  v150 = (*(_QWORD *)(v149 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[293] = swift_task_alloc(v150);
  v3[294] = swift_task_alloc(v150);
  v151 = type metadata accessor for Playlist(0);
  v3[295] = v151;
  v152 = *(_QWORD *)(v151 - 8);
  v3[296] = v152;
  v153 = (*(_QWORD *)(v152 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[297] = swift_task_alloc(v153);
  v3[298] = swift_task_alloc(v153);
  v154 = sub_100007E8C((uint64_t *)&unk_1011D1070);
  v3[299] = v154;
  v155 = *(_QWORD *)(v154 - 8);
  v3[300] = v155;
  v3[301] = swift_task_alloc((*(_QWORD *)(v155 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_100007E8C(&qword_10119FDE8);
  v3[302] = v156;
  v157 = *(_QWORD *)(v156 - 8);
  v3[303] = v157;
  v3[304] = swift_task_alloc((*(_QWORD *)(v157 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119D3A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[305] = swift_task_alloc(v158);
  v3[306] = swift_task_alloc(v158);
  v159 = sub_100007E8C((uint64_t *)&unk_1011CEA10);
  v3[307] = v159;
  v160 = *(_QWORD *)(v159 - 8);
  v3[308] = v160;
  v161 = (*(_QWORD *)(v160 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[309] = swift_task_alloc(v161);
  v3[310] = swift_task_alloc(v161);
  v162 = type metadata accessor for MusicMovie(0);
  v3[311] = v162;
  v163 = *(_QWORD *)(v162 - 8);
  v3[312] = v163;
  v164 = (*(_QWORD *)(v163 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[313] = swift_task_alloc(v164);
  v3[314] = swift_task_alloc(v164);
  v165 = sub_100007E8C(&qword_10119FDF0);
  v3[315] = v165;
  v166 = *(_QWORD *)(v165 - 8);
  v3[316] = v166;
  v3[317] = swift_task_alloc((*(_QWORD *)(v166 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_100007E8C(&qword_10119FDF8);
  v3[318] = v167;
  v168 = *(_QWORD *)(v167 - 8);
  v3[319] = v168;
  v3[320] = swift_task_alloc((*(_QWORD *)(v168 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011B59B0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[321] = swift_task_alloc(v169);
  v3[322] = swift_task_alloc(v169);
  v170 = sub_100007E8C((uint64_t *)&unk_1011CF3D0);
  v3[323] = v170;
  v171 = *(_QWORD *)(v170 - 8);
  v3[324] = v171;
  v172 = (*(_QWORD *)(v171 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[325] = swift_task_alloc(v172);
  v3[326] = swift_task_alloc(v172);
  v173 = type metadata accessor for MusicVideo(0);
  v3[327] = v173;
  v174 = *(_QWORD *)(v173 - 8);
  v3[328] = v174;
  v175 = (*(_QWORD *)(v174 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[329] = swift_task_alloc(v175);
  v3[330] = swift_task_alloc(v175);
  v176 = sub_100007E8C(&qword_10119FE00);
  v3[331] = v176;
  v177 = *(_QWORD *)(v176 - 8);
  v3[332] = v177;
  v3[333] = swift_task_alloc((*(_QWORD *)(v177 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_100007E8C(&qword_10119FE08);
  v3[334] = v178;
  v179 = *(_QWORD *)(v178 - 8);
  v3[335] = v179;
  v3[336] = swift_task_alloc((*(_QWORD *)(v179 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119ED08) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[337] = swift_task_alloc(v180);
  v3[338] = swift_task_alloc(v180);
  v181 = sub_100007E8C((uint64_t *)&unk_1011ACAE0);
  v3[339] = v181;
  v182 = *(_QWORD *)(v181 - 8);
  v3[340] = v182;
  v183 = (*(_QWORD *)(v182 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[341] = swift_task_alloc(v183);
  v3[342] = swift_task_alloc(v183);
  v184 = type metadata accessor for Genre(0);
  v3[343] = v184;
  v185 = *(_QWORD *)(v184 - 8);
  v3[344] = v185;
  v186 = (*(_QWORD *)(v185 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[345] = swift_task_alloc(v186);
  v3[346] = swift_task_alloc(v186);
  v187 = sub_100007E8C(&qword_10119FE10);
  v3[347] = v187;
  v188 = *(_QWORD *)(v187 - 8);
  v3[348] = v188;
  v3[349] = swift_task_alloc((*(_QWORD *)(v188 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = sub_100007E8C(&qword_10119FE18);
  v3[350] = v189;
  v190 = *(_QWORD *)(v189 - 8);
  v3[351] = v190;
  v3[352] = swift_task_alloc((*(_QWORD *)(v190 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = sub_100007E8C(&qword_1011A33F0);
  v3[353] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v191 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = sub_100007E8C(&qword_10119FE20);
  v3[354] = v192;
  v193 = *(_QWORD *)(v192 - 8);
  v3[355] = v193;
  v3[356] = swift_task_alloc((*(_QWORD *)(v193 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = type metadata accessor for Curator(0);
  v3[357] = v194;
  v195 = *(_QWORD *)(v194 - 8);
  v3[358] = v195;
  v3[359] = swift_task_alloc((*(_QWORD *)(v195 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = sub_100007E8C(&qword_10119FE28);
  v3[360] = v196;
  v197 = *(_QWORD *)(v196 - 8);
  v3[361] = v197;
  v3[362] = swift_task_alloc((*(_QWORD *)(v197 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_100007E8C(&qword_10119FE30);
  v3[363] = v198;
  v199 = *(_QWORD *)(v198 - 8);
  v3[364] = v199;
  v3[365] = swift_task_alloc((*(_QWORD *)(v199 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3FB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[366] = swift_task_alloc(v200);
  v3[367] = swift_task_alloc(v200);
  v201 = sub_100007E8C((uint64_t *)&unk_1011B6950);
  v3[368] = v201;
  v202 = *(_QWORD *)(v201 - 8);
  v3[369] = v202;
  v203 = (*(_QWORD *)(v202 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[370] = swift_task_alloc(v203);
  v3[371] = swift_task_alloc(v203);
  v204 = type metadata accessor for Artist(0);
  v3[372] = v204;
  v205 = *(_QWORD *)(v204 - 8);
  v3[373] = v205;
  v206 = (*(_QWORD *)(v205 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[374] = swift_task_alloc(v206);
  v3[375] = swift_task_alloc(v206);
  v207 = sub_100007E8C(&qword_10119FE38);
  v3[376] = v207;
  v208 = *(_QWORD *)(v207 - 8);
  v3[377] = v208;
  v3[378] = swift_task_alloc((*(_QWORD *)(v208 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_100007E8C(&qword_10119FE40);
  v3[379] = v209;
  v210 = *(_QWORD *)(v209 - 8);
  v3[380] = v210;
  v3[381] = swift_task_alloc((*(_QWORD *)(v210 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[382] = swift_task_alloc(v211);
  v3[383] = swift_task_alloc(v211);
  v212 = sub_100007E8C(&qword_1011A3D80);
  v3[384] = v212;
  v213 = *(_QWORD *)(v212 - 8);
  v3[385] = v213;
  v214 = (*(_QWORD *)(v213 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[386] = swift_task_alloc(v214);
  v3[387] = swift_task_alloc(v214);
  v215 = type metadata accessor for Album(0);
  v3[388] = v215;
  v216 = *(_QWORD *)(v215 - 8);
  v3[389] = v216;
  v217 = (*(_QWORD *)(v216 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[390] = swift_task_alloc(v217);
  v3[391] = swift_task_alloc(v217);
  v218 = sub_100007E8C(&qword_10119FE48);
  v3[392] = v218;
  v219 = *(_QWORD *)(v218 - 8);
  v3[393] = v219;
  v3[394] = swift_task_alloc((*(_QWORD *)(v219 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v220 = type metadata accessor for MusicDataRequest.Source(0);
  v3[395] = v220;
  v221 = *(_QWORD *)(v220 - 8);
  v3[396] = v221;
  v3[397] = swift_task_alloc((*(_QWORD *)(v221 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = sub_100007E8C((uint64_t *)&unk_1011B6BB0);
  v3[398] = v222;
  v223 = *(_QWORD *)(v222 - 8);
  v3[399] = v223;
  v3[400] = swift_task_alloc((*(_QWORD *)(v223 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = type metadata accessor for MusicSiriRepresentation.ParsedIdentifier(0);
  v3[401] = v224;
  v225 = *(_QWORD *)(v224 - 8);
  v3[402] = v225;
  v226 = (*(_QWORD *)(v225 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[403] = swift_task_alloc(v226);
  v3[404] = swift_task_alloc(v226);
  v3[405] = swift_task_alloc(v226);
  v3[406] = swift_task_alloc(v226);
  return swift_task_switch(sub_1000B0CE0, 0, 0);
}

uint64_t sub_1000B0CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __n128 v50;
  void (*v51)(uint64_t, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  NSObject *v185;
  os_log_type_t v186;
  _BOOL4 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint8_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  __n128 v196;
  void (*v197)(uint64_t, uint64_t, __n128);
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  _QWORD *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  NSObject *v274;
  os_log_type_t v275;
  _BOOL4 v276;
  uint8_t *v277;
  uint64_t v278;
  __n128 v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453[3];

  static MusicSiriRepresentation.parse(_:)(*(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 608));
  v1 = *(_QWORD *)(v0 + 3240);
  v2 = *(_QWORD *)(v0 + 3216);
  v3 = *(_QWORD *)(v0 + 3208);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v4(v1, *(_QWORD *)(v0 + 3248), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v5 != enum case for MusicSiriRepresentation.ParsedIdentifier.catalog(_:))
  {
    if (v5 == enum case for MusicSiriRepresentation.ParsedIdentifier.library(_:))
    {
      v20 = *(char **)(v0 + 3240);
      v21 = *(_QWORD *)(v0 + 1248);
      v22 = *(_QWORD *)(v0 + 1240);
      v23 = *(_QWORD *)(v0 + 1208);
      v24 = *(_QWORD *)(v0 + 1200);
      (*(void (**)(char *, _QWORD))(*(_QWORD *)(v0 + 3216) + 96))(v20, *(_QWORD *)(v0 + 3208));
      v25 = *(_QWORD *)v20;
      *(_QWORD *)(v0 + 3544) = *(_QWORD *)v20;
      swift_bridgeObjectRelease();
      v26 = sub_100007E8C(&qword_10119FE50);
      (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v21, &v20[*(int *)(v26 + 64)], v24);
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
      *(_QWORD *)(v0 + 3552) = v27;
      v27(v22, v21, v24);
      v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v22, v24);
      if (v28 == enum case for MusicSiriRepresentation.Kind.album(_:))
      {
        v29 = *(_QWORD *)(v0 + 1176);
        MusicLibraryRequest.init()(*(_QWORD *)(v0 + 3104), &protocol witness table for Album);
        KeyPath = swift_getKeyPath(&unk_100EA9D58);
        *(_QWORD *)(v0 + 472) = v25;
        v31 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        *(_QWORD *)(v0 + 416) = MusicItemID.init(_:)(v31, v32);
        *(_QWORD *)(v0 + 424) = v33;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(KeyPath, v0 + 416, v29, &protocol witness table for MusicItemID);
        swift_release();
        swift_bridgeObjectRelease();
        v34 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 3560) = v34;
        *v34 = v0;
        v34[1] = sub_1000C0FC4;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 1168), *(_QWORD *)(v0 + 1176));
      }
      if (v28 == enum case for MusicSiriRepresentation.Kind.artist(_:))
      {
        v61 = *(_QWORD *)(v0 + 1128);
        MusicLibraryRequest.init()(*(_QWORD *)(v0 + 2976), &protocol witness table for Artist);
        v62 = swift_getKeyPath(&unk_100EA9D30);
        *(_QWORD *)(v0 + 584) = v25;
        v63 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        *(_QWORD *)(v0 + 384) = MusicItemID.init(_:)(v63, v64);
        *(_QWORD *)(v0 + 392) = v65;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v62, v0 + 384, v61, &protocol witness table for MusicItemID);
        swift_release();
        swift_bridgeObjectRelease();
        v66 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 3576) = v66;
        *v66 = v0;
        v66[1] = sub_1000C1C88;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 1120), *(_QWORD *)(v0 + 1128));
      }
      if (v28 == enum case for MusicSiriRepresentation.Kind.composer(_:))
      {
        v82 = *(_QWORD *)(v0 + 1080);
        v83 = *(_QWORD *)(v0 + 1032);
        v84 = sub_100048748(&qword_1011A3B80, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
        MusicLibraryRequest.init()(v83, v84);
        v85 = swift_getKeyPath(&unk_100EA9D08);
        *(_QWORD *)(v0 + 488) = v25;
        v86 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        *(_QWORD *)(v0 + 352) = MusicItemID.init(_:)(v86, v87);
        *(_QWORD *)(v0 + 360) = v88;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v85, v0 + 352, v82, &protocol witness table for MusicItemID);
        swift_release();
        swift_bridgeObjectRelease();
        v89 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 3592) = v89;
        *v89 = v0;
        v89[1] = sub_1000C294C;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 1080));
      }
      if (v28 == enum case for MusicSiriRepresentation.Kind.genre(_:))
      {
        v97 = *(_QWORD *)(v0 + 976);
        MusicLibraryRequest.init()(*(_QWORD *)(v0 + 2744), &protocol witness table for Genre);
        v98 = swift_getKeyPath(&unk_100EA9CE0);
        *(_QWORD *)(v0 + 496) = v25;
        v99 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        *(_QWORD *)(v0 + 320) = MusicItemID.init(_:)(v99, v100);
        *(_QWORD *)(v0 + 328) = v101;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v98, v0 + 320, v97, &protocol witness table for MusicItemID);
        swift_release();
        swift_bridgeObjectRelease();
        v102 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 3608) = v102;
        *v102 = v0;
        v102[1] = sub_1000C3618;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 968), *(_QWORD *)(v0 + 976));
      }
      if (v28 == enum case for MusicSiriRepresentation.Kind.musicMovie(_:))
      {
        v103 = *(_QWORD *)(v0 + 2488);
        v104 = *(_QWORD *)(v0 + 928);
        v105 = sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
        MusicLibraryRequest.init()(v103, v105);
        v106 = swift_getKeyPath(&unk_100EA9CB8);
        *(_QWORD *)(v0 + 504) = v25;
        v107 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        *(_QWORD *)(v0 + 288) = MusicItemID.init(_:)(v107, v108);
        *(_QWORD *)(v0 + 296) = v109;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v106, v0 + 288, v104, &protocol witness table for MusicItemID);
        swift_release();
        swift_bridgeObjectRelease();
        v110 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 3624) = v110;
        *v110 = v0;
        v110[1] = sub_1000C42DC;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 920), *(_QWORD *)(v0 + 928));
      }
      if (v28 == enum case for MusicSiriRepresentation.Kind.musicVideo(_:))
      {
        v118 = *(_QWORD *)(v0 + 880);
        MusicLibraryRequest.init()(*(_QWORD *)(v0 + 2616), &protocol witness table for MusicVideo);
        v119 = swift_getKeyPath(&unk_100EA9C90);
        *(_QWORD *)(v0 + 512) = v25;
        v120 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        *(_QWORD *)(v0 + 256) = MusicItemID.init(_:)(v120, v121);
        *(_QWORD *)(v0 + 264) = v122;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v119, v0 + 256, v118, &protocol witness table for MusicItemID);
        swift_release();
        swift_bridgeObjectRelease();
        v123 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 3640) = v123;
        *v123 = v0;
        v123[1] = sub_1000C4FA0;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 872), *(_QWORD *)(v0 + 880));
      }
      if (v28 == enum case for MusicSiriRepresentation.Kind.playlist(_:))
      {
        v124 = *(_QWORD *)(v0 + 832);
        MusicLibraryRequest.init()(*(_QWORD *)(v0 + 2360), &protocol witness table for Playlist);
        v125 = swift_getKeyPath(&unk_100EA9C68);
        *(_QWORD *)(v0 + 520) = v25;
        v126 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        *(_QWORD *)(v0 + 224) = MusicItemID.init(_:)(v126, v127);
        *(_QWORD *)(v0 + 232) = v128;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v125, v0 + 224, v124, &protocol witness table for MusicItemID);
        swift_release();
        swift_bridgeObjectRelease();
        v129 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 3656) = v129;
        *v129 = v0;
        v129[1] = sub_1000C5C64;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 824), *(_QWORD *)(v0 + 832));
      }
      if (v28 == enum case for MusicSiriRepresentation.Kind.song(_:))
      {
        v137 = *(_QWORD *)(v0 + 784);
        MusicLibraryRequest.init()(*(_QWORD *)(v0 + 2024), &protocol witness table for Song);
        v138 = swift_getKeyPath(&unk_100EA9C40);
        *(_QWORD *)(v0 + 528) = v25;
        v139 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        *(_QWORD *)(v0 + 192) = MusicItemID.init(_:)(v139, v140);
        *(_QWORD *)(v0 + 200) = v141;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v138, v0 + 192, v137, &protocol witness table for MusicItemID);
        swift_release();
        swift_bridgeObjectRelease();
        v142 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 3672) = v142;
        *v142 = v0;
        v142[1] = sub_1000C6928;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 776), *(_QWORD *)(v0 + 784));
      }
      if (v28 == enum case for MusicSiriRepresentation.Kind.tvEpisode(_:))
      {
        v143 = *(_QWORD *)(v0 + 1792);
        v144 = *(_QWORD *)(v0 + 736);
        v145 = sub_100048748(&qword_10119FE68, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
        MusicLibraryRequest.init()(v143, v145);
        v146 = swift_getKeyPath(&unk_100EA9C18);
        *(_QWORD *)(v0 + 536) = v25;
        v147 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        *(_QWORD *)(v0 + 160) = MusicItemID.init(_:)(v147, v148);
        *(_QWORD *)(v0 + 168) = v149;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v146, v0 + 160, v144, &protocol witness table for MusicItemID);
        swift_release();
        swift_bridgeObjectRelease();
        v150 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 3688) = v150;
        *v150 = v0;
        v150[1] = sub_1000C75EC;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));
      }
      if (v28 == enum case for MusicSiriRepresentation.Kind.tvSeason(_:))
      {
        v158 = *(_QWORD *)(v0 + 1664);
        v159 = *(_QWORD *)(v0 + 688);
        v160 = sub_100048748(&qword_10119FE60, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
        MusicLibraryRequest.init()(v158, v160);
        v161 = swift_getKeyPath(&unk_100EA9BF0);
        *(_QWORD *)(v0 + 544) = v25;
        v162 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        *(_QWORD *)(v0 + 128) = MusicItemID.init(_:)(v162, v163);
        *(_QWORD *)(v0 + 136) = v164;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v161, v0 + 128, v159, &protocol witness table for MusicItemID);
        swift_release();
        swift_bridgeObjectRelease();
        v165 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 3704) = v165;
        *v165 = v0;
        v165[1] = sub_1000C82B0;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 680), *(_QWORD *)(v0 + 688));
      }
      if (v28 == enum case for MusicSiriRepresentation.Kind.tvShow(_:))
      {
        v166 = *(_QWORD *)(v0 + 1536);
        v167 = *(_QWORD *)(v0 + 640);
        v168 = sub_100048748(&qword_10119FE58, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
        MusicLibraryRequest.init()(v166, v168);
        v169 = swift_getKeyPath(&unk_100EA9BC8);
        *(_QWORD *)(v0 + 568) = v25;
        v170 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        *(_QWORD *)(v0 + 64) = MusicItemID.init(_:)(v170, v171);
        *(_QWORD *)(v0 + 72) = v172;
        MusicLibraryRequest.filter<A>(matching:equalTo:)(v169, v0 + 64, v167, &protocol witness table for MusicItemID);
        swift_release();
        swift_bridgeObjectRelease();
        v173 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
        *(_QWORD *)(v0 + 3720) = v173;
        *v173 = v0;
        v173[1] = sub_1000C8F74;
        return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 640));
      }
      if (qword_10119BFA8 != -1)
        swift_once(&qword_10119BFA8, sub_1003E0090);
      v181 = *(_QWORD *)(v0 + 1248);
      v182 = *(_QWORD *)(v0 + 1232);
      v183 = *(_QWORD *)(v0 + 1200);
      sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
      v184 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v27)(v182, v181, v183);
      v185 = Logger.logObject.getter(v184);
      v186 = static os_log_type_t.error.getter(v185);
      v187 = os_log_type_enabled(v185, v186);
      v432 = *(_QWORD *)(v0 + 3208);
      v451 = *(_QWORD *)(v0 + 3248);
      v418 = *(_QWORD *)(v0 + 1248);
      v421 = *(_QWORD *)(v0 + 3216);
      v188 = *(_QWORD *)(v0 + 1232);
      if (v187)
      {
        v189 = *(_QWORD *)(v0 + 1224);
        v415 = *(_QWORD *)(v0 + 1208);
        v190 = *(_QWORD *)(v0 + 1200);
        v191 = (uint8_t *)swift_slowAlloc(12, -1);
        v192 = swift_slowAlloc(32, -1);
        v453[0] = v192;
        *(_DWORD *)v191 = 136446210;
        v27(v189, v188, v190);
        v193 = v190;
        v194 = String.init<A>(describing:)(v189, v190);
        *(_QWORD *)(v0 + 576) = sub_100322200(v194, v195, v453);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 576, v0 + 584);
        v196 = swift_bridgeObjectRelease();
        v197 = *(void (**)(uint64_t, uint64_t, __n128))(v415 + 8);
        v197(v188, v193, v196);
        _os_log_impl((void *)&_mh_execute_header, v185, v186, "Unsupported library kind: \"%{public}s\"", v191, 0xCu);
        swift_arrayDestroy(v192, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v192, -1, -1);
        swift_slowDealloc(v191, -1, -1);

        v198 = v418;
        v199 = v193;
      }
      else
      {
        v200 = *(_QWORD *)(v0 + 1208);
        v201 = *(_QWORD *)(v0 + 1200);

        v197 = *(void (**)(uint64_t, uint64_t, __n128))(v200 + 8);
        ((void (*)(uint64_t, uint64_t))v197)(v188, v201);
        v198 = v418;
        v199 = v201;
      }
      ((void (*)(uint64_t, uint64_t))v197)(v198, v199);
      (*(void (**)(uint64_t, uint64_t))(v421 + 8))(v451, v432);
      v202 = *(_QWORD *)(v0 + 1240);
      v203 = *(_QWORD *)(v0 + 1200);
      v204 = *(_QWORD *)(v0 + 592);
      v205 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v205 - 8) + 56))(v204, 1, 1, v205);
      ((void (*)(uint64_t, uint64_t))v197)(v202, v203);
    }
    else
    {
      if (qword_10119BFA8 != -1)
        swift_once(&qword_10119BFA8, sub_1003E0090);
      v35 = *(_QWORD *)(v0 + 3248);
      v36 = *(_QWORD *)(v0 + 3232);
      v37 = *(_QWORD *)(v0 + 3208);
      sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
      v38 = v4(v36, v35, v37);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.error.getter(v39);
      v41 = os_log_type_enabled(v39, v40);
      v42 = *(_QWORD *)(v0 + 3248);
      v43 = *(_QWORD *)(v0 + 3232);
      if (v41)
      {
        v44 = *(_QWORD *)(v0 + 3224);
        v428 = *(_QWORD *)(v0 + 3216);
        v45 = *(_QWORD *)(v0 + 3208);
        v46 = (uint8_t *)swift_slowAlloc(12, -1);
        v444 = v42;
        v453[0] = swift_slowAlloc(32, -1);
        v47 = v453[0];
        *(_DWORD *)v46 = 136446210;
        v4(v44, v43, v45);
        v48 = String.init<A>(describing:)(v44, v45);
        *(_QWORD *)(v0 + 480) = sub_100322200(v48, v49, v453);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 480, v0 + 488);
        v50 = swift_bridgeObjectRelease();
        v51 = *(void (**)(uint64_t, uint64_t, __n128))(v428 + 8);
        v51(v43, v45, v50);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Unknown parsed id type: %{public}s", v46, 0xCu);
        swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v47, -1, -1);
        swift_slowDealloc(v46, -1, -1);

        v52 = v444;
        v53 = v45;
      }
      else
      {
        v67 = *(_QWORD *)(v0 + 3216);
        v68 = *(_QWORD *)(v0 + 3208);

        v51 = *(void (**)(uint64_t, uint64_t, __n128))(v67 + 8);
        ((void (*)(uint64_t, uint64_t))v51)(v43, v68);
        v52 = v42;
        v53 = v68;
      }
      ((void (*)(uint64_t, uint64_t))v51)(v52, v53);
      v69 = *(_QWORD *)(v0 + 3240);
      v70 = *(_QWORD *)(v0 + 3208);
      v71 = *(_QWORD *)(v0 + 592);
      v72 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v71, 1, 1, v72);
      ((void (*)(uint64_t, uint64_t))v51)(v69, v70);
    }
LABEL_21:
    v73 = *(_QWORD *)(v0 + 3240);
    v74 = *(_QWORD *)(v0 + 3232);
    v75 = *(_QWORD *)(v0 + 3224);
    v76 = *(_QWORD *)(v0 + 3200);
    v77 = *(_QWORD *)(v0 + 3176);
    v78 = *(_QWORD *)(v0 + 3152);
    v79 = *(_QWORD *)(v0 + 3128);
    v80 = *(_QWORD *)(v0 + 3120);
    v81 = *(_QWORD *)(v0 + 3096);
    v282 = *(_QWORD *)(v0 + 3088);
    v283 = *(_QWORD *)(v0 + 3064);
    v284 = *(_QWORD *)(v0 + 3056);
    v285 = *(_QWORD *)(v0 + 3048);
    v286 = *(_QWORD *)(v0 + 3024);
    v287 = *(_QWORD *)(v0 + 3000);
    v288 = *(_QWORD *)(v0 + 2992);
    v289 = *(_QWORD *)(v0 + 2968);
    v290 = *(_QWORD *)(v0 + 2960);
    v291 = *(_QWORD *)(v0 + 2936);
    v292 = *(_QWORD *)(v0 + 2928);
    v293 = *(_QWORD *)(v0 + 2920);
    v294 = *(_QWORD *)(v0 + 2896);
    v295 = *(_QWORD *)(v0 + 2872);
    v296 = *(_QWORD *)(v0 + 2848);
    v297 = *(_QWORD *)(v0 + 2824);
    v298 = *(_QWORD *)(v0 + 2816);
    v299 = *(_QWORD *)(v0 + 2792);
    v300 = *(_QWORD *)(v0 + 2768);
    v301 = *(_QWORD *)(v0 + 2760);
    v302 = *(_QWORD *)(v0 + 2736);
    v303 = *(_QWORD *)(v0 + 2728);
    v304 = *(_QWORD *)(v0 + 2704);
    v305 = *(_QWORD *)(v0 + 2696);
    v306 = *(_QWORD *)(v0 + 2688);
    v307 = *(_QWORD *)(v0 + 2664);
    v308 = *(_QWORD *)(v0 + 2640);
    v309 = *(_QWORD *)(v0 + 2632);
    v310 = *(_QWORD *)(v0 + 2608);
    v311 = *(_QWORD *)(v0 + 2600);
    v312 = *(_QWORD *)(v0 + 2576);
    v313 = *(_QWORD *)(v0 + 2568);
    v314 = *(_QWORD *)(v0 + 2560);
    v315 = *(_QWORD *)(v0 + 2536);
    v316 = *(_QWORD *)(v0 + 2512);
    v317 = *(_QWORD *)(v0 + 2504);
    v318 = *(_QWORD *)(v0 + 2480);
    v319 = *(_QWORD *)(v0 + 2472);
    v320 = *(_QWORD *)(v0 + 2448);
    v321 = *(_QWORD *)(v0 + 2440);
    v322 = *(_QWORD *)(v0 + 2432);
    v323 = *(_QWORD *)(v0 + 2408);
    v324 = *(_QWORD *)(v0 + 2384);
    v325 = *(_QWORD *)(v0 + 2376);
    v326 = *(_QWORD *)(v0 + 2352);
    v327 = *(_QWORD *)(v0 + 2344);
    v328 = *(_QWORD *)(v0 + 2320);
    v329 = *(_QWORD *)(v0 + 2312);
    v330 = *(_QWORD *)(v0 + 2304);
    v331 = *(_QWORD *)(v0 + 2280);
    v332 = *(_QWORD *)(v0 + 2256);
    v333 = *(_QWORD *)(v0 + 2232);
    v334 = *(_QWORD *)(v0 + 2208);
    v335 = *(_QWORD *)(v0 + 2200);
    v336 = *(_QWORD *)(v0 + 2176);
    v337 = *(_QWORD *)(v0 + 2152);
    v338 = *(_QWORD *)(v0 + 2128);
    v339 = *(_QWORD *)(v0 + 2104);
    v340 = *(_QWORD *)(v0 + 2096);
    v341 = *(_QWORD *)(v0 + 2072);
    v342 = *(_QWORD *)(v0 + 2048);
    v343 = *(_QWORD *)(v0 + 2040);
    v344 = *(_QWORD *)(v0 + 2016);
    v345 = *(_QWORD *)(v0 + 2008);
    v346 = *(_QWORD *)(v0 + 1984);
    v347 = *(_QWORD *)(v0 + 1976);
    v348 = *(_QWORD *)(v0 + 1968);
    v349 = *(_QWORD *)(v0 + 1944);
    v350 = *(_QWORD *)(v0 + 1920);
    v351 = *(_QWORD *)(v0 + 1896);
    v352 = *(_QWORD *)(v0 + 1872);
    v353 = *(_QWORD *)(v0 + 1864);
    v354 = *(_QWORD *)(v0 + 1840);
    v355 = *(_QWORD *)(v0 + 1816);
    v356 = *(_QWORD *)(v0 + 1808);
    v357 = *(_QWORD *)(v0 + 1784);
    v358 = *(_QWORD *)(v0 + 1776);
    v359 = *(_QWORD *)(v0 + 1752);
    v360 = *(_QWORD *)(v0 + 1744);
    v361 = *(_QWORD *)(v0 + 1736);
    v362 = *(_QWORD *)(v0 + 1712);
    v363 = *(_QWORD *)(v0 + 1688);
    v364 = *(_QWORD *)(v0 + 1680);
    v365 = *(_QWORD *)(v0 + 1656);
    v366 = *(_QWORD *)(v0 + 1648);
    v367 = *(_QWORD *)(v0 + 1624);
    v368 = *(_QWORD *)(v0 + 1616);
    v369 = *(_QWORD *)(v0 + 1608);
    v370 = *(_QWORD *)(v0 + 1584);
    v371 = *(_QWORD *)(v0 + 1560);
    v372 = *(_QWORD *)(v0 + 1552);
    v373 = *(_QWORD *)(v0 + 1528);
    v374 = *(_QWORD *)(v0 + 1520);
    v375 = *(_QWORD *)(v0 + 1496);
    v376 = *(_QWORD *)(v0 + 1488);
    v377 = *(_QWORD *)(v0 + 1480);
    v378 = *(_QWORD *)(v0 + 1456);
    v379 = *(_QWORD *)(v0 + 1432);
    v380 = *(_QWORD *)(v0 + 1408);
    v381 = *(_QWORD *)(v0 + 1384);
    v382 = *(_QWORD *)(v0 + 1376);
    v383 = *(_QWORD *)(v0 + 1352);
    v384 = *(_QWORD *)(v0 + 1328);
    v385 = *(_QWORD *)(v0 + 1304);
    v386 = *(_QWORD *)(v0 + 1280);
    v387 = *(_QWORD *)(v0 + 1272);
    v388 = *(_QWORD *)(v0 + 1248);
    v389 = *(_QWORD *)(v0 + 1240);
    v390 = *(_QWORD *)(v0 + 1232);
    v391 = *(_QWORD *)(v0 + 1224);
    v392 = *(_QWORD *)(v0 + 1216);
    v393 = *(_QWORD *)(v0 + 1192);
    v394 = *(_QWORD *)(v0 + 1168);
    v395 = *(_QWORD *)(v0 + 1144);
    v396 = *(_QWORD *)(v0 + 1120);
    v397 = *(_QWORD *)(v0 + 1096);
    v398 = *(_QWORD *)(v0 + 1072);
    v399 = *(_QWORD *)(v0 + 1048);
    v400 = *(_QWORD *)(v0 + 1024);
    v401 = *(_QWORD *)(v0 + 1000);
    v402 = *(_QWORD *)(v0 + 992);
    v403 = *(_QWORD *)(v0 + 968);
    v404 = *(_QWORD *)(v0 + 944);
    v405 = *(_QWORD *)(v0 + 920);
    v406 = *(_QWORD *)(v0 + 896);
    v407 = *(_QWORD *)(v0 + 872);
    v408 = *(_QWORD *)(v0 + 848);
    v409 = *(_QWORD *)(v0 + 824);
    v410 = *(_QWORD *)(v0 + 800);
    v411 = *(_QWORD *)(v0 + 776);
    v412 = *(_QWORD *)(v0 + 752);
    v414 = *(_QWORD *)(v0 + 728);
    v417 = *(_QWORD *)(v0 + 704);
    v420 = *(_QWORD *)(v0 + 680);
    v429 = *(_QWORD *)(v0 + 656);
    v446 = *(_QWORD *)(v0 + 632);
    swift_task_dealloc(*(_QWORD *)(v0 + 3248));
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v282);
    swift_task_dealloc(v283);
    swift_task_dealloc(v284);
    swift_task_dealloc(v285);
    swift_task_dealloc(v286);
    swift_task_dealloc(v287);
    swift_task_dealloc(v288);
    swift_task_dealloc(v289);
    swift_task_dealloc(v290);
    swift_task_dealloc(v291);
    swift_task_dealloc(v292);
    swift_task_dealloc(v293);
    swift_task_dealloc(v294);
    swift_task_dealloc(v295);
    swift_task_dealloc(v296);
    swift_task_dealloc(v297);
    swift_task_dealloc(v298);
    swift_task_dealloc(v299);
    swift_task_dealloc(v300);
    swift_task_dealloc(v301);
    swift_task_dealloc(v302);
    swift_task_dealloc(v303);
    swift_task_dealloc(v304);
    swift_task_dealloc(v305);
    swift_task_dealloc(v306);
    swift_task_dealloc(v307);
    swift_task_dealloc(v308);
    swift_task_dealloc(v309);
    swift_task_dealloc(v310);
    swift_task_dealloc(v311);
    swift_task_dealloc(v312);
    swift_task_dealloc(v313);
    swift_task_dealloc(v314);
    swift_task_dealloc(v315);
    swift_task_dealloc(v316);
    swift_task_dealloc(v317);
    swift_task_dealloc(v318);
    swift_task_dealloc(v319);
    swift_task_dealloc(v320);
    swift_task_dealloc(v321);
    swift_task_dealloc(v322);
    swift_task_dealloc(v323);
    swift_task_dealloc(v324);
    swift_task_dealloc(v325);
    swift_task_dealloc(v326);
    swift_task_dealloc(v327);
    swift_task_dealloc(v328);
    swift_task_dealloc(v329);
    swift_task_dealloc(v330);
    swift_task_dealloc(v331);
    swift_task_dealloc(v332);
    swift_task_dealloc(v333);
    swift_task_dealloc(v334);
    swift_task_dealloc(v335);
    swift_task_dealloc(v336);
    swift_task_dealloc(v337);
    swift_task_dealloc(v338);
    swift_task_dealloc(v339);
    swift_task_dealloc(v340);
    swift_task_dealloc(v341);
    swift_task_dealloc(v342);
    swift_task_dealloc(v343);
    swift_task_dealloc(v344);
    swift_task_dealloc(v345);
    swift_task_dealloc(v346);
    swift_task_dealloc(v347);
    swift_task_dealloc(v348);
    swift_task_dealloc(v349);
    swift_task_dealloc(v350);
    swift_task_dealloc(v351);
    swift_task_dealloc(v352);
    swift_task_dealloc(v353);
    swift_task_dealloc(v354);
    swift_task_dealloc(v355);
    swift_task_dealloc(v356);
    swift_task_dealloc(v357);
    swift_task_dealloc(v358);
    swift_task_dealloc(v359);
    swift_task_dealloc(v360);
    swift_task_dealloc(v361);
    swift_task_dealloc(v362);
    swift_task_dealloc(v363);
    swift_task_dealloc(v364);
    swift_task_dealloc(v365);
    swift_task_dealloc(v366);
    swift_task_dealloc(v367);
    swift_task_dealloc(v368);
    swift_task_dealloc(v369);
    swift_task_dealloc(v370);
    swift_task_dealloc(v371);
    swift_task_dealloc(v372);
    swift_task_dealloc(v373);
    swift_task_dealloc(v374);
    swift_task_dealloc(v375);
    swift_task_dealloc(v376);
    swift_task_dealloc(v377);
    swift_task_dealloc(v378);
    swift_task_dealloc(v379);
    swift_task_dealloc(v380);
    swift_task_dealloc(v381);
    swift_task_dealloc(v382);
    swift_task_dealloc(v383);
    swift_task_dealloc(v384);
    swift_task_dealloc(v385);
    swift_task_dealloc(v386);
    swift_task_dealloc(v387);
    swift_task_dealloc(v388);
    swift_task_dealloc(v389);
    swift_task_dealloc(v390);
    swift_task_dealloc(v391);
    swift_task_dealloc(v392);
    swift_task_dealloc(v393);
    swift_task_dealloc(v394);
    swift_task_dealloc(v395);
    swift_task_dealloc(v396);
    swift_task_dealloc(v397);
    swift_task_dealloc(v398);
    swift_task_dealloc(v399);
    swift_task_dealloc(v400);
    swift_task_dealloc(v401);
    swift_task_dealloc(v402);
    swift_task_dealloc(v403);
    swift_task_dealloc(v404);
    swift_task_dealloc(v405);
    swift_task_dealloc(v406);
    swift_task_dealloc(v407);
    swift_task_dealloc(v408);
    swift_task_dealloc(v409);
    swift_task_dealloc(v410);
    swift_task_dealloc(v411);
    swift_task_dealloc(v412);
    swift_task_dealloc(v414);
    swift_task_dealloc(v417);
    swift_task_dealloc(v420);
    swift_task_dealloc(v429);
    swift_task_dealloc(v446);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(uint64_t **)(v0 + 3240);
  (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 3216) + 96))(v6, *(_QWORD *)(v0 + 3208));
  v7 = *v6;
  *(_QWORD *)(v0 + 3256) = *v6;
  v8 = v6[1];
  *(_QWORD *)(v0 + 3264) = v8;
  v9 = v6[2];
  *(_QWORD *)(v0 + 3272) = v9;
  v10 = v6[3];
  *(_QWORD *)(v0 + 3280) = v10;
  if (v9 == 0x736D75626C61 && v10 == 0xE600000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x736D75626C61, 0xE600000000000000, v9, v10, 0) & 1) != 0)
  {
    v443 = *(_QWORD *)(v0 + 3184);
    v11 = *(_QWORD *)(v0 + 3176);
    v12 = *(_QWORD *)(v0 + 3168);
    v13 = v8;
    v14 = *(_QWORD *)(v0 + 3160);
    v15 = *(_QWORD *)(v0 + 3104);
    v16 = swift_getKeyPath(&unk_100EA9FD8);
    *(_QWORD *)(v0 + 16) = v7;
    *(_QWORD *)(v0 + 24) = v13;
    v17 = sub_100048748(&qword_10119F200, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v16, v0 + 16, v15, &protocol witness table for Album, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, enum case for MusicDataRequest.Source.appIntents(_:), v14);
    MusicCatalogResourceRequest.source.setter(v11, v443);
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3288) = v18;
    *v18 = v0;
    v18[1] = sub_1000B42C4;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 3152), *(_QWORD *)(v0 + 3184));
  }
  if (v9 == 0x73747369747261 && v10 == 0xE700000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x73747369747261, 0xE700000000000000, v9, v10, 0) & 1) != 0)
  {
    v54 = *(_QWORD *)(v0 + 3176);
    v55 = *(_QWORD *)(v0 + 3168);
    v56 = *(_QWORD *)(v0 + 3160);
    v445 = *(_QWORD *)(v0 + 3032);
    v57 = *(_QWORD *)(v0 + 2976);
    v58 = swift_getKeyPath(&unk_100EA9FB0);
    *(_QWORD *)(v0 + 32) = v7;
    *(_QWORD *)(v0 + 40) = v8;
    v59 = sub_100048748(&qword_10119FEF8, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v58, v0 + 32, v57, &protocol witness table for Artist, v59);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v54, enum case for MusicDataRequest.Source.appIntents(_:), v56);
    MusicCatalogResourceRequest.source.setter(v54, v445);
    v60 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3304) = v60;
    *v60 = v0;
    v60[1] = sub_1000B4F94;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 3024), *(_QWORD *)(v0 + 3032));
  }
  if (v9 == 0x75632D656C707061 && v10 == 0xEE0073726F746172
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x75632D656C707061, 0xEE0073726F746172, v9, v10, 0) & 1) != 0)
  {
    v90 = *(_QWORD *)(v0 + 3176);
    v91 = *(_QWORD *)(v0 + 3168);
    v92 = *(_QWORD *)(v0 + 3160);
    v447 = *(_QWORD *)(v0 + 2904);
    v93 = *(_QWORD *)(v0 + 2856);
    v94 = swift_getKeyPath(&unk_100EA9F88);
    *(_QWORD *)(v0 + 48) = v7;
    *(_QWORD *)(v0 + 56) = v8;
    v95 = sub_100048748(&qword_10119FEF0, (uint64_t (*)(uint64_t))&type metadata accessor for Curator, (uint64_t)&protocol conformance descriptor for Curator);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v94, v0 + 48, v93, &protocol witness table for Curator, v95);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v91 + 104))(v90, enum case for MusicDataRequest.Source.appIntents(_:), v92);
    MusicCatalogResourceRequest.source.setter(v90, v447);
    v96 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3320) = v96;
    *v96 = v0;
    v96[1] = sub_1000B5C64;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 2896), *(_QWORD *)(v0 + 2904));
  }
  if (v9 == 0x7365726E6567 && v10 == 0xE600000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7365726E6567, 0xE600000000000000, v9, v10, 0) & 1) != 0)
  {
    v111 = *(_QWORD *)(v0 + 3176);
    v112 = *(_QWORD *)(v0 + 3168);
    v113 = *(_QWORD *)(v0 + 3160);
    v448 = *(_QWORD *)(v0 + 2800);
    v114 = *(_QWORD *)(v0 + 2744);
    v115 = swift_getKeyPath(&unk_100EA9F60);
    *(_QWORD *)(v0 + 80) = v7;
    *(_QWORD *)(v0 + 88) = v8;
    v116 = sub_100048748(&qword_10119FEE8, (uint64_t (*)(uint64_t))&type metadata accessor for Genre, (uint64_t)&protocol conformance descriptor for Genre);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v115, v0 + 80, v114, &protocol witness table for Genre, v116);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v112 + 104))(v111, enum case for MusicDataRequest.Source.appIntents(_:), v113);
    MusicCatalogResourceRequest.source.setter(v111, v448);
    v117 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3336) = v117;
    *v117 = v0;
    v117[1] = sub_1000B6934;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 2792), *(_QWORD *)(v0 + 2800));
  }
  if (v9 == 0x69762D636973756DLL && v10 == 0xEC000000736F6564
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x69762D636973756DLL, 0xEC000000736F6564, v9, v10, 0) & 1) != 0)
  {
    v130 = *(_QWORD *)(v0 + 3176);
    v131 = *(_QWORD *)(v0 + 3168);
    v132 = *(_QWORD *)(v0 + 3160);
    v449 = *(_QWORD *)(v0 + 2672);
    v133 = *(_QWORD *)(v0 + 2616);
    v134 = swift_getKeyPath(&unk_100EA9F38);
    *(_QWORD *)(v0 + 96) = v7;
    *(_QWORD *)(v0 + 104) = v8;
    v135 = sub_100048748(&qword_10119EB70, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v134, v0 + 96, v133, &protocol witness table for MusicVideo, v135);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v131 + 104))(v130, enum case for MusicDataRequest.Source.appIntents(_:), v132);
    MusicCatalogResourceRequest.source.setter(v130, v449);
    v136 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3352) = v136;
    *v136 = v0;
    v136[1] = sub_1000B7604;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 2664), *(_QWORD *)(v0 + 2672));
  }
  if (v9 == 0x6F6D2D636973756DLL && v10 == 0xEC00000073656976
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6F6D2D636973756DLL, 0xEC00000073656976, v9, v10, 0) & 1) != 0)
  {
    v151 = *(_QWORD *)(v0 + 3176);
    v152 = *(_QWORD *)(v0 + 3168);
    v430 = *(_QWORD *)(v0 + 3160);
    v450 = *(_QWORD *)(v0 + 2544);
    v153 = *(_QWORD *)(v0 + 2488);
    v154 = swift_getKeyPath(&unk_100EA9F10);
    *(_QWORD *)(v0 + 112) = v7;
    *(_QWORD *)(v0 + 120) = v8;
    v155 = sub_100048748(&qword_10119FED8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
    v156 = sub_100048748(&qword_10119FEE0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v154, v0 + 112, v153, v155, v156);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v152 + 104))(v151, enum case for MusicDataRequest.Source.appIntents(_:), v430);
    MusicCatalogResourceRequest.source.setter(v151, v450);
    v157 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3368) = v157;
    *v157 = v0;
    v157[1] = sub_1000B82D4;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 2536), *(_QWORD *)(v0 + 2544));
  }
  if (v9 == 0x7473696C79616C70 && v10 == 0xE900000000000073
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7473696C79616C70, 0xE900000000000073, v9, v10, 0) & 1) != 0)
  {
    v174 = *(_QWORD *)(v0 + 3176);
    v175 = *(_QWORD *)(v0 + 3168);
    v176 = *(_QWORD *)(v0 + 3160);
    v431 = *(_QWORD *)(v0 + 2416);
    v177 = *(_QWORD *)(v0 + 2360);
    v178 = swift_getKeyPath(&unk_100EA9EE8);
    *(_QWORD *)(v0 + 144) = v7;
    *(_QWORD *)(v0 + 152) = v8;
    v179 = sub_100048748((unint64_t *)&unk_1011D0D80, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v178, v0 + 144, v177, &protocol witness table for Playlist, v179);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v175 + 104))(v174, enum case for MusicDataRequest.Source.appIntents(_:), v176);
    MusicCatalogResourceRequest.source.setter(v174, v431);
    v180 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3384) = v180;
    *v180 = v0;
    v180[1] = sub_1000B8FA4;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 2408), *(_QWORD *)(v0 + 2416));
  }
  if (v9 == 0x68732D6F69646172 && v10 == 0xEB0000000073776FLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x68732D6F69646172, 0xEB0000000073776FLL, v9, v10, 0) & 1) != 0)
  {
    v206 = *(_QWORD *)(v0 + 3176);
    v207 = *(_QWORD *)(v0 + 3168);
    v208 = *(_QWORD *)(v0 + 3160);
    v433 = *(_QWORD *)(v0 + 2288);
    v209 = *(_QWORD *)(v0 + 2240);
    v210 = swift_getKeyPath(&unk_100EA9EC0);
    *(_QWORD *)(v0 + 176) = v7;
    *(_QWORD *)(v0 + 184) = v8;
    v211 = sub_100048748(&qword_10119FED0, (uint64_t (*)(uint64_t))&type metadata accessor for RadioShow, (uint64_t)&protocol conformance descriptor for RadioShow);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v210, v0 + 176, v209, &protocol witness table for RadioShow, v211);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v207 + 104))(v206, enum case for MusicDataRequest.Source.appIntents(_:), v208);
    MusicCatalogResourceRequest.source.setter(v206, v433);
    v212 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3400) = v212;
    *v212 = v0;
    v212[1] = sub_1000B9C74;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 2280), *(_QWORD *)(v0 + 2288));
  }
  if (v9 == 0x6C2D64726F636572 && v10 == 0xED0000736C656261
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6C2D64726F636572, 0xED0000736C656261, v9, v10, 0) & 1) != 0)
  {
    v213 = *(_QWORD *)(v0 + 3176);
    v214 = *(_QWORD *)(v0 + 3168);
    v215 = *(_QWORD *)(v0 + 3160);
    v434 = *(_QWORD *)(v0 + 2184);
    v216 = *(_QWORD *)(v0 + 2136);
    v217 = swift_getKeyPath(&unk_100EA9E98);
    *(_QWORD *)(v0 + 208) = v7;
    *(_QWORD *)(v0 + 216) = v8;
    v218 = sub_100048748(&qword_10119FEC8, (uint64_t (*)(uint64_t))&type metadata accessor for RecordLabel, (uint64_t)&protocol conformance descriptor for RecordLabel);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v217, v0 + 208, v216, &protocol witness table for RecordLabel, v218);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v214 + 104))(v213, enum case for MusicDataRequest.Source.appIntents(_:), v215);
    MusicCatalogResourceRequest.source.setter(v213, v434);
    v219 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3416) = v219;
    *v219 = v0;
    v219[1] = sub_1000BA944;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 2176), *(_QWORD *)(v0 + 2184));
  }
  if (v9 == 0x73676E6F73 && v10 == 0xE500000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x73676E6F73, 0xE500000000000000, v9, v10, 0) & 1) != 0)
  {
    v220 = *(_QWORD *)(v0 + 3176);
    v221 = *(_QWORD *)(v0 + 3168);
    v222 = *(_QWORD *)(v0 + 3160);
    v435 = *(_QWORD *)(v0 + 2080);
    v223 = *(_QWORD *)(v0 + 2024);
    v224 = swift_getKeyPath(&unk_100EA9E70);
    *(_QWORD *)(v0 + 240) = v7;
    *(_QWORD *)(v0 + 248) = v8;
    v225 = sub_100048748(&qword_10119EB78, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v224, v0 + 240, v223, &protocol witness table for Song, v225);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v221 + 104))(v220, enum case for MusicDataRequest.Source.appIntents(_:), v222);
    MusicCatalogResourceRequest.source.setter(v220, v435);
    v226 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3432) = v226;
    *v226 = v0;
    v226[1] = sub_1000BB614;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 2072), *(_QWORD *)(v0 + 2080));
  }
  if (v9 == 0x736E6F6974617473 && v10 == 0xE800000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x736E6F6974617473, 0xE800000000000000, v9, v10, 0) & 1) != 0)
  {
    v227 = *(_QWORD *)(v0 + 3176);
    v228 = *(_QWORD *)(v0 + 3168);
    v229 = *(_QWORD *)(v0 + 3160);
    v436 = *(_QWORD *)(v0 + 1952);
    v230 = *(_QWORD *)(v0 + 1904);
    v231 = swift_getKeyPath(&unk_100EA9E48);
    *(_QWORD *)(v0 + 272) = v7;
    *(_QWORD *)(v0 + 280) = v8;
    v232 = sub_100048748(&qword_10119FEC0, (uint64_t (*)(uint64_t))&type metadata accessor for Station, (uint64_t)&protocol conformance descriptor for Station);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v231, v0 + 272, v230, &protocol witness table for Station, v232);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v228 + 104))(v227, enum case for MusicDataRequest.Source.appIntents(_:), v229);
    MusicCatalogResourceRequest.source.setter(v227, v436);
    v233 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3448) = v233;
    *v233 = v0;
    v233[1] = sub_1000BC2E4;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 1944), *(_QWORD *)(v0 + 1952));
  }
  if (v9 == 0x6F736970652D7674 && v10 == 0xEB00000000736564
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6F736970652D7674, 0xEB00000000736564, v9, v10, 0) & 1) != 0)
  {
    v234 = *(_QWORD *)(v0 + 3176);
    v235 = *(_QWORD *)(v0 + 3168);
    v422 = *(_QWORD *)(v0 + 3160);
    v437 = *(_QWORD *)(v0 + 1848);
    v236 = *(_QWORD *)(v0 + 1792);
    v237 = swift_getKeyPath(&unk_100EA9E20);
    *(_QWORD *)(v0 + 304) = v7;
    *(_QWORD *)(v0 + 312) = v8;
    v238 = sub_100048748(&qword_10119FEB0, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
    v239 = sub_100048748(&qword_10119FEB8, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v237, v0 + 304, v236, v238, v239);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v235 + 104))(v234, enum case for MusicDataRequest.Source.appIntents(_:), v422);
    MusicCatalogResourceRequest.source.setter(v234, v437);
    v240 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3464) = v240;
    *v240 = v0;
    v240[1] = sub_1000BCFB4;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 1840), *(_QWORD *)(v0 + 1848));
  }
  if (v9 == 0x6F736165732D7674 && v10 == 0xEA0000000000736ELL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6F736165732D7674, 0xEA0000000000736ELL, v9, v10, 0) & 1) != 0)
  {
    v241 = *(_QWORD *)(v0 + 3176);
    v242 = *(_QWORD *)(v0 + 3168);
    v423 = *(_QWORD *)(v0 + 3160);
    v438 = *(_QWORD *)(v0 + 1720);
    v243 = *(_QWORD *)(v0 + 1664);
    v244 = swift_getKeyPath(&unk_100EA9DF8);
    *(_QWORD *)(v0 + 336) = v7;
    *(_QWORD *)(v0 + 344) = v8;
    v245 = sub_100048748(&qword_10119FEA0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
    v246 = sub_100048748(&qword_10119FEA8, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v244, v0 + 336, v243, v245, v246);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v242 + 104))(v241, enum case for MusicDataRequest.Source.appIntents(_:), v423);
    MusicCatalogResourceRequest.source.setter(v241, v438);
    v247 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3480) = v247;
    *v247 = v0;
    v247[1] = sub_1000BDC84;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 1712), *(_QWORD *)(v0 + 1720));
  }
  if (v9 == 0x73776F68732D7674 && v10 == 0xE800000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x73776F68732D7674, 0xE800000000000000, v9, v10, 0) & 1) != 0)
  {
    v248 = *(_QWORD *)(v0 + 3176);
    v249 = *(_QWORD *)(v0 + 3168);
    v424 = *(_QWORD *)(v0 + 3160);
    v439 = *(_QWORD *)(v0 + 1592);
    v250 = *(_QWORD *)(v0 + 1536);
    v251 = swift_getKeyPath(&unk_100EA9DD0);
    *(_QWORD *)(v0 + 368) = v7;
    *(_QWORD *)(v0 + 376) = v8;
    v252 = sub_100048748(&qword_10119FE90, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
    v253 = sub_100048748(&qword_10119FE98, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v251, v0 + 368, v250, v252, v253);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v249 + 104))(v248, enum case for MusicDataRequest.Source.appIntents(_:), v424);
    MusicCatalogResourceRequest.source.setter(v248, v439);
    v254 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3496) = v254;
    *v254 = v0;
    v254[1] = sub_1000BE954;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 1584), *(_QWORD *)(v0 + 1592));
  }
  if (v9 == 0x646564616F6C7075 && v10 == 0xEF736F696475612DLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x646564616F6C7075, 0xEF736F696475612DLL, v9, v10, 0) & 1) != 0)
  {
    v255 = *(_QWORD *)(v0 + 3176);
    v256 = *(_QWORD *)(v0 + 3168);
    v425 = *(_QWORD *)(v0 + 3160);
    v440 = *(_QWORD *)(v0 + 1464);
    v257 = *(_QWORD *)(v0 + 1416);
    v258 = swift_getKeyPath(&unk_100EA9DA8);
    *(_QWORD *)(v0 + 400) = v7;
    *(_QWORD *)(v0 + 408) = v8;
    v259 = sub_100048748(&qword_10119FE80, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
    v260 = sub_100048748(&qword_10119FE88, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v258, v0 + 400, v257, v259, v260);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v256 + 104))(v255, enum case for MusicDataRequest.Source.appIntents(_:), v425);
    MusicCatalogResourceRequest.source.setter(v255, v440);
    v261 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 3512) = v261;
    *v261 = v0;
    v261[1] = sub_1000BF624;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 1456), *(_QWORD *)(v0 + 1464));
  }
  if ((v9 != 0x646564616F6C7075 || v10 != 0xEF736F656469762DLL)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0x646564616F6C7075, 0xEF736F656469762DLL, v9, v10, 0) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    v269 = *(_QWORD *)(v0 + 1272);
    v270 = *(_QWORD *)(v0 + 1264);
    v271 = *(_QWORD *)(v0 + 1256);
    v272 = sub_100048B14(v271, (uint64_t)qword_10124CEC8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v270 + 16))(v269, v272, v271);
    v273 = swift_bridgeObjectRetain();
    v274 = Logger.logObject.getter(v273);
    v275 = static os_log_type_t.error.getter(v274);
    v276 = os_log_type_enabled(v274, v275);
    v442 = *(_QWORD *)(v0 + 3208);
    v452 = *(_QWORD *)(v0 + 3248);
    v419 = *(_QWORD *)(v0 + 1272);
    v427 = *(_QWORD *)(v0 + 3216);
    v413 = *(_QWORD *)(v0 + 1264);
    v416 = *(_QWORD *)(v0 + 1256);
    if (v276)
    {
      v277 = (uint8_t *)swift_slowAlloc(12, -1);
      v278 = swift_slowAlloc(32, -1);
      v453[0] = v278;
      *(_DWORD *)v277 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 448) = sub_100322200(v9, v10, v453);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 448, v0 + 456);
      swift_bridgeObjectRelease_n(v10, 3);
      _os_log_impl((void *)&_mh_execute_header, v274, v275, "Unsupported catalog type: \"%{public}s\"", v277, 0xCu);
      swift_arrayDestroy(v278, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v278, -1, -1);
      swift_slowDealloc(v277, -1, -1);

    }
    else
    {

      v279 = swift_bridgeObjectRelease_n(v10, 2);
    }
    (*(void (**)(uint64_t, uint64_t, __n128))(v413 + 8))(v419, v416, v279);
    (*(void (**)(uint64_t, uint64_t))(v427 + 8))(v452, v442);
    v280 = *(_QWORD *)(v0 + 592);
    v281 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v281 - 8) + 56))(v280, 1, 1, v281);
    goto LABEL_21;
  }
  v262 = *(_QWORD *)(v0 + 3176);
  v263 = *(_QWORD *)(v0 + 3168);
  v426 = *(_QWORD *)(v0 + 3160);
  v441 = *(_QWORD *)(v0 + 1360);
  v264 = *(_QWORD *)(v0 + 1312);
  v265 = swift_getKeyPath(&unk_100EA9D80);
  *(_QWORD *)(v0 + 432) = v7;
  *(_QWORD *)(v0 + 440) = v8;
  v266 = sub_100048748(&qword_10119FE70, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  v267 = sub_100048748(&qword_10119FE78, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  swift_bridgeObjectRetain();
  MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v265, v0 + 432, v264, v266, v267);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v263 + 104))(v262, enum case for MusicDataRequest.Source.appIntents(_:), v426);
  MusicCatalogResourceRequest.source.setter(v262, v441);
  v268 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
  *(_QWORD *)(v0 + 3528) = v268;
  *v268 = v0;
  v268[1] = sub_1000C02F4;
  return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 1352), *(_QWORD *)(v0 + 1360));
}

uint64_t sub_1000B42C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3288);
  *(_QWORD *)(*(_QWORD *)v1 + 3296) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000C9C38;
  }
  else
  {
    v3 = sub_1000B433C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000B433C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 3192);
  v181 = *(_QWORD *)(v0 + 3184);
  v184 = *(_QWORD *)(v0 + 3200);
  v2 = *(_QWORD *)(v0 + 3152);
  v3 = *(_QWORD *)(v0 + 3144);
  v4 = *(_QWORD *)(v0 + 3136);
  v178 = *(_QWORD *)(v0 + 3112);
  v187 = *(_QWORD *)(v0 + 3104);
  v5 = *(_QWORD *)(v0 + 3096);
  v6 = *(_QWORD *)(v0 + 3080);
  v7 = *(_QWORD *)(v0 + 3072);
  v8 = *(_QWORD *)(v0 + 3064);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E1D4(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 3064), &qword_1011A8FA0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 3128);
    v22 = *(_QWORD *)(v0 + 3112);
    v23 = *(_QWORD *)(v0 + 3104);
    v24 = *(_QWORD *)(v0 + 3064);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.album(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B4F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3304);
  *(_QWORD *)(*(_QWORD *)v1 + 3312) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000CA510;
  }
  else
  {
    v3 = sub_1000B500C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000B500C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 3040);
  v181 = *(_QWORD *)(v0 + 3032);
  v184 = *(_QWORD *)(v0 + 3048);
  v2 = *(_QWORD *)(v0 + 3024);
  v3 = *(_QWORD *)(v0 + 3016);
  v4 = *(_QWORD *)(v0 + 3008);
  v178 = *(_QWORD *)(v0 + 2984);
  v187 = *(_QWORD *)(v0 + 2976);
  v5 = *(_QWORD *)(v0 + 2968);
  v6 = *(_QWORD *)(v0 + 2952);
  v7 = *(_QWORD *)(v0 + 2944);
  v8 = *(_QWORD *)(v0 + 2936);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E1B8(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2936), (uint64_t *)&unk_1011A3FB0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 3000);
    v22 = *(_QWORD *)(v0 + 2984);
    v23 = *(_QWORD *)(v0 + 2976);
    v24 = *(_QWORD *)(v0 + 2936);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.artist(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B5C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3320);
  *(_QWORD *)(*(_QWORD *)v1 + 3328) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000CADE8;
  }
  else
  {
    v3 = sub_1000B5CDC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000B5CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 2912);
  v181 = *(_QWORD *)(v0 + 2904);
  v184 = *(_QWORD *)(v0 + 2920);
  v2 = *(_QWORD *)(v0 + 2896);
  v3 = *(_QWORD *)(v0 + 2888);
  v4 = *(_QWORD *)(v0 + 2880);
  v178 = *(_QWORD *)(v0 + 2864);
  v187 = *(_QWORD *)(v0 + 2856);
  v5 = *(_QWORD *)(v0 + 2848);
  v6 = *(_QWORD *)(v0 + 2840);
  v7 = *(_QWORD *)(v0 + 2832);
  v8 = *(_QWORD *)(v0 + 2824);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E340(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2824), &qword_1011A33F0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 2872);
    v22 = *(_QWORD *)(v0 + 2864);
    v23 = *(_QWORD *)(v0 + 2856);
    v24 = *(_QWORD *)(v0 + 2824);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.curator(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B6934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3336);
  *(_QWORD *)(*(_QWORD *)v1 + 3344) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000CB6C0;
  }
  else
  {
    v3 = sub_1000B69AC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000B69AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 2808);
  v181 = *(_QWORD *)(v0 + 2800);
  v184 = *(_QWORD *)(v0 + 2816);
  v2 = *(_QWORD *)(v0 + 2792);
  v3 = *(_QWORD *)(v0 + 2784);
  v4 = *(_QWORD *)(v0 + 2776);
  v178 = *(_QWORD *)(v0 + 2752);
  v187 = *(_QWORD *)(v0 + 2744);
  v5 = *(_QWORD *)(v0 + 2736);
  v6 = *(_QWORD *)(v0 + 2720);
  v7 = *(_QWORD *)(v0 + 2712);
  v8 = *(_QWORD *)(v0 + 2704);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E308(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2704), &qword_10119ED08);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 2768);
    v22 = *(_QWORD *)(v0 + 2752);
    v23 = *(_QWORD *)(v0 + 2744);
    v24 = *(_QWORD *)(v0 + 2704);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.genre(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B7604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3352);
  *(_QWORD *)(*(_QWORD *)v1 + 3360) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000CBF98;
  }
  else
  {
    v3 = sub_1000B767C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000B767C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 2680);
  v181 = *(_QWORD *)(v0 + 2672);
  v184 = *(_QWORD *)(v0 + 2688);
  v2 = *(_QWORD *)(v0 + 2664);
  v3 = *(_QWORD *)(v0 + 2656);
  v4 = *(_QWORD *)(v0 + 2648);
  v178 = *(_QWORD *)(v0 + 2624);
  v187 = *(_QWORD *)(v0 + 2616);
  v5 = *(_QWORD *)(v0 + 2608);
  v6 = *(_QWORD *)(v0 + 2592);
  v7 = *(_QWORD *)(v0 + 2584);
  v8 = *(_QWORD *)(v0 + 2576);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E35C(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2576), &qword_1011B59B0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 2640);
    v22 = *(_QWORD *)(v0 + 2624);
    v23 = *(_QWORD *)(v0 + 2616);
    v24 = *(_QWORD *)(v0 + 2576);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.musicVideo(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B82D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3368);
  *(_QWORD *)(*(_QWORD *)v1 + 3376) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000CC870;
  }
  else
  {
    v3 = sub_1000B834C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000B834C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 2552);
  v181 = *(_QWORD *)(v0 + 2544);
  v184 = *(_QWORD *)(v0 + 2560);
  v2 = *(_QWORD *)(v0 + 2536);
  v3 = *(_QWORD *)(v0 + 2528);
  v4 = *(_QWORD *)(v0 + 2520);
  v178 = *(_QWORD *)(v0 + 2496);
  v187 = *(_QWORD *)(v0 + 2488);
  v5 = *(_QWORD *)(v0 + 2480);
  v6 = *(_QWORD *)(v0 + 2464);
  v7 = *(_QWORD *)(v0 + 2456);
  v8 = *(_QWORD *)(v0 + 2448);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E378(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2448), &qword_10119D3A0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 2512);
    v22 = *(_QWORD *)(v0 + 2496);
    v23 = *(_QWORD *)(v0 + 2488);
    v24 = *(_QWORD *)(v0 + 2448);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.musicMovie(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B8FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3384);
  *(_QWORD *)(*(_QWORD *)v1 + 3392) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000CD148;
  }
  else
  {
    v3 = sub_1000B901C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000B901C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 2424);
  v181 = *(_QWORD *)(v0 + 2416);
  v184 = *(_QWORD *)(v0 + 2432);
  v2 = *(_QWORD *)(v0 + 2408);
  v3 = *(_QWORD *)(v0 + 2400);
  v4 = *(_QWORD *)(v0 + 2392);
  v178 = *(_QWORD *)(v0 + 2368);
  v187 = *(_QWORD *)(v0 + 2360);
  v5 = *(_QWORD *)(v0 + 2352);
  v6 = *(_QWORD *)(v0 + 2336);
  v7 = *(_QWORD *)(v0 + 2328);
  v8 = *(_QWORD *)(v0 + 2320);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E394(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2320), &qword_1011A30F0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 2384);
    v22 = *(_QWORD *)(v0 + 2368);
    v23 = *(_QWORD *)(v0 + 2360);
    v24 = *(_QWORD *)(v0 + 2320);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.playlist(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B9C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3400);
  *(_QWORD *)(*(_QWORD *)v1 + 3408) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000CDA20;
  }
  else
  {
    v3 = sub_1000B9CEC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000B9CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 2296);
  v181 = *(_QWORD *)(v0 + 2288);
  v184 = *(_QWORD *)(v0 + 2304);
  v2 = *(_QWORD *)(v0 + 2280);
  v3 = *(_QWORD *)(v0 + 2272);
  v4 = *(_QWORD *)(v0 + 2264);
  v178 = *(_QWORD *)(v0 + 2248);
  v187 = *(_QWORD *)(v0 + 2240);
  v5 = *(_QWORD *)(v0 + 2232);
  v6 = *(_QWORD *)(v0 + 2224);
  v7 = *(_QWORD *)(v0 + 2216);
  v8 = *(_QWORD *)(v0 + 2208);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E3B0(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2208), (uint64_t *)&unk_1011D0BC0);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 2256);
    v22 = *(_QWORD *)(v0 + 2248);
    v23 = *(_QWORD *)(v0 + 2240);
    v24 = *(_QWORD *)(v0 + 2208);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.radioShow(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BA944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3416);
  *(_QWORD *)(*(_QWORD *)v1 + 3424) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000CE2F8;
  }
  else
  {
    v3 = sub_1000BA9BC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000BA9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 2192);
  v181 = *(_QWORD *)(v0 + 2184);
  v184 = *(_QWORD *)(v0 + 2200);
  v2 = *(_QWORD *)(v0 + 2176);
  v3 = *(_QWORD *)(v0 + 2168);
  v4 = *(_QWORD *)(v0 + 2160);
  v178 = *(_QWORD *)(v0 + 2144);
  v187 = *(_QWORD *)(v0 + 2136);
  v5 = *(_QWORD *)(v0 + 2128);
  v6 = *(_QWORD *)(v0 + 2120);
  v7 = *(_QWORD *)(v0 + 2112);
  v8 = *(_QWORD *)(v0 + 2104);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E3CC(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 2104), &qword_10119FDB8);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 2152);
    v22 = *(_QWORD *)(v0 + 2144);
    v23 = *(_QWORD *)(v0 + 2136);
    v24 = *(_QWORD *)(v0 + 2104);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.recordLabel(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BB614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3432);
  *(_QWORD *)(*(_QWORD *)v1 + 3440) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000CEBD0;
  }
  else
  {
    v3 = sub_1000BB68C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000BB68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 2088);
  v181 = *(_QWORD *)(v0 + 2080);
  v184 = *(_QWORD *)(v0 + 2096);
  v2 = *(_QWORD *)(v0 + 2072);
  v3 = *(_QWORD *)(v0 + 2064);
  v4 = *(_QWORD *)(v0 + 2056);
  v178 = *(_QWORD *)(v0 + 2032);
  v187 = *(_QWORD *)(v0 + 2024);
  v5 = *(_QWORD *)(v0 + 2016);
  v6 = *(_QWORD *)(v0 + 2000);
  v7 = *(_QWORD *)(v0 + 1992);
  v8 = *(_QWORD *)(v0 + 1984);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E3E8(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1984), &qword_10119E480);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 2048);
    v22 = *(_QWORD *)(v0 + 2032);
    v23 = *(_QWORD *)(v0 + 2024);
    v24 = *(_QWORD *)(v0 + 1984);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.song(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BC2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3448);
  *(_QWORD *)(*(_QWORD *)v1 + 3456) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000CF4A8;
  }
  else
  {
    v3 = sub_1000BC35C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000BC35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 1960);
  v181 = *(_QWORD *)(v0 + 1952);
  v184 = *(_QWORD *)(v0 + 1968);
  v2 = *(_QWORD *)(v0 + 1944);
  v3 = *(_QWORD *)(v0 + 1936);
  v4 = *(_QWORD *)(v0 + 1928);
  v178 = *(_QWORD *)(v0 + 1912);
  v187 = *(_QWORD *)(v0 + 1904);
  v5 = *(_QWORD *)(v0 + 1896);
  v6 = *(_QWORD *)(v0 + 1888);
  v7 = *(_QWORD *)(v0 + 1880);
  v8 = *(_QWORD *)(v0 + 1872);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E404(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1872), &qword_10119FD98);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 1920);
    v22 = *(_QWORD *)(v0 + 1912);
    v23 = *(_QWORD *)(v0 + 1904);
    v24 = *(_QWORD *)(v0 + 1872);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.station(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BCFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3464);
  *(_QWORD *)(*(_QWORD *)v1 + 3472) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000CFD80;
  }
  else
  {
    v3 = sub_1000BD02C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000BD02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[2];

  v1 = *(_QWORD *)(v0 + 1856);
  v181 = *(_QWORD *)(v0 + 1848);
  v184 = *(_QWORD *)(v0 + 1864);
  v2 = *(_QWORD *)(v0 + 1840);
  v3 = *(_QWORD *)(v0 + 1832);
  v4 = *(_QWORD *)(v0 + 1824);
  v178 = *(_QWORD *)(v0 + 1800);
  v187 = *(_QWORD *)(v0 + 1792);
  v5 = *(_QWORD *)(v0 + 1784);
  v6 = *(_QWORD *)(v0 + 1768);
  v7 = *(_QWORD *)(v0 + 1760);
  v8 = *(_QWORD *)(v0 + 1752);
  MusicCatalogResourceResponse.items.getter(v4);
  sub_10031E420(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v184, v181);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v8, 1, v187) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1752), &qword_10119FD80);
    if (qword_10119BFA8 != -1)
      swift_once(&qword_10119BFA8, sub_1003E0090);
    sub_100048B14(*(_QWORD *)(v0 + 1256), (uint64_t)qword_10124CEC8);
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 3280);
    v14 = *(_QWORD *)(v0 + 3264);
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 3256);
      v179 = *(_QWORD *)(v0 + 3272);
      v182 = *(_QWORD *)(v0 + 3216);
      v185 = *(_QWORD *)(v0 + 3208);
      v188 = *(_QWORD *)(v0 + 3248);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v190[0] = v17;
      *(_DWORD *)v16 = 136446466;
      swift_bridgeObjectRetain();
      v18 = MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_100322200(v18, v20, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 456, v0 + 464);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_100322200(v179, v13, v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      swift_bridgeObjectRelease_n(v13, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No catalog item found for id: %{public}s, kind: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v188, v185);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 3248);
      v32 = *(_QWORD *)(v0 + 3216);
      v33 = *(_QWORD *)(v0 + 3208);

      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = *(_QWORD *)(v0 + 592);
    v35 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 1816);
    v22 = *(_QWORD *)(v0 + 1800);
    v23 = *(_QWORD *)(v0 + 1792);
    v24 = *(_QWORD *)(v0 + 1752);
    v25 = *(_QWORD *)(v0 + 592);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3216) + 8))(*(_QWORD *)(v0 + 3248), *(_QWORD *)(v0 + 3208));
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 32);
    v27(v21, v24, v23, v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25, v21, v23);
    v28 = enum case for GenericMusicItem.tvEpisode(_:);
    v29 = type metadata accessor for GenericMusicItem(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v25, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
  }
  v36 = *(_QWORD *)(v0 + 3240);
  v37 = *(_QWORD *)(v0 + 3232);
  v38 = *(_QWORD *)(v0 + 3224);
  v39 = *(_QWORD *)(v0 + 3200);
  v40 = *(_QWORD *)(v0 + 3176);
  v41 = *(_QWORD *)(v0 + 3152);
  v42 = *(_QWORD *)(v0 + 3128);
  v43 = *(_QWORD *)(v0 + 3120);
  v44 = *(_QWORD *)(v0 + 3096);
  v46 = *(_QWORD *)(v0 + 3088);
  v47 = *(_QWORD *)(v0 + 3064);
  v48 = *(_QWORD *)(v0 + 3056);
  v49 = *(_QWORD *)(v0 + 3048);
  v50 = *(_QWORD *)(v0 + 3024);
  v51 = *(_QWORD *)(v0 + 3000);
  v52 = *(_QWORD *)(v0 + 2992);
  v53 = *(_QWORD *)(v0 + 2968);
  v54 = *(_QWORD *)(v0 + 2960);
  v55 = *(_QWORD *)(v0 + 2936);
  v56 = *(_QWORD *)(v0 + 2928);
  v57 = *(_QWORD *)(v0 + 2920);
  v58 = *(_QWORD *)(v0 + 2896);
  v59 = *(_QWORD *)(v0 + 2872);
  v60 = *(_QWORD *)(v0 + 2848);
  v61 = *(_QWORD *)(v0 + 2824);
  v62 = *(_QWORD *)(v0 + 2816);
  v63 = *(_QWORD *)(v0 + 2792);
  v64 = *(_QWORD *)(v0 + 2768);
  v65 = *(_QWORD *)(v0 + 2760);
  v66 = *(_QWORD *)(v0 + 2736);
  v67 = *(_QWORD *)(v0 + 2728);
  v68 = *(_QWORD *)(v0 + 2704);
  v69 = *(_QWORD *)(v0 + 2696);
  v70 = *(_QWORD *)(v0 + 2688);
  v71 = *(_QWORD *)(v0 + 2664);
  v72 = *(_QWORD *)(v0 + 2640);
  v73 = *(_QWORD *)(v0 + 2632);
  v74 = *(_QWORD *)(v0 + 2608);
  v75 = *(_QWORD *)(v0 + 2600);
  v76 = *(_QWORD *)(v0 + 2576);
  v77 = *(_QWORD *)(v0 + 2568);
  v78 = *(_QWORD *)(v0 + 2560);
  v79 = *(_QWORD *)(v0 + 2536);
  v80 = *(_QWORD *)(v0 + 2512);
  v81 = *(_QWORD *)(v0 + 2504);
  v82 = *(_QWORD *)(v0 + 2480);
  v83 = *(_QWORD *)(v0 + 2472);
  v84 = *(_QWORD *)(v0 + 2448);
  v85 = *(_QWORD *)(v0 + 2440);
  v86 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v88 = *(_QWORD *)(v0 + 2384);
  v89 = *(_QWORD *)(v0 + 2376);
  v90 = *(_QWORD *)(v0 + 2352);
  v91 = *(_QWORD *)(v0 + 2344);
  v92 = *(_QWORD *)(v0 + 2320);
  v93 = *(_QWORD *)(v0 + 2312);
  v94 = *(_QWORD *)(v0 + 2304);
  v95 = *(_QWORD *)(v0 + 2280);
  v96 = *(_QWORD *)(v0 + 2256);
  v97 = *(_QWORD *)(v0 + 2232);
  v98 = *(_QWORD *)(v0 + 2208);
  v99 = *(_QWORD *)(v0 + 2200);
  v100 = *(_QWORD *)(v0 + 2176);
  v101 = *(_QWORD *)(v0 + 2152);
  v102 = *(_QWORD *)(v0 + 2128);
  v103 = *(_QWORD *)(v0 + 2104);
  v104 = *(_QWORD *)(v0 + 2096);
  v105 = *(_QWORD *)(v0 + 2072);
  v106 = *(_QWORD *)(v0 + 2048);
  v107 = *(_QWORD *)(v0 + 2040);
  v108 = *(_QWORD *)(v0 + 2016);
  v109 = *(_QWORD *)(v0 + 2008);
  v110 = *(_QWORD *)(v0 + 1984);
  v111 = *(_QWORD *)(v0 + 1976);
  v112 = *(_QWORD *)(v0 + 1968);
  v113 = *(_QWORD *)(v0 + 1944);
  v114 = *(_QWORD *)(v0 + 1920);
  v115 = *(_QWORD *)(v0 + 1896);
  v116 = *(_QWORD *)(v0 + 1872);
  v117 = *(_QWORD *)(v0 + 1864);
  v118 = *(_QWORD *)(v0 + 1840);
  v119 = *(_QWORD *)(v0 + 1816);
  v120 = *(_QWORD *)(v0 + 1808);
  v121 = *(_QWORD *)(v0 + 1784);
  v122 = *(_QWORD *)(v0 + 1776);
  v123 = *(_QWORD *)(v0 + 1752);
  v124 = *(_QWORD *)(v0 + 1744);
  v125 = *(_QWORD *)(v0 + 1736);
  v126 = *(_QWORD *)(v0 + 1712);
  v127 = *(_QWORD *)(v0 + 1688);
  v128 = *(_QWORD *)(v0 + 1680);
  v129 = *(_QWORD *)(v0 + 1656);
  v130 = *(_QWORD *)(v0 + 1648);
  v131 = *(_QWORD *)(v0 + 1624);
  v132 = *(_QWORD *)(v0 + 1616);
  v133 = *(_QWORD *)(v0 + 1608);
  v134 = *(_QWORD *)(v0 + 1584);
  v135 = *(_QWORD *)(v0 + 1560);
  v136 = *(_QWORD *)(v0 + 1552);
  v137 = *(_QWORD *)(v0 + 1528);
  v138 = *(_QWORD *)(v0 + 1520);
  v139 = *(_QWORD *)(v0 + 1496);
  v140 = *(_QWORD *)(v0 + 1488);
  v141 = *(_QWORD *)(v0 + 1480);
  v142 = *(_QWORD *)(v0 + 1456);
  v143 = *(_QWORD *)(v0 + 1432);
  v144 = *(_QWORD *)(v0 + 1408);
  v145 = *(_QWORD *)(v0 + 1384);
  v146 = *(_QWORD *)(v0 + 1376);
  v147 = *(_QWORD *)(v0 + 1352);
  v148 = *(_QWORD *)(v0 + 1328);
  v149 = *(_QWORD *)(v0 + 1304);
  v150 = *(_QWORD *)(v0 + 1280);
  v151 = *(_QWORD *)(v0 + 1272);
  v152 = *(_QWORD *)(v0 + 1248);
  v153 = *(_QWORD *)(v0 + 1240);
  v154 = *(_QWORD *)(v0 + 1232);
  v155 = *(_QWORD *)(v0 + 1224);
  v156 = *(_QWORD *)(v0 + 1216);
  v157 = *(_QWORD *)(v0 + 1192);
  v158 = *(_QWORD *)(v0 + 1168);
  v159 = *(_QWORD *)(v0 + 1144);
  v160 = *(_QWORD *)(v0 + 1120);
  v161 = *(_QWORD *)(v0 + 1096);
  v162 = *(_QWORD *)(v0 + 1072);
  v163 = *(_QWORD *)(v0 + 1048);
  v164 = *(_QWORD *)(v0 + 1024);
  v165 = *(_QWORD *)(v0 + 1000);
  v166 = *(_QWORD *)(v0 + 992);
  v167 = *(_QWORD *)(v0 + 968);
  v168 = *(_QWORD *)(v0 + 944);
  v169 = *(_QWORD *)(v0 + 920);
  v170 = *(_QWORD *)(v0 + 896);
  v171 = *(_QWORD *)(v0 + 872);
  v172 = *(_QWORD *)(v0 + 848);
  v173 = *(_QWORD *)(v0 + 824);
  v174 = *(_QWORD *)(v0 + 800);
  v175 = *(_QWORD *)(v0 + 776);
  v176 = *(_QWORD *)(v0 + 752);
  v177 = *(_QWORD *)(v0 + 728);
  v180 = *(_QWORD *)(v0 + 704);
  v183 = *(_QWORD *)(v0 + 680);
  v186 = *(_QWORD *)(v0 + 656);
  v189 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc(*(_QWORD *)(v0 + 3248));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v137);
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v155);
  swift_task_dealloc(v156);
  swift_task_dealloc(v157);
  swift_task_dealloc(v158);
  swift_task_dealloc(v159);
  swift_task_dealloc(v160);
  swift_task_dealloc(v161);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v169);
  swift_task_dealloc(v170);
  swift_task_dealloc(v171);
  swift_task_dealloc(v172);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v180);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BDC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 3480);
  *(_QWORD *)(*(_QWORD *)v1 + 3488) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1000D0658;
  }
  else
  {
    v3 = sub_1000BDCFC;
  }
  return swift_task_switch(v3, 0, 0);
}

