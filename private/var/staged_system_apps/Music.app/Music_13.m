uint64_t sub_1007192DC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_100719300()
{
  uint64_t v0;

  return (id)(*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_100719328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100719338(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100719340(uint64_t a1)
{
  uint64_t v1;

  return sub_1005CB7D0(a1, *(_QWORD *)(v1 + 16)) & 1;
}

double sub_10071935C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1007144A4(a1, a2, v2);
}

void *sub_100719364(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_10071361C(a1, a2, v2);
}

void sub_10071936C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100714098(a1, a2, v2);
}

uint64_t sub_10071937C(uint64_t a1)
{
  uint64_t v1;

  return sub_100713F18(a1, v1);
}

uint64_t sub_100719384(uint64_t a1)
{
  uint64_t v1;

  return sub_100713FD8(a1, v1);
}

uint64_t sub_10071938C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1007193B0(void *a1)
{
  uint64_t v1;

  return sub_10070A9D8(a1, v1);
}

void sub_1007193B8(uint64_t a1)
{
  uint64_t v1;

  sub_10070AA34(a1, v1);
}

double sub_1007193C0(uint64_t a1)
{
  uint64_t v1;

  return sub_10070AD00(a1, v1);
}

uint64_t sub_1007193C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Notification(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100719444(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Notification(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1011C5BB4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_10070AE9C(a1, v5, v6, v7, v8);
}

void sub_1007194D8(uint64_t a1, void (*a2)(char *, uint64_t, __n128))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;

  v4 = sub_100007E8C(&qword_1011C5BE8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 64);
  v22 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v23 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v23)
      goto LABEL_23;
    v19 = *(_QWORD *)(v22 + 8 * v18);
    ++v11;
    if (!v19)
    {
      v11 = v18 + 1;
      if (v18 + 1 >= v23)
        goto LABEL_23;
      v19 = *(_QWORD *)(v22 + 8 * v11);
      if (!v19)
      {
        v11 = v18 + 2;
        if (v18 + 2 >= v23)
          goto LABEL_23;
        v19 = *(_QWORD *)(v22 + 8 * v11);
        if (!v19)
        {
          v11 = v18 + 3;
          if (v18 + 3 >= v23)
            goto LABEL_23;
          v19 = *(_QWORD *)(v22 + 8 * v11);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v19 - 1) & v19;
    v13 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_5:
    v14 = *(_QWORD *)(a1 + 48);
    v15 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v6, v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v13, v15);
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v13);
    *(_QWORD *)&v6[*(int *)(v4 + 48)] = v16;
    v17 = swift_retain();
    a2(v6, v16, v17);
    sub_10004FF60((uint64_t)v6, &qword_1011C5BE8);
  }
  v20 = v18 + 4;
  if (v20 >= v23)
  {
LABEL_23:
    swift_release();
    return;
  }
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
  {
    v11 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v11 >= v23)
      goto LABEL_23;
    v19 = *(_QWORD *)(v22 + 8 * v11);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_10071970C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100719730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1007197C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  sub_10070BFB0(*(unsigned __int16 *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_100719820()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100719844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10070C8D8(*(double *)(v3 + 32), a1, a2, a3, *(_BYTE *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

char *sub_100719854(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  char *v63;
  _BYTE *v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  _BYTE *v79;
  void (*v80)(char *, uint64_t);
  id v81;
  uint64_t v82;
  id v83;
  char *v84;
  char *v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;

  v95 = a2;
  v5 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v87 = *(_QWORD **)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v84 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v85 = (char *)&v82 - v12;
  __chkstk_darwin(v11);
  v86 = (char *)&v82 - v13;
  v14 = sub_100007E8C(&qword_10119E460);
  v15 = __chkstk_darwin(v14);
  v90 = (uint64_t)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v92 = (char *)&v82 - v17;
  v18 = type metadata accessor for ContainerDetail.Source(0);
  v19 = __chkstk_darwin(v18);
  v89 = (uint64_t)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v91 = (uint64_t)&v82 - v21;
  v22 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v22);
  v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Album(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v82 - v31;
  __chkstk_darwin(v30);
  v34 = (char *)&v82 - v33;
  v94 = a3;
  if (a3
    && (v35 = (uint64_t *)MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor(),
        v36 = MPModelObject.bestIdentifier(for:)(*v35, 0),
        v37))
  {
    v88 = MusicItemID.init(_:)(v36, v37);
    v93 = v38;
  }
  else
  {
    v88 = 0;
    v93 = 0;
  }
  objc_opt_self(MPModelAlbum);
  v39 = swift_dynamicCastObjCClass(a1);
  if (!v39)
  {
    objc_opt_self(MPModelPlaylist);
    v47 = swift_dynamicCastObjCClass(a1);
    if (v47)
    {
      v48 = v47;
      v49 = a1;
      dispatch thunk of LegacyModelObjectConvertible.init(_:)(v48, v8, &protocol witness table for Playlist);
      v50 = v87;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v87[6])(v7, 1, v8) != 1)
      {
        v68 = v86;
        ((void (*)(char *, char *, uint64_t))v50[4])(v86, v7, v8);
        v69 = (void (*)(char *, char *, uint64_t))v50[2];
        v83 = v49;
        v70 = v85;
        v69(v85, v68, v8);
        v71 = v95;
        v72 = v91;
        sub_10005B704(v95, v91, type metadata accessor for ContainerDetail.Source);
        v73 = type metadata accessor for URL(0);
        v74 = (uint64_t)v92;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v92, 1, 1, v73);
        v75 = (uint64_t)v84;
        v69(v84, v70, v8);
        v76 = v89;
        sub_10005B704(v72, v89, type metadata accessor for ContainerDetail.Source);
        v77 = v90;
        sub_10004A160(v74, v90, &qword_10119E460);
        v78 = sub_10096EE44(v75, v76, v88, v93, v77);
        v79 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
        v65 = sub_1003728E0(v78, 0, v79);
        sub_10004FF60(v74, &qword_10119E460);
        sub_10005B748(v72, type metadata accessor for ContainerDetail.Source);
        v80 = (void (*)(char *, uint64_t))v87[1];
        v80(v70, v8);
        v81 = v83;

        sub_10005B748(v71, type metadata accessor for ContainerDetail.Source);
        v80(v68, v8);
        return v65;
      }
      swift_bridgeObjectRelease(v93);
      sub_10004FF60((uint64_t)v7, &qword_1011A30F0);
      if (qword_10119C740 != -1)
        swift_once(&qword_10119C740, sub_100716478);
      v51 = type metadata accessor for Logger(0);
      v52 = sub_100048B14(v51, (uint64_t)qword_10124D860);
      v53 = Logger.logObject.getter(v52);
      v54 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v55 = 0;
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "Unable to convert playlist to MusicKit Item", v55, 2u);
        swift_slowDealloc(v55, -1, -1);
      }

    }
    else
    {

      swift_bridgeObjectRelease(v93);
    }
    goto LABEL_21;
  }
  v40 = v39;
  v87 = a1;
  dispatch thunk of LegacyModelObjectConvertible.init(_:)(v40, v25, &protocol witness table for Album);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    swift_bridgeObjectRelease(v93);
    sub_10004FF60((uint64_t)v24, &qword_1011A8FA0);
    if (qword_10119C740 != -1)
      swift_once(&qword_10119C740, sub_100716478);
    v41 = type metadata accessor for Logger(0);
    v42 = sub_100048B14(v41, (uint64_t)qword_10124D860);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Unable to convert album to MusicKit Item", v45, 2u);
      swift_slowDealloc(v45, -1, -1);
    }
    v46 = v87;

LABEL_21:
    sub_10005B748(v95, type metadata accessor for ContainerDetail.Source);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v34, v24, v25);
  v56 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v56(v32, v34, v25);
  v57 = v91;
  sub_10005B704(v95, v91, type metadata accessor for ContainerDetail.Source);
  v58 = type metadata accessor for URL(0);
  v59 = (uint64_t)v92;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v92, 1, 1, v58);
  v56(v29, v32, v25);
  v60 = v89;
  sub_10005B704(v57, v89, type metadata accessor for ContainerDetail.Source);
  v86 = v34;
  v61 = v87;
  v62 = v90;
  sub_10004A160(v59, v90, &qword_10119E460);
  v63 = sub_1004C73D0((uint64_t)v29, v60, v88, v93, v62);
  v64 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
  v65 = sub_1003723A0(v63, 0, v64);
  sub_10004FF60(v59, &qword_10119E460);
  sub_10005B748(v57, type metadata accessor for ContainerDetail.Source);
  v66 = *(void (**)(char *, uint64_t))(v26 + 8);
  v66(v32, v25);

  sub_10005B748(v95, type metadata accessor for ContainerDetail.Source);
  v66(v86, v25);
  return v65;
}

char *sub_10071A030(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _BYTE *v28;
  void (*v29)(char *, uint64_t);
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  v35 = a3;
  v36 = a2;
  v37 = a1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3D70);
  __chkstk_darwin(v3);
  v34 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119E460);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v34 - v9;
  v11 = type metadata accessor for ContainerDetail.Source(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v34 - v15;
  v17 = type metadata accessor for Album(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v34 - v22;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v24((char *)&v34 - v22, (uint64_t)v37, v17);
  sub_10005B704(v36, (uint64_t)v16, type metadata accessor for ContainerDetail.Source);
  v25 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 1, 1, v25);
  v24(v21, (uint64_t)v23, v17);
  sub_10005B704((uint64_t)v16, (uint64_t)v14, type metadata accessor for ContainerDetail.Source);
  v26 = type metadata accessor for AlbumDetailDataSource.ProminentTrackSource(0);
  v27 = v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v34, 1, 1, v26);
  sub_10004A160((uint64_t)v10, (uint64_t)v8, &qword_10119E460);
  v28 = (_BYTE *)sub_1004C539C(v21, v14, v27, v8);
  sub_10004FF60((uint64_t)v10, &qword_10119E460);
  sub_10005B748((uint64_t)v16, type metadata accessor for ContainerDetail.Source);
  v29 = *(void (**)(char *, uint64_t))(v18 + 8);
  v29(v23, v17);
  v30 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
  v31 = sub_1003723A0(v28, 0, v30);
  sub_10005B748(v36, type metadata accessor for ContainerDetail.Source);
  v29(v37, v17);
  v32 = *(_QWORD *)&v31[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver];
  *(_QWORD *)&v31[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver] = v35;
  swift_release(v32);
  return v31;
}

uint64_t sub_10071A300(double a1, double a2)
{
  uint64_t v2;

  return sub_10053AE3C(*(uint64_t (**)(double))(v2 + 16), a1, a2);
}

void sub_10071A308(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10070B1E8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(double *)(v2 + 32));
}

uint64_t sub_10071A314(uint64_t a1)
{
  uint64_t v1;

  return sub_10047F7F0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10071A334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10071A3A8(double a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  sub_10070B508(*(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3), a1);
}

void sub_10071A3E8(uint64_t a1)
{
  uint64_t v1;

  sub_100712C20(a1, v1);
}

uint64_t sub_10071A3F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10071A414()
{
  uint64_t v0;

  sub_100712648(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10071A41C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10071A444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Artwork(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = ((((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10071A4D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double v13;
  double v14;
  double v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for Artwork(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFF8;
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[4];
  v11 = (uint64_t)v1 + v5;
  v12 = (double *)((char *)v1 + v6);
  v13 = *v12;
  v14 = v12[1];
  v15 = *(double *)((char *)v1 + v7);
  v16 = (_QWORD *)swift_task_alloc(dword_1011C5C44);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10005AEE4;
  return sub_1007104D8(v13, v14, v15, a1, v8, v9, v10, v11);
}

uint64_t sub_10071A5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Artwork(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10071A638(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for Artwork(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011C5C54);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_100710D6C(a1, v6, v7, v8, v9);
}

void sub_10071A6DC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_durationCalculator;
  v2 = type metadata accessor for DurationCalculator();
  v3 = swift_allocObject(v2, 24, 7);
  *(_QWORD *)&v0[v1] = v3;
  *(_QWORD *)(v3 + 16) = 0;
  v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_needToRegisterGroupActivitySuggestion] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___headerCoordinator] = 0;
  v4 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork];
  v5 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___backdropContainer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource] = 0;
  v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hideFloatingArtwork] = 0;
  v6 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_isShowingRelatedContent] = 0;
  v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_includeRelatedContentOnNextReload] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___relatedContentSpacingData] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding] = 0;
  v7 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentState];
  v8 = enum case for RelatedContentProvider.State.loading(_:);
  v9 = type metadata accessor for RelatedContentProvider.State(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentStateSubscription];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___impressionsTracker] = 0;
  v11 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___pageProperties];
  v12 = sub_100007E8C((uint64_t *)&unk_1011A2170);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContent] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___popoverProvider] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_storeItemMetadataDidChangeObserver] = 0;
  v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hasScrolledtoProminentItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_sheetPresenterDataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionViewLayout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionView] = 0;
  v13 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_cachingReference;
  v14 = type metadata accessor for ArtworkPrefetchingController.CacheReference();
  v15 = swift_allocObject(v14, 41, 7);
  *(_QWORD *)(v15 + 16) = 0xD00000000000001FLL;
  *(_QWORD *)(v15 + 24) = 0x8000000100E37690;
  *(_QWORD *)(v15 + 32) = 0;
  *(_BYTE *)(v15 + 40) = 1;
  *(_QWORD *)&v0[v13] = v15;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserverSubscription] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dragDropController] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/ContainerDetail.swift", 27, 2, 394, 0);
  __break(1u);
}

void sub_10071A9B8(char *a1)
{
  id v2;
  unint64_t v3;
  char v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(_QWORD, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[3];

  v2 = objc_msgSend(a1, "traitCollection");
  v3 = sub_10018D478();
  UITraitCollection.subscript.getter(v13, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v3);

  v4 = sub_1007607C4(v13[0]);
  swift_bridgeObjectRelease();
  v5 = &a1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess(&a1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v13, 33, 0);
  v6 = *(_QWORD *)v5;
  v7 = *((_QWORD *)v5 + 1);
  ObjectType = swift_getObjectType();
  v12 = v6;
  v9 = *(void (**)(_QWORD, uint64_t, uint64_t))(v7 + 104);
  swift_unknownObjectRetain(v6, v10);
  v9(v4 & 1, ObjectType, v7);
  v11 = *(_QWORD *)v5;
  *(_QWORD *)v5 = v12;
  *((_QWORD *)v5 + 1) = v7;
  swift_endAccess(v13);
  swift_unknownObjectRelease(v11);
  sub_10070F7B4();
}

uint64_t sub_10071AABC(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  *(double *)(v4 + 64) = a3;
  *(double *)(v4 + 72) = a4;
  *(double *)(v4 + 56) = a2;
  *(_QWORD *)(v4 + 48) = a1;
  v5 = type metadata accessor for Backdrop.SnapshotConfiguration(0);
  *(_QWORD *)(v4 + 80) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 88) = v6;
  *(_QWORD *)(v4 + 96) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork.ImageFormat(0);
  *(_QWORD *)(v4 + 104) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 112) = v8;
  *(_QWORD *)(v4 + 120) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artwork.CropStyle(0);
  *(_QWORD *)(v4 + 128) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 136) = v10;
  *(_QWORD *)(v4 + 144) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 152) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 160) = v13;
  *(_QWORD *)(v4 + 168) = v14;
  return swift_task_switch(sub_10071ABA8, v13, v14);
}

uint64_t sub_10071ABA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = Artwork.CropStyle.fallback.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v3);
  v8 = Artwork.ImageFormat.fallback.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v8, v5);
  v9 = (_QWORD *)swift_task_alloc(dword_1011DEFCC);
  *(_QWORD *)(v0 + 176) = v9;
  *v9 = v0;
  v9[1] = sub_10071AC50;
  return Artwork.image(for:cropStyle:format:)(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120), *(double *)(v0 + 56), *(double *)(v0 + 64));
}

uint64_t sub_10071AC50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 176);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 144);
  v8 = *(_QWORD *)(*(_QWORD *)v2 + 120);
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 128);
  v9 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  v10 = *(_QWORD *)(*(_QWORD *)v2 + 112);
  v3[23] = a1;
  v3[24] = v1;
  swift_task_dealloc(v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if (v1)
    v11 = sub_10071AF44;
  else
    v11 = sub_10071ACFC;
  return swift_task_switch(v11, v3[20], v3[21]);
}

uint64_t sub_10071ACFC()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  id v7;
  _QWORD *v8;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  objc_msgSend(*(id *)(v0 + 184), "size");
  if (v1 <= 0.0 || (objc_msgSend(*(id *)(v0 + 184), "size"), v2 <= 0.0))
  {
    v10 = *(void **)(v0 + 184);

    swift_release();
    v11 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 184);
    v5 = *(double *)(v0 + 64);
    v4 = *(double *)(v0 + 72);
    v6 = *(double *)(v0 + 56);
    v7 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", 2);
    Backdrop.SnapshotConfiguration.init(image:size:scale:offset:traitCollection:)(v3, v7, v6, v5, v4, 0.0);
    type metadata accessor for Backdrop.CompositeRenderer(0);
    v8 = (_QWORD *)swift_task_alloc(async function pointer to static Backdrop.CompositeRenderer.snapshot(configuration:)[1]);
    *(_QWORD *)(v0 + 200) = v8;
    *v8 = v0;
    v8[1] = sub_10071AE44;
    return static Backdrop.CompositeRenderer.snapshot(configuration:)(*(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_10071AE44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 200);
  *(_QWORD *)(*(_QWORD *)v2 + 208) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[20];
    v7 = v4[21];
    v8 = sub_10071B160;
  }
  else
  {
    v4[27] = a1;
    v6 = v4[20];
    v7 = v4[21];
    v8 = sub_10071AEB8;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10071AEB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);

  swift_release(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_10071AF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  swift_release();
  if (qword_10119C740 != -1)
    swift_once(&qword_10119C740, sub_100716478);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124D860);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 192);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v16 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C(&qword_1011A14B0);
    v11 = String.init<A>(describing:)(v0 + 16, v10);
    *(_QWORD *)(v0 + 24) = sub_100322200(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to retrieve artwork image for backdrop with error=%{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 192));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10071B160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  swift_release();
  if (qword_10119C740 != -1)
    swift_once(&qword_10119C740, sub_100716478);
  v1 = *(_QWORD *)(v0 + 208);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124D860);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 208);
  v8 = *(void **)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 80);
  if (v6)
  {
    v20 = *(_QWORD *)(v0 + 96);
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v21 = v13;
    *(_DWORD *)v12 = 136446210;
    *(_QWORD *)(v0 + 32) = v7;
    swift_errorRetain(v7);
    v14 = sub_100007E8C(&qword_1011A14B0);
    v15 = String.init<A>(describing:)(v0 + 32, v14);
    *(_QWORD *)(v0 + 40) = sub_100322200(v15, v16, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to create backdrop with error=%{public}s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v20, v11);
  }
  else
  {

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  v17 = *(_QWORD *)(v0 + 120);
  v18 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10071B3BC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10071B3F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011C5C6C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100711200(a1, v4, v5, v7, v6);
}

uint64_t sub_10071B468()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10071B48C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.6);
}

uint64_t sub_10071B4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id sub_10071B4F8(id result, unint64_t a2)
{
  unint64_t v2;

  v2 = a2 >> 62;
  if (a2 >> 62 == 2 || (_DWORD)v2 == 1)
    return result;
  if (!(_DWORD)v2)
    return (id)swift_unknownObjectRetain(result, a2);
  return result;
}

void sub_10071B520(void *a1, unint64_t a2)
{
  unint64_t v2;

  v2 = a2 >> 62;
  if (a2 >> 62 == 2 || (_DWORD)v2 == 1)
  {

  }
  else if (!(_DWORD)v2)
  {
    swift_unknownObjectRelease(a1);
  }
}

_QWORD *initializeWithCopy for ContainerDetail.RepresentableView(_QWORD *a1, uint64_t a2)
{
  id v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_10071B4F8(*(id *)a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ContainerDetail.RepresentableView(uint64_t a1, uint64_t a2)
{
  id v4;
  unint64_t v5;
  void *v6;
  unint64_t v7;

  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_10071B4F8(*(id *)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  sub_10071B520(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for ContainerDetail.RepresentableView(uint64_t a1, uint64_t a2)
{
  void *v4;
  unint64_t v5;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10071B520(v4, v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerDetail.RepresentableView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContainerDetail.RepresentableView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerDetail.RepresentableView()
{
  return &type metadata for ContainerDetail.RepresentableView;
}

uint64_t *sub_10071B708(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v9 = _s6AlbumsV5ScopeOMa(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      v11 = sub_100007E8C((uint64_t *)&unk_1011D0B60);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v9);
      if (EnumCaseMultiPayload == 2)
      {
        v14 = type metadata accessor for Artist(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload(a1, v9, 2);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v15 = type metadata accessor for Composer(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        swift_storeEnumTagMultiPayload(a1, v9, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v10 + 64));
      }
      else
      {
        v13 = type metadata accessor for Genre(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload(a1, v9, 0);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v16 = sub_100007E8C((uint64_t *)&unk_1011AD760);
    *((_BYTE *)a1 + *(int *)(v16 + 48)) = *((_BYTE *)a2 + *(int *)(v16 + 48));
    *((_BYTE *)a1 + *(int *)(v16 + 64)) = *((_BYTE *)a2 + *(int *)(v16 + 64));
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

uint64_t sub_10071B8F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if (!(_DWORD)result)
  {
    v4 = _s6AlbumsV5ScopeOMa(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
    if (!(_DWORD)result)
    {
      result = swift_getEnumCaseMultiPayload(a1, v4);
      if ((_DWORD)result == 2)
      {
        v5 = type metadata accessor for Artist(0);
      }
      else if ((_DWORD)result == 1)
      {
        v5 = type metadata accessor for Composer(0);
      }
      else
      {
        if ((_DWORD)result)
          return result;
        v5 = type metadata accessor for Genre(0);
      }
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    }
  }
  return result;
}

void *sub_10071B99C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = _s6AlbumsV5ScopeOMa(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = sub_100007E8C((uint64_t *)&unk_1011D0B60);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
      if (EnumCaseMultiPayload == 2)
      {
        v11 = type metadata accessor for Artist(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload(a1, v6, 2);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v12 = type metadata accessor for Composer(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload(a1, v6, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
      }
      else
      {
        v10 = type metadata accessor for Genre(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload(a1, v6, 0);
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v13 = sub_100007E8C((uint64_t *)&unk_1011AD760);
    *((_BYTE *)a1 + *(int *)(v13 + 48)) = *((_BYTE *)a2 + *(int *)(v13 + 48));
    *((_BYTE *)a1 + *(int *)(v13 + 64)) = *((_BYTE *)a2 + *(int *)(v13 + 64));
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_10071BB60(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for ContainerDetail.Source);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = _s6AlbumsV5ScopeOMa(0);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = sub_100007E8C((uint64_t *)&unk_1011D0B60);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
        if (EnumCaseMultiPayload == 2)
        {
          v11 = type metadata accessor for Artist(0);
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
          swift_storeEnumTagMultiPayload(a1, v6, 2);
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v12 = type metadata accessor for Composer(0);
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
          swift_storeEnumTagMultiPayload(a1, v6, 1);
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        }
        else
        {
          v10 = type metadata accessor for Genre(0);
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
          swift_storeEnumTagMultiPayload(a1, v6, 0);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v13 = sub_100007E8C((uint64_t *)&unk_1011AD760);
      *((_BYTE *)a1 + *(int *)(v13 + 48)) = *((_BYTE *)a2 + *(int *)(v13 + 48));
      *((_BYTE *)a1 + *(int *)(v13 + 64)) = *((_BYTE *)a2 + *(int *)(v13 + 64));
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *sub_10071BD3C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = _s6AlbumsV5ScopeOMa(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = sub_100007E8C((uint64_t *)&unk_1011D0B60);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
      if (EnumCaseMultiPayload == 2)
      {
        v11 = type metadata accessor for Artist(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload(a1, v6, 2);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v12 = type metadata accessor for Composer(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload(a1, v6, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
      }
      else
      {
        v10 = type metadata accessor for Genre(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload(a1, v6, 0);
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v13 = sub_100007E8C((uint64_t *)&unk_1011AD760);
    *((_BYTE *)a1 + *(int *)(v13 + 48)) = *((_BYTE *)a2 + *(int *)(v13 + 48));
    *((_BYTE *)a1 + *(int *)(v13 + 64)) = *((_BYTE *)a2 + *(int *)(v13 + 64));
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_10071BF00(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for ContainerDetail.Source);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = _s6AlbumsV5ScopeOMa(0);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = sub_100007E8C((uint64_t *)&unk_1011D0B60);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
        if (EnumCaseMultiPayload == 2)
        {
          v11 = type metadata accessor for Artist(0);
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
          swift_storeEnumTagMultiPayload(a1, v6, 2);
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v12 = type metadata accessor for Composer(0);
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
          swift_storeEnumTagMultiPayload(a1, v6, 1);
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        }
        else
        {
          v10 = type metadata accessor for Genre(0);
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
          swift_storeEnumTagMultiPayload(a1, v6, 0);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v13 = sub_100007E8C((uint64_t *)&unk_1011AD760);
      *((_BYTE *)a1 + *(int *)(v13 + 48)) = *((_BYTE *)a2 + *(int *)(v13 + 48));
      *((_BYTE *)a1 + *(int *)(v13 + 64)) = *((_BYTE *)a2 + *(int *)(v13 + 64));
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_10071C0DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  sub_10015C698(319, (unint64_t *)&unk_1011C5D10, _s6AlbumsV5ScopeOMa);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout3(v4, *(_QWORD *)(v2 - 8) + 64, &unk_100ECC390, &unk_100ECC390);
    v5[0] = v4;
    v5[1] = &unk_100ECC390;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
  }
}

uint64_t storeEnumTagSinglePayload for ContainerDetail.LoadingState.ContainerType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10071C1C0 + 4 * byte_100ECC35B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10071C1F4 + 4 * byte_100ECC356[v4]))();
}

uint64_t sub_10071C1F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10071C1FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10071C204);
  return result;
}

uint64_t sub_10071C210(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10071C218);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10071C21C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10071C224(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContainerDetail.LoadingState.ContainerType()
{
  return &type metadata for ContainerDetail.LoadingState.ContainerType;
}

unint64_t sub_10071C244()
{
  unint64_t result;

  result = qword_1011C5D40;
  if (!qword_1011C5D40)
  {
    result = swift_getWitnessTable(&unk_100ECC768, &type metadata for ContainerDetail.LoadingState.ContainerType);
    atomic_store(result, (unint64_t *)&qword_1011C5D40);
  }
  return result;
}

uint64_t sub_10071C288(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAB4A0, 1);
}

double _s5Music15ContainerDetailV27ViewControllerRepresentableVwxx_0(uint64_t a1)
{
  double result;

  sub_10071B520(*(void **)a1, *(_QWORD *)(a1 + 8));
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *_s5Music15ContainerDetailV27ViewControllerRepresentableVwCP_0(_QWORD *a1, uint64_t a2)
{
  id v4;
  unint64_t v5;

  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_10071B4F8(*(id *)a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ContainerDetail.ViewControllerRepresentable(uint64_t a1, uint64_t a2)
{
  id v4;
  unint64_t v5;
  void *v6;
  unint64_t v7;

  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_10071B4F8(*(id *)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  sub_10071B520(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ContainerDetail.ViewControllerRepresentable(uint64_t a1, uint64_t a2)
{
  void *v4;
  unint64_t v5;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10071B520(v4, v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ContainerDetail.ViewControllerRepresentable()
{
  return &type metadata for ContainerDetail.ViewControllerRepresentable;
}

_QWORD *initializeBufferWithCopyOfBuffer for ContainerDetail.ViewControllerRepresentable.DataType(_QWORD *a1, uint64_t a2)
{
  id v3;
  unint64_t v4;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  sub_10071B4F8(*(id *)a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

void destroy for ContainerDetail.ViewControllerRepresentable.DataType(uint64_t a1)
{
  sub_10071B520(*(void **)a1, *(_QWORD *)(a1 + 8));
}

uint64_t assignWithCopy for ContainerDetail.ViewControllerRepresentable.DataType(uint64_t a1, uint64_t a2)
{
  id v3;
  unint64_t v4;
  void *v5;
  unint64_t v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  sub_10071B4F8(*(id *)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  sub_10071B520(v5, v6);
  return a1;
}

uint64_t assignWithTake for ContainerDetail.ViewControllerRepresentable.DataType(uint64_t a1, _OWORD *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_10071B520(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerDetail.ViewControllerRepresentable.DataType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)(a1 + 8) >> 57) >> 5) | (4
                                                          * ((*(_QWORD *)(a1 + 8) >> 57) & 0x18 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ContainerDetail.ViewControllerRepresentable.DataType(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_10071C53C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 62;
}

uint64_t sub_10071C548(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_10071C558(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for ContainerDetail.ViewControllerRepresentable.DataType()
{
  return &type metadata for ContainerDetail.ViewControllerRepresentable.DataType;
}

unint64_t sub_10071C580()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C5D48;
  if (!qword_1011C5D48)
  {
    v1 = sub_100044B54(&qword_1011C5D50);
    sub_10071C5EC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C5D48);
  }
  return result;
}

unint64_t sub_10071C5EC()
{
  unint64_t result;

  result = qword_1011C5D58;
  if (!qword_1011C5D58)
  {
    result = swift_getWitnessTable(&unk_100ECC808, &type metadata for ContainerDetail.ViewControllerRepresentable);
    atomic_store(result, (unint64_t *)&qword_1011C5D58);
  }
  return result;
}

char *sub_10071C634(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  _BYTE *v20;
  char *v21;
  id v22;
  char *v23;
  char *v24;
  void *v25;
  char *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v34;

  v4 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3D70);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AlbumDetailDataSource.ProminentTrackSource(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  *v6 = 0;
  swift_storeEnumTagMultiPayload(v6, v4, 1);
  v15 = objc_allocWithZone((Class)type metadata accessor for AlbumDetailDataSource(0));
  v16 = sub_10049BBBC(0, 0, (uint64_t)v6, (uint64_t)v12, (uint64_t)v9);
  v17 = objc_allocWithZone((Class)type metadata accessor for JSContainerDetailComponentController(0));
  v18 = a1;
  v19 = (void *)JSContainerDetailComponentController.init(containerDetail:isUsingMediaAPI:headerConfigurationHandler:)(v18, 1, (void (*)(id, __n128))UIScreen.Dimensions.size.getter, 0);
  v20 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
  v21 = v16;
  v22 = v19;
  v23 = sub_1003723A0(v21, v19, v20);
  *(_QWORD *)&v23[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver] = a2;
  v24 = v23;
  swift_retain();
  swift_release();
  v25 = *(void **)&v24[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController];
  if (v25)
  {
    v26 = v25;
    v27 = (void *)*JSContainerDetail.NotificationName.storeItemMetadataDidChange.unsafeMutableAddressor();
    v28 = *(void **)&v26[OBJC_IVAR____TtC11MusicJSCore36JSContainerDetailComponentController_containerDetail];
    v29 = swift_allocObject(&unk_1010D8488, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16);
    v30 = type metadata accessor for NotificationObserver();
    swift_allocObject(v30, 64, 7);
    v31 = v27;
    v32 = v28;
    *(_QWORD *)&v24[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_storeItemMetadataDidChangeObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v31, (uint64_t)v28, 1, 1, (uint64_t)sub_10071CBD4, v29);

    swift_release();
  }
  else
  {

  }
  swift_release();

  return v24;
}

char *sub_10071C914(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  id v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  _BYTE *v20;
  char *v21;
  id v22;
  char *v23;
  char *v24;
  void *v25;
  char *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v34;

  v4 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - v11;
  v13 = type metadata accessor for URL(0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(v9, 1, 1, v13);
  *v6 = 0;
  swift_storeEnumTagMultiPayload(v6, v4, 1);
  v15 = objc_allocWithZone((Class)type metadata accessor for PlaylistDetailDataSource(0));
  v16 = sub_10092B838(0, 0, (uint64_t)v6, 0, 0, (uint64_t)v12, (uint64_t)v9);
  v17 = objc_allocWithZone((Class)type metadata accessor for JSContainerDetailComponentController(0));
  v18 = a1;
  v19 = (void *)JSContainerDetailComponentController.init(containerDetail:isUsingMediaAPI:headerConfigurationHandler:)(v18, 1, (void (*)(id, __n128))UIScreen.Dimensions.size.getter, 0);
  v20 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
  v21 = v16;
  v22 = v19;
  v23 = sub_1003728E0(v21, v19, v20);
  *(_QWORD *)&v23[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver] = a2;
  v24 = v23;
  swift_retain();
  swift_release();
  v25 = *(void **)&v24[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController];
  if (v25)
  {
    v26 = v25;
    v27 = (void *)*JSContainerDetail.NotificationName.storeItemMetadataDidChange.unsafeMutableAddressor();
    v28 = *(void **)&v26[OBJC_IVAR____TtC11MusicJSCore36JSContainerDetailComponentController_containerDetail];
    v29 = swift_allocObject(&unk_1010D8488, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16);
    v30 = type metadata accessor for NotificationObserver();
    swift_allocObject(v30, 64, 7);
    v31 = v27;
    v32 = v28;
    *(_QWORD *)&v24[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_storeItemMetadataDidChangeObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v31, (uint64_t)v28, 1, 1, (uint64_t)sub_10071CBD4, v29);

    swift_release();
  }
  else
  {

  }
  swift_release();

  return v24;
}

void sub_10071CBD4(uint64_t a1)
{
  uint64_t v1;

  sub_10071323C(a1, v1);
}

unint64_t sub_10071CBDC()
{
  unint64_t result;

  result = qword_1011C5D68[0];
  if (!qword_1011C5D68[0])
  {
    result = swift_getWitnessTable(&unk_100ECC858, &type metadata for ContainerDetail.ViewControllerRepresentable);
    atomic_store(result, qword_1011C5D68);
  }
  return result;
}

uint64_t sub_10071CC64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = &unk_100ECC8F8;
      swift_initStructMetadata(a1, 0, 4, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10071CD04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64) + 7;
  v11 = v9 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((v10 + ((v9 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v22 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v14 = (_QWORD *)(((unint64_t)v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v15 = (uint64_t *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v16 = *v15;
    *v14 = *v15;
    v17 = ((unint64_t)v14 + v9 + 8) & ~v9;
    v18 = ((unint64_t)v15 + v9 + 8) & ~v9;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    swift_retain(v16);
    v19(v17, v18, v5);
    v20 = (_QWORD *)((v10 + v17) & 0xFFFFFFFFFFFFFFF8);
    v21 = (uint64_t *)((v10 + v18) & 0xFFFFFFFFFFFFFFF8);
    v22 = *v21;
    *v20 = *v21;
    v20[1] = v21[1];
  }
  swift_retain(v22);
  return v4;
}

uint64_t sub_10071CE50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = (_QWORD *)((a1 + *(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release(*v5);
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  return swift_release(*(_QWORD *)((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8));
}

uint64_t sub_10071CED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (uint64_t *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  *v8 = *v9;
  v11 = *(_QWORD *)(a3 + 24);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)v8 + v13 + 8) & ~v13;
  v15 = ((unint64_t)v9 + v13 + 8) & ~v13;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  swift_retain(v10);
  v16(v14, v15, v11);
  v17 = *(_QWORD *)(v12 + 64) + 7;
  v18 = (_QWORD *)((v17 + v14) & 0xFFFFFFFFFFFFFFF8);
  v19 = (uint64_t *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  v20 = *v19;
  *v18 = *v19;
  v18[1] = v19[1];
  swift_retain(v20);
  return a1;
}

uint64_t sub_10071CFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (uint64_t *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (uint64_t *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  v11 = *v8;
  *v8 = *v9;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)v8 + v13 + 8) & ~v13;
  v15 = ((unint64_t)v9 + v13 + 8) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64) + 7;
  v17 = (uint64_t *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = (uint64_t *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  v19 = *v17;
  v20 = *v18;
  *v17 = *v18;
  swift_retain(v20);
  swift_release(v19);
  v17[1] = v18[1];
  return a1;
}

uint64_t sub_10071D084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v8 + v11 + 8) & ~v11;
  v13 = ((unint64_t)v9 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v12, v13);
  *(_OWORD *)((*(_QWORD *)(v10 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v10 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10071D134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (uint64_t *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (uint64_t *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v8;
  *v8 = *v9;
  swift_release(v10);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v8 + v12 + 8) & ~v12;
  v14 = ((unint64_t)v9 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (uint64_t *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (uint64_t *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = *v16;
  *v16 = *v17;
  swift_release(v18);
  v16[1] = v17[1];
  return a1;
}

uint64_t sub_10071D204(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t *v15;
  unint64_t v16;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (v5 <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v4 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = v7;
  if (!a2)
    return 0;
  v9 = *(_QWORD *)(v4 + 64);
  v10 = *(unsigned __int8 *)(v6 + 80);
  if (v8 >= a2)
  {
    if (v5 == v8)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v4 + 48))(a1, *(unsigned int *)(v4 + 84), v3);
    }
    else
    {
      v15 = (unint64_t *)((a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((v7 & 0x80000000) != 0)
      {
        return (*(uint64_t (**)(unint64_t))(v6 + 48))(((unint64_t)v15 + v10 + 8) & ~v10);
      }
      else
      {
        v16 = *v15;
        if (v16 >= 0xFFFFFFFF)
          LODWORD(v16) = -1;
        return (v16 + 1);
      }
    }
  }
  else
  {
    if (((((*(_QWORD *)(v6 + 64) + ((v10 + ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v8 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10071D2B0 + 4 * byte_100ECC8D0[v13]))();
  }
}

void sub_10071D35C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = v7;
  v9 = *(unsigned __int8 *)(v6 + 80);
  if (v8 >= a3)
  {
    v12 = 0;
    if (a2 <= v8)
      goto LABEL_20;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + (((_DWORD)v9 + ((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 8) & ~(_DWORD)v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v10 = a3 - v8 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    if (a2 <= v8)
LABEL_20:
      __asm { BR              X4 }
  }
  if (((*(_DWORD *)(v6 + 64) + (((_DWORD)v9 + ((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 8) & ~(_DWORD)v9) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v13 = ~v8 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + ((v9 + ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v13;
  }
  __asm { BR              X10 }
}

void sub_10071D484()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10071D514);
}

void sub_10071D48C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10071D494);
  JUMPOUT(0x10071D514);
}

void sub_10071D4CC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10071D514);
}

void sub_10071D4D4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10071D514);
}

void sub_10071D4DC(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (a2)
  {
    if (v2 != v4)
    {
      if ((v3 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) == 0)
          JUMPOUT(0x10071D510);
        JUMPOUT(0x10071D50CLL);
      }
      JUMPOUT(0x10071D4E8);
    }
    JUMPOUT(0x10071D4F8);
  }
  JUMPOUT(0x10071D514);
}

uint64_t type metadata accessor for FavoriteButton(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for FavoriteButton);
}

uint64_t sub_10071D538(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_100FAB584, 1);
}

uint64_t sub_10071D56C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, _QWORD *);
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t OpaqueTypeConformance2;
  uint64_t v60;
  uint64_t WitnessTable;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD v114[21];
  _QWORD v115[4];
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;

  v113 = a2;
  v4 = *(a1 - 1);
  v91 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v90 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011C5DF0);
  v102 = *(_QWORD *)(v6 - 8);
  v7 = v6;
  v94 = v6;
  __chkstk_darwin(v6);
  v96 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v93 = sub_100049F28(&qword_1011C5DF8, &qword_1011C5DF0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v88 = a1[5];
  *(_QWORD *)&v116 = v7;
  *((_QWORD *)&v116 + 1) = v9;
  *(_QWORD *)&v117 = v93;
  *((_QWORD *)&v117 + 1) = v88;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v116, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v11 = sub_100044B54(&qword_1011A0610);
  v12 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v11);
  v97 = v12;
  v13 = sub_100044B54(&qword_1011A0618);
  v14 = type metadata accessor for ModifiedContent(0, v12, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v95 = v14;
  v103 = v15;
  __chkstk_darwin(v14);
  v89 = (uint64_t)&v86 - v16;
  v17 = sub_100044B54(&qword_1011BB4C0);
  v18 = type metadata accessor for ModifiedContent(255, v14, v17);
  v100 = v18;
  v19 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v20 = type metadata accessor for ModifiedContent(0, v18, v19);
  v21 = *(_QWORD *)(v20 - 8);
  v99 = v20;
  v107 = v21;
  __chkstk_darwin(v20);
  v92 = (char *)&v86 - v22;
  v23 = sub_100044B54((uint64_t *)&unk_1011B44F8);
  v24 = type metadata accessor for ModifiedContent(0, v20, v23);
  v25 = *(_QWORD *)(v24 - 8);
  v105 = v24;
  v109 = v25;
  __chkstk_darwin(v24);
  v98 = (char *)&v86 - v26;
  v28 = type metadata accessor for ModifiedContent(0, v27, &type metadata for _OpacityEffect);
  v29 = *(_QWORD *)(v28 - 8);
  v106 = v28;
  v111 = v29;
  __chkstk_darwin(v28);
  v101 = (char *)&v86 - v30;
  v110 = type metadata accessor for ModifiedContent(0, v31, v19);
  v112 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v104 = (char *)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v108 = (uint64_t)&v86 - v34;
  v35 = type metadata accessor for MusicFavoriteStatus(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v86 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1[2];
  v86 = a1[4];
  dispatch thunk of FavoritableMusicItem.favoriteStatus.getter(v40, v37);
  v87 = v2;
  sub_10071DCC8((uint64_t)v39, a1, (uint64_t *)&v116);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v35);
  v41 = v4;
  v42 = *(void (**)(char *, uint64_t, _QWORD *))(v4 + 16);
  v43 = v90;
  v44 = a1;
  v42(v90, v2, a1);
  v45 = *(unsigned __int8 *)(v41 + 80);
  v46 = v41;
  v47 = (v45 + 112) & ~v45;
  v48 = swift_allocObject(&unk_1010D8C38, v47 + v91, v45 | 7);
  *(_QWORD *)(v48 + 16) = v40;
  *(_QWORD *)(v48 + 24) = v9;
  v49 = v86;
  v50 = v88;
  *(_QWORD *)(v48 + 32) = v86;
  *(_QWORD *)(v48 + 40) = v50;
  v51 = v117;
  *(_OWORD *)(v48 + 48) = v116;
  *(_OWORD *)(v48 + 64) = v51;
  v52 = v119;
  *(_OWORD *)(v48 + 80) = v118;
  *(_OWORD *)(v48 + 96) = v52;
  (*(void (**)(uint64_t, char *, _QWORD *))(v46 + 32))(v48 + v47, v43, v44);
  v114[2] = v40;
  v114[3] = v9;
  v114[4] = v49;
  v114[5] = v50;
  v114[6] = &v116;
  sub_10071F68C(&v116);
  v53 = sub_100007E8C(&qword_1011C5E00);
  v54 = sub_10071F6E0();
  v55 = v96;
  Button.init(action:label:)(sub_10071F608, v48, sub_10071F67C, v114, v53, v54);
  v56 = v89;
  v58 = v93;
  v57 = v94;
  sub_10058DD18(v87 + *((int *)v44 + 14), 2, v94, v9, v93, v50, v89);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v55, v57);
  LOBYTE(v49) = BYTE8(v117);
  v115[0] = v57;
  v115[1] = v9;
  v115[2] = v58;
  v115[3] = v50;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v115, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v60 = sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v114[19] = OpaqueTypeConformance2;
  v114[20] = v60;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v97);
  v62 = sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v114[17] = WitnessTable;
  v114[18] = v62;
  v63 = v95;
  v64 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v95);
  v65 = v92;
  sub_10058DFAC(v49, v63, v64);
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v56, v63);
  v66 = BYTE9(v117);
  v67 = sub_100049F28(&qword_1011BB4D0, &qword_1011BB4C0, (uint64_t)&protocol conformance descriptor for _InsettableBackgroundShapeModifier<A, B>);
  v114[15] = v64;
  v114[16] = v67;
  v68 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v100);
  v69 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v114[13] = v68;
  v114[14] = v69;
  v70 = v99;
  v71 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v99);
  v72 = v98;
  View.disabled(_:)(v66, v70, v71);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v65, v70);
  if ((_DWORD)v66)
    v73 = 0.5;
  else
    v73 = 1.0;
  v74 = sub_100049F28(&qword_1011B44F0, (uint64_t *)&unk_1011B44F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  v114[11] = v71;
  v114[12] = v74;
  v75 = v105;
  v76 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v105);
  v77 = v101;
  View.opacity(_:)(v75, v76, v73);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v72, v75);
  v78 = v118;
  v114[9] = v76;
  v114[10] = &protocol witness table for _OpacityEffect;
  v79 = v106;
  v80 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v106);
  v81 = (uint64_t)v104;
  View.accessibilityLabel(_:)(v78, *((unint64_t *)&v78 + 1), v79, v80);
  sub_10071F764(&v116);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v77, v79);
  v114[7] = v80;
  v114[8] = v69;
  v82 = v110;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v110);
  v83 = v108;
  sub_10081EB14(v81, v82, v108);
  v84 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  v84(v81, v82);
  sub_1000EA744(v83, v82, v113);
  return ((uint64_t (*)(uint64_t, uint64_t))v84)(v83, v82);
}

uint64_t sub_10071DCC8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t, __n128);
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  void *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  Swift::String v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  unint64_t v78;
  unint64_t v79;

  v69 = a3;
  v74 = type metadata accessor for MusicLibrary.UndoFavoriteAction(0);
  v65 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v63 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011C5E20);
  v66 = *(_QWORD *)(v6 - 8);
  v67 = v6;
  __chkstk_darwin(v6);
  v64 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = a2;
  v73 = *(a2 - 1);
  v8 = *(_QWORD *)(v73 + 64);
  __chkstk_darwin(v9);
  v77 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibrary.FavoriteAction(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100007E8C(&qword_1011C5E28);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicFavoriteStatus(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v62 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v62 - v21;
  v23 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v71 = a1;
  v23((char *)&v62 - v21, a1, v16, v20);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v22, v16);
  v72 = v8;
  if ((_DWORD)v24 == enum case for MusicFavoriteStatus.neutral(_:))
    goto LABEL_5;
  v26 = v75;
  if ((_DWORD)v24 == enum case for MusicFavoriteStatus.favorited(_:))
  {
    v71 = static Color.black.getter(v24);
    v27 = v76;
    v28 = v63;
    static MusicLibraryAction<>.undoFavorite.getter(v71);
    v29 = v27[2];
    v30 = v27[4];
    v31 = (uint64_t)v64;
    v32 = v74;
    MusicLibrary.supportedStatus<A, B>(for:action:)(v26, v28, v29, v74, *(_QWORD *)(v30 + 8), &protocol witness table for MusicLibrary.UndoFavoriteAction);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v28, v32);
    v33 = v27[3];
    v34 = v27[5];
    LODWORD(v74) = sub_100720074(v31);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v31, v67);
    v35 = AccessibilityString.undoFavoriteButtonLabel.unsafeMutableAddressor();
    v36 = *v35;
    v70 = v35[1];
    v37 = v73;
    (*(void (**)(char *, uint64_t, _QWORD *))(v73 + 16))(v77, v26, v27);
    v38 = *(unsigned __int8 *)(v37 + 80);
    v39 = (v38 + 48) & ~v38;
    v40 = (_QWORD *)swift_allocObject(&unk_1010D8C88, v39 + v72, v38 | 7);
    v40[2] = v29;
    v40[3] = v33;
    v40[4] = v30;
    v40[5] = v34;
    v41 = (char *)v40 + v39;
    v42 = &unk_1011C5E40;
    v43 = 1;
    v44 = 0xE90000000000006CLL;
    v45 = 0x6C69662E72617473;
LABEL_6:
    (*(void (**)(char *, char *, _QWORD *))(v37 + 32))(v41, v77, v76);
    result = swift_bridgeObjectRetain();
    v58 = v74 & 1;
    v59 = v69;
    *v69 = v45;
    v59[1] = v44;
    v59[2] = v71;
    *((_BYTE *)v59 + 24) = v43;
    *((_BYTE *)v59 + 25) = v58;
    v59[4] = v36;
    v59[5] = result;
    v59[6] = (uint64_t)v42;
    v59[7] = (uint64_t)v40;
    return result;
  }
  if ((_DWORD)v24 == enum case for MusicFavoriteStatus.disliked(_:))
  {
LABEL_5:
    v71 = static Color.primary.getter(v25);
    v47 = v75;
    v46 = v76;
    static MusicLibraryAction<>.favorite.getter(v71);
    v48 = v46[2];
    v49 = v46[4];
    MusicLibrary.supportedStatus<A, B>(for:action:)(v47, v13, v48, v10, *(_QWORD *)(v49 + 8), &protocol witness table for MusicLibrary.FavoriteAction);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v50 = v46[3];
    v51 = v46[5];
    LODWORD(v74) = sub_10071FA5C((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v15, v70);
    v52 = AccessibilityString.favoriteButtonLabel.unsafeMutableAddressor();
    v53 = *v52;
    v70 = v52[1];
    v54 = v73;
    (*(void (**)(char *, uint64_t, _QWORD *))(v73 + 16))(v77, v47, v46);
    v55 = *(unsigned __int8 *)(v54 + 80);
    v56 = (v55 + 48) & ~v55;
    v40 = (_QWORD *)swift_allocObject(&unk_1010D8CB0, v56 + v72, v55 | 7);
    v43 = 0;
    v40[2] = v48;
    v40[3] = v50;
    v40[4] = v49;
    v40[5] = v51;
    v41 = (char *)v40 + v56;
    v42 = &unk_1011C5E50;
    v44 = 0xE400000000000000;
    v45 = 1918989427;
    v37 = v54;
    v36 = v53;
    goto LABEL_6;
  }
  ((void (*)(char *, uint64_t, uint64_t))v23)(v62, v71, v16);
  v78 = 0;
  v79 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  v78 = 0xD000000000000017;
  v79 = 0x8000000100E43690;
  v60 = sub_100048748(&qword_1011C5E30, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
  v61._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v16, v60);
  String.append(_:)(v61);
  swift_bridgeObjectRelease();
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v78, v79, "Music/FavoriteButton.swift", 26, 2, 107, 0);
  __break(1u);
  return result;
}

double sub_10071E238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];

  v28 = a5;
  v29 = a6;
  v30[0] = a3;
  v30[1] = a4;
  v30[2] = a5;
  v30[3] = a6;
  v10 = type metadata accessor for FavoriteButton(0, (uint64_t)v30);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v14 = (char *)&v28 - v13;
  v15 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  type metadata accessor for MainActor(0);
  sub_10071F68C((_QWORD *)a1);
  v20 = static MainActor.shared.getter(v19);
  v21 = *(unsigned __int8 *)(v11 + 80);
  v22 = (v21 + 128) & ~v21;
  v23 = swift_allocObject(&unk_1010D8C60, v22 + v12, v21 | 7);
  *(_QWORD *)(v23 + 16) = v20;
  *(_QWORD *)(v23 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v23 + 32) = a3;
  *(_QWORD *)(v23 + 40) = a4;
  v24 = v29;
  *(_QWORD *)(v23 + 48) = v28;
  *(_QWORD *)(v23 + 56) = v24;
  v25 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v23 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(v23 + 80) = v25;
  v26 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v23 + 96) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v23 + 112) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v23 + v22, v14, v10);
  sub_100166D14((uint64_t)v17, (uint64_t)&unk_1011C5E18, v23);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10071E3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  int *v15;
  _QWORD *v16;
  uint64_t (*v18)(void);

  v6[37] = a5;
  v6[38] = a6;
  v9 = type metadata accessor for ContinuousClock(0);
  v6[39] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[40] = v10;
  v6[41] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Artist(0);
  v6[42] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[43] = v12;
  v6[44] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a6 - 8);
  v6[45] = v13;
  v6[46] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[47] = type metadata accessor for MainActor(0);
  v6[48] = static MainActor.shared.getter(v14);
  v15 = *(int **)(a4 + 48);
  v18 = (uint64_t (*)(void))((char *)v15 + *v15);
  v16 = (_QWORD *)swift_task_alloc(v15[1]);
  v6[49] = v16;
  *v16 = v6;
  v16[1] = sub_10071E4C0;
  return v18();
}

uint64_t sub_10071E4C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 392);
  v4 = *(_QWORD *)(*v1 + 376);
  *(_QWORD *)(*v1 + 400) = v0;
  swift_task_dealloc(v3);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 408) = v6;
  *(_QWORD *)(v2 + 416) = v5;
  if (v0)
    v7 = sub_10071E8A8;
  else
    v7 = sub_10071E54C;
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_10071E54C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;
  char *v10;

  v1 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 304);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 360) + 16))(v1, *(_QWORD *)(v0 + 296), v4);
  if (swift_dynamicCast(v2, v1, v4, v3, 6)
    && ((*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 344) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 336)), static ApplicationCapabilities.shared.getter(v0 + 136), v5 = sub_100065184((_QWORD *)(v0 + 136)), (*(_BYTE *)(v0 + 144) & 1) != 0))
  {
    ContinuousClock.init()(v5);
    v10 = (char *)&dword_1011CA2C8 + dword_1011CA2C8;
    v9 = (_QWORD *)swift_task_alloc(unk_1011CA2CC);
    *(_QWORD *)(v0 + 424) = v9;
    *v9 = v0;
    v9[1] = sub_10071E684;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v10)(2000000000000000000, 0, 0, 0, 1);
  }
  else
  {
    swift_release();
    v6 = *(_QWORD *)(v0 + 352);
    v7 = *(_QWORD *)(v0 + 328);
    swift_task_dealloc(*(_QWORD *)(v0 + 368));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10071E684()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 424));
  v4 = v2[40];
  v3 = v2[41];
  v5 = v2[39];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = v2[51];
    v7 = v2[52];
    v8 = sub_100720B4C;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[41], v2[39]);
    v6 = v2[51];
    v7 = v2[52];
    v8 = sub_10071E724;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10071E724()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v1 = JSBridge.shared.unsafeMutableAddressor();
  v2 = (_QWORD *)*v1;
  *(_QWORD *)(v0 + 432) = *v1;
  v3 = *(int **)((swift_isaMask & *v2) + 0xE0);
  v4 = v3[1];
  v7 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  v2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 440) = v5;
  *v5 = v0;
  v5[1] = sub_10071E7BC;
  return v7(v0 + 16);
}

uint64_t sub_10071E7BC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 432);
  swift_task_dealloc(*(_QWORD *)(*v0 + 440));

  return swift_task_switch(sub_10071E80C, *(_QWORD *)(v1 + 408), *(_QWORD *)(v1 + 416));
}

uint64_t sub_10071E80C()
{
  uint64_t v0;
  id *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = (id *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC11MusicJSCore7JSStore_account);
  swift_beginAccess(v1, v0 + 256, 0, 0);
  if (*v1)
  {
    v2 = *v1;
    JSAccount.didUpdateFavoriteArtist()();

  }
  sub_1000A543C(v0 + 16);
  v3 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10071E8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  swift_release();
  if (qword_10119C500 != -1)
    swift_once(&qword_10119C500, sub_10066DEA4);
  v1 = *(_QWORD *)(v0 + 400);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124D560);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 400);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v16 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 280) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C(&qword_1011A14B0);
    v11 = String.init<A>(describing:)(v0 + 280, v10);
    *(_QWORD *)(v0 + 288) = sub_100322200(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 288, v0 + 296);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Favorite button action failed, error=%{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 400));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v13 = *(_QWORD *)(v0 + 352);
  v14 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10071EAC0@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v4 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Image.Scale(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  swift_bridgeObjectRetain();
  v13 = Image.init(systemName:)(v11, v12);
  v14 = a1[2];
  KeyPath = swift_getKeyPath(&unk_100ECC970);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Image.Scale.medium(_:), v7);
  v16 = swift_getKeyPath(&unk_100ECC9A0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v4 + 28), v10, v7);
  *v6 = v16;
  v17 = sub_100007E8C(&qword_1011C5E00);
  sub_10071F7C4((uint64_t)v6, (uint64_t)a2 + *(int *)(v17 + 36));
  *a2 = v13;
  a2[1] = KeyPath;
  a2[2] = v14;
  swift_retain_n(v14, 2);
  swift_retain();
  swift_retain();
  sub_10071F80C((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10071EC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[9] = a4;
  v5[10] = a5;
  v5[7] = a2;
  v5[8] = a3;
  v5[6] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[11] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[12] = v8;
  v5[13] = v9;
  return swift_task_switch(sub_10071ECD4, v8, v9);
}

uint64_t sub_10071ECD4()
{
  uint64_t v0;
  _QWORD *v1;

  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 72);
  type metadata accessor for FavoriteButton(0, v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.undoFavorite<A>(_:)[1]);
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_10071ED50;
  return MusicLibrary.undoFavorite<A>(_:)(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 72));
}

uint64_t sub_10071ED50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10071EDE4;
  else
    v4 = sub_10071EDB0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t sub_10071EDB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10071EDE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10071EE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v5[23] = a4;
  v5[24] = a5;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  v6 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason(0);
  v5[25] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[26] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[27] = swift_task_alloc(v8);
  v5[28] = swift_task_alloc(v8);
  v9 = type metadata accessor for MusicLibrary.FavoriteAction(0);
  v5[29] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[30] = v10;
  v5[31] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011C5E28);
  v5[32] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[33] = v12;
  v5[34] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MainActor(0);
  v5[35] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v5[36] = v15;
  v5[37] = v16;
  return swift_task_switch(sub_10071EF18, v15, v16);
}

uint64_t sub_10071EF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)();
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v39 = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v0 + 128) = v39;
  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 248);
  v40 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 160);
  v38 = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 144) = v38;
  v37 = type metadata accessor for FavoriteButton(0, v0 + 128);
  static MusicLibraryAction<>.favorite.getter(v37);
  MusicLibrary.supportedStatus<A, B>(for:action:)(v6, v3, v39, v5, *(_QWORD *)(v38 + 8), &protocol witness table for MusicLibrary.FavoriteAction);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v40);
  if (v7 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    v8 = *(_QWORD *)(v0 + 272);
    v10 = *(_QWORD *)(v0 + 216);
    v9 = *(_QWORD *)(v0 + 224);
    v12 = *(_QWORD *)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 208);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 264) + 96))(v8, *(_QWORD *)(v0 + 256));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v9, v8, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v9, v12);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v10, v12);
    if (v13 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      v14 = *(_QWORD *)(v0 + 160);
      v15 = *(int *)(v37 + 60);
      v16 = *(_QWORD *)(v14 + v15);
      *(_QWORD *)(v0 + 320) = v16;
      if (v16)
      {
        v17 = v0 + 72;
        swift_retain();
        static Alert.enableCloudLibraryAlert(context:)(5, v0 + 72);
        v18 = (_QWORD *)swift_task_alloc(dword_1011D5044);
        *(_QWORD *)(v0 + 328) = v18;
        v19 = sub_10071F360;
LABEL_10:
        *v18 = v0;
        v18[1] = v19;
        return PresentedViewState<A>.present(_:)(v17);
      }
LABEL_12:
      v27 = *(_QWORD *)(v14 + v15 + 8);
      v28 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
      v29 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      return EnvironmentObject.error()(0, v27, v28, v29);
    }
    if (v13 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      v14 = *(_QWORD *)(v0 + 160);
      v15 = *(int *)(v37 + 60);
      v22 = *(_QWORD *)(v14 + v15);
      *(_QWORD *)(v0 + 336) = v22;
      if (v22)
      {
        v17 = v0 + 16;
        swift_retain();
        static Alert.explicitRestrictedAlert(forPlayback:)(0, v0 + 16);
        v18 = (_QWORD *)swift_task_alloc(dword_1011D5044);
        *(_QWORD *)(v0 + 344) = v18;
        v19 = sub_10071F444;
        goto LABEL_10;
      }
      goto LABEL_12;
    }
    v30 = *(_QWORD *)(v0 + 216);
    v31 = *(_QWORD *)(v0 + 200);
    v32 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 208) + 8);
    ((void (*)(_QWORD, uint64_t))v32)(*(_QWORD *)(v0 + 224), v31);
    v33 = swift_release();
    v32(v30, v31, v33);
  }
  else
  {
    if (v7 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v20 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.favorite<A>(_:)[1]);
      *(_QWORD *)(v0 + 304) = v20;
      *v20 = v0;
      v20[1] = sub_10071F29C;
      return MusicLibrary.favorite<A>(_:)(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184));
    }
    v23 = *(_QWORD *)(v0 + 272);
    v24 = *(_QWORD *)(v0 + 256);
    v25 = *(_QWORD *)(v0 + 264);
    v26 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v25 + 8))(v23, v24, v26);
  }
  v34 = *(_QWORD *)(v0 + 248);
  v36 = *(_QWORD *)(v0 + 216);
  v35 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10071F29C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 304);
  *(_QWORD *)(*v1 + 312) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10071F4AC;
  else
    v4 = sub_10071F2FC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 288), *(_QWORD *)(v2 + 296));
}

uint64_t sub_10071F2FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 280));
  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10071F360()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 328));
  sub_100365848(v1 + 9);
  swift_release();
  return swift_task_switch(sub_10071F3C8, v1[36], v1[37]);
}

uint64_t sub_10071F3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 280));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10071F444()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 344));
  sub_100365848(v1 + 2);
  swift_release();
  return swift_task_switch(sub_100720B50, v1[36], v1[37]);
}

uint64_t sub_10071F4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10071F514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 16);
  v1 = v11;
  v12 = *(_OWORD *)(v0 + 24);
  v10 = v12;
  v13 = v2;
  v3 = type metadata accessor for FavoriteButton(0, (uint64_t)&v11);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v7 = swift_release();
  v8 = v0 + v5;
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v1 - 8) + 8))(v8, v1, v7);
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8 + *(int *)(v3 + 56));
  swift_release();
  return swift_deallocObject(v0, v6);
}

double sub_10071F608()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v7[0] = v0[2];
  v1 = v7[0];
  v7[1] = v2;
  v7[2] = v3;
  v7[3] = v4;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FavoriteButton(0, (uint64_t)v7) - 8) + 80);
  return sub_10071E238((uint64_t)(v0 + 6), (uint64_t)v0 + ((v5 + 112) & ~v5), v1, v2, v3, v4);
}

double sub_10071F67C@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10071EAC0(*(uint64_t **)(v1 + 48), a1);
}

_QWORD *sub_10071F68C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[2];
  v3 = a1[5];
  v4 = a1[7];
  swift_bridgeObjectRetain(a1[1]);
  swift_retain(v2);
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  return a1;
}

unint64_t sub_10071F6E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C5E08;
  if (!qword_1011C5E08)
  {
    v1 = sub_100044B54(&qword_1011C5E00);
    sub_1001C3EFC();
    sub_100049F28(&qword_1011C94C0, (uint64_t *)&unk_1011C94A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, &qword_1011C5E08);
  }
  return result;
}

_QWORD *sub_10071F764(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[5];
  swift_release(a1[7]);
  swift_bridgeObjectRelease(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_10071F7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10071F80C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10071F84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 32);
  v1 = v11;
  v12 = *(_OWORD *)(v0 + 40);
  v10 = v12;
  v13 = v2;
  v3 = type metadata accessor for FavoriteButton(0, (uint64_t)&v11);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v7 = swift_release();
  v8 = v0 + v5;
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v1 - 8) + 8))(v8, v1, v7);
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8 + *(int *)(v3 + 56));
  swift_release();
  return swift_deallocObject(v0, v6);
}

uint64_t sub_10071F948(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = v6;
  v2[5] = v7;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FavoriteButton(0, (uint64_t)(v2 + 2)) - 8) + 80);
  v9 = v1[2];
  v10 = v1[3];
  v11 = (uint64_t)(v1 + 8);
  v12 = (uint64_t)v1 + ((v8 + 128) & ~v8);
  v13 = (_QWORD *)swift_task_alloc(dword_1011C5E14);
  v2[6] = v13;
  *v13 = v2;
  v13[1] = sub_10071FA14;
  return sub_10071E3D8(a1, v9, v10, v11, v12, v4);
}

uint64_t sub_10071FA14()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10071FA5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  int v22;
  void (*v23)(char *, char *, uint64_t);
  int v24;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __n128 v35;
  void (*v36)(char *, uint64_t, __n128);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  NSObject *v41;
  __n128 v42;
  os_log_type_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v2 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v52 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v50 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)v50 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)v50 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)v50 - v15;
  v17 = sub_100007E8C(&qword_1011C5E28);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v21, a1, v17, v19);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v21, v17);
  if (v22 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v21, v17);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v16, v21, v2);
    v23 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v23(v13, v16, v2);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v13, v2);
    if (v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unsupportedType(_:)
      || v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.alreadyFavorited(_:))
    {
      goto LABEL_12;
    }
    if (v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cannotFavoriteWhenDisliked(_:))
    {
LABEL_7:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v16, v2);
      return 0;
    }
    if (v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionRequired(_:))
      goto LABEL_12;
    if (v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:)
      || v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      goto LABEL_7;
    }
    if (v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.sharedLibrary(_:)
      || v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:)
      || v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:)
      || v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.invalidContentType(_:)
      || v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:)
      || v24 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unknown(_:))
    {
LABEL_12:
      if (qword_10119C500 != -1)
        swift_once(&qword_10119C500, sub_10066DEA4);
      v27 = type metadata accessor for Logger(0);
      sub_100048B14(v27, (uint64_t)qword_10124D560);
      v28 = ((uint64_t (*)(char *, char *, uint64_t))v23)(v10, v16, v2);
      v29 = Logger.logObject.getter(v28);
      v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(12, -1);
        v32 = swift_slowAlloc(32, -1);
        v54 = v32;
        *(_DWORD *)v31 = 136446210;
        v52 = (char *)(v31 + 4);
        v23(v7, v10, v2);
        v33 = String.init<A>(describing:)(v7, v2);
        v53 = sub_100322200(v33, v34, &v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
        v35 = swift_bridgeObjectRelease();
        v36 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
        v36(v10, v2, v35);
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Disabling favorite button - unsupportedReason=%{public}s", v31, 0xCu);
        swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v32, -1, -1);
        swift_slowDealloc(v31, -1, -1);
      }
      else
      {
        v36 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
        ((void (*)(char *, uint64_t))v36)(v10, v2);
      }

      v37 = v16;
    }
    else
    {
      if (qword_10119C500 != -1)
        swift_once(&qword_10119C500, sub_10066DEA4);
      v38 = type metadata accessor for Logger(0);
      sub_100048B14(v38, (uint64_t)qword_10124D560);
      v39 = v52;
      v40 = ((uint64_t (*)(char *, char *, uint64_t))v23)(v52, v16, v2);
      v41 = Logger.logObject.getter(v40);
      v43 = static os_log_type_t.fault.getter(v42);
      if (os_log_type_enabled(v41, v43))
      {
        v44 = swift_slowAlloc(12, -1);
        v50[0] = v23;
        v45 = (uint8_t *)v44;
        v51 = swift_slowAlloc(32, -1);
        v54 = v51;
        *(_DWORD *)v45 = 136446210;
        v50[1] = v45 + 4;
        ((void (*)(char *, char *, uint64_t))v50[0])(v7, v39, v2);
        v46 = String.init<A>(describing:)(v7, v2);
        v53 = sub_100322200(v46, v47, &v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
        v48 = swift_bridgeObjectRelease();
        v36 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
        v36(v39, v2, v48);
        _os_log_impl((void *)&_mh_execute_header, v41, v43, "Unknown unsupportedReason=%{public}s", v45, 0xCu);
        v49 = v51;
        swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v49, -1, -1);
        swift_slowDealloc(v45, -1, -1);
      }
      else
      {
        v36 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
        ((void (*)(char *, uint64_t))v36)(v39, v2);
      }

      ((void (*)(char *, uint64_t))v36)(v16, v2);
      v37 = v13;
    }
    ((void (*)(char *, uint64_t))v36)(v37, v2);
  }
  else
  {
    if (v22 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
      return 0;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  }
  return 1;
}

uint64_t sub_100720074(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  int v22;
  void (*v23)(char *, char *, uint64_t);
  int v24;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  __n128 v36;
  void (*v37)(char *, uint64_t, __n128);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  __n128 v44;
  os_log_type_t v45;
  uint8_t *v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v2 = type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v55 = (char *)&v52 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - v15;
  v17 = sub_100007E8C(&qword_1011C5E20);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v21, a1, v17, v19);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v21, v17);
  if (v22 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v21, v17);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v16, v21, v2);
    v23 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v23(v13, v16, v2);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v13, v2);
    if (v24 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unsupportedType(_:)
      || v24 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.notFavorited(_:)
      || v24 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionRequired(_:))
    {
      goto LABEL_10;
    }
    if (v24 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryRequired(_:)
      || v24 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v16, v2);
      return 0;
    }
    if (v24 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.sharedLibrary(_:)
      || v24 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:)
      || v24 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:)
      || v24 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.invalidContentType(_:)
      || v24 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:)
      || v24 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unknown(_:))
    {
LABEL_10:
      if (qword_10119C500 != -1)
        swift_once(&qword_10119C500, sub_10066DEA4);
      v27 = type metadata accessor for Logger(0);
      sub_100048B14(v27, (uint64_t)qword_10124D560);
      v28 = ((uint64_t (*)(char *, char *, uint64_t))v23)(v10, v16, v2);
      v29 = Logger.logObject.getter(v28);
      v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        v54 = v23;
        v31 = (uint8_t *)swift_slowAlloc(12, -1);
        v32 = swift_slowAlloc(32, -1);
        v57 = v32;
        *(_DWORD *)v31 = 136446210;
        v53 = (uint64_t)(v31 + 4);
        v33 = v55;
        v54(v55, v10, v2);
        v34 = String.init<A>(describing:)(v33, v2);
        v56 = sub_100322200(v34, v35, &v57);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
        v36 = swift_bridgeObjectRelease();
        v37 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
        v37(v10, v2, v36);
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Disabling undo favorite button - unsupportedReason=%{public}s", v31, 0xCu);
        swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v32, -1, -1);
        swift_slowDealloc(v31, -1, -1);
      }
      else
      {
        v37 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
        ((void (*)(char *, uint64_t))v37)(v10, v2);
      }

      v40 = v16;
    }
    else
    {
      if (qword_10119C500 != -1)
        swift_once(&qword_10119C500, sub_10066DEA4);
      v41 = type metadata accessor for Logger(0);
      sub_100048B14(v41, (uint64_t)qword_10124D560);
      v42 = ((uint64_t (*)(char *, char *, uint64_t))v23)(v5, v16, v2);
      v43 = Logger.logObject.getter(v42);
      v45 = static os_log_type_t.fault.getter(v44);
      if (os_log_type_enabled(v43, v45))
      {
        v54 = v23;
        v46 = (uint8_t *)swift_slowAlloc(12, -1);
        v53 = swift_slowAlloc(32, -1);
        v57 = v53;
        *(_DWORD *)v46 = 136446210;
        v52 = v46 + 4;
        v47 = v55;
        v54(v55, v5, v2);
        v48 = String.init<A>(describing:)(v47, v2);
        v56 = sub_100322200(v48, v49, &v57);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
        v50 = swift_bridgeObjectRelease();
        v37 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
        v37(v5, v2, v50);
        _os_log_impl((void *)&_mh_execute_header, v43, v45, "Unknown unsupportedReason=%{public}s", v46, 0xCu);
        v51 = v53;
        swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v51, -1, -1);
        swift_slowDealloc(v46, -1, -1);
      }
      else
      {
        v37 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
        ((void (*)(char *, uint64_t))v37)(v5, v2);
      }

      ((void (*)(char *, uint64_t))v37)(v16, v2);
      v40 = v13;
    }
    ((void (*)(char *, uint64_t))v37)(v40, v2);
  }
  else
  {
    if (v22 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
      return 0;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  }
  return 1;
}

uint64_t sub_100720674()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v1[2] = v2;
  v1[3] = v3;
  v1[4] = v4;
  v1[5] = v5;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FavoriteButton(0, (uint64_t)(v1 + 2)) - 8) + 80);
  v7 = (uint64_t)v0 + ((v6 + 48) & ~v6);
  v8 = (_QWORD *)swift_task_alloc(dword_1011C5E3C);
  v1[6] = v8;
  *v8 = v1;
  v8[1] = sub_10071FA14;
  return sub_10071EC60(v7, v2, v3, v4, v5);
}

uint64_t sub_100720714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 40);
  v10 = *(_QWORD *)(v0 + 16);
  v1 = v10;
  v11 = *(_OWORD *)(v0 + 24);
  v9 = v11;
  v12 = v2;
  v3 = type metadata accessor for FavoriteButton(0, (uint64_t)&v10);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = v0 + v5;
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v5, v1);
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7 + *(int *)(v3 + 56));
  swift_release();
  return swift_deallocObject(v0, v6);
}

uint64_t sub_1007207E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v1[2] = v2;
  v1[3] = v3;
  v1[4] = v4;
  v1[5] = v5;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FavoriteButton(0, (uint64_t)(v1 + 2)) - 8) + 80);
  v7 = (uint64_t)v0 + ((v6 + 48) & ~v6);
  v8 = (_QWORD *)swift_task_alloc(dword_1011C5E4C);
  v1[6] = v8;
  *v8 = v1;
  v8[1] = sub_100720B48;
  return sub_10071EE18(v7, v2, v3, v4, v5);
}

uint64_t sub_100720884(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = sub_100044B54(&qword_1011C5DF0);
  v4 = sub_100049F28(&qword_1011C5DF8, &qword_1011C5DF0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v19 = v3;
  v20 = v1;
  v21 = v4;
  v22 = v2;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v19, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v6 = sub_100044B54(&qword_1011A0610);
  v7 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v6);
  v8 = sub_100044B54(&qword_1011A0618);
  v9 = type metadata accessor for ModifiedContent(255, v7, v8);
  v10 = sub_100044B54(&qword_1011BB4C0);
  v11 = type metadata accessor for ModifiedContent(255, v9, v10);
  v12 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v13 = type metadata accessor for ModifiedContent(255, v11, v12);
  v14 = sub_100044B54((uint64_t *)&unk_1011B44F8);
  v15 = type metadata accessor for ModifiedContent(255, v13, v14);
  v18 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _OpacityEffect);
  v16 = type metadata accessor for ModifiedContent(255, v18, v12);
  v19 = v3;
  v20 = v1;
  v21 = v4;
  v22 = v2;
  swift_getOpaqueTypeConformance2(&v19, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
  sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  sub_100049F28(&qword_1011BB4D0, &qword_1011BB4C0, (uint64_t)&protocol conformance descriptor for _InsettableBackgroundShapeModifier<A, B>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  sub_100049F28(&qword_1011B44F0, (uint64_t *)&unk_1011B44F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
}

uint64_t sub_100720B54()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TypeDisplayRepresentation(0, v5);
  sub_10004FACC(v8, qword_10124D8E8);
  sub_100048B14(v8, (uint64_t)qword_10124D8E8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000017, 0x8000000100E43740);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v7, v2);
}

uint64_t sub_100720C64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005D0F9C(*a1, *a2);
}

unint64_t sub_100720C74()
{
  unint64_t result;

  result = qword_1011C5E58;
  if (!qword_1011C5E58)
  {
    result = swift_getWitnessTable(&unk_100ECC9F4, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011C5E58);
  }
  return result;
}

Swift::Int sub_100720CB8()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE600000000000000;
  v3 = 0x73636972796CLL;
  if (v1 != 1)
  {
    v3 = 0x6575657571;
    v2 = 0xE500000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x49746E6572727563;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEB000000006D6574;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100720D58(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE600000000000000;
  v3 = 0x73636972796CLL;
  if (*v1 != 1)
  {
    v3 = 0x6575657571;
    v2 = 0xE500000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x49746E6572727563;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xEB000000006D6574;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100720DD4(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE600000000000000;
  v4 = 0x73636972796CLL;
  if (v2 != 1)
  {
    v4 = 0x6575657571;
    v3 = 0xE500000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x49746E6572727563;
  if (v2)
    v6 = v3;
  else
    v6 = 0xEB000000006D6574;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_100720E70@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10072295C(*a1);
  *a2 = result;
  return result;
}

void sub_100720E9C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB000000006D6574;
  v4 = 0xE600000000000000;
  v5 = 0x73636972796CLL;
  if (v2 != 1)
  {
    v5 = 0x6575657571;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x49746E6572727563;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_100720F00()
{
  unint64_t result;

  result = qword_1011C5E60;
  if (!qword_1011C5E60)
  {
    result = swift_getWitnessTable(&unk_100ECCAD4, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011C5E60);
  }
  return result;
}

unint64_t sub_100720F48()
{
  unint64_t result;

  result = qword_1011C5E68;
  if (!qword_1011C5E68)
  {
    result = swift_getWitnessTable(&unk_100ECCB0C, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011C5E68);
  }
  return result;
}

unint64_t sub_100720F90()
{
  unint64_t result;

  result = qword_1011C5E70;
  if (!qword_1011C5E70)
  {
    result = swift_getWitnessTable(&unk_100ECCA5C, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011C5E70);
  }
  return result;
}

unint64_t sub_100720FD8()
{
  unint64_t result;

  result = qword_1011C5E78;
  if (!qword_1011C5E78)
  {
    result = swift_getWitnessTable(&unk_100ECCB3C, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011C5E78);
  }
  return result;
}

unint64_t sub_100721020()
{
  unint64_t result;

  result = qword_1011C5E80;
  if (!qword_1011C5E80)
  {
    result = swift_getWitnessTable(&unk_100ECCB64, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011C5E80);
  }
  return result;
}

unint64_t sub_10072106C()
{
  unint64_t result;

  result = qword_1011C5E88;
  if (!qword_1011C5E88)
  {
    result = swift_getWitnessTable(&unk_100ECCBE4, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011C5E88);
  }
  return result;
}

uint64_t sub_1007210B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100241C6C(&qword_10119C748, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10124D8E8, (uint64_t)sub_100720B54, a1);
}

uint64_t sub_1007210D4(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100607A70();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

uint64_t sub_100721114(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100607A70();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100721150()
{
  unint64_t result;

  result = qword_1011C5E90;
  if (!qword_1011C5E90)
  {
    result = swift_getWitnessTable(&unk_100ECCC24, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011C5E90);
  }
  return result;
}

unint64_t sub_100721198()
{
  unint64_t result;

  result = qword_1011C5E98;
  if (!qword_1011C5E98)
  {
    result = swift_getWitnessTable(&unk_100ECCC4C, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011C5E98);
  }
  return result;
}

unint64_t sub_1007211E0()
{
  unint64_t result;

  result = qword_1011C5EA0;
  if (!qword_1011C5EA0)
  {
    result = swift_getWitnessTable(&unk_100ECCA1C, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011C5EA0);
  }
  return result;
}

uint64_t sub_100721228(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10072106C();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100721260()
{
  return sub_100049F28(&qword_1011C5EA8, &qword_1011C5EB0, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_10072128C(_QWORD *a1@<X8>)
{
  *a1 = &off_1010AD340;
}

unint64_t sub_1007212A0()
{
  unint64_t result;

  result = qword_1011C5EB8;
  if (!qword_1011C5EB8)
  {
    result = swift_getWitnessTable(&unk_100ECCD14, &type metadata for OpenNowPlayingAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011C5EB8);
  }
  return result;
}

unint64_t sub_1007212E8()
{
  unint64_t result;

  result = qword_1011C5EC0;
  if (!qword_1011C5EC0)
  {
    result = swift_getWitnessTable(&unk_100ECCD3C, &type metadata for OpenNowPlayingAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011C5EC0);
  }
  return result;
}

uint64_t sub_10072132C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAB624, 1);
}

uint64_t sub_10072133C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAB5FC, 1);
}

uint64_t sub_10072134C()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10004FACC(v0, qword_10124D900);
  sub_100048B14(v0, (uint64_t)qword_10124D900);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000010, 0x8000000100E41B80);
}

uint64_t sub_1007213AC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_100007E8C(&qword_1011C5EF8);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011C5F00);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10068B624();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for OpenNowPlayingAppIntent, v6);
  v7._object = (void *)0x8000000100E436E0;
  v7._countAndFlagsBits = 0xD000000000000014;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath("P^4");
  v9 = sub_100007E8C(&qword_1011C5F08);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for OpenNowPlayingAppIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for OpenNowPlayingAppIntent, v6);
}

uint64_t sub_100721514(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v2[10] = a1;
  v2[11] = a2;
  v3 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2[12] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v4);
  v2[14] = swift_task_alloc(v4);
  v5 = type metadata accessor for MainActor(0);
  v2[15] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v2[16] = v7;
  v2[17] = v8;
  return swift_task_switch(sub_1007215B4, v7, v8);
}

uint64_t sub_1007215B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  id v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24[2];

  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v1 = v0[11];
  v2 = type metadata accessor for Logger(0);
  v0[18] = sub_100048B14(v2, (uint64_t)qword_10124CEC8);
  v3 = swift_retain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v8 = v0[11];
  if (v6)
  {
    v9 = swift_slowAlloc(22, -1);
    v23 = swift_slowAlloc(64, -1);
    v24[0] = v23;
    *(_DWORD *)v9 = 136315394;
    v0[9] = &type metadata for OpenNowPlayingAppIntent;
    v10 = sub_100007E8C(&qword_1011C5EF0);
    v11 = String.init<A>(describing:)(v0 + 9, v10);
    v0[5] = sub_100322200(v11, v12, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 5, v0 + 6);
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    IntentParameter.wrappedValue.getter((_QWORD *)((char *)v0 + 177));
    v13 = sub_100007E8C(&qword_1011BD880);
    v14 = String.init<A>(describing:)((char *)v0 + 177, v13);
    v0[7] = sub_100322200(v14, v15, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 7, v0 + 8);
    v16 = swift_bridgeObjectRelease();
    swift_release_n(v8, 2, v16);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s opening Now Playing to %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_release_n(v8, 2, v7);
  }

  v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_100794B44();
  v0[19] = v18;
  v20 = v0[12];
  v19 = (_BYTE *)v0[13];

  sub_100721F1C(v19);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  v21 = (_QWORD *)swift_task_alloc(dword_1011C791C);
  v0[20] = v21;
  *v21 = v0;
  v21[1] = sub_100721B4C;
  return sub_100771208(v0[14], v0[13]);
}

uint64_t sub_100721B4C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = (*v1)[20];
  (*v1)[21] = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    sub_100242458(v2[13]);
    v4 = v2[16];
    v5 = v2[17];
    v6 = sub_100721C30;
  }
  else
  {
    v7 = v2[14];
    sub_100242458(v2[13]);
    sub_100242458(v7);
    v4 = v2[16];
    v5 = v2[17];
    v6 = sub_100721BC8;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100721BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = swift_release(*(_QWORD *)(v0 + 120));
  static IntentResult.result<>()(v4);
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100721C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  _BYTE *v23;
  __n128 v24;
  uint64_t v26[2];

  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 168);
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v6 = *(_QWORD *)(v0 + 88);
    v7 = swift_slowAlloc(32, -1);
    v8 = swift_slowAlloc(96, -1);
    v26[0] = v8;
    *(_DWORD *)v7 = 136315650;
    *(_QWORD *)(v0 + 24) = &type metadata for OpenNowPlayingAppIntent;
    v9 = sub_100007E8C(&qword_1011C5EF0);
    v10 = String.init<A>(describing:)(v0 + 24, v9);
    *(_QWORD *)(v0 + 32) = sub_100322200(v10, v11, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 176));
    v12 = sub_100007E8C(&qword_1011BD880);
    v13 = String.init<A>(describing:)(v0 + 176, v12);
    *(_QWORD *)(v0 + 48) = sub_100322200(v13, v14, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
    v15 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v15);
    *(_WORD *)(v7 + 22) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v16 = sub_100007E8C(&qword_1011A14B0);
    v17 = String.init<A>(describing:)(v0 + 16, v16);
    *(_QWORD *)(v0 + 64) = sub_100322200(v17, v18, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s open failed, destination: %{public}s error: %{public}s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy(v8, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 88), 2, v5);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v20 = *(_QWORD *)(v0 + 104);
  v19 = *(_QWORD *)(v0 + 112);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 178));
  v21 = *(_BYTE *)(v0 + 178);
  v22 = sub_1007224AC();
  swift_allocError(&type metadata for OpenNowPlayingIntentError, v22, 0, 0);
  *v23 = v21;
  swift_willThrow(v24);
  swift_errorRelease(v1);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100721F1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  IntentParameter.wrappedValue.getter(&v4);
  *a1 = 0x5020100u >> (8 * v4);
  v2 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  return swift_storeEnumTagMultiPayload(a1, v2, 2);
}

uint64_t sub_100721F7C@<X0>(uint64_t a1@<X8>)
{
  return sub_100241C6C(&qword_10119C750, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10124D900, (uint64_t)sub_10072134C, a1);
}

uint64_t sub_100721FA4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1011C5EE4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return sub_100721514(a1, v4);
}

uint64_t sub_100721FFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100722274();
  *a1 = result;
  return result;
}

uint64_t sub_100722020(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10068B624();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenNowPlayingAppIntent()
{
  return &type metadata for OpenNowPlayingAppIntent;
}

uint64_t storeEnumTagSinglePayload for NowPlayingDestinationEntity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1007220A4 + 4 * byte_100ECC9E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1007220D8 + 4 * byte_100ECC9E0[v4]))();
}

uint64_t sub_1007220D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1007220E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1007220E8);
  return result;
}

uint64_t sub_1007220F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1007220FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100722100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100722108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingDestinationEntity()
{
  return &type metadata for NowPlayingDestinationEntity;
}

uint64_t sub_100722124()
{
  return sub_100049F28(&qword_1011C5ED0, &qword_1011C5ED8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100722150(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  Swift::String v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  unsigned __int8 v11;

  v2 = a1;
  v3 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2 == 3)
    return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001CLL, 0x8000000100E43760);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(41, 1);
  v7._countAndFlagsBits = 0xD000000000000018;
  v7._object = (void *)0x8000000100E43780;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v7);
  v11 = a1;
  v8 = sub_100721150();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:)(&v11, &type metadata for NowPlayingDestinationEntity, v8);
  v9._object = (void *)0x8000000100E437A0;
  v9._countAndFlagsBits = 0xD000000000000011;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
  return LocalizedStringResource.init(stringInterpolation:)(v5);
}

uint64_t sub_10072226C()
{
  unsigned __int8 *v0;

  return sub_100722150(*v0);
}

uint64_t sub_100722274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t, uint64_t);
  unint64_t v19;
  _BYTE v21[15];
  char v22;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100007E8C(&qword_10119EC90);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v21[-v8];
  v10 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v10);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100007E8C(&qword_1011BD850);
  LocalizedStringResource.init(stringLiteral:)(0x74616E6974736544, 0xEB000000006E6F69);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002BLL, 0x8000000100E436B0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v22 = 3;
  v17 = type metadata accessor for IntentDialog(0);
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v9, 1, 1, v17);
  v18(v6, 1, 1, v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  v19 = sub_100607A70();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v16, v12, &v22, v9, v6, v3, &off_1010AD0E0, v19);
}

unint64_t sub_1007224AC()
{
  unint64_t result;

  result = qword_1011C5EE8;
  if (!qword_1011C5EE8)
  {
    result = swift_getWitnessTable(&unk_100ECCE14, &type metadata for OpenNowPlayingIntentError);
    atomic_store(result, (unint64_t *)&qword_1011C5EE8);
  }
  return result;
}

uint64_t sub_1007224F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100722518()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v0 = sub_100007E8C(&qword_1011A8558);
  __chkstk_darwin(v0);
  v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v2;
  v3 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011C5F10);
  v11 = sub_100007E8C(&qword_10119D5C0);
  v12 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  v13 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v44 = 2 * v13;
  v16 = swift_allocObject(v10, v15 + 3 * v13, v14 | 7);
  v45 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_100EA7AC0;
  *(_BYTE *)(v16 + v15) = 0;
  v17 = v16 + v15;
  LocalizedStringResource.init(stringLiteral:)(0x20746E6572727543, 0xEC0000006D657449);
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v38(v5, 1, 1, v6);
  v18 = type metadata accessor for DisplayRepresentation.Image(0);
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v36 = v18;
  v35(v2, 1, 1, v18);
  v19 = sub_100007E8C(&qword_1011C5F18);
  v20 = *(unsigned __int8 *)(v7 + 80);
  v21 = *(_QWORD *)(v7 + 72);
  v37 = v21;
  v41 = (v20 + 32) & ~v20;
  v42 = v20 | 7;
  v43 = v19;
  v22 = swift_allocObject(v19, v41 + 4 * v21, v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EA7BA0;
  LocalizedStringResource.init(stringLiteral:)(0x20746E6572727543, 0xEC000000676E6F53);
  LocalizedStringResource.init(stringLiteral:)(0x20746E6572727543, 0xED00006B63617254);
  v34 = 2 * v21;
  LocalizedStringResource.init(stringLiteral:)(0x1000000000000010, 0x8000000100E43700);
  LocalizedStringResource.init(stringLiteral:)(0x100000000000001ALL, 0x8000000100E43720);
  v23 = v9;
  v24 = v33;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v9, v5, v33, v22);
  v25 = v17;
  *(_BYTE *)(v17 + v13) = 1;
  LocalizedStringResource.init(stringLiteral:)(0x73636972794CLL, 0xE600000000000000);
  v26 = v38;
  v27 = v39;
  v38(v5, 1, 1, v39);
  v29 = v35;
  v28 = v36;
  v35(v24, 1, 1, v36);
  DisplayRepresentation.init(title:subtitle:image:)(v23, v5, v24);
  *(_BYTE *)(v25 + v44) = 2;
  LocalizedStringResource.init(stringLiteral:)(0x6575657551, 0xE500000000000000);
  v26(v5, 1, 1, v27);
  v29(v24, 1, 1, v28);
  v30 = swift_allocObject(v43, v41 + v34, v42);
  *(_OWORD *)(v30 + 16) = xmmword_100EA7A80;
  LocalizedStringResource.init(stringLiteral:)(0x20676E6979616C50, 0xEC0000007478654ELL);
  LocalizedStringResource.init(stringLiteral:)(0x7478654E207055, 0xE700000000000000);
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v23, v5, v24, v30);
  return sub_100044010(v45);
}

unint64_t sub_10072295C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AD2D8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t getEnumTagSinglePayload for OpenNowPlayingIntentError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  if (*a1 <= 3u)
    v6 = 3;
  else
    v6 = *a1;
  v7 = v6 - 4;
  if (*a1 < 3u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenNowPlayingIntentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100722A90 + 4 * byte_100ECC9EF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100722AC4 + 4 * byte_100ECC9EA[v4]))();
}

uint64_t sub_100722AC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100722ACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100722AD4);
  return result;
}

uint64_t sub_100722AE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100722AE8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100722AEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100722AF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OpenNowPlayingIntentError()
{
  return &type metadata for OpenNowPlayingIntentError;
}

uint64_t sub_100722B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100007E8C(&qword_1011A3BD0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TitledSection(0);
  v5 = type metadata accessor for Genre(0);
  MusicLibrarySectionedRequest.init()(v4, v5, &protocol witness table for TitledSection, &protocol witness table for Genre);
  v6 = sub_100049F28(&qword_1011A3BD8, &qword_1011A3BD0, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v7 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v0, v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

uint64_t sub_100722BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100722BF8);
}

uint64_t sub_100722BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_100007E8C(&qword_10119EE98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_100722C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100722C7C);
}

uint64_t sub_100722C7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v7 = sub_100007E8C(&qword_10119EE98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t _s10GenresViewVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C5F78;
  if (!qword_1011C5F78)
    return swift_getSingletonMetadata(a1, &_s10GenresViewVMn);
  return result;
}

void sub_100722D2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100ECCE68;
  v4[1] = &unk_100ECCE80;
  sub_1002ABB08(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_100722DA8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAB698, 1);
}

uint64_t sub_100722DB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84[16];
  uint64_t *v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;

  v81 = a1;
  v79 = sub_100007E8C(&qword_1011C5FB8);
  __chkstk_darwin(v79);
  v80 = (uint64_t)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100007E8C(&qword_1011C5FC0);
  __chkstk_darwin(v78);
  v77 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C5FC8);
  __chkstk_darwin(v4);
  v76 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Library.Context(0);
  v7 = __chkstk_darwin(v6);
  v75 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ContentMarginPlacement(0, v7);
  v69 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011C5FD0);
  v68 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011C5FD8);
  v70 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011C5FE0);
  v73 = *(_QWORD *)(v18 - 8);
  v74 = v18;
  __chkstk_darwin(v18);
  v72 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100007E8C(&qword_1011C5FE8);
  __chkstk_darwin(v83);
  v82 = (uint64_t)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v1;
  v85 = v1;
  v22 = static Axis.Set.vertical.getter(v21);
  v23 = sub_100007E8C(&qword_1011C5FF0);
  v24 = sub_10005610C(&qword_1011C5FF8, &qword_1011C5FF0, (void (*)(void))sub_1007240BC);
  v25 = ScrollView.init(_:showsIndicators:content:)(v22, 1, sub_1007240B4, v84, v23, v24);
  v26 = static Edge.Set.top.getter(v25);
  static ContentMarginPlacement.scrollIndicators.getter();
  v27 = sub_100049F28(&qword_1011C6020, &qword_1011C5FD0, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  View.contentMargins(_:_:for:)(v26, 0, 0, v11, v12, v27);
  v28 = *(void (**)(char *, uint64_t))(v69 + 8);
  v28(v11, v9);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v14, v12);
  v30 = static Edge.Set.bottom.getter(v29);
  if (qword_10119C8B0 != -1)
    swift_once(&qword_10119C8B0, sub_10085F8B4);
  v31 = qword_10124DA28;
  static ContentMarginPlacement.scrollIndicators.getter();
  v87 = v12;
  v88 = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v87, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
  v33 = v72;
  View.contentMargins(_:_:for:)(v30, v31, 0, v11, v15, OpaqueTypeConformance2);
  v28(v11, v9);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v17, v15);
  v34 = v71;
  v35 = *v71;
  v36 = v71[1];
  v37 = *((unsigned __int8 *)v71 + 16);
  v38 = sub_100007E8C(&qword_1011C6028);
  v39 = sub_100049F28(&qword_1011C6030, &qword_1011C6028, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v70 = v38;
  v69 = v39;
  StateObject.wrappedValue.getter(v35, v36, v37, v38, v39);
  v86 = 0;
  static Binding.constant(_:)(&v87, &v86, &type metadata for Library.ContentFilterOption);
  v40 = v87;
  v41 = v88;
  LODWORD(v68) = v89;
  swift_retain();
  swift_retain();
  swift_retain();
  v43 = ObservedObject.init(wrappedValue:)(v42, v38, v39);
  v45 = v44;
  v46 = v73;
  v47 = v82;
  v48 = v33;
  v49 = v33;
  v50 = v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v82, v48, v74);
  swift_release();
  swift_release();
  v51 = swift_release();
  v52 = v47 + *(int *)(v83 + 36);
  *(_QWORD *)v52 = v43;
  *(_QWORD *)(v52 + 8) = v45;
  *(_QWORD *)(v52 + 16) = v40;
  *(_QWORD *)(v52 + 24) = v41;
  *(_BYTE *)(v52 + 32) = v68;
  (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v49, v50, v51);
  _s10GenresViewVMa(0);
  v53 = v75;
  sub_10082460C(v75);
  v54 = v70;
  v55 = v69;
  StateObject.wrappedValue.getter(*v34, v34[1], *((unsigned __int8 *)v34 + 16), v70, v69);
  v57 = (uint64_t)v77;
  v56 = v78;
  v58 = (uint64_t)&v77[*(int *)(v78 + 36)];
  sub_10042BA78(v53, v58);
  v59 = (_QWORD *)(v58 + *(int *)(sub_100007E8C(&qword_1011C6038) + 36));
  swift_retain();
  *v59 = ObservedObject.init(wrappedValue:)(v60, v54, v55);
  v59[1] = v61;
  v62 = v82;
  sub_10004A160(v82, v57, &qword_1011C5FE8);
  v63 = v80;
  sub_10004A160(v57, v80, &qword_1011C5FC0);
  swift_storeEnumTagMultiPayload(v63, v79, 0);
  v64 = sub_100724140();
  v65 = sub_1007241C4();
  v66 = (uint64_t)v76;
  _ConditionalContent<>.init(storage:)(v63, v56, v83, v64, v65);
  sub_10004FF60(v57, &qword_1011C5FC0);
  sub_100065228(v66, v81, &qword_1011C5FC8);
  swift_release();
  sub_10022D14C(v53);
  return sub_10004FF60(v62, &qword_1011C5FE8);
}

uint64_t sub_100723418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  __int128 v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[16];
  uint64_t v40;
  _OWORD v41[2];
  char v42;
  _DWORD v43[10];

  v4 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v4);
  v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011C6018);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_100007E8C(&qword_1011C6008);
  __chkstk_darwin(v11);
  v13 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = static HorizontalAlignment.leading.getter(v14);
  v40 = a1;
  v43[0] = 0;
  v16 = sub_100048748((unint64_t *)&qword_1011A0308, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(v43, v4, v16);
  v17 = sub_100007E8C(&qword_1011C6068);
  v18 = sub_1007242C0();
  v19 = LazyVStack.init(alignment:spacing:pinnedViews:content:)(v15, 0, 1, v6, sub_1007242B8, v39, v17, v18);
  LOBYTE(v17) = static Edge.Set.horizontal.getter(v19);
  v20 = EdgeInsets.init(_all:)(*(double *)&qword_1011CCD38);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v13, v10, v7);
  v27 = (double *)&v13[*(int *)(v11 + 36)];
  *(_BYTE *)v27 = v17;
  v27[1] = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  *((_BYTE *)v27 + 40) = 0;
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  v28 = *(_OWORD *)(a1 + 40);
  v41[0] = *(_OWORD *)(a1 + 24);
  v41[1] = v28;
  v42 = *(_BYTE *)(a1 + 56);
  sub_100065228((uint64_t)v41, (uint64_t)v43, &qword_1011AA450);
  sub_10006FDA8((uint64_t)v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100154A5C);
  v29 = sub_100825088();
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = sub_10006FDA8((uint64_t)v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  LOBYTE(v17) = static Edge.Set.all.getter(v36);
  sub_10004A160((uint64_t)v13, a2, &qword_1011C6008);
  v37 = a2 + *(int *)(sub_100007E8C(&qword_1011C5FF0) + 36);
  *(_BYTE *)v37 = v17;
  *(double *)(v37 + 8) = v29;
  *(_QWORD *)(v37 + 16) = v31;
  *(_QWORD *)(v37 + 24) = v33;
  *(_QWORD *)(v37 + 32) = v35;
  *(_BYTE *)(v37 + 40) = 0;
  return sub_10004FF60((uint64_t)v13, &qword_1011C6008);
}

uint64_t sub_1007236B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;

  v4 = sub_100007E8C(&qword_1011AE8B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C6068);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  v13 = *((unsigned __int8 *)a1 + 16);
  v14 = sub_100007E8C(&qword_1011C6028);
  v15 = sub_100049F28(&qword_1011C6030, &qword_1011C6028, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  StateObject.wrappedValue.getter(v11, v12, v13, v14, v15);
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v16);
  swift_release();
  v17 = sub_100007E8C((uint64_t *)&unk_1011CF3E0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v6, &qword_1011AE8B0);
    v19 = _swiftEmptyArrayStorage;
  }
  else
  {
    v19 = (_QWORD *)MusicLibrarySectionedResponse.sections.getter(v17);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v17);
  }
  v27 = v19;
  v20 = sub_100007E8C(&qword_1011C6098);
  v21 = sub_100007E8C(&qword_1011C6080);
  v22 = sub_100049F28(&qword_1011C60A0, &qword_1011C6098, (uint64_t)&protocol conformance descriptor for [A]);
  v23 = sub_100724324();
  v24 = sub_100049F28(&qword_1011C60A8, (uint64_t *)&unk_1011A3C00, (uint64_t)&protocol conformance descriptor for MusicLibrarySection<A, B>);
  ForEach<>.init(_:content:)(&v27, sub_1007238EC, 0, v20, &type metadata for MusicItemID, v21, v22, v23, v24);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v10, v7);
}

uint64_t sub_1007238EC(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[4];
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100ECCEE8);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3C00);
  MusicLibrarySection.subscript.getter(KeyPath, v3);
  swift_release();
  v8[2] = a1;
  v4 = sub_100007E8C(&qword_1011C6090);
  v5 = sub_1000A8D68();
  v6 = sub_10072439C();
  return Section<>.init(header:content:)(&v9, sub_100724498, v8, &_s6HeaderVN, v4, v5, v6);
}

uint64_t sub_1007239A4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t OpaqueTypeConformance2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v0 = sub_100007E8C((uint64_t *)&unk_1011ACAE0);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3C00);
  MusicLibrarySection.items.getter(v3, v4);
  v5 = sub_100007E8C(&qword_1011B35E8);
  v6 = sub_100049F28(&qword_1011C60B0, (uint64_t *)&unk_1011ACAE0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v7 = sub_100044B54(&qword_1011B35A8);
  v8 = type metadata accessor for PlainButtonStyle(255);
  v9 = sub_100044B54(&qword_1011B35B0);
  v10 = sub_10042BE10();
  v16 = v9;
  v17 = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  v12 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v16 = v7;
  v17 = v8;
  v18 = OpaqueTypeConformance2;
  v19 = v12;
  v13 = swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v14 = sub_100048748(&qword_1011C60B8, (uint64_t (*)(uint64_t))&type metadata accessor for Genre, (uint64_t)&protocol conformance descriptor for Genre);
  return ForEach<>.init(_:content:)(v2, sub_100723B4C, 0, v0, &type metadata for MusicItemID, v5, v6, v13, v14);
}

uint64_t sub_100723B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t OpaqueTypeConformance2;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[16];
  uint64_t v50;
  _QWORD v51[2];
  _OWORD v52[3];

  v48 = a2;
  v3 = type metadata accessor for PlainButtonStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  v47 = v4;
  __chkstk_darwin(v3);
  v45 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A3CF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B35C8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011B35B0);
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011B35A8);
  v17 = *(_QWORD *)(v16 - 8);
  v43 = v16;
  v44 = v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(int *)(sub_100007E8C(&qword_10119ED30) + 48);
  v21 = type metadata accessor for Genre(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v8, a1, v21);
  *(_OWORD *)&v8[v20] = xmmword_100EAE4D0;
  v22 = type metadata accessor for NavigationDestinationItem(0);
  swift_storeEnumTagMultiPayload(v8, v22, 5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 0, 1, v22);
  v50 = a1;
  v23 = sub_100007E8C(&qword_1011B3600);
  v24 = sub_10005610C(&qword_1011B3608, &qword_1011B3600, (void (*)(void))sub_1001C9648);
  v25 = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
  v26 = NavigationLink<>.init<A>(value:label:)(v8, sub_1007244A0, v49, v23, v22, v24, v25);
  v27 = static Alignment.center.getter(v26);
  _FrameLayout.init(width:height:alignment:)(v52, 0, 1, 0x4044000000000000, 0, v27, v28);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  v29 = &v15[*(int *)(v13 + 36)];
  v30 = v52[1];
  *(_OWORD *)v29 = v52[0];
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v52[2];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v31 = Corner.medium.unsafeMutableAddressor();
  v32 = *v31;
  v33 = v31[1];
  LOBYTE(v12) = *((_BYTE *)v31 + 16);
  v34 = *HI.HoverOutset.list.unsafeMutableAddressor();
  v35 = sub_10042BE10();
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v32, v33, v12, 1u, 0, 1, 1, v13, *(double *)&v34, v35);
  v36 = sub_10004FF60((uint64_t)v15, &qword_1011B35B0);
  v37 = v45;
  PlainButtonStyle.init()(v36);
  v51[0] = v13;
  v51[1] = v35;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v51, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  v39 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v40 = v43;
  v41 = v46;
  View.buttonStyle<A>(_:)(v37, v43, v46, OpaqueTypeConformance2, v39);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v19, v40);
}

__n128 sub_100723F10@<Q0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __n128 result;
  _OWORD v29[10];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  *(_QWORD *)&v29[0] = Genre.name.getter(a2);
  *((_QWORD *)&v29[0] + 1) = v3;
  v4 = sub_100055B68();
  v5 = Text.init<A>(_:)(v29, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  LODWORD(v29[0]) = static HierarchicalShapeStyle.primary.getter(v12);
  v13 = Text.foregroundStyle<A>(_:)(v29, v5, v7, v11, v9, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  sub_100055BAC(v5, v7, v11);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100ECCF18);
  v31 = v13;
  v32 = v15;
  v33 = v19;
  v34 = v17;
  v35 = KeyPath;
  v36 = 1;
  v37 = 0;
  v21 = static Alignment.leading.getter(KeyPath);
  sub_10014A880(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v29, v23, 0.0, 1, 0.0, 1, v21, v22);
  sub_100055BAC(v13, v15, v19);
  swift_release();
  swift_bridgeObjectRelease();
  v24 = v29[9];
  *(_OWORD *)(a1 + 128) = v29[8];
  *(_OWORD *)(a1 + 144) = v24;
  *(_QWORD *)(a1 + 160) = v30;
  v25 = v29[5];
  *(_OWORD *)(a1 + 64) = v29[4];
  *(_OWORD *)(a1 + 80) = v25;
  v26 = v29[7];
  *(_OWORD *)(a1 + 96) = v29[6];
  *(_OWORD *)(a1 + 112) = v26;
  v27 = v29[1];
  *(_OWORD *)a1 = v29[0];
  *(_OWORD *)(a1 + 16) = v27;
  result = (__n128)v29[3];
  *(_OWORD *)(a1 + 32) = v29[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_1007240B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100723418(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1007240BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C6000;
  if (!qword_1011C6000)
  {
    v1 = sub_100044B54(&qword_1011C6008);
    sub_100049F28(&qword_1011C6010, &qword_1011C6018, (uint64_t)&protocol conformance descriptor for LazyVStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6000);
  }
  return result;
}

unint64_t sub_100724140()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C6040;
  if (!qword_1011C6040)
  {
    v1 = sub_100044B54(&qword_1011C5FC0);
    sub_1007241C4();
    sub_100049F28(&qword_1011C6060, &qword_1011C6038, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6040);
  }
  return result;
}

unint64_t sub_1007241C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;

  result = qword_1011C6048;
  if (!qword_1011C6048)
  {
    v1 = sub_100044B54(&qword_1011C5FE8);
    v2 = sub_100044B54(&qword_1011C5FD8);
    v4 = sub_100044B54(&qword_1011C5FD0);
    v5 = sub_100049F28(&qword_1011C6020, &qword_1011C5FD0, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
    sub_100049F28(&qword_1011C6050, &qword_1011C6058, (uint64_t)&unk_100EC0B30);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6048);
  }
  return result;
}

uint64_t sub_1007242B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007236B0(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_1007242C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C6070;
  if (!qword_1011C6070)
  {
    v1 = sub_100044B54(&qword_1011C6068);
    sub_100724324();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6070);
  }
  return result;
}

unint64_t sub_100724324()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C6078;
  if (!qword_1011C6078)
  {
    v1 = sub_100044B54(&qword_1011C6080);
    sub_1000A8D68();
    sub_10072439C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6078);
  }
  return result;
}

unint64_t sub_10072439C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = qword_1011C6088;
  if (!qword_1011C6088)
  {
    v1 = sub_100044B54(&qword_1011C6090);
    v2 = sub_100044B54(&qword_1011B35A8);
    v3 = type metadata accessor for PlainButtonStyle(255);
    v6 = sub_100044B54(&qword_1011B35B0);
    v7 = sub_10042BE10();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    v5 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
    v6 = v2;
    v7 = v3;
    v8 = OpaqueTypeConformance2;
    v9 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6088);
  }
  return result;
}

uint64_t sub_100724498()
{
  return sub_1007239A4();
}

double sub_1007244A0@<D0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  double result;

  *(_QWORD *)&result = sub_100723F10(a1, a2).n128_u64[0];
  return result;
}

unint64_t sub_1007244B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C60C0;
  if (!qword_1011C60C0)
  {
    v1 = sub_100044B54(&qword_1011C5FC8);
    sub_100724140();
    sub_1007241C4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C60C0);
  }
  return result;
}

unint64_t sub_100724524()
{
  unint64_t result;

  result = qword_1011C60C8;
  if (!qword_1011C60C8)
  {
    result = swift_getWitnessTable(&unk_100ECCFEC, &type metadata for OpenMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011C60C8);
  }
  return result;
}

unint64_t sub_10072456C()
{
  unint64_t result;

  result = qword_1011C60D0;
  if (!qword_1011C60D0)
  {
    result = swift_getWitnessTable(&unk_100ECD014, &type metadata for OpenMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011C60D0);
  }
  return result;
}

uint64_t sub_1007245B0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAB704, 1);
}

uint64_t sub_1007245C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAB6DC, 1);
}

uint64_t sub_1007245D0()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10004FACC(v0, qword_10124D918);
  sub_100048B14(v0, (uint64_t)qword_10124D918);
  return LocalizedStringResource.init(stringLiteral:)(0x73754D206E65704FLL, 0xEF6D657449206369);
}

uint64_t sub_100724638(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_100007E8C(&qword_1011ACE00);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2[15] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[16] = swift_task_alloc(v5);
  v2[17] = swift_task_alloc(v5);
  v6 = type metadata accessor for Song(0);
  v2[18] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[19] = v7;
  v2[20] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RecordLabel(0);
  v2[21] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[22] = v9;
  v2[23] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v2[24] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[25] = v11;
  v2[26] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Artist(0);
  v2[27] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[28] = v13;
  v2[29] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Album(0);
  v2[30] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[31] = v15;
  v2[32] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for GenericMusicItem(0);
  v2[33] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v2[34] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[35] = swift_task_alloc(v18);
  v2[36] = swift_task_alloc(v18);
  v2[37] = swift_task_alloc(v18);
  v19 = type metadata accessor for GenericMusicItemEntity(0);
  v2[38] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MainActor(0);
  v2[39] = static MainActor.shared.getter(v21);
  v22 = dispatch thunk of Actor.unownedExecutor.getter(v20, &protocol witness table for MainActor);
  v2[40] = v22;
  v2[41] = v23;
  return swift_task_switch(sub_100724828, v22, v23);
}

uint64_t sub_100724828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  __n128 v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _BYTE *v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  _BOOL4 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  __n128 v104;
  void (*v105)(uint64_t, uint64_t, __n128);
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t type;
  os_log_type_t typea;
  uint64_t v119[2];

  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 336) = sub_100048B14(v2, (uint64_t)qword_10124CEC8);
  v3 = swift_retain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v7 = *(_QWORD **)(v0 + 304);
    v112 = *(_QWORD *)(v0 + 104);
    v8 = swift_slowAlloc(22, -1);
    type = swift_slowAlloc(64, -1);
    v119[0] = type;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 72) = &type metadata for OpenMusicItemAppIntent;
    v9 = sub_100007E8C(&qword_1011C6100);
    v10 = String.init<A>(describing:)(v0 + 72, v9);
    *(_QWORD *)(v0 + 80) = sub_100322200(v10, v11, v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    IntentParameter.wrappedValue.getter(v7);
    v12 = sub_1004E1D7C();
    v14 = v13;
    sub_10005B748((uint64_t)v7, type metadata accessor for GenericMusicItemEntity);
    *(_QWORD *)(v0 + 88) = sub_100322200(v12, v14, v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96);
    v15 = swift_bridgeObjectRelease();
    swift_release_n(v112, 2, v15);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s opening %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(type, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(type, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 104), 2, v6);
  }

  v16 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_100794B44();
  *(_QWORD *)(v0 + 344) = v17;
  v19 = *(_QWORD *)(v0 + 296);
  v18 = *(_QWORD **)(v0 + 304);
  v20 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 264);
  v21 = *(_QWORD *)(v0 + 272);

  IntentParameter.wrappedValue.getter(v18);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v21 + 32))(v19, v18, v22);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v23(v20, v19, v22);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 88))(v20, v22);
  if (v24 == enum case for GenericMusicItem.album(_:))
  {
    v26 = v0 + 248;
    v25 = *(_QWORD *)(v0 + 248);
    v27 = *(_QWORD *)(v0 + 288);
    v28 = *(_QWORD *)(v0 + 256);
    v29 = (_QWORD *)(v0 + 240);
    v30 = *(_QWORD *)(v0 + 240);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 96))(v27, *(_QWORD *)(v0 + 264));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v28, v27, v30);
    v40 = sub_1007261FC(v28);
    v41 = (_QWORD *)(v0 + 256);
LABEL_19:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)v26 + 8))(*v41, *v29);
    *(_QWORD *)(v0 + 376) = v40;
    v74 = *(_QWORD *)(v0 + 120);
    v73 = *(_QWORD **)(v0 + 128);
    v75 = *(_QWORD *)(v0 + 112);
    v76 = (uint64_t)v73 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
    *v73 = v40;
    v77 = type metadata accessor for UITraitOverrides(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v75, 1, 1, v77);
    sub_100727FD4(v75, v76);
    v78 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
    swift_storeEnumTagMultiPayload(v73, v78, 4);
    swift_storeEnumTagMultiPayload(v73, v74, 0);
    v79 = dword_1011C791C;
    v80 = v40;
    v81 = (_QWORD *)swift_task_alloc(v79);
    *(_QWORD *)(v0 + 384) = v81;
    *v81 = v0;
    v81[1] = sub_100725790;
    return sub_100771208(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 128));
  }
  if (v24 == enum case for GenericMusicItem.artist(_:))
  {
    v41 = (_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 232);
    v32 = *(_QWORD *)(v0 + 288);
    v26 = v0 + 224;
    v33 = *(_QWORD *)(v0 + 224);
    v29 = (_QWORD *)(v0 + 216);
    v34 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 96))(v32, *(_QWORD *)(v0 + 264));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v31, v32, v34);
    v35 = sub_100726424(v31);
LABEL_18:
    v40 = v35;
    goto LABEL_19;
  }
  if (v24 == enum case for GenericMusicItem.playlist(_:))
  {
    v41 = (_QWORD *)(v0 + 208);
    v36 = *(_QWORD *)(v0 + 208);
    v37 = *(_QWORD *)(v0 + 288);
    v26 = v0 + 200;
    v38 = *(_QWORD *)(v0 + 200);
    v29 = (_QWORD *)(v0 + 192);
    v39 = *(_QWORD *)(v0 + 192);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 96))(v37, *(_QWORD *)(v0 + 264));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v36, v37, v39);
    v35 = sub_1007266F4(v36);
    goto LABEL_18;
  }
  if (v24 == enum case for GenericMusicItem.recordLabel(_:))
  {
    v41 = (_QWORD *)(v0 + 184);
    v42 = *(_QWORD *)(v0 + 184);
    v43 = *(_QWORD *)(v0 + 288);
    v26 = v0 + 176;
    v44 = *(_QWORD *)(v0 + 176);
    v29 = (_QWORD *)(v0 + 168);
    v45 = *(_QWORD *)(v0 + 168);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 96))(v43, *(_QWORD *)(v0 + 264));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v42, v43, v45);
    v35 = sub_10072694C(v42);
    goto LABEL_18;
  }
  if (v24 == enum case for GenericMusicItem.song(_:))
  {
    v82 = *(_QWORD *)(v0 + 288);
    v84 = *(_QWORD *)(v0 + 152);
    v83 = *(_QWORD *)(v0 + 160);
    v85 = *(_QWORD *)(v0 + 144);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 96))(v82, *(_QWORD *)(v0 + 264));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 32))(v83, v82, v85);
    v86 = (_QWORD *)swift_task_alloc(dword_1011C610C);
    *(_QWORD *)(v0 + 352) = v86;
    *v86 = v0;
    v86[1] = sub_100725330;
    return sub_100726AF8(*(_QWORD *)(v0 + 160));
  }
  else
  {
    v87 = *(_QWORD *)(v0 + 296);
    v88 = *(_QWORD *)(v0 + 280);
    v89 = *(_QWORD *)(v0 + 264);
    v90 = swift_release();
    v91 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v23)(v88, v87, v89, v90);
    v92 = Logger.logObject.getter(v91);
    v93 = static os_log_type_t.error.getter(v92);
    v94 = os_log_type_enabled(v92, v93);
    v95 = *(_QWORD *)(v0 + 280);
    v96 = *(_QWORD *)(v0 + 264);
    if (v94)
    {
      typea = v93;
      v113 = *(_QWORD *)(v0 + 272);
      v97 = swift_slowAlloc(22, -1);
      v116 = swift_slowAlloc(64, -1);
      v119[0] = v116;
      *(_DWORD *)v97 = 136446466;
      *(_QWORD *)(v0 + 48) = &type metadata for OpenMusicItemAppIntent;
      v98 = sub_100007E8C(&qword_1011C6100);
      v99 = String.init<A>(describing:)(v0 + 48, v98);
      *(_QWORD *)(v0 + 56) = sub_100322200(v99, v100, v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
      swift_bridgeObjectRelease();
      *(_WORD *)(v97 + 12) = 2082;
      v101 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
      v102 = dispatch thunk of CustomStringConvertible.description.getter(v96, v101);
      *(_QWORD *)(v0 + 64) = sub_100322200(v102, v103, v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
      v104 = swift_bridgeObjectRelease();
      v105 = *(void (**)(uint64_t, uint64_t, __n128))(v113 + 8);
      v105(v95, v96, v104);
      _os_log_impl((void *)&_mh_execute_header, v92, typea, "%{public}s – unsupported type %{public}s", (uint8_t *)v97, 0x16u);
      swift_arrayDestroy(v116, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v116, -1, -1);
      swift_slowDealloc(v97, -1, -1);
    }
    else
    {
      v105 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 272) + 8);
      ((void (*)(_QWORD, _QWORD))v105)(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 264));
    }

    v106 = *(_QWORD *)(v0 + 288);
    v107 = *(_QWORD *)(v0 + 264);
    v108 = sub_1007261B8();
    v109 = swift_allocError(&type metadata for OpenMusicItemIntentError, v108, 0, 0);
    *v110 = 1;
    swift_willThrow(v111);
    ((void (*)(uint64_t, uint64_t))v105)(v106, v107);
    swift_errorRetain(v109);
    v46 = swift_errorRetain(v109);
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.error.getter(v47);
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc(22, -1);
      v50 = swift_slowAlloc(64, -1);
      v119[0] = v50;
      *(_DWORD *)v49 = 136446466;
      *(_QWORD *)(v0 + 16) = &type metadata for OpenMusicItemAppIntent;
      v51 = sub_100007E8C(&qword_1011C6100);
      v52 = String.init<A>(describing:)(v0 + 16, v51);
      *(_QWORD *)(v0 + 24) = sub_100322200(v52, v53, v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2082;
      *(_QWORD *)(v0 + 32) = v109;
      swift_errorRetain(v109);
      v54 = sub_100007E8C(&qword_1011A14B0);
      v55 = String.init<A>(describing:)(v0 + 32, v54);
      *(_QWORD *)(v0 + 40) = sub_100322200(v55, v56, v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
      swift_bridgeObjectRelease();
      swift_errorRelease(v109);
      swift_errorRelease(v109);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "%{public}s – unable to open item %{public}s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy(v50, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v49, -1, -1);
    }
    else
    {
      swift_errorRelease(v109);
      swift_errorRelease(v109);
    }

    v57 = *(_QWORD *)(v0 + 296);
    v58 = *(_QWORD *)(v0 + 264);
    v59 = *(_QWORD *)(v0 + 272);
    v60 = sub_1007261B8();
    swift_allocError(&type metadata for OpenMusicItemIntentError, v60, 0, 0);
    *v61 = 0;
    swift_willThrow(v62);
    swift_release();
    swift_errorRelease(v109);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
    v63 = *(_QWORD *)(v0 + 296);
    v65 = *(_QWORD *)(v0 + 280);
    v64 = *(_QWORD *)(v0 + 288);
    v66 = *(_QWORD *)(v0 + 256);
    v67 = *(_QWORD *)(v0 + 232);
    v68 = *(_QWORD *)(v0 + 208);
    v69 = *(_QWORD *)(v0 + 184);
    v70 = *(_QWORD *)(v0 + 160);
    v71 = *(_QWORD *)(v0 + 136);
    v114 = *(_QWORD *)(v0 + 128);
    v115 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 304));
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v114);
    swift_task_dealloc(v115);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100725330(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 352);
  *(_QWORD *)(*(_QWORD *)v2 + 360) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[40];
    v7 = v4[41];
    v8 = sub_10072549C;
  }
  else
  {
    v4[46] = a1;
    v6 = v4[40];
    v7 = v4[41];
    v8 = sub_1007253A4;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1007253A4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;

  (*(void (**)(_QWORD, _QWORD))(v0[19] + 8))(v0[20], v0[18]);
  v1 = (void *)v0[46];
  v0[47] = v1;
  v2 = v0[15];
  v3 = (_QWORD *)v0[16];
  v4 = v0[14];
  v5 = (uint64_t)v3 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
  *v3 = v1;
  v6 = type metadata accessor for UITraitOverrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_100727FD4(v4, v5);
  v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  swift_storeEnumTagMultiPayload(v3, v7, 4);
  swift_storeEnumTagMultiPayload(v3, v2, 0);
  v8 = dword_1011C791C;
  v9 = v1;
  v10 = (_QWORD *)swift_task_alloc(v8);
  v0[48] = v10;
  *v10 = v0;
  v10[1] = sub_100725790;
  return sub_100771208(v0[17], v0[16]);
}

uint64_t sub_10072549C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _BYTE *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[2];

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v1, v3, v4);
  v5 = *(_QWORD *)(v0 + 360);
  swift_errorRetain(v5);
  v6 = swift_errorRetain(v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v35[0] = v10;
    *(_DWORD *)v9 = 136446466;
    *(_QWORD *)(v0 + 16) = &type metadata for OpenMusicItemAppIntent;
    v11 = sub_100007E8C(&qword_1011C6100);
    v12 = String.init<A>(describing:)(v0 + 16, v11);
    *(_QWORD *)(v0 + 24) = sub_100322200(v12, v13, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 32) = v5;
    swift_errorRetain(v5);
    v14 = sub_100007E8C(&qword_1011A14B0);
    v15 = String.init<A>(describing:)(v0 + 32, v14);
    *(_QWORD *)(v0 + 40) = sub_100322200(v15, v16, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s – unable to open item %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
  }

  v17 = *(_QWORD *)(v0 + 296);
  v19 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 272);
  v20 = sub_1007261B8();
  swift_allocError(&type metadata for OpenMusicItemIntentError, v20, 0, 0);
  *v21 = 0;
  swift_willThrow(v22);
  swift_release();
  swift_errorRelease(v5);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  v23 = *(_QWORD *)(v0 + 296);
  v25 = *(_QWORD *)(v0 + 280);
  v24 = *(_QWORD *)(v0 + 288);
  v26 = *(_QWORD *)(v0 + 256);
  v27 = *(_QWORD *)(v0 + 232);
  v28 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 136);
  v33 = *(_QWORD *)(v0 + 128);
  v34 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100725790()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = (*v1)[48];
  (*v1)[49] = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    sub_10005B748(v2[16], type metadata accessor for AppInterfaceContext.Activity);
    v4 = v2[40];
    v5 = v2[41];
    v6 = sub_10072594C;
  }
  else
  {
    v7 = v2[17];
    sub_10005B748(v2[16], type metadata accessor for AppInterfaceContext.Activity);
    sub_10005B748(v7, type metadata accessor for AppInterfaceContext.Activity);
    v4 = v2[40];
    v5 = v2[41];
    v6 = sub_10072582C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10072582C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 272);
  v6 = *(_QWORD *)(v0 + 280);
  v8 = *(_QWORD *)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 232);
  v13 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 160);
  v16 = *(_QWORD *)(v0 + 136);
  v17 = *(_QWORD *)(v0 + 128);
  v18 = *(_QWORD *)(v0 + 112);

  v9 = swift_release(v2);
  static IntentResult.result<>()(v9);
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v8);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10072594C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[2];

  swift_release();
  v1 = *(_QWORD *)(v0 + 392);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(22, -1);
    v6 = swift_slowAlloc(64, -1);
    v31[0] = v6;
    *(_DWORD *)v5 = 136446466;
    *(_QWORD *)(v0 + 16) = &type metadata for OpenMusicItemAppIntent;
    v7 = sub_100007E8C(&qword_1011C6100);
    v8 = String.init<A>(describing:)(v0 + 16, v7);
    *(_QWORD *)(v0 + 24) = sub_100322200(v8, v9, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    *(_QWORD *)(v0 + 32) = v1;
    swift_errorRetain(v1);
    v10 = sub_100007E8C(&qword_1011A14B0);
    v11 = String.init<A>(describing:)(v0 + 32, v10);
    *(_QWORD *)(v0 + 40) = sub_100322200(v11, v12, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s – unable to open item %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy(v6, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v13 = *(_QWORD *)(v0 + 296);
  v15 = *(_QWORD *)(v0 + 264);
  v14 = *(_QWORD *)(v0 + 272);
  v16 = sub_1007261B8();
  swift_allocError(&type metadata for OpenMusicItemIntentError, v16, 0, 0);
  *v17 = 0;
  swift_willThrow(v18);
  swift_release();
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  v19 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 280);
  v20 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 256);
  v23 = *(_QWORD *)(v0 + 232);
  v24 = *(_QWORD *)(v0 + 208);
  v25 = *(_QWORD *)(v0 + 184);
  v26 = *(_QWORD *)(v0 + 160);
  v27 = *(_QWORD *)(v0 + 136);
  v29 = *(_QWORD *)(v0 + 128);
  v30 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100725C34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119C758 != -1)
    swift_once(&qword_10119C758, sub_1007245D0);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048B14(v2, (uint64_t)qword_10124D918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100725CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_100007E8C(&qword_1011C6110);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C6118);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, a1, a2);
  v10._countAndFlagsBits = 0x206E65704FLL;
  v10._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100ECD048);
  v12 = sub_100007E8C(&qword_1011C6120);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_100725DFC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1011C60F4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return sub_100724638(a1, v4);
}

uint64_t sub_100725E54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100725F20();
  *a1 = result;
  return result;
}

uint64_t sub_100725E78(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100078E54();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenMusicItemAppIntent()
{
  return &type metadata for OpenMusicItemAppIntent;
}

uint64_t sub_100725EB0()
{
  return sub_100049F28(&qword_1011C60E0, &qword_1011C60E8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100725EDC()
{
  _BYTE *v0;

  if ((*v0 & 1) != 0)
    return LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x8000000100E437E0);
  else
    return LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x8000000100E43810);
}

uint64_t sub_100725F20()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_10119EC90);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v24 - v7;
  v9 = sub_100007E8C(&qword_10119ECC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011AEEF0);
  LocalizedStringResource.init(stringLiteral:)(0x744920636973754DLL, 0xEA00000000006D65);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000012, 0x8000000100E437C0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v19 = type metadata accessor for GenericMusicItemEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v8, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v25);
  v22 = sub_100048748((unint64_t *)&qword_1011AEEF8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED94);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v18, v14, v11, v8, v6, v2, v22);
}

unint64_t sub_1007261B8()
{
  unint64_t result;

  result = qword_1011C60F8;
  if (!qword_1011C60F8)
  {
    result = swift_getWitnessTable(&unk_100ECD11C, &type metadata for OpenMusicItemIntentError);
    atomic_store(result, (unint64_t *)&qword_1011C60F8);
  }
  return result;
}

id sub_1007261FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = type metadata accessor for MusicAppDestinationContext(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_100794B44();

  if (!v1)
  {
    v11 = sub_100770204();
    if (v11 == 6)
      v11 = 1;
    v27 = sub_10076F638(v11);
    Album.catalogID.getter(v27);
    v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      v14 = *(int *)(sub_100007E8C(&qword_1011AEA18) + 48);
      v26 = v3;
      v15 = &v9[v14];
      v16 = type metadata accessor for Album(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, a1, v16);
      v17 = enum case for MusicAppDestination.AlbumDescriptor.album(_:);
      v18 = type metadata accessor for MusicAppDestination.AlbumDescriptor(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v9, v17, v18);
      v19 = 0;
      *(_QWORD *)v15 = 0;
      *((_QWORD *)v15 + 1) = 0;
      v3 = v26;
    }
    else
    {
      v20 = type metadata accessor for Album(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v9, a1, v20);
      v19 = 2;
    }
    v21 = swift_storeEnumTagMultiPayload(v9, v7, v19);
    static MusicAppDestinationContext.none.getter(v21);
    sub_100374968((uint64_t)v9, v27, (uint64_t)v6);
    v10 = v22;
    swift_release();
    v23 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v23);
    sub_10005B748((uint64_t)v9, _s18AppPageDestinationOMa);
  }
  return v10;
}

id sub_100726424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  unint64_t v28;
  _BYTE *v29;
  __n128 v30;
  uint64_t v31;
  void *v32;
  __n128 v33;
  _QWORD v35[2];
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a1;
  v2 = type metadata accessor for MusicAppDestinationContext(0);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v5);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C44D0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_100794B44();
  v14 = v13;

  if (!v1)
  {
    v36 = v11;
    v37 = v9;
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = v5;
      v35[1] = 0;
      swift_retain();
      v17 = sub_100770204();
      if (v17 == 6)
        v17 = 1;
      v18 = sub_10076F638(v17);
      v19 = v40;
      Artist.catalogID.getter(v18);
      v21 = v20;
      swift_bridgeObjectRelease();
      v22 = type metadata accessor for Artist(0);
      v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      if (v21)
      {
        v24 = v36;
        v23(v36, v19, v22);
        v25 = v37;
        v26.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v37 + 104))(v24, enum case for MusicPageProvider.Destination.artistDetail<A, B>(_:), v8);
        v12 = (id)MusicPageProvider.page(for:stackAuthority:motionCacheBucketID:)(v24, v18, 0, 0, v26);
        swift_release();
        swift_release();
        v27 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v25 + 8))(v24, v8, v27);
      }
      else
      {
        v37 = v15;
        v23(v7, v19, v22);
        v31 = swift_storeEnumTagMultiPayload(v7, v16, 4);
        static MusicAppDestinationContext.none.getter(v31);
        sub_100374968((uint64_t)v7, v18, (uint64_t)v4);
        v12 = v32;
        swift_release();
        swift_release();
        v33 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v4, v39, v33);
        sub_10005B748((uint64_t)v7, _s18AppPageDestinationOMa);
      }
    }
    else
    {
      v28 = sub_1007261B8();
      swift_allocError(&type metadata for OpenMusicItemIntentError, v28, 0, 0);
      *v29 = 0;
      swift_willThrow(v30);
      swift_release();
    }
  }
  return v12;
}

id sub_1007266F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  __n128 v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v3 = type metadata accessor for MusicAppDestinationContext(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_100794B44();

  if (!v1)
  {
    v11 = sub_100770204();
    if (v11 == 6)
      v11 = 1;
    v29 = sub_10076F638(v11);
    Playlist.catalogID.getter(v29);
    v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      v14 = sub_100007E8C(&qword_1011AEA10);
      v15 = *(int *)(v14 + 48);
      v28 = v3;
      v16 = &v9[v15];
      v27 = &v9[*(int *)(v14 + 64)];
      v17 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, a1, v17);
      v18 = enum case for MusicAppDestination.PlaylistDescriptor.playlist(_:);
      v19 = type metadata accessor for MusicAppDestination.PlaylistDescriptor(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v9, v18, v19);
      v20 = type metadata accessor for URL(0);
      *(_QWORD *)v16 = 0;
      *((_QWORD *)v16 + 1) = 0;
      v21 = 1;
      v3 = v28;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v27, 1, 1, v20);
    }
    else
    {
      v22 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v9, a1, v22);
      v21 = 3;
    }
    v23 = swift_storeEnumTagMultiPayload(v9, v7, v21);
    static MusicAppDestinationContext.none.getter(v23);
    sub_100374968((uint64_t)v9, v29, (uint64_t)v6);
    v10 = v24;
    swift_release();
    v25 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v25);
    sub_10005B748((uint64_t)v9, _s18AppPageDestinationOMa);
  }
  return v10;
}

id sub_10072694C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  unint64_t v16;
  _BYTE *v17;
  __n128 v18;
  uint64_t v19;

  v3 = sub_100007E8C(&qword_1011C44D0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_100794B44();
  v9 = v8;

  if (!v1)
  {
    if (*(_QWORD *)(v9 + 16))
    {
      swift_retain();
      v10 = sub_100770204();
      if (v10 == 6)
        v10 = 1;
      v11 = sub_10076F638(v10);
      v12 = type metadata accessor for RecordLabel(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, a1, v12);
      v13.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for MusicPageProvider.Destination.recordLabelDetail<A, B>(_:), v3);
      v7 = (id)MusicPageProvider.page(for:stackAuthority:motionCacheBucketID:)(v6, v11, 0, 0, v13);
      swift_release();
      swift_release();
      v14 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v14);
    }
    else
    {
      v16 = sub_1007261B8();
      swift_allocError(&type metadata for OpenMusicItemIntentError, v16, 0, 0);
      *v17 = 0;
      swift_willThrow(v18);
      swift_release();
    }
  }
  return v7;
}

uint64_t sub_100726AF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v1[4] = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3D70);
  v1[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[6] = swift_task_alloc(v3);
  v1[7] = swift_task_alloc(v3);
  v1[8] = swift_task_alloc(v3);
  v4 = type metadata accessor for ContainerDetail.Source(0);
  v1[9] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[10] = swift_task_alloc(v5);
  v1[11] = swift_task_alloc(v5);
  v1[12] = swift_task_alloc(v5);
  v1[13] = swift_task_alloc(v5);
  v6 = sub_100007E8C(&qword_1011A8FA0);
  v1[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Album(0);
  v1[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[16] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[17] = swift_task_alloc(v9);
  v1[18] = swift_task_alloc(v9);
  v1[19] = swift_task_alloc(v9);
  v1[20] = swift_task_alloc(v9);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011B6BC0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[21] = swift_task_alloc(v10);
  v1[22] = swift_task_alloc(v10);
  v11 = sub_100007E8C(&qword_10119E480);
  v1[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Song(0);
  v1[24] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v1[25] = v13;
  v1[26] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MainActor(0);
  v1[27] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v1[28] = v16;
  v1[29] = v17;
  return swift_task_switch(sub_100726D08, v16, v17);
}

uint64_t sub_100726D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _BYTE *v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void (*v82)(uint64_t, uint64_t);
  _BYTE *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v2 = *(_QWORD *)(v1 + 176);
  Song.albums.getter(a1);
  v3 = sub_100007E8C(&qword_1011A3D80);
  *(_QWORD *)(v1 + 240) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 248) = v4;
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(_QWORD *)(v1 + 256) = v5;
  if (v5(v2, 1, v3) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v1 + 176), (uint64_t *)&unk_1011B6BC0);
    v6 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v7 = swift_allocObject(v6, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100EA7A90;
    sub_100007E8C((uint64_t *)&unk_1011B6BD0);
    v8 = static PartialMusicProperty<A>.albums.getter();
    *(_QWORD *)(v7 + 32) = v8;
    v112 = v7;
    specialized Array._endMutation()(v8);
    *(_QWORD *)(v1 + 264) = v7;
    v9 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v1 + 272) = v9;
    *v9 = v1;
    v9[1] = sub_100727568;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v1 + 184), v7, *(_QWORD *)(v1 + 192), &protocol witness table for Song);
  }
  v11 = *(_QWORD *)(v1 + 192);
  v12 = *(_QWORD *)(v1 + 200);
  v14 = *(_QWORD *)(v1 + 176);
  v13 = *(_QWORD *)(v1 + 184);
  v15 = *(_QWORD *)(v1 + 32);
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011B6BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v13, v15, v11);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 256);
  v17 = *(_QWORD *)(v1 + 240);
  v19 = *(_QWORD *)(v1 + 200);
  v18 = *(_QWORD *)(v1 + 208);
  v21 = *(_QWORD *)(v1 + 184);
  v20 = *(_QWORD *)(v1 + 192);
  v22 = *(_QWORD *)(v1 + 168);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v20);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v18, v21, v20);
  Song.albums.getter(v23);
  if (v16(v22, 1, v17) == 1)
  {
    v24 = *(_QWORD *)(v1 + 120);
    v25 = *(_QWORD *)(v1 + 128);
    v26 = *(_QWORD *)(v1 + 112);
    sub_10004FF60(*(_QWORD *)(v1 + 168), (uint64_t *)&unk_1011B6BC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v26, 1, 1, v24);
  }
  else
  {
    v27 = *(_QWORD *)(v1 + 240);
    v28 = *(_QWORD *)(v1 + 248);
    v29 = *(_QWORD *)(v1 + 168);
    v30 = *(_QWORD *)(v1 + 120);
    v31 = *(_QWORD *)(v1 + 128);
    v32 = *(_QWORD *)(v1 + 112);
    sub_10031E1D4(v32);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v27);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v32, 1, v30) != 1)
    {
      v53 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 128) + 32))(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
      Song.catalogID.getter(v53);
      v55 = v54;
      swift_bridgeObjectRelease();
      v56 = *(_BYTE **)(v1 + 104);
      v57 = *(_QWORD *)(v1 + 72);
      if (v55)
      {
        *v56 = 0;
        v58 = v56;
        v59 = v57;
        v60 = 1;
      }
      else
      {
        v61 = sub_100007E8C((uint64_t *)&unk_1011AD760);
        v62 = *(int *)(v61 + 48);
        v63 = *(int *)(v61 + 64);
        v64 = _s6AlbumsV5ScopeOMa(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v56, 1, 1, v64);
        v56[v62] = 0;
        v56[v63] = 0;
        v58 = v56;
        v59 = v57;
        v60 = 0;
      }
      swift_storeEnumTagMultiPayload(v58, v59, v60);
      v94 = *(_QWORD *)(v1 + 200);
      v96 = *(_QWORD *)(v1 + 192);
      v98 = *(_QWORD *)(v1 + 184);
      v100 = *(_QWORD *)(v1 + 176);
      v91 = *(_QWORD *)(v1 + 208);
      v92 = *(_QWORD *)(v1 + 160);
      v65 = *(_QWORD *)(v1 + 144);
      v66 = *(_QWORD *)(v1 + 152);
      v86 = *(_QWORD *)(v1 + 136);
      v67 = *(_QWORD *)(v1 + 120);
      v102 = *(_QWORD *)(v1 + 168);
      v104 = *(_QWORD *)(v1 + 112);
      v68 = *(_QWORD *)(v1 + 96);
      v69 = *(_QWORD *)(v1 + 104);
      v88 = *(_QWORD *)(v1 + 128);
      v90 = v69;
      v70 = *(_QWORD *)(v1 + 88);
      v71 = *(_QWORD *)(v1 + 64);
      v106 = *(_QWORD *)(v1 + 80);
      v108 = *(_QWORD *)(v1 + 56);
      v110 = *(_QWORD *)(v1 + 48);
      v85 = *(uint64_t **)(v1 + 40);
      v72 = *(void (**)(uint64_t))(v88 + 16);
      v72(v66);
      v73 = v69;
      v74 = v68;
      v87 = v68;
      v75 = sub_100072DB0(v73, v68);
      v76 = Song.id.getter(v75);
      v84 = v77;
      v78 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v71, 1, 1, v78);
      v79 = v67;
      ((void (*)(uint64_t, uint64_t, uint64_t))v72)(v65, v66, v67);
      sub_100072DB0(v74, v70);
      sub_10072801C(v71, v108);
      ((void (*)(uint64_t, uint64_t, uint64_t))v72)(v86, v65, v67);
      sub_100072DB0(v70, v106);
      *v85 = v76;
      v85[1] = v84;
      v80 = type metadata accessor for AlbumDetailDataSource.ProminentTrackSource(0);
      swift_storeEnumTagMultiPayload(v85, v80, 0);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v85, 0, 1, v80);
      sub_10072801C(v108, v110);
      v81 = sub_1004C539C(v86, v106, (uint64_t)v85, v110);
      sub_10004FF60(v108, &qword_10119E460);
      sub_10005B748(v70, type metadata accessor for ContainerDetail.Source);
      v82 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
      v82(v65, v79);
      v83 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
      v89 = sub_1003723A0(v81, 0, v83);
      sub_10004FF60(v71, &qword_10119E460);
      sub_10005B748(v87, type metadata accessor for ContainerDetail.Source);
      v82(v66, v79);
      sub_10005B748(v90, type metadata accessor for ContainerDetail.Source);
      v82(v92, v79);
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v91, v96);
      swift_task_dealloc(v91);
      swift_task_dealloc(v98);
      swift_task_dealloc(v100);
      swift_task_dealloc(v102);
      swift_task_dealloc(v92);
      swift_task_dealloc(v66);
      swift_task_dealloc(v65);
      swift_task_dealloc(v86);
      swift_task_dealloc(v104);
      swift_task_dealloc(v90);
      swift_task_dealloc(v87);
      swift_task_dealloc(v70);
      swift_task_dealloc(v106);
      swift_task_dealloc(v71);
      swift_task_dealloc(v108);
      swift_task_dealloc(v110);
      swift_task_dealloc(v85);
      return (*(uint64_t (**)(char *))(v1 + 8))(v89);
    }
  }
  v33 = *(_QWORD *)(v1 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 200) + 8))(*(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 192));
  sub_10004FF60(v33, &qword_1011A8FA0);
  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v34 = type metadata accessor for Logger(0);
  v35 = sub_100048B14(v34, (uint64_t)qword_10124CEC8);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.error.getter(v36);
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    *(_DWORD *)v38 = 136446210;
    v112 = v39;
    *(_QWORD *)(v1 + 16) = &type metadata for OpenMusicItemAppIntent;
    v40 = sub_100007E8C(&qword_1011C6100);
    v41 = String.init<A>(describing:)(v1 + 16, v40);
    *(_QWORD *)(v1 + 24) = sub_100322200(v41, v42, &v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s – unable to obtain album to open song in", v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);
  }

  v43 = *(_QWORD *)(v1 + 208);
  v45 = *(_QWORD *)(v1 + 176);
  v44 = *(_QWORD *)(v1 + 184);
  v46 = *(_QWORD *)(v1 + 160);
  v47 = *(_QWORD *)(v1 + 168);
  v49 = *(_QWORD *)(v1 + 144);
  v48 = *(_QWORD *)(v1 + 152);
  v93 = *(_QWORD *)(v1 + 136);
  v95 = *(_QWORD *)(v1 + 112);
  v97 = *(_QWORD *)(v1 + 104);
  v99 = *(_QWORD *)(v1 + 96);
  v101 = *(_QWORD *)(v1 + 88);
  v103 = *(_QWORD *)(v1 + 80);
  v105 = *(_QWORD *)(v1 + 64);
  v107 = *(_QWORD *)(v1 + 56);
  v109 = *(_QWORD *)(v1 + 48);
  v111 = *(_QWORD *)(v1 + 40);
  v50 = sub_1007261B8();
  swift_allocError(&type metadata for OpenMusicItemIntentError, v50, 0, 0);
  *v51 = 0;
  swift_willThrow(v52);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v97);
  swift_task_dealloc(v99);
  swift_task_dealloc(v101);
  swift_task_dealloc(v103);
  swift_task_dealloc(v105);
  swift_task_dealloc(v107);
  swift_task_dealloc(v109);
  swift_task_dealloc(v111);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100727568()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 272));
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_errorRelease(v0);
    v3 = *(_QWORD *)(v2 + 224);
    v4 = *(_QWORD *)(v2 + 232);
    v5 = sub_100727CFC;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 224);
    v4 = *(_QWORD *)(v2 + 232);
    v5 = sub_1007275D8;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_1007275D8()
{
  uint64_t v0;
  __n128 v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _BYTE *v37;
  __n128 v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(uint64_t, uint64_t);
  _BYTE *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v1 = swift_release();
  v2 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 168);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v5 + 56))(v7, 0, 1, v6, v1);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v7, v6);
  Song.albums.getter(v9);
  if (v2(v8, 1, v3) == 1)
  {
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 112);
    sub_10004FF60(*(_QWORD *)(v0 + 168), (uint64_t *)&unk_1011B6BC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v12, 1, 1, v10);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 248);
    v15 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 128);
    v18 = *(_QWORD *)(v0 + 112);
    sub_10031E1D4(v18);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) != 1)
    {
      v40 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
      Song.catalogID.getter(v40);
      v42 = v41;
      swift_bridgeObjectRelease();
      v43 = *(_BYTE **)(v0 + 104);
      v44 = *(_QWORD *)(v0 + 72);
      if (v42)
      {
        *v43 = 0;
        v45 = v43;
        v46 = v44;
        v47 = 1;
      }
      else
      {
        v48 = sub_100007E8C((uint64_t *)&unk_1011AD760);
        v49 = *(int *)(v48 + 48);
        v50 = *(int *)(v48 + 64);
        v51 = _s6AlbumsV5ScopeOMa(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v43, 1, 1, v51);
        v43[v49] = 0;
        v43[v50] = 0;
        v45 = v43;
        v46 = v44;
        v47 = 0;
      }
      swift_storeEnumTagMultiPayload(v45, v46, v47);
      v81 = *(_QWORD *)(v0 + 200);
      v83 = *(_QWORD *)(v0 + 192);
      v85 = *(_QWORD *)(v0 + 184);
      v87 = *(_QWORD *)(v0 + 176);
      v78 = *(_QWORD *)(v0 + 208);
      v79 = *(_QWORD *)(v0 + 160);
      v52 = *(_QWORD *)(v0 + 144);
      v53 = *(_QWORD *)(v0 + 152);
      v73 = *(_QWORD *)(v0 + 136);
      v54 = *(_QWORD *)(v0 + 120);
      v89 = *(_QWORD *)(v0 + 168);
      v91 = *(_QWORD *)(v0 + 112);
      v55 = *(_QWORD *)(v0 + 96);
      v56 = *(_QWORD *)(v0 + 104);
      v75 = *(_QWORD *)(v0 + 128);
      v77 = v56;
      v57 = *(_QWORD *)(v0 + 88);
      v58 = *(_QWORD *)(v0 + 64);
      v93 = *(_QWORD *)(v0 + 80);
      v95 = *(_QWORD *)(v0 + 56);
      v97 = *(_QWORD *)(v0 + 48);
      v72 = *(uint64_t **)(v0 + 40);
      v59 = *(void (**)(uint64_t))(v75 + 16);
      v59(v53);
      v60 = v56;
      v61 = v55;
      v74 = v55;
      v62 = sub_100072DB0(v60, v55);
      v63 = Song.id.getter(v62);
      v71 = v64;
      v65 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v58, 1, 1, v65);
      v66 = v54;
      ((void (*)(uint64_t, uint64_t, uint64_t))v59)(v52, v53, v54);
      sub_100072DB0(v61, v57);
      sub_10072801C(v58, v95);
      ((void (*)(uint64_t, uint64_t, uint64_t))v59)(v73, v52, v54);
      sub_100072DB0(v57, v93);
      *v72 = v63;
      v72[1] = v71;
      v67 = type metadata accessor for AlbumDetailDataSource.ProminentTrackSource(0);
      swift_storeEnumTagMultiPayload(v72, v67, 0);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v72, 0, 1, v67);
      sub_10072801C(v95, v97);
      v68 = sub_1004C539C(v73, v93, (uint64_t)v72, v97);
      sub_10004FF60(v95, &qword_10119E460);
      sub_10005B748(v57, type metadata accessor for ContainerDetail.Source);
      v69 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
      v69(v52, v66);
      v70 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
      v76 = sub_1003723A0(v68, 0, v70);
      sub_10004FF60(v58, &qword_10119E460);
      sub_10005B748(v74, type metadata accessor for ContainerDetail.Source);
      v69(v53, v66);
      sub_10005B748(v77, type metadata accessor for ContainerDetail.Source);
      v69(v79, v66);
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v78, v83);
      swift_task_dealloc(v78);
      swift_task_dealloc(v85);
      swift_task_dealloc(v87);
      swift_task_dealloc(v89);
      swift_task_dealloc(v79);
      swift_task_dealloc(v53);
      swift_task_dealloc(v52);
      swift_task_dealloc(v73);
      swift_task_dealloc(v91);
      swift_task_dealloc(v77);
      swift_task_dealloc(v74);
      swift_task_dealloc(v57);
      swift_task_dealloc(v93);
      swift_task_dealloc(v58);
      swift_task_dealloc(v95);
      swift_task_dealloc(v97);
      swift_task_dealloc(v72);
      return (*(uint64_t (**)(char *))(v0 + 8))(v76);
    }
  }
  v19 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
  sub_10004FF60(v19, &qword_1011A8FA0);
  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v20 = type metadata accessor for Logger(0);
  v21 = sub_100048B14(v20, (uint64_t)qword_10124CEC8);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    *(_DWORD *)v24 = 136446210;
    v99 = v25;
    *(_QWORD *)(v0 + 16) = &type metadata for OpenMusicItemAppIntent;
    v26 = sub_100007E8C(&qword_1011C6100);
    v27 = String.init<A>(describing:)(v0 + 16, v26);
    *(_QWORD *)(v0 + 24) = sub_100322200(v27, v28, &v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s – unable to obtain album to open song in", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }

  v29 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 176);
  v30 = *(_QWORD *)(v0 + 184);
  v32 = *(_QWORD *)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 168);
  v35 = *(_QWORD *)(v0 + 144);
  v34 = *(_QWORD *)(v0 + 152);
  v80 = *(_QWORD *)(v0 + 136);
  v82 = *(_QWORD *)(v0 + 112);
  v84 = *(_QWORD *)(v0 + 104);
  v86 = *(_QWORD *)(v0 + 96);
  v88 = *(_QWORD *)(v0 + 88);
  v90 = *(_QWORD *)(v0 + 80);
  v92 = *(_QWORD *)(v0 + 64);
  v94 = *(_QWORD *)(v0 + 56);
  v96 = *(_QWORD *)(v0 + 48);
  v98 = *(_QWORD *)(v0 + 40);
  v36 = sub_1007261B8();
  swift_allocError(&type metadata for OpenMusicItemIntentError, v36, 0, 0);
  *v37 = 0;
  swift_willThrow(v38);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100727CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56))(v3, 1, 1, v1, v4);
  sub_10004FF60(v3, &qword_10119E480);
  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100048B14(v5, (uint64_t)qword_10124CEC8);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_DWORD *)v9 = 136446210;
    v35 = v10;
    *(_QWORD *)(v0 + 16) = &type metadata for OpenMusicItemAppIntent;
    v11 = sub_100007E8C(&qword_1011C6100);
    v12 = String.init<A>(describing:)(v0 + 16, v11);
    *(_QWORD *)(v0 + 24) = sub_100322200(v12, v13, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s – unable to obtain album to open song in", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  v14 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 168);
  v20 = *(_QWORD *)(v0 + 144);
  v19 = *(_QWORD *)(v0 + 152);
  v25 = *(_QWORD *)(v0 + 136);
  v26 = *(_QWORD *)(v0 + 112);
  v27 = *(_QWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 96);
  v29 = *(_QWORD *)(v0 + 88);
  v30 = *(_QWORD *)(v0 + 80);
  v31 = *(_QWORD *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 56);
  v33 = *(_QWORD *)(v0 + 48);
  v34 = *(_QWORD *)(v0 + 40);
  v21 = sub_1007261B8();
  swift_allocError(&type metadata for OpenMusicItemIntentError, v21, 0, 0);
  *v22 = 0;
  swift_willThrow(v23);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100727FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011ACE00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10072801C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119E460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100728064@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for OpenMusicItemIntentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1007280D8 + 4 * byte_100ECCF55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10072810C + 4 * byte_100ECCF50[v4]))();
}

uint64_t sub_10072810C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100728114(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10072811CLL);
  return result;
}

uint64_t sub_100728128(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100728130);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100728134(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10072813C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OpenMusicItemIntentError()
{
  return &type metadata for OpenMusicItemIntentError;
}

unint64_t sub_10072815C()
{
  unint64_t result;

  result = qword_1011C6128;
  if (!qword_1011C6128)
  {
    result = swift_getWitnessTable(&unk_100ECD0F4, &type metadata for OpenMusicItemIntentError);
    atomic_store(result, (unint64_t *)&qword_1011C6128);
  }
  return result;
}

id sub_1007281A0(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  v5 = &v3[OBJC_IVAR____TtCV5Music19WindowSceneResolver4View__boundWindowScene];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  *((_QWORD *)v5 + 2) = a3;
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for WindowSceneResolver.View();
  swift_retain();
  swift_retain();
  v6 = a3;
  v7 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = (void *)objc_opt_self(UIColor);
  v9 = v7;
  v10 = objc_msgSend(v8, "clearColor", v13.receiver, v13.super_class);
  objc_msgSend(v9, "setBackgroundColor:", v10);

  v11 = v9;
  objc_msgSend(v11, "setUserInteractionEnabled:", 0);

  swift_release();
  swift_release();
  return v11;
}

void sub_100728404()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV5Music19WindowSceneResolver4View__boundWindowScene);
  v2 = *(id *)(v0 + OBJC_IVAR____TtCV5Music19WindowSceneResolver4View__boundWindowScene + 16);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCV5Music19WindowSceneResolver4View__boundWindowScene + 8));
  swift_release(v1);

}

id sub_10072844C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WindowSceneResolver.View();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WindowSceneResolver.View()
{
  return objc_opt_self(_TtCV5Music19WindowSceneResolver4View);
}

ValueMetadata *type metadata accessor for WindowSceneResolver()
{
  return &type metadata for WindowSceneResolver;
}

id sub_1007284F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD v6[3];

  v0 = sub_100007E8C(&qword_1011C6160);
  Binding.projectedValue.getter(v6, v0);
  v1 = v6[0];
  v2 = v6[1];
  v3 = (void *)v6[2];
  v4 = objc_allocWithZone((Class)type metadata accessor for WindowSceneResolver.View());
  return sub_1007281A0(v1, v2, v3);
}

uint64_t sub_10072856C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100728678();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1007285BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100728678();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10072860C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100728678();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_100728634()
{
  unint64_t result;

  result = qword_1011C6168;
  if (!qword_1011C6168)
  {
    result = swift_getWitnessTable(&unk_100ECD184, &type metadata for WindowSceneResolver);
    atomic_store(result, (unint64_t *)&qword_1011C6168);
  }
  return result;
}

unint64_t sub_100728678()
{
  unint64_t result;

  result = qword_1011C6170;
  if (!qword_1011C6170)
  {
    result = swift_getWitnessTable(&unk_100ECD1D4, &type metadata for WindowSceneResolver);
    atomic_store(result, (unint64_t *)&qword_1011C6170);
  }
  return result;
}

uint64_t sub_1007286C0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_10072E08C(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = *(_QWORD *)(type metadata accessor for SidebarMenu.Item(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  result = sub_10004A0B4(v10, a2);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack(v10);
  }
  else if (v9)
  {
    result = swift_arrayInitWithTakeBackToFront(v10);
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_1007287F4(unint64_t a1)
{
  return sub_100728A68(a1, (uint64_t (*)(uint64_t))sub_10072E0A0);
}

void *sub_100728800@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  void *result;
  char v17;

  v5 = (_QWORD *)*v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_10072E0C8(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = &v5[13 * a1];
    v9 = *((_OWORD *)v7 + 2);
    v8 = v7 + 4;
    v10 = v8[2];
    v11 = v6 - 1;
    v12 = *((_BYTE *)v8 + 24);
    v13 = *((_BYTE *)v8 + 25);
    v14 = *((_BYTE *)v8 + 26);
    v15 = v8[4];
    *(_OWORD *)a2 = v9;
    *(_QWORD *)(a2 + 16) = v10;
    *(_BYTE *)(a2 + 24) = v12;
    *(_BYTE *)(a2 + 25) = v13;
    *(_BYTE *)(a2 + 26) = v14;
    *(_QWORD *)(a2 + 32) = v15;
    *(_OWORD *)(a2 + 40) = *(_OWORD *)(v8 + 5);
    *(_OWORD *)(a2 + 56) = *(_OWORD *)(v8 + 7);
    *(_OWORD *)(a2 + 72) = *(_OWORD *)(v8 + 9);
    *(_OWORD *)(a2 + 88) = *(_OWORD *)(v8 + 11);
    if ((uint64_t)(v11 - a1) >= 0)
    {
      result = memmove(v8, v8 + 13, 104 * (v11 - a1));
      v5[2] = v11;
      *v2 = v5;
      return result;
    }
  }
  v17 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v17, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10072892C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  char v14;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_10072E0F0(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    v14 = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v14, 1046, 0);
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack(v11);
  }
  else if (v10)
  {
    result = swift_arrayInitWithTakeBackToFront(v11);
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_100728A68(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = a2(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 16 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 48), 16 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      *v2 = v5;
      return v10;
    }
  }
  v12 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v12, 1046, 0);
  __break(1u);
  return result;
}

void *sub_100728B48@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  char v10;
  uint64_t v11;
  void *result;
  char v13;

  v5 = (_QWORD *)*v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_10072E12C(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = &v5[7 * a1];
    v10 = *((_BYTE *)v8 + 32);
    v9 = v8 + 4;
    *(_BYTE *)a2 = v10;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)(v9 + 1);
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(v9 + 3);
    *(_OWORD *)(a2 + 40) = *(_OWORD *)(v9 + 5);
    v11 = v6 - 1 - a1;
    if (v11 >= 0)
    {
      result = memmove(v9, v9 + 7, 56 * v11);
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  v13 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v13, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100728C44(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  char v13;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    v3 = sub_10072E154(v3);
    *v1 = v3;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      specialized Array._endMutation()(v11);
      return v10;
    }
  }
  v13 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v13, 1046, 0);
  __break(1u);
  return result;
}

void sub_100728D24()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = objc_msgSend(v0, "presentedViewController");
  if (!v1)
  {
LABEL_4:
    v3 = objc_msgSend(v0, "selectedViewController");
    if (v3)
    {
      v2 = v3;
      v4 = objc_msgSend(v3, "view");

      if (!v4)
      {
        __break(1u);
        goto LABEL_7;
      }
    }
    else
    {
      v6 = objc_msgSend(v0, "view");
      if (!v6)
        goto LABEL_14;
      v4 = v6;
    }
    objc_msgSend(v4, "directionalLayoutMargins");
    goto LABEL_12;
  }
  v2 = v1;
  if ((objc_msgSend(v1, "isBeingDismissed") & 1) != 0)
  {

    goto LABEL_4;
  }
LABEL_7:
  v5 = objc_msgSend(v2, "view");
  if (v5)
  {
    v4 = v5;
    objc_msgSend(v5, "directionalLayoutMargins");

LABEL_12:
    return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_100728E64(char a1)
{
  __asm { BR              X10 }
}

unint64_t sub_100728EA8()
{
  Swift::String v0;

  v0._countAndFlagsBits = 0x6F4E6E657473696CLL;
  v0._object = (void *)0xE900000000000077;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(0xE900000000000077);
  return 0xD00000000000001BLL;
}

unint64_t sub_100728F54()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  id v8;
  uint64_t v9;

  v1 = sub_10072D9D8((uint64_t)objc_msgSend(v0, "selectedIndex"));
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "viewControllers");
  v4 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v9 = v5;
    else
      v9 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease();
    if (!v6)
      goto LABEL_10;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
    {
LABEL_10:
      swift_bridgeObjectRelease();

      return v6;
    }
  }
  result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_19:
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v5);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v5 + 8 * result + 32);
LABEL_9:
    v6 = (uint64_t)v8;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10072907C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = sub_100007E8C(&qword_1011A1750);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v1 + 32) = type metadata accessor for UITraitUserInterfaceIdiom(0);
  *(_QWORD *)(v1 + 40) = &protocol witness table for UITraitUserInterfaceIdiom;
  result = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v1 + 48) = result;
  *(_QWORD *)(v1 + 56) = &protocol witness table for UITraitHorizontalSizeClass;
  qword_10124D930 = v1;
  return result;
}

BOOL sub_1007290EC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return sub_10072E804((double *)v5, (double *)v7);
}

_QWORD *sub_100729144()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  _BYTE v18[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers, v18, 0, 0);
  v2 = *v1;
  v3 = *(_QWORD *)(v2 + 16);
  v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    v17 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v5 = 0;
    do
    {
      v6 = v5 + 1;
      v15 = *(_OWORD *)(v2 + 16 * v5 + 32);
      v7 = (id)v15;
      v8 = sub_100007E8C(&qword_1011B3C58);
      v9 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      swift_dynamicCast(&v16, &v15, v8, v9, 7);
      v10 = v16;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v12 = v17[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized ContiguousArray._endMutation()(v13);
      v5 = v6;
    }
    while (v3 != v6);
    v4 = v17;
    swift_bridgeObjectRelease();
  }
  return v4;
}

void sub_100729298()
{
  void *v0;
  uint64_t ObjectType;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  objc_super v7;

  ObjectType = swift_getObjectType();
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for PaletteTabBarController();
  objc_msgSendSuper2(&v7, "viewDidLoad");
  if (qword_10119C760 != -1)
    swift_once(&qword_10119C760, sub_10072907C);
  v2 = UIViewController.registerForTraitChanges<A>(_:handler:)(qword_10124D930, sub_10072E79C, 0, ObjectType);
  v3 = objc_msgSend(v0, "traitCollection", swift_unknownObjectRelease(v2).n128_f64[0]);
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if (v4 != (id)6)
  {
    v5 = objc_msgSend(v0, "tabBar");
    v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    objc_msgSend(v5, "_setBackgroundView:", v6);

  }
}

double sub_1007293EC(int a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  double result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  char v11[24];
  objc_super v12;

  v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for PaletteTabBarController();
  objc_msgSendSuper2(&v12, "viewWillAppear:", a1 & 1);
  v5 = OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState;
  v6 = v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState];
  v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState] = a1;
  if ((v6 > 0x3F || ((((v6 & 1) == 0) ^ a1) & 1) == 0)
    && (objc_msgSend(v2, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
  {
    v7 = &v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers];
    *(_QWORD *)&result = swift_beginAccess(&v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers], v11, 0, 0).n128_u64[0];
    v8 = *(_QWORD *)(*(_QWORD *)v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = 32;
      do
      {
        ObjectType = swift_getObjectType();
        sub_100917EC8(v6, v2[v5], ObjectType, (uint64_t)&off_1010E2C88);
        v9 += 16;
        --v8;
      }
      while (v8);
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    }
  }
  return result;
}

double sub_100729540(char a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  double result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  char v11[24];
  objc_super v12;

  v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for PaletteTabBarController();
  objc_msgSendSuper2(&v12, "viewDidAppear:", a1 & 1);
  v5 = OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState;
  v6 = v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState];
  v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState] = -127;
  if ((_DWORD)v6 != 129 && (objc_msgSend(v2, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
  {
    v7 = &v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers];
    *(_QWORD *)&result = swift_beginAccess(&v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers], v11, 0, 0).n128_u64[0];
    v8 = *(_QWORD *)(*(_QWORD *)v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = 32;
      do
      {
        ObjectType = swift_getObjectType();
        sub_100917EC8(v6, v2[v5], ObjectType, (uint64_t)&off_1010E2C88);
        v9 += 16;
        --v8;
      }
      while (v8);
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    }
  }
  return result;
}

double sub_100729688(int a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  double result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  char v11[24];
  objc_super v12;

  v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for PaletteTabBarController();
  objc_msgSendSuper2(&v12, "viewWillDisappear:", a1 & 1);
  v5 = OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState;
  v6 = v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState];
  v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState] = a1 | 0x40;
  if (((v6 & 0xC0) != 0x40 || ((((v6 & 1) == 0) ^ a1) & 1) == 0)
    && (objc_msgSend(v2, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
  {
    v7 = &v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers];
    *(_QWORD *)&result = swift_beginAccess(&v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers], v11, 0, 0).n128_u64[0];
    v8 = *(_QWORD *)(*(_QWORD *)v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = 32;
      do
      {
        ObjectType = swift_getObjectType();
        sub_100917EC8(v6, v2[v5], ObjectType, (uint64_t)&off_1010E2C88);
        v9 += 16;
        --v8;
      }
      while (v8);
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    }
  }
  return result;
}

double sub_1007297E4(char a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  double result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  char v11[24];
  objc_super v12;

  v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for PaletteTabBarController();
  objc_msgSendSuper2(&v12, "viewDidDisappear:", a1 & 1);
  v5 = OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState;
  v6 = v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState];
  v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState] = 0x80;
  if ((_DWORD)v6 != 128 && (objc_msgSend(v2, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
  {
    v7 = &v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers];
    *(_QWORD *)&result = swift_beginAccess(&v2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers], v11, 0, 0).n128_u64[0];
    v8 = *(_QWORD *)(*(_QWORD *)v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = 32;
      do
      {
        ObjectType = swift_getObjectType();
        sub_100917EC8(v6, v2[v5], ObjectType, (uint64_t)&off_1010E2C88);
        v9 += 16;
        --v8;
      }
      while (v8);
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    }
  }
  return result;
}

void sub_10072992C()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  _BYTE *v7;
  double Width;
  double Height;
  double *v10;
  double v11;
  char v12;
  char *v13;
  char v14;
  double v15;
  double v16;
  char v17;
  CGFloat v18;
  id v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  id v28;
  id v29;
  double v30;
  NSString v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  double v36;
  double left;
  double v38;
  double right;
  id v40;
  void *v41;
  id v42;
  double v43;
  id v44;
  void *v45;
  id v46;
  double v47;
  double v48;
  id v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  double v58;
  float64x2_t v59;
  float64x2_t v60;
  double v61;
  int16x4_t v62;
  int64x2_t v63;
  double v64;
  id v65;
  void *v66;
  double v67;
  CGFloat v68;
  double v69;
  CGFloat v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  double MaxY;
  id v76;
  double v77;
  CGFloat v78;
  double v79;
  CGFloat v80;
  double v81;
  CGFloat v82;
  double v83;
  CGFloat v84;
  double v85;
  double v86;
  id v87;
  void *v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  id v96;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  void *v102;
  id v103;
  id v104;
  void *v105;
  id v106;
  void *v107;
  id v108;
  uint64_t v109;
  char *v110;
  id v111;
  double v112;
  double v113;
  objc_super v114;
  _OWORD v115[2];
  char v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;
  CGRect v122;

  v114.receiver = v0;
  v114.super_class = (Class)type metadata accessor for PaletteTabBarController();
  objc_msgSendSuper2(&v114, "viewDidLayoutSubviews");
  sub_10072A820();
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 != (id)1)
    goto LABEL_10;
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "window");

  if (v5 && (v6 = objc_msgSend(v5, "screen"), v5, v6))
  {
    v7 = *(_BYTE **)&v0[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView];
    objc_msgSend(v6, "bounds");
    Width = CGRectGetWidth(v117);
    objc_msgSend(v6, "bounds");
    Height = CGRectGetHeight(v118);
    if (Height >= Width)
      Height = Width;
    v10 = (double *)&v7[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
    v11 = *(double *)&v7[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
    v12 = v7[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth + 8];
    *v10 = Height;
    *((_BYTE *)v10 + 8) = 0;
    if ((v12 & 1) != 0 || Height != v11)
    {
      objc_msgSend(v7, "setNeedsLayout");

    }
    else
    {

    }
  }
  else
  {
LABEL_10:
    v7 = *(_BYTE **)&v0[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView];
    v13 = &v7[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
    v14 = v7[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth + 8];
    *(_QWORD *)v13 = 0;
    v13[8] = 1;
    if ((v14 & 1) == 0)
      objc_msgSend(v7, "setNeedsLayout");
  }
  v15 = *(double *)&v0[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteSpecs];
  v16 = *(double *)&v0[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteSpecs + 16];
  v17 = sub_10072A134();
  v18 = 0.0;
  if ((v17 & 1) != 0)
  {
    v19 = objc_msgSend(v0, "tabBar");
    objc_msgSend(v19, "frame");
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;

    v119.origin.x = v21;
    v119.origin.y = v23;
    v119.size.width = v25;
    v119.size.height = v27;
    v18 = CGRectGetHeight(v119);
  }
  v28 = objc_msgSend(v0, "tabBar");
  v29 = sub_10072D9D8((uint64_t)objc_msgSend(v0, "selectedIndex"));
  v31 = v29;
  if (v29)
  {
    v32 = objc_msgSend(v29, "navigationBar");

    v31 = objc_msgSend(v32, "_backdropViewLayerGroupName");
    if (v31)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v31);

      v31 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v30 = swift_bridgeObjectRelease().n128_u64[0];
    }
  }
  objc_msgSend(v28, "_setBackdropViewLayerGroupName:", v31, v30);

  v33 = objc_msgSend(v0, "selectedViewController");
  if (v33)
  {
    v34 = v33;
    v35 = objc_msgSend(v33, "view");

    if (!v35)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    objc_msgSend(v35, "safeAreaInsets");
    left = v36;
    right = v38;

  }
  else
  {
    left = UIEdgeInsetsZero.left;
    right = UIEdgeInsetsZero.right;
  }
  v40 = objc_msgSend(v0, "view");
  if (!v40)
  {
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v41 = v40;
  v42 = objc_msgSend(v40, "effectiveUserInterfaceLayoutDirection");

  if (v42)
    v43 = right;
  else
    v43 = left;
  v113 = v43;
  v44 = objc_msgSend(v0, "view");
  if (!v44)
    goto LABEL_48;
  v45 = v44;
  v46 = objc_msgSend(v44, "effectiveUserInterfaceLayoutDirection");

  if (!v46)
    left = right;
  v47 = 0.0;
  v48 = v16;
  if ((v17 & 1) != 0)
  {
    v49 = objc_msgSend(v0, "tabBar", 0.0);
    objc_msgSend(v49, "frame");
    v51 = v50;
    v53 = v52;
    v55 = v54;
    v57 = v56;

    v120.origin.x = v51;
    v120.origin.y = v53;
    v16 = v48;
    v120.size.width = v55;
    v120.size.height = v57;
    v47 = CGRectGetHeight(v120);
  }
  v112 = v18;
  v58 = v16 + v47;
  v59 = *(float64x2_t *)&v7[OBJC_IVAR____TtC5Music20PaletteContainerView_contentInsets];
  v60 = *(float64x2_t *)&v7[OBJC_IVAR____TtC5Music20PaletteContainerView_contentInsets + 16];
  *(double *)&v7[OBJC_IVAR____TtC5Music20PaletteContainerView_contentInsets + 16] = v58;
  v61 = v58;
  v62 = vmovn_s32(vuzp1q_s32((int32x4_t)vorrq_s8((int8x16_t)vcgtq_f64(v59, (float64x2_t)0), (int8x16_t)vcgeq_f64((float64x2_t)0, v59)), (int32x4_t)vorrq_s8((int8x16_t)vcgtq_f64(v60, (float64x2_t)*(unint64_t *)&v58), (int8x16_t)vcgeq_f64((float64x2_t)*(unint64_t *)&v58, v60))));
  v63 = vceqq_f64((float64x2_t)*(unint64_t *)&v61, v60);
  v62.i16[2] = vmovn_s32(vmovn_hight_s64(*(int32x2_t *)&v63, v63)).i16[2];
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(v62, 0xFuLL))) & 1) == 0)
    objc_msgSend(v7, "setNeedsLayout");
  v64 = v15;
  v65 = objc_msgSend(v0, "view");
  if (!v65)
    goto LABEL_49;
  v66 = v65;
  objc_msgSend(v65, "frame");
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v74 = v73;

  v121.origin.x = v68;
  v121.origin.y = v70;
  v121.size.width = v72;
  v121.size.height = v74;
  MaxY = CGRectGetMaxY(v121);
  v76 = objc_msgSend(v0, "tabBar");
  objc_msgSend(v76, "frame");
  v78 = v77;
  v80 = v79;
  v82 = v81;
  v84 = v83;

  v122.origin.x = v78;
  v122.origin.y = v80;
  v122.size.width = v82;
  v122.size.height = v84;
  v85 = CGRectGetWidth(v122);
  v86 = NSDirectionalEdgeInsets.horizontal.getter(0.0, v113, 0.0, left);
  v87 = objc_msgSend(v0, "view");
  if (!v87)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v88 = v87;
  memset(v115, 0, sizeof(v115));
  v116 = 1;
  v89 = CGRect.applyingLayoutDirection(in:bounds:)(v87, v115, v113, MaxY - (v64 + v48 + v112), v85 - v86, v64 + v48 + v112);
  v91 = v90;
  v93 = v92;
  v95 = v94;

  objc_msgSend(v7, "setFrame:", v89, v91, v93, v95);
  v96 = objc_msgSend(v0, "view");
  if (!v96)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v97 = v96;
  v98 = objc_msgSend(v96, "subviews");

  v99 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v100 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v98, v99);

  v101 = v0;
  sub_10072E874(v100, v101);
  v103 = v102;
  swift_bridgeObjectRelease();

  if (!v103)
    goto LABEL_38;
  if ((sub_10072A134() & 1) != 0)
  {

LABEL_38:
    v104 = objc_msgSend(v101, "view");
    if (v104)
    {
      v105 = v104;
      v106 = objc_msgSend(v101, "view");
      if (v106)
      {
        v107 = v106;
        v108 = objc_msgSend(v106, "subviews");

        v109 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v108, v99);
        v110 = v101;
        v103 = sub_10072EA08(v109, v110);
        swift_bridgeObjectRelease();

        if (!v103)
          v103 = objc_msgSend(v110, "tabBar");
        objc_msgSend(v105, "insertSubview:belowSubview:", v7, v103);
        goto LABEL_45;
      }
      goto LABEL_53;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v111 = objc_msgSend(v101, "view");
  if (v111)
  {
    v105 = v111;
    objc_msgSend(v111, "insertSubview:aboveSubview:", v7, v103);
LABEL_45:

    sub_10072A718();
    return;
  }
LABEL_56:
  __break(1u);
}

uint64_t sub_10072A134()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v6;
  unsigned int v7;

  if ((Feature.UIP.isEnabled.getter(0) & 1) != 0)
  {
    v1 = objc_msgSend(v0, "traitCollection");
    v2 = objc_msgSend(v1, "userInterfaceIdiom");

    if (v2 == (id)1)
    {
      v3 = objc_msgSend(v0, "traitCollection");
      v4 = objc_msgSend(v3, "horizontalSizeClass");

      if (v4 == (id)2)
        return 0;
    }
  }
  v6 = objc_msgSend(v0, "tabBar");
  v7 = objc_msgSend(v6, "isHidden");

  return v7 ^ 1;
}

id sub_10072A520()
{
  _QWORD *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for PaletteTabBarController();
  v1 = objc_msgSendSuper2(&v13, "mutableChildViewControllers");
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x90))();
  v3 = v2;
  if (v2 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v11))
  {
    v5 = 4;
    v6 = 0;
    if ((v3 & 0xC000000000000001) != 0)
    {
LABEL_4:
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      goto LABEL_6;
    }
    while (1)
    {
      v7 = *(id *)(v3 + 8 * v5);
LABEL_6:
      v8 = v7;
      v9 = __OFADD__(v6, 1);
      v10 = v6 + 1;
      if (v9)
        break;
      if (v1)
        objc_msgSend(v1, "removeObject:", v7);

      if (v10 == v4)
        goto LABEL_17;
      v6 = ++v5 - 4;
      if ((v3 & 0xC000000000000001) != 0)
        goto LABEL_4;
    }
    __break(1u);
LABEL_13:
    if (v3 < 0)
      v11 = v3;
    else
      v11 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
LABEL_17:
  swift_bridgeObjectRelease_n(v3, 2);
  return v1;
}

id sub_10072A718()
{
  char *v0;
  char *v1;
  id result;
  unint64_t v3;
  char v4;
  double v5;
  void *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double Width;
  char v16;
  CGRect v17;

  v1 = v0;
  result = objc_msgSend(v0, "isViewLoaded");
  if ((_DWORD)result)
  {
    v3 = sub_10004D63C();
    v4 = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v3);
    v5 = 0.0;
    if ((v4 & 1) == 0)
    {
      result = objc_msgSend(v0, "view");
      if (!result)
      {
        __break(1u);
        return result;
      }
      v6 = result;
      objc_msgSend(result, "bounds");
      v8 = v7;
      v10 = v9;
      v12 = v11;
      v14 = v13;

      v17.origin.x = v8;
      v17.origin.y = v10;
      v17.size.width = v12;
      v17.size.height = v14;
      Width = CGRectGetWidth(v17);
      v16 = HI.SizeClass.init(_:)(Width);
      v5 = HI.SizeClass.margin.getter(v16)
         - *(double *)&v1[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteSpecs + 32];
    }
    return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView], "setDirectionalLayoutMargins:", 0.0, v5, 0.0, v5);
  }
  return result;
}

void sub_10072A820()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double Width;
  char v14;
  double v15;
  id v16;
  id v17;
  CGRect v18;

  v1 = objc_msgSend(v0, "selectedViewController");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "bounds");
      v6 = v5;
      v8 = v7;
      v10 = v9;
      v12 = v11;

      v18.origin.x = v6;
      v18.origin.y = v8;
      v18.size.width = v10;
      v18.size.height = v12;
      Width = CGRectGetWidth(v18);
      v14 = HI.SizeClass.init(_:)(Width);
      v15 = HI.SizeClass.margin.getter(v14);
      objc_msgSend(v2, "additionalSafeAreaInsets");
      objc_msgSend(v2, "setAdditionalSafeAreaInsets:");
      v16 = objc_msgSend(v2, "view");
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v16, "setDirectionalLayoutMargins:", 0.0, v15, 0.0, v15);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_10072A974()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  char *v4;
  id v5;
  __int128 v6;
  uint64_t v7;
  Class isa;
  id v9;
  objc_super v11;
  _OWORD v12[3];
  uint64_t v13;

  v1 = OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView;
  v2 = objc_allocWithZone((Class)type metadata accessor for PaletteContainerView());
  v3 = v0;
  *(_QWORD *)&v0[v1] = sub_10004C080(1);
  v4 = &v3[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteSpecs];
  v5 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  sub_10072FAC4(v5, (uint64_t)v12);
  v6 = v12[1];
  *(_OWORD *)v4 = v12[0];
  *((_OWORD *)v4 + 1) = v6;
  *((_OWORD *)v4 + 2) = v12[2];
  *((_QWORD *)v4 + 6) = v13;
  v3[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState] = 0x80;
  v7 = OBJC_IVAR____TtC5Music23PaletteTabBarController_accessoryView;
  *(_QWORD *)&v3[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers] = _swiftEmptyArrayStorage;

  sub_10004A07C(0, (unint64_t *)&unk_1011C6290, UITab_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for PaletteTabBarController();
  v9 = objc_msgSendSuper2(&v11, "initWithTabs:", isa);

  return v9;
}

id sub_10072AB14(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  id v10;
  __int128 v11;
  uint64_t v12;
  NSString v13;
  id v14;
  objc_super v16;
  _OWORD v17[3];
  uint64_t v18;

  v6 = OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView;
  v7 = objc_allocWithZone((Class)type metadata accessor for PaletteContainerView());
  v8 = v3;
  *(_QWORD *)&v3[v6] = sub_10004C080(1);
  v9 = &v8[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteSpecs];
  v10 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  sub_10072FAC4(v10, (uint64_t)v17);
  v11 = v17[1];
  *(_OWORD *)v9 = v17[0];
  *((_OWORD *)v9 + 1) = v11;
  *((_OWORD *)v9 + 2) = v17[2];
  *((_QWORD *)v9 + 6) = v18;
  v8[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState] = 0x80;
  v12 = OBJC_IVAR____TtC5Music23PaletteTabBarController_accessoryView;
  *(_QWORD *)&v8[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers] = _swiftEmptyArrayStorage;

  if (a2)
  {
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v16.receiver = v8;
  v16.super_class = (Class)type metadata accessor for PaletteTabBarController();
  v14 = objc_msgSendSuper2(&v16, "initWithNibName:bundle:", v13, a3);

  return v14;
}

id sub_10072ACD4(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  id v7;
  __int128 v8;
  uint64_t v9;
  id v10;
  objc_super v12;
  _OWORD v13[3];
  uint64_t v14;

  v3 = OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView;
  v4 = objc_allocWithZone((Class)type metadata accessor for PaletteContainerView());
  v5 = v1;
  *(_QWORD *)&v1[v3] = sub_10004C080(1);
  v6 = &v5[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteSpecs];
  v7 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  sub_10072FAC4(v7, (uint64_t)v13);
  v8 = v13[1];
  *(_OWORD *)v6 = v13[0];
  *((_OWORD *)v6 + 1) = v8;
  *((_OWORD *)v6 + 2) = v13[2];
  *((_QWORD *)v6 + 6) = v14;
  v5[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState] = 0x80;
  v9 = OBJC_IVAR____TtC5Music23PaletteTabBarController_accessoryView;
  *(_QWORD *)&v5[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers] = _swiftEmptyArrayStorage;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for PaletteTabBarController();
  v10 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);

  return v10;
}

id sub_10072AE20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaletteTabBarController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PaletteTabBarController()
{
  return objc_opt_self(_TtC5Music23PaletteTabBarController);
}

id sub_10072AEB8()
{
  _BYTE *v0;
  objc_class *ObjectType;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  Class isa;
  id v15;
  id v16;
  uint64_t v18;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController] = 0;
  v0[OBJC_IVAR____TtC5Music16TabBarController_isRestoringTabs] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController_observers] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController__pendingTabIdentifiers] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController_playerTabsViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController_bindings] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC5Music16TabBarController_canLoadTabRootViewControllers] = 0;
  v0[OBJC_IVAR____TtC5Music16TabBarController_forceReloadTabViewControllers] = 0;
  v19.receiver = v0;
  v19.super_class = ObjectType;
  v2 = objc_msgSendSuper2(&v19, "initWithNibName:bundle:", 0, 0);
  v3 = objc_msgSend(v2, "viewControllers");
  if (!v3)
    goto LABEL_6;

  v4 = objc_msgSend(v2, "viewControllers");
  if (v4)
  {
    v5 = v4;
    v6 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    if ((unint64_t)v7 >> 62)
    {
      v18 = v7 < 0 ? v7 : v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter(v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v8)
    {
LABEL_6:
      v9 = sub_100007E8C((uint64_t *)&unk_1011A1470);
      v10 = swift_allocObject(v9, 40, 7);
      *(_OWORD *)(v10 + 16) = xmmword_100EA7A90;
      v11 = objc_allocWithZone((Class)UIViewController);
      v12 = v2;
      v13 = objc_msgSend(v11, "init");
      *(_QWORD *)(v10 + 32) = v13;
      specialized Array._endMutation()(v13);
      sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v12, "setViewControllers:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    }
  }
  if ((Feature.UIP.isEnabled.getter(0) & 1) != 0)
  {
    v15 = objc_msgSend(v2, "_uip_sidebar");
    objc_msgSend(v15, "_setDelegate:", v2);

    v16 = objc_msgSend(v2, "_uip_sidebar");
    objc_msgSend(v16, "_setEditable:", 1);

    objc_msgSend(v2, "_uip_setPreferredSidebarMode:", 2);
  }

  return v2;
}

double sub_10072B1C0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  char *v17;
  double result;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t ObjectType;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  Class isa;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[6];

  v2 = v1;
  v41 = OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers;
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1002ED0C4(v4, a1);
  swift_bridgeObjectRelease();
  v6 = &qword_1011C6000;
  if ((v5 & 1) != 0 && v1[OBJC_IVAR____TtC5Music16TabBarController_forceReloadTabViewControllers] != 1)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    return result;
  }
  v7 = OBJC_IVAR____TtC5Music16TabBarController__pendingTabIdentifiers;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music16TabBarController__pendingTabIdentifiers] = a1;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v8 = swift_bridgeObjectRelease().n128_u64[0];
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction];
  if (v9)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR____TtC5Music30PalettePresentationInteraction_presentedViewController);
    if (Strong)
    {
      v11 = (void *)Strong;
      v12 = type metadata accessor for NowPlayingViewController(0);
      v13 = (void *)swift_dynamicCastClass(v11, v12);
      if (v13)
      {
        v14 = objc_msgSend(v13, "transitionCoordinator");

        if (v14)
        {
          v15 = swift_allocObject(&unk_1010D9650, 32, 7);
          *(_QWORD *)(v15 + 16) = v2;
          *(_QWORD *)(v15 + 24) = a1;
          aBlock[4] = sub_10072FA50;
          aBlock[5] = v15;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1005CE710;
          aBlock[3] = &unk_1010D9668;
          v16 = _Block_copy(aBlock);
          v17 = v2;
          objc_msgSend(v14, "animateAlongsideTransition:completion:", 0, v16, swift_release().n128_f64[0]);
          _Block_release(v16);
          *(_QWORD *)&result = swift_unknownObjectRelease(v14).n128_u64[0];
          return result;
        }
      }
      else
      {

      }
    }
  }
  v19 = objc_msgSend(v2, "viewControllers", v8);
  if (v19)
  {
    v20 = v19;
    v21 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  }
  aBlock[0] = _swiftEmptyArrayStorage;
  v40 = *(_QWORD *)(a1 + 16);
  if (v40)
  {
    v36 = v7;
    v37 = OBJC_IVAR____TtC5Music16TabBarController_canLoadTabRootViewControllers;
    v38 = a1 + 32;
    swift_bridgeObjectRetain();
    v22 = 0;
    v39 = a1;
    do
    {
      if (v22 >= *(_QWORD *)(a1 + 16))
      {
        __break(1u);
        JUMPOUT(0x10072B880);
      }
      v23 = *(_BYTE *)(v38 + v22);
      v24 = *(_QWORD *)&v2[v41];
      if (*(_QWORD *)(v24 + 16))
      {
        swift_bridgeObjectRetain();
        __asm { BR              X9 }
      }
      if (v2[v37] == 1)
      {
        sub_1006DBD40(*(_BYTE *)(v38 + v22));
        v26 = v25;
        ObjectType = swift_getObjectType();
        if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for MusicStackAuthorityNavigationControllerDelegate))
        {
          v28 = v26;
        }
        else
        {
          v28 = 0;
        }
        if (v28)
        {
          v26 = v26;
          sub_100915F08(v23);
        }
        else
        {
          objc_allocWithZone((Class)type metadata accessor for TabNavigationController());
          v28 = sub_1009161CC(v23, v2);
        }

      }
      else
      {
        v28 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "init");
      }
      v29 = v28;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v31 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v30 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v31 >= v30 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
      ++v22;
      v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
      specialized Array._endMutation()(v32);

      a1 = v39;
    }
    while (v22 != v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v36;
    v6 = &qword_1011C6000;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v2[v41] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setViewControllers:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v2[v6[66]] = 0;
  if (*(_QWORD *)&v2[v7])
  {
    v34 = swift_bridgeObjectRetain();
    v35 = sub_1002ED0C4(v34, a1);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    if ((v35 & 1) == 0)
      return result;
    *(_QWORD *)&v2[v7] = 0;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_10072B8B0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[6];

  v5 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v6 = swift_allocObject(&unk_1010D96A0, 32, 7);
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v9[4] = sub_10072FA88;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1001DBD98;
  v9[3] = &unk_1010D96B8;
  v7 = _Block_copy(v9);
  v8 = a2;
  swift_bridgeObjectRetain();
  objc_msgSend(v5, "_performBlockAfterCATransactionCommits:", v7, swift_release().n128_f64[0]);
  _Block_release(v7);

}

void sub_10072B9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC5Music16TabBarController__pendingTabIdentifiers))
  {
    swift_bridgeObjectRetain();
    v3 = swift_bridgeObjectRetain();
    v4 = sub_1002ED0C4(v3, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
    {
      v5 = swift_bridgeObjectRetain();
      sub_10072B1C0(v5);
    }
  }
}

void sub_10072BA14(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  double v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(unsigned __int8 *, _QWORD);
  _QWORD *v31;
  unsigned __int8 v32[32];

  if (a1 != 6)
  {
    v2 = v1;
    v4 = OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers;
    v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers];
    swift_bridgeObjectRetain();
    Array.subscript.getter((uint64_t)objc_msgSend(v2, "selectedIndex"), v5, (uint64_t)&type metadata for TabIdentifier, (uint64_t)v32);
    swift_bridgeObjectRelease();
    if (v32[0] == 6 || (sub_10072DEC0(a1), (v6 & 1) == 0))
    {
      v7 = *(_QWORD *)&v2[v4];
      swift_bridgeObjectRetain();
      v8 = sub_1008AB1D4(a1, v7);
      v10 = v9;
      *(_QWORD *)&v11 = swift_bridgeObjectRelease().n128_u64[0];
      if ((v10 & 1) == 0)
      {
        v12 = objc_msgSend(v2, "viewControllers", v11);
        if (v12)
        {
          v13 = v12;
          v14 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
          v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

          Array.subscript.getter(v8, v15, v14, (uint64_t)v32);
          *(_QWORD *)&v16 = swift_bridgeObjectRelease().n128_u64[0];
          v17 = *(void **)v32;
          if (*(_QWORD *)v32)
          {
            objc_msgSend(v2, "setSelectedViewController:", *(_QWORD *)v32, v16);
            v18 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
            sub_10072BC34(a1);

            v19 = objc_msgSend(v2, "view");
            if (v19)
            {
              v20 = v19;
              v21 = UIView.noticePresenter.getter();

              if (v21)
              {
                sub_100728D24();
                v23 = v22;
                v25 = v24;
                v27 = v26;
                v29 = v28;
                v30 = (void (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v21 + 248))(v32);
                v31[3] = v23;
                v31[4] = v25;
                v31[5] = v27;
                v31[6] = v29;
                v30(v32, 0);

                swift_release();
              }
              else
              {

              }
            }
            else
            {
              __break(1u);
            }
          }
        }
      }
    }
  }
}

uint64_t sub_10072BC34(char a1)
{
  unint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;

  if (a1 != 6)
    __asm { BR              X12 }
  v6 = 0u;
  v7 = 0u;
  v4 = 0xD000000000000019;
  v5 = 0x8000000100E43A60;
  v2 = sub_100055B68();
  NSUserDefaults.subscript.setter((uint64_t)&v6, (uint64_t)&v4, (uint64_t)&type metadata for String, v2);
  result = Feature.UIP.isEnabled.getter(0);
  if ((result & 1) != 0)
  {
    if (a1 != 6)
      __asm { BR              X10 }
    v6 = 0u;
    v7 = 0u;
    v4 = 0xD000000000000020;
    v5 = 0x8000000100E42CA0;
    return NSUserDefaults.subscript.setter((uint64_t)&v6, (uint64_t)&v4, (uint64_t)&type metadata for String, v2);
  }
  return result;
}

void sub_10072BEA8()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char v39[72];
  char v40[72];
  objc_super v41;

  v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v41, "viewDidLoad");
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (v3 != (id)6)
  {
    v4 = objc_msgSend(v1, "view");
    if (!v4)
      goto LABEL_9;
    v5 = v4;
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v5, "setBackgroundColor:", v6);

  }
  v7 = objc_msgSend(v1, "tabBar");
  v8 = objc_msgSend(v1, "traitCollection");
  v9 = objc_msgSend(v8, "horizontalSizeClass");

  objc_msgSend(v7, "setTintAdjustmentMode:", v9 != (id)2);
  v10 = objc_msgSend(v1, "tabBar");
  v11 = objc_msgSend(v1, "tabBar");
  v12 = objc_msgSend(v11, "standardAppearance");

  objc_msgSend(v10, "setScrollEdgeAppearance:", v12);
  v13 = objc_msgSend(v1, "tabBar");
  objc_msgSend(v13, "setSpringLoaded:", 1);

  v14 = *(void **)&v1[OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController];
  if (!v14)
  {
LABEL_7:
    v23 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v24 = swift_allocObject(v23, 48, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100EA7DB0;
    v25 = sub_100007E8C(&qword_1011A23A8);
    inited = swift_initStackObject(v25, v40);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    v27 = (id)*ApplicationCapabilities.NotificationNames.supportedTabsDidChange.unsafeMutableAddressor();
    ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
    UIScreen.Dimensions.size.getter(v27);
    *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
    *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(inited + 32) = v28;
    *(_QWORD *)(inited + 40) = v29;
    v30 = swift_allocObject(&unk_1010D96F0, 24, 7);
    swift_unknownObjectWeakInit(v30 + 16);
    v31 = type metadata accessor for Whitetail.Binding();
    swift_allocObject(v31, 48, 7);
    swift_retain();
    *(_QWORD *)(v24 + 32) = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_10072FAB4, v30);
    v32 = swift_initStackObject(v25, v39);
    *(_OWORD *)(v32 + 16) = xmmword_100EA7AA0;
    v33 = (void *)*ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor();
    UIScreen.Dimensions.size.getter(v33);
    *(_QWORD *)(v32 + 56) = &type metadata for NotificationTrigger;
    *(_QWORD *)(v32 + 64) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(v32 + 32) = v34;
    *(_QWORD *)(v32 + 40) = v35;
    v36 = swift_allocObject(&unk_1010D96F0, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16);
    swift_allocObject(v31, 48, 7);
    v37 = v33;
    swift_retain();
    v38 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v32, 0, (uint64_t)sub_10072FABC, v36);
    *(_QWORD *)(v24 + 40) = v38;
    specialized Array._endMutation()(v38);
    *(_QWORD *)&v1[OBJC_IVAR____TtC5Music16TabBarController_bindings] = v24;
    swift_bridgeObjectRelease();
    return;
  }
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView];
  v16 = v14;
  v17 = objc_msgSend(v16, "view");
  v18 = *(void **)(v15 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView) = v17;
  v19 = v17;
  sub_10004C4AC(v18);

  v20 = objc_msgSend(v16, "view");
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, "layer");

    objc_msgSend(v22, "setAllowsGroupBlending:", 0);
    goto LABEL_7;
  }
  __break(1u);
LABEL_9:
  __break(1u);
}

void sub_10072C324(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[15];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, &v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    static ApplicationCapabilities.shared.getter((uint64_t)v6);
    v4 = v6[12];
    swift_bridgeObjectRetain();
    sub_100065184(v6);
    sub_10072B1C0(v4);

  }
}

void sub_10072C394(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC5Music16TabBarController_forceReloadTabViewControllers) = 1;
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music16TabBarController__pendingTabIdentifiers);
    if (v4)
    {
      v5 = v4;
    }
    else
    {
      v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers];
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_10072B1C0(v5);

  }
}

double sub_10072C460(char a1)
{
  char *v1;
  double result;
  char v4;
  uint64_t v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, "viewWillAppear:", a1 & 1);
  v4 = v1[OBJC_IVAR____TtC5Music16TabBarController_canLoadTabRootViewControllers];
  v1[OBJC_IVAR____TtC5Music16TabBarController_canLoadTabRootViewControllers] = 1;
  if ((v4 & 1) == 0)
  {
    v1[OBJC_IVAR____TtC5Music16TabBarController_forceReloadTabViewControllers] = 1;
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC5Music16TabBarController__pendingTabIdentifiers])
    {
      v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music16TabBarController__pendingTabIdentifiers];
    }
    else
    {
      v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers];
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    return sub_10072B1C0(v5);
  }
  return result;
}

void sub_10072C5AC()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  char *v9;
  void *v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  NSString v21;
  double v22;
  id v23;
  id v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, _QWORD);
  _QWORD *v36;
  _BYTE v37[32];
  objc_super v38;

  v1 = v0;
  v38.receiver = v0;
  v38.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v38, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "selectedViewController");
  if (v2)
  {
    v3 = v2;
    v4 = type metadata accessor for NavigationController();
    v5 = swift_dynamicCastClass(v3, v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = sub_1008612D0();
      v8 = objc_msgSend(v7, "superview");

      if (v8)
      {
        v9 = sub_1008612D0();
        objc_msgSend(v8, "bringSubviewToFront:", v9);

      }
      objc_msgSend(v6, "_layoutTopViewController");
    }

  }
  v10 = *(void **)&v1[OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController];
  if (v10)
  {
    v11 = v10;
    v12 = sub_10072D9D8((uint64_t)objc_msgSend(v1, "selectedIndex"));
    v13 = v12;
    if (v12)
    {
      v14 = objc_msgSend(v12, "navigationBar");

      v15 = objc_msgSend(v14, "_backdropViewLayerGroupName");
      if (v15)
      {
        v13 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v17 = v16;

LABEL_13:
        v18 = &v11[OBJC_IVAR____TtC5Music26BottomPlayerViewController_backdropLayerGroupName];
        *(_QWORD *)v18 = v13;
        *((_QWORD *)v18 + 1) = v17;
        swift_bridgeObjectRelease();
        v19 = *(void **)&v11[OBJC_IVAR____TtC5Music26BottomPlayerViewController_containerView];
        if (*((_QWORD *)v18 + 1))
        {
          v20 = v19;
          swift_bridgeObjectRetain();
          v21 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v22 = swift_bridgeObjectRelease().n128_u64[0];
        }
        else
        {
          v23 = v19;
          v21 = 0;
        }
        objc_msgSend(v19, "_setGroupName:", v21, v22);

        goto LABEL_17;
      }
      v13 = 0;
    }
    v17 = 0;
    goto LABEL_13;
  }
LABEL_17:
  v24 = objc_msgSend(v1, "view");
  if (v24)
  {
    v25 = v24;
    v26 = UIView.noticePresenter.getter();

    if (v26)
    {
      sub_100728D24();
      v28 = v27;
      v30 = v29;
      v32 = v31;
      v34 = v33;
      v35 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v26 + 248))(v37);
      v36[3] = v28;
      v36[4] = v30;
      v36[5] = v32;
      v36[6] = v34;
      v35(v37, 0);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10072C87C(uint64_t a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  objc_super v9;

  v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  v4 = *(void **)&v2[OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction];
  if (v4)
  {
    v5 = v4;
    sub_1008EFE18();

  }
  v6 = objc_msgSend(v2, "tabBar");
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(v7, "horizontalSizeClass");

  objc_msgSend(v6, "setTintAdjustmentMode:", v8 != (id)2);
}

void sub_10072C9AC(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t Strong;
  char *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  unint64_t v14;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  char *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  void (*v28)(int, id);
  uint64_t v29;
  id v30;
  _BYTE v31[24];
  __int128 aBlock;
  __int128 v33;
  void (*v34)(int, id);
  uint64_t v35;

  v2 = v1;
  if (a1)
  {
    v4 = &a1[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_transitioningDelegate];
    Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_transitioningDelegate]);
    v6 = a1;
    if (Strong)
    {
      swift_unknownObjectRelease(Strong);
      if (Strong == v2)
      {
        *((_QWORD *)v4 + 1) = 0;
        swift_unknownObjectWeakAssign(v4, 0);
      }
    }
    v7 = &v6[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_delegate];
    v8 = swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_delegate]);
    if (v8)
    {
      v10 = v8;
      v9 = swift_unknownObjectRelease(v8).n128_u64[0];
      if (v10 == v2)
      {
        *((_QWORD *)v7 + 1) = 0;
        v9 = swift_unknownObjectWeakAssign(v7, 0).n128_u64[0];
      }
    }
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView), "removeInteraction:", v6, *(double *)&v9);

  }
  v11 = *(char **)(v2 + OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction);
  if (v11)
  {
    v12 = &v11[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_transitioningDelegate];
    *((_QWORD *)v12 + 1) = &off_1010D9470;
    swift_unknownObjectWeakAssign(v12, v2);
    v13 = &v11[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_delegate];
    *((_QWORD *)v13 + 1) = &off_1010D9498;
    swift_unknownObjectWeakAssign(v13, v2);
    LOBYTE(aBlock) = 2;
    v14 = sub_10004D63C();
    v15 = v11;
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v14) & 1) != 0)
    {
      v16 = *(void **)(v2 + OBJC_IVAR____TtC5Music16TabBarController_playerTabsViewController);
      if (!v16)
        goto LABEL_17;
      v17 = objc_msgSend(v16, "view");
      if (v17)
        goto LABEL_16;
      __break(1u);
    }
    v18 = *(void **)(v2 + OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController);
    if (!v18)
      goto LABEL_17;
    v17 = objc_msgSend(v18, "view");
    if (!v17)
    {
      __break(1u);
      return;
    }
LABEL_16:
    objc_msgSend(v17, "addInteraction:", v15);

LABEL_17:
    v19 = *(void **)(v2 + OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController);
    if (v19)
    {
      v20 = swift_allocObject(&unk_1010D9538, 24, 7);
      *(_QWORD *)(v20 + 16) = v15;
      v21 = objc_allocWithZone((Class)UISpringLoadedInteraction);
      v34 = sub_10035C2E4;
      v35 = v20;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v33 = sub_10035C2EC;
      *((_QWORD *)&v33 + 1) = &unk_1010D9550;
      v22 = _Block_copy(&aBlock);
      v23 = v15;
      v24 = v19;
      v25 = objc_msgSend(v21, "initWithInteractionBehavior:interactionEffect:activationHandler:", 0, v24, v22);
      _Block_release(v22);
      swift_release();
      sub_100263374(v25);

    }
    LOBYTE(aBlock) = 2;
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v14) & 1) != 0)
    {
      v26 = *(void **)(v2 + OBJC_IVAR____TtC5Music16TabBarController_playerTabsViewController);
      if (!v26)
      {
        v34 = 0;
        aBlock = 0u;
        v33 = 0u;
        goto LABEL_24;
      }
      v27 = type metadata accessor for BottomPlayerTabViewController();
      v28 = (void (*)(int, id))&off_1010B82E0;
    }
    else
    {
      v26 = *(void **)(v2 + OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView);
      v27 = type metadata accessor for PaletteContainerView();
      v28 = (void (*)(int, id))&off_1010AEA30;
    }
    *((_QWORD *)&v33 + 1) = v27;
    v34 = v28;
    *(_QWORD *)&aBlock = v26;
LABEL_24:
    v29 = (uint64_t)&v15[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_viewProvider];
    swift_beginAccess(&v15[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_viewProvider], v31, 33, 0);
    v30 = v26;
    sub_10072DE78((uint64_t)&aBlock, v29);
    swift_endAccess(v31);

  }
}

void sub_10072CCFC(void *a1)
{
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  _QWORD aBlock[6];

  if (a1)
  {
    v2 = a1;

    v3 = *(void **)&v1[OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction];
    if (v3)
    {
      v4 = *(void **)&v1[OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController];
      if (v4)
      {
        v5 = v3;
        v6 = objc_msgSend(v4, "view");
        if (!v6)
        {
LABEL_16:
          __break(1u);
          return;
        }
        v7 = v6;
        v8 = v5;
        objc_msgSend(v7, "removeInteraction:", v8);

      }
    }

  }
  v9 = *(void **)&v1[OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController];
  if (!v9)
    return;
  v21 = v9;
  sub_10072E3AC(v21, v1);
  v10 = objc_msgSend(v21, "view");
  if (!v10)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v11 = v10;
  objc_msgSend(v10, "setDirectionalLayoutMargins:", *(double *)&v1[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteSpecs + 24], *(double *)&v1[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteSpecs + 32], *(double *)&v1[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteSpecs + 40], *(double *)&v1[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteSpecs + 48]);

  v12 = *(void **)&v1[OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction];
  if (!v12)
  {

    return;
  }
  v13 = v12;
  v14 = objc_msgSend(v21, "view");
  if (!v14)
    goto LABEL_15;
  v15 = v14;
  objc_msgSend(v14, "addInteraction:", v13);

  v16 = swift_allocObject(&unk_1010D9588, 24, 7);
  *(_QWORD *)(v16 + 16) = v13;
  v17 = objc_allocWithZone((Class)UISpringLoadedInteraction);
  aBlock[4] = sub_100360E30;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10035C2EC;
  aBlock[3] = &unk_1010D95A0;
  v18 = _Block_copy(aBlock);
  v19 = v13;
  v20 = objc_msgSend(v17, "initWithInteractionBehavior:interactionEffect:activationHandler:", 0, v21, v18);
  _Block_release(v18);
  swift_release();
  sub_100263374(v20);

}

double sub_10072CF44(void (*a1)(void *), uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  double result;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;

  v5 = OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction];
  if (v6)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC5Music30PalettePresentationInteraction_presentedViewController);
    if (Strong)
    {
      v16 = (id)Strong;
      v8 = type metadata accessor for NowPlayingViewController(0);
      v9 = (void *)swift_dynamicCastClass(v16, v8);
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(v9, "presentingViewController");

        if (v11)
        {
          if (a1)
          {
            v16 = v16;
            a1(v10);

          }
          return result;
        }
      }

    }
  }
  objc_msgSend(v2, "loadViewIfNeeded");
  v13 = *(void **)&v2[v5];
  if (v13)
  {
    v14 = swift_allocObject(&unk_1010D9628, 32, 7);
    *(_QWORD *)(v14 + 16) = a1;
    *(_QWORD *)(v14 + 24) = a2;
    v15 = v13;
    sub_100048AAC((uint64_t)a1, a2);
    sub_1008EFCAC((void (*)(id))sub_100360B0C, v14);

    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_10072D0AC(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  Swift::String v19;
  unint64_t v20;
  unint64_t v21;
  Class isa;
  _QWORD v24[2];
  objc_super v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  unsigned __int8 v29;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = sub_100007E8C(&qword_1011BC170);
  __chkstk_darwin(v6);
  v8 = (char *)&v24[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v10 = sub_10072DDB8();
  if (!v11)
  {
    v26._countAndFlagsBits = 0xD000000000000019;
    v26._object = (void *)0x8000000100E43A60;
    v20 = sub_100055B68();
    NSUserDefaults.subscript.getter((uint64_t)&v26, (uint64_t)&type metadata for String, v20, (uint64_t)&v27);
    if (v28)
    {
      if ((swift_dynamicCast(&v26, &v27, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v19 = v26;
        goto LABEL_7;
      }
    }
    else
    {
      sub_10004FF60((uint64_t)&v27, &qword_10119DCC0);
    }

    goto LABEL_12;
  }
  v27._countAndFlagsBits = v10;
  v27._object = v11;
  v26._countAndFlagsBits = v10;
  v26._object = v11;
  v24[0] = 0xD00000000000001BLL;
  v24[1] = 0x8000000100E3BC20;
  v12 = type metadata accessor for Locale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  v13 = sub_100055B68();
  swift_bridgeObjectRetain();
  v14 = StringProtocol.range<A>(of:options:range:locale:)(v24, 0, 0, 0, 1, v8, &type metadata for String, &type metadata for String, v13, v13);
  v16 = v15;
  v18 = v17;
  sub_10004FF60((uint64_t)v8, &qword_1011BC170);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  String.removeSubrange(_:)(v14, v16);
  v19 = v27;
LABEL_7:
  v21 = sub_10072FA04(v19);

  if (v21 == 6)
  {
LABEL_12:
    static ApplicationCapabilities.shared.getter((uint64_t)&v27);
    sub_100065184(&v27);
    v21 = v29;
  }
  sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v25.receiver = v3;
  v25.super_class = ObjectType;
  objc_msgSendSuper2(&v25, "_setViewControllers:animated:", isa, a2 & 1);

  if (UIApp)
  {
    if ((objc_msgSend(UIApp, "launchedToTest") & 1) == 0
      && (*((_BYTE *)v3 + OBJC_IVAR____TtC5Music16TabBarController_isRestoringTabs) & 1) == 0)
    {
      sub_10072BA14(v21);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10072D408(void *a1, char a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  double v8;
  int v9;
  objc_class *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSArray v15;
  unint64_t v16;
  uint64_t v17;
  Class isa;
  char v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, __n128);
  __n128 v24;
  id v25;
  _BYTE v26[24];
  objc_super v27;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers;
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers];
  swift_bridgeObjectRetain();
  Array.subscript.getter((uint64_t)objc_msgSend(v2, "selectedIndex"), v7, (uint64_t)&type metadata for TabIdentifier, (uint64_t)v26);
  *(_QWORD *)&v8 = swift_bridgeObjectRelease().n128_u64[0];
  v9 = v26[0];
  if (a1)
  {
    v10 = a1;
    v11 = objc_msgSend(v2, "viewControllers");
    if (v11)
    {
      v12 = v11;
      v13 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

    }
    sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v15.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v16 = (unint64_t)-[objc_class indexOfObjectIdenticalTo:](v15.super.isa, "indexOfObjectIdenticalTo:", v10, swift_bridgeObjectRelease().n128_f64[0]);
    if ((v16 & 0x8000000000000000) != 0 || (v17 = *(_QWORD *)&v2[v6], v16 >= *(_QWORD *)(v17 + 16)))
    {
      v14 = 6;
      isa = v10;
    }
    else
    {
      v14 = *(unsigned __int8 *)(v17 + v16 + 32);
      isa = v15.super.isa;
      v15.super.isa = v10;
    }

  }
  else
  {
    v14 = 6;
  }
  v27.receiver = v2;
  v27.super_class = ObjectType;
  objc_msgSendSuper2(&v27, "_setSelectedViewController:performUpdates:", a1, a2 & 1, v8);
  if ((_DWORD)v14 != 6)
  {
    if (v9 == 6 || (sub_10072DEC0(v14), (v19 & 1) == 0))
    {
      v20 = (char *)sub_10076BBD4();
      if (v20)
      {
        v21 = v20;
        swift_beginAccess(v20 + 104, v26, 0, 0);
        v23 = (void (*)(uint64_t, __n128))*((_QWORD *)v21 + 13);
        v22 = *((_QWORD *)v21 + 14);
        sub_100048AAC((uint64_t)v23, v22);
        v24 = swift_release();
        if (v23)
        {
          v23(v14, v24);
          sub_10004BA30((uint64_t)v23, v22);
        }
      }
      v25 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      sub_10072BC34(v14);

    }
  }
}

void sub_10072D6A4(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v2 = OBJC_IVAR____TtC5Music16TabBarController_playerTabsViewController;
  v3 = *(void **)&v1[OBJC_IVAR____TtC5Music16TabBarController_playerTabsViewController];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music16TabBarController_playerTabsViewController] = a1;
  v8 = a1;
  if (v3)
  {
    v4 = v3;
    v5 = sub_10072E1D0((uint64_t)v4, v1);

  }
  v6 = *(void **)&v1[v2];
  if (v6)
  {
    v7 = v6;
    sub_10072E5A4(v7, v1);

    v3 = v8;
    v8 = v7;
  }

}

uint64_t sub_10072D794()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music16TabBarController_observers));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music16TabBarController__pendingTabIdentifiers));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers));

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music16TabBarController_bindings));
}

uint64_t type metadata accessor for TabBarController()
{
  return objc_opt_self(_TtC5Music16TabBarController);
}

ValueMetadata *type metadata accessor for PaletteTabBarController.PaletteSpecs()
{
  return &type metadata for PaletteTabBarController.PaletteSpecs;
}

void sub_10072D8C8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_10072D9D8((uint64_t)objc_msgSend(v0, "selectedIndex"));
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "viewControllers");
    v4 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    if ((unint64_t)v5 >> 62)
    {
      if (v5 < 0)
        v7 = v5;
      else
        v7 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease();
      if (!v8)
        goto LABEL_7;
    }
    else if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_7:
      swift_bridgeObjectRelease();

      return;
    }
    if ((v5 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
      goto LABEL_7;
    }
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v6 = *(id *)(v5 + 32);
      goto LABEL_7;
    }
    __break(1u);
  }
}

id sub_10072D9D8(uint64_t a1)
{
  void *v1;
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  result = objc_msgSend(v1, "viewControllers");
  if (result)
  {
    v4 = result;
    v5 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    Array.subscript.getter(a1, v6, v5, (uint64_t)&v13);
    swift_bridgeObjectRelease(v6);
    v7 = v13;
    if (v13)
    {
      v8 = type metadata accessor for SplitViewController(0);
      v9 = swift_dynamicCastClass(v7, v8);
      if (v9)
      {
        v10 = objc_retain(*(id *)(*(_QWORD *)(v9 + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController)
                                + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController));

        v11 = type metadata accessor for NavigationController();
        result = (id)swift_dynamicCastClass(v10, v11);
        if (result)
          return result;

      }
      else
      {
        v12 = type metadata accessor for NavigationController();
        result = (id)swift_dynamicCastClass(v7, v12);
        if (result)
          return result;

      }
    }
    return 0;
  }
  return result;
}

void sub_10072DAF0(void *a1, void *a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  char *v6;
  id v7;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController) = a1;
  v5 = a1;
  sub_10072CCFC(v4);

  v6 = *(char **)(v2 + OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction) = a2;
  v7 = a2;
  sub_10072C9AC(v6);

}

void sub_10072DB74(void *a1, void *a2)
{
  uint64_t v2;
  id v5;
  char *v6;
  id v7;

  v5 = a1;
  sub_10072D6A4(a1);
  v6 = *(char **)(v2 + OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction) = a2;
  v7 = a2;
  sub_10072C9AC(v6);

}

void sub_10072DBDC()
{
  uint64_t v0;
  void *v1;
  char *v2;
  char *v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController) = 0;
  sub_10072CCFC(v1);

  v2 = *(char **)(v0 + OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction);
  v3 = v2;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction) = 0;
  sub_10072C9AC(v2);

}

void *sub_10072DC34()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController);
  v2 = v1;
  return v1;
}

_QWORD *sub_10072DC70()
{
  char *v0;
  id v1;
  id v2;
  char *v4;
  char v5[24];

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "horizontalSizeClass");

  if (v2 != (id)1 || UIAccessibilityPrefersCrossFadeTransitions())
    return _swiftEmptyArrayStorage;
  v4 = &v0[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers], v5, 0, 0);
  return (_QWORD *)swift_bridgeObjectRetain(*(_QWORD *)v4);
}

id sub_10072DD0C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView), "setHidden:", 0);
}

unint64_t sub_10072DD2C(uint64_t a1)
{
  unint64_t result;

  result = sub_10072DD50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10072DD50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C6288;
  if (!qword_1011C6288)
  {
    v1 = type metadata accessor for TabBarController();
    result = swift_getWitnessTable(&unk_100ECD338, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6288);
  }
  return result;
}

uint64_t sub_10072DD94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10072DDB8()
{
  unint64_t v0;
  _QWORD v2[2];
  _BYTE v3[24];
  uint64_t v4;

  v2[0] = 0xD000000000000020;
  v2[1] = 0x8000000100E42CA0;
  v0 = sub_100055B68();
  NSUserDefaults.subscript.getter((uint64_t)v2, (uint64_t)&type metadata for String, v0, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast(v2, v3, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      return v2[0];
    else
      return 0;
  }
  else
  {
    sub_10004FF60((uint64_t)v3, &qword_10119DCC0);
    return 0;
  }
}

uint64_t sub_10072DE60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10072DE70(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10072DE78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011B9D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10072DEC0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10072DF08(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10072DF8C + 4 * byte_100ECD288[a2]))(0x7972617262696CLL);
}

uint64_t sub_10072DF8C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7972617262696CLL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x7972617262696CLL, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_10072E060(unint64_t a1)
{
  return sub_1004317B8(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_10072E074(unint64_t a1)
{
  return sub_1004319EC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_10072E08C(unint64_t a1)
{
  return sub_100431A14(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_10072E0A0(_QWORD *a1)
{
  return sub_100431C34(0, a1[2], 0, a1);
}

uint64_t sub_10072E0B4(unint64_t a1)
{
  return sub_100431A00(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_10072E0C8(_QWORD *a1)
{
  return sub_1004320AC(0, a1[2], 0, a1);
}

uint64_t sub_10072E0DC(unint64_t a1)
{
  return sub_100432980(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_10072E0F0(unint64_t a1)
{
  return sub_100432C08(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_10072E104(_QWORD *a1)
{
  return sub_100432F98(0, a1[2], 0, a1);
}

uint64_t sub_10072E118(unint64_t a1)
{
  return sub_100432FC0(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_10072E12C(_QWORD *a1)
{
  return sub_100433120(0, a1[2], 0, a1);
}

_QWORD *sub_10072E140(_QWORD *a1)
{
  return sub_1004334FC(0, a1[2], 0, a1);
}

uint64_t sub_10072E154(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

uint64_t sub_10072E1BC(unint64_t a1)
{
  return sub_10043267C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

id sub_10072E1D0(uint64_t a1, char *a2)
{
  char *v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *i;
  void *v8;
  id result;
  uint64_t ObjectType;
  char *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[3];
  char v17[24];

  v4 = &a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers];
  swift_beginAccess(&a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers], v17, 0, 0);
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (!v5)
    return 0;
  v6 = 0;
  for (i = (_QWORD *)(*(_QWORD *)v4 + 32); *i != a1; i += 2)
  {
    if (v5 == ++v6)
      return 0;
  }
  swift_beginAccess(v4, v16, 33, 0);
  v8 = (void *)sub_100728A68(v6, (uint64_t (*)(uint64_t))sub_10072E104);
  swift_endAccess(v16);
  ObjectType = swift_getObjectType();
  v11 = (char *)objc_msgSend(v8, "parentViewController");
  if (!v11)
    return v8;
  v12 = v11;

  if (v12 != a2)
    return v8;
  objc_msgSend(v8, "willMoveToParentViewController:", 0);
  if (!objc_msgSend(v8, "isViewLoaded"))
  {
LABEL_12:
    if ((objc_msgSend(a2, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
    {
      v16[0] = v8;
      sub_100917EC8(a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState], 0x80u, ObjectType, (uint64_t)&off_1010E2C88);
    }
    objc_msgSend(v8, "removeFromParentViewController");
    return v8;
  }
  result = objc_msgSend(v8, "view");
  if (result)
  {
    v13 = result;
    objc_msgSend(result, "removeFromSuperview");

    v14 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView];
    v15 = *(void **)(v14 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView);
    *(_QWORD *)(v14 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView) = 0;
    sub_10004C4AC(v15);

    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_10072E3AC(void *a1, char *a2)
{
  char *v4;
  uint64_t v5;
  void **v6;
  _QWORD *v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t ObjectType;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  _QWORD v18[3];
  char v19[24];

  v4 = &a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers];
  swift_beginAccess(&a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers], v19, 0, 0);
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v5)
  {
    v6 = (void **)(*(_QWORD *)v4 + 32);
    while (*v6 != a1)
    {
      v6 += 2;
      if (!--v5)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_beginAccess(v4, v18, 33, 0);
    v7 = *(_QWORD **)v4;
    v8 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
    *(_QWORD *)v4 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_100432F98(0, v7[2] + 1, 1, v7);
      *(_QWORD *)v4 = v7;
    }
    v11 = v7[2];
    v10 = v7[3];
    if (v11 >= v10 >> 1)
    {
      v7 = sub_100432F98((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
      *(_QWORD *)v4 = v7;
    }
    v7[2] = v11 + 1;
    v12 = &v7[2 * v11];
    v12[4] = v8;
    v12[5] = &off_1010B8B58;
    swift_endAccess(v18);
    ObjectType = swift_getObjectType();
    objc_msgSend(a2, "addChildViewController:", v8);
    if ((objc_msgSend(a2, "isViewLoaded") & 1) != 0)
    {
      v14 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView];
      v15 = objc_msgSend(v8, "view");
      v16 = *(void **)(v14 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView);
      *(_QWORD *)(v14 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView) = v15;
      v17 = v15;
      sub_10004C4AC(v16);

    }
    if ((objc_msgSend(a2, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
    {
      v18[0] = v8;
      sub_100917EC8(128, a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState], ObjectType, (uint64_t)&off_1010E2C88);
    }
    objc_msgSend(v8, "didMoveToParentViewController:", a2);
  }
}

void sub_10072E5A4(void *a1, char *a2)
{
  char *v4;
  uint64_t v5;
  void **v6;
  _QWORD *v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t ObjectType;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  _QWORD v18[3];
  char v19[24];

  v4 = &a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers];
  swift_beginAccess(&a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteViewControllers], v19, 0, 0);
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v5)
  {
    v6 = (void **)(*(_QWORD *)v4 + 32);
    while (*v6 != a1)
    {
      v6 += 2;
      if (!--v5)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_beginAccess(v4, v18, 33, 0);
    v7 = *(_QWORD **)v4;
    v8 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
    *(_QWORD *)v4 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_100432F98(0, v7[2] + 1, 1, v7);
      *(_QWORD *)v4 = v7;
    }
    v11 = v7[2];
    v10 = v7[3];
    if (v11 >= v10 >> 1)
    {
      v7 = sub_100432F98((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
      *(_QWORD *)v4 = v7;
    }
    v7[2] = v11 + 1;
    v12 = &v7[2 * v11];
    v12[4] = v8;
    v12[5] = &off_1010B8318;
    swift_endAccess(v18);
    ObjectType = swift_getObjectType();
    objc_msgSend(a2, "addChildViewController:", v8);
    if ((objc_msgSend(a2, "isViewLoaded") & 1) != 0)
    {
      v14 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteView];
      v15 = objc_msgSend(v8, "view");
      v16 = *(void **)(v14 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView);
      *(_QWORD *)(v14 + OBJC_IVAR____TtC5Music20PaletteContainerView_contentView) = v15;
      v17 = v15;
      sub_10004C4AC(v16);

    }
    if ((objc_msgSend(a2, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
    {
      v18[0] = v8;
      sub_100917EC8(128, a2[OBJC_IVAR____TtC5Music23PaletteTabBarController_appearanceState], ObjectType, (uint64_t)&off_1010E2C88);
    }
    objc_msgSend(v8, "didMoveToParentViewController:", a2);
  }
}

double sub_10072E79C(char *a1)
{
  char *v2;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  sub_10072FAC4(objc_msgSend(a1, "traitCollection"), (uint64_t)v5);
  v2 = &a1[OBJC_IVAR____TtC5Music23PaletteTabBarController_paletteSpecs];
  v3 = v5[1];
  *(_OWORD *)v2 = v5[0];
  *((_OWORD *)v2 + 1) = v3;
  result = *(double *)&v6;
  *((_OWORD *)v2 + 2) = v6;
  *((_QWORD *)v2 + 6) = v7;
  return result;
}

BOOL sub_10072E804(double *a1, double *a2)
{
  BOOL v2;
  _BOOL8 result;

  result = 0;
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3])
  {
    v2 = a1[4] == a2[4] && a1[5] == a2[5];
    if (v2 && a1[6] == a2[6])
      return 1;
  }
  return result;
}

void sub_10072E874(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  unsigned int v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
  {
LABEL_16:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v14);
    if (v4)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(a1);
    return;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v4)
    goto LABEL_20;
LABEL_3:
  v5 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1);
    else
      v6 = *(id *)(a1 + 8 * v5);
    v7 = v6;
    v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    v9 = objc_msgSend(a2, "selectedViewController");
    if (v9)
      break;
LABEL_4:

    ++v5;
    if (v8 == v4)
      goto LABEL_20;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, "view");

  if (v11)
  {
    v12 = objc_msgSend(v11, "superview");

    if (v12)
    {
      v13 = objc_msgSend(v12, "isDescendantOfView:", v7);

      if (v13)
        goto LABEL_20;
    }
    goto LABEL_4;
  }
  __break(1u);
}

void *sub_10072EA08(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  unsigned int v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v11))
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(a2, "tabBar");
      v10 = objc_msgSend(v9, "isDescendantOfView:", v7);

      if (v10)
      {
        swift_bridgeObjectRelease(a1);
        return v7;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_17;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return 0;
}

void sub_10072EB48()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  int v8;
  id v9;
  char *v10;
  unint64_t v11;
  void *v12;
  id v13;
  char *v14;
  void *v15;
  char *v16;
  char *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  char *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  char *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  char *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  char *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void **v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void **v88;
  id v89;
  void *v90;
  void *v91;
  uint64_t v92;
  void *v93;
  id v94;
  void **v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t);
  void *v98;
  id (*v99)();
  uint64_t v100;

  v1 = v0;
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_86;
  }
  v3 = v2;
  v4 = objc_msgSend(v2, "window");

  if (!v4)
    goto LABEL_5;
  v5 = objc_msgSend(v4, "windowScene");

  if (!v5)
  {
LABEL_6:
    v7 = 0;
    v8 = 1;
    goto LABEL_7;
  }
  v6 = objc_msgSend(v5, "activationState");

  if (v6)
  {
LABEL_5:
    v5 = 0;
    goto LABEL_6;
  }
  v18 = objc_msgSend(v1, "view");
  if (!v18)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  v19 = v18;
  objc_msgSend(v18, "bounds");
  v21 = v20;
  v23 = v22;

  v8 = 0;
  v5 = v21;
  v7 = v23;
LABEL_7:
  v9 = objc_allocWithZone((Class)type metadata accessor for NowPlayingViewController(0));
  v10 = (char *)sub_1005DA0A0((uint64_t)v5, v7, v8);
  LOBYTE(v95) = 2;
  v11 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v11) & 1) != 0)
  {
    v12 = *(void **)&v1[OBJC_IVAR____TtC5Music16TabBarController_playerTabsViewController];
    if (v12)
    {
      v13 = v12;
      sub_10024EEA0();
      if (v14)
      {
        v15 = v14;
        v16 = (char *)*(id *)&v14[OBJC_IVAR____TtC5Music16BottomPlayerCell_viewController];

        goto LABEL_16;
      }

    }
    v16 = 0;
  }
  else
  {
    v16 = *(char **)&v1[OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController];
    v17 = v16;
  }
LABEL_16:
  LOBYTE(v95) = 2;
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v11) & 1) == 0)
  {
    if (v16 && (v31 = objc_msgSend(v16, "artworkView")) != 0)
    {
      v32 = v31;
      v33 = Artwork.View.currentImage.getter();

    }
    else
    {
      v33 = 0;
    }
    v34 = *(void **)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_initialArtworkImage];
    *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_initialArtworkImage] = v33;
    v35 = v33;

    sub_1005D349C();
    v36 = *(void **)&v1[OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController];
    if (v36 && (v37 = (char *)objc_msgSend(v36, "artworkView")) != 0)
    {
      v38 = v37;
      v39 = *(_QWORD *)&v37[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData];
      swift_retain();

    }
    else
    {
      v39 = 0;
    }
    v40 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_currentMotionData];
    *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_currentMotionData] = v39;
    swift_retain();
    sub_1005D7C94(v40);
    swift_release();
    swift_release();
    if (v16)
    {
      v41 = *(_QWORD *)&v16[OBJC_IVAR____TtC5Music26BottomPlayerViewController_queueVideoArtworks];
      swift_retain();
    }
    else
    {
      v41 = 0;
    }
    v42 = OBJC_IVAR____TtC5Music24NowPlayingViewController_queueVideoArtworks;
    *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_queueVideoArtworks] = v41;
    swift_retain();
    swift_release();
    if (*(_QWORD *)&v10[v42]
      && (KeyPath = swift_getKeyPath(&unk_100ECD370),
          v44 = swift_getKeyPath(&unk_100ECD398),
          swift_retain(),
          static Published.subscript.getter(&v95, v45, KeyPath, v44),
          swift_release(),
          swift_release(),
          swift_release(),
          v95))
    {
      sub_1005D6168((uint64_t)v95);
      swift_release();
      swift_bridgeObjectRelease();
      if (!v16)
      {
LABEL_35:
        v46 = 0;
LABEL_38:
        v48 = *(void **)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_nowPlaying];
        *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_nowPlaying] = v46;
        v49 = v46;
        sub_1005D35F8(v48);
        goto LABEL_49;
      }
    }
    else
    {
      swift_release();
      if (!v16)
        goto LABEL_35;
    }
    v46 = *(void **)&v16[OBJC_IVAR____TtC5Music26BottomPlayerViewController_nowPlaying];
    v47 = v46;
    goto LABEL_38;
  }
  if (!v16)
  {

    return;
  }
  v24 = *(void **)&v16[OBJC_IVAR____TtC5Music26BottomPlayerViewController_queue];
  v25 = *(void **)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_queue];
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_queue] = v24;
  v26 = v16;
  v27 = v24;

  v28 = objc_msgSend(v26, "artworkView");
  if (v28)
  {
    v29 = v28;
    v30 = Artwork.View.currentImage.getter();

  }
  else
  {
    v30 = 0;
  }
  v50 = *(void **)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_initialArtworkImage];
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_initialArtworkImage] = v30;
  v51 = v30;

  sub_1005D349C();
  v52 = *(void **)&v1[OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController];
  if (v52 && (v53 = (char *)objc_msgSend(v52, "artworkView")) != 0)
  {
    v54 = v53;
    v55 = *(_QWORD *)&v53[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData];
    swift_retain();

  }
  else
  {
    v55 = 0;
  }
  v56 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_currentMotionData];
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_currentMotionData] = v55;
  swift_retain();
  sub_1005D7C94(v56);
  swift_release();
  swift_release();
  v57 = *(_QWORD *)&v26[OBJC_IVAR____TtC5Music26BottomPlayerViewController_queueVideoArtworks];
  v58 = OBJC_IVAR____TtC5Music24NowPlayingViewController_queueVideoArtworks;
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_queueVideoArtworks] = v57;
  swift_retain_n(v57, 2);
  swift_release();
  if (*(_QWORD *)&v10[v58]
    && (v59 = swift_getKeyPath(&unk_100ECD370),
        v60 = swift_getKeyPath(&unk_100ECD398),
        swift_retain(),
        static Published.subscript.getter(&v95, v61, v59, v60),
        swift_release(),
        swift_release(),
        swift_release(),
        v95))
  {
    sub_1005D6168((uint64_t)v95);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  v62 = *(void **)&v26[OBJC_IVAR____TtC5Music26BottomPlayerViewController_nowPlaying];
  v48 = *(void **)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_nowPlaying];
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_nowPlaying] = v62;
  v49 = v62;
  sub_1005D35F8(v48);

LABEL_49:
  v63 = *(void **)&v1[OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController];
  if (!v63)
    goto LABEL_80;
  v64 = (char *)objc_msgSend(v63, "artworkView");
  if (!v64)
    goto LABEL_80;
  v65 = v64;
  v66 = *(_QWORD *)&v64[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData];
  if (!v66)
  {

LABEL_80:
    return;
  }
  v67 = swift_getKeyPath(&unk_100ECD3B8);
  v68 = swift_getKeyPath(&unk_100ECD3E0);
  swift_retain();
  static Published.subscript.getter(&v95, v69, v67, v68);
  swift_release();
  swift_release();
  if (v97 != 255)
  {
    v70 = v95;
    v71 = (void *)v96;
    if ((v97 & 1) != 0)
    {
LABEL_64:

      goto LABEL_65;
    }
    sub_1001FFA94(v95, (void *)v96, v97);
  }
  v72 = swift_getKeyPath(&unk_100ECD3B8);
  v73 = swift_getKeyPath(&unk_100ECD3E0);
  static Published.subscript.getter(&v95, v66, v72, v73);
  swift_release();
  swift_release();
  if (v97 == 255)
    goto LABEL_66;
  v70 = v95;
  v71 = (void *)v96;
  if ((v97 & 1) != 0)
    goto LABEL_64;
  sub_1001FFA94(v95, (void *)v96, v97);
  if (v16)
  {
    v74 = (char *)objc_msgSend(v16, "artworkView");
    if (v74)
    {
      v71 = v74;
      if (!*(_QWORD *)&v74[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData])
      {
LABEL_65:

        goto LABEL_66;
      }
      v75 = swift_getKeyPath(&unk_100ECD3B8);
      v76 = swift_getKeyPath(&unk_100ECD3E0);
      swift_retain();
      static Published.subscript.getter(&v95, v77, v75, v76);
      swift_release();
      swift_release();
      if (v97 == 255)
      {

        swift_release();
      }
      else
      {
        v79 = v95;
        v78 = (void *)v96;
        if ((v97 & 1) == 0)
        {
          sub_1001FFA94(v95, (void *)v96, v97);
          swift_release();
          sub_100676770();
          sub_1006751E8();
          goto LABEL_65;
        }

        swift_release();
      }
    }
  }
LABEL_66:
  v80 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_mode] >> 62;
  if (!(_DWORD)v80)
    goto LABEL_79;
  if ((_DWORD)v80 != 1)
    goto LABEL_70;
  v81 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_controlsViewController];
  if (!v81)
  {
LABEL_87:
    __break(1u);
    return;
  }
  if (*(_BYTE *)(v81 + OBJC_IVAR___MusicNowPlayingControlsViewController_mode))
    goto LABEL_79;
LABEL_70:
  v82 = swift_getKeyPath(&unk_100ECD3B8);
  v83 = swift_getKeyPath(&unk_100ECD3E0);
  static Published.subscript.getter(&v95, v66, v82, v83);
  swift_release();
  swift_release();
  if (v97 != 255)
  {
    v84 = (void *)v96;
    if ((v97 & 1) != 0)
    {

      sub_10067714C();
      sub_100676E4C(1, 1);
      goto LABEL_79;
    }
    sub_1001FFA94(v95, (void *)v96, v97);
  }
  v85 = swift_getKeyPath(&unk_100ECD3B8);
  v86 = swift_getKeyPath(&unk_100ECD3E0);
  static Published.subscript.getter(&v95, v66, v85, v86);
  swift_release();
  swift_release();
  if (v97 == 255)
  {
LABEL_79:

    swift_release();
    goto LABEL_80;
  }
  v88 = v95;
  v87 = (void *)v96;
  if ((v97 & 1) != 0)
  {

    swift_release();
    goto LABEL_80;
  }
  sub_1001FFA94(v95, (void *)v96, v97);
  if (v16)
  {
    v89 = objc_msgSend(v16, "artworkView");
    if (v89)
    {
      v90 = v89;
      sub_1006760F4();
      sub_100676294();
      v91 = (void *)objc_opt_self(UIView);
      v92 = swift_allocObject(&unk_1010D95D8, 24, 7);
      *(_QWORD *)(v92 + 16) = v90;
      v99 = sub_1005F1418;
      v100 = v92;
      v95 = _NSConcreteStackBlock;
      v96 = 1107296256;
      v97 = sub_1001DBD98;
      v98 = &unk_1010D95F0;
      v93 = _Block_copy(&v95);
      v94 = v90;
      swift_release();
      objc_msgSend(v91, "animateWithDuration:animations:", v93, 0.2);
      _Block_release(v93);

    }
    goto LABEL_79;
  }

  swift_release();
}

uint64_t sub_10072F5BC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10072F5E8(char a1)
{
  _BYTE *v1;
  id v2;
  void *v3;
  uint64_t v4;
  double v5;
  char v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;

  v1[OBJC_IVAR____TtC5Music16TabBarController_isRestoringTabs] = 0;
  if (a1 == 6)
  {
    v2 = sub_10072D9D8((uint64_t)objc_msgSend(v1, "selectedIndex"));
    if (v2)
    {
      v3 = v2;
      v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers];
      swift_bridgeObjectRetain();
      Array.subscript.getter((uint64_t)objc_msgSend(v1, "selectedIndex"), v4, (uint64_t)&type metadata for TabIdentifier, (uint64_t)&v14);
      *(_QWORD *)&v5 = swift_bridgeObjectRelease(v4).n128_u64[0];
      v6 = v14;
      if (v14 != 6)
      {
        v7 = objc_msgSend(v3, "viewControllers", v5);
        v8 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
        v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

        if ((unint64_t)v9 >> 62)
        {
          if (v9 < 0)
            v13 = v9;
          else
            v13 = v9 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v10 = _CocoaArrayWrapper.endIndex.getter(v13);
          swift_bridgeObjectRelease(v9);
        }
        else
        {
          v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v9);
        if (!v10)
        {
          sub_1006DBD40(v6);
          v12 = v11;
          objc_msgSend(v3, "pushViewController:animated:", v11, 0);

          v3 = v12;
        }
      }

    }
  }
}

_QWORD *sub_10072F74C(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v11;
  id v12;
  void *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v3 = a1;
  v36 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_41;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v28))
  {
    v30 = v3;
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v34 = v3 + 32;
    v35 = v3 & 0xFFFFFFFFFFFFFF8;
    v7 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v7 = a2;
    v29 = v7;
    v32 = i;
    v33 = a2 & 0xC000000000000001;
    v31 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v6)
      {
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v30);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v35 + 16))
          goto LABEL_38;
        v8 = *(id *)(v34 + 8 * v5);
      }
      v9 = v8;
      if (__OFADD__(v5++, 1))
        goto LABEL_39;
      if ((unint64_t)a2 >> 62)
      {
        swift_bridgeObjectRetain();
        v11 = _CocoaArrayWrapper.endIndex.getter(v29);
        if (!v11)
          goto LABEL_18;
      }
      else
      {
        v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v11)
          goto LABEL_18;
      }
      v12 = v33 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2) : *(id *)(a2 + 32);
      v13 = v12;
      v3 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      v14 = static NSObject.== infix(_:_:)(v13, v9);

      if ((v14 & 1) == 0)
        break;

      swift_bridgeObjectRelease();
LABEL_7:
      if (v5 == i)
        return v36;
    }
    if (v11 == 1)
    {
LABEL_18:
      swift_bridgeObjectRelease();
LABEL_19:
      v3 = (uint64_t)&v36;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v16 = v36[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v9);
      specialized ContiguousArray._endMutation()(v17);
      goto LABEL_7;
    }
    if (v33)
    {
      v18 = 1;
      while (1)
      {
        v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, a2);
        v20 = v18 + 1;
        if (__OFADD__(v18, 1))
          break;
        v21 = v19;
        v22 = static NSObject.== infix(_:_:)(v19, v9);
        swift_unknownObjectRelease(v21);
        if ((v22 & 1) != 0)
          goto LABEL_31;
        ++v18;
        if (v20 == v11)
          goto LABEL_30;
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v23 = 5;
    while (1)
    {
      v24 = v23 - 3;
      if (__OFADD__(v23 - 4, 1))
        break;
      v25 = *(id *)(a2 + 8 * v23);
      v26 = static NSObject.== infix(_:_:)(v25, v9);

      if ((v26 & 1) != 0)
      {
LABEL_31:

        swift_bridgeObjectRelease();
        v6 = v31;
        i = v32;
        goto LABEL_7;
      }
      ++v23;
      if (v24 == v11)
      {
LABEL_30:
        swift_bridgeObjectRelease();
        v6 = v31;
        i = v32;
        goto LABEL_19;
      }
    }
LABEL_40:
    __break(1u);
LABEL_41:
    if (v3 < 0)
      v28 = v3;
    else
      v28 = v3 & 0xFFFFFFFFFFFFFF8;
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_10072FA04(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AB2B0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

void sub_10072FA50(uint64_t a1)
{
  uint64_t v1;

  sub_10072B8B0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10072FA5C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10072FA88()
{
  uint64_t v0;

  sub_10072B9A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10072FA90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10072FAB4()
{
  uint64_t v0;

  sub_10072C324(v0);
}

void sub_10072FABC()
{
  uint64_t v0;

  sub_10072C394(v0);
}

__n128 sub_10072FAC4@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  char *v5;
  uint64_t *v6;
  __int128 v7;
  double v8;
  __n128 result;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v4 = objc_msgSend(a1, "userInterfaceIdiom");
  v5 = (char *)objc_msgSend(a1, "horizontalSizeClass");
  if (!v4)
  {
    if ((unint64_t)(v5 - 1) >= 2)
      goto LABEL_10;
    goto LABEL_11;
  }
  if (v4 == (id)1)
  {
    if (v5 != (char *)1)
    {
      if (v5 == (char *)2)
      {
        v18 = xmmword_100EB5D70;
        __asm { FMOV            V0.2D, #10.0 }
        v16 = xmmword_100ECD420;
        v17 = _Q0;
        v8 = 24.0;
        goto LABEL_12;
      }
LABEL_10:
      v17 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
      v18 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
      v16 = 0u;
      v8 = 0.0;
      goto LABEL_12;
    }
LABEL_11:
    v18 = xmmword_100ECD400;
    __asm { FMOV            V0.2D, #8.0 }
    v16 = xmmword_100ECD410;
    v17 = _Q0;
    v8 = 6.0;
    goto LABEL_12;
  }
  if (v4 != (id)6)
    goto LABEL_10;
  v6 = HI.BottomPlayer.Ornament.overlappingHeight.unsafeMutableAddressor();
  v7 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  v17 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v18 = v7;
  *(_QWORD *)&v7 = *v6;
  v16 = v7;
  v8 = 16.0;
LABEL_12:

  *(_OWORD *)a2 = v16;
  *(double *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 24) = v17;
  result = (__n128)v18;
  *(_OWORD *)(a2 + 40) = v18;
  return result;
}

void sub_10072FC00()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController_miniPlayerPaletteInteraction] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController_bottomPlayerViewController] = 0;
  v0[OBJC_IVAR____TtC5Music16TabBarController_isRestoringTabs] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController_observers] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController__pendingTabIdentifiers] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController_playerTabsViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music16TabBarController_bindings] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC5Music16TabBarController_canLoadTabRootViewControllers] = 0;
  v0[OBJC_IVAR____TtC5Music16TabBarController_forceReloadTabViewControllers] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/TabBarController.swift", 28, 2, 320, 0);
  __break(1u);
}

void sub_10072FD0C(void *a1, void *a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  char v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (void *)objc_opt_self(MPMediaLibrary);
  v5 = objc_msgSend(v4, "deviceMediaLibrary");
  if (v5)
  {
    v6 = v5;
    sub_10072FFE8();
    v7 = a1;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) != 0)
    {
      v9 = objc_msgSend(a2, "identifiers");
      v10 = objc_msgSend(v9, "library");

      if (v10)
      {
        v11 = objc_msgSend(v10, "databaseID");
        swift_unknownObjectRelease(v10);
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;

        v15 = objc_msgSend(v4, "deviceMediaLibrary");
        if (v15)
        {
          v16 = v15;
          v17 = objc_msgSend(v15, "uniqueIdentifier");

          if (v17)
          {
            v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
            v20 = v19;

            if (v12 == v18 && v14 == v20)
            {
              swift_bridgeObjectRelease_n(v14, 2);
            }
            else
            {
              _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v18, v20, 0);
              swift_bridgeObjectRelease(v14);
              swift_bridgeObjectRelease(v20);
            }
          }
          else
          {
            swift_bridgeObjectRelease(v14);
          }
        }
        else
        {
          swift_bridgeObjectRelease(v14);
          __break(1u);
        }
      }
    }
  }
}

uint64_t sub_10072FF20(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v4 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 528))();
  if (v4)
  {

    return 1;
  }
  else if ((*(_BYTE *)(a2 + 8) & 1) != 0)
  {
    return 1;
  }
  else
  {
    ObjectType = swift_getObjectType();
    v7 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for LibraryAddable);
    if (v7)
      v8 = v7;
    else
      v8 = 0;
    if (v7)
      v9 = a1;
    else
      v9 = 0;
    if (v9)
    {
      v10 = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v10, v8) & 1;
    }
    else
    {
      return 0;
    }
  }
}

unint64_t sub_10072FFE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A9920;
  if (!qword_1011A9920)
  {
    v1 = objc_opt_self(MPMediaLibrary);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011A9920);
  }
  return result;
}

id sub_100730048()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  objc_class *v19;
  uint64_t (*v20)(char *, char *, uint64_t);
  id result;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  _QWORD *v27;
  _QWORD *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  objc_class *v39;
  id v40;
  objc_class *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  void (*v50)(char *, uint64_t);
  objc_class *v51;
  objc_class *v52;
  uint64_t v53;
  uint64_t v54;
  objc_class *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  Class isa;
  id v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[4];
  _QWORD v79[4];
  objc_super v80;

  v1 = type metadata accessor for Playlist.EditableComponents(0);
  v73 = *(_QWORD *)(v1 - 8);
  v74 = v1;
  __chkstk_darwin(v1);
  v69 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v69 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v69 - v17;
  v19 = (objc_class *)type metadata accessor for PlaylistEditingViewController(0);
  v80.receiver = v0;
  v80.super_class = v19;
  objc_msgSendSuper2(&v80, "viewDidLoad");
  v20 = *(uint64_t (**)(char *, char *, uint64_t))(v10 + 16);
  v75 = v18;
  v76 = v9;
  v71 = &v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist];
  v72 = v20;
  ((void (*)(char *))v20)(v18);
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v22 = result;
    v70 = v5;
    v23 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v22, "setBackgroundColor:", v23);

    v24 = objc_msgSend(v0, "navigationController");
    if (v24)
    {
      v25 = v24;
      v26 = objc_msgSend(v24, "presentationController");

      if (v26)
      {
        objc_msgSend(v26, "setDelegate:", v0);

      }
    }
    v78[3] = sub_100007E8C(&qword_1011C63A0);
    v27 = sub_100049F68(v78);
    sub_1007389CC((uint64_t)v27);
    v79[3] = sub_100007E8C(qword_1011C63B0);
    v28 = sub_100049F68(v79);
    sub_100738D04((uint64_t)v28);
    swift_arrayDestroy(v78, 2, (char *)&type metadata for Any + 8);
    static TaskPriority.userInitiated.getter(v29);
    v30 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v8, 0, 1, v30);
    v31 = v76;
    v32 = v72;
    v72(v15, v75, v76);
    v33 = *(unsigned __int8 *)(v10 + 80);
    v34 = (v33 + 32) & ~v33;
    v35 = (v11 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = swift_allocObject(&unk_1010D9C28, v35 + 8, v33 | 7);
    *(_QWORD *)(v36 + 16) = 0;
    *(_QWORD *)(v36 + 24) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v36 + v34, v15, v31);
    *(_QWORD *)(v36 + v35) = v0;
    v37 = v0;
    sub_1000E8908((uint64_t)v8, (uint64_t)&unk_1011C67F0, v36);
    swift_release();
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A13B0);
    v38 = objc_msgSend(v37, "navigationItem");
    v39 = sub_1007342F4();
    objc_msgSend(v38, "setLeftBarButtonItem:", v39);

    v40 = objc_msgSend(v37, "navigationItem");
    v41 = sub_10073430C();
    objc_msgSend(v40, "setRightBarButtonItem:", v41);

    v42 = v32(v12, v71, v31);
    v43 = (uint64_t)v70;
    Playlist.editableComponents.getter(v42);
    v44 = *(void (**)(char *, uint64_t))(v10 + 8);
    v44(v12, v31);
    v45 = v73;
    v46 = v74;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v43, 1, v74) == 1)
    {
      sub_10004FF60(v43, (uint64_t *)&unk_1011C65F0);
LABEL_14:
      v66 = sub_10073F574();
      return (id)((uint64_t (*)(char *, uint64_t, double))v44)(v75, v76, v66);
    }
    v47 = v69;
    static Playlist.EditableComponents.tracklist.getter();
    v48 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
    v49 = dispatch thunk of SetAlgebra.isSuperset(of:)(v47, v46, v48);
    v50 = *(void (**)(char *, uint64_t))(v45 + 8);
    v50(v47, v46);
    v50((char *)v43, v46);
    if ((v49 & 1) == 0)
      goto LABEL_14;
    v51 = sub_100734628();
    -[objc_class setEnabled:](v51, "setEnabled:", 0);

    v52 = sub_100734B3C();
    -[objc_class setEnabled:](v52, "setEnabled:", 0);

    v53 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v54 = swift_allocObject(v53, 56, 7);
    *(_OWORD *)(v54 + 16) = xmmword_100EA7AD0;
    *(_QWORD *)(v54 + 32) = sub_100734628();
    *(_QWORD *)(v54 + 40) = objc_msgSend((id)objc_opt_self(UIBarButtonItem), "flexibleSpaceItem");
    v55 = sub_100734B3C();
    *(_QWORD *)(v54 + 48) = v55;
    v77 = v54;
    specialized Array._endMutation()(v55);
    v56 = objc_msgSend(v37, "traitCollection");
    v57 = objc_msgSend(v56, "horizontalSizeClass");

    if (v57 == (id)1)
    {
      v58 = objc_msgSend(v37, "traitCollection");
      v59 = objc_msgSend(v58, "userInterfaceIdiom");

      if (v59 != (id)6)
      {
LABEL_13:
        sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v37, "setToolbarItems:", isa, swift_bridgeObjectRelease().n128_f64[0]);

        v65 = objc_msgSend(v37, "navigationController");
        objc_msgSend(v65, "setToolbarHidden:animated:", 0, 0);

        goto LABEL_14;
      }
    }
    v60 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    v61 = (char *)static UIBarButtonItem.spacerBarButtonItem()();
    if ((unint64_t)v77 >> 62
      && (v77 < 0 ? (v67 = v77) : (v67 = v77 & 0xFFFFFFFFFFFFFF8),
          swift_bridgeObjectRetain(),
          v68 = _CocoaArrayWrapper.endIndex.getter(v67),
          swift_bridgeObjectRelease(),
          v68 < 0))
    {
      __break(1u);
    }
    else
    {
      sub_1001FDDF4(0, 0, (uint64_t)v61);
      v60 = (uint64_t)static UIBarButtonItem.spacerBarButtonItem()();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
      v61 = *(char **)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v62 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v61 < v62 >> 1)
      {
LABEL_12:
        v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v60);
        specialized Array._endMutation()(v63);
        goto LABEL_13;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v61 + 1, 1);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10073078C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5[3] = a4;
  v5[4] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v5[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C8D50);
  v5[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v5[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[9] = v10;
  v5[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  v5[11] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[12] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v5[13] = v13;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[14] = swift_task_alloc(v14);
  v5[15] = swift_task_alloc(v14);
  v15 = sub_100007E8C(&qword_1011A30F0);
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_10119F498);
  v5[17] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v5[18] = v17;
  v5[19] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1007308E8, 0, 0);
}

uint64_t sub_1007308E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;

  v1 = v0[16];
  v2 = v0[17];
  v3 = v0[8];
  v4 = v0[9];
  v5 = v0[3];
  v6 = type metadata accessor for Playlist.Entry(0);
  MusicLibraryRequest.init()(v6, &protocol witness table for Playlist.Entry);
  MusicLibraryRequest.ignoreExplicitContentRestrictions.setter(1, v2);
  KeyPath = swift_getKeyPath(&unk_100ECDAF8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[20] = v8;
  v8(v1, v5, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  v9 = sub_100048748((unint64_t *)&qword_1011A60B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  MusicLibraryRequest<>.filter<A>(matching:equalTo:)(KeyPath, v1, v2, &protocol witness table for Playlist.Entry, v9);
  swift_release();
  sub_10004FF60(v1, &qword_1011A30F0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
  v0[21] = v10;
  *v10 = v0;
  v10[1] = sub_100730A1C;
  return MusicLibraryRequest.response()(v0[15], v0[17]);
}

uint64_t sub_100730A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100730E6C;
  else
    v3 = sub_100730A80;
  return swift_task_switch(v3, 0, 0);
}

id sub_100730A80()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  void *v14;
  id v15;
  _QWORD *v16;
  uint64_t (*v17)(void);

  v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[20];
  v2 = v0[10];
  v3 = v0[11];
  v4 = v0[7];
  v5 = v0[8];
  v6 = v0[6];
  v7 = v0[3];
  type metadata accessor for MusicLibraryPlaylistEditViewModel(0);
  v1(v2, v7, v5);
  MusicLibraryResponse.items.getter(v3);
  v8 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 0, 1, v8);
  v9 = type metadata accessor for SocialProfile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  v10 = type metadata accessor for MusicLibrary(0);
  v11 = static MusicLibrary.shared.getter(v10);
  v12 = sub_100049F28(&qword_1011C6810, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v0[23] = MusicLibraryPlaylistEditViewModel.__allocating_init<A>(_:entries:author:library:)(v2, v4, v6, v11, v8, v12);
  result = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (result)
  {
    v14 = result;
    v15 = objc_msgSend(result, "cloudAddToPlaylistBehavior");

    dispatch thunk of MusicLibraryPlaylistEditViewModel.addInsertedEntriesToLibrary.setter(v15 == (id)1);
    v17 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.beginEditing()
                            + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.beginEditing());
    v16 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.beginEditing()
                                     + 1));
    v0[24] = v16;
    *v16 = v0;
    v16[1] = sub_100730C2C;
    return (id)v17();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100730C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100731094;
  else
    v3 = sub_100730C90;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100730C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 184);
  v26 = *(_QWORD *)(v0 + 136);
  v27 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v24 = v2;
  v25 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject(&unk_1010D98B8, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v6);
  type metadata accessor for MainActor(0);
  swift_retain();
  v10 = swift_retain();
  v11 = static MainActor.shared.getter(v10);
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + 48) & ~v12;
  v14 = (char *)swift_allocObject(&unk_1010D9C50, v13 + v4, v12 | 7);
  *((_QWORD *)v14 + 2) = v11;
  *((_QWORD *)v14 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v14 + 4) = v9;
  *((_QWORD *)v14 + 5) = v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v14[v13], v3, v6);
  swift_release();
  sub_100166D14(v7, (uint64_t)&unk_1011C6820, (uint64_t)v14);
  swift_release();
  v15 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v24, v6, v15);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 128);
  v18 = *(_QWORD *)(v0 + 112);
  v19 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 48);
  v20 = *(_QWORD *)(v0 + 56);
  v22 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v17);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100730E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 176);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124DDD0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v1);
    v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    *v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to load entries and setup edit controller with error=%@", v6, 0xCu);
    v9 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 112);
  v13 = *(_QWORD *)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 48);
  v14 = *(_QWORD *)(v0 + 56);
  v16 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v11);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100731094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v2, v4);
  v5 = *(_QWORD *)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)qword_10124DDD0);
  swift_errorRetain(v5);
  v7 = swift_errorRetain(v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v5);
    v12 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 16) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    *v11 = v12;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to load entries and setup edit controller with error=%@", v10, 0xCu);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  v14 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 128);
  v16 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 48);
  v18 = *(_QWORD *)(v0 + 56);
  v20 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007312DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;

  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  v7 = sub_100007E8C(&qword_1011A3338);
  v6[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[14] = v8;
  v6[15] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C6830);
  v6[16] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[17] = v10;
  v6[18] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  v6[19] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[20] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v6[21] = v13;
  v6[22] = swift_task_alloc((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A08F0);
  v6[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011C6838);
  v6[24] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v6[25] = v16;
  v6[26] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011C6840);
  v6[27] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v6[28] = v18;
  v6[29] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Playlist.EditableComponents(0);
  v6[30] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v6[31] = v20;
  v6[32] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Playlist(0);
  v6[33] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v6[34] = v22;
  v23 = (*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[35] = swift_task_alloc(v23);
  v6[36] = swift_task_alloc(v23);
  v24 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  v6[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v24 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for MainActor(0);
  v6[38] = static MainActor.shared.getter(v26);
  v27 = dispatch thunk of Actor.unownedExecutor.getter(v25, &protocol witness table for MainActor);
  return swift_task_switch(sub_1007314D4, v27, v28);
}

uint64_t sub_1007314D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = *(_QWORD *)(v0 + 288);
    v5 = *(_QWORD *)(v0 + 296);
    v6 = *(_QWORD *)(v0 + 264);
    v7 = *(_QWORD *)(v0 + 272);
    v8 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 248);
    v10 = Strong + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v12 = v11(v4, Strong + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist, v6);
    Playlist.editableComponents.getter(v12);
    v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v13(v4, v6);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8);
    v15 = *(_QWORD *)(v0 + 296);
    if (v14 == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 296), (uint64_t *)&unk_1011C65F0);
    }
    else
    {
      v94 = v13;
      v17 = *(_QWORD *)(v0 + 248);
      v16 = *(_QWORD *)(v0 + 256);
      v18 = *(_QWORD *)(v0 + 240);
      static Playlist.EditableComponents.tracklist.getter();
      v19 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
      v20 = dispatch thunk of SetAlgebra.isSuperset(of:)(v16, v18, v19);
      v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v21(v16, v18);
      v22 = ((uint64_t (*)(uint64_t, uint64_t))v21)(v15, v18);
      v13 = v94;
      if ((v20 & 1) != 0)
      {
        v89 = *(_QWORD *)(v0 + 216);
        v90 = *(_QWORD *)(v0 + 224);
        v92 = v11;
        v23 = *(_QWORD *)(v0 + 208);
        v83 = *(_QWORD *)(v0 + 200);
        v25 = *(_QWORD *)(v0 + 184);
        v24 = *(_QWORD *)(v0 + 192);
        v26 = *(_QWORD *)(v0 + 160);
        v86 = *(_QWORD *)(v0 + 176);
        v87 = *(_QWORD *)(v0 + 168);
        v84 = *(_QWORD *)(v0 + 232);
        v85 = *(_QWORD *)(v0 + 152);
        v88 = *(_QWORD *)(v0 + 96);
        dispatch thunk of MusicLibraryPlaylistEditViewModel.$entries.getter(v22);
        v27 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)(v0 + 72) = static OS_dispatch_queue.main.getter(v27, v28, v29, v30, v31, v32, v33, v34);
        v35 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v25, 1, 1, v35);
        v36 = sub_100049F28(&qword_1011C6860, &qword_1011C6838, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v37 = sub_10006A92C();
        Publisher.receive<A>(on:options:)(v0 + 72, v25, v24, v27, v36, v37);
        sub_10004FF60(v25, &qword_1011A08F0);

        v38 = v23;
        v11 = v92;
        (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v38, v24);
        v39 = swift_allocObject(&unk_1010D98B8, 24, 7);
        swift_unknownObjectWeakInit(v39 + 16);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v86, v88, v85);
        v40 = *(unsigned __int8 *)(v26 + 80);
        v41 = (v40 + 16) & ~v40;
        v42 = (v87 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
        v43 = swift_allocObject(&unk_1010D9C78, v42 + 8, v40 | 7);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v43 + v41, v86, v85);
        *(_QWORD *)(v43 + v42) = v39;
        v13 = v94;
        v44 = sub_100049F28(&qword_1011C6868, (uint64_t *)&unk_1011C6840, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v45 = Publisher<>.sink(receiveValue:)(sub_100742F68, v43, v89, v44);
        v46 = swift_release();
        (*(void (**)(uint64_t, uint64_t, __n128))(v90 + 8))(v84, v89, v46);
        *(_QWORD *)&v3[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editControllerEntriesSubscription] = v45;
        swift_release();
      }
    }
    v47 = *(_QWORD *)(v0 + 280);
    v48 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)&v3[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController] = *(_QWORD *)(v0 + 88);
    swift_retain();
    objc_msgSend(v3, "setEditing:animated:", 1, 1, swift_release().n128_f64[0]);
    v49 = sub_100733A54();
    objc_msgSend(v49, "reloadData");

    v11(v47, v10, v48);
    v50 = sub_100731EDC();
    v13(v47, v48);
    v51 = sub_10075C50C(1u, (uint64_t)v50);
    swift_bridgeObjectRelease();
    if (v51)
    {
      v52 = *(_QWORD *)(v0 + 184);
      v53 = *(_QWORD *)(v0 + 144);
      v54 = *(_QWORD *)(v0 + 120);
      v93 = *(_QWORD *)(v0 + 128);
      v95 = *(_QWORD *)(v0 + 136);
      v55 = *(_QWORD *)(v0 + 104);
      v91 = *(_QWORD *)(v0 + 112);
      v56 = (char *)sub_100734B54();
      swift_beginAccess(&v56[OBJC_IVAR____TtCOO5Music15PlaylistEditing8Metadata5Model__title], v0 + 40, 33, 0);
      v57 = sub_100007E8C((uint64_t *)&unk_1011A3370);
      Published.projectedValue.getter(v57);
      swift_endAccess(v0 + 40);
      swift_release();
      v58 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      *(_QWORD *)(v0 + 64) = static OS_dispatch_queue.main.getter(v58, v59, v60, v61, v62, v63, v64, v65);
      v66 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v52, 1, 1, v66);
      v67 = sub_100049F28(&qword_1011C6850, &qword_1011A3338, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v68 = sub_10006A92C();
      Publisher.receive<A>(on:options:)(v0 + 64, v52, v55, v58, v67, v68);
      sub_10004FF60(v52, &qword_1011A08F0);

      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v54, v55);
      v69 = swift_allocObject(&unk_1010D98B8, 24, 7);
      swift_unknownObjectWeakInit(v69 + 16);
      v70 = sub_100049F28(&qword_1011C6858, &qword_1011C6830, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v71 = Publisher<>.sink(receiveValue:)(sub_100742EE8, v69, v93, v70);
      v72 = swift_release();
      (*(void (**)(uint64_t, uint64_t, __n128))(v95 + 8))(v53, v93, v72);
      *(_QWORD *)&v3[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataTitleSubscription] = v71;

      swift_release();
    }
    else
    {

    }
  }
  v73 = *(_QWORD *)(v0 + 288);
  v74 = *(_QWORD *)(v0 + 280);
  v75 = *(_QWORD *)(v0 + 256);
  v76 = *(_QWORD *)(v0 + 232);
  v77 = *(_QWORD *)(v0 + 208);
  v79 = *(_QWORD *)(v0 + 176);
  v78 = *(_QWORD *)(v0 + 184);
  v80 = *(_QWORD *)(v0 + 144);
  v81 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100731B24(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  _BYTE *Strong;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _BOOL4 v42;
  _BYTE v43[24];
  _QWORD v44[3];

  v5 = sub_100007E8C(&qword_1011A3350);
  __chkstk_darwin(v5);
  v41 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v40 = (uint64_t *)((char *)&v39 - v8);
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - v14;
  v16 = *a1;
  v17 = a3 + 16;
  v44[0] = v16;
  v18 = type metadata accessor for Playlist.Entry(0);
  swift_bridgeObjectRetain();
  v19 = sub_100007E8C((uint64_t *)&unk_1011C6870);
  v20 = sub_100049F28((unint64_t *)&unk_1011D0D20, (uint64_t *)&unk_1011C6870, (uint64_t)&protocol conformance descriptor for [A]);
  MusicItemCollection.init<A>(_:)(v44, v18, v19, &protocol witness table for Playlist.Entry, v20);
  v21 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  MusicLibraryResponse.items.getter(v21);
  v22 = sub_1000A3B24();
  v23 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v12, v9, v22);
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v12, v9);
  v24(v15, v9);
  swift_beginAccess(v17, v44, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v17);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_hasTracklistChanges] = (v23 & 1) == 0;

  }
  swift_beginAccess(v17, v43, 0, 0);
  v26 = swift_unknownObjectWeakLoadStrong(v17);
  if (v26)
  {
    v27 = (void *)v26;
    v28 = sub_100734B54();

    v29 = (uint64_t)v40;
    *v40 = v16;
    v30 = type metadata accessor for PlaylistCovers.Source(0);
    swift_storeEnumTagMultiPayload(v29, v30, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
    KeyPath = swift_getKeyPath(&unk_100ECDA68);
    v32 = swift_getKeyPath(&unk_100ECDA90);
    v33 = v41;
    sub_10004A160(v29, v41, &qword_1011A3350);
    swift_bridgeObjectRetain();
    swift_retain();
    static Published.subscript.setter(v33, v28, KeyPath, v32);
    sub_10004FF60(v29, &qword_1011A3350);
    swift_release();
  }
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v34 = type metadata accessor for Logger(0);
  v35 = sub_100048B14(v34, (uint64_t)qword_10124DDD0);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v38 = 67109120;
    v42 = (v23 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "🆕 Entries changed, hasTracklistChanges=%{BOOL}d", v38, 8u);
    swift_slowDealloc(v38, -1, -1);
  }

}

void *sub_100731EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  Swift::Int v58;
  _QWORD v59[16];

  v56 = type metadata accessor for Playlist.Variant(0);
  v54 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v51 = (char *)&v51 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_100007E8C((uint64_t *)&unk_1011C66C0);
  __chkstk_darwin(v1);
  v55 = (uint64_t)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  __chkstk_darwin(v3);
  v52 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - v6;
  __chkstk_darwin(v8);
  v53 = (char *)&v51 - v9;
  v10 = sub_100007E8C(&qword_1011A2290);
  __chkstk_darwin(v10);
  v12 = (char **)((char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100007E8C(&qword_1011C8D50);
  __chkstk_darwin(v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Playlist.EditableComponents(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  __chkstk_darwin(v20);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.editableComponents.getter(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16) == 1)
  {
    sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011C65F0);
    return &_swiftEmptySetSingleton;
  }
  static Playlist.EditableComponents.metadata.getter();
  v24 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
  v25 = dispatch thunk of SetAlgebra.isSuperset(of:)(v19, v16, v24);
  v26 = *(void (**)(char *, uint64_t))(v17 + 8);
  v26(v19, v16);
  v26(v22, v16);
  if ((v25 & 1) == 0)
    return &_swiftEmptySetSingleton;
  v58 = sub_100047588((uint64_t)&off_1010AD368);
  if (qword_10119B918 != -1)
    swift_once(&qword_10119B918, sub_1000FE7D4);
  v27 = qword_10124C870;
  KeyPath = swift_getKeyPath(&unk_100ECD888);
  v29 = swift_getKeyPath(&unk_100ECD8B0);
  static Published.subscript.getter(v12, v27, KeyPath, v29);
  swift_release();
  swift_release();
  v30 = type metadata accessor for UserProfile(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v31 + 48))(v12, 1, v30) != 1)
  {
    UserProfile.socialProfile.getter();
    (*(void (**)(_QWORD *, uint64_t))(v31 + 8))(v12, v30);
    v34 = type metadata accessor for SocialProfile(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v15, 1, v34) == 1)
      goto LABEL_10;
    sub_10004FF60((uint64_t)v15, &qword_1011C8D50);
    static ApplicationCapabilities.shared.getter((uint64_t)v59);
    v37 = v59[3];
    swift_bridgeObjectRetain();
    sub_100065184(v59);
    v38 = sub_10075BDAC(3u, v37);
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
      return (void *)v58;
    v40 = (uint64_t)v53;
    Playlist.variant.getter(v39);
    v41 = v54;
    v42 = v56;
    (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v7, enum case for Playlist.Variant.smart(_:), v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v7, 0, 1, v42);
    v43 = v55;
    v44 = v55 + *(int *)(v1 + 48);
    sub_10004A160(v40, v55, (uint64_t *)&unk_1011CEF20);
    sub_10004A160((uint64_t)v7, v44, (uint64_t *)&unk_1011CEF20);
    v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
    if (v45(v43, 1, v42) == 1)
    {
      sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011CEF20);
      sub_10004FF60(v40, (uint64_t *)&unk_1011CEF20);
      if (v45(v44, 1, v42) == 1)
      {
        v35 = (uint64_t *)&unk_1011CEF20;
        v36 = v43;
        goto LABEL_11;
      }
    }
    else
    {
      v46 = v52;
      sub_10004A160(v43, v52, (uint64_t *)&unk_1011CEF20);
      if (v45(v44, 1, v42) != 1)
      {
        v47 = v51;
        (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v51, v44, v42);
        v48 = sub_100048748(&qword_10119D380, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        v49 = dispatch thunk of static Equatable.== infix(_:_:)(v46, v47, v42, v48);
        v50 = *(void (**)(char *, uint64_t))(v41 + 8);
        v50(v47, v42);
        sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011CEF20);
        sub_10004FF60(v40, (uint64_t *)&unk_1011CEF20);
        v50((char *)v46, v42);
        sub_10004FF60(v43, (uint64_t *)&unk_1011CEF20);
        if ((v49 & 1) != 0)
          return (void *)v58;
        goto LABEL_20;
      }
      sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011CEF20);
      sub_10004FF60(v40, (uint64_t *)&unk_1011CEF20);
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v46, v42);
    }
    sub_10004FF60(v43, (uint64_t *)&unk_1011C66C0);
LABEL_20:
    sub_10019539C(&v57, 3u);
    return (void *)v58;
  }
  sub_10004FF60((uint64_t)v12, &qword_1011A2290);
  v32 = type metadata accessor for SocialProfile(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v15, 1, 1, v32);
LABEL_10:
  v35 = &qword_1011C8D50;
  v36 = (uint64_t)v15;
LABEL_11:
  sub_10004FF60(v36, v35);
  return (void *)v58;
}

void sub_100732530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  objc_class *v5;
  Swift::String v6;
  double v7;
  unint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_10073430C();

    v6 = String.trim()();
    *(_QWORD *)&v7 = swift_bridgeObjectRelease().n128_u64[0];
    v8 = ((unint64_t)v6._object >> 56) & 0xF;
    if (((uint64_t)v6._object & 0x2000000000000000) == 0)
      v8 = v6._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    -[objc_class setEnabled:](v5, "setEnabled:", v8 != 0, v7);

  }
}

void sub_10073260C(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for PlaylistEditingViewController(0);
  objc_msgSendSuper2(&v12, "viewIsAppearing:", a1 & 1);
  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "window");

    if (v5)
    {
      v6 = sub_100007E8C(&qword_1011A1750);
      v7 = swift_allocObject(v6, 48, 7);
      *(_OWORD *)(v7 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v7 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
      *(_QWORD *)(v7 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
      v8 = swift_allocObject(&unk_1010D9C00, 24, 7);
      *(_QWORD *)(v8 + 16) = v1;
      v9 = type metadata accessor for Window();
      v10 = v1;
      v11 = UIView.registerForTraitChanges<A>(_:handler:)(v7, sub_100742C84, v8, v9);
      swift_release();
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease(v11);
    }
  }
  else
  {
    __break(1u);
  }
}

double sub_100732748(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t KeyPath;
  uint64_t v12;
  double result;
  uint64_t v14;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - v6;
  v8 = sub_100734B54();
  v9 = objc_msgSend(a1, "traitCollection");
  v10 = objc_msgSend(v9, "horizontalSizeClass");

  UserInterfaceSizeClass.init(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100ECDAB0);
  v12 = swift_getKeyPath(&unk_100ECDAD8);
  sub_10004A160((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1011A33B8);
  swift_retain();
  static Published.subscript.setter(v4, v8, KeyPath, v12);
  sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A33B8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1007328B8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for PlaylistEditingViewController(0);
  objc_msgSendSuper2(&v13, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "window");

    if (v3 && (v4 = objc_msgSend(v3, "windowScene"), v3, v4))
    {
      v5 = objc_msgSend(v4, "coordinateSpace");

      objc_msgSend(v5, "bounds");
      v7 = v6;
      v9 = v8;
      swift_unknownObjectRelease(v5);
      v10 = 0;
      v11 = v7;
      v12 = v9;
    }
    else
    {
      v11 = 0;
      v12 = 0;
      v10 = 1;
    }
    sub_10073F398(v11, v12, v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_100732A9C(int a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  objc_class *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  objc_class *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char **v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  objc_class *v53;
  uint64_t (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char v61;
  void (*v62)(char *, uint64_t);
  objc_class *v63;
  void *v64;
  void *v65;
  id v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  int v73;
  uint64_t v74;
  objc_super v75;

  v3 = v2;
  v6 = type metadata accessor for Playlist.EditableComponents(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v70 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v68 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v67 = (char *)&v67 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v67 - v15;
  v17 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  __chkstk_darwin(v17);
  v72 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v71 = (char *)&v67 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v67 - v22;
  v24 = (objc_class *)type metadata accessor for PlaylistEditingViewController(0);
  v75.receiver = v3;
  v75.super_class = v24;
  objc_msgSendSuper2(&v75, "setEditing:animated:", a1 & 1, a2 & 1);
  v25 = sub_100733A54();
  v73 = a1;
  v69 = v9;
  v74 = v10;
  if ((a1 & 1) == 0)
  {
    v27 = v7;
    v28 = v6;
    goto LABEL_5;
  }
  v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v16, &v3[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist], v9);
  Playlist.editableComponents.getter(v26);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v23, 1, v6) == 1)
  {
    v27 = v7;
    v28 = v6;
    sub_10004FF60((uint64_t)v23, (uint64_t *)&unk_1011C65F0);
LABEL_5:
    v29 = 0;
    goto LABEL_7;
  }
  v30 = v70;
  static Playlist.EditableComponents.tracklist.getter();
  v31 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
  v29 = dispatch thunk of SetAlgebra.isSuperset(of:)(v30, v6, v31);
  v27 = v7;
  v32 = *(void (**)(char *, uint64_t))(v7 + 8);
  v33 = v30;
  v9 = v69;
  v32(v33, v6);
  v28 = v6;
  v32(v23, v6);
LABEL_7:
  objc_msgSend(v25, "setEditing:", v29 & 1);

  v34 = sub_100734B3C();
  v35 = v73;
  v36 = (uint64_t)v71;
  if ((v73 & 1) == 0)
  {
LABEL_10:
    v40 = 0;
    goto LABEL_12;
  }
  v37 = v74;
  v38 = v67;
  v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 16))(v67, &v3[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist], v9);
  Playlist.editableComponents.getter(v39);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v36, 1, v28) == 1)
  {
    sub_10004FF60(v36, (uint64_t *)&unk_1011C65F0);
    goto LABEL_10;
  }
  v41 = v70;
  static Playlist.EditableComponents.tracklist.getter();
  v42 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
  v40 = dispatch thunk of SetAlgebra.isSuperset(of:)(v41, v28, v42);
  v43 = *(void (**)(char *, uint64_t))(v27 + 8);
  v43(v41, v28);
  v43((char *)v36, v28);
LABEL_12:
  v44 = &selRef_referralObject;
  -[objc_class setEnabled:](v34, "setEnabled:", v40 & 1);

  v45 = sub_100733A54();
  v46 = objc_msgSend(v45, "indexPathsForSelectedItems");

  v47 = v74;
  if (v46)
  {
    v48 = type metadata accessor for IndexPath(0);
    v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v48);

    v50 = *(_QWORD *)(v49 + 16);
    swift_bridgeObjectRelease();
    v51 = v50 != 0;
  }
  else
  {
    v51 = 0;
  }
  v52 = (uint64_t)v72;
  v53 = sub_100734628();
  if ((v35 & 1) != 0)
  {
    v54 = *(uint64_t (**)(char *, char *, uint64_t))(v47 + 16);
    v55 = v68;
    v56 = v47;
    v57 = v69;
    v58 = v54(v68, &v3[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist], v69);
    Playlist.editableComponents.getter(v58);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v52, 1, v28) == 1)
    {
      sub_10004FF60(v52, (uint64_t *)&unk_1011C65F0);
      v44 = &selRef_referralObject;
    }
    else
    {
      v59 = v70;
      static Playlist.EditableComponents.tracklist.getter();
      v60 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
      v61 = dispatch thunk of SetAlgebra.isSuperset(of:)(v59, v28, v60);
      v62 = *(void (**)(char *, uint64_t))(v27 + 8);
      v62(v59, v28);
      v62((char *)v52, v28);
      v44 = &selRef_referralObject;
      if ((v61 & 1) != 0)
        goto LABEL_20;
    }
  }
  v51 = 0;
LABEL_20:
  objc_msgSend(v53, v44[148], v51);

  v63 = sub_1007342F4();
  objc_msgSend(v63, v44[148], v35 & 1);

  if ((v35 & 1) != 0)
  {
    v64 = sub_10073430C();
  }
  else
  {
    sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    v64 = sub_100733044();
  }
  v65 = v64;
  v66 = objc_msgSend(v3, "navigationItem");
  objc_msgSend(v66, "setRightBarButtonItem:animated:", v65, 1);

}

id sub_100733044()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  objc_msgSend(v1, "startAnimating");
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "initWithCustomView:", v1);

  return v2;
}

uint64_t sub_100733178(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  void *v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  Swift::String v17;
  _QWORD v18[2];

  v7 = sub_100007E8C(&qword_1011C63A0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  v12 = (void *)v11[1];
  v13 = *v11 == a2 && v12 == a3;
  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a2, a3, 0) & 1) != 0)
  {
    sub_1007389CC((uint64_t)v10);
    v14 = sub_100007E8C(&qword_1011C6768);
    v15 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v10, a4, v14);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return v15;
  }
  else
  {
    strcpy((char *)v18, "Unknown kind=");
    HIWORD(v18[1]) = -4864;
    v17._countAndFlagsBits = a2;
    v17._object = a3;
    String.append(_:)(v17);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v18[0], v18[1], "Music/PlaylistEditingViewController.swift", 41, 2, 150, 0);
    __break(1u);
  }
  return result;
}

void sub_1007333C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(qword_1011C63B0);
  v24 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist.Entry(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v2;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController))
  {
    swift_retain();
    v15 = dispatch thunk of MusicLibraryPlaylistEditViewModel.entries.getter(v14);
    swift_release();
    v17 = IndexPath.item.getter(v16);
    if ((v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v17 < *(_QWORD *)(v15 + 16))
    {
      v18 = v15
          + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
          + *(_QWORD *)(v11 + 72) * v17;
      v22 = v7;
      v19 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      v19(v13, v18, v10);
      swift_bridgeObjectRelease();
      sub_100738D04((uint64_t)v9);
      v19(v6, (unint64_t)v13, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
      v20 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
      UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v9, a2, v6, v20, v10);
      sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011B59A0);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v22);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1007337AC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  LOBYTE(a5) = a5(v12);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return a5 & 1;
}

id sub_100733A54()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id result;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  void *v21;
  id v22;

  v1 = OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___collectionView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___collectionView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___collectionView];
LABEL_6:
    v22 = v2;
    return v3;
  }
  v4 = sub_100733C70();
  v5 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v4, 0.0, 0.0, 0.0, 0.0);

  v6 = (void *)objc_opt_self(UIColor);
  v7 = v5;
  v8 = objc_msgSend(v6, "clearColor");
  objc_msgSend(v7, "setBackgroundColor:", v8);

  objc_msgSend(v7, "setDelegate:", v0);
  objc_msgSend(v7, "setDataSource:", v0);
  v9 = v7;
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v11 = result;
    objc_msgSend(result, "frame");
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;

    objc_msgSend(v9, "setFrame:", v13, v15, v17, v19);
    objc_msgSend(v9, "setAutoresizingMask:", 18);
    objc_msgSend(v9, "setKeyboardDismissMode:", 1);
    objc_msgSend(v9, "setAllowsMultipleSelectionDuringEditing:", 1);
    result = objc_msgSend(v0, "view");
    if (result)
    {
      v20 = result;
      objc_msgSend(result, "addSubview:", v9);

      objc_msgSend(v0, "setContentScrollView:forEdge:", v9, 1);
      v21 = *(void **)&v0[v1];
      *(_QWORD *)&v0[v1] = v9;
      v3 = v9;

      v2 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100733C70()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___mainLayout;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___mainLayout);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___mainLayout);
  }
  else
  {
    v4 = sub_100733CD0();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100733CD0()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v19[6];

  v0 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration), "init");
  v1 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v2 = objc_msgSend(v1, "fractionalWidthDimension:", 1.0);
  v3 = objc_msgSend(v1, "estimatedDimension:", 300.0);
  v4 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v2, v3);

  v5 = v4;
  UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v5, v6, 1);

  v8 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v9 + 32) = v7;
  v19[0] = v9;
  specialized Array._endMutation()(v9);
  sub_10004A07C(0, (unint64_t *)&unk_1011B42F0, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  v10 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease().n128_f64[0], v19[0]);

  v12 = swift_allocObject(&unk_1010D98B8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = swift_allocObject(&unk_1010D9BB0, 32, 7);
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = v12;
  v14 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v19[4] = sub_100742C7C;
  v19[5] = v13;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_1008E31AC;
  v19[3] = &unk_1010D9BC8;
  v15 = _Block_copy(v19);
  v16 = v10;
  v17 = objc_msgSend(v14, "initWithSectionProvider:configuration:", v15, v0, swift_retain().n128_f64[0]);

  _Block_release(v15);
  swift_release();
  swift_release();

  return v17;
}

void *sub_100733F8C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t Strong;
  void *v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  void (*v26)(_BYTE *, _QWORD);
  void (*v27)(_BYTE *, _QWORD);
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void (*v33)(char *, uint64_t);
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  double v39;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  _BYTE v44[32];
  _BYTE v45[32];
  char v46[24];

  v42 = a2;
  v41 = type metadata accessor for UIListSeparatorConfiguration.Visibility(0);
  v6 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v13 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - v17;
  v19 = a4 + 16;
  objc_msgSend(a3, "setContentInsets:", NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v9);
  UICollectionLayoutListConfiguration.init(appearance:)(v12);
  swift_beginAccess(v19, v46, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v19);
  if (Strong)
  {
    v21 = (void *)Strong;
    v22 = (void *)sub_100733A54();

    objc_msgSend(v22, "directionalLayoutMargins");
    v24 = v23;

    v25 = v24 + v24;
  }
  else
  {
    v25 = 0.0;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v41);
  v26 = (void (*)(_BYTE *, _QWORD))UICollectionLayoutListConfiguration.separatorConfiguration.modify(v45);
  UIListSeparatorConfiguration.topSeparatorVisibility.setter(v8);
  v26(v45, 0);
  v27 = (void (*)(_BYTE *, _QWORD))UICollectionLayoutListConfiguration.separatorConfiguration.modify(v45);
  v28 = (void (*)(_BYTE *, _QWORD))UIListSeparatorConfiguration.bottomSeparatorInsets.modify(v44);
  *(double *)(v29 + 24) = v25;
  v28(v44, 0);
  v27(v45, 0);
  sub_10004A07C(0, (unint64_t *)&unk_1011B5670, NSCollectionLayoutSection_ptr);
  v30 = v43;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v43);
  v31 = v42;
  v32 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v15, v42);
  v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v33(v15, v30);
  swift_beginAccess(v19, v45, 0, 0);
  v34 = (void *)swift_unknownObjectWeakLoadStrong(v19);
  if (!v34
    || (v35 = v34,
        v36 = objc_msgSend(v34, "presentingViewController"),
        v35,
        !v36)
    || (v37 = objc_msgSend(v36, "traitCollection"), v36, !v37))
  {
    v37 = objc_msgSend(v31, "traitCollection", v41);
  }
  v38 = objc_msgSend(v37, "horizontalSizeClass", v41);
  v39 = 0.0;
  if (v38 != (id)1)
    v39 = Int.seconds.getter(25);
  objc_msgSend(v32, "setContentInsets:", 0.0, v39, 0.0, v39);

  v33(v18, v30);
  return v32;
}

objc_class *sub_1007342F4()
{
  return sub_100734324(&OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___cancelNavigationBarButtonItem, (uint64_t)sub_100742C18, UIBarButtonSystemItemCancel);
}

objc_class *sub_10073430C()
{
  return sub_100734324(&OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___doneNavigationBarButtonItem, (uint64_t)sub_100742BA0, UIBarButtonSystemItemDone);
}

objc_class *sub_100734324(uint64_t *a1, uint64_t a2, UIBarButtonSystemItem a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  objc_class *v6;
  uint64_t v9;
  uint64_t v10;
  UIBarButtonItem v11;
  void *v12;
  id v13;
  UIAction_optional v15;
  UIMenu_optional v16;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    v6 = *(objc_class **)(v3 + *a1);
  }
  else
  {
    v9 = v3;
    sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
    v10 = swift_allocObject(&unk_1010D98B8, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    v15.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, a2, v10);
    v15.is_nil = 0;
    v11.super.super.isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(a3, v15, v16).super.super.isa;
    v12 = *(void **)(v3 + v4);
    *(UIBarButtonItem *)(v9 + v4) = v11;
    v6 = v11.super.super.isa;

    v5 = 0;
  }
  v13 = v5;
  return v6;
}

double sub_10073443C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  double result;
  uint64_t v11;

  v3 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MainActor(0);
  v7 = swift_retain();
  v8 = static MainActor.shared.getter(v7);
  v9 = (_QWORD *)swift_allocObject(&unk_1010D9B88, 40, 7);
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = a2;
  sub_100166D34((uint64_t)v5, (uint64_t)&unk_1011C67E0, (uint64_t)v9);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100734518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a1;
  v4[6] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[8] = v7;
  v4[9] = v8;
  return swift_task_switch(sub_100734584, v7, v8);
}

uint64_t sub_100734584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1011C6394);
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_1001632D8;
    return sub_10073CAE8();
  }
  else
  {
    v5 = swift_release();
    **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 80) == 0;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

objc_class *sub_100734628()
{
  return sub_100734324(&OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___deleteToolBarButtonItem, (uint64_t)sub_100742B78, UIBarButtonSystemItemTrash);
}

void sub_100734640(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  NSString v29;
  void *v30;
  void *v31;
  id v32;
  NSString v33;
  void *v34;
  id v35;
  void **aBlock;
  uint64_t v37;
  void (*v38)(uint64_t, void *);
  void *v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  _BYTE v42[24];

  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v8 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v9);
  v11 = (char *)&aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = sub_100733A54();
    v15 = objc_msgSend(v14, "indexPathsForSelectedItems");

    if (v15)
    {
      v16 = type metadata accessor for IndexPath(0);
      v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

      v18 = *(void ***)(v17 + 16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = 0;
    }
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1);
    v19._countAndFlagsBits = 0x206574656C6544;
    v19._object = (void *)0xE700000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
    aBlock = v18;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&aBlock, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v20._countAndFlagsBits = 0x297328676E6F7320;
    v20._object = (void *)0xE90000000000003FLL;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
    v21 = String.LocalizationValue.init(stringInterpolation:)(v11);
    static Locale.current.getter(v21);
    String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(59, 1);
    v22._countAndFlagsBits = 0xD000000000000020;
    v22._object = (void *)0x8000000100E43FC0;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
    aBlock = v18;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&aBlock, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v23._object = (void *)0x8000000100E43FF0;
    v23._countAndFlagsBits = 0xD00000000000001BLL;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
    v24 = String.LocalizationValue.init(stringInterpolation:)(v11);
    static Locale.current.getter(v24);
    String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v27 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v25, v26, 1);

    String.deleteButtonTitle.unsafeMutableAddressor();
    v28 = swift_allocObject(&unk_1010D98B8, 24, 7);
    swift_unknownObjectWeakInit(v28 + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v40 = sub_100742B80;
    v41 = v28;
    aBlock = _NSConcreteStackBlock;
    v37 = 1107296256;
    v38 = sub_100223938;
    v39 = &unk_1010D9B28;
    v30 = _Block_copy(&aBlock);
    swift_release();
    v31 = (void *)objc_opt_self(UIAlertAction);
    v32 = objc_msgSend(v31, "actionWithTitle:style:handler:", v29, 2, v30);
    _Block_release(v30);

    objc_msgSend(v27, "addAction:", v32, swift_release().n128_f64[0]);
    String.cancelButtonTitle.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v40 = (void (*)(uint64_t))UIScreen.Dimensions.size.getter;
    v41 = 0;
    aBlock = _NSConcreteStackBlock;
    v37 = 1107296256;
    v38 = sub_100223938;
    v39 = &unk_1010D9B50;
    v34 = _Block_copy(&aBlock);
    v35 = objc_msgSend(v31, "actionWithTitle:style:handler:", v33, 1, v34, swift_release().n128_f64[0]);
    _Block_release(v34);

    objc_msgSend(v27, "addAction:", v35);
    objc_msgSend(v13, "presentViewController:animated:completion:", v27, 1, 0);

  }
}

objc_class *sub_100734B3C()
{
  return sub_100734324(&OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___addToolBarButtonItem, (uint64_t)sub_100742B58, UIBarButtonSystemItemAdd);
}

id sub_100734B54()
{
  char *v0;
  uint64_t v1;
  id v2;

  v1 = OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___metadataViewModel;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___metadataViewModel])
  {
    v2 = *(id *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___metadataViewModel];
  }
  else
  {
    v2 = sub_100734BB8(v0);
    *(_QWORD *)&v0[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_100734BB8(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  __n128 v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  id result;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  BOOL v107;
  double v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  __n128 v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  unint64_t v134;
  _BYTE v135[56];

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v119 = (char *)&v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v4);
  v121 = (uint64_t)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v120 = (char *)&v118 - v7;
  v8 = sub_100007E8C(&qword_1011A3350);
  __chkstk_darwin(v8);
  v123 = (uint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v122 = (uint64_t *)((char *)&v118 - v11);
  v12 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v12);
  v127 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v14);
  v16 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = v16;
  v17 = type metadata accessor for Playlist(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v130 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v132 = (char *)&v118 - v21;
  __chkstk_darwin(v22);
  v129 = (char *)&v118 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v118 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v118 - v28;
  v30 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v30);
  v128 = (uint64_t)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v118 - v33;
  v35 = _s8MetadataO5ModelCMa(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  v126 = sub_1004F619C();
  v131 = a1;
  v36 = &a1[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist];
  v124 = &a1[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist];
  v37 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v37(v29, &a1[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist], v17);
  Playlist.artworkViewModel.getter((uint64_t)v16);
  v38 = *(void (**)(char *, uint64_t))(v18 + 8);
  v38(v29, v17);
  v39 = ((uint64_t (*)(char *, char *, uint64_t))v37)(v26, v36, v17);
  v40 = v127;
  Playlist.variant.getter(v39);
  v38(v26, v17);
  v41 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 10, v41);
  v42 = Corner.medium.unsafeMutableAddressor();
  v43 = *v42;
  v44 = v42[1];
  LOBYTE(v18) = *((_BYTE *)v42 + 16);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v135);
  v45 = (uint64_t)v40;
  v46 = v126;
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v125, v45, 0x3FF0000000000000, 0, (uint64_t)v135, v43, v44, v18, (uint64_t)v34);
  v47 = type metadata accessor for ArtworkImage.Info(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v34, 0, 1, v47);
  KeyPath = swift_getKeyPath(&unk_100ECD948);
  v49 = swift_getKeyPath(&unk_100ECD970);
  v50 = v128;
  sub_10004A160((uint64_t)v34, v128, (uint64_t *)&unk_1011C6790);
  swift_retain();
  static Published.subscript.setter(v50, v46, KeyPath, v49);
  v51 = (uint64_t)v34;
  v52 = v38;
  sub_10004FF60(v51, (uint64_t *)&unk_1011C6790);
  v53 = v124;
  v54.n128_f64[0] = ((double (*)(char *, char *, uint64_t))v37)(v29, v124, v17);
  v55 = Playlist.name.getter(v54);
  v57 = v56;
  v38(v29, v17);
  v58 = swift_getKeyPath(&unk_100ECD720);
  v59 = swift_getKeyPath(&unk_100ECD748);
  v133 = v55;
  v134 = v57;
  swift_retain();
  static Published.subscript.setter(&v133, v46, v58, v59);
  v60 = v129;
  v61 = ((uint64_t (*)(char *, char *, uint64_t))v37)(v129, v53, v17);
  v62 = Playlist.standardDescription.getter(v61);
  v64 = v63;
  v52(v60, v17);
  if (v64)
    v65 = v62;
  else
    v65 = 0;
  if (v64)
    v66 = v64;
  else
    v66 = 0xE000000000000000;
  v67 = swift_getKeyPath(&unk_100ECD768);
  v68 = swift_getKeyPath(&unk_100ECD790);
  v133 = v65;
  v134 = v66;
  swift_retain();
  static Published.subscript.setter(&v133, v46, v67, v68);
  v69 = v132;
  v70 = ((uint64_t (*)(char *, char *, uint64_t))v37)(v132, v53, v17);
  LOBYTE(v67) = Playlist.isVisible.getter(v70);
  v52(v69, v17);
  LOBYTE(v69) = v67 & 1;
  v71 = swift_getKeyPath(&unk_100ECD7B0);
  v72 = swift_getKeyPath(&unk_100ECD7D8);
  LOBYTE(v133) = (_BYTE)v69;
  swift_retain();
  static Published.subscript.setter(&v133, v46, v71, v72);
  v73 = v130;
  v132 = (char *)v37;
  v74 = ((uint64_t (*)(char *, char *, uint64_t))v37)(v130, v53, v17);
  v75 = Playlist.curatorName.getter(v74);
  v77 = v76;
  v52(v73, v17);
  if (!v77)
  {
    ((void (*)(char *, char *, uint64_t))v132)(v29, v53, v17);
    v75 = sub_10031E9D4();
    v77 = v78;
    v52(v29, v17);
  }
  v79 = swift_getKeyPath(&unk_100ECD990);
  v80 = swift_getKeyPath(&unk_100ECD9B8);
  v133 = v75;
  v134 = v77;
  swift_retain();
  static Published.subscript.setter(&v133, v46, v79, v80);
  v81 = swift_getKeyPath(&unk_100ECD9D8);
  v82 = swift_getKeyPath(&unk_100ECDA00);
  LOBYTE(v133) = 1;
  swift_retain();
  static Published.subscript.setter(&v133, v46, v81, v82);
  ((void (*)(char *, char *, uint64_t))v132)(v29, v53, v17);
  v83 = sub_100731EDC();
  v130 = (char *)v52;
  v52(v29, v17);
  v84 = swift_getKeyPath(&unk_100ECDA20);
  v85 = swift_getKeyPath(&unk_100ECDA48);
  v133 = (uint64_t)v83;
  swift_retain();
  result = (id)static Published.subscript.setter(&v133, v46, v84, v85);
  v87 = v131;
  if (!*(_QWORD *)&v131[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController])
  {
    __break(1u);
    goto LABEL_17;
  }
  swift_retain();
  v89 = dispatch thunk of MusicLibraryPlaylistEditViewModel.entries.getter(v88);
  swift_release();
  v90 = (uint64_t)v122;
  *v122 = v89;
  v91 = type metadata accessor for PlaylistCovers.Source(0);
  swift_storeEnumTagMultiPayload(v90, v91, 1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v90, 0, 1, v91);
  v92 = swift_getKeyPath(&unk_100ECDA68);
  v93 = swift_getKeyPath(&unk_100ECDA90);
  v94 = v123;
  sub_10004A160(v90, v123, &qword_1011A3350);
  swift_retain();
  static Published.subscript.setter(v94, v46, v92, v93);
  sub_10004FF60(v90, &qword_1011A3350);
  result = objc_msgSend(v87, "view");
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  v95 = result;
  v96 = v87;
  v97 = objc_msgSend(result, "window");

  if (v97)
  {
    v98 = objc_msgSend(v97, "traitCollection");
    v99 = objc_msgSend(v98, "horizontalSizeClass");

    v100 = (uint64_t)v120;
    UserInterfaceSizeClass.init(_:)(v99);
    v101 = swift_getKeyPath(&unk_100ECDAB0);
    v102 = swift_getKeyPath(&unk_100ECDAD8);
    v103 = v53;
    v104 = v121;
    sub_10004A160(v100, v121, (uint64_t *)&unk_1011A33B8);
    swift_retain();
    v105 = v104;
    v53 = v103;
    static Published.subscript.setter(v105, v46, v101, v102);
    sub_10004FF60(v100, (uint64_t *)&unk_1011A33B8);

  }
  ((void (*)(char *, char *, uint64_t))v132)(v29, v53, v17);
  v106 = sub_100731EDC();
  ((void (*)(char *, uint64_t))v130)(v29, v17);
  v107 = sub_10075C50C(0, (uint64_t)v106);
  *(_QWORD *)&v108 = swift_bridgeObjectRelease().n128_u64[0];
  if (v107)
  {
    v109 = objc_msgSend(v96, "traitCollection", v108);
    objc_msgSend(v109, "displayScale");
    v111 = v110;

    v112 = type metadata accessor for TaskPriority(0);
    v113 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v119, 1, 1, v112);
    type metadata accessor for MainActor(0);
    swift_retain();
    v114 = v96;
    v116 = static MainActor.shared.getter(v115);
    v117 = (_QWORD *)swift_allocObject(&unk_1010D9B10, 56, 7);
    v117[2] = v116;
    v117[3] = &protocol witness table for MainActor;
    v117[4] = v114;
    v117[5] = v46;
    v117[6] = v111;
    sub_100166D14(v113, (uint64_t)&unk_1011C67A8, (uint64_t)v117);
    swift_release();
  }
  return (id)v46;
}

uint64_t sub_1007355C0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;

  *(double *)(v6 + 904) = a1;
  *(_QWORD *)(v6 + 896) = a6;
  *(_QWORD *)(v6 + 888) = a5;
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A63A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 912) = swift_task_alloc(v7);
  *(_QWORD *)(v6 + 920) = swift_task_alloc(v7);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 928) = swift_task_alloc(v8);
  *(_QWORD *)(v6 + 936) = swift_task_alloc(v8);
  v9 = sub_100007E8C(&qword_1011C5B20);
  *(_QWORD *)(v6 + 944) = v9;
  *(_QWORD *)(v6 + 952) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v6 + 960) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 968) = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 976) = swift_task_alloc(v12);
  *(_QWORD *)(v6 + 984) = swift_task_alloc(v12);
  *(_QWORD *)(v6 + 992) = swift_task_alloc(v12);
  v13 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A1440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 1000) = swift_task_alloc(v13);
  *(_QWORD *)(v6 + 1008) = swift_task_alloc(v13);
  *(_QWORD *)(v6 + 1016) = swift_task_alloc(v13);
  *(_QWORD *)(v6 + 1024) = swift_task_alloc(v13);
  *(_QWORD *)(v6 + 1032) = swift_task_alloc(v13);
  v14 = type metadata accessor for CoverArtworkRecipe.ExpressionID(0);
  *(_QWORD *)(v6 + 1040) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v6 + 1048) = v15;
  *(_QWORD *)(v6 + 1056) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011C67B0);
  *(_QWORD *)(v6 + 1064) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v6 + 1072) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v6 + 1080) = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 1088) = swift_task_alloc(v19);
  *(_QWORD *)(v6 + 1096) = swift_task_alloc(v19);
  *(_QWORD *)(v6 + 1104) = swift_task_alloc(v19);
  v20 = type metadata accessor for CoverArtworkRecipe(0);
  *(_QWORD *)(v6 + 1112) = v20;
  v21 = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v6 + 1120) = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 1128) = swift_task_alloc(v22);
  *(_QWORD *)(v6 + 1136) = swift_task_alloc(v22);
  v23 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 1144) = static MainActor.shared.getter(v24);
  v25 = dispatch thunk of Actor.unownedExecutor.getter(v23, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 1152) = v25;
  *(_QWORD *)(v6 + 1160) = v26;
  return swift_task_switch(sub_10073582C, v25, v26);
}

uint64_t sub_10073582C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  void (*v31)(uint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)();
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t inited;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  void (*v83)(uint64_t, uint64_t);
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  _BOOL4 v92;
  uint64_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *log;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  os_log_type_t type[8];
  void *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t, uint64_t);
  void *v126;
  uint64_t v127;
  uint64_t v128;

  v1 = *(_QWORD *)(v0 + 1120);
  v2 = *(_QWORD *)(v0 + 1112);
  v3 = *(_QWORD *)(v0 + 1104);
  v4 = *(_QWORD *)(v0 + 1080);
  v5 = *(_QWORD *)(v0 + 1072);
  v6 = *(_QWORD *)(v0 + 1064);
  v7 = *(_QWORD *)(v0 + 888) + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist;
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v9 = v8(v3, v7, v5);
  Playlist.coverArtworkRecipe.getter(v9);
  v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v3, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v6, 1, v2) == 1)
  {
    v125 = v10;
    sub_10004FF60(*(_QWORD *)(v0 + 1064), (uint64_t *)&unk_1011C67B0);
    goto LABEL_9;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1120) + 32))(*(_QWORD *)(v0 + 1136), *(_QWORD *)(v0 + 1064), *(_QWORD *)(v0 + 1112));
  sub_10073742C(v0 + 760);
  v122 = *(void **)(v0 + 768);
  v126 = *(void **)(v0 + 776);
  v11 = *(void **)(v0 + 784);
  v12 = *(void **)(v0 + 792);
  v13 = *(void **)(v0 + 800);
  v14 = *(void **)(v0 + 808);
  sub_100065228(v0 + 760, v0 + 816, (uint64_t *)&unk_1011C67C0);
  if (!*(_QWORD *)(v0 + 824))
  {
    v125 = v10;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1120) + 8))(*(_QWORD *)(v0 + 1136), *(_QWORD *)(v0 + 1112));
LABEL_9:
    v32 = *(_QWORD *)(v0 + 1096);
    v33 = *(_QWORD *)(v0 + 1088);
    v34 = *(_QWORD *)(v0 + 1072);
    v35 = *(_QWORD *)(v0 + 1024);
    v36 = *(_QWORD *)(v0 + 968);
    v123 = *(_QWORD *)(v0 + 960);
    v37 = v8(v32, v7, v34);
    Playlist.tracksTiledArtwork.getter(v37);
    v125(v32, v34);
    v38 = v8(v33, v7, v34);
    Playlist.artwork.getter(v38);
    v125(v33, v34);
    v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
    *(_QWORD *)(v0 + 1208) = v39;
    if (v39(v35, 1, v123) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 1024), &qword_1011A1440);
LABEL_22:
      v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1208);
      v85 = *(_QWORD *)(v0 + 1000);
      v86 = *(_QWORD *)(v0 + 960);
      sub_10004A160(*(_QWORD *)(v0 + 1032), v85, &qword_1011A1440);
      if (v84(v85, 1, v86) == 1)
      {
        v87 = *(_QWORD *)(v0 + 1000);
        swift_release();
        sub_10004FF60(v87, &qword_1011A1440);
        if (qword_10119CB10 != -1)
          swift_once(&qword_10119CB10, sub_10096883C);
        v88 = type metadata accessor for Logger(0);
        v89 = sub_100048B14(v88, (uint64_t)qword_10124DDD0);
        v90 = Logger.logObject.getter(v89);
        v91 = static os_log_type_t.default.getter();
        v92 = os_log_type_enabled(v90, v91);
        v93 = *(_QWORD *)(v0 + 1032);
        if (v92)
        {
          v94 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v94 = 0;
          _os_log_impl((void *)&_mh_execute_header, v90, v91, "🖼️ Placeholder", v94, 2u);
          swift_slowDealloc(v94, -1, -1);
        }

        sub_10004FF60(v93, &qword_1011A1440);
        v95 = *(_QWORD *)(v0 + 1128);
        v96 = *(_QWORD *)(v0 + 1104);
        v97 = *(_QWORD *)(v0 + 1096);
        v98 = *(_QWORD *)(v0 + 1088);
        v99 = *(_QWORD *)(v0 + 1064);
        v100 = *(_QWORD *)(v0 + 1056);
        v101 = *(_QWORD *)(v0 + 1032);
        v102 = *(_QWORD *)(v0 + 1024);
        v103 = *(_QWORD *)(v0 + 1016);
        v109 = *(_QWORD *)(v0 + 1008);
        v111 = *(_QWORD *)(v0 + 1000);
        v113 = *(_QWORD *)(v0 + 992);
        *(_QWORD *)type = *(_QWORD *)(v0 + 984);
        v116 = *(_QWORD *)(v0 + 976);
        v118 = *(_QWORD *)(v0 + 952);
        v120 = *(_QWORD *)(v0 + 936);
        v121 = *(_QWORD *)(v0 + 928);
        v124 = *(_QWORD *)(v0 + 920);
        v127 = *(_QWORD *)(v0 + 912);
        swift_task_dealloc(*(_QWORD *)(v0 + 1136));
        swift_task_dealloc(v95);
        swift_task_dealloc(v96);
        swift_task_dealloc(v97);
        swift_task_dealloc(v98);
        swift_task_dealloc(v99);
        swift_task_dealloc(v100);
        swift_task_dealloc(v101);
        swift_task_dealloc(v102);
        swift_task_dealloc(v103);
        swift_task_dealloc(v109);
        swift_task_dealloc(v111);
        swift_task_dealloc(v113);
        swift_task_dealloc(*(_QWORD *)type);
        swift_task_dealloc(v116);
        swift_task_dealloc(v118);
        swift_task_dealloc(v120);
        swift_task_dealloc(v121);
        swift_task_dealloc(v124);
        swift_task_dealloc(v127);
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 968) + 32))(*(_QWORD *)(v0 + 976), *(_QWORD *)(v0 + 1000), *(_QWORD *)(v0 + 960));
      v57 = sub_100736D18;
      return swift_task_switch(v57, 0, 0);
    }
    v40 = *(_QWORD *)(v0 + 1032);
    v41 = *(_QWORD *)(v0 + 1016);
    v42 = *(_QWORD *)(v0 + 992);
    v43 = *(_QWORD *)(v0 + 968);
    v44 = *(_QWORD *)(v0 + 960);
    v45 = *(_QWORD *)(v0 + 952);
    v46 = *(_QWORD *)(v0 + 944);
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
    v47(v42, *(_QWORD *)(v0 + 1024), v44);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v41, v42, v44);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v41, 0, 1, v44);
    v48 = v45 + *(int *)(v46 + 48);
    sub_10004A160(v41, v45, &qword_1011A1440);
    sub_10004A160(v40, v48, &qword_1011A1440);
    if (v39(v45, 1, v44) == 1)
    {
      v49 = *(_QWORD *)(v0 + 960);
      sub_10004FF60(*(_QWORD *)(v0 + 1016), &qword_1011A1440);
      if (v39(v48, 1, v49) == 1)
      {
        v50 = *(_QWORD *)(v0 + 968);
        sub_10004FF60(*(_QWORD *)(v0 + 952), &qword_1011A1440);
        (*(void (**)(_QWORD, _QWORD))(v50 + 8))(*(_QWORD *)(v0 + 992), *(_QWORD *)(v0 + 960));
        goto LABEL_22;
      }
    }
    else
    {
      v51 = *(_QWORD *)(v0 + 960);
      sub_10004A160(*(_QWORD *)(v0 + 952), *(_QWORD *)(v0 + 1008), &qword_1011A1440);
      v52 = v39(v48, 1, v51);
      v53 = *(_QWORD *)(v0 + 1016);
      v54 = *(_QWORD *)(v0 + 1008);
      if (v52 != 1)
      {
        v77 = *(_QWORD *)(v0 + 984);
        v78 = *(_QWORD *)(v0 + 968);
        v79 = *(_QWORD *)(v0 + 960);
        v80 = *(_QWORD *)(v0 + 952);
        v47(v77, v48, v79);
        v81 = sub_100048748(&qword_1011A2578, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
        v82 = dispatch thunk of static Equatable.== infix(_:_:)(v54, v77, v79, v81);
        v83 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
        v83(v77, v79);
        sub_10004FF60(v53, &qword_1011A1440);
        v83(v54, v79);
        sub_10004FF60(v80, &qword_1011A1440);
        if ((v82 & 1) != 0)
        {
          v83(*(_QWORD *)(v0 + 992), *(_QWORD *)(v0 + 960));
          goto LABEL_22;
        }
LABEL_17:
        v57 = sub_10073650C;
        return swift_task_switch(v57, 0, 0);
      }
      v55 = *(_QWORD *)(v0 + 968);
      v56 = *(_QWORD *)(v0 + 960);
      sub_10004FF60(*(_QWORD *)(v0 + 1016), &qword_1011A1440);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    }
    sub_10004FF60(*(_QWORD *)(v0 + 952), &qword_1011C5B20);
    goto LABEL_17;
  }
  v119 = v11;
  v115 = v13;
  v117 = v14;
  v15 = *(_OWORD *)(v0 + 832);
  *(_OWORD *)(v0 + 704) = *(_OWORD *)(v0 + 816);
  *(_OWORD *)(v0 + 720) = v15;
  *(_OWORD *)(v0 + 736) = *(_OWORD *)(v0 + 848);
  *(_QWORD *)(v0 + 752) = *(_QWORD *)(v0 + 864);
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v16 = *(_QWORD *)(v0 + 1136);
  v17 = *(_QWORD *)(v0 + 1128);
  v18 = *(_QWORD *)(v0 + 1120);
  v19 = *(_QWORD *)(v0 + 1112);
  v20 = type metadata accessor for Logger(0);
  sub_100048B14(v20, (uint64_t)qword_10124DDD0);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v16, v19);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v107 = *(_QWORD *)(v0 + 1128);
    v24 = *(_QWORD *)(v0 + 1056);
    v106 = *(_QWORD *)(v0 + 1048);
    v105 = *(_QWORD *)(v0 + 1040);
    v110 = *(_QWORD *)(v0 + 1112);
    v108 = *(_QWORD *)(v0 + 1120);
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v112 = swift_slowAlloc(32, -1);
    v128 = v112;
    *(_DWORD *)v25 = 136315138;
    CoverArtworkRecipe.expressionID.getter();
    v26 = sub_100048748(&qword_1011C67D0, (uint64_t (*)(uint64_t))&type metadata accessor for CoverArtworkRecipe.ExpressionID, (uint64_t)&protocol conformance descriptor for CoverArtworkRecipe.ExpressionID);
    v27 = dispatch thunk of CustomStringConvertible.description.getter(v105, v26);
    log = v22;
    v29 = v28;
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v24, v105);
    *(_QWORD *)(v0 + 880) = sub_100322200(v27, v29, &v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 880, v0 + 888);
    v30 = swift_bridgeObjectRelease();
    v31 = *(void (**)(uint64_t, uint64_t, __n128))(v108 + 8);
    v31(v107, v110, v30);
    _os_log_impl((void *)&_mh_execute_header, log, v23, "🖼️ recipe=%s", v25, 0xCu);
    swift_arrayDestroy(v112, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v112, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {
    v31 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 1120) + 8);
    ((void (*)(_QWORD, _QWORD))v31)(*(_QWORD *)(v0 + 1128), *(_QWORD *)(v0 + 1112));

  }
  *(_QWORD *)(v0 + 1168) = v31;
  v58 = *(_QWORD *)(v0 + 1096);
  v59 = *(_QWORD *)(v0 + 1072);
  v60 = sub_100007E8C(&qword_1011B3C60);
  inited = swift_initStackObject(v60, v0 + 616);
  *(_QWORD *)(v0 + 1176) = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  v62 = *(_OWORD *)(v0 + 704);
  v63 = *(_OWORD *)(v0 + 720);
  v64 = *(_OWORD *)(v0 + 736);
  *(_QWORD *)(inited + 80) = *(_QWORD *)(v0 + 752);
  *(_OWORD *)(inited + 48) = v63;
  *(_OWORD *)(inited + 64) = v64;
  *(_OWORD *)(inited + 32) = v62;
  v8(v58, v7, v59);
  v65 = v122;
  v66 = v126;
  v67 = v119;
  v68 = v12;
  v69 = v115;
  v70 = v117;
  v72 = Playlist.name.getter(v71);
  v74 = v73;
  *(_QWORD *)(v0 + 1184) = v73;
  v10(v58, v59);
  v75 = (_QWORD *)swift_task_alloc(dword_1011E5D8C);
  *(_QWORD *)(v0 + 1192) = v75;
  *v75 = v0;
  v75[1] = sub_1007361D4;
  return static PlaylistCovers.carouselItems(from:playlistTitle:)(inited, v72, v74);
}

uint64_t sub_1007361D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1192);
  *(_QWORD *)(*v1 + 1200) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100736250, *(_QWORD *)(v2 + 1152), *(_QWORD *)(v2 + 1160));
}

uint64_t sub_100736250()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 1200);
  swift_release();
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD **)(v0 + 1200);
    v4 = v2[14];
    v3 = v2[15];
    v5 = v2[16];
    v6 = v2[17];
    v7 = v2[18];
    v28 = v2[13];
    v30 = v2[12];
    v38 = v2[4];
    v44 = (void *)v2[6];
    v46 = v2[5];
    v42 = (void *)v2[7];
    v40 = (void *)v2[8];
    v34 = (void *)v2[10];
    v36 = (void *)v2[9];
    v32 = (void *)v2[11];
    sub_1004FE614((void *)v38, v46, v44, v42, v40, v36, v34, v32);
    v26 = v3;
    v27 = v4;
    v24 = v6;
    v25 = v5;
    sub_1004FE694(v4, v3, v5, v6, v7);
  }
  else
  {
    v44 = 0;
    v46 = 0;
    v42 = 0;
    v34 = 0;
    v36 = 0;
    v30 = 0;
    v32 = 0;
    v27 = 0;
    v28 = 0;
    v25 = 0;
    v26 = 0;
    v24 = 0;
    v7 = 0;
    v38 = 1;
    v40 = 0;
  }
  v8 = *(void (**)(uint64_t, uint64_t))(v0 + 1168);
  v9 = *(_QWORD *)(v0 + 1136);
  v10 = *(_QWORD *)(v0 + 1112);
  v11 = *(_QWORD *)(v0 + 896);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100ECD900);
  v13 = swift_getKeyPath(&unk_100ECD928);
  *(_QWORD *)(v0 + 136) = v38;
  *(_QWORD *)(v0 + 144) = v46;
  *(_QWORD *)(v0 + 152) = v44;
  *(_QWORD *)(v0 + 160) = v42;
  *(_QWORD *)(v0 + 168) = v40;
  *(_QWORD *)(v0 + 176) = v36;
  *(_QWORD *)(v0 + 184) = v34;
  *(_QWORD *)(v0 + 192) = v32;
  *(_QWORD *)(v0 + 200) = v30;
  *(_QWORD *)(v0 + 208) = v28;
  *(_QWORD *)(v0 + 216) = v27;
  *(_QWORD *)(v0 + 224) = v26;
  *(_QWORD *)(v0 + 232) = v25;
  *(_QWORD *)(v0 + 240) = v24;
  *(_QWORD *)(v0 + 248) = v7;
  swift_retain();
  static Published.subscript.setter(v0 + 136, v11, KeyPath, v13);
  sub_100742B24(v0 + 760);
  v8(v9, v10);
  v14 = *(_QWORD *)(v0 + 1128);
  v15 = *(_QWORD *)(v0 + 1104);
  v16 = *(_QWORD *)(v0 + 1096);
  v17 = *(_QWORD *)(v0 + 1088);
  v18 = *(_QWORD *)(v0 + 1064);
  v19 = *(_QWORD *)(v0 + 1056);
  v20 = *(_QWORD *)(v0 + 1032);
  v21 = *(_QWORD *)(v0 + 1024);
  v22 = *(_QWORD *)(v0 + 1016);
  v29 = *(_QWORD *)(v0 + 1008);
  v31 = *(_QWORD *)(v0 + 1000);
  v33 = *(_QWORD *)(v0 + 992);
  v35 = *(_QWORD *)(v0 + 984);
  v37 = *(_QWORD *)(v0 + 976);
  v39 = *(_QWORD *)(v0 + 952);
  v41 = *(_QWORD *)(v0 + 936);
  v43 = *(_QWORD *)(v0 + 928);
  v45 = *(_QWORD *)(v0 + 920);
  v47 = *(_QWORD *)(v0 + 912);
  swift_task_dealloc(*(_QWORD *)(v0 + 1136));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10073650C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_10119C2A8 != -1)
    swift_once(&qword_10119C2A8, sub_10059BE68);
  v1 = *(_QWORD *)(v0 + 936);
  v2 = *(_QWORD *)(v0 + 920);
  v3 = xmmword_10124D388;
  v4 = 1.0 / *(double *)(v0 + 904);
  v5 = type metadata accessor for Artwork.CropStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 1, 1, v5);
  v6 = type metadata accessor for Artwork.ImageFormat(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1]);
  *(_QWORD *)(v0 + 1216) = v7;
  *v7 = v0;
  v7[1] = sub_100736618;
  return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(*(_QWORD *)(v0 + 936), *(_QWORD *)(v0 + 920), 0, 0, *(double *)&v3, *((double *)&v3 + 1), v4);
}

uint64_t sub_100736618(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;

  v3 = *v2;
  v4 = (*v2)[152];
  (*v2)[153] = a1;
  swift_task_dealloc(v4);
  v5 = v3[117];
  v6 = v3[115];
  if (v1)
  {
    swift_errorRelease(v1);
    sub_10004FF60(v6, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v5, (uint64_t *)&unk_1011A14A0);
    v7 = sub_1007366E4;
    v8 = 0;
    v9 = 0;
  }
  else
  {
    sub_10004FF60(v3[115], (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v5, (uint64_t *)&unk_1011A14A0);
    v9 = v3[145];
    v8 = v3[144];
    v7 = sub_1007369B0;
  }
  return swift_task_switch(v7, v8, v9);
}

uint64_t sub_1007366E4()
{
  uint64_t v0;

  return swift_task_switch(sub_1007366F8, *(_QWORD *)(v0 + 1152), *(_QWORD *)(v0 + 1160));
}

uint64_t sub_1007366F8()
{
  uint64_t v0;
  unsigned int (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 968) + 8))(*(_QWORD *)(v0 + 992), *(_QWORD *)(v0 + 960));
  v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1208);
  v2 = *(_QWORD *)(v0 + 1000);
  v3 = *(_QWORD *)(v0 + 960);
  sub_10004A160(*(_QWORD *)(v0 + 1032), v2, &qword_1011A1440);
  if (v1(v2, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 1000);
    swift_release();
    sub_10004FF60(v4, &qword_1011A1440);
    if (qword_10119CB10 != -1)
      swift_once(&qword_10119CB10, sub_10096883C);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100048B14(v5, (uint64_t)qword_10124DDD0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(_QWORD *)(v0 + 1032);
    if (v9)
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "🖼️ Placeholder", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    sub_10004FF60(v10, &qword_1011A1440);
    v12 = *(_QWORD *)(v0 + 1128);
    v13 = *(_QWORD *)(v0 + 1104);
    v14 = *(_QWORD *)(v0 + 1096);
    v15 = *(_QWORD *)(v0 + 1088);
    v16 = *(_QWORD *)(v0 + 1064);
    v17 = *(_QWORD *)(v0 + 1056);
    v18 = *(_QWORD *)(v0 + 1032);
    v19 = *(_QWORD *)(v0 + 1024);
    v20 = *(_QWORD *)(v0 + 1016);
    v22 = *(_QWORD *)(v0 + 1008);
    v23 = *(_QWORD *)(v0 + 1000);
    v24 = *(_QWORD *)(v0 + 992);
    v25 = *(_QWORD *)(v0 + 984);
    v26 = *(_QWORD *)(v0 + 976);
    v27 = *(_QWORD *)(v0 + 952);
    v28 = *(_QWORD *)(v0 + 936);
    v29 = *(_QWORD *)(v0 + 928);
    v30 = *(_QWORD *)(v0 + 920);
    v31 = *(_QWORD *)(v0 + 912);
    swift_task_dealloc(*(_QWORD *)(v0 + 1136));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 968) + 32))(*(_QWORD *)(v0 + 976), *(_QWORD *)(v0 + 1000), *(_QWORD *)(v0 + 960));
    return swift_task_switch(sub_100736D18, 0, 0);
  }
}

uint64_t sub_1007369B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  swift_release();
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)qword_10124DDD0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "🖼️ User upload", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(void **)(v0 + 1224);
  v36 = *(_QWORD *)(v0 + 992);
  v38 = *(_QWORD *)(v0 + 1032);
  v7 = *(_QWORD *)(v0 + 968);
  v8 = *(_QWORD *)(v0 + 960);
  v9 = *(_QWORD *)(v0 + 896);
  v10 = *(_QWORD *)(v0 + 888);

  v11 = *(void **)(v10 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_currentUserUploadImage);
  *(_QWORD *)(v10 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_currentUserUploadImage) = v6;
  v12 = v6;

  static PlaylistCovers.CarouselItem.picker.getter(v0 + 376);
  v34 = *(_OWORD *)(v0 + 392);
  v35 = *(_OWORD *)(v0 + 376);
  v32 = *(_OWORD *)(v0 + 424);
  v33 = *(_OWORD *)(v0 + 408);
  v30 = *(_OWORD *)(v0 + 456);
  v31 = *(_OWORD *)(v0 + 440);
  v29 = *(_OWORD *)(v0 + 472);
  v13 = *(_QWORD *)(v0 + 488);
  KeyPath = swift_getKeyPath(&unk_100ECD900);
  v15 = swift_getKeyPath(&unk_100ECD928);
  *(_OWORD *)(v0 + 496) = v35;
  *(_OWORD *)(v0 + 512) = v34;
  *(_OWORD *)(v0 + 528) = v33;
  *(_OWORD *)(v0 + 544) = v32;
  *(_OWORD *)(v0 + 560) = v31;
  *(_OWORD *)(v0 + 576) = v30;
  *(_OWORD *)(v0 + 592) = v29;
  *(_QWORD *)(v0 + 608) = v13;
  swift_retain();
  static Published.subscript.setter(v0 + 496, v9, KeyPath, v15);
  v16 = swift_getKeyPath(&unk_100ECD840);
  v17 = swift_getKeyPath(&unk_100ECD868);
  *(_QWORD *)(v0 + 872) = v6;
  swift_retain();
  static Published.subscript.setter(v0 + 872, v9, v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v36, v8);
  sub_10004FF60(v38, &qword_1011A1440);
  v18 = *(_QWORD *)(v0 + 1128);
  v19 = *(_QWORD *)(v0 + 1104);
  v20 = *(_QWORD *)(v0 + 1096);
  v21 = *(_QWORD *)(v0 + 1088);
  v22 = *(_QWORD *)(v0 + 1064);
  v23 = *(_QWORD *)(v0 + 1056);
  v24 = *(_QWORD *)(v0 + 1032);
  v25 = *(_QWORD *)(v0 + 1024);
  v26 = *(_QWORD *)(v0 + 1016);
  v28 = *(_QWORD *)(v0 + 1008);
  *(_QWORD *)&v29 = *(_QWORD *)(v0 + 1000);
  *(_QWORD *)&v30 = *(_QWORD *)(v0 + 992);
  *(_QWORD *)&v31 = *(_QWORD *)(v0 + 984);
  *(_QWORD *)&v32 = *(_QWORD *)(v0 + 976);
  *(_QWORD *)&v33 = *(_QWORD *)(v0 + 952);
  *(_QWORD *)&v34 = *(_QWORD *)(v0 + 936);
  *(_QWORD *)&v35 = *(_QWORD *)(v0 + 928);
  v37 = *(_QWORD *)(v0 + 920);
  v39 = *(_QWORD *)(v0 + 912);
  swift_task_dealloc(*(_QWORD *)(v0 + 1136));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100736D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_10119C2A8 != -1)
    swift_once(&qword_10119C2A8, sub_10059BE68);
  v1 = *(_QWORD *)(v0 + 928);
  v2 = *(_QWORD *)(v0 + 912);
  v3 = xmmword_10124D388;
  v4 = 1.0 / *(double *)(v0 + 904);
  v5 = type metadata accessor for Artwork.CropStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 1, 1, v5);
  v6 = type metadata accessor for Artwork.ImageFormat(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1]);
  *(_QWORD *)(v0 + 1232) = v7;
  *v7 = v0;
  v7[1] = sub_100736E24;
  return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(*(_QWORD *)(v0 + 928), *(_QWORD *)(v0 + 912), 0, 0, *(double *)&v3, *((double *)&v3 + 1), v4);
}

uint64_t sub_100736E24(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;

  v3 = *v2;
  v4 = (*v2)[154];
  (*v2)[155] = a1;
  swift_task_dealloc(v4);
  v5 = v3[116];
  v6 = v3[114];
  if (v1)
  {
    swift_errorRelease(v1);
    sub_10004FF60(v6, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v5, (uint64_t *)&unk_1011A14A0);
    v7 = sub_100736EF0;
    v8 = 0;
    v9 = 0;
  }
  else
  {
    sub_10004FF60(v3[114], (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v5, (uint64_t *)&unk_1011A14A0);
    v9 = v3[145];
    v8 = v3[144];
    v7 = sub_100737130;
  }
  return swift_task_switch(v7, v8, v9);
}

uint64_t sub_100736EF0()
{
  uint64_t v0;

  return swift_task_switch(sub_100736F04, *(_QWORD *)(v0 + 1152), *(_QWORD *)(v0 + 1160));
}

uint64_t sub_100736F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 976);
  v2 = *(_QWORD *)(v0 + 968);
  v3 = *(_QWORD *)(v0 + 960);
  v4 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v1, v3, v4);
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100048B14(v5, (uint64_t)qword_10124DDD0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 1032);
  if (v9)
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "🖼️ Placeholder", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  sub_10004FF60(v10, &qword_1011A1440);
  v12 = *(_QWORD *)(v0 + 1128);
  v13 = *(_QWORD *)(v0 + 1104);
  v14 = *(_QWORD *)(v0 + 1096);
  v15 = *(_QWORD *)(v0 + 1088);
  v16 = *(_QWORD *)(v0 + 1064);
  v17 = *(_QWORD *)(v0 + 1056);
  v18 = *(_QWORD *)(v0 + 1032);
  v19 = *(_QWORD *)(v0 + 1024);
  v20 = *(_QWORD *)(v0 + 1016);
  v22 = *(_QWORD *)(v0 + 1008);
  v23 = *(_QWORD *)(v0 + 1000);
  v24 = *(_QWORD *)(v0 + 992);
  v25 = *(_QWORD *)(v0 + 984);
  v26 = *(_QWORD *)(v0 + 976);
  v27 = *(_QWORD *)(v0 + 952);
  v28 = *(_QWORD *)(v0 + 936);
  v29 = *(_QWORD *)(v0 + 928);
  v30 = *(_QWORD *)(v0 + 920);
  v31 = *(_QWORD *)(v0 + 912);
  swift_task_dealloc(*(_QWORD *)(v0 + 1136));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100737130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  swift_release();
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)qword_10124DDD0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "🖼️ tracksTiledArtwork", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(void **)(v0 + 1240);
  v33 = *(_QWORD *)(v0 + 1032);
  v7 = *(_QWORD *)(v0 + 976);
  v8 = *(_QWORD *)(v0 + 968);
  v9 = *(_QWORD *)(v0 + 960);
  v10 = *(_QWORD *)(v0 + 896);

  static PlaylistCovers.CarouselItem.tracksTiled(image:)(v6, v0 + 256);
  v32 = *(_OWORD *)(v0 + 256);
  v30 = *(_OWORD *)(v0 + 288);
  v31 = *(_OWORD *)(v0 + 272);
  v28 = *(_OWORD *)(v0 + 320);
  v29 = *(_OWORD *)(v0 + 304);
  v26 = *(_OWORD *)(v0 + 352);
  v27 = *(_OWORD *)(v0 + 336);
  v11 = *(_QWORD *)(v0 + 368);
  KeyPath = swift_getKeyPath(&unk_100ECD900);
  v13 = swift_getKeyPath(&unk_100ECD928);
  *(_OWORD *)(v0 + 16) = v32;
  *(_OWORD *)(v0 + 32) = v31;
  *(_OWORD *)(v0 + 48) = v30;
  *(_OWORD *)(v0 + 64) = v29;
  *(_OWORD *)(v0 + 80) = v28;
  *(_OWORD *)(v0 + 96) = v27;
  *(_OWORD *)(v0 + 112) = v26;
  *(_QWORD *)(v0 + 128) = v11;
  swift_retain();
  static Published.subscript.setter(v0 + 16, v10, KeyPath, v13);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  sub_10004FF60(v33, &qword_1011A1440);
  v14 = *(_QWORD *)(v0 + 1128);
  v15 = *(_QWORD *)(v0 + 1104);
  v16 = *(_QWORD *)(v0 + 1096);
  v17 = *(_QWORD *)(v0 + 1088);
  v18 = *(_QWORD *)(v0 + 1064);
  v19 = *(_QWORD *)(v0 + 1056);
  v20 = *(_QWORD *)(v0 + 1032);
  v21 = *(_QWORD *)(v0 + 1024);
  v22 = *(_QWORD *)(v0 + 1016);
  v24 = *(_QWORD *)(v0 + 1008);
  v25 = *(_QWORD *)(v0 + 1000);
  *(_QWORD *)&v26 = *(_QWORD *)(v0 + 992);
  *(_QWORD *)&v27 = *(_QWORD *)(v0 + 984);
  *(_QWORD *)&v28 = *(_QWORD *)(v0 + 976);
  *(_QWORD *)&v29 = *(_QWORD *)(v0 + 952);
  *(_QWORD *)&v30 = *(_QWORD *)(v0 + 936);
  *(_QWORD *)&v31 = *(_QWORD *)(v0 + 928);
  *(_QWORD *)&v32 = *(_QWORD *)(v0 + 920);
  v34 = *(_QWORD *)(v0 + 912);
  swift_task_dealloc(*(_QWORD *)(v0 + 1136));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10073742C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[8];
  __int128 v47;
  __int128 v48;
  __int128 v49;

  v2 = type metadata accessor for CoverArtworkRecipe.ExpressionID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = CoverArtworkRecipe.version.getter(v4);
  if (v7 == 3157553 && v8 == 0xE300000000000000)
  {
    v9 = swift_bridgeObjectRelease();
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 3157553, 0xE300000000000000, 0);
    v9 = swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      v38 = 0;
      v12 = 0uLL;
      goto LABEL_13;
    }
  }
  v11 = CoverArtworkRecipe.backgroundColor.getter(v9);
  v12 = 0uLL;
  if (!v11)
  {
    v38 = 0;
LABEL_13:
    v39 = 0uLL;
    v40 = 0uLL;
    goto LABEL_19;
  }
  v13 = (void *)v11;
  v14 = CoverArtworkRecipe.primaryColor.getter();
  if (!v14)
  {

LABEL_18:
    v38 = 0;
    v39 = 0uLL;
    v40 = 0uLL;
    v12 = 0uLL;
    goto LABEL_19;
  }
  v15 = (void *)v14;
  v16 = CoverArtworkRecipe.secondaryColor.getter();
  if (!v16)
  {

    goto LABEL_18;
  }
  v17 = (void *)v16;
  v18 = CoverArtworkRecipe.tertiaryColor.getter();
  if (!v18)
  {

    goto LABEL_18;
  }
  v19 = (void *)v18;
  v20 = CoverArtworkRecipe.expressionID.getter();
  v21 = CoverArtworkRecipe.ExpressionID.rawValue.getter(v20);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  if ((unint64_t)(v21 - 1) >= 8)
  {

    goto LABEL_18;
  }
  v45 = v21 - 1;
  v22 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v13);
  objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v15);
  objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v17);
  objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v19);
  UIScreen.Dimensions.size.getter(v22);
  v24 = v23;
  v43 = v25;
  v44 = v23;
  v26 = v25;
  v28 = v27;
  v42 = v27;
  v30 = v29;
  PlaylistCovers.Specs.coverSize.unsafeMutableAddressor();
  sub_10004A07C(0, (unint64_t *)&qword_10119E590, UIGraphicsImageRendererFormat_ptr);
  v31 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  v32 = v28;
  v33 = v45;
  PlaylistCovers.Expression.generate(size:colors:graphicsFormat:)(v24, v26, v32, v30, (uint64_t)v31, v45);
  v35 = v34;
  v37 = v36;

  PlaylistCovers.Cover.Representation.init(expression:backgroundImage:recipeColors:textColor:)(v33, v35, v44, v43, v42, v30, v37, (uint64_t)v46);
  v38 = v46[0];
  v12 = v47;
  v39 = v48;
  v40 = v49;
LABEL_19:
  *(_QWORD *)a1 = v38;
  *(_OWORD *)(a1 + 8) = v12;
  *(_OWORD *)(a1 + 24) = v39;
  *(_OWORD *)(a1 + 40) = v40;
}

void sub_100737720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___musicPickerDataSource;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___musicPickerDataSource))
    goto LABEL_7;
  (*(void (**)(char *, uint64_t, __n128))(v3 + 16))(v6, v1 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist, v4);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_dataSource);
  if (v8)
  {
    v9 = *(_QWORD *)(v8 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsViewModel);
    swift_retain();
  }
  else
  {
    v9 = 0;
  }
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController);
  if (v10)
  {
    v11 = type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource(0);
    swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    swift_retain();
    v12 = sub_1007426D8((uint64_t)v6, v9, v10);
    swift_release();
    swift_release();
    *(_QWORD *)(v1 + v7) = v12;
    swift_retain();
    swift_release();
LABEL_7:
    swift_retain();
    return;
  }
  __break(1u);
}

id sub_100737868()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD v15[2];

  v1 = OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___musicPickerHostingView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___musicPickerHostingView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___musicPickerHostingView);
  }
  else
  {
    v4 = v0;
    sub_100737720();
    v6 = v5;
    v7 = type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource(0);
    v8 = sub_100048748(&qword_1011C6620, type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource, (uint64_t)&unk_100ECD5C8);
    v15[0] = ObservedObject.init(wrappedValue:)(v6, v7, v8);
    v15[1] = v9;
    v10 = objc_allocWithZone((Class)sub_100007E8C((uint64_t *)&unk_1011C6780));
    v11 = (void *)_UIHostingView.init(rootView:)(v15);
    v12 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v11;
    v3 = v11;

    v2 = 0;
  }
  v13 = v2;
  return v3;
}

uint64_t sub_10073792C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  unsigned int v16;
  uint64_t (*v17)(char *, char *, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  id v23;
  uint64_t KeyPath;
  uint64_t v25;
  char v27;
  __n128 v28;
  uint64_t (*v29)(char *, char *, uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  char v40;
  char *v41;
  uint64_t v42;
  int v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  void (*v49)(char *, uint64_t);
  char *v50;
  void *v51;
  BOOL v52;
  uint64_t v53;
  char *v54;
  uint64_t (*v55)(char *, char *, uint64_t, __n128);
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v53 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - v10;
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v15 = (char *)&v53 - v14;
  v16 = objc_msgSend(v1, "isEditing", v13);
  if (v16)
  {
    v17 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v3 + 16);
    v56 = &v1[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist];
    v54 = v5;
    v55 = v17;
    v18.n128_f64[0] = ((double (*)(char *))v17)(v15);
    v19 = Playlist.name.getter(v18);
    v21 = v20;
    v22 = *(void (**)(char *, uint64_t))(v3 + 8);
    v22(v15, v2);
    v23 = sub_100734B54();
    KeyPath = swift_getKeyPath(&unk_100ECD720);
    v25 = swift_getKeyPath(&unk_100ECD748);
    static Published.subscript.getter(&v57, v23, KeyPath, v25);
    swift_release();
    swift_release();
    swift_release();
    if (v19 == v57 && v21 == v58)
    {
      v28 = swift_bridgeObjectRelease_n(v21, 2);
    }
    else
    {
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v57, v58, 0);
      swift_bridgeObjectRelease();
      v28 = swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
        goto LABEL_21;
    }
    v29 = v55;
    v30 = v55(v11, v56, v2, v28);
    v31 = Playlist.standardDescription.getter(v30);
    v33 = v32;
    v22(v11, v2);
    if (v33)
      v34 = v31;
    else
      v34 = 0;
    if (v33)
      v35 = v33;
    else
      v35 = 0xE000000000000000;
    v36 = sub_100734B54();
    v37 = swift_getKeyPath(&unk_100ECD768);
    v38 = swift_getKeyPath(&unk_100ECD790);
    static Published.subscript.getter(&v57, v36, v37, v38);
    swift_release();
    swift_release();
    swift_release();
    if (v34 == v57 && v35 == v58)
    {
      v39 = swift_bridgeObjectRelease_n(v35, 2);
    }
    else
    {
      v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v57, v58, 0);
      swift_bridgeObjectRelease();
      v39 = swift_bridgeObjectRelease();
      if ((v40 & 1) == 0)
      {
LABEL_21:
        LOBYTE(v16) = 1;
        return v16 & 1;
      }
    }
    v41 = v56;
    v42 = v29(v8, v56, v2, v39);
    v43 = Playlist.isVisible.getter(v42);
    v22(v8, v2);
    v44 = sub_100734B54();
    v45 = swift_getKeyPath(&unk_100ECD7B0);
    v46 = swift_getKeyPath(&unk_100ECD7D8);
    static Published.subscript.getter(&v57, v44, v45, v46);
    swift_release();
    swift_release();
    v47 = swift_release();
    if (v43 == 2 || ((v43 ^ v57) & 1) != 0)
      goto LABEL_21;
    v49 = v22;
    v50 = v54;
    v29(v54, v41, v2, v47);
    v51 = sub_100731EDC();
    v49(v50, v2);
    v52 = sub_10075C50C(0, (uint64_t)v51);
    swift_bridgeObjectRelease();
    LOBYTE(v16) = 0;
    if (v52)
      LOBYTE(v16) = sub_100737CDC();
  }
  return v16 & 1;
}

uint64_t sub_100737CDC()
{
  uint64_t v0;
  id v1;
  uint64_t KeyPath;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  char v55;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  char v104;
  id v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  void *v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  char v157[8];
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  _QWORD v164[8];

  v1 = sub_100734B54();
  KeyPath = swift_getKeyPath(&unk_100ECD900);
  v3 = swift_getKeyPath(&unk_100ECD928);
  static Published.subscript.getter(&v137, v1, KeyPath, v3);
  swift_release();
  swift_release();
  swift_release();
  v4 = v137;
  v128 = v138;
  v129 = v140;
  v130 = v141;
  v131 = v139;
  v132 = v142;
  v133 = v143;
  v134 = v144;
  v135 = v145;
  v136 = v146;
  v125 = v148;
  v126 = v147;
  v123 = v150;
  v124 = v149;
  v122 = v151;
  v88 = v0;
  v5 = sub_100734B54();
  v6 = swift_getKeyPath(&unk_100ECD7F8);
  v7 = swift_getKeyPath(&unk_100ECD820);
  static Published.subscript.getter(&v137, v5, v6, v7);
  swift_release();
  swift_release();
  swift_release();
  v8 = v138;
  v9 = v139;
  v10 = v140;
  v12 = v141;
  v11 = v142;
  v13 = v143;
  v14 = v144;
  v15 = v145;
  v16 = v146;
  v118 = v148;
  v119 = v147;
  v116 = v150;
  v117 = v149;
  v115 = v151;
  v127 = v137;
  if (v137 == (void *)1)
  {
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
  }
  else
  {
    v26 = v146;
    v27 = v145;
    v28 = v4;
    v29 = v138;
    v30 = v139;
    v31 = v142;
    v32 = v143;
    v33 = v144;
    sub_1004FE614(v137, v138, v139, v140, v141, v142, v143, v144);
    v11 = v31;
    v13 = v32;
    v14 = v33;
    v9 = v30;
    v8 = v29;
    v4 = v28;
    v15 = v27;
    v16 = v26;
    v17 = v8;
    v18 = v9;
    v19 = v10;
    v20 = v12;
    v21 = v11;
    v22 = v32;
    v23 = v14;
    v24 = v15;
    v25 = v16;
  }
  v120 = v10;
  v121 = v12;
  if (v4 == (void *)1)
  {
    v38 = 0;
    v34 = 0;
    v39 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = 0;
    v44 = 0;
    v45 = 0;
  }
  else
  {
    v100 = v19;
    v102 = v18;
    v90 = v25;
    v93 = v24;
    v106 = v13;
    v109 = v11;
    v84 = v15;
    v34 = v131;
    v35 = v9;
    v96 = v21;
    v98 = v20;
    v112 = v14;
    v36 = v22;
    v37 = v23;
    sub_1004FE614(v4, v128, v131, v129, v130, v132, v133, v134);
    v25 = v90;
    v24 = v93;
    v23 = v37;
    v22 = v36;
    v21 = v96;
    v20 = v98;
    v19 = v100;
    v18 = v102;
    v9 = v35;
    v38 = v128;
    v15 = v84;
    v11 = v109;
    v14 = v112;
    v39 = v129;
    v40 = v130;
    v41 = v132;
    v13 = v106;
    v42 = v133;
    v43 = v134;
    v44 = v135;
    v45 = v136;
  }
  v137 = v127;
  v138 = v17;
  v139 = v18;
  v140 = v19;
  v141 = v20;
  v142 = v21;
  v143 = v22;
  v144 = v23;
  v145 = v24;
  v146 = v25;
  v147 = (uint64_t)v4;
  v148 = v38;
  v149 = (uint64_t)v34;
  v150 = (uint64_t)v39;
  v151 = (uint64_t)v40;
  v152 = v41;
  v153 = v42;
  v154 = v43;
  v155 = v44;
  v156 = v45;
  if (!v127)
  {
    if (!v4)
    {
      v47 = v9;
      v107 = v13;
      v110 = v11;
      v113 = v14;
      v48 = *(void **)(v88 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_currentUserUploadImage);
      v49 = v48;
      v50 = sub_100734B54();
      v51 = swift_getKeyPath(&unk_100ECD840);
      v52 = swift_getKeyPath(&unk_100ECD868);
      static Published.subscript.getter(v164, v50, v51, v52);
      swift_release();
      swift_release();
      swift_release();
      v53 = (void *)v164[0];
      if (v48)
      {
        if (v164[0])
        {
          sub_10004A07C(0, (unint64_t *)&qword_1011A2360, UIImage_ptr);
          v54 = v49;
          v55 = static NSObject.== infix(_:_:)(v54, v53);
          sub_1001666B8(0, v8, v47, v120, v121, v110, v107, v113, v15, v16, v119, v118, v117, v116, v115);
          sub_1001666B8(0, v128, v131, v129, v130, v132, v133, v134, v135, v136, v126, v125, v124, v123, v122);
          sub_1007420D0((uint64_t)&v137);

          v46 = v55 ^ 1;
          return v46 & 1;
        }
        v66 = v49;
        sub_1001666B8(0, v8, v47, v120, v121, v110, v107, v113, v15, v16, v119, v118, v117, v116, v115);
        sub_1001666B8(0, v128, v131, v129, v130, v132, v133, v134, v135, v136, v126, v125, v124, v123, v122);
        sub_1007420D0((uint64_t)&v137);

      }
      else
      {
        sub_1001666B8(0, v8, v47, v120, v121, v110, v107, v113, v15, v16, v119, v118, v117, v116, v115);
        sub_1001666B8(0, v128, v131, v129, v130, v132, v133, v134, v135, v136, v126, v125, v124, v123, v122);
        sub_1007420D0((uint64_t)&v137);
        if (!v53)
          goto LABEL_30;

      }
LABEL_22:
      v46 = 1;
      return v46 & 1;
    }
    if (v4 == (void *)1)
    {
      sub_1001666B8(0, v8, v9, v120, v121, v11, v13, v14, v15, v16, v119, v118, v117, v116, v115);
      v46 = 1;
      sub_1001666B8((void *)1, v128, v131, v129, v130, v132, v133, v134, v135, v136, v126, v125, v124, v123, v122);
      sub_1007420D0((uint64_t)&v137);
      return v46 & 1;
    }
    sub_1001666B8(0, v8, v9, v120, v121, v11, v13, v14, v15, v16, v119, v118, v117, v116, v115);
    sub_1001666B8(v4, v128, v131, v129, v130, v132, v133, v134, v135, v136, v126, v125, v124, v123, v122);
LABEL_21:
    sub_1007420D0((uint64_t)&v137);
    goto LABEL_22;
  }
  if (v127 != (void *)1)
  {
    if (v4)
    {
      if (v4 == (void *)1)
      {
        sub_1001666B8(v127, v8, v9, v120, v121, v11, v13, v14, v15, v16, v119, v118, v117, v116, v115);
        v46 = 1;
        sub_1001666B8((void *)1, v128, v131, v129, v130, v132, v133, v134, v135, v136, v126, v125, v124, v123, v122);
        sub_1007420D0((uint64_t)&v137);
        return v46 & 1;
      }
      v77 = v9;
      v101 = v19;
      v103 = v18;
      v97 = v21;
      v80 = v22;
      v81 = v23;
      v86 = v38;
      v87 = v40;
      v83 = v41;
      v85 = v39;
      v82 = v42;
      if (v18)
      {
        v108 = v13;
        v111 = v11;
        v114 = v14;
        v99 = v20;
        if (v34)
        {
          LOBYTE(v164[0]) = v38;
          v164[1] = v34;
          v164[2] = v39;
          v164[3] = v40;
          v164[4] = v41;
          v164[5] = v42;
          v164[6] = v43;
          v157[0] = v17;
          v158 = v18;
          v159 = v19;
          v160 = v20;
          v161 = v21;
          v162 = v22;
          v163 = v23;
          v78 = v34;
          v91 = v25;
          v94 = v24;
          v57 = v20;
          v58 = v41;
          v59 = v42;
          sub_1001667D4(v17, v18, v19, v57, v21, v22, v23);
          sub_1001667D4(v86, v78, v85, v87, v58, v59, v43);
          sub_1001667D4(v17, v103, v101, v99, v97, v80, v81);
          sub_100742190(v127, v17, v103, v101, v99, v97, v80, v81);
          sub_100742190(v4, v86, v78, v85, v87, v83, v82, v43);
          v104 = static PlaylistCovers.Cover.Representation.== infix(_:_:)(v157, v164);
          sub_100742178(v4, v86, v78, v85, v87, v83, v82, v43, v44, v45);
          sub_100742178(v127, v17, v103, v101, v99, v97, v80, v81, v94, v91);
          sub_1001666B8(v127, v8, v77, v120, v121, v111, v108, v114, v15, v16, v119, v118, v117, v116, v115);
          sub_1001666B8(v4, v128, v131, v129, v130, v132, v133, v134, v135, v136, v126, v125, v124, v123, v122);
          sub_1007420D0((uint64_t)&v137);
          sub_100166720(v86, v78, v85, v87, v83, v82, v43);
          sub_100166720(v17, v103, v101, v99, v97, v80, v81);
          sub_100166720(v17, v103, v101, v99, v97, v80, v81);
          v46 = v104 ^ 1;
          return v46 & 1;
        }
        v67 = v19;
        v68 = v21;
        v105 = v18;
        v95 = v67;
        v92 = v20;
        v89 = v68;
        v76 = v80;
        v69 = v81;
        v70 = v105;
        v71 = v95;
        v72 = v92;
        v73 = v89;
        v74 = v76;
        v75 = v69;
        v65 = 0;
        sub_1001666B8(v127, v8, v77, v120, v121, v111, v108, v114, v15, v16, v119, v118, v117, v116, v115);
        sub_1001666B8(v4, v128, v131, v129, v130, v132, v133, v134, v135, v136, v126, v125, v124, v123, v122);
        sub_1007420D0((uint64_t)&v137);
        sub_100166720(v17, v103, v101, v20, v68, v80, v81);
        goto LABEL_33;
      }
      v60 = v34;
      v61 = v11;
      v79 = v34;
      v62 = v13;
      v63 = v14;
      sub_1001667D4(v38, v60, v39, v40, v41, v42, v43);
      v64 = v62;
      v65 = v79;
      sub_1001666B8(v127, v8, v77, v120, v121, v61, v64, v63, v15, v16, v119, v118, v117, v116, v115);
      sub_1001666B8(v4, v128, v131, v129, v130, v132, v133, v134, v135, v136, v126, v125, v124, v123, v122);
      sub_1007420D0((uint64_t)&v137);
      if (v79)
      {
LABEL_33:
        sub_100166720(v17, v103, v101, v20, v97, v80, v81);
        sub_100166720(v86, v65, v85, v87, v83, v82, v43);
        goto LABEL_22;
      }
LABEL_30:
      v46 = 0;
      return v46 & 1;
    }
    sub_1001666B8(v127, v8, v9, v120, v121, v11, v13, v14, v15, v16, v119, v118, v117, v116, v115);
    sub_1001666B8(0, v128, v131, v129, v130, v132, v133, v134, v135, v136, v126, v125, v124, v123, v122);
    goto LABEL_21;
  }
  sub_1001666B8((void *)1, v8, v9, v120, v121, v11, v13, v14, v15, v16, v119, v118, v117, v116, v115);
  sub_1001666B8(v4, v128, v131, v129, v130, v132, v133, v134, v135, v136, v126, v125, v124, v123, v122);
  sub_1007420D0((uint64_t)&v137);
  v46 = v4 != (void *)1;
  return v46 & 1;
}

uint64_t sub_1007389CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C(&qword_1011C6760);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___headerRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___headerRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, &qword_1011C6760);
  v10 = sub_100007E8C(&qword_1011C63A0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, &qword_1011C6760);
  v12 = (uint64_t *)UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  v13 = *v12;
  v14 = v12[1];
  v15 = swift_allocObject(&unk_1010D98B8, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  swift_bridgeObjectRetain();
  v16 = sub_100007E8C(&qword_1011C6768);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v13, v14, sub_100741EB4, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, &qword_1011C6760);
  return swift_endAccess(v18);
}

void sub_100738BAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  _OWORD v13[9];
  uint64_t v14;
  uint64_t v15[19];
  _BYTE v16[152];
  _BYTE v17[152];
  _BYTE v18[24];
  _OWORD v19[9];
  uint64_t v20;

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = Strong + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataView;
    sub_100065228(Strong + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataView, (uint64_t)v16, &qword_1011C65E8);
    sub_100065228((uint64_t)v16, (uint64_t)v17, &qword_1011C65E8);
    if (sub_100741EBC((uint64_t)v17) == 1)
    {
      v10 = sub_100734B54();
      sub_1004FECD0((uint64_t)v10, (uint64_t)v19);
      v13[6] = v19[6];
      v13[7] = v19[7];
      v13[8] = v19[8];
      v14 = v20;
      v13[2] = v19[2];
      v13[3] = v19[3];
      v13[4] = v19[4];
      v13[5] = v19[5];
      v13[0] = v19[0];
      v13[1] = v19[1];
      UIScreen.Dimensions.size.getter(v13);
      sub_100065228(v9, (uint64_t)v15, &qword_1011C65E8);
      sub_100065228((uint64_t)v13, v9, &qword_1011C65E8);
      sub_1004FDEEC(v19);
      sub_100741ED4(v15);
      sub_100740090((uint64_t)v19, v8);
      v11 = *(void **)&v8[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataHeaderView];
      *(_QWORD *)&v8[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataHeaderView] = a1;
      v12 = a1;

      sub_100741FFC(v19);
    }

  }
}

uint64_t sub_100738D04@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE v17[24];
  char v18[24];

  v3 = sub_100007E8C(&qword_1011C6738);
  __chkstk_darwin(v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v17[-v7];
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___cellRegistration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___cellRegistration], v18, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, &qword_1011C6738);
  v10 = sub_100007E8C(qword_1011C63B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, &qword_1011C6738);
  v12 = swift_allocObject(&unk_1010D9AE8, 24, 7);
  *(_QWORD *)(v12 + 16) = v1;
  v13 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v14 = type metadata accessor for Playlist.Entry(0);
  v15 = v1;
  UICollectionView.CellRegistration.init(handler:)(sub_100741E80, v12, v13, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v17, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, &qword_1011C6738);
  return swift_endAccess(v17);
}

uint64_t sub_100738EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[16];
  uint64_t v52;
  _QWORD v53[5];

  v49 = a4;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A1760);
  v7 = __chkstk_darwin(v6);
  v47 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for UICellAccessory.ReorderOptions(0, v7);
  v46 = *(_QWORD *)(v48 - 8);
  v9 = __chkstk_darwin(v48);
  v45 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for UICellAccessory.MultiselectOptions(0, v9);
  v44 = *(_QWORD *)(v42 - 8);
  v11 = __chkstk_darwin(v42);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UICellAccessory.DisplayedState(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011C6740);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a3;
  v22 = type metadata accessor for PlaylistEditingViewController.Cell(0);
  v23 = sub_100048748(&qword_1011C6748, type metadata accessor for PlaylistEditingViewController.Cell, (uint64_t)&unk_100ECDB24);
  v24 = UIHostingConfiguration<>.init(content:)(sub_100741E88, v51, v22, v23);
  v25 = static Edge.Set.vertical.getter(v24);
  v53[3] = v18;
  v53[4] = sub_100049F28((unint64_t *)&unk_1011C6750, &qword_1011C6740, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
  sub_100049F68(v53);
  UIHostingConfiguration.margins(_:_:)(v25, v18, 4.0);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v50 = a1;
  UICollectionViewCell.contentConfiguration.setter(v53);
  v26 = sub_100007E8C((uint64_t *)&unk_1011AD790);
  v27 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
  v28 = swift_allocObject(v26, ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ 2 * *(_QWORD *)(v27 + 72), *(unsigned __int8 *)(v27 + 80) | 7);
  *(_OWORD *)(v28 + 16) = xmmword_100EA7A80;
  v29 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  v43 = v15;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v31 = v14;
  v30(v17, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v14);
  if (qword_10119B930 != -1)
    swift_once(&qword_10119B930, sub_10010944C);
  v32 = v42;
  v33 = sub_100048B14(v42, (uint64_t)qword_10124C890);
  v34 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v13, v33, v32);
  static UICellAccessory.multiselect(displayed:options:)(v17, v13);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v32);
  v35 = *(void (**)(char *, uint64_t))(v43 + 8);
  v35(v17, v31);
  v30(v17, v29, v31);
  v36 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v37 = v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v47, 1, 1, v36);
  v38 = v45;
  UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)(2, v37, 0, 2);
  static UICellAccessory.reorder(displayed:options:)(v17, v38);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v48);
  v35(v17, v31);
  UICollectionViewListCell.accessories.setter(v28);
  v39 = swift_allocObject(&unk_1010D98B8, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16);
  return UICollectionViewCell.configurationUpdateHandler.setter(sub_100741EA4, v39);
}

uint64_t sub_1007392DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  v5 = (_QWORD *)(a2 + *(int *)(type metadata accessor for PlaylistEditingViewController.Cell(0) + 20));
  *v5 = swift_getKeyPath(&unk_100ECD8D0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  return swift_storeEnumTagMultiPayload(v5, v6, 0);
}

uint64_t sub_100739354(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(char *, uint64_t);
  id v21;
  id v22;
  id v23;
  double v24;
  double MinX;
  void (*v26)(_QWORD *, _QWORD);
  uint64_t v27;
  void (*v28)(_QWORD *, _QWORD);
  uint64_t v29;
  id v30;
  _QWORD v31[5];
  _BYTE v32[24];
  CGRect v33;

  v6 = sub_100007E8C(&qword_1011AD7F0);
  __chkstk_darwin(v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIBackgroundConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v31 - v14;
  a3 += 16;
  swift_beginAccess(a3, v32, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v17 = (void *)result;
    static UIBackgroundConfiguration.listCell()(result);
    v18 = type metadata accessor for UICellConfigurationState(0);
    v31[3] = v18;
    v31[4] = &protocol witness table for UICellConfigurationState;
    v19 = sub_100049F68(v31);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, a2, v18);
    UIBackgroundConfiguration.updated(for:)(v31);
    v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v12, v9);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v31);
    v21 = objc_msgSend(v17, "traitCollection");
    v22 = objc_msgSend(v21, "userInterfaceIdiom");

    if (v22 == (id)6)
    {
      v23 = sub_100733A54();
      objc_msgSend(v23, "directionalLayoutMargins");
      MinX = v24;

    }
    else
    {
      objc_msgSend(a1, "frame");
      MinX = CGRectGetMinX(v33);
    }
    v26 = (void (*)(_QWORD *, _QWORD))UIBackgroundConfiguration.backgroundInsets.modify(v31);
    *(double *)(v27 + 8) = *(double *)(v27 + 8) - MinX;
    v26(v31, 0);
    v28 = (void (*)(_QWORD *, _QWORD))UIBackgroundConfiguration.backgroundInsets.modify(v31);
    *(double *)(v29 + 24) = *(double *)(v29 + 24) - MinX;
    v28(v31, 0);
    v30 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    UIBackgroundConfiguration.backgroundColor.setter(v30);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    UICollectionViewCell.backgroundConfiguration.setter(v8);

    return ((uint64_t (*)(char *, uint64_t))v20)(v15, v9);
  }
  return result;
}

uint64_t sub_1007395EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t OpaqueTypeConformance2;
  uint64_t *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char *v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  char *v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t KeyPath;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v152;
  uint64_t *v153;
  uint64_t *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char v195;
  char v196[8];
  _OWORD v197[7];

  v184 = a1;
  v183 = sub_100007E8C(&qword_1011C6930);
  __chkstk_darwin(v183);
  v154 = (uint64_t *)((char *)&v152 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v179 = sub_100007E8C(&qword_1011C6938);
  __chkstk_darwin(v179);
  v181 = (uint64_t)&v152 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = sub_100007E8C(&qword_1011C6940);
  __chkstk_darwin(v180);
  v153 = (uint64_t *)((char *)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100007E8C(&qword_1011C6948);
  __chkstk_darwin(v5);
  v182 = (char *)&v152 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for DynamicTypeSize(0);
  v176 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v177 = (uint64_t)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011B8D50);
  v9 = __chkstk_darwin(v8);
  v167 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for Text.Suffix(0, v9);
  v171 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v169 = (char *)&v152 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_100007E8C(&qword_1011A5320);
  v175 = *(_QWORD *)(v185 - 8);
  __chkstk_darwin(v185);
  v173 = (char *)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_100007E8C(&qword_1011C6950);
  __chkstk_darwin(v168);
  v174 = (char *)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_100007E8C(&qword_1011C6958);
  __chkstk_darwin(v170);
  v187 = (uint64_t)&v152 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v157 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v16 = (char *)&v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v20);
  v22 = (char *)&v152 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v152 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v158 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v29 = (char *)&v152 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v164 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v31 = (char *)&v152 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v161 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v156 = (char *)&v152 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v160);
  v155 = (char *)&v152 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_100007E8C((uint64_t *)&unk_1011C6970);
  __chkstk_darwin(v166);
  v165 = (uint64_t)&v152 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100007E8C(&qword_1011BE1C8);
  __chkstk_darwin(v35);
  v188 = (uint64_t)&v152 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = v1;
  Playlist.Entry.internalItem.getter(v37);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v23, (uint64_t)&protocol witness table for Playlist.Entry.InternalItem, v22);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  v38 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v19, 1, 10, v38);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0x4048000000000000, 0, 0x4048000000000000, 0, 0, 1, 2, (uint64_t)v196);
  v39 = v157;
  v40 = v159;
  (*(void (**)(char *, _QWORD, uint64_t))(v157 + 104))(v16, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v159);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v22, (uint64_t)v19, (uint64_t)v196, (uint64_t)v16, (uint64_t)v29);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v40);
  sub_10005B748((uint64_t)v19, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011A3E10);
  v41 = Corner.small.unsafeMutableAddressor();
  v42 = *v41;
  v43 = v41[1];
  LOBYTE(v16) = *((_BYTE *)v41 + 16);
  v44 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v45 = sub_1000E4264();
  *(_QWORD *)&v197[0] = v44;
  *((_QWORD *)&v197[0] + 1) = v45;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v197, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  View.corner(_:)(v42, v43, (char)v16, v27, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v29, v27);
  v47 = Border.artwork.unsafeMutableAddressor();
  v48 = *v47;
  v49 = *((double *)v47 + 1);
  v50 = *v41;
  v51 = v41[1];
  LOBYTE(v41) = *((_BYTE *)v41 + 16);
  LOBYTE(v16) = *((_BYTE *)v47 + 16);
  swift_retain();
  *(_QWORD *)&v197[0] = v27;
  *((_QWORD *)&v197[0] + 1) = OpaqueTypeConformance2;
  v52 = swift_getOpaqueTypeConformance2(v197, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v53 = v156;
  v54 = v51;
  v55 = (uint64_t)v155;
  v56 = v162;
  View.border(_:corner:)(v48, (char)v16, v50, v54, (char)v41, v162, v52, v49);
  v57 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v31, v56, v57);
  v58 = v161;
  v59 = v163;
  (*(void (**)(uint64_t, char *, uint64_t))(v161 + 16))(v55, v53, v163);
  v60 = v55 + *(int *)(v160 + 36);
  *(_QWORD *)v60 = 0x3FF0000000000000;
  *(_WORD *)(v60 + 8) = 0;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v53, v59);
  v61 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCallout);
  objc_msgSend(v61, "lineHeight");
  v63 = v62;

  v65 = static Alignment.center.getter(v64);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v197, 0, 1, 0, 1, 0, 1, v63, 0, 0, 1, 0, 1, v65, v66);
  v67 = v165;
  sub_10004A160(v55, v165, &qword_1011A0628);
  v68 = v166;
  v69 = (_OWORD *)(v67 + *(int *)(v166 + 36));
  v70 = v197[5];
  v69[4] = v197[4];
  v69[5] = v70;
  v69[6] = v197[6];
  v71 = v197[1];
  *v69 = v197[0];
  v69[1] = v71;
  v72 = v197[3];
  v69[2] = v197[2];
  v69[3] = v72;
  sub_10004FF60(v55, &qword_1011A0628);
  v73 = sub_100743748();
  View.accessibilityHidden(_:)(1, v68, v73);
  v74 = sub_10004FF60(v67, (uint64_t *)&unk_1011C6970);
  v189 = Playlist.Entry.title.getter(v74);
  v190 = v75;
  v76 = sub_100055B68();
  v189 = Text.init<A>(_:)(&v189, &type metadata for String, v76);
  v190 = v77;
  v191 = v78 & 1;
  v192 = v79;
  v80 = v167;
  Playlist.Entry.contentRating.getter(v189);
  v81 = TextBadge.init(for:isPlayable:)(v80, 1);
  v82 = TextBadge.view.getter(v81);
  v84 = v83;
  LOBYTE(v55) = v85 & 1;
  v86 = v169;
  static Text.Suffix.alwaysVisible(_:)(v82, v83, v85 & 1, v87);
  sub_100055BAC(v82, v84, v55);
  swift_bridgeObjectRelease();
  v88 = v173;
  View.textSuffix(_:)(v86, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v171 + 8))(v86, v172);
  sub_100055BAC(v189, v190, v191);
  v89 = swift_bridgeObjectRelease();
  LODWORD(v82) = static HierarchicalShapeStyle.primary.getter(v89);
  v90 = v175;
  v91 = (uint64_t)v174;
  v92 = v185;
  (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v174, v88, v185);
  *(_DWORD *)(v91 + *(int *)(v168 + 36)) = v82;
  v93.n128_f64[0] = (*(double (**)(char *, uint64_t))(v90 + 8))(v88, v92);
  v94 = static Font.callout.getter(v93);
  KeyPath = swift_getKeyPath(&unk_100ECDB78);
  v96 = v187;
  sub_10004A160(v91, v187, &qword_1011C6950);
  v97 = (uint64_t *)(v96 + *(int *)(v170 + 36));
  *v97 = KeyPath;
  v97[1] = v94;
  v98 = sub_10004FF60(v91, &qword_1011C6950);
  v189 = Playlist.Entry.artistName.getter(v98);
  v190 = v99;
  v100 = Text.init<A>(_:)(&v189, &type metadata for String, v76);
  v102 = v101;
  v104 = v103;
  v106 = v105 & 1;
  LODWORD(v189) = static HierarchicalShapeStyle.secondary.getter(v100);
  v107 = Text.foregroundStyle<A>(_:)(&v189, v100, v102, v106, v104, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v109 = v108;
  v111 = v110;
  v113 = v112 & 1;
  sub_100055BAC(v100, v102, v106);
  swift_bridgeObjectRelease();
  v115 = static Font.footnote.getter(v114);
  v116 = Text.font(_:)(v115, v107, v109, v113, v111);
  v118 = v117;
  LODWORD(v175) = v119;
  v185 = v120;
  swift_release();
  sub_100055BAC(v107, v109, v113);
  swift_bridgeObjectRelease();
  type metadata accessor for PlaylistEditingViewController.Cell(0);
  v121 = v177;
  v122 = sub_1008237B8(v177);
  LOBYTE(v102) = DynamicTypeSize.isAccessibilitySize.getter(v122);
  v123 = *(void (**)(uint64_t, uint64_t))(v176 + 8);
  v124 = v178;
  v123(v121, v178);
  if ((v102 & 1) != 0)
    v125 = 2;
  else
    v125 = 1;
  v126 = swift_getKeyPath(&unk_100ECDBA8);
  v127 = sub_1008237B8(v121);
  v128 = DynamicTypeSize.isAccessibilitySize.getter(v127);
  v129 = ((uint64_t (*)(uint64_t, uint64_t))v123)(v121, v124);
  if ((v128 & 1) != 0)
  {
    v130 = v96;
    v131 = static HorizontalAlignment.leading.getter(v129);
    v189 = v116;
    v190 = v118;
    v132 = v175 & 1;
    v191 = v175 & 1;
    v192 = v185;
    v193 = v126;
    v194 = v125;
    v195 = 0;
    v133 = (uint64_t)v153;
    *v153 = v131;
    *(_QWORD *)(v133 + 8) = 0;
    *(_BYTE *)(v133 + 16) = 0;
    v134 = sub_100007E8C(&qword_1011C69A0);
    v135 = v188;
    sub_10073A620(v188, v130, (uint64_t)&v189, v133 + *(int *)(v134 + 44));
    v136 = v181;
    sub_10004A160(v133, v181, &qword_1011C6940);
    swift_storeEnumTagMultiPayload(v136, v179, 0);
    v137 = sub_100049F28(&qword_1011C6990, &qword_1011C6940, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v138 = sub_100049F28(&qword_1011C6998, &qword_1011C6930, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v139 = (uint64_t)v182;
    _ConditionalContent<>.init(storage:)(v136, v180, v183, v137, v138);
    sub_100055BAC(v116, v118, v132);
    swift_bridgeObjectRelease();
    swift_release();
    sub_10004FF60(v133, &qword_1011C6940);
  }
  else
  {
    v189 = v116;
    v140 = v118;
    v190 = v118;
    v141 = v175 & 1;
    v191 = v175 & 1;
    v192 = v185;
    v193 = v126;
    v194 = v125;
    v195 = 0;
    sub_100055BBC(v116, v118, v175 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    v143 = static VerticalAlignment.center.getter(v142);
    v144 = (uint64_t)v154;
    *v154 = v143;
    *(_QWORD *)(v144 + 8) = 0;
    *(_BYTE *)(v144 + 16) = 1;
    v145 = sub_100007E8C(&qword_1011C6988);
    v146 = v188;
    sub_10073AA88(v188, v187, (uint64_t)&v189, v144 + *(int *)(v145 + 44));
    sub_100055BAC(v116, v140, v141);
    swift_bridgeObjectRelease();
    swift_release();
    v147 = v181;
    sub_10004A160(v144, v181, &qword_1011C6930);
    swift_storeEnumTagMultiPayload(v147, v179, 1);
    v148 = sub_100049F28(&qword_1011C6990, &qword_1011C6940, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v149 = sub_100049F28(&qword_1011C6998, &qword_1011C6930, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v139 = (uint64_t)v182;
    _ConditionalContent<>.init(storage:)(v147, v180, v183, v148, v149);
    sub_100055BAC(v116, v140, v141);
    swift_bridgeObjectRelease();
    swift_release();
    v150 = v144;
    v130 = v187;
    sub_10004FF60(v150, &qword_1011C6930);
    v135 = v146;
  }
  sub_100065228(v139, v184, &qword_1011C6948);
  sub_10004FF60(v130, &qword_1011C6958);
  return sub_10004FF60(v135, &qword_1011BE1C8);
}

uint64_t sub_10073A620@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;

  v25 = a4;
  v7 = sub_100007E8C(&qword_1011C69A8);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - v11;
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v13);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v14 = sub_100007E8C(&qword_1011C69B0);
  sub_10073A7DC(a1, a2, (uint64_t)&v12[*(int *)(v14 + 44)]);
  v15 = *(_QWORD *)a3;
  v16 = *(_QWORD *)(a3 + 8);
  v17 = *(_BYTE *)(a3 + 16);
  v19 = *(_QWORD *)(a3 + 24);
  v18 = *(_QWORD *)(a3 + 32);
  v20 = *(_QWORD *)(a3 + 40);
  LOBYTE(a3) = *(_BYTE *)(a3 + 48);
  v26 = v9;
  sub_10004A160((uint64_t)v12, (uint64_t)v9, &qword_1011C69A8);
  v21 = (uint64_t)v9;
  v22 = v25;
  sub_10004A160(v21, v25, &qword_1011C69A8);
  v23 = v22 + *(int *)(sub_100007E8C(&qword_1011C69B8) + 48);
  *(_QWORD *)v23 = v15;
  *(_QWORD *)(v23 + 8) = v16;
  *(_BYTE *)(v23 + 16) = v17;
  *(_QWORD *)(v23 + 24) = v19;
  *(_QWORD *)(v23 + 32) = v18;
  *(_QWORD *)(v23 + 40) = v20;
  *(_BYTE *)(v23 + 48) = a3;
  sub_100055BBC(v15, v16, v17);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BBC(v15, v16, v17);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004FF60((uint64_t)v12, &qword_1011C69A8);
  sub_100055BAC(v15, v16, v17);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_10004FF60((uint64_t)v26, &qword_1011C69A8);
}

uint64_t sub_10073A7DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v29 = a1;
  v30 = a2;
  v4 = sub_100007E8C(&qword_1011C6958);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - v8;
  v10 = type metadata accessor for DynamicTypeSize(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v29 - v15;
  v17 = sub_100007E8C(&qword_1011C69C0);
  __chkstk_darwin(v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v29 - v21;
  type metadata accessor for PlaylistEditingViewController.Cell(0);
  sub_1008237B8((uint64_t)v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DynamicTypeSize.accessibility3(_:), v10);
  v23 = static DynamicTypeSize.< infix(_:_:)(v16, v13);
  v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v13, v10);
  v24(v16, v10);
  if ((v23 & 1) != 0)
  {
    sub_10004A160(v29, (uint64_t)v22, &qword_1011BE1C8);
    v25 = sub_100007E8C(&qword_1011BE1C8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 0, 1, v25);
  }
  else
  {
    v26 = sub_100007E8C(&qword_1011BE1C8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v22, 1, 1, v26);
  }
  sub_10004A160(v30, (uint64_t)v9, &qword_1011C6958);
  sub_10004A160((uint64_t)v22, (uint64_t)v19, &qword_1011C69C0);
  sub_10004A160((uint64_t)v9, (uint64_t)v6, &qword_1011C6958);
  sub_10004A160((uint64_t)v19, a3, &qword_1011C69C0);
  v27 = sub_100007E8C(&qword_1011C69C8);
  sub_10004A160((uint64_t)v6, a3 + *(int *)(v27 + 48), &qword_1011C6958);
  sub_10004FF60((uint64_t)v9, &qword_1011C6958);
  sub_10004FF60((uint64_t)v22, &qword_1011C69C0);
  sub_10004FF60((uint64_t)v6, &qword_1011C6958);
  return sub_10004FF60((uint64_t)v19, &qword_1011C69C0);
}

uint64_t sub_10073AA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v8 = sub_100007E8C(&qword_1011C69D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - v12;
  v14 = sub_100007E8C(&qword_1011BE1C8);
  __chkstk_darwin(v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v24 - v18;
  v20 = sub_10004A160(a1, (uint64_t)&v24 - v18, &qword_1011BE1C8);
  *(_QWORD *)v13 = static HorizontalAlignment.leading.getter(v20);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  v21 = sub_100007E8C(&qword_1011C69D8);
  sub_10073AC40(a2, a3, (uint64_t)&v13[*(int *)(v21 + 44)]);
  sub_10004A160((uint64_t)v19, (uint64_t)v16, &qword_1011BE1C8);
  sub_10004A160((uint64_t)v13, (uint64_t)v10, &qword_1011C69D0);
  sub_10004A160((uint64_t)v16, a4, &qword_1011BE1C8);
  v22 = sub_100007E8C(&qword_1011C69E0);
  sub_10004A160((uint64_t)v10, a4 + *(int *)(v22 + 48), &qword_1011C69D0);
  sub_10004FF60((uint64_t)v13, &qword_1011C69D0);
  sub_10004FF60((uint64_t)v19, &qword_1011BE1C8);
  sub_10004FF60((uint64_t)v10, &qword_1011C69D0);
  return sub_10004FF60((uint64_t)v16, &qword_1011BE1C8);
}

uint64_t sub_10073AC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_100007E8C(&qword_1011C6958);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - v10;
  sub_10004A160(a1, (uint64_t)&v19 - v10, &qword_1011C6958);
  v12 = *(_QWORD *)a2;
  v13 = *(_QWORD *)(a2 + 8);
  v14 = *(_BYTE *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 32);
  v20 = *(_QWORD *)(a2 + 40);
  LOBYTE(a2) = *(_BYTE *)(a2 + 48);
  sub_10004A160((uint64_t)v11, (uint64_t)v8, &qword_1011C6958);
  sub_10004A160((uint64_t)v8, a3, &qword_1011C6958);
  v17 = a3 + *(int *)(sub_100007E8C(&qword_1011C69E8) + 48);
  *(_QWORD *)v17 = v12;
  *(_QWORD *)(v17 + 8) = v13;
  *(_BYTE *)(v17 + 16) = v14;
  *(_QWORD *)(v17 + 24) = v15;
  *(_QWORD *)(v17 + 32) = v16;
  *(_QWORD *)(v17 + 40) = v20;
  *(_BYTE *)(v17 + 48) = a2;
  sub_100055BBC(v12, v13, v14);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BBC(v12, v13, v14);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004FF60((uint64_t)v11, &qword_1011C6958);
  sub_100055BAC(v12, v13, v14);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10004FF60((uint64_t)v8, &qword_1011C6958);
}

double sub_10073ADD4(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  double result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  *(_QWORD *)&result = __chkstk_darwin(v4).n128_u64[0];
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    if (qword_10119CB10 != -1)
      swift_once(&qword_10119CB10, sub_10096883C);
    v8 = type metadata accessor for Logger(0);
    sub_100048B14(v8, (uint64_t)qword_10124DDD0);
    v9 = swift_bridgeObjectRetain_n(a1, 2);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v26 = v2;
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v28 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = type metadata accessor for Track(0);
      v15 = swift_bridgeObjectRetain();
      v16 = Array.description.getter(v15, v14);
      v18 = v17;
      swift_bridgeObjectRelease();
      v27 = sub_100322200(v16, v18, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28);
      v2 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(a1, 2);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "⏬️ Will add entries=%s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a1, 2);
    }

    static TaskPriority.userInitiated.getter(v19);
    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 0, 1, v20);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain();
    v21 = v2;
    v23 = static MainActor.shared.getter(v22);
    v24 = (_QWORD *)swift_allocObject(&unk_1010D9A98, 48, 7);
    v24[2] = v23;
    v24[3] = &protocol witness table for MainActor;
    v24[4] = v21;
    v24[5] = a1;
    sub_100166D14((uint64_t)v7, (uint64_t)&unk_1011C6710, (uint64_t)v24);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10073B074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v5[5] = a4;
  v5[6] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[8] = v7;
  v5[9] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v5[10] = v9;
  v5[11] = v10;
  return swift_task_switch(sub_10073B108, v9, v10);
}

void sub_10073B108()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  v1 = *(_QWORD *)(v0[5] + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController);
  v0[12] = v1;
  if (v1)
  {
    v0[2] = v0[6];
    v2 = *((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.append<A, B>(_:)
         + 1);
    v7 = (char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.append<A, B>(_:)
       + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.append<A, B>(_:);
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc(v2);
    v0[13] = v3;
    v4 = sub_100007E8C((uint64_t *)&unk_1011B8ED0);
    v5 = type metadata accessor for Track(0);
    v0[14] = v5;
    v6 = sub_100049F28((unint64_t *)&qword_1011B69F0, (uint64_t *)&unk_1011B8ED0, (uint64_t)&protocol conformance descriptor for [A]);
    *v3 = v0;
    v3[1] = sub_10073B200;
    ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, void *))v7)(v0 + 2, v4, v5, v6, &protocol witness table for Track);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10073B200()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  swift_release();
  if (v0)
    v4 = sub_10073B35C;
  else
    v4 = sub_10073B274;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_10073B274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _QWORD *v6;

  swift_release();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_1010D98B8, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  v4 = swift_retain();
  v5 = static MainActor.shared.getter(v4);
  v6 = (_QWORD *)swift_allocObject(&unk_1010D9AC0, 40, 7);
  v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v3;
  swift_release();
  sub_100166D14(v1, (uint64_t)&unk_1011C6728, (uint64_t)v6);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10073B35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;

  swift_release();
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v1 = *(_QWORD *)(v0 + 120);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124DDD0);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 120);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 48);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v26 = swift_slowAlloc(32, -1);
    v27 = v26;
    *(_DWORD *)v10 = 136315394;
    v12 = swift_bridgeObjectRetain();
    v13 = Array.description.getter(v12, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 24) = sub_100322200(v13, v15, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease_n(v9, 2);
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 32) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to add %s with error=%@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 48);
    swift_errorRelease(*(_QWORD *)(v0 + 120));
    swift_bridgeObjectRelease_n(v18, 2);
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v19 = *(_QWORD *)(v0 + 56);
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = swift_allocObject(&unk_1010D98B8, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16);
  v22 = swift_retain();
  v23 = static MainActor.shared.getter(v22);
  v24 = (_QWORD *)swift_allocObject(&unk_1010D9AC0, 40, 7);
  v24[2] = v23;
  v24[3] = &protocol witness table for MainActor;
  v24[4] = v21;
  swift_release();
  sub_100166D14(v19, (uint64_t)&unk_1011C6728, (uint64_t)v24);
  swift_release();
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10073B6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[15] = a4;
  v5 = type metadata accessor for IndexPath(0);
  v4[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[17] = v6;
  v4[18] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  v4[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[20] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_10073B768, v10, v11);
}

uint64_t sub_10073B768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  void (*v9)(uint64_t, _QWORD, __n128);
  _QWORD *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t, unint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  id v28;
  Class isa;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Class v40;
  uint64_t v41;
  uint64_t v43;
  void *v44;

  v1 = v0 + 96;
  v2 = *(_QWORD *)(v0 + 120);
  swift_release();
  swift_beginAccess(v2 + 16, v0 + 48, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100737720();
    v6 = v5;

    KeyPath = swift_getKeyPath(&unk_100ECD628);
    v8 = swift_getKeyPath(&unk_100ECD698);
    v9 = (void (*)(uint64_t, _QWORD, __n128))static Published.subscript.modify(v0 + 16, v6, KeyPath, v8);
    *v10 = _swiftEmptyArrayStorage;
    v11 = swift_bridgeObjectRelease();
    v9(v0 + 16, 0, v11);
    swift_release();
    swift_release();
    swift_release();
  }
  v12 = *(_QWORD *)(v0 + 120) + 16;
  swift_beginAccess(v12, v0 + 72, 0, 0);
  v13 = swift_unknownObjectWeakLoadStrong(v12);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = sub_100733A54();
    v16 = objc_msgSend(v15, "indexPathsForSelectedItems");

    if (v16)
    {
      v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, *(_QWORD *)(v0 + 128));

    }
    else
    {
      v17 = 0;
    }
    v18 = sub_100733A54();
    objc_msgSend(v18, "reloadData");

    if (v17)
    {
      v19 = *(_QWORD *)(v17 + 16);
      v20 = *(_QWORD *)(v0 + 136);
      v44 = v14;
      if (v19)
      {
        v21 = v17 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
        v43 = *(_QWORD *)(v20 + 72);
        v22 = *(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16);
        while (1)
        {
          v23 = *(_QWORD *)(v0 + 152);
          v24 = *(_QWORD *)(v0 + 128);
          v22(v23, v21, v24);
          v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
          v25(v23, 0, 1, v24);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v23, 1, v24) == 1)
            break;
          v26 = *(_QWORD *)(v0 + 144);
          v27 = *(_QWORD *)(v0 + 128);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 32))(v26, *(_QWORD *)(v0 + 152), v27);
          v28 = sub_100733A54();
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v28, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

          (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v26, v27);
          v21 += v43;
          if (!--v19)
            goto LABEL_14;
        }
      }
      else
      {
        v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
LABEL_14:
        v25(*(_QWORD *)(v0 + 152), 1, 1, *(_QWORD *)(v0 + 128));
      }
      swift_bridgeObjectRelease();
      v1 = v0 + 96;
      v14 = v44;
    }

  }
  v30 = *(_QWORD *)(v0 + 120) + 16;
  swift_beginAccess(v30, v1, 0, 0);
  v31 = swift_unknownObjectWeakLoadStrong(v30);
  if (v31)
  {
    v32 = (void *)v31;
    v33 = sub_100733A54();

    v34 = (uint64_t)objc_msgSend(v33, "numberOfItemsInSection:", 0);
    v35 = v34 < 1;
    v36 = v34 - 1;
    if (!v35)
    {
      v38 = *(_QWORD *)(v0 + 136);
      v37 = *(_QWORD *)(v0 + 144);
      v39 = *(_QWORD *)(v0 + 128);
      IndexPath.init(item:section:)(v36, 0);
      v40 = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v33, "scrollToItemAtIndexPath:atScrollPosition:animated:", v40, 4, 1);

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    }

  }
  v41 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10073BAD0()
{
  void (*v0)(char *, uint64_t, uint64_t);
  void (*v1)(char *, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  __n128 v42;
  void (*v43)(char *, uint64_t, __n128);
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v2);
  v52 = (uint64_t)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - v5;
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - v8;
  v10 = type metadata accessor for Playlist.Entry(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v53 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v55 = (char *)&v50 - v14;
  v16 = IndexPath.item.getter(v15);
  v17 = IndexPath.item.getter(v16);
  v18 = v17;
  v19 = v17;
  if (v16 >= v17)
  {
    v19 = v17 - 1;
    if (__OFSUB__(v17, 1))
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
  }
  v54 = v9;
  v57 = OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController;
  v20 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController);
  if (!v20)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  swift_retain();
  v22 = dispatch thunk of MusicLibraryPlaylistEditViewModel.entries.getter(v21);
  v23 = swift_release();
  if (v16 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((unint64_t)v16 >= *(_QWORD *)(v22 + 16))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    swift_once(&qword_10119CB10, sub_10096883C);
LABEL_13:
    v33 = type metadata accessor for Logger(0);
    sub_100048B14(v33, (uint64_t)qword_10124DDD0);
    v34 = v53;
    v1(v53, v16, v10);
    v35 = sub_10004A160(v20, v2, (uint64_t *)&unk_1011B59A0);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc(22, -1);
      v50 = swift_slowAlloc(64, -1);
      v59 = v50;
      *(_DWORD *)v38 = 136315394;
      v39 = sub_100048748(&qword_1011C6700, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
      v40 = dispatch thunk of CustomStringConvertible.description.getter(v10, v39);
      v58 = sub_100322200(v40, v41, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
      v42 = swift_bridgeObjectRelease();
      v43 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
      v43(v34, v10, v42);
      *(_WORD *)(v38 + 12) = 2080;
      v44 = v52;
      sub_10004A160(v2, v52, (uint64_t *)&unk_1011B59A0);
      v45 = String.init<A>(describing:)(v44, v51);
      v58 = sub_100322200(v45, v46, &v59);
      v20 = (uint64_t)v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
      swift_bridgeObjectRelease();
      sub_10004FF60(v2, (uint64_t *)&unk_1011B59A0);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "🔃 Will move entry=%s after entry=%s", (uint8_t *)v38, 0x16u);
      v47 = v50;
      swift_arrayDestroy(v50, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      v48 = v38;
      v16 = (uint64_t)v55;
      swift_slowDealloc(v48, -1, -1);
    }
    else
    {
      v43 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
      ((void (*)(char *, uint64_t))v43)(v34, v10);
      sub_10004FF60(v2, (uint64_t *)&unk_1011B59A0);
    }

    if (*(_QWORD *)((char *)v56 + v57))
    {
      v49 = swift_retain();
      dispatch thunk of MusicLibraryPlaylistEditViewModel.move(_:after:)(v16, v20, v49);
      swift_release();
      sub_10004FF60(v20, (uint64_t *)&unk_1011B59A0);
      ((void (*)(uint64_t, uint64_t))v43)(v16, v10);
      return;
    }
    goto LABEL_25;
  }
  v51 = v2;
  v56 = v1;
  v24 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v25 = *(_QWORD *)(v11 + 72);
  v26 = v22 + v24 + v25 * v16;
  v1 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v16 = (uint64_t)v55;
  ((void (*)(char *, unint64_t, uint64_t, __n128))v1)(v55, v26, v10, v23);
  v27 = swift_bridgeObjectRelease();
  if (!v18)
  {
    v32 = 1;
    v20 = (uint64_t)v54;
LABEL_12:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v20, v32, 1, v10, v27);
    v2 = (uint64_t)v6;
    if (qword_10119CB10 == -1)
      goto LABEL_13;
    goto LABEL_20;
  }
  if (*(_QWORD *)((char *)v56 + v57))
  {
    swift_retain();
    v29 = dispatch thunk of MusicLibraryPlaylistEditViewModel.entries.getter(v28);
    v30 = swift_release();
    if ((v19 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v19 < *(_QWORD *)(v29 + 16))
    {
      v31 = v29 + v24 + v25 * v19;
      v20 = (uint64_t)v54;
      ((void (*)(char *, unint64_t, uint64_t, __n128))v1)(v54, v31, v10, v30);
      v27 = swift_bridgeObjectRelease();
      v32 = 0;
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_23;
  }
LABEL_26:
  __break(1u);
}

double sub_10073BFA8()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  double result;
  uint64_t v23;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_100733A54();
  v3 = objc_msgSend(v2, "indexPathsForSelectedItems");

  if (v3)
  {
    v4 = type metadata accessor for IndexPath(0);
    v5 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)qword_10124DDD0);
  v7 = swift_bridgeObjectRetain_n(v5, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    aBlock[0] = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = type metadata accessor for IndexPath(0);
    v13 = swift_bridgeObjectRetain();
    v14 = Array.description.getter(v13, v12);
    v16 = v15;
    swift_bridgeObjectRelease();
    v23 = sub_100322200(v14, v16, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, aBlock);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v5, 2);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "🚮 Will remove %s indexes", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v5, 2);
  }

  v17 = sub_100733A54();
  v18 = swift_allocObject(&unk_1010D9A20, 32, 7);
  *(_QWORD *)(v18 + 16) = v1;
  *(_QWORD *)(v18 + 24) = v5;
  v19 = swift_allocObject(&unk_1010D9A48, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_100741D4C;
  *(_QWORD *)(v19 + 24) = v18;
  aBlock[4] = (uint64_t)sub_10010942C;
  aBlock[5] = v19;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10046D7B4;
  aBlock[3] = (uint64_t)&unk_1010D9A60;
  v20 = _Block_copy(aBlock);
  v21 = v1;
  objc_msgSend(v17, "performBatchUpdates:completion:", v20, 0, swift_release().n128_f64[0]);
  _Block_release(v20);

  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10073C288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  id v9;
  Class isa;
  void *v11;

  v2 = OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController))
  {
    swift_retain();
    v6 = dispatch thunk of MusicLibraryPlaylistEditViewModel.entries.getter(v5);
    swift_release();
    swift_bridgeObjectRetain();
    v7 = sub_100741588(a2, v6);
    swift_bridgeObjectRelease_n(v6, 2);
    if (*(_QWORD *)(a1 + v2))
    {
      v8 = swift_retain();
      dispatch thunk of MusicLibraryPlaylistEditViewModel.remove(_:)(v7, v8);
      swift_bridgeObjectRelease();
      swift_release();
      v9 = sub_100733A54();
      type metadata accessor for IndexPath(0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v9, "deleteItemsAtIndexPaths:", isa);

      v11 = (void *)sub_100734628();
      objc_msgSend(v11, "setEnabled:", 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10073C3A4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  __n128 v41;
  char *v42;
  id v43;
  id result;
  void *v45;
  unsigned __int8 v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t KeyPath;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  id v85[3];
  char v86[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v78 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100007E8C(&qword_1011C66D0);
  v77 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v76 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C66D8);
  v81 = *(_QWORD *)(v5 - 8);
  v82 = v5;
  __chkstk_darwin(v5);
  v80 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v11);
  v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v75 - v15;
  v17 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v17);
  v84 = (uint64_t)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100048B14(v19, (uint64_t)qword_10124DDD0);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Will present Music picker", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  v24 = (void *)*MetricsReportingController.shared.unsafeMutableAddressor();
  v25 = type metadata accessor for URL(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v16, 1, 1, v25);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v1[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist], v7);
  v27 = v24;
  v28 = Playlist.id.getter(v27);
  v83 = v1;
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v26(v13, 1, 1, v25);
  v31 = v84;
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)(0x636973754D646461, 0xE800000000000000, 5, 34, (uint64_t)v16, 0, 0, 9, v84, 0, 0, 65280, v28, v30, 0x7473696C79616C50, 0xE800000000000000, (uint64_t)v13, 0, 1,
    0,
    0,
    0);
  sub_100540B34();
  v33 = v32;
  v35 = v34;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v36 = qword_10124C790;
  swift_retain();
  v37 = GroupActivitiesManager.hasJoined.getter();
  v38 = GroupActivitiesManager.participantsCount.getter();
  v39 = (uint64_t *)(v36 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v36 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v86, 0, 0);
  v40 = *v39;
  v41 = swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v27) + 0xB8))(v31, v33, v35, v37 & 1, v38, v40, v41);

  swift_bridgeObjectRelease();
  sub_10005B748(v31, type metadata accessor for MetricsEvent.Click);
  v42 = v83;
  v43 = sub_100737868();
  result = objc_msgSend(v42, "view");
  if (result)
  {
    v45 = result;
    v46 = objc_msgSend(v43, "isDescendantOfView:", result);

    if ((v46 & 1) != 0)
    {
LABEL_11:
      sub_100737720();
      v72 = v71;
      KeyPath = swift_getKeyPath(&unk_100ECD600);
      v74 = swift_getKeyPath(&unk_100ECD6B8);
      LOBYTE(v85[0]) = 1;
      return (id)static Published.subscript.setter(v85, v72, KeyPath, v74);
    }
    result = objc_msgSend(v42, "view");
    if (result)
    {
      v47 = result;
      v48 = sub_100737868();
      objc_msgSend(v47, "addSubview:", v48);

      sub_100737720();
      swift_beginAccess(v49+ OBJC_IVAR____TtCC5Music29PlaylistEditingViewControllerP33_CBF7D4EB2DE8D68004B7790E133CB40421MusicPickerDataSource__selectedTracks, v85, 33, 0);
      v50 = sub_100007E8C(&qword_1011C6650);
      v51 = v76;
      Published.projectedValue.getter(v50);
      swift_endAccess(v85);
      swift_release();
      v52 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      v85[0] = (id)static OS_dispatch_queue.main.getter(v52, v53, v54, v55, v56, v57, v58, v59);
      v60 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      v61 = (uint64_t)v78;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v78, 1, 1, v60);
      v62 = sub_100049F28((unint64_t *)&unk_1011C66E0, &qword_1011C66D0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v63 = sub_10006A92C();
      v64 = v79;
      v65 = v80;
      Publisher.receive<A>(on:options:)(v85, v61, v79, v52, v62, v63);
      sub_10004FF60(v61, &qword_1011A08F0);

      (*(void (**)(char *, uint64_t))(v77 + 8))(v51, v64);
      v66 = swift_allocObject(&unk_1010D98B8, 24, 7);
      swift_unknownObjectWeakInit(v66 + 16);
      v67 = sub_100049F28((unint64_t *)&unk_1011C66F0, &qword_1011C66D8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v68 = v82;
      v69 = Publisher<>.sink(receiveValue:)(sub_100741D38, v66, v82, v67);
      v70 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v81 + 8))(v65, v68, v70);
      *(_QWORD *)&v42[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_musicPickerSubscription] = v69;
      swift_release();
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10073CA90(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10073ADD4(v2);

  }
}

uint64_t sub_10073CAE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v1[68] = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v1[69] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Logger(0);
  v1[70] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[71] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[72] = swift_task_alloc(v5);
  v1[73] = swift_task_alloc(v5);
  v6 = type metadata accessor for Playlist(0);
  v1[74] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[75] = v7;
  v1[76] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  v1[77] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v1[78] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v1[79] = v10;
  v1[80] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v1[81] = v12;
  v1[82] = v13;
  return swift_task_switch(sub_10073CC20, v12, v13);
}

uint64_t sub_10073CC20()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  char v8;
  _QWORD *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (objc_msgSend(*(id *)(v0 + 544), "isEditing"))
  {
    if ((sub_10073792C() & 1) != 0)
      v1 = 1;
    else
      v1 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 544)
                              + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_hasTracklistChanges);
    if (qword_10119CB10 != -1)
      swift_once(&qword_10119CB10, sub_10096883C);
    v3 = sub_100048B14(*(_QWORD *)(v0 + 560), (uint64_t)qword_10124DDD0);
    *(_QWORD *)(v0 + 664) = v3;
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v6 = 67109120;
      *(_DWORD *)(v0 + 412) = v1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 412, v0 + 416);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "🏮Save button called, hasChanges=%{BOOL}d", v6, 8u);
      swift_slowDealloc(v6, -1, -1);
    }

    if (v1)
    {
      v7 = *(void **)(v0 + 544);
      v8 = sub_100737CDC();
      *(_QWORD *)(v0 + 672) = sub_100734B54();
      *(_OWORD *)(v0 + 368) = 0u;
      *(_OWORD *)(v0 + 384) = 0u;
      *(_QWORD *)(v0 + 400) = 0;
      *(_BYTE *)(v0 + 408) = -1;
      PresentationSource.init(viewController:position:)(v7, v0 + 368, v0 + 240);
      v9 = (_QWORD *)swift_task_alloc(dword_1011B83D4);
      *(_QWORD *)(v0 + 680) = v9;
      *v9 = v0;
      v9[1] = sub_10073CF18;
      return sub_1004F4E6C(v0 + 240, v8 & 1);
    }
    swift_release();
  }
  else
  {
    swift_release();
    if (qword_10119CB10 != -1)
      swift_once(&qword_10119CB10, sub_10096883C);
    v2 = sub_100048B14(*(_QWORD *)(v0 + 560), (uint64_t)qword_10124DDD0);
  }
  v11 = Logger.logObject.getter(v2);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Will dismiss edit view controller", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }
  v14 = *(void **)(v0 + 544);

  objc_msgSend(v14, "dismissViewControllerAnimated:completion:", 1, 0);
  v15 = *(_QWORD *)(v0 + 616);
  v16 = *(_QWORD *)(v0 + 608);
  v17 = *(_QWORD *)(v0 + 584);
  v18 = *(_QWORD *)(v0 + 576);
  v19 = *(_QWORD *)(v0 + 552);
  swift_task_dealloc(*(_QWORD *)(v0 + 624));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10073CF18(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 680);
  *(_BYTE *)(*v1 + 410) = a1;
  swift_task_dealloc(v3);
  swift_release();
  sub_100064B4C(v2 + 240);
  return swift_task_switch(sub_10073CF94, *(_QWORD *)(v2 + 648), *(_QWORD *)(v2 + 656));
}

void sub_10073CF94()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  int v3;
  double v4;
  uint64_t *v5;
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  Swift::String v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  void *v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  unsigned __int8 *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  id v66;
  __n128 v67;
  void *v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  __n128 v79;
  char v80;
  uint64_t v81;
  unint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  void *v119;
  id v120;
  id v121;
  uint64_t v122;
  id v123;
  __n128 v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  void *v149;
  uint64_t v150;
  void *v151;
  void *v152;
  os_log_type_t v153;
  void *v154;
  void *v155;
  NSObject *v156;
  void *v157;
  uint64_t v158;
  void **v159;
  id *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164[4];

  v2 = v0 + 409;
  v3 = *(unsigned __int8 *)(v0 + 410);
  *(_QWORD *)&v4 = swift_release().n128_u64[0];
  if (v3 != 1)
    goto LABEL_41;
  v5 = (uint64_t *)(v0 + 544);
  objc_msgSend(*(id *)(v0 + 544), "setEditing:animated:", 0, 1, v4);
  v6 = sub_100734B54();
  KeyPath = swift_getKeyPath(&unk_100ECD720);
  v8 = swift_getKeyPath(&unk_100ECD748);
  static Published.subscript.getter((_QWORD *)(v0 + 448), v6, KeyPath, v8);
  swift_release();
  swift_release();
  v9 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = ((unint64_t)v9._object >> 56) & 0xF;
  if (((uint64_t)v9._object & 0x2000000000000000) == 0)
    v10 = v9._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    v11 = swift_getKeyPath(&unk_100ECD720);
    v12 = swift_getKeyPath(&unk_100ECD748);
    static Published.subscript.getter((_QWORD *)(v0 + 416), v6, v11, v12);
    swift_release();
    swift_release();
    v13 = *(_QWORD *)(v0 + 416);
    v14 = *(_QWORD *)(v0 + 424);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 624);
    v16 = *(_QWORD *)(v0 + 616);
    v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E2C360);
    static Locale.current.getter(v17);
    v13 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, 0, v16, 0, 0, 256);
    v14 = v18;
  }
  v19 = *v5;
  v20 = OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController;
  if (!*(_QWORD *)(*v5 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController))
  {
    __break(1u);
    goto LABEL_43;
  }
  v159 = (void **)(v0 + 544);
  v21 = swift_retain();
  dispatch thunk of MusicLibraryPlaylistEditViewModel.name.setter(v13, v14, v21);
  swift_release();
  if (!*(_QWORD *)(v19 + v20))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v22 = swift_getKeyPath(&unk_100ECD768);
  v1 = (id *)swift_getKeyPath(&unk_100ECD790);
  swift_retain();
  static Published.subscript.getter((_QWORD *)(v0 + 432), v6, v22, v1);
  swift_release();
  v23 = swift_release();
  dispatch thunk of MusicLibraryPlaylistEditViewModel.description.setter(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440), v23);
  swift_release();
  v161 = v19;
  v162 = v20;
  if (!*(_QWORD *)(v19 + v20))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v160 = (id *)(v0 + 528);
  v24 = *(_QWORD *)(v0 + 608);
  v25 = *(_QWORD *)(v0 + 600);
  v26 = *(_QWORD *)(v0 + 592);
  v27 = *(_QWORD *)(v0 + 544);
  v28 = swift_getKeyPath(&unk_100ECD7B0);
  v29 = swift_getKeyPath(&unk_100ECD7D8);
  swift_retain();
  static Published.subscript.getter((_QWORD *)(v0 + 409), v6, v28, v29);
  swift_release();
  v30 = swift_release();
  dispatch thunk of MusicLibraryPlaylistEditViewModel.isVisiblePlaylist.setter(*(unsigned __int8 *)v2, v30);
  v31 = swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v25 + 16))(v24, v27 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist, v26, v31);
  v32 = sub_100731EDC();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  v2 = sub_10075C50C(0, (uint64_t)v32);
  v33 = swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    goto LABEL_24;
  v34 = swift_getKeyPath(&unk_100ECD7F8);
  v35 = swift_getKeyPath(&unk_100ECD820);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v6, v34, v35);
  swift_release();
  v33 = swift_release();
  v36 = *(void **)(v0 + 16);
  v37 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v38 = *(void **)(v0 + 40);
  v40 = *(void **)(v0 + 48);
  v39 = *(unsigned __int8 **)(v0 + 56);
  v41 = *(void **)(v0 + 64);
  v42 = *(void **)(v0 + 72);
  v44 = *(_QWORD *)(v0 + 80);
  v43 = *(_QWORD *)(v0 + 88);
  v45 = *(_QWORD *)(v0 + 96);
  if (!v36)
  {
    v139 = *(_QWORD *)(v0 + 128);
    v141 = *(_QWORD *)(v0 + 120);
    v143 = *(_QWORD *)(v0 + 112);
    v145 = *(_QWORD *)(v0 + 104);
    v147 = *(_QWORD *)(v0 + 88);
    v149 = *(void **)(v0 + 32);
    v155 = *(void **)(v0 + 40);
    v152 = *(void **)(v0 + 56);
    if (!*(_QWORD *)(v161 + v162))
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v62 = *(_QWORD *)(v0 + 24);
    v63 = swift_getKeyPath(&unk_100ECD840);
    v64 = swift_getKeyPath(&unk_100ECD868);
    swift_retain();
    static Published.subscript.getter(v160, v6, v63, v64);
    swift_release();
    *(_QWORD *)&v65 = swift_release().n128_u64[0];
    v2 = (uint64_t)*v160;
    v66 = objc_msgSend(*v160, "CGImage", v65);

    dispatch thunk of MusicLibraryPlaylistEditViewModel.userImage.setter(v66);
    sub_1001666B8(0, v62, v149, v155, v40, v152, v41, v42, v44, v147, v45, v145, v143, v141, v139);
    v33 = swift_release();
LABEL_24:
    v68 = *(void **)(v0 + 544);
    (*(void (**)(_QWORD, _QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 568) + 16))(*(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 560), v33);
    v69 = Logger.logObject.getter(v68);
    v70 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v69, v70))
    {
      v114 = *(_QWORD *)(v0 + 584);
      v115 = *(_QWORD *)(v0 + 568);
      v116 = *(_QWORD *)(v0 + 560);
      v117 = *(void **)(v0 + 544);

      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v114, v116);
      goto LABEL_40;
    }
    v153 = v70;
    v156 = v69;
    v71 = swift_slowAlloc(72, -1);
    v150 = swift_slowAlloc(192, -1);
    v164[0] = v150;
    *(_DWORD *)v71 = 136316674;
    v1 = (id *)(v0 + 544);
    v157 = *v159;
    if (*(_QWORD *)(v161 + v162))
    {
      v72 = swift_retain();
      v73 = dispatch thunk of MusicLibraryPlaylistEditViewModel.name.getter(v72);
      v75 = v74;
      swift_release();
      v76 = Optional<A>.description.getter(v73, v75);
      v78 = v77;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 464) = sub_100322200(v76, v78, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);

      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 12) = 2080;
      v2 = (uint64_t)*v159;
      if (*(_QWORD *)(v161 + v162))
      {
        v79 = swift_retain();
        v80 = dispatch thunk of MusicLibraryPlaylistEditViewModel.isVisiblePlaylist.getter(v79);
        swift_release();
        if ((v80 & 1) != 0)
          v81 = 1702195828;
        else
          v81 = 0x65736C6166;
        if ((v80 & 1) != 0)
          v82 = 0xE400000000000000;
        else
          v82 = 0xE500000000000000;
        *(_QWORD *)(v0 + 472) = sub_100322200(v81, v82, v164);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 472, v0 + 480);

        swift_bridgeObjectRelease();
        *(_WORD *)(v71 + 22) = 2080;
        v2 = (uint64_t)*v159;
        if (*(_QWORD *)(v161 + v162))
        {
          v83 = swift_retain();
          v84 = dispatch thunk of MusicLibraryPlaylistEditViewModel.userImage.getter(v83);
          swift_release();
          *(_QWORD *)(v0 + 480) = v84;
          v85 = sub_100007E8C((uint64_t *)&unk_1011C6680);
          v86 = String.init<A>(describing:)(v0 + 480, v85);
          *(_QWORD *)(v0 + 488) = sub_100322200(v86, v87, v164);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 488, v0 + 496);

          swift_bridgeObjectRelease();
          *(_WORD *)(v71 + 32) = 2080;
          v2 = (uint64_t)*v159;
          if (*(_QWORD *)(v161 + v162))
          {
            v88 = swift_retain();
            v89 = dispatch thunk of MusicLibraryPlaylistEditViewModel.description.getter(v88);
            v91 = v90;
            swift_release();
            v92 = Optional<A>.description.getter(v89, v91);
            v94 = v93;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v0 + 496) = sub_100322200(v92, v94, v164);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 496, v0 + 504);

            swift_bridgeObjectRelease();
            *(_WORD *)(v71 + 42) = 2080;
            v2 = (uint64_t)*v159;
            if (*(_QWORD *)(v161 + v162))
            {
              v95 = swift_retain();
              v96 = MusicLibraryPlaylistEditViewModel.rawCoverArtworkRecipe.getter(v95);
              v98 = v97;
              swift_release();
              v99 = Optional<A>.description.getter(v96, v98);
              v101 = v100;
              swift_bridgeObjectRelease();
              *(_QWORD *)(v0 + 504) = sub_100322200(v99, v101, v164);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 504, v0 + 512);

              swift_bridgeObjectRelease();
              *(_WORD *)(v71 + 52) = 2048;
              v2 = (uint64_t)*v159;
              if (*(_QWORD *)(v161 + v162))
              {
                swift_retain();
                v103 = dispatch thunk of MusicLibraryPlaylistEditViewModel.entries.getter(v102);
                swift_release();
                v104 = *(_QWORD *)(v103 + 16);

                swift_bridgeObjectRelease();
                *(_QWORD *)(v0 + 512) = v104;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 512, v0 + 520);

                *(_WORD *)(v71 + 62) = 2080;
                if (*(_QWORD *)(v161 + v162))
                {
                  v163 = *(_QWORD *)(v0 + 584);
                  v105 = *(_QWORD *)(v0 + 568);
                  v106 = *(_QWORD *)(v0 + 560);
                  v107 = *(void **)(v0 + 544);
                  swift_retain();
                  v109 = dispatch thunk of MusicLibraryPlaylistEditViewModel.entries.getter(v108);
                  swift_release();
                  v110 = type metadata accessor for Playlist.Entry(0);
                  v111 = Array.description.getter(v109, v110);
                  v113 = v112;
                  swift_bridgeObjectRelease();
                  *(_QWORD *)(v0 + 520) = sub_100322200(v111, v113, v164);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 520, v160);

                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v156, v153, "🔒 Will save playlist with:\n    - name=%s\n    - isVisible=%s\n    - userImage=%s\n    - description=%s\n    - rawCoverArtworkRecipe=%s\n    - %ld entries=%s", (uint8_t *)v71, 0x48u);
                  swift_arrayDestroy(v150, 6, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v150, -1, -1);
                  swift_slowDealloc(v71, -1, -1);

                  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v163, v106);
LABEL_40:
                  v118 = *(_QWORD *)(v0 + 552);
                  v119 = *(void **)(v0 + 544);
                  v120 = objc_msgSend(v119, "navigationItem");
                  sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
                  v121 = sub_100733044();
                  objc_msgSend(v120, "setRightBarButtonItem:animated:", v121, 1);

                  v122 = type metadata accessor for TaskPriority(0);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v118, 1, 1, v122);
                  v123 = v119;
                  v125 = static MainActor.shared.getter(v124);
                  v126 = (_QWORD *)swift_allocObject(&unk_1010D99A8, 40, 7);
                  v126[2] = v125;
                  v126[3] = &protocol witness table for MainActor;
                  v126[4] = v123;
                  sub_100166D14(v118, (uint64_t)&unk_1011C6678, (uint64_t)v126);
                  swift_release();
                  swift_release();
LABEL_41:
                  v127 = *(_QWORD *)(v0 + 616);
                  v128 = *(_QWORD *)(v0 + 608);
                  v129 = *(_QWORD *)(v0 + 584);
                  v130 = *(_QWORD *)(v0 + 576);
                  v131 = *(_QWORD *)(v0 + 552);
                  swift_task_dealloc(*(_QWORD *)(v0 + 624));
                  swift_task_dealloc(v127);
                  swift_task_dealloc(v128);
                  swift_task_dealloc(v129);
                  swift_task_dealloc(v130);
                  swift_task_dealloc(v131);
                  (*(void (**)(void))(v0 + 8))();
                  return;
                }
                goto LABEL_51;
              }
LABEL_50:

              __break(1u);
LABEL_51:

              __break(1u);
              goto LABEL_52;
            }
LABEL_49:

            __break(1u);
            goto LABEL_50;
          }
LABEL_48:

          __break(1u);
          goto LABEL_49;
        }
LABEL_47:

        __break(1u);
        goto LABEL_48;
      }
LABEL_46:

      __break(1u);
      goto LABEL_47;
    }
LABEL_45:

    __break(1u);
    goto LABEL_46;
  }
  if (v36 == (void *)1)
    goto LABEL_24;
  if (!v2)
  {
    sub_1001666B8(v36, v37, 0, v38, v40, v39, v41, v42, v44, v43, v45, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
    goto LABEL_24;
  }
  v138 = *(_QWORD *)(v0 + 128);
  v140 = *(_QWORD *)(v0 + 120);
  v142 = *(_QWORD *)(v0 + 112);
  v144 = *(_QWORD *)(v0 + 104);
  v132 = *(_QWORD *)(v0 + 96);
  *(_BYTE *)(v0 + 312) = v37;
  *(_QWORD *)(v0 + 320) = v2;
  *(_QWORD *)(v0 + 328) = v38;
  *(_QWORD *)(v0 + 336) = v40;
  *(_QWORD *)(v0 + 344) = v39;
  *(_QWORD *)(v0 + 352) = v41;
  *(_QWORD *)(v0 + 360) = v42;
  v136 = v36;
  v46 = v37;
  v47 = v38;
  v48 = v43;
  sub_1001667D4(v37, (void *)v2, v38, v40, v39, v41, v42);
  sub_1001667D4(v46, (void *)v2, v47, v40, v39, v41, v42);
  v146 = v48;
  v158 = v44;
  v133 = v46;
  v148 = (void *)v2;
  v154 = v47;
  v134 = v40;
  v49 = (_QWORD *)(v0 + 136);
  v151 = v39;
  sub_1004FE614(v136, v46, (void *)v2, v47, v40, v39, v41, v42);
  PlaylistCovers.Recipe.init(from:)((unsigned __int8 *)(v0 + 312), (_QWORD *)(v0 + 136));
  v50 = PlaylistCovers.Recipe.rawJSONRepresentation()();
  v135 = v42;
  if (v2)
  {
    v137 = v41;
    v51 = *(_QWORD *)(v0 + 576);
    v52 = *(_QWORD *)(v0 + 568);
    v53 = *(_QWORD *)(v0 + 560);
    sub_1001668F8(v49);
    v54 = Logger.playlistCovers.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v51, v54, v53);
    swift_errorRetain(v2);
    v55 = swift_errorRetain(v2);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.error.getter(v56);
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc(12, -1);
      v59 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v58 = 138543362;
      swift_errorRetain(v2);
      v60 = _swift_stdlib_bridgeErrorToNSError(v2);
      *(_QWORD *)(v0 + 536) = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 536, v159);
      *v59 = v60;
      swift_errorRelease(v2);
      swift_errorRelease(v2);
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Failed to encode recipe with error=%{public}@", v58, 0xCu);
      v61 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
      swift_arrayDestroy(v59, 1, v61);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v58, -1, -1);

      sub_100166878(v136, v133, v148, v154, v134, v151, v137, v135, v158, v146);
      sub_1001666B8(v136, v133, v148, v154, v134, v151, v137, v135, v158, v146, v132, v144, v142, v140, v138);
      swift_errorRelease(v2);
      sub_100166720(v133, v148, v154, v134, v151, v137, v135);
    }
    else
    {
      sub_100166720(v46, v148, v47, v40, v151, v137, v135);
      swift_errorRelease(v2);
      swift_errorRelease(v2);
      swift_errorRelease(v2);

      v2 = v158;
      sub_100166878(v136, v46, v148, v47, v40, v151, v137, v135, v158, v146);
      sub_1001666B8(v136, v46, v148, v47, v40, v151, v137, v135, v158, v146, v132, v144, v142, v140, v138);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 568) + 8))(*(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 560));
    goto LABEL_24;
  }
  sub_1001668F8(v49);
  if (*(_QWORD *)(v161 + v162))
  {
    v67 = swift_retain();
    MusicLibraryPlaylistEditViewModel.rawCoverArtworkRecipe.setter(v50._countAndFlagsBits, v50._object, v67);
    v2 = (uint64_t)v39;
    sub_100166720(v46, v148, v47, v40, v39, v41, v42);
    sub_100166878(v136, v46, v148, v47, v40, v39, v41, v42, v158, v48);
    sub_1001666B8(v136, v46, v148, v47, v40, v39, v41, v42, v158, v48, v132, v144, v142, v140, v138);
    v33 = swift_release();
    goto LABEL_24;
  }
LABEL_53:
  __break(1u);
}

uint64_t sub_10073E060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v4[3] = a4;
  v5 = type metadata accessor for Locale(0);
  v4[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v4[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v4[7] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[8] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[9] = swift_task_alloc(v10);
  v4[10] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v4[11] = v11;
  v4[12] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v4[13] = v13;
  v4[14] = v14;
  return swift_task_switch(sub_10073E16C, v13, v14);
}

void sub_10073E16C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void (*v4)(_QWORD);

  v1 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController);
  v0[15] = v1;
  if (v1)
  {
    v2 = *((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save() + 1);
    v4 = (void (*)(_QWORD))((char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save()
                                     + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save());
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc(v2);
    v0[16] = v3;
    *v3 = v0;
    v3[1] = sub_10073E1F8;
    v4(v0[10]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10073E1F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[13];
    v5 = v2[14];
    v6 = sub_10073E4EC;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[8] + 8))(v2[10], v2[7]);
    swift_release();
    v4 = v2[13];
    v5 = v2[14];
    v6 = sub_10073E278;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10073E278()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void **)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_dataSource);
  *(_QWORD *)(v0 + 144) = v1;
  if (v1)
  {
    v2 = dword_1011D09BC;
    v1;
    v3 = (_QWORD *)swift_task_alloc(v2);
    *(_QWORD *)(v0 + 152) = v3;
    *v3 = v0;
    v3[1] = sub_10073E3B8;
    return sub_10093A148();
  }
  else
  {
    swift_release();
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(void **)(v0 + 24);
    v7 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
    v8 = v6;
    v10 = static MainActor.shared.getter(v9);
    v11 = (_QWORD *)swift_allocObject(&unk_1010D99F8, 40, 7);
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v8;
    sub_100166D14(v5, (uint64_t)&unk_1011C66B0, (uint64_t)v11);
    swift_release();
    v12 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 40);
    v13 = *(_QWORD *)(v0 + 48);
    v15 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10073E3B8()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 144);
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));

  return swift_task_switch(sub_10073E408, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_10073E408()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_release();
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(void **)(v0 + 24);
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = v2;
  v6 = static MainActor.shared.getter(v5);
  v7 = (_QWORD *)swift_allocObject(&unk_1010D99F8, 40, 7);
  v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = v4;
  sub_100166D14(v1, (uint64_t)&unk_1011C66B0, (uint64_t)v7);
  swift_release();
  v8 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10073E4EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  NSString v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  unint64_t v30;
  id v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  swift_release();
  swift_release();
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v1 = *(_QWORD *)(v0 + 136);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124DDD0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 136);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error committing playlist changes with error=%@", v8, 0xCu);
    v11 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 136));
    swift_errorRelease(v7);
  }

  v13 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 72);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 32);
  v16 = *(_QWORD *)(v0 + 40);
  v17 = *(_QWORD *)(v0 + 24);
  v18 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000027, 0x8000000100E43F50);
  static Locale.current.getter(v18);
  String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v15, 0, 0, 256);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v19, 0, 1);

  String.okButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v21, 0, 0);

  objc_msgSend(v20, "addAction:", v22);
  sub_10004A07C(0, &qword_1011C6690, UIAlertAction_ptr);
  _StringGuts.grow(_:)(25);
  v23 = swift_bridgeObjectRelease();
  v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v13 + 16))(v12, v17 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist, v14, v23);
  v25 = Playlist.id.getter(v24);
  v27 = v26;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  v28._countAndFlagsBits = MusicItemID.description.getter(v25, v27);
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29._countAndFlagsBits = 96;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  v30 = sub_1007412B0((uint64_t)_swiftEmptyArrayStorage);
  v31 = static UIAlertAction.tapToRadar(title:description:screenshots:attachments:keywords:withDevicePrefix:)(0xD000000000000017, 0x8000000100E43F80, 0xD000000000000016, 0x8000000100E43FA0, (uint64_t)_swiftEmptyArrayStorage, v30, (uint64_t)_swiftEmptyArrayStorage, 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v32 = swift_bridgeObjectRelease().n128_u64[0];
  if (v31)
  {
    objc_msgSend(v20, "addAction:", v31, v32);

  }
  v33 = *(_QWORD *)(v0 + 136);
  v34 = *(_QWORD *)(v0 + 48);
  v35 = *(void **)(v0 + 24);
  v36 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 1, 1, v36);
  v37 = v35;
  v38 = v20;
  v40 = static MainActor.shared.getter(v39);
  v41 = (_QWORD *)swift_allocObject(&unk_1010D99D0, 48, 7);
  v41[2] = v40;
  v41[3] = &protocol witness table for MainActor;
  v41[4] = v37;
  v41[5] = v38;
  sub_100166D14(v34, (uint64_t)&unk_1011C66A0, (uint64_t)v41);
  swift_release();

  swift_errorRelease(v33);
  v42 = *(_QWORD *)(v0 + 72);
  v44 = *(_QWORD *)(v0 + 40);
  v43 = *(_QWORD *)(v0 + 48);
  v45 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10073E9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10073EA48, v7, v8);
}

uint64_t sub_10073EA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;

  swift_release();
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)qword_10124DDD0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Will dismiss edit view controller", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(void **)(v0 + 16);

  objc_msgSend(v6, "dismissViewControllerAnimated:completion:", 1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10073EB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10073EBB4, v8, v9);
}

uint64_t sub_10073EBB4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  objc_msgSend(v2, "presentViewController:animated:completion:", v1, 1, 0);
  objc_msgSend(v2, "setEditing:animated:", 1, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10073EC1C()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  NSString v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  NSString v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  NSString v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  int v44;
  uint8_t *v45;
  uint64_t v46;
  char *v47;
  _QWORD aBlock[7];

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v1, "isEditing", v10))
  {
    if (qword_10119CB10 != -1)
      swift_once(&qword_10119CB10, sub_10096883C);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100048B14(v14, (uint64_t)qword_10124DDD0);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Will dismiss edit view controller", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }
    goto LABEL_20;
  }
  v47 = v4;
  if ((sub_10073792C() & 1) != 0)
    v13 = 1;
  else
    v13 = v1[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_hasTracklistChanges];
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100048B14(v19, (uint64_t)qword_10124DDD0);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v23 = 67109120;
    LODWORD(aBlock[0]) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "🏮Cancel button called, hasChanges=%{BOOL}d", v23, 8u);
    swift_slowDealloc(v23, -1, -1);
  }

  if (!v13)
  {
    v16 = Logger.logObject.getter(v24);
    v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, (os_log_type_t)v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v44, "Will dismiss edit view controller", v45, 2u);
      swift_slowDealloc(v45, -1, -1);
    }
LABEL_20:

    objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);
    return;
  }
  v25.n128_f64[0] = (*(double (**)(char *, unsigned __int8 *, uint64_t))(v9 + 16))(v12, &v1[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist], v8);
  Playlist.name.getter(v25);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002ELL, 0x8000000100E43F20);
  v27 = v47;
  static Locale.current.getter(v26);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v27, 0, 0, 256);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v28, v29, 0);

  v31 = String.LocalizationValue.init(stringLiteral:)(0x2064726163736944, 0xEF7365676E616843);
  static Locale.current.getter(v31);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v27, 0, 0, 256);
  v32 = swift_allocObject(&unk_1010D9958, 24, 7);
  *(_QWORD *)(v32 + 16) = v1;
  v33 = v1;
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_100741B5C;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100223938;
  aBlock[3] = &unk_1010D9970;
  v35 = _Block_copy(aBlock);
  swift_release();
  v36 = (void *)objc_opt_self(UIAlertAction);
  v37 = objc_msgSend(v36, "actionWithTitle:style:handler:", v34, 2, v35);
  _Block_release(v35);

  objc_msgSend(v30, "addAction:", v37);
  v38 = String.LocalizationValue.init(stringLiteral:)(0x696445207065654BLL, 0xEC000000676E6974);
  static Locale.current.getter(v38);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v27, 0, 0, 256);
  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v36, "actionWithTitle:style:handler:", v39, 1, 0, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v30, "addAction:", v40);
  v41 = objc_msgSend(v30, "popoverPresentationController");
  if (v41)
  {
    v42 = v41;
    v43 = (void *)sub_1007342F4();
    objc_msgSend(v42, "setBarButtonItem:", v43);

  }
  objc_msgSend(v33, "presentViewController:animated:completion:", v30, 1, 0);

}

id sub_10073F2B4(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100048B14(v3, (uint64_t)qword_10124DDD0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Will dismiss edit view controller", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  return objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_10073F398(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id v7;
  id v8;
  char v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  id v18;
  void *v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v27;
  id v28;
  CGRect v29;
  CGRect v30;

  v7 = objc_msgSend(v3, "navigationItem");
  v8 = objc_msgSend(v7, "navigationBar");

  if (v8)
  {
    v9 = a3 & 1;
    objc_msgSend(v8, "frame");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;

    v29.origin.x = v11;
    v29.origin.y = v13;
    v29.size.width = v15;
    v29.size.height = v17;
    CGRectGetHeight(v29);
    v18 = objc_msgSend(v3, "navigationController");
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v18, "toolbar");

      if (v20)
      {
        objc_msgSend(v20, "frame");
        CGRectGetHeight(v30);

      }
    }
    v21 = static HI.Modal.modalSize(modalType:sceneSize:navigationBarHeight:)(2, a1, a2, v9);
    v23 = v22;
    objc_msgSend(v3, "preferredContentSize");
    if (v21 != v25 || v23 != v24)
    {
      objc_msgSend(v3, "setPreferredContentSize:", v21, v23);
      v27 = objc_msgSend(v3, "navigationController");
      if (v27)
      {
        v28 = v27;
        objc_msgSend(v27, "setPreferredContentSize:", v21, v23);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

double sub_10073F574()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (v3 != (id)6)
  {
    v5 = swift_allocObject(&unk_1010D98B8, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v6 = type metadata accessor for NotificationObserver();
    swift_allocObject(v6, 64, 7);
    *(_QWORD *)&v1[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_keyboardWillShowNotificationObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIKeyboardWillShowNotification, 0, 1, 1, (uint64_t)sub_100741AC0, v5);
    swift_release();
    v7 = swift_allocObject(&unk_1010D98B8, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16);
    swift_allocObject(v6, 64, 7);
    *(_QWORD *)&v1[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_keyboardWillHideNotificationObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIKeyboardWillHideNotification, 0, 1, 1, (uint64_t)sub_100741AC8, v7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_10073F6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  char *v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[88];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, &v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (char *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    KeyboardAvoidance.init(notification:)((uint64_t)v7, (uint64_t)v22);
    sub_100065228((uint64_t)v22, (uint64_t)&v23, (uint64_t *)&unk_1011C6660);
    if (v28 != 2)
    {
      v31 = v25;
      v32 = v26;
      v33 = v27;
      v34 = v28;
      v29 = v23;
      v30 = v24;
      v10 = *(void **)&v9[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataHeaderView];
      if (v10)
      {
        v11 = swift_allocObject(&unk_1010D9908, 112, 7);
        v12 = v26;
        *(_OWORD *)(v11 + 48) = v25;
        *(_OWORD *)(v11 + 64) = v12;
        *(_OWORD *)(v11 + 80) = v27;
        *(_BYTE *)(v11 + 96) = v28;
        v13 = v24;
        *(_OWORD *)(v11 + 16) = v23;
        *(_OWORD *)(v11 + 32) = v13;
        *(_QWORD *)(v11 + 104) = v9;
        v14 = swift_allocObject(&unk_1010D9930, 113, 7);
        *(_QWORD *)(v14 + 16) = v9;
        *(_QWORD *)(v14 + 24) = v10;
        v15 = v26;
        *(_OWORD *)(v14 + 64) = v25;
        *(_OWORD *)(v14 + 80) = v15;
        *(_OWORD *)(v14 + 96) = v27;
        *(_BYTE *)(v14 + 112) = v28;
        v16 = v24;
        *(_OWORD *)(v14 + 32) = v23;
        *(_OWORD *)(v14 + 48) = v16;
        v17 = v10;
        v18 = v9;
        v19 = v17;
        KeyboardAvoidance.animate(alongsideKeyboard:completion:)(sub_100743864, v11, sub_100741B48, v14);
        swift_release();
        swift_release();

      }
      else
      {
        KeyboardAvoidance.animateContentScrollView(in:)((UIViewController)v9);
      }
    }

  }
}

void sub_10073F8F8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  id v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  CGFloat Width;
  id v37;
  double v38;
  double v39;
  double v40;
  double v41;
  id v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _BYTE v46[40];
  _QWORD v47[4];
  char v48;
  _QWORD v49[5];
  CGRect v50;

  v43 = 0u;
  v44 = 0u;
  LOBYTE(v45) = 1;
  v5 = sub_100734B54();
  KeyPath = swift_getKeyPath(&unk_100ECD6D8);
  v7 = swift_getKeyPath(&unk_100ECD700);
  static Published.subscript.getter(v49, v5, KeyPath, v7);
  swift_release();
  swift_release();
  swift_release();
  if (LOBYTE(v49[0]) == 1)
  {
    v8 = sub_100733A54();
    objc_msgSend(a3, "frame", v43, v44, v45);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = objc_msgSend(a3, "superview");
    objc_msgSend(v8, "convertRect:fromView:", v17, v10, v12, v14, v16);
    v19 = v18;
    v21 = v20;

    v22 = sub_100733A54();
    objc_msgSend(v22, "adjustedContentInset");
    v24 = v23;

    v25 = objc_msgSend(a2, "view");
    if (!v25)
    {
      __break(1u);
      return;
    }
    v26 = v25;
    v27 = v21 - v24;
    objc_msgSend(v25, "bounds");
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v35 = v34;

    v50.origin.x = v29;
    v50.origin.y = v31;
    v50.size.width = v33;
    v50.size.height = v35;
    Width = CGRectGetWidth(v50);
    v37 = sub_100733A54();
    objc_msgSend(v37, "adjustedContentInset");
    v39 = v38;

    *(_QWORD *)&v43 = v19;
    *((double *)&v43 + 1) = v27;
    *(CGFloat *)&v44 = Width;
    LOBYTE(v45) = 0;
    if (qword_10119C120 != -1)
      swift_once(&qword_10119C120, sub_1004FD6DC);
    *((double *)&v44 + 1) = v39 + *(double *)&qword_10124D1C8;
  }
  sub_100065228((uint64_t)&v43, (uint64_t)v49, &qword_1011A22F0);
  KeyboardAvoidance.recommendedScrollRect(in:preferredVisibleRect:)(a2, (uint64_t)v49, (uint64_t)v46);
  sub_100065228((uint64_t)v46, (uint64_t)v47, &qword_1011A22F0);
  if ((v48 & 1) == 0)
  {
    v40 = *(double *)v47;
    v41 = *(double *)&v47[1];
    v42 = sub_100733A54();
    objc_msgSend(v42, "setContentOffset:animated:", 1, v40, v41);

  }
}

void sub_10073FB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[88];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, &v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    KeyboardAvoidance.init(notification:)((uint64_t)v7, (uint64_t)v16);
    sub_100065228((uint64_t)v16, (uint64_t)&v17, (uint64_t *)&unk_1011C6660);
    if (v22 != 2)
    {
      v25 = v19;
      v26 = v20;
      v27 = v21;
      v28 = v22;
      v23 = v17;
      v24 = v18;
      v10 = swift_allocObject(&unk_1010D98E0, 112, 7);
      v11 = v20;
      *(_OWORD *)(v10 + 48) = v19;
      *(_OWORD *)(v10 + 64) = v11;
      *(_OWORD *)(v10 + 80) = v21;
      *(_BYTE *)(v10 + 96) = v22;
      v12 = v18;
      *(_OWORD *)(v10 + 16) = v17;
      *(_OWORD *)(v10 + 32) = v12;
      *(_QWORD *)(v10 + 104) = v9;
      v13 = v9;
      KeyboardAvoidance.animate(alongsideKeyboard:)((uint64_t)sub_100741AF4, v10);
      swift_release();
    }

  }
}

id sub_10073FD3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaylistEditingViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10073FF30()
{
  return type metadata accessor for PlaylistEditingViewController(0);
}

uint64_t type metadata accessor for PlaylistEditingViewController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C6380, (uint64_t)&nominal type descriptor for PlaylistEditingViewController);
}

void sub_10073FF4C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[23];

  v8[0] = "\b";
  v8[1] = "\b";
  v8[2] = "\b";
  v8[3] = "\b";
  v8[4] = "\b";
  v8[5] = "\b";
  v8[6] = "\b";
  v8[7] = "\b";
  v8[8] = "\b";
  v8[9] = "\b";
  v8[10] = "\b";
  v8[11] = "\b";
  v8[12] = "\b";
  v8[13] = "\b";
  v8[14] = &unk_100ECD488;
  v2 = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v8[15] = *(_QWORD *)(v2 - 8) + 64;
    v8[16] = "\b";
    v8[17] = "\b";
    sub_1003F02CC(319, &qword_1011C6398, &qword_1011C63A0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v8[18] = *(_QWORD *)(v4 - 8) + 64;
      v8[19] = &unk_100ECD4A0;
      sub_1003F02CC(319, &qword_1011C63A8, qword_1011C63B0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v8[20] = *(_QWORD *)(v6 - 8) + 64;
        v8[21] = "\b";
        v8[22] = "\b";
        swift_updateClassMetadata2(a1, 256, 23, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_10074005C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + 96);
}

void sub_100740090(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  char v27;
  id v28;
  void *v29;
  _OWORD v30[9];
  uint64_t v31;

  v3 = v2;
  v6 = type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin(v6);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_OWORD *)(a1 + 112);
  v30[6] = *(_OWORD *)(a1 + 96);
  v30[7] = v9;
  v30[8] = *(_OWORD *)(a1 + 128);
  v31 = *(_QWORD *)(a1 + 144);
  v10 = *(_OWORD *)(a1 + 48);
  v30[2] = *(_OWORD *)(a1 + 32);
  v30[3] = v10;
  v11 = *(_OWORD *)(a1 + 80);
  v30[4] = *(_OWORD *)(a1 + 64);
  v30[5] = v11;
  v12 = *(_OWORD *)(a1 + 16);
  v30[0] = *(_OWORD *)a1;
  v30[1] = v12;
  v13 = objc_allocWithZone((Class)sub_100007E8C((uint64_t *)&unk_1011C6770));
  sub_1004FDEEC((_QWORD *)a1);
  v14 = (void *)UIHostingController.init(rootView:)(v30);
  v15 = objc_msgSend(v14, "view");
  if (!v15)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v15;
  objc_msgSend(v15, "invalidateIntrinsicContentSize");

  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter(v8);
  v17 = objc_msgSend(v14, "parentViewController");
  if (!v17)
    goto LABEL_5;
  v18 = v17;
  sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v19 = a2;
  v20 = v18;
  LOBYTE(v18) = static NSObject.== infix(_:_:)(v20, v19);

  if ((v18 & 1) != 0)
  {
    v21 = 1;
  }
  else
  {
LABEL_5:
    objc_msgSend(a2, "addChildViewController:", v14);
    v21 = 0;
  }
  v22 = objc_msgSend(v3, "subviews");
  v23 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

  v25 = objc_msgSend(v14, "view");
  if (!v25)
    goto LABEL_14;
  v26 = v25;
  v27 = sub_100414D90((uint64_t)v25, v24);
  swift_bridgeObjectRelease();

  if ((v27 & 1) == 0)
  {
    v28 = objc_msgSend(v14, "view");
    if (v28)
    {
      v29 = v28;
      UIView.addSubviewAnchoredToBounds(_:useLayoutMarginsGuide:padding:)(v28);

      goto LABEL_10;
    }
LABEL_15:
    __break(1u);
    return;
  }
LABEL_10:
  if ((v21 & 1) == 0)
    objc_msgSend(v14, "didMoveToParentViewController:", a2);

}

id sub_100740308(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  objc_class *v13;
  objc_super v15;

  v13 = (objc_class *)type metadata accessor for PlaylistEditingViewController.HeaderView(0, *(_QWORD *)((swift_isaMask & *v8) + 0x50), *(_QWORD *)((swift_isaMask & *v8) + 0x58), a8);
  v15.receiver = v8;
  v15.super_class = v13;
  return objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
}

id sub_100740384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  return sub_100740308(a5, a6, a7, a8, a1, a2, a3, a4);
}

id sub_1007403A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id v7;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for PlaylistEditingViewController.HeaderView(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v9.receiver = v4;
  v9.super_class = v6;
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_10074040C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return sub_1007403A4(v3, v4, v5, v6);
}

id sub_100740430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for PlaylistEditingViewController.HeaderView(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t type metadata accessor for PlaylistEditingViewController.HeaderView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlaylistEditingViewController.HeaderView);
}

uint64_t sub_100740488()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100ECD600);
  v2 = swift_getKeyPath(&unk_100ECD6B8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1007404F8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100ECD628);
  v2 = swift_getKeyPath(&unk_100ECD698);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_100740568()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100ECD650);
  v2 = swift_getKeyPath(&unk_100ECD678);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1007405D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0
     + OBJC_IVAR____TtCC5Music29PlaylistEditingViewControllerP33_CBF7D4EB2DE8D68004B7790E133CB40421MusicPickerDataSource__isPresentingPicker;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0
     + OBJC_IVAR____TtCC5Music29PlaylistEditingViewControllerP33_CBF7D4EB2DE8D68004B7790E133CB40421MusicPickerDataSource__selectedTracks;
  v4 = sub_100007E8C(&qword_1011C6650);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0
     + OBJC_IVAR____TtCC5Music29PlaylistEditingViewControllerP33_CBF7D4EB2DE8D68004B7790E133CB40421MusicPickerDataSource__suggestedSongsViewModel;
  v6 = sub_100007E8C(&qword_1011C6658);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  sub_10004FF60(v0+ OBJC_IVAR____TtCC5Music29PlaylistEditingViewControllerP33_CBF7D4EB2DE8D68004B7790E133CB40421MusicPickerDataSource_playlist, &qword_1011A30F0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10074069C()
{
  return type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource(0);
}

uint64_t type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C6480, (uint64_t)&nominal type descriptor for PlaylistEditingViewController.MusicPickerDataSource);
}

void sub_1007406B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[4];

  sub_100069338();
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1003F02CC(319, (unint64_t *)&qword_1011C03D0, (uint64_t *)&unk_1011B8ED0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000E3A44(319, qword_1011C6498, (uint64_t (*)(uint64_t))&type metadata accessor for MusicSuggestedSongsViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_1000E3A44(319, (unint64_t *)&qword_1011C46C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v9 <= 0x3F)
        {
          v10[3] = *(_QWORD *)(v8 - 8) + 64;
          swift_updateClassMetadata2(a1, 256, 4, v10, a1 + 80);
        }
      }
    }
  }
}

uint64_t sub_1007407BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1007407F8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1
     + OBJC_IVAR____TtCC5Music29PlaylistEditingViewControllerP33_CBF7D4EB2DE8D68004B7790E133CB40421MusicPickerDataSource_playlist;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10004A160(v3, a1, &qword_1011A30F0);
}

uint64_t sub_10074085C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100ECD5AC, a4);
  return sub_10056B460(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_1007408B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  unsigned __int8 v52;

  v44 = a3;
  v5 = sub_100007E8C(&qword_1011C6610);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100007E8C(&qword_1011C6618);
  v9 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  v43 = v9;
  __chkstk_darwin(v8);
  v45 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource(0);
  v12 = sub_100048748(&qword_1011C6620, type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource, (uint64_t)&unk_100ECD5C8);
  v41 = v11;
  v13 = ObservedObject.projectedValue.getter(a1, a2, v11, v12);
  KeyPath = swift_getKeyPath(&unk_100ECD600);
  ObservedObject.Wrapper.subscript.getter(v51, KeyPath, v13, v12);
  swift_release();
  swift_release();
  v15 = v51[0];
  v39 = v51[1];
  v40 = v52;
  v16 = ObservedObject.projectedValue.getter(a1, a2, v11, v12);
  v17 = swift_getKeyPath(&unk_100ECD628);
  ObservedObject.Wrapper.subscript.getter(&v46, v17, v16, v12);
  swift_release();
  swift_release();
  v19 = v46;
  v18 = v47;
  v20 = v48;
  v21 = swift_getKeyPath(&unk_100ECD650);
  v22 = swift_getKeyPath(&unk_100ECD678);
  v38 = a2;
  swift_retain();
  static Published.subscript.getter(&v50, v23, v21, v22);
  swift_release();
  swift_release();
  v24 = swift_release();
  v25 = (uint64_t)v7;
  *v7 = v50;
  v26 = enum case for MusicPicker.Reason.editingPlaylist(_:);
  v27 = type metadata accessor for MusicPicker.Reason(0, v24);
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v28 + 104))(v7, v26, v27);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v7, 0, 1, v27);
  v29 = sub_100007E8C((uint64_t *)&unk_1011C6630);
  v30 = type metadata accessor for Track(0);
  v31 = sub_100054EF4();
  v32 = sub_100048748((unint64_t *)&unk_1011C6640, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
  View.musicPicker<A>(isPresented:selection:reason:onCompletion:)(v15, v39, v40, v19, v18, v20, v25, &unk_1011C6628, 0, v29, v30, v31, v32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_10004FF60(v25, &qword_1011C6610);
  v51[0] = v38;
  v46 = v29;
  v47 = v30;
  v48 = v31;
  v49 = v32;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v46, &opaque type descriptor for <<opaque return type of View.musicPicker<A>(isPresented:selection:reason:onCompletion:)>>, 1);
  v34 = sub_100048748(&qword_1011C65E0, type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource, (uint64_t)&unk_100ECD574);
  v35 = v45;
  v36 = v42;
  View.musicPickerUserExperienceObserver<A>(_:)(v51, v42, v41, OpaqueTypeConformance2, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v35, v36);
}

uint64_t sub_100740C38@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECD600);
  v5 = swift_getKeyPath(&unk_100ECD6B8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_100740CB4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ECD600);
  v5 = swift_getKeyPath(&unk_100ECD6B8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100740D24@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECD628);
  v5 = swift_getKeyPath(&unk_100ECD698);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_100740DA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ECD628);
  v5 = swift_getKeyPath(&unk_100ECD698);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100740E18@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1007408B8(*v1, v1[1], a1);
}

ValueMetadata *type metadata accessor for PlaylistEditingViewController.MusicPickerWrapper()
{
  return &type metadata for PlaylistEditingViewController.MusicPickerWrapper;
}

uint64_t sub_100740EE8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FABDD4, 1);
}

uint64_t sub_100740EF8(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011C65E0, type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource, (uint64_t)&unk_100ECD574);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100740F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v13;

  v0 = type metadata accessor for Playlist.EditableComponents(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.editableComponents.getter(v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
  {
    sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011C65F0);
    return 0xD000000000000026;
  }
  v8 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
  dispatch thunk of SetAlgebra.init()(v0, v8);
  v9 = sub_100048748((unint64_t *)&unk_1011C6600, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
  v10 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v3, v0, v9);
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v3, v0);
  v11(v7, v0);
  if ((v10 & 1) != 0)
    return 0xD000000000000026;
  return 0;
}

void sub_1007410B4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;

  v4 = type metadata accessor for Playlist(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  v8 = objc_allocWithZone((Class)type metadata accessor for PlaylistEditingViewController(0));
  v9 = a2;
  v10 = sub_100741734((uint64_t)v6, a2);

  v11 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v10);
  objc_msgSend(v11, "setModalPresentationStyle:", 2);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v11, 0, (id)0xF, (void **)1, 0, 0);

}

uint64_t sub_1007411BC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECD650);
  v5 = swift_getKeyPath(&unk_100ECD678);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_100741238(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ECD650);
  v5 = swift_getKeyPath(&unk_100ECD678);
  v7 = v2;
  swift_retain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

unint64_t sub_1007412B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_1011C66B8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v9 = *(v6 - 1);
    v10 = *v6;
    swift_bridgeObjectRetain();
    sub_100079DE4(v9, v10);
    result = sub_1007413D4(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (uint64_t *)(v4[7] + 16 * result);
    *v14 = v9;
    v14[1] = v10;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1007413D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_100741438(a1, a2, v5);
}

unint64_t sub_100741438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      i = (i + 1) & v13;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v14 = (_QWORD *)(v9 + 16 * i);
        v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0)
        {
          for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
          {
            v17 = (_QWORD *)(v9 + 16 * i);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_10074157C()
{
  uint64_t v0;

  return sub_100561DFC(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_100741588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  _QWORD *v25;

  v5 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (!v9)
    return (unint64_t)v10;
  v24 = v8;
  v19 = v2;
  v25 = _swiftEmptyArrayStorage;
  sub_10035CBEC(0, v9, 0);
  v10 = v25;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v21 = a2 + v22;
  v23 = *(_QWORD *)(a2 + 16);
  v20 = *(_QWORD *)(v12 + 72);
  while (1)
  {
    result = IndexPath.item.getter(v11);
    if (result >= v23)
      break;
    v15 = *(_QWORD *)(v6 + 72);
    v16 = v24;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v24, v21 + v15 * result, v5);
    v25 = v10;
    v18 = v10[2];
    v17 = v10[3];
    if (v18 >= v17 >> 1)
    {
      sub_10035CBEC(v17 > 1, v18 + 1, 1);
      v16 = v24;
      v10 = v25;
    }
    v10[2] = v18 + 1;
    v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))((char *)v10 + v22 + v18 * v15, v16, v5);
    v13 += v20;
    if (!--v9)
      return (unint64_t)v10;
  }
  __break(1u);
  return result;
}

id sub_100741734(uint64_t a1, void *a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  objc_class *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  uint64_t v29;
  objc_super v30;
  _BYTE v31[152];

  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___mainLayout] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___cancelNavigationBarButtonItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___doneNavigationBarButtonItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___deleteToolBarButtonItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___addToolBarButtonItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___metadataViewModel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataHeaderView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___musicPickerDataSource] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___musicPickerHostingView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_musicPickerSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editControllerEntriesSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataTitleSubscription] = 0;
  v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_hasTracklistChanges] = 0;
  v11 = OBJC_IVAR____TtC5Music29PlaylistEditingViewController_dataSource;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_dataSource] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_currentUserUploadImage] = 0;
  v12 = &v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___headerRegistration];
  v13 = sub_100007E8C(&qword_1011C63A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (uint64_t)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataView];
  sub_100741A64((uint64_t)v31);
  sub_100065228((uint64_t)v31, v14, &qword_1011C65E8);
  v15 = &v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___cellRegistration];
  v16 = sub_100007E8C(qword_1011C63B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_keyboardWillShowNotificationObserver] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_keyboardWillHideNotificationObserver] = 0;
  v17 = &v2[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist];
  v18 = type metadata accessor for Playlist(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a1, v18);
  v20 = *(void **)&v2[v11];
  *(_QWORD *)&v2[v11] = a2;
  v21 = a2;

  v22 = (objc_class *)type metadata accessor for PlaylistEditingViewController(0);
  v30.receiver = v2;
  v30.super_class = v22;
  v23 = objc_msgSendSuper2(&v30, "initWithNibName:bundle:", 0, 0);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x616C502074696445, 0xED00007473696C79);
  static Locale.current.getter(v24);
  String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, 0, v7, 0, 0, 256);
  v26 = v25;
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setTitle:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
  return v23;
}

double sub_100741A64(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_100741A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100741AC0(uint64_t a1)
{
  uint64_t v1;

  sub_10073F6F0(a1, v1);
}

void sub_100741AC8(uint64_t a1)
{
  uint64_t v1;

  sub_10073FB94(a1, v1);
}

uint64_t sub_100741AD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 112, 7);
}

void sub_100741AF4()
{
  UIViewController *v0;

  KeyboardAvoidance.applyAdditionalSafeAreaInsets(to:)(v0[13]);
}

uint64_t sub_100741B1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 113, 7);
}

void sub_100741B48(uint64_t a1)
{
  uint64_t v1;

  sub_10073F8F8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

id sub_100741B5C(uint64_t a1)
{
  uint64_t v1;

  return sub_10073F2B4(a1, *(void **)(v1 + 16));
}

uint64_t sub_100741B64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100741B74(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100741B98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011C6674);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10073E060(a1, v4, v5, v6);
}

uint64_t sub_100741C14()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100741C48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011C669C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10073EB48(a1, v4, v5, v7, v6);
}

uint64_t sub_100741CC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011C66AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10073E9DC(a1, v4, v5, v6);
}

void sub_100741D38(uint64_t *a1)
{
  uint64_t v1;

  sub_10073CA90(a1, v1);
}

uint64_t sub_100741D40()
{
  return sub_100742C44((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_100741D4C()
{
  uint64_t v0;

  sub_10073C288(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100741D54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100741D64()
{
  return sub_100742A48((void (*)(_QWORD))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_100741D74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011C670C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10073B074(a1, v4, v5, v7, v6);
}

uint64_t sub_100741DF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011C6724);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10073B6B0(a1, v4, v5, v6);
}

uint64_t sub_100741E5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100741E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100738EE8(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_100741E88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007392DC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for PlaylistEditingViewController.Cell(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C68F0, (uint64_t)&nominal type descriptor for PlaylistEditingViewController.Cell);
}

uint64_t sub_100741EA4(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100739354(a1, a2, v2);
}

void sub_100741EB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100738BAC(a1, a2, a3, a4, v4);
}

uint64_t sub_100741EBC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t *sub_100741ED4(uint64_t *a1)
{
  sub_100741F34(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18]);
  return a1;
}

uint64_t sub_100741F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t result;

  if (a2)
  {
    swift_release(a2);
    swift_bridgeObjectRelease(a14);
    swift_bridgeObjectRelease(a16);
    swift_release(a4);
    swift_release(a7);
    swift_release(a9);
    swift_release(a11);
    swift_release(a13);
    swift_release(a15);
    swift_release(a17);
    swift_release(a18);
    return swift_release(a19);
  }
  return result;
}

_QWORD *sub_100741FFC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[10];
  v7 = a1[12];
  v8 = a1[13];
  v9 = a1[14];
  v10 = a1[16];
  v12 = a1[17];
  v13 = a1[18];
  swift_bridgeObjectRelease(a1[15]);
  swift_bridgeObjectRelease(v8);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  swift_release(v9);
  swift_release(v10);
  swift_release(v12);
  swift_release(v13);
  return a1;
}

uint64_t sub_1007420D0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v12;

  v12 = *(void **)(a1 + 80);
  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(void **)(a1 + 96);
  v4 = *(void **)(a1 + 104);
  v5 = *(void **)(a1 + 112);
  v6 = *(void **)(a1 + 120);
  v7 = *(void **)(a1 + 128);
  v8 = *(void **)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 144);
  v10 = *(_QWORD *)(a1 + 152);
  sub_100742178(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void **)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  sub_100742178(v12, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

double sub_100742178(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  double result;

  if (a1 != (void *)1)
    return sub_100166878(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return result;
}

void *sub_100742190(void *result, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  if (result != (void *)1)
    return sub_1004FE614(result, a2, a3, a4, a5, a6, a7, a8);
  return result;
}

void sub_1007421A8()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _BYTE v6[152];

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___mainLayout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___cancelNavigationBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___doneNavigationBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___deleteToolBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___addToolBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___metadataViewModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataHeaderView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___musicPickerDataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___musicPickerHostingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_musicPickerSubscription] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_editControllerEntriesSubscription] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataTitleSubscription] = 0;
  v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_hasTracklistChanges] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_dataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_currentUserUploadImage] = 0;
  v1 = &v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___headerRegistration];
  v2 = sub_100007E8C(&qword_1011C63A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (uint64_t)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_metadataView];
  sub_100741A64((uint64_t)v6);
  sub_100065228((uint64_t)v6, v3, &qword_1011C65E8);
  v4 = &v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController____lazy_storage___cellRegistration];
  v5 = sub_100007E8C(qword_1011C63B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_keyboardWillShowNotificationObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29PlaylistEditingViewController_keyboardWillHideNotificationObserver] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/PlaylistEditingViewController.swift", 41, 2, 28, 0);
  __break(1u);
}

uint64_t sub_10074237C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v1 = type metadata accessor for Playlist.EditableComponents(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, v0 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist, v5, v10);
  Playlist.editableComponents.getter(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v12, 1, v1) == 1)
  {
    sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011C65F0);
    v14 = 0;
  }
  else
  {
    static Playlist.EditableComponents.tracklist.getter();
    v15 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
    v14 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v1, v15);
    v16 = *(void (**)(char *, uint64_t))(v2 + 8);
    v16(v4, v1);
    v16(v12, v1);
  }
  return v14 & 1;
}

uint64_t sub_100742520()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v1 = type metadata accessor for Playlist.EditableComponents(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v0, "isEditing", v10))
  {
    v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, (uint64_t)v0 + OBJC_IVAR____TtC5Music29PlaylistEditingViewController_playlist, v5);
    Playlist.editableComponents.getter(v13);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v12, 1, v1) != 1)
    {
      static Playlist.EditableComponents.tracklist.getter();
      v15 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
      v14 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v1, v15);
      v16 = *(void (**)(char *, uint64_t))(v2 + 8);
      v16(v4, v1);
      v16(v12, v1);
      return v14 & 1;
    }
    sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011C65F0);
  }
  v14 = 0;
  return v14 & 1;
}

uint64_t sub_1007426D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t, __n128);
  __n128 v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];

  v4 = v3;
  v47 = a3;
  v43 = a2;
  v44 = a1;
  v5 = type metadata accessor for Playlist(0);
  v45 = *(_QWORD **)(v5 - 8);
  __chkstk_darwin(v5);
  v42 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v46 = (char *)&v42 - v8;
  v9 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011C6650);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v4
      + OBJC_IVAR____TtCC5Music29PlaylistEditingViewControllerP33_CBF7D4EB2DE8D68004B7790E133CB40421MusicPickerDataSource__isPresentingPicker;
  LOBYTE(v49[0]) = 0;
  Published.init(initialValue:)(v49, &type metadata for Bool);
  v21 = v19;
  v22 = v16;
  v23 = v4;
  v25 = v43;
  v24 = v44;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v20, v21, v22);
  v26 = v23
      + OBJC_IVAR____TtCC5Music29PlaylistEditingViewControllerP33_CBF7D4EB2DE8D68004B7790E133CB40421MusicPickerDataSource__selectedTracks;
  v49[0] = _swiftEmptyArrayStorage;
  v27 = sub_100007E8C((uint64_t *)&unk_1011B8ED0);
  Published.init(initialValue:)(v49, v27);
  v28 = v15;
  v29 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v26, v28, v12);
  v30 = v23
      + OBJC_IVAR____TtCC5Music29PlaylistEditingViewControllerP33_CBF7D4EB2DE8D68004B7790E133CB40421MusicPickerDataSource_playlist;
  v31 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29[7];
  v31(v23+ OBJC_IVAR____TtCC5Music29PlaylistEditingViewControllerP33_CBF7D4EB2DE8D68004B7790E133CB40421MusicPickerDataSource_playlist, 1, 1, v5);
  v32 = (void (*)(char *, uint64_t, uint64_t))v29[2];
  v32(v11, v24, v5);
  v31((uint64_t)v11, 0, 1, v5);
  swift_beginAccess(v30, v49, 33, 0);
  v33 = v30;
  v34 = v46;
  sub_1000A5508((uint64_t)v11, v33, &qword_1011A30F0);
  swift_endAccess(v49);
  v32(v34, v24, v5);
  if (v25)
  {
    v35 = (void (*)(char *, uint64_t, __n128))v29[1];
    v36 = swift_retain();
  }
  else
  {
    v37 = v42;
    v32(v42, (uint64_t)v34, v5);
    v38 = type metadata accessor for MusicSuggestedSongsViewModel(0);
    swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
    v25 = MusicSuggestedSongsViewModel.init(playlist:)(v37);
    v35 = (void (*)(char *, uint64_t, __n128))v29[1];
  }
  v35(v34, v5, v36);
  v39 = swift_retain();
  dispatch thunk of MusicSuggestedSongsViewModel.playlistEditViewModel.setter(v39);
  swift_beginAccess(v23+ OBJC_IVAR____TtCC5Music29PlaylistEditingViewControllerP33_CBF7D4EB2DE8D68004B7790E133CB40421MusicPickerDataSource__suggestedSongsViewModel, v49, 33, 0);
  v48 = v25;
  v40 = type metadata accessor for MusicSuggestedSongsViewModel(0);
  Published.init(initialValue:)(&v48, v40);
  swift_endAccess(v49);
  ((void (*)(uint64_t, uint64_t))v35)(v24, v5);
  return v23;
}

uint64_t sub_100742A38()
{
  return sub_100742A48((void (*)(_QWORD))&_swift_release, 56);
}

uint64_t sub_100742A48(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16));

  a1(*(_QWORD *)(v2 + 40));
  return swift_deallocObject(v2, a2, 7);
}

uint64_t sub_100742A94(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD *v9;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011C67A4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10005AEE4;
  return sub_1007355C0(v8, a1, v4, v5, v6, v7);
}

uint64_t sub_100742B24(uint64_t a1)
{
  sub_100166720(*(_QWORD *)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void **)(a1 + 48));
  return a1;
}

void sub_100742B58(uint64_t a1)
{
  uint64_t v1;

  sub_100117DBC(a1, v1, (void (*)(void))sub_10073C3A4);
}

void sub_100742B78(uint64_t a1)
{
  uint64_t v1;

  sub_100734640(a1, v1);
}

void sub_100742B80(uint64_t a1)
{
  uint64_t v1;

  sub_100117DBC(a1, v1, (void (*)(void))sub_10073BFA8);
}

double sub_100742BA0(uint64_t a1)
{
  uint64_t v1;

  return sub_10073443C(a1, v1);
}

uint64_t sub_100742BAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011C67DC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100734518(a1, v4, v5, v6);
}

void sub_100742C18(uint64_t a1)
{
  uint64_t v1;

  sub_100117DBC(a1, v1, sub_10073EC1C);
}

uint64_t sub_100742C38()
{
  return sub_100742C44((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100742C44(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

void *sub_100742C7C(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_100733F8C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

double sub_100742C84(void *a1)
{
  return sub_100732748(a1);
}

uint64_t sub_100742C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100742D1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011C67EC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_10073078C(a1, v6, v7, v8, v9);
}

uint64_t sub_100742DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  v5 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100742E4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C6800) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_1011C681C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_1007312DC(a1, v5, v6, v7, v8, v9);
}

void sub_100742EE8(uint64_t a1)
{
  uint64_t v1;

  sub_100732530(a1, v1);
}

uint64_t sub_100742EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject(v0, v4);
}

void sub_100742F68(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C6800) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_100731B24(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t *sub_100742FBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = v9;
      v14 = v11;
      v15 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = v9;
      v14 = v11;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

double sub_1007430B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v4 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100743140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = v8;
    v13 = v10;
    v14 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = v8;
    v13 = v10;
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v13, v14);
  return a1;
}

uint64_t sub_10074320C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_10004FF60(a1 + v7, (uint64_t *)&unk_1011ACE40);
    v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_1007432F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1007433B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_10004FF60(a1 + v7, (uint64_t *)&unk_1011ACE40);
    v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100743498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007434A4);
}

uint64_t sub_1007434A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_10074351C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100743528);
}

uint64_t sub_100743528(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Playlist.Entry(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C(&qword_1011C6890);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1007435A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Playlist.Entry(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t sub_100743644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v0 = sub_100044B54(&qword_1011C6618);
  v1 = type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource(255);
  v5 = sub_100044B54((uint64_t *)&unk_1011C6630);
  v6 = type metadata accessor for Track(255);
  v7 = sub_100054EF4();
  v8 = sub_100048748((unint64_t *)&unk_1011C6640, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.musicPicker<A>(isPresented:selection:reason:onCompletion:)>>, 1);
  v3 = sub_100048748(&qword_1011C65E0, type metadata accessor for PlaylistEditingViewController.MusicPickerDataSource, (uint64_t)&unk_100ECD574);
  v5 = v0;
  v6 = v1;
  v7 = OpaqueTypeConformance2;
  v8 = v3;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.musicPickerUserExperienceObserver<A>(_:)>>, 1);
}

uint64_t sub_100743738(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FABDFC, 1);
}

unint64_t sub_100743748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C6980;
  if (!qword_1011C6980)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011C6970);
    sub_100238A3C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6980);
  }
  return result;
}

unint64_t sub_1007437C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C69F0;
  if (!qword_1011C69F0)
  {
    v1 = sub_100044B54(&qword_1011C6948);
    sub_100049F28(&qword_1011C6990, &qword_1011C6940, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28(&qword_1011C6998, &qword_1011C6930, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C69F0);
  }
  return result;
}

uint64_t sub_100743894()
{
  unint64_t v0;
  uint64_t var1;

  v0 = sub_10060F7F4();
  EnvironmentValues.subscript.getter(&var1, &type metadata for AdaptativeContainerOrientationKey, &type metadata for AdaptativeContainerOrientationKey, v0);
  return var1;
}

ValueMetadata *type metadata accessor for AdaptativeContainerOrientationKey()
{
  return &type metadata for AdaptativeContainerOrientationKey;
}

uint64_t storeEnumTagSinglePayload for AdaptativeContainerOrientation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100743928 + 4 * byte_100ECDBE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10074395C + 4 * byte_100ECDBE0[v4]))();
}

uint64_t sub_10074395C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100743964(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10074396CLL);
  return result;
}

uint64_t sub_100743978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100743980);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100743984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10074398C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdaptativeContainerOrientation()
{
  return &type metadata for AdaptativeContainerOrientation;
}

unint64_t sub_1007439AC()
{
  unint64_t result;

  result = qword_1011C6A00;
  if (!qword_1011C6A00)
  {
    result = swift_getWitnessTable(&unk_100ECDC80, &type metadata for AdaptativeContainerOrientation);
    atomic_store(result, (unint64_t *)&qword_1011C6A00);
  }
  return result;
}

uint64_t sub_1007439F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t WitnessTable;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v79[2];
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;

  v96 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_100044B54(&qword_1011C6A98);
  v6 = type metadata accessor for ModifiedContent(255, v4, v5);
  v7 = type metadata accessor for _ConditionalContent(0, v6, v6);
  v84 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v83 = (char *)v79 - v8;
  v90 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v9);
  v88 = (char *)v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v92 = (uint64_t)v79 - v12;
  v89 = v13;
  v14 = type metadata accessor for _ConditionalContent(0, v13, v6);
  v87 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v86 = (uint64_t)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v85 = (char *)v79 - v17;
  v18 = type metadata accessor for UserInterfaceSizeClass(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)v79 - v23;
  v25 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v25);
  v27 = (char *)v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v14;
  v28 = type metadata accessor for _ConditionalContent(0, v14, v6);
  v94 = *(_QWORD *)(v28 - 8);
  v95 = v28;
  __chkstk_darwin(v28);
  v91 = (char *)v79 - v29;
  v30 = a1;
  sub_100824BE4((uint64_t)v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v27, 1, v18) != 1)
  {
    v79[0] = v6;
    v79[1] = v2;
    v43 = v88;
    v44 = v89;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v27, v18);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, v24, v18);
    v45 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
    v81 = v19;
    v82 = v18;
    v80 = v24;
    if (v45 == enum case for UserInterfaceSizeClass.compact(_:))
    {
      v46 = (uint64_t)v43;
      sub_1007441FC(v30, 0);
      v41 = *(_QWORD *)(v30 + 24);
      v47 = sub_100744C50();
      v103 = v41;
      v104 = v47;
      v42 = v79[0];
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v79[0]);
      v49 = v92;
      sub_10081EB14(v46, v42, v92);
      v50 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
      v50(v46, v42);
      sub_1000EA744(v49, v42, v46);
      v51 = (uint64_t)v83;
      sub_1008171F4(v46, v42, v42, WitnessTable, WitnessTable);
      v50(v46, v42);
      v101 = WitnessTable;
      v102 = WitnessTable;
      v37 = v44;
      v52 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v44);
      v53 = (uint64_t)v85;
      sub_100817130(v51, v44, v42, v52, WitnessTable);
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v51, v44);
    }
    else
    {
      v37 = v44;
      v54 = (uint64_t)v43;
      v55 = v90;
      v56 = v30;
      v42 = v79[0];
      if (v45 != enum case for UserInterfaceSizeClass.regular(_:))
      {
        v62 = v54;
        sub_1007441FC(v56, 0);
        v41 = *(_QWORD *)(v56 + 24);
        v63 = sub_100744C50();
        v113 = v41;
        v114 = v63;
        v64 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v42);
        v65 = v92;
        sub_10081EB14(v62, v42, v92);
        v66 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
        v66(v62, v42);
        sub_1000EA744(v65, v42, v62);
        v111 = v64;
        v112 = v64;
        v67 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v37);
        v68 = v21;
        v69 = v85;
        sub_1008171F4(v62, v37, v42, v67, v64);
        v66(v62, v42);
        v66(v65, v42);
        v53 = (uint64_t)v69;
        (*(void (**)(char *, uint64_t))(v81 + 8))(v68, v82);
LABEL_9:
        v70 = sub_100744C50();
        v109 = v41;
        v110 = v70;
        v71 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v42);
        v107 = v71;
        v108 = v71;
        v105 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v37);
        v106 = v71;
        v38 = v93;
        v72 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v93);
        v73 = v86;
        sub_1000EA744(v53, v38, v86);
        v40 = (uint64_t)v91;
        sub_100817130(v73, v38, v42, v72, v71);
        v74 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
        v74(v73, v38);
        v74(v53, v38);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
        goto LABEL_10;
      }
      v57 = v54;
      sub_1007441FC(v56, 1);
      v41 = *(_QWORD *)(v56 + 24);
      v58 = sub_100744C50();
      v99 = v41;
      v100 = v58;
      v59 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v42);
      v49 = v92;
      sub_10081EB14(v57, v42, v92);
      v50 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
      v50(v57, v42);
      sub_1000EA744(v49, v42, v57);
      v60 = (uint64_t)v83;
      sub_100817130(v57, v42, v42, v59, v59);
      v50(v57, v42);
      v97 = v59;
      v98 = v59;
      v61 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v37);
      v53 = (uint64_t)v85;
      sub_100817130(v60, v37, v42, v61, v59);
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v60, v37);
    }
    v50(v49, v42);
    goto LABEL_9;
  }
  v31 = (uint64_t)v88;
  sub_1007441FC(a1, 0);
  v87 = *(_QWORD *)(a1 + 24);
  v32 = v87;
  v33 = sub_100744C50();
  v127 = v32;
  v128 = v33;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  v35 = v92;
  sub_10081EB14(v31, v6, v92);
  v36 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
  v36(v31, v6);
  sub_1000EA744(v35, v6, v31);
  v125 = v34;
  v126 = v34;
  v37 = v89;
  v123 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v89);
  v124 = v34;
  v38 = v93;
  v39 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v93);
  v40 = (uint64_t)v91;
  sub_1008171F4(v31, v38, v6, v39, v34);
  v36(v31, v6);
  v41 = v87;
  v36(v35, v6);
  v42 = v6;
LABEL_10:
  v75 = sub_100744C50();
  v121 = v41;
  v122 = v75;
  v76 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v42);
  v119 = v76;
  v120 = v76;
  v117 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v37);
  v118 = v76;
  v115 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v38);
  v116 = v76;
  v77 = v95;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v95);
  sub_1000EA744(v40, v77, v96);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v94 + 8))(v40, v77);
}

uint64_t sub_1007441FC(uint64_t a1, char a2)
{
  void (**v2)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v12;
  char v13;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*v2)(v9);
  KeyPath = swift_getKeyPath(&unk_100ECDD88);
  v13 = a2;
  View.environment<A>(_:_:)(KeyPath, &v13, v5, *(_QWORD *)(a1 + 24));
  swift_release(KeyPath);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1007442C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *v5;
  uint64_t v6;

  *a5 = a1;
  a5[1] = a2;
  v5 = (_QWORD *)((char *)a5 + *(int *)(type metadata accessor for AdaptativeContainer(0, a3, a4, a4) + 36));
  *v5 = swift_getKeyPath(&unk_100ECDCE0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  return swift_storeEnumTagMultiPayload(v5, v6, 0);
}

uint64_t sub_100744328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_100744378();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_100744378()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C6A08;
  if (!qword_1011C6A08)
  {
    v1 = sub_100044B54(qword_1011C6A10);
    sub_1007439AC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6A08);
  }
  return result;
}

uint64_t type metadata accessor for AdaptativeContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdaptativeContainer);
}

void sub_1007443F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for () + 64;
  sub_1001C17C8(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
  }
}

_QWORD *sub_100744468(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 36);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    v10 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for UserInterfaceSizeClass(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v8, v9, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      v14 = v8;
      v15 = v10;
      v16 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v14 = v8;
      v15 = v10;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return a1;
}

void sub_1007445A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
}

_QWORD *sub_100744658(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 36);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  swift_retain();
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      v11 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      v12 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v10 + 16))(v6, v7, v9);
      v12 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
  }
  else
  {
    *v6 = *v7;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v12);
  return a1;
}

_QWORD *sub_100744768(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 36);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_10074489C((uint64_t)a1 + v7);
    v10 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for UserInterfaceSizeClass(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        v14 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v8, v9, v11);
        v14 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v14);
  }
  return a1;
}

uint64_t sub_10074489C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1007448DC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1007449E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 36);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_10074489C((uint64_t)a1 + v6);
    v9 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100744B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100744B18);
}

uint64_t sub_100744B18(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A48A0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t sub_100744B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100744BA4);
}

char *sub_100744BA4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A48A0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_100744C1C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FABE98, 1);
}

unint64_t sub_100744C50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C6AA0;
  if (!qword_1011C6AA0)
  {
    v1 = sub_100044B54(&qword_1011C6A98);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6AA0);
  }
  return result;
}

uint64_t sub_100744CA4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *a1;
  v2 = sub_100044B54(&qword_1011C6A98);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  v4 = type metadata accessor for _ConditionalContent(255, v3, v3);
  v5 = type metadata accessor for _ConditionalContent(255, v4, v3);
  v6 = type metadata accessor for _ConditionalContent(255, v5, v3);
  sub_100744C50();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v4);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v5);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v6);
}

uint64_t sub_100744D98(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int *v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  unsigned __int8 v10;
  __n128 v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v2 = (int *)type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicVideo(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v5, (uint64_t)&protocol witness table for MusicVideo, v4);
  v6 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v7 = &v4[v6[5]];
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 4, 10, v8);
  v9 = Corner.large.unsafeMutableAddressor();
  v10 = *((_BYTE *)v9 + 16);
  v11 = *(__n128 *)v9;
  *(_QWORD *)&v4[v6[6]] = 0x3FFC71C71C71C71CLL;
  v12 = (__n128 *)&v4[v6[7]];
  *v12 = v11;
  v12[1].n128_u8[0] = v10;
  v13 = MusicVideo.title.getter(v11);
  v15 = v14;
  v16 = MusicVideo.artistName.getter(v13);
  v18 = v17;
  v19 = MusicVideo.albumTitle.getter(v16);
  v20 = (uint64_t *)&v4[v2[5]];
  *v20 = v13;
  v20[1] = v15;
  v21 = (uint64_t *)&v4[v2[6]];
  *v21 = v16;
  v21[1] = v18;
  v22 = (uint64_t *)&v4[v2[7]];
  *v22 = v19;
  v22[1] = v23;
  v4[v2[8]] = 1;
  v4[v2[9]] = 0;
  v24 = objc_allocWithZone((Class)type metadata accessor for ContextualPreview.ViewController(0));
  sub_1001CFEF0((uint64_t)v4);
  v26 = v25;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v26;
}

uint64_t sub_100744F2C(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  __int128 v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v2 = (int *)type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TVEpisode.artworkViewModel.getter(v4);
  v5 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v6 = &v4[v5[5]];
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 5, 10, v7);
  v8 = Corner.large.unsafeMutableAddressor();
  v9 = *((_BYTE *)v8 + 16);
  v10 = *(_OWORD *)v8;
  *(_QWORD *)&v4[v5[6]] = 0x3FFC71C71C71C71CLL;
  v11 = &v4[v5[7]];
  *(_OWORD *)v11 = v10;
  v11[16] = v9;
  v12 = TVEpisode.title.getter(v8);
  v14 = v13;
  v15 = TVEpisode.showName.getter(v12);
  v16 = (uint64_t *)&v4[v2[5]];
  *v16 = v12;
  v16[1] = v14;
  v17 = (uint64_t *)&v4[v2[6]];
  *v17 = v15;
  v17[1] = v18;
  v19 = &v4[v2[7]];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v4[v2[8]] = 1;
  v4[v2[9]] = 0;
  v20 = objc_allocWithZone((Class)type metadata accessor for ContextualPreview.ViewController(0));
  sub_1001CFEF0((uint64_t)v4);
  v22 = v21;
  v23 = type metadata accessor for TVEpisode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
  return v22;
}

uint64_t sub_100745098(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int *v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  __int128 v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v2 = (int *)type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Album(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v5, (uint64_t)&protocol witness table for Album, v4);
  v6 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v7 = &v4[v6[5]];
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 10, v8);
  v9 = Corner.large.unsafeMutableAddressor();
  v10 = *((_BYTE *)v9 + 16);
  v11 = *(_OWORD *)v9;
  *(_QWORD *)&v4[v6[6]] = 0x3FF0000000000000;
  v12 = &v4[v6[7]];
  *(_OWORD *)v12 = v11;
  v12[16] = v10;
  v13 = Album.title.getter(v9);
  v15 = v14;
  v16 = Album.artistName.getter(v13);
  v17 = (uint64_t *)&v4[v2[5]];
  *v17 = v13;
  v17[1] = v15;
  v18 = (uint64_t *)&v4[v2[6]];
  *v18 = v16;
  v18[1] = v19;
  v20 = &v4[v2[7]];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v4[v2[8]] = 1;
  v4[v2[9]] = 0;
  v21 = objc_allocWithZone((Class)type metadata accessor for ContextualPreview.ViewController(0));
  sub_1001CFEF0((uint64_t)v4);
  v23 = v22;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v23;
}

int64x2_t sub_10074520C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4050000000000000uLL);
  xmmword_10124D940 = (__int128)result;
  return result;
}

void sub_100745220(uint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  int v23;
  uint64_t ObjectType;

  v3 = v2;
  v23 = a2;
  ObjectType = swift_getObjectType();
  v5 = _s6AlbumsVMa(0);
  __chkstk_darwin(v5);
  v6 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - v8;
  v10 = &v2[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___globalHeaderRegistration];
  v11 = sub_100007E8C(&qword_1011A37B0);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(&v3[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___headerRegistration], 1, 1, v11);
  v13 = &v3[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___gridCellRegistration];
  v14 = sub_100007E8C(&qword_1011A37C0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = &v3[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___listCellRegistration];
  v16 = sub_100007E8C((uint64_t *)&unk_1011A37D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___collectionView] = 0;
  v17 = OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_prefetchingController;
  v18 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  v19 = v3;
  *(_QWORD *)&v3[v17] = sub_1001EA3C8(0xD00000000000001DLL, 0x8000000100E440A0);
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_dragDropController] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___searchController] = 0;
  v20 = &v19[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___actionMetricsReportingContext];
  v21 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  sub_10005B704(a1, (uint64_t)&v19[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_scope], _s6AlbumsV5ScopeOMa);
  sub_10005B704(a1, (uint64_t)v9, _s6AlbumsV5ScopeOMa);
  v22 = (char *)sub_1007454AC + 4 * byte_100ECDDB0[swift_getEnumCaseMultiPayload(v9, v6)];
  __asm { BR              X10 }
}

id sub_1007454AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  id v15;
  char v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;

  sub_10005B748(v4, _s6AlbumsV5ScopeOMa);
  v7 = _s23LayoutVariantControllerCMa();
  swift_allocObject(v7, 56, 7);
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_layoutVariantController] = sub_1005AE0DC(0x477972617262694CLL, 0xED00007365726E65, 0);
  sub_10005B704(v0, v1, _s6AlbumsV5ScopeOMa);
  sub_1002334EC(v1, *(_DWORD *)(v6 - 128) & 1, v3);
  v8 = sub_100007E8C(&qword_1011A3800);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController] = sub_10018BFC8(v3);

  v9 = *(_QWORD *)(v6 - 104);
  *(_QWORD *)(v6 - 96) = v5;
  *(_QWORD *)(v6 - 88) = v9;
  v10 = objc_msgSendSuper2((objc_super *)(v6 - 96), "initWithNibName:bundle:", 0, 0);
  sub_100745798();
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setTitle:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v14 = (uint64_t)v10 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_scope;
  swift_storeEnumTagMultiPayload(v1, v2, 4);
  v15 = v10;
  sub_100236CD4(v14, v1);
  LOBYTE(v14) = v16;
  sub_10005B748(v1, _s6AlbumsV5ScopeOMa);
  if ((v14 & 1) != 0)
    v17 = 3;
  else
    v17 = 1;
  UIViewController.playActivityFeatureIdentifier.setter(v17);

  v18 = sub_100007E8C(&qword_1011A1750);
  v19 = swift_allocObject(v18, 48, 7);
  *(_OWORD *)(v6 - 128) = xmmword_100EA7AA0;
  *(_OWORD *)(v19 + 16) = xmmword_100EA7AA0;
  v20 = sub_10018D478();
  *(_QWORD *)(v19 + 32) = &type metadata for LibraryFilterTrait;
  *(_QWORD *)(v19 + 40) = v20;
  v21 = v15;
  v22 = UIViewController.registerForTraitChanges<A>(_:handler:)(v19, sub_10074CC88, 0, v9);
  swift_unknownObjectRelease(v22);

  swift_bridgeObjectRelease(v19);
  v23 = swift_allocObject(v18, 48, 7);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)(v6 - 128);
  v24 = sub_10013ADBC();
  *(_QWORD *)(v23 + 32) = &type metadata for MusicLibraryTrait;
  *(_QWORD *)(v23 + 40) = v24;
  v25 = v21;
  v26 = UIViewController.registerForTraitChanges<A>(_:handler:)(v23, sub_10074CC8C, 0, v9);
  swift_unknownObjectRelease(v26);
  swift_bridgeObjectRelease(v23);

  sub_10005B748(v0, _s6AlbumsV5ScopeOMa);
  return v25;
}

void sub_100745798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  _QWORD v11[6];

  v1 = type metadata accessor for Artist(0);
  v11[3] = *(_QWORD *)(v1 - 8);
  v11[4] = v1;
  __chkstk_darwin(v1);
  v2 = type metadata accessor for Composer(0);
  v11[1] = *(_QWORD *)(v2 - 8);
  v11[2] = v2;
  __chkstk_darwin(v2);
  v3 = type metadata accessor for Genre(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v6 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v8, v9);
  v10 = (char *)sub_100745940 + 4 * byte_100ECDDB5[swift_getEnumCaseMultiPayload(v8, v6)];
  __asm { BR              X10 }
}

uint64_t sub_100745940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v2, v3, v1);
  v5 = ((uint64_t (*)(uint64_t))Genre.name.getter)(v4);
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  return v5;
}

void sub_100745A78()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double (**v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t (**v12)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (**v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _QWORD v50[4];
  _QWORD v51[4];
  _QWORD v52[4];
  _QWORD v53[4];
  objc_super v54;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v54.receiver = v0;
  v54.super_class = ObjectType;
  objc_msgSendSuper2(&v54, "viewDidLoad");
  v3 = sub_100745F00();
  v4 = sub_1007462A8();
  objc_msgSend(v3, "setCollectionViewLayout:", v4);

  v5 = sub_100745F00();
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_prefetchingController];
  objc_msgSend(v5, "setPrefetchDataSource:", v6);

  v7 = swift_allocObject(&unk_1010D9F68, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v8 = swift_allocObject(&unk_1010DA148, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = ObjectType;
  v9 = (double (**)(uint64_t, uint64_t))(v6
                                                + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v11 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v10 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider + 8);
  *v9 = sub_10074DDB4;
  v9[1] = (double (*)(uint64_t, uint64_t))v8;
  sub_10004BA30(v11, v10);
  v12 = (unint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>))(v6
                                                                                        + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v13 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v14 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider + 8);
  *v12 = sub_1007464F0;
  v12[1] = 0;
  sub_10004BA30(v13, v14);
  sub_10074681C();
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_layoutVariantController];
  v16 = swift_allocObject(&unk_1010D9F68, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v17 = *(_QWORD *)(v15 + 16);
  v18 = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v15 + 16) = sub_10074DDBC;
  *(_QWORD *)(v15 + 24) = v16;
  sub_10004BA30(v17, v18);
  v19 = (char *)sub_100745F00();
  v20 = swift_allocObject(&unk_1010D9F68, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16);
  v21 = (void (**)(uint64_t, uint64_t))&v19[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  v22 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  v23 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate + 8];
  *v21 = sub_10074DDC8;
  v21[1] = (void (*)(uint64_t, uint64_t))v20;
  sub_10004BA30(v22, v23);

  v24 = sub_10074726C();
  v25 = objc_msgSend(v1, "traitCollection");
  v26 = objc_msgSend(v25, "horizontalSizeClass");

  objc_msgSend(*(id *)(v24 + 16), "setHidesNavigationBarDuringPresentation:", v26 == (id)1);
  swift_release();
  v27 = sub_100007E8C(&qword_1011A1750);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v28 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v28 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v29 = UIViewController.registerForTraitChanges<A>(_:handler:)(v28, sub_10074CC90, 0, ObjectType);
  swift_unknownObjectRelease(v29);
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController];
  v31 = swift_allocObject(&unk_1010D9F68, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16);
  v32 = (uint64_t *)(v30 + *(_QWORD *)(*(_QWORD *)v30 + 104));
  v33 = *v32;
  v34 = v32[1];
  *v32 = (uint64_t)sub_10074DDD0;
  v32[1] = v31;
  sub_10004BA30(v33, v34);
  v35 = sub_10074726C();
  v36 = swift_allocObject(&unk_1010D9F68, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16);
  v37 = *(_QWORD *)(v35 + 72);
  v38 = *(_QWORD *)(v35 + 80);
  *(_QWORD *)(v35 + 72) = sub_10074DDD8;
  *(_QWORD *)(v35 + 80) = v36;
  sub_10004BA30(v37, v38);
  swift_release();
  v39 = sub_100007E8C(&qword_1011A37B0);
  v50[3] = v39;
  v40 = sub_100049F68(v50);
  sub_100747734((uint64_t)v40);
  v51[3] = v39;
  v41 = sub_100049F68(v51);
  sub_100747924((uint64_t)v41);
  v52[3] = sub_100007E8C(&qword_1011A37C0);
  v42 = sub_100049F68(v52);
  sub_100747B18((uint64_t)v42);
  v53[3] = sub_100007E8C((uint64_t *)&unk_1011A37D0);
  v43 = sub_100049F68(v53);
  sub_100747CF4((uint64_t)v43);
  swift_arrayDestroy(v50, 4, (char *)&type metadata for Any + 8);
  v44 = sub_100745F00();
  v45 = swift_allocObject(&unk_1010D9F68, 24, 7);
  swift_unknownObjectWeakInit(v45 + 16);
  v46 = type metadata accessor for CollectionViewDragDropController(0);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  v47 = sub_1002E3B4C(v44, (uint64_t)sub_10074DDE0, v45, 0, 0, 0, 0, 0, 0);

  swift_release();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_dragDropController] = v47;
  swift_release();
  v48 = *(_QWORD *)(*(_QWORD *)v30 + 128);
  v49 = *(_BYTE *)(v30 + v48);
  *(_BYTE *)(v30 + v48) = 1;
  sub_1008E34F0(v49);
}

id sub_100745F00()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  id result;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double Width;
  void *v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  _BYTE v44[16];
  objc_super v45;
  objc_super v46;
  objc_super v47;
  CGRect v48;
  CGRect v49;

  v1 = v0;
  v2 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v44[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v44[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___collectionView;
  v11 = *(void **)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___collectionView];
  if (v11)
  {
    v12 = *(id *)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___collectionView];
LABEL_8:
    v43 = v11;
    return v12;
  }
  sub_10004A07C(0, (unint64_t *)&unk_1011A3DA0, UICollectionViewCompositionalLayout_ptr);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v2);
  UICollectionLayoutListConfiguration.init(appearance:)(v5);
  v13 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v9);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v14 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
  objc_allocWithZone(v14);
  v15 = v13;
  v16 = sub_1001089FC(v15, 1, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v18 = result;
    objc_msgSend(result, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

    v47.receiver = v16;
    v47.super_class = v14;
    objc_msgSendSuper2(&v47, "frame");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v46.receiver = v16;
    v46.super_class = v14;
    objc_msgSendSuper2(&v46, "setFrame:", v20, v22, v24, v26);
    v48.origin.x = v28;
    v48.origin.y = v30;
    v48.size.width = v32;
    v48.size.height = v34;
    Width = CGRectGetWidth(v48);
    v45.receiver = v16;
    v45.super_class = v14;
    objc_msgSendSuper2(&v45, "frame");
    if (Width != CGRectGetWidth(v49))
      sub_100108B5C();
    objc_msgSend(v16, "setAutoresizingMask:", 18);
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v36 = result;
      objc_msgSend(result, "addSubview:", v16);

      objc_msgSend(v16, "_setShouldPrefetchCellsWhenPerformingReloadData:", 1);
      objc_msgSend(v16, "setDataSource:", v1);
      objc_msgSend(v16, "setDelegate:", v1);
      objc_msgSend(v16, "setAlwaysBounceVertical:", 1);
      objc_msgSend(v16, "setKeyboardDismissMode:", 1);
      objc_msgSend(v16, "setAllowsFocus:", 1);
      objc_msgSend(v16, "setRemembersLastFocusedIndexPath:", 1);
      v44[15] = 0;
      v37 = sub_10004D63C();
      v38 = v16;
      objc_msgSend(v38, "setAllowsMultipleSelection:", FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v37) & 1);

      sub_100749B24();
      v41 = UIView.withAccessibilityIdentifier(_:)(v39, v40);

      swift_bridgeObjectRelease();
      v42 = *(void **)&v1[v10];
      *(_QWORD *)&v1[v10] = v41;
      v12 = v41;

      v11 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1007462A8()
{
  char *v0;
  _BYTE *v1;
  char v2;
  char v3;
  id v4;
  id v5;
  id v6;
  char v7;
  id v8;
  id v9;

  v1 = sub_100745F00();
  v2 = v1[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

  if ((v2 & 1) != 0)
    v3 = 1;
  else
    v3 = *(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_layoutVariantController] + 32);
  v4 = sub_100745F00();
  v5 = objc_msgSend(v0, "traitCollection");
  v6 = objc_msgSend(v5, "horizontalSizeClass");

  v7 = v6 == (id)1;
  if ((v3 & 1) != 0)
    v8 = sub_1005AEDD4((uint64_t)v4, v7, 0, 0, 0, 0);
  else
    v8 = sub_1005AEAE0((uint64_t)v4, v7);
  v9 = v8;

  return v9;
}

double sub_100746370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  _BYTE *v8;
  char v9;
  double v10;
  id v11;
  id v12;
  double (*v13)(uint64_t, uint64_t);
  _BYTE v15[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    return 0.0;
  v7 = (char *)Strong;
  v8 = sub_100745F00();
  v9 = v8[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

  if ((v9 & 1) != 0
    || *(_BYTE *)(*(_QWORD *)&v7[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_layoutVariantController] + 32) == 1)
  {
    if (qword_10119C768 != -1)
      swift_once(&qword_10119C768, sub_10074520C);
    v10 = *(double *)&xmmword_10124D940;
    v11 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    objc_msgSend(v11, "displayScale");

  }
  else
  {
    v12 = sub_100745F00();
    v13 = sub_1001091D0();

    v10 = v13(a1, a2);
    swift_release();

  }
  return v10;
}

unint64_t sub_1007464F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  unint64_t result;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;

  v34 = a2;
  v35 = a3;
  v4 = sub_100007E8C(&qword_1011A3D80);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011ADFD0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Album(0);
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3900);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A3910);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v36, &qword_10119DCC0);
  if (!v37)
  {
    sub_10004FF60((uint64_t)v36, &qword_10119DCC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_7;
  }
  v21 = swift_dynamicCast(v16, v36, (char *)&type metadata for Any + 8, v17, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, v21 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_7:
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A3900);
    v29 = type metadata accessor for Artwork(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 1, 1, v29);
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  v22 = MusicLibrarySectionedResponse.sections.getter(v17);
  result = IndexPath.section.getter(v22);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v22 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v22+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * result, v7);
    v24 = swift_bridgeObjectRelease();
    MusicLibrarySection.items.getter(v7, v24);
    v25 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v26 = IndexPath.item.getter(v25);
    v27 = v33;
    MusicItemCollection.subscript.getter(v26, v33);
    v28 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v6, v27);
    Album.artwork.getter(v28);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  __break(1u);
  return result;
}

void sub_10074681C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double v22;
  id v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  __n128 v31;
  BOOL v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  NSString v41;
  id v42;
  __n128 v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  NSString v52;
  id v53;
  NSString v54;
  id v55;
  __n128 v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  Class v63;
  uint64_t v64;
  NSArray v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  Class isa;
  _QWORD v73[3];
  char *v74;
  char v75[24];
  _QWORD aBlock[6];
  uint64_t v77;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v2);
  v74 = (char *)v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011A3910);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s6AlbumsVMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = (uint64_t)_swiftEmptyArrayStorage;
  v73[2] = sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  v11 = static UIButton.contextBarButton()();
  v12 = swift_allocObject(&unk_1010D9F68, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  aBlock[4] = sub_10074DDE8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100170D48;
  aBlock[3] = &unk_1010DA160;
  v13 = _Block_copy(aBlock);
  objc_msgSend(v11, "_setMenuProvider:", v13, swift_release().n128_f64[0]);
  _Block_release(v13);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v11);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
  specialized Array._endMutation()(v17);
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController];
  v19 = v18 + *(_QWORD *)(*(_QWORD *)v18 + 96);
  swift_beginAccess(v19, aBlock, 0, 0);
  sub_10005B704(v19, (uint64_t)v10, _s6AlbumsVMa);
  v20 = sub_100235664();
  sub_10005B748((uint64_t)v10, _s6AlbumsVMa);
  v21 = v20[2];
  *(_QWORD *)&v22 = swift_bridgeObjectRelease().n128_u64[0];
  if (v21)
  {
    v23 = sub_10018874C();
    v24 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v23);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v26 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v25 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v26 >= v25 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
    v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
    specialized Array._endMutation()(v27);

  }
  v28 = objc_msgSend(v1, "traitCollection", v22);
  v29 = objc_msgSend(v28, "horizontalSizeClass");

  if (v29 != (id)1)
  {
    v30 = v18 + *(_QWORD *)(*(_QWORD *)v18 + 112);
    v31 = swift_beginAccess(v30, v75, 0, 0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v30, 1, v4, v31))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v30, v4);
      v32 = MusicLibrarySectionedResponse.isEmpty.getter();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if (!v32)
      {
        v33 = swift_allocObject(&unk_1010D9F68, 24, 7);
        swift_unknownObjectWeakInit(v33 + 16);
        swift_retain();
        v34 = v74;
        static UIButton.Configuration.barButtonConfiguration(imageName:)(0x656C6666756873, 0xE700000000000000);
        v35 = sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
        v36 = swift_allocObject(&unk_1010DA198, 33, 7);
        *(_QWORD *)(v36 + 16) = sub_10074DDF0;
        *(_QWORD *)(v36 + 24) = v33;
        *(_BYTE *)(v36 + 32) = 1;
        swift_retain();
        v73[1] = v35;
        v37 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100344D68, v36);
        v38 = (id)UIButton.init(configuration:primaryAction:)(v34, v37);
        SymbolButton.Intent.title.getter(1);
        v39 = String._bridgeToObjectiveC()();
        objc_msgSend(v38, "setAccessibilityLabel:", v39, swift_bridgeObjectRelease().n128_f64[0]);

        v40 = v38;
        SymbolButton.Intent.title.getter(1);
        v41 = String._bridgeToObjectiveC()();
        objc_msgSend(v40, "setLargeContentTitle:", v41, swift_bridgeObjectRelease().n128_f64[0]);

        objc_msgSend(v40, "setShowsLargeContentViewer:", 1);
        v42 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v40);
        swift_release_n(v33, 2, v43);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
        v46 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v45 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v46 >= v45 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
        v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v42);
        specialized Array._endMutation()(v47);
        v48 = swift_allocObject(&unk_1010D9F68, 24, 7);
        swift_unknownObjectWeakInit(v48 + 16);
        swift_retain();
        static UIButton.Configuration.barButtonConfiguration(imageName:)(0x6C69662E79616C70, 0xE90000000000006CLL);
        v49 = swift_allocObject(&unk_1010DA1C0, 33, 7);
        *(_QWORD *)(v49 + 16) = sub_10074DDF0;
        *(_QWORD *)(v49 + 24) = v48;
        *(_BYTE *)(v49 + 32) = 0;
        swift_retain();
        v50 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100346218, v49);
        v51 = (id)UIButton.init(configuration:primaryAction:)(v34, v50);
        SymbolButton.Intent.title.getter(0);
        v52 = String._bridgeToObjectiveC()();
        objc_msgSend(v51, "setAccessibilityLabel:", v52, swift_bridgeObjectRelease().n128_f64[0]);

        v53 = v51;
        SymbolButton.Intent.title.getter(0);
        v54 = String._bridgeToObjectiveC()();
        objc_msgSend(v53, "setLargeContentTitle:", v54, swift_bridgeObjectRelease().n128_f64[0]);

        objc_msgSend(v53, "setShowsLargeContentViewer:", 1);
        v55 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v53);
        swift_release_n(v48, 2, v56);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v57);
        v59 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v58 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v59 >= v58 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v58 > 1, v59 + 1, 1);
        v60 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v55);
        specialized Array._endMutation()(v60);
      }
    }
  }
  v61 = objc_msgSend(v1, "traitCollection");
  v62 = objc_msgSend(v61, "userInterfaceIdiom");

  v63 = (Class)objc_msgSend(v1, "navigationItem");
  v64 = v77;
  if (v62 == (id)6)
  {
    sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    v65.super.isa = Array._bridgeToObjectiveC()().super.isa;
    -[objc_class setRightBarButtonItems:animated:](v63, "setRightBarButtonItems:animated:", v65.super.isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

    v63 = (Class)v11;
  }
  else
  {
    if (sub_1008EC8F4(v77))
      goto LABEL_20;
    v66 = -[objc_class rightBarButtonItems](v63, "rightBarButtonItems");
    if (!v66)
      goto LABEL_21;
    v67 = v66;
    v68 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    v69 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v67, v68);

    v70 = sub_1008EC9EC(v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v69) = sub_1002EC758((uint64_t)v70, v64);
    swift_bridgeObjectRelease_n(v70, 2);
    swift_bridgeObjectRelease();
    if ((v69 & 1) != 0)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      v65.super.isa = (Class)v11;
    }
    else
    {
LABEL_21:
      v71 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
      Array.inserting(separator:)((uint64_t)sub_1008ECB38, 0, v64, v71);
      isa = Array._bridgeToObjectiveC()().super.isa;
      -[objc_class setRightBarButtonItems:animated:](v63, "setRightBarButtonItems:animated:", isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

      swift_bridgeObjectRelease();
      v65.super.isa = (Class)v11;
      v63 = isa;
    }
  }

}

void sub_10074715C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_100745F00();
    v6 = sub_1007462A8();
    sub_100108F1C(v6);

  }
}

void sub_1007471D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  id v8;
  id v9;
  _BYTE v10[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    if ((*(_BYTE *)(a1 + 56) & 1) != (*(_BYTE *)(a2 + 56) & 1))
    {
      v8 = sub_100745F00();
      v9 = sub_1007462A8();
      sub_100108F1C(v9);

    }
  }
}

uint64_t sub_10074726C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;

  v1 = OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___searchController;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___searchController])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___searchController];
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for LibrarySearchController();
    swift_allocObject(v4, 121, 7);
    v5 = v0;
    v2 = sub_10040A500(0, 0, 0, (uint64_t)v5);

    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100747304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  char v24;
  __n128 v25;
  char v26;
  _BYTE v27[24];
  _QWORD v28[4];
  _BYTE v29[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3900);
  __chkstk_darwin(v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011A3910);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v29, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v12 = (char *)result;
    sub_10004A160(a1, (uint64_t)v6, (uint64_t *)&unk_1011A3900);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {

      return sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A3900);
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_prefetchingController];
    v28[3] = v7;
    v14 = sub_100049F68(v28);
    (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v8 + 16))(v14, v10, v7);
    v15 = v13 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context;
    swift_beginAccess(v15, v27, 33, 0);
    sub_1000A5508((uint64_t)v28, v15, &qword_10119DCC0);
    swift_endAccess(v27);
    objc_msgSend(v12, "setNeedsUpdateContentUnavailableConfiguration");
    v16 = sub_100745F00();
    objc_msgSend(v16, "reloadData");

    sub_10074681C();
    v17 = sub_10074726C();
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      v18 = (uint64_t *)(*(_QWORD *)(sub_10074726C() + 104)
                      + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
      v19 = v18[1];
      if (v19)
      {
        v20 = *v18;
        swift_release();
        v21 = HIBYTE(v19) & 0xF;
        if ((v19 & 0x2000000000000000) == 0)
          v21 = v20 & 0xFFFFFFFFFFFFLL;
        v22 = v21 != 0;
        v23 = *(unsigned __int8 *)(v17 + 48);
        *(_BYTE *)(v17 + 48) = v22;
        if (v23 == v22)
          goto LABEL_12;
      }
      else
      {
        swift_release();
        v26 = *(_BYTE *)(v17 + 48);
        *(_BYTE *)(v17 + 48) = 0;
        if ((v26 & 1) == 0)
          goto LABEL_12;
      }
    }
    else
    {
      v24 = *(_BYTE *)(v17 + 48);
      *(_BYTE *)(v17 + 48) = 1;
      if ((v24 & 1) != 0)
      {
LABEL_12:

        v25 = swift_release();
        return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v25);
      }
    }
    sub_100409F58();
    goto LABEL_12;
  }
  return result;
}

double sub_10074758C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t Strong;
  double result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v6 = _s6AlbumsVMa(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)&v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v21[-v10 - 8];
  a3 += 16;
  swift_beginAccess(a3, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController);
    swift_retain();

    if (a2)
      v16 = a1;
    else
      v16 = 0;
    if (a2)
      v17 = a2;
    else
      v17 = 0xE000000000000000;
    v18 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 96);
    swift_beginAccess(v18, v22, 0, 0);
    sub_10005B704(v18, (uint64_t)v11, _s6AlbumsVMa);
    v19 = &v11[*(int *)(v6 + 28)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v19 = v16;
    v19[1] = v17;
    sub_10005B704(v18, (uint64_t)v8, _s6AlbumsVMa);
    swift_beginAccess(v18, v21, 33, 0);
    sub_10074CFEC((uint64_t)v11, v18);
    swift_endAccess(v21);
    sub_10018168C(v8);
    sub_10005B748((uint64_t)v11, _s6AlbumsVMa);
    sub_10005B748((uint64_t)v8, _s6AlbumsVMa);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100747734@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE50);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___globalHeaderRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___globalHeaderRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v10 = sub_100007E8C(&qword_1011A37B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v12 = (uint64_t *)UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  v13 = *v12;
  v14 = v12[1];
  v15 = swift_allocObject(&unk_1010D9F68, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  swift_bridgeObjectRetain();
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v13, v14, sub_10074DD98, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011ACE50);
  return swift_endAccess(v18);
}

uint64_t sub_100747924@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE50);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___headerRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___headerRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v10 = sub_100007E8C(&qword_1011A37B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v14 = v13;
  v15 = swift_allocObject(&unk_1010D9F68, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v12, v14, sub_10074DDA0, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011ACE50);
  return swift_endAccess(v18);
}

uint64_t sub_100747B18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A3DE0);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v16[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___gridCellRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___gridCellRegistration, v17, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011A3DE0);
  v10 = sub_100007E8C(&qword_1011A37C0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A3DE0);
  v12 = swift_allocObject(&unk_1010D9F68, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v14 = type metadata accessor for Album(0);
  UICollectionView.CellRegistration.init(handler:)(sub_10074DD48, v12, v13, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v16, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011A3DE0);
  return swift_endAccess(v16);
}

uint64_t sub_100747CF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3E40);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v19[-v9];
  v11 = v2 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___listCellRegistration;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___listCellRegistration, v20, 0, 0);
  sub_10004A160(v11, (uint64_t)v10, (uint64_t *)&unk_1011A3E40);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A37D0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a1, v10, v12);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A3E40);
  v14 = swift_allocObject(&unk_1010D9F68, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = swift_allocObject(&unk_1010DA0F8, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = ObjectType;
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v17 = type metadata accessor for Album(0);
  UICollectionView.CellRegistration.init(handler:)(sub_10074DD84, v15, v16, v17);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v7, a1, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  swift_beginAccess(v11, v19, 33, 0);
  sub_1000A5508((uint64_t)v7, v11, (uint64_t *)&unk_1011A3E40);
  return swift_endAccess(v19);
}

uint64_t sub_100747F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  _BYTE v40[24];
  _BYTE v41[24];

  v6 = _s6AlbumsVMa(0);
  __chkstk_darwin(v6);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v9);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v12);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Album(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v41, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    goto LABEL_4;
  v20 = (char *)Strong;
  v39[0] = a3;
  v21 = OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController;
  swift_retain();
  sub_1008DECCC(a1, (uint64_t)v14);
  v22 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48))(v14, 1, v15, v22) == 1)
  {

    sub_10004FF60((uint64_t)v14, &qword_1011A8FA0);
    a3 = v39[0];
LABEL_4:
    v23 = type metadata accessor for DragItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a3, 1, 1, v23);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  v25 = *(_QWORD *)&v20[v21] + *(_QWORD *)(**(_QWORD **)&v20[v21] + 96);
  swift_beginAccess(v25, v40, 0, 0);
  sub_10005B704(v25, (uint64_t)v8, _s6AlbumsVMa);
  sub_1002339A0((uint64_t)v11);
  sub_10005B748((uint64_t)v8, _s6AlbumsVMa);
  v26 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v11, 1, v26);
  if ((_DWORD)v28 == 1)
  {
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A3D60);
    v29 = 0;
  }
  else
  {
    v29 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v28);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v26);
  }
  v30 = sub_100868984(v29);
  v31 = sub_100869D18(v30, (uint64_t)&off_1010AD390);
  swift_bridgeObjectRelease();
  v32 = sub_10047D540((uint64_t)v31);
  swift_bridgeObjectRelease();
  v33 = type metadata accessor for DragItem(0);
  v34 = (_QWORD *)v39[0];
  v35 = v39[0] + *(int *)(v33 + 20);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v35, v18, v15);
  v36 = enum case for GenericMusicItem.album(_:);
  v37 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
  v38 = type metadata accessor for DragItem.Source(0);
  swift_storeEnumTagMultiPayload(v35, v38, 1);
  *v34 = v32;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v34, 0, 1, v33);

  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

void sub_1007482C8(int a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v13[6];
  objc_super v14;

  v2 = v1;
  v14.receiver = v1;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, "viewWillAppear:", a1 & 1);
  v4 = sub_100745F00();
  v5 = objc_msgSend(v2, "transitionCoordinator");
  UICollectionView.clearSelection(using:animated:)(v5, a1);

  v6 = objc_msgSend(v2, "transitionCoordinator", swift_unknownObjectRelease(v5).n128_f64[0]);
  if (v6)
  {
    v7 = v6;
    v8 = swift_allocObject(&unk_1010D9F68, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16);
    v13[4] = sub_10074DDAC;
    v13[5] = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1005CE710;
    v13[3] = &unk_1010DA110;
    v9 = _Block_copy(v13);
    objc_msgSend(v7, "animateAlongsideTransition:completion:", 0, v9, swift_release().n128_f64[0]);
    _Block_release(v9);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController];
    v11 = *(_QWORD *)(*(_QWORD *)v10 + 128);
    v12 = *(_BYTE *)(v10 + v11);
    *(_BYTE *)(v10 + v11) = 1;
    sub_1008E34F0(v12);
  }
}

double sub_100748434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController);
    swift_retain();

    v7 = *(_QWORD *)(*(_QWORD *)v6 + 128);
    v8 = *(_BYTE *)(v6 + v7);
    *(_BYTE *)(v6 + v7) = 1;
    sub_1008E34F0(v8);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1007484F4(char a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  __n128 v19;
  _BYTE v22[24];
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for MetricsEvent.Page(0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v23.receiver = v1;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "viewDidAppear:", a1 & 1, v5);
  v8 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  v9 = MetricsEvent.Page.libraryAlbumsList.unsafeMutableAddressor();
  sub_10005B704(v9, (uint64_t)v7, type metadata accessor for MetricsEvent.Page);
  sub_100540B34();
  v11 = v10;
  v13 = v12;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v14 = qword_10124C790;
  swift_retain();
  v15 = GroupActivitiesManager.hasJoined.getter();
  v16 = GroupActivitiesManager.participantsCount.getter();
  v17 = (uint64_t *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v22, 0, 0);
  v18 = *v17;
  v19 = swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v8) + 0xA0))(v7, v11, v13, v15 & 1, v16, v18, v19);

  swift_bridgeObjectRelease();
  return sub_10005B748((uint64_t)v7, type metadata accessor for MetricsEvent.Page);
}

void sub_100748744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t Strong;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61[24];
  char v62[24];
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char v66[32];

  v7 = sub_100007E8C((uint64_t *)&unk_1011AD860);
  v58 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v57 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v54);
  v55 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s6AlbumsVMa(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v19 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v53 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011A9A10);
  __chkstk_darwin(v21);
  v59 = (uint64_t)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011A3910);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v66, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (!Strong)
    goto LABEL_5;
  v28 = (char *)Strong;
  v52 = v7;
  v60 = a1;
  v29 = OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController;
  v30 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController)
      + *(_QWORD *)(**(_QWORD **)(Strong + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController)
                  + 112);
  v31 = swift_beginAccess(v30, v62, 0, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v24 + 48))(v30, 1, v23, v31)
    || ((*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, v30, v23),
        v32 = MusicLibrarySectionedResponse.isEmpty.getter(),
        (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23),
        v32))
  {

LABEL_5:
    v65 = 0;
    v63 = 0u;
    v64 = 0u;
    UICollectionViewCell.contentConfiguration.setter(&v63);
    return;
  }
  v33 = *(_QWORD *)&v28[v29] + *(_QWORD *)(**(_QWORD **)&v28[v29] + 96);
  swift_beginAccess(v33, v61, 0, 0);
  sub_10005B704(v33, (uint64_t)v15, _s6AlbumsVMa);
  v34 = type metadata accessor for Album(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v12, 1, 1, v34);
  sub_100233F64((uint64_t)v12, (uint64_t)v18);
  sub_10004FF60((uint64_t)v12, &qword_1011A8FA0);
  sub_10005B748((uint64_t)v15, _s6AlbumsVMa);
  v35 = v56;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v56) == 1)
  {
    sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011A3D60);
    v36 = type metadata accessor for PlaybackIntentDescriptor(0);
    v37 = v59;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v59, 1, 1, v36);
  }
  else
  {
    v38 = v53;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v53, v18, v35);
    v39 = (uint64_t)v55;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v55, v38, v35);
    swift_storeEnumTagMultiPayload(v39, v54, 1);
    v65 = 0;
    v63 = 0u;
    v64 = 0u;
    v40 = v28;
    v37 = v59;
    PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v39, (uint64_t)&v63, 3, 0, 0, 1, 0, 1, v59, (objc_class *)v28);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v38, v35);
    v41 = type metadata accessor for PlaybackIntentDescriptor(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v37, 0, 1, v41);
  }
  v42 = v52;
  v43 = swift_allocObject(&unk_1010D9F68, 24, 7);
  v44 = swift_unknownObjectWeakInit(v43 + 16);
  __chkstk_darwin(v44);
  *(&v51 - 4) = v37;
  *(&v51 - 3) = (uint64_t)sub_100346148;
  v50 = v43;
  swift_retain();
  v45 = sub_100007E8C((uint64_t *)&unk_1011AD870);
  v46 = sub_10034615C();
  v47 = v57;
  v48 = UIHostingConfiguration<>.init(content:)(sub_100346150, &v51 - 6, v45, v46);
  v49 = static Edge.Set.all.getter(v48);
  *((_QWORD *)&v64 + 1) = v42;
  v65 = sub_100049F28((unint64_t *)&unk_1011B8D90, (uint64_t *)&unk_1011AD860, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
  sub_100049F68(&v63);
  UIHostingConfiguration.margins(_:_:)(v49, v42, 0.0);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v42);
  swift_release();
  sub_10004FF60(v37, &qword_1011A9A10);
  swift_release();
  UICollectionViewCell.contentConfiguration.setter(&v63);

}

void sub_100748D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t KeyPath;
  _QWORD v27[3];
  _QWORD v28[5];
  _BYTE v29[24];
  _BYTE v30[24];

  v7 = sub_100007E8C(&qword_1011A3910);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011ADFD0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v27 - v16;
  a5 += 16;
  swift_beginAccess(a5, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v19 = (void *)Strong;
    v27[0] = a1;
    v20 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController)
        + *(_QWORD *)(**(_QWORD **)(Strong + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController)
                    + 112);
    v21 = swift_beginAccess(v20, v29, 0, 0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v20, 1, v7, v21))
    {

      return;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v7);
    v22 = MusicLibrarySectionedResponse.sections.getter(v7);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v24 = IndexPath.section.getter(v23);
    if ((v24 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v24 < *(_QWORD *)(v22 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v22+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v24, v11);
      v25 = swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t, __n128))(v12 + 32))(v17, v14, v11, v25);
      KeyPath = swift_getKeyPath(&unk_100ECDE40);
      MusicLibrarySection.subscript.getter(KeyPath, v11);
      swift_release();
      sub_10061170C(v27[1], v27[2], v28);
      swift_bridgeObjectRelease();
      UICollectionViewCell.contentConfiguration.setter(v28);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      return;
    }
    __break(1u);
  }
}

void sub_100748F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A3DF0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v11 = (void *)Strong;
    __chkstk_darwin(Strong);
    v19[-2] = a3;
    v19[-1] = v12;
    v13 = sub_100007E8C(&qword_1011C6B50);
    v14 = _s8GridCellVMa(255);
    v15 = sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
    v19[0] = v14;
    v19[1] = v15;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v19, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v17 = UIHostingConfiguration<>.init(content:)(sub_10074DD50, &v19[-4], v13, OpaqueTypeConformance2);
    v18 = static Edge.Set.all.getter(v17);
    v19[3] = v6;
    v19[4] = sub_100049F28((unint64_t *)&unk_1011AD800, (uint64_t *)&unk_1011A3DF0, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v19);
    UIHostingConfiguration.margins(_:_:)(v18, v6, 0.0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    UICollectionViewCell.contentConfiguration.setter(v19);

  }
}

uint64_t sub_100749104@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[48];

  v49 = a1;
  v52 = a2;
  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  __chkstk_darwin(v2);
  v48 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - v5;
  v7 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v10);
  v12 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v15;
  v16 = (int *)_s8GridCellVMa(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Album(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v19, (uint64_t)&protocol witness table for Album, (char *)v12);
  v20 = (char *)sub_100745F00();
  v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 48];

  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v21, 0, 0, 1, 0x3FF0000000000000, 0, 2, (uint64_t)v53);
  v22 = Corner.medium.unsafeMutableAddressor();
  v23 = *v22;
  v24 = v22[1];
  v25 = *((_BYTE *)v22 + 16);
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 1, 10, v26);
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)(v12, (uint64_t)v9, 0, 1, (uint64_t)v53, v23, v24, v25, (uint64_t)v15);
  v27 = sub_10031E71C();
  v45 = v28;
  v46 = v27;
  v29 = sub_10031E87C();
  v31 = v30;
  v32 = v6;
  Album.favoriteStatus.getter(v29);
  v33 = v50;
  v34 = v51;
  v35 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v48, enum case for MusicFavoriteStatus.favorited(_:), v51);
  LOBYTE(v12) = static MusicFavoriteStatus.== infix(_:_:)(v32, v35);
  v36 = *(void (**)(char *, uint64_t))(v33 + 8);
  v36(v35, v34);
  v37 = ((uint64_t (*)(char *, uint64_t))v36)(v32, v34);
  Album.contentRating.getter(v37);
  sub_10005B6C0((uint64_t)v47, (uint64_t)v18, type metadata accessor for ArtworkImage.Info);
  *(_QWORD *)&v18[v16[5]] = 0x3FF0000000000000;
  v38 = &v18[v16[6]];
  v39 = v45;
  *(_QWORD *)v38 = v46;
  *((_QWORD *)v38 + 1) = v39;
  v40 = (uint64_t *)&v18[v16[7]];
  *v40 = v29;
  v40[1] = v31;
  v18[v16[8]] = v12 & 1;
  v41 = &v18[v16[10]];
  *(_QWORD *)v41 = swift_getKeyPath(&unk_100ECDE10);
  v42 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v41, v42, 0);
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
  v43 = swift_retain();
  View.artworkCaching(owner:)(v43);
  swift_release();
  return sub_10005B748((uint64_t)v18, _s8GridCellVMa);
}

void sub_1007494E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  uint64_t (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _BYTE v30[24];

  v8 = sub_100007E8C((uint64_t *)&unk_1011A3E50);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v29 - v13;
  a4 += 16;
  swift_beginAccess(a4, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v16 = (void *)Strong;
    __chkstk_darwin(Strong);
    v29[-4] = a3;
    v29[-3] = v17;
    v29[-2] = a5;
    v18 = sub_100007E8C((uint64_t *)&unk_1011BEB30);
    v19 = _s8ListCellVMa(255);
    v20 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
    v29[0] = v19;
    v29[1] = v20;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v29, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v22 = UIHostingConfiguration<>.init(content:)(sub_10074DD8C, &v29[-6], v18, OpaqueTypeConformance2);
    v23 = static Edge.Set.horizontal.getter(v22);
    v24 = (char *)sub_100745F00();
    v25 = *(double *)&v24[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

    UIHostingConfiguration.margins(_:_:)(v23, v8, v25);
    v26 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
    v27 = v26(v11, v8);
    v28 = static Edge.Set.vertical.getter(v27);
    v29[3] = v8;
    v29[4] = sub_100049F28((unint64_t *)&unk_1011AD850, (uint64_t *)&unk_1011A3E50, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v29);
    UIHostingConfiguration.margins(_:_:)(v28, v8, 8.0);
    v26(v14, v8);
    UICollectionViewCell.contentConfiguration.setter(v29);

  }
}

uint64_t sub_100749708@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  NSString *v35;
  __n128 v36;
  int v37;
  char *v38;
  NSString *v39;
  int v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[48];

  v54 = a1;
  v55 = a2;
  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - v6;
  v8 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v14);
  v56 = (uint64_t)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)_s8ListCellVMa(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Album(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v19, (uint64_t)&protocol witness table for Album, v13);
  if (qword_10119C768 != -1)
    swift_once(&qword_10119C768, sub_10074520C);
  ArtworkImage.Size.init(cgSize:)(xmmword_10124D940, *((uint64_t *)&xmmword_10124D940 + 1), 0, (uint64_t)v57);
  v20 = Corner.small.unsafeMutableAddressor();
  v21 = *v20;
  v22 = v20[1];
  v23 = *((_BYTE *)v20 + 16);
  v24 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 1, 10, v24);
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v13, (uint64_t)v10, 0, 1, (uint64_t)v57, v21, v22, v23, v56);
  v25 = sub_10031E71C();
  v50 = v26;
  v51 = v25;
  v27 = sub_10031E87C();
  v29 = v28;
  Album.favoriteStatus.getter(v27);
  v30 = v52;
  v31 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v4, enum case for MusicFavoriteStatus.favorited(_:), v53);
  v32 = static MusicFavoriteStatus.== infix(_:_:)(v7, v4);
  v33 = *(void (**)(char *, uint64_t))(v30 + 8);
  v33(v4, v31);
  v34 = ((uint64_t (*)(char *, uint64_t))v33)(v7, v31);
  Album.contentRating.getter(v34);
  v35 = UIFontTextStyleBody;
  v37 = static HierarchicalShapeStyle.primary.getter(v36);
  v38 = &v18[v16[9]];
  *((_QWORD *)v38 + 4) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v38 + 5) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v38 + 2) = v37;
  v39 = UIFontTextStyleSubheadline;
  v40 = static HierarchicalShapeStyle.secondary.getter(v39);
  *((_QWORD *)v38 + 10) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v38 + 11) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v38 + 14) = v40;
  *(_QWORD *)v38 = v35;
  *((_QWORD *)v38 + 6) = v39;
  v38[96] = 0;
  sub_10005B6C0(v56, (uint64_t)v18, type metadata accessor for ArtworkImage.Info);
  v41 = &v18[v16[5]];
  v42 = v50;
  *(_QWORD *)v41 = v51;
  *((_QWORD *)v41 + 1) = v42;
  v43 = (uint64_t *)&v18[v16[6]];
  *v43 = v27;
  v43[1] = v29;
  v18[v16[7]] = v32 & 1;
  v44 = &v18[v16[10]];
  *(_QWORD *)v44 = 0;
  *((_QWORD *)v44 + 1) = 0;
  v45 = &v18[v16[11]];
  *(_QWORD *)v45 = swift_getKeyPath(&unk_100ECDE10);
  v46 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v45, v46, 0);
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
  v47 = swift_retain();
  View.artworkCaching(owner:)(v47);
  swift_release();
  return sub_10005B748((uint64_t)v18, _s8ListCellVMa);
}

void sub_100749B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for Genre(0);
  __chkstk_darwin(v1);
  v2 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v4, v5);
  v6 = (char *)sub_100749BE8 + 4 * byte_100ECDDBA[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_100749BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t countAndFlagsBits;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  *(_QWORD *)(v4 - 64) = 0;
  *(_QWORD *)(v4 - 56) = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  v5 = swift_bridgeObjectRelease();
  *(_QWORD *)(v4 - 64) = 0x2E7972617262694CLL;
  *(_QWORD *)(v4 - 56) = 0xEF2E7365726E6547;
  Genre.name.getter(v5);
  v6 = String.removeSpaces()();
  swift_bridgeObjectRelease();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 2003134806;
  v7._object = (void *)0xE400000000000000;
  String.append(_:)(v7);
  countAndFlagsBits = AccessibilityIdentifier.init(name:)(*(Swift::String *)(v4 - 64)).rawValue._countAndFlagsBits;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return countAndFlagsBits;
}

uint64_t sub_100749D38()
{
  char *v0;
  char *v1;
  id v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15[9];
  char v16[24];

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10018D478();
  UITraitCollection.subscript.getter(v15, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v3);

  v4 = sub_1007607C4(v15[0]);
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0
    || (v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController]
           + *(_QWORD *)(**(_QWORD **)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController] + 96),
        swift_beginAccess(v5, v16, 0, 0),
        (*(_BYTE *)(v5 + 8) & 1) != 0))
  {
    v6 = 1;
    return v6 & 1;
  }
  v8 = *(_QWORD *)(v5 + *(int *)(_s6AlbumsVMa(0) + 32));
  if (!*(_QWORD *)(v8 + 16))
  {
    v6 = 0;
    return v6 & 1;
  }
  Hasher.init(_seed:)(v15, *(_QWORD *)(v8 + 40));
  swift_bridgeObjectRetain();
  String.hash(into:)(v15, 0x64616F6C6E776F64, 0xE900000000000073);
  v9 = Hasher._finalize()();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
    v6 = 0;
    goto LABEL_18;
  }
  v12 = ~v10;
  while (!*(_BYTE *)(*(_QWORD *)(v8 + 48) + v11))
  {
    v14 = 0xE300000000000000;
    v13 = 7105633;
LABEL_12:
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, 0x64616F6C6E776F64, 0xE900000000000073, 0);
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      v11 = (v11 + 1) & v12;
      if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
        continue;
    }
    goto LABEL_18;
  }
  if (*(_BYTE *)(*(_QWORD *)(v8 + 48) + v11) == 1)
  {
    v13 = 0x657469726F766166;
    v14 = 0xE900000000000073;
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  v6 = 1;
LABEL_18:
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_100749F40@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - v13;
  v15 = v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___actionMetricsReportingContext;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___actionMetricsReportingContext, v40, 0, 0);
  sub_10004A160(v15, (uint64_t)v14, (uint64_t *)&unk_1011A9990);
  v16 = type metadata accessor for Actions.MetricsReportingContext(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) != 1)
    return sub_10005B6C0((uint64_t)v14, (uint64_t)a1, type metadata accessor for Actions.MetricsReportingContext);
  v36 = v17;
  v37 = a1;
  sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A9990);
  v18 = MetricsEvent.Page.libraryAlbumsList.unsafeMutableAddressor();
  sub_10005B704(v18, (uint64_t)v8, type metadata accessor for MetricsEvent.Page);
  v19 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 0, 1, v19);
  sub_10004A160((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1011A8780);
  v20 = MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v34 = v22;
  v35 = v21;
  v23 = qword_10119B8B8;
  v24 = (id)*v20;
  if (v23 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v25 = qword_10124C790;
  swift_retain();
  v26 = GroupActivitiesManager.hasJoined.getter();
  v27 = GroupActivitiesManager.participantsCount.getter();
  v28 = (uint64_t *)(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v39, 0, 0);
  v29 = *v28;

  swift_release();
  v30 = v26 & 1;
  v31 = v37;
  Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v5, v35, v34, 0, 0, v30, v37, v27, v29);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A8780);
  sub_10005B704((uint64_t)v31, (uint64_t)v11, type metadata accessor for Actions.MetricsReportingContext);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v11, 0, 1, v16);
  swift_beginAccess(v15, v38, 33, 0);
  sub_1000A5508((uint64_t)v11, v15, (uint64_t *)&unk_1011A9990);
  return swift_endAccess(v38);
}

uint64_t sub_10074A488(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  void *v12;
  BOOL v13;
  uint64_t v14;
  void *v15;
  char v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v7 = sub_100007E8C(&qword_1011A37B0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  v12 = (void *)v11[1];
  v13 = *v11 == a2 && v12 == a3;
  if (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a2, a3, 0) & 1) == 0)
  {
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    if (v14 != a2 || v15 != a3)
    {
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a2, a3, 0);
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
      {
LABEL_14:
        sub_100747924((uint64_t)v10);
        goto LABEL_15;
      }
      strcpy((char *)v22, "Unknown kind=");
      HIWORD(v22[1]) = -4864;
      v18._countAndFlagsBits = a2;
      v18._object = a3;
      String.append(_:)(v18);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v22[0], v22[1], "Music/LibraryAlbumsViewController.swift", 39, 2, 263, 0);
      __break(1u);
    }
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_100747734((uint64_t)v10);
LABEL_15:
  v19 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v20 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v10, a4, v19);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v20;
}

void *sub_10074A740(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _BYTE *v27;
  char v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  __int128 v70;
  __int128 v71;
  void *v72;

  v68 = a1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A1760);
  v5 = __chkstk_darwin(v4);
  v64 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v5);
  v65 = *(_QWORD *)(v7 - 8);
  v66 = v7;
  v8 = __chkstk_darwin(v7);
  v63 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICellAccessory.DisplayedState(0, v8);
  v61 = *(_QWORD *)(v10 - 8);
  v62 = v10;
  __chkstk_darwin(v10);
  v60 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A37D0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100007E8C(&qword_1011A37C0);
  v16 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v19);
  v67 = (uint64_t)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v59 = (uint64_t)&v58 - v22;
  __chkstk_darwin(v23);
  v25 = (char *)&v58 - v24;
  v26 = a2;
  sub_1008DECCC(a2, (uint64_t)&v58 - v24);
  v69 = v2;
  v27 = sub_100745F00();
  v28 = v27[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

  if ((v28 & 1) != 0
    || (*(_BYTE *)(*(_QWORD *)&v69[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_layoutVariantController] + 32) & 1) != 0)
  {
    v29 = v69;
    sub_100747CF4((uint64_t)v15);
    v30 = (void *)sub_100923C70((uint64_t)v15, v26, (uint64_t)v25);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v31 = sub_100007E8C((uint64_t *)&unk_1011AD790);
    v32 = type metadata accessor for UICellAccessory(0);
    v33 = swift_allocObject(v31, ((*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) | 7);
    *(_OWORD *)(v33 + 16) = xmmword_100EA7AA0;
    v35 = v60;
    v34 = v61;
    v36 = v62;
    (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, enum case for UICellAccessory.DisplayedState.always(_:), v62);
    v37 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v38 = v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v64, 1, 1, v37);
    v39 = v63;
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v38, 0);
    static UICellAccessory.disclosureIndicator(displayed:options:)(v35, v39);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v39, v66);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
    UICollectionViewListCell.accessories.setter(v33);
    v40 = objc_msgSend(v29, "traitCollection");
    v41 = objc_msgSend(v40, "userInterfaceIdiom");

    if (v41 != (id)6)
    {
      v42 = v30;

      objc_msgSend(v42, "directionalLayoutMargins");
      objc_msgSend(v42, "setDirectionalLayoutMargins:");

    }
    v43 = v67;
    sub_10004A160((uint64_t)v25, v67, &qword_1011A8FA0);
    v44 = type metadata accessor for Album(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44) == 1)
    {
      sub_10004FF60(v43, &qword_1011A8FA0);
      v70 = 0u;
      v71 = 0u;
      v72 = 0;
    }
    else
    {
      *((_QWORD *)&v71 + 1) = v44;
      v72 = &protocol witness table for Album;
      v46 = sub_100049F68(&v70);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v45 + 32))(v46, v43, v44);
    }

  }
  else
  {
    sub_100747B18((uint64_t)v18);
    v47 = sub_100923C5C((uint64_t)v18, a2, (uint64_t)v25);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v58);
    v48 = Corner.medium.unsafeMutableAddressor();
    v49 = *v48;
    v50 = v48[1];
    v51 = *((_BYTE *)v48 + 16);
    v52 = swift_allocObject(&unk_1010DA0D0, 33, 7);
    *(_QWORD *)(v52 + 16) = v49;
    *(_QWORD *)(v52 + 24) = v50;
    *(_BYTE *)(v52 + 32) = v51;
    UICollectionViewCell.configurationUpdateHandler.setter(sub_1001AA450, v52);
    v53 = v59;
    sub_10004A160((uint64_t)v25, v59, &qword_1011A8FA0);
    v54 = type metadata accessor for Album(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54) == 1)
    {
      sub_10004FF60(v53, &qword_1011A8FA0);
      v70 = 0u;
      v71 = 0u;
      v72 = 0;
    }
    else
    {
      *((_QWORD *)&v71 + 1) = v54;
      v72 = &protocol witness table for Album;
      v56 = sub_100049F68(&v70);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v55 + 32))(v56, v53, v54);
    }
    v30 = sub_1004E5AEC((uint64_t)&v70);

  }
  sub_10004FF60((uint64_t)v25, &qword_1011A8FA0);
  sub_10004FF60((uint64_t)&v70, (uint64_t *)&unk_1011A3DD0);
  return v30;
}

void sub_10074ADC8(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  _BYTE *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  char *v67;
  id v68;
  id v69;
  id v70;
  __n128 v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  _QWORD aBlock[7];

  v84 = a1;
  v4 = sub_100007E8C(&qword_1011ACE00);
  __chkstk_darwin(v4);
  v92 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for IndexPath(0);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v79 = v6;
  v80 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3D70);
  __chkstk_darwin(v7);
  v91 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v9);
  v90 = (uint64_t)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v89 = (uint64_t)&v75 - v12;
  __chkstk_darwin(v13);
  v93 = (char *)&v75 - v14;
  v85 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v85);
  v88 = (uint64_t)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v87 = (uint64_t)&v75 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v75 - v19;
  v21 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v21);
  v23 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Album(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v86 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v75 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v75 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v75 - v34;
  v36 = v2;
  v82 = a2;
  sub_1008DECCC(a2, (uint64_t)v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_10004FF60((uint64_t)v23, &qword_1011A8FA0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v35, v23, v24);
    v37 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v76 = v32;
    v78 = v35;
    v37(v32, v35, v24);
    v38 = v37;
    v39 = sub_100007E8C((uint64_t *)&unk_1011AD760);
    v40 = *(int *)(v39 + 48);
    v77 = v36;
    v41 = *(int *)(v39 + 64);
    sub_10005B704((uint64_t)&v36[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_scope], (uint64_t)v20, _s6AlbumsV5ScopeOMa);
    v42 = _s6AlbumsV5ScopeOMa(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v20, 0, 1, v42);
    v20[v40] = sub_100749D38() & 1;
    v20[v41] = 0;
    swift_storeEnumTagMultiPayload(v20, v85, 0);
    v43 = type metadata accessor for URL(0);
    v44 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v93, 1, 1, v43);
    v45 = v29;
    v38(v29, v32, v24);
    v46 = v87;
    sub_10005B704((uint64_t)v20, v87, type metadata accessor for ContainerDetail.Source);
    v47 = v89;
    v85 = v25;
    sub_10004A160(v44, v89, &qword_10119E460);
    v48 = (uint64_t)v86;
    v38(v86, v45, v24);
    v49 = v88;
    sub_10005B704(v46, v88, type metadata accessor for ContainerDetail.Source);
    v50 = type metadata accessor for AlbumDetailDataSource.ProminentTrackSource(0);
    v51 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v91, 1, 1, v50);
    v52 = v90;
    sub_10004A160(v47, v90, &qword_10119E460);
    v53 = sub_1004C539C(v48, v49, v51, v52);
    sub_10004FF60(v47, &qword_10119E460);
    sub_10005B748(v46, type metadata accessor for ContainerDetail.Source);
    v54 = *(void (**)(char *, uint64_t))(v85 + 8);
    v54(v45, v24);
    v55 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
    v56 = sub_1003723A0(v53, 0, v55);
    v57 = v77;
    sub_10004FF60((uint64_t)v93, &qword_10119E460);
    sub_10005B748((uint64_t)v20, type metadata accessor for ContainerDetail.Source);
    v54(v76, v24);
    *(_QWORD *)&v56[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_cachingReference] = *(_QWORD *)(*(_QWORD *)&v57[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_prefetchingController] + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_cachingReference);
    swift_retain();
    swift_release();
    v58 = v24;
    if ((Feature.UIP.isEnabled.getter(1) & 1) != 0)
    {
      v93 = (char *)objc_opt_self(_UIViewControllerTransition);
      v59 = v80;
      v60 = v81;
      v61 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v82, v83);
      v62 = *(unsigned __int8 *)(v60 + 80);
      v63 = (v62 + 24) & ~v62;
      v64 = swift_allocObject(&unk_1010D9FE0, v63 + v79, v62 | 7);
      v65 = v84;
      *(_QWORD *)(v64 + 16) = v84;
      (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v64 + v63, v59, v61);
      aBlock[4] = sub_1001AA174;
      aBlock[5] = v64;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100264780;
      aBlock[3] = &unk_1010D9FF8;
      v66 = _Block_copy(aBlock);
      v67 = v56;
      v68 = v65;
      v69 = objc_msgSend(v93, "zoomWithSourceViewProvider:", v66, swift_release().n128_f64[0]);
      _Block_release(v66);
      objc_msgSend(v67, "_setPreferredTransition:", v69);

    }
    v70 = objc_msgSend(v57, "navigationController");
    v72 = (uint64_t)v92;
    if (v70)
    {
      v73 = v70;
      UIViewController.traitOverrides.getter(v71);
      v74 = type metadata accessor for UITraitOverrides(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v72, 0, 1, v74);
      UINavigationController.push(_:traitOverrides:animated:)(v56, v72, 1);

      sub_10004FF60(v72, &qword_1011ACE00);
      v54(v78, v58);
    }
    else
    {
      v54(v78, v58);

    }
  }
}

uint64_t sub_10074B5C8(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for Album(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return sub_100745098((uint64_t)v5);
}

unint64_t sub_10074B638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  char *v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  _BYTE v49[72];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[10];
  _OWORD v54[10];
  _OWORD v55[6];

  v7 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s6AlbumsVMa(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v19);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, &v52, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v23 = (char *)Strong;
  v47 = a4;
  v48 = v15;
  v24 = sub_100007E8C((uint64_t *)&unk_1011A20E0);
  inited = swift_initStackObject(v24, &v51);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  v26 = type metadata accessor for Album(0);
  *(_QWORD *)(inited + 56) = v26;
  *(_QWORD *)(inited + 64) = &protocol witness table for Album;
  v27 = sub_100049F68((_QWORD *)(inited + 32));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a3, v26);
  v28 = *(_QWORD *)&v23[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController]
      + *(_QWORD *)(**(_QWORD **)&v23[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController] + 96);
  swift_beginAccess(v28, &v50, 0, 0);
  sub_10005B704(v28, (uint64_t)v18, _s6AlbumsVMa);
  sub_1002339A0((uint64_t)v21);
  sub_10005B748((uint64_t)v18, _s6AlbumsVMa);
  v29 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v21, 1, v29);
  if ((_DWORD)v31 == 1)
  {
    sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A3D60);
    v32 = 0;
  }
  else
  {
    v32 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v31);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v29);
  }
  v34 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v48, 1, 1, v34);
  v35 = v23;
  v36 = objc_msgSend(v35, "traitCollection");
  v37 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v55, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v37);

  v38 = *(_QWORD *)&v55[0];
  sub_100749F40(v12);
  v39 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v12, 0, 1, v39);
  memset(v55, 0, 80);
  v40 = type metadata accessor for IndexPath(0);
  v41 = *(_QWORD *)(v40 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v9, v47, v40);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v9, 0, 1, v40);
  sub_1008DC518((uint64_t)v9, (uint64_t)v49);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A3D50);
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v42 = qword_10119B8C8;
  v43 = (id)qword_10124C798;
  if (v42 != -1)
    swift_once(&qword_10119B8C8, sub_1000E97E8);
  v44 = qword_10124C7A0;
  swift_retain();
  v45 = (uint64_t)v48;
  sub_100495120(inited, v32, (unint64_t)v48, v38, v43, v44, (unint64_t)v12, (uint64_t)v55, v53, (uint64_t)v49, 1);
  sub_10013A3FC((uint64_t)v53, (uint64_t)v54);
  if (*((_QWORD *)&v54[0] + 1))
  {
    v54[7] = v54[2];
    v54[8] = v54[3];
    v54[9] = v54[4];
    v54[5] = v54[0];
    v54[6] = v54[1];
    sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v33 = (unint64_t)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
    sub_1000E411C((uint64_t)v53);
  }
  else
  {
    v33 = 0;
  }

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  sub_10004FF60((uint64_t)v49, (uint64_t *)&unk_1011A20F0);
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A9990);
  sub_10004FF60(v45, (uint64_t *)&unk_1011A20C0);
  return v33;
}

id sub_10074BC84(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v29;
  id v30;
  _QWORD aBlock[6];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v16 = (char *)&v29 - v15;
  aBlock[0] = objc_msgSend(a2, "identifier", v14);
  v17 = sub_100007E8C(&qword_1011A9960);
  v18 = swift_dynamicCast(v8, aBlock, v17, v9, 6);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v18)
  {
    v19(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v20(v16, v8, v9);
      v21 = swift_allocObject(&unk_1010D9F68, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
      v22 = *(unsigned __int8 *)(v10 + 80);
      v30 = a3;
      v23 = a1;
      v24 = (v22 + 32) & ~v22;
      v25 = swift_allocObject(&unk_1010D9F90, v24 + v11, v22 | 7);
      *(_QWORD *)(v25 + 16) = v21;
      *(_QWORD *)(v25 + 24) = v23;
      v20((char *)(v25 + v24), v12, v9);
      aBlock[4] = sub_10074DAC8;
      aBlock[5] = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001DBD98;
      aBlock[3] = &unk_1010D9FA8;
      v26 = _Block_copy(aBlock);
      v27 = v23;
      objc_msgSend(v30, "addAnimations:", v26, swift_release().n128_f64[0]);
      _Block_release(v26);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    }
  }
  else
  {
    v19(v8, 1, 1, v9);
  }
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A3D50);
  return objc_msgSend(a3, "setPreferredCommitStyle:", 0);
}

void sub_10074BF1C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_10074ADC8(a2, a3);

  }
}

uint64_t sub_10074C0FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;
  __int128 v13;
  void *v14;
  _BYTE v15[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3900);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3910);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController)
     + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController) + 112);
  swift_beginAccess(v9, v15, 0, 0);
  sub_10004A160(v9, (uint64_t)v4, (uint64_t *)&unk_1011A3900);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3900);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      *((_QWORD *)&v13 + 1) = type metadata accessor for UIContentUnavailableConfiguration(0);
      v14 = &protocol witness table for UIContentUnavailableConfiguration;
      v10 = sub_100049F68(&v12);
      sub_1008E138C((uint64_t)v10);
      UIViewController.contentUnavailableConfiguration.setter(&v12);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  return UIViewController.contentUnavailableConfiguration.setter(&v12);
}

Class sub_10074C348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t inited;
  _BYTE *v11;
  char v12;
  Class isa;
  uint64_t v14;
  UIMenuElementSize v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class v20;
  uint64_t v21;
  UIMenuElementSize v22;
  void *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  UIMenuElementSize v33;
  Swift::String v34;
  UIMenu v35;
  UIMenuElementSize v37;
  Swift::OpaquePointer v38;
  uint64_t v39;
  UIMenuElementSize v40;
  _BYTE v41[24];
  _BYTE v42[48];
  _BYTE v43[24];
  UIImage_optional v44;
  UIImage_optional v45;

  v4 = _s6AlbumsVMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    return 0;
  v8 = (char *)Strong;
  sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
  v9 = sub_100007E8C((uint64_t *)&unk_1011AD740);
  inited = swift_initStackObject(v9, v42);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  v11 = sub_100745F00();
  v12 = v11[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

  isa = 0;
  if ((v12 & 1) == 0)
  {
    v14 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_layoutVariantController];
    swift_retain();
    sub_1008E95AC((uint64_t)&off_1010AD3B8, v14);
    v37 = v15;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v44.value.super.isa = 0;
    v44.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v16, (Swift::String_optional)0, v44, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v37, v38).super.super.isa;
    swift_release();
  }
  *(_QWORD *)(inited + 32) = isa;
  v17 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController];
  v18 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 96);
  swift_beginAccess(v18, v41, 0, 0);
  sub_10005B704(v18, (uint64_t)v6, _s6AlbumsVMa);
  v19 = swift_allocObject(&unk_1010DA1E8, 24, 7);
  swift_weakInit(v19 + 16, v17);
  swift_retain();
  v20 = sub_1008BA5D0((uint64_t)sub_1001AAB50, v19).super.super.isa;
  swift_release();
  sub_10005B748((uint64_t)v6, _s6AlbumsVMa);
  swift_release();
  *(_QWORD *)(inited + 40) = v20;
  v40 = inited;
  specialized Array._endMutation()(v21);
  v22 = v40;
  v40 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v23 = *(void **)(v22 + 32);
  if (v23)
  {
    v24 = v23;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v26 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v25 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v26 >= v25 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
    v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
    specialized Array._endMutation()(v27);
  }
  v28 = *(void **)(v22 + 40);
  if (v28)
  {
    v29 = v28;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
    v31 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v30 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v31 >= v30 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
    v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
    specialized Array._endMutation()(v32);
  }
  v33 = v40;
  swift_bridgeObjectRelease();
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v45.value.super.isa = 0;
  v45.is_nil = 0;
  v35.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v34, (Swift::String_optional)0, v45, 0, 0xFFFFFFFFFFFFFFFFLL, v33, v38).super.super.isa;

  return v35.super.super.isa;
}

void sub_10074C668(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];

  v4 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s6AlbumsVMa(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v34, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v21 = (void *)Strong;
    v29 = v4;
    v30 = a2;
    v22 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController)
        + *(_QWORD *)(**(_QWORD **)(Strong + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController)
                    + 96);
    swift_beginAccess(v22, v33, 0, 0);
    sub_10005B704(v22, (uint64_t)v12, _s6AlbumsVMa);
    v23 = type metadata accessor for Album(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
    sub_100233F64((uint64_t)v9, (uint64_t)v15);
    sub_10004FF60((uint64_t)v9, &qword_1011A8FA0);
    sub_10005B748((uint64_t)v12, _s6AlbumsVMa);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A3D60);
      v24 = type metadata accessor for PlaybackIntentDescriptor(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v30, 1, 1, v24);

    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v6, v19, v16);
      swift_storeEnumTagMultiPayload(v6, v29, 1);
      v32 = 0;
      memset(v31, 0, sizeof(v31));
      v26 = v21;
      v27 = v30;
      PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)((uint64_t)v6, (uint64_t)v31, 3, 0, 0, 1, 0, 1, v30, (objc_class *)v21);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      v28 = type metadata accessor for PlaybackIntentDescriptor(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 0, 1, v28);

    }
  }
  else
  {
    v25 = type metadata accessor for PlaybackIntentDescriptor(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 1, 1, v25);
  }
}

uint64_t sub_10074CB14()
{
  return type metadata accessor for LibraryAlbumsViewController(0);
}

uint64_t type metadata accessor for LibraryAlbumsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C6B38;
  if (!qword_1011C6B38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryAlbumsViewController);
  return result;
}

void sub_10074CB58(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[12];

  sub_1001AB544(319, (unint64_t *)&unk_1011ACDB0, &qword_1011A37B0);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    v12[1] = v12[0];
    sub_1001AB544(319, &qword_1011A37B8, &qword_1011A37C0);
    if (v5 <= 0x3F)
    {
      v12[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001AB544(319, &qword_1011A37C8, (uint64_t *)&unk_1011A37D0);
      if (v7 <= 0x3F)
      {
        v12[3] = *(_QWORD *)(v6 - 8) + 64;
        v12[4] = "\b";
        v8 = _s6AlbumsV5ScopeOMa(319);
        if (v9 <= 0x3F)
        {
          v12[5] = *(_QWORD *)(v8 - 8) + 64;
          v12[6] = (char *)&value witness table for Builtin.NativeObject + 64;
          v12[7] = (char *)&value witness table for Builtin.NativeObject + 64;
          v12[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
          v12[9] = "\b";
          v12[10] = "\b";
          sub_10017D9AC(319);
          if (v11 <= 0x3F)
          {
            v12[11] = *(_QWORD *)(v10 - 8) + 64;
            swift_updateClassMetadata2(a1, 256, 12, v12, a1 + 80);
          }
        }
      }
    }
  }
}

uint64_t sub_10074CC94(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BYTE v15[24];
  uint64_t v16[3];

  v2 = _s6AlbumsVMa(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)&v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = &v15[-v7];
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController];
  v10 = objc_msgSend(a1, "traitCollection", v6);
  v11 = sub_10018D478();
  UITraitCollection.subscript.getter(v16, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v11);

  v12 = sub_1007607C4(v16[0]);
  swift_bridgeObjectRelease();
  v13 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 96);
  swift_beginAccess(v13, v16, 0, 0);
  sub_10005B704(v13, (uint64_t)v8, _s6AlbumsVMa);
  v8[8] = v12 & 1;
  sub_10005B704(v13, (uint64_t)v4, _s6AlbumsVMa);
  swift_beginAccess(v13, v15, 33, 0);
  sub_10074CFEC((uint64_t)v8, v13);
  swift_endAccess(v15);
  sub_10018168C(v4);
  sub_10005B748((uint64_t)v8, _s6AlbumsVMa);
  return sub_10005B748((uint64_t)v4, _s6AlbumsVMa);
}

uint64_t sub_10074CE14(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  int v16;
  __int16 v17;
  __int16 v18;
  _BYTE v20[24];
  _QWORD v21[3];

  v2 = _s6AlbumsVMa(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)&v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = &v20[-v7];
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController];
  v10 = objc_msgSend(a1, "traitCollection", v6);
  v11 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v21, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v11);

  v12 = v21[0];
  v13 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 96);
  swift_beginAccess(v13, v21, 0, 0);
  sub_10005B704(v13, (uint64_t)v8, _s6AlbumsVMa);
  swift_retain();
  swift_release();
  *v8 = v12;
  v14 = (unsigned __int8 *)v8 + *(int *)(v2 + 36);
  v15 = *v14;
  if (v14[1])
    v16 = 256;
  else
    v16 = 0;
  v17 = v16 | v15;
  v18 = sub_10016B5A4(v16 | v15);
  *v14 = v18;
  v14[1] = HIBYTE(v18) & 1;
  sub_10023587C(v17);
  swift_release();
  sub_10005B704(v13, (uint64_t)v4, _s6AlbumsVMa);
  swift_beginAccess(v13, v20, 33, 0);
  sub_10074CFEC((uint64_t)v8, v13);
  swift_endAccess(v20);
  sub_10018168C(v4);
  sub_10005B748((uint64_t)v8, _s6AlbumsVMa);
  return sub_10005B748((uint64_t)v4, _s6AlbumsVMa);
}

uint64_t sub_10074CFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s6AlbumsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double sub_10074D030(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  double result;

  v2 = sub_100745F00();
  v3 = sub_1007462A8();
  objc_msgSend(v2, "setCollectionViewLayout:", v3);

  sub_10074681C();
  v4 = sub_10074726C();
  v5 = objc_msgSend(a1, "traitCollection");
  v6 = objc_msgSend(v5, "horizontalSizeClass");

  objc_msgSend(*(id *)(v4 + 16), "setHidesNavigationBarDuringPresentation:", v6 == (id)1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10074D0D8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28[8];
  char v29[24];

  v26 = a1;
  v2 = sub_100007E8C(&qword_1011A3D80);
  v24 = *(_QWORD *)(v2 - 8);
  v25 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011ADFD0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3910);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController)
      + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_responseController) + 112);
  v14 = swift_beginAccess(v13, v29, 0, 0);
  v15 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(v13, 1, v9, v14))
    return v15;
  v16 = v5;
  v17 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v18 = MusicLibrarySectionedResponse.sections.getter(v9);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v26 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v18 + 16) > v26)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v26, v16);
    v20 = swift_bridgeObjectRelease();
    MusicLibrarySection.items.getter(v16, v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
    v21 = sub_100049F28((unint64_t *)&qword_1011ACAC0, &qword_1011A3D80, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v17);
    dispatch thunk of Collection.endIndex.getter(&v27, v17, v21);
    v22 = dispatch thunk of Collection.distance(from:to:)(v28, &v27, v17, v21);
    v15 = v23;
    (*(void (**)(char *, uint64_t, __n128))(v24 + 8))(v4, v17, v22);
    return v15;
  }
  __break(1u);
  return result;
}

id sub_10074D33C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  id v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  double v45;
  Class v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  Class isa;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(uint64_t, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void **aBlock;
  uint64_t v64;
  void *v65;
  void *v66;
  void *v67;
  uint64_t v68;

  v2 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Album(0);
  v62 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v62 + 64);
  __chkstk_darwin(v5);
  v60 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v59 = (char *)&v47 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - v10;
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v47 - v21;
  if (!*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v16 + 56))(v14, 1, 1, v15, v20);
    goto LABEL_6;
  }
  v58 = v19;
  v61 = v11;
  v23 = v5;
  v24 = *(unsigned __int8 *)(v16 + 80);
  v25 = a1 + ((v24 + 32) & ~v24);
  v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16);
  v26(v14, v25, v15, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    v28 = (uint64_t *)&unk_1011A3D50;
    v29 = (uint64_t)v14;
    goto LABEL_7;
  }
  v56 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v57 = (void (*)(uint64_t, char *, uint64_t))v26;
  v56(v22, v14, v15);
  sub_1008DECCC((uint64_t)v22, (uint64_t)v4);
  v27 = v62;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v4, 1, v23) != 1)
  {
    v51 = ~v24;
    v55 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v55(v61, v4, v23);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v48 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v32 = v59;
    v48(v59, v61, v23);
    v33 = *(unsigned __int8 *)(v27 + 80);
    v34 = (v33 + 16) & ~v33;
    v49 = v33 | 7;
    v50 = swift_allocObject(&unk_1010DA030, v34 + v6, v33 | 7);
    v55((char *)(v50 + v34), v32, v23);
    v35 = swift_allocObject(&unk_1010D9F68, 24, 7);
    v36 = v22;
    v53 = v22;
    v59 = (char *)v35;
    swift_unknownObjectWeakInit(v35 + 16);
    v37 = v23;
    v38 = v60;
    v52 = v37;
    v48(v60, v61, v37);
    v57((uint64_t)v58, v36, v15);
    v39 = (v33 + 24) & ~v33;
    v40 = (v6 + v24 + v39) & v51;
    v41 = swift_allocObject(&unk_1010DA058, v40 + v17, v49 | v24);
    *(_QWORD *)(v41 + 16) = v59;
    v55((char *)(v41 + v39), v38, v37);
    v56((char *)(v41 + v40), v58, v15);
    v42 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v67 = sub_10074DBE4;
    v68 = v50;
    aBlock = _NSConcreteStackBlock;
    v64 = 1107296256;
    v65 = sub_1000FA900;
    v66 = &unk_1010DA070;
    v43 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v67 = sub_10074DCCC;
    v68 = v41;
    aBlock = _NSConcreteStackBlock;
    v64 = 1107296256;
    v65 = sub_100968BE4;
    v66 = &unk_1010DA098;
    v44 = _Block_copy(&aBlock);
    swift_retain();
    *(_QWORD *)&v45 = swift_release().n128_u64[0];
    v46 = isa;
    v30 = objc_msgSend(v42, "configurationWithIdentifier:previewProvider:actionProvider:", isa, v43, v44, v45);

    swift_release();
    swift_release();
    _Block_release(v44);
    _Block_release(v43);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v52);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v53, v15);
    swift_release();
    return v30;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
  v28 = &qword_1011A8FA0;
  v29 = (uint64_t)v4;
LABEL_7:
  sub_10004FF60(v29, v28);
  return 0;
}

void sub_10074D874()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  void (*v4)(char *, uint64_t, uint64_t, uint64_t);
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___globalHeaderRegistration];
  v3 = sub_100007E8C(&qword_1011A37B0);
  v4 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  v4(&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___headerRegistration], 1, 1, v3);
  v5 = &v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___gridCellRegistration];
  v6 = sub_100007E8C(&qword_1011A37C0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = &v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___listCellRegistration];
  v8 = sub_100007E8C((uint64_t *)&unk_1011A37D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___collectionView] = 0;
  v9 = OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_prefetchingController;
  v10 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  *(_QWORD *)&v1[v9] = sub_1001EA3C8(0xD00000000000001DLL, 0x8000000100E440A0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController_dragDropController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___searchController] = 0;
  v11 = &v1[OBJC_IVAR____TtC5Music27LibraryAlbumsViewController____lazy_storage___actionMetricsReportingContext];
  v12 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/LibraryAlbumsViewController.swift", 39, 2, 397, 0);
  __break(1u);
}

uint64_t sub_10074DA28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_10074DA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10074DAC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_10074BF1C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_10074DAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10074DB08(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10074DB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10074DB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Album(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10074DBE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Album(0) - 8) + 80);
  return sub_10074B5C8(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_10074DC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Album(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

unint64_t sub_10074DCCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Album(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_10074B638(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_10074DD38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_10074DD48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100748F58(a1, a2, a3, v3);
}

uint64_t sub_10074DD50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100749104(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10074DD60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10074DD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1007494E0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_10074DD8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100749708(*(_QWORD *)(v1 + 24), a1);
}

void sub_10074DD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100748744(a1, a2, a3, a4, v4);
}

void sub_10074DDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100748D0C(a1, a2, a3, a4, v4);
}

double sub_10074DDAC(uint64_t a1)
{
  uint64_t v1;

  return sub_100748434(a1, v1);
}

double sub_10074DDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100746370(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_10074DDBC(char a1)
{
  uint64_t v1;

  sub_10074715C(a1 & 1, v1);
}

void sub_10074DDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1007471D4(a1, a2, v2);
}

uint64_t sub_10074DDD0(uint64_t a1)
{
  uint64_t v1;

  return sub_100747304(a1, v1);
}

double sub_10074DDD8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_10074758C(a1, a2, v2);
}

uint64_t sub_10074DDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100747F04(a1, v2, a2);
}

Class sub_10074DDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10074C348(a1, a2, v2);
}

void sub_10074DDF0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10074C668(v1, a1);
}

uint64_t sub_10074DE08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10074DE2C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t *sub_10074DE80(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v117;
  char *__dst;
  unsigned int (*v120)(uint64_t *, uint64_t, uint64_t);
  uint64_t v121;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    v7 = *(_QWORD *)(v6 - 8);
    v120 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
    v121 = v6;
    v117 = v7;
    if (v120(a2, 1, v6))
    {
      v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v10 = (int *)type metadata accessor for Showcase(0);
    v11 = v10[5];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v10[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v10[7];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v10[8];
    __dst = (char *)a1 + v23;
    v24 = (char *)a2 + v23;
    v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(__dst, v24, v29);
      v30 = *(int *)(v25 + 20);
      v31 = &__dst[v30];
      v32 = &v24[v30];
      v33 = type metadata accessor for Artwork.CropStyle(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    v36 = v10[9];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
    {
      v41 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
      {
        v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
    }
    *((_BYTE *)a1 + v10[10]) = *((_BYTE *)a2 + v10[10]);
    *((_BYTE *)a1 + v10[11]) = *((_BYTE *)a2 + v10[11]);
    v45 = v10[12];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = *(void **)((char *)a2 + v45);
    *(uint64_t *)((char *)a1 + v45) = (uint64_t)v48;
    v49 = (int *)type metadata accessor for SegueContext(0);
    v50 = v49[5];
    v51 = &v46[v50];
    v52 = &v47[v50];
    v53 = v48;
    if (v120((uint64_t *)v52, 1, v121))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v51, v52, v121);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v51, 0, 1, v121);
    }
    v46[v49[6]] = v47[v49[6]];
    v55 = v49[7];
    v56 = &v46[v55];
    v57 = &v47[v55];
    if (*(_QWORD *)v57)
    {
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
    v59 = sub_100007E8C(&qword_1011C6B58);
    *(uint64_t *)((char *)a1 + *(int *)(v59 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v59 + 28));
    v60 = a3[5];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    v63 = *(void **)v62;
    v64 = v62[8];
    swift_retain();
    sub_1000A4100(v63, v64);
    *(_QWORD *)v61 = v63;
    v61[8] = v64;
    v65 = a3[6];
    v66 = a3[7];
    v67 = (uint64_t *)((char *)a1 + v65);
    v68 = (uint64_t *)((char *)a2 + v65);
    v69 = *v68;
    v70 = v68[1];
    *v67 = v69;
    v67[1] = v70;
    v71 = (uint64_t *)((char *)a1 + v66);
    v72 = (uint64_t *)((char *)a2 + v66);
    v74 = *v72;
    v73 = v72[1];
    *v71 = v74;
    v71[1] = v73;
    v75 = a3[8];
    v76 = (char *)a1 + v75;
    v77 = (char *)a2 + v75;
    v78 = *(_QWORD *)v77;
    v79 = *((_QWORD *)v77 + 1);
    v80 = v77[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v78, v79);
    *(_QWORD *)v76 = v78;
    *((_QWORD *)v76 + 1) = v79;
    v76[16] = v80;
    v81 = a3[9];
    v82 = a3[10];
    v83 = (uint64_t *)((char *)a1 + v81);
    v84 = (uint64_t *)((char *)a2 + v81);
    v85 = *v84;
    v86 = v84[1];
    *v83 = v85;
    v83[1] = v86;
    v87 = (uint64_t *)((char *)a1 + v82);
    v88 = (uint64_t *)((char *)a2 + v82);
    v90 = *v88;
    v89 = v88[1];
    *v87 = v90;
    v87[1] = v89;
    v91 = a3[11];
    v92 = a3[12];
    v93 = (uint64_t *)((char *)a1 + v91);
    v94 = (uint64_t *)((char *)a2 + v91);
    v96 = *v94;
    v95 = v94[1];
    *v93 = v96;
    v93[1] = v95;
    v97 = (char *)a1 + v92;
    v98 = *(uint64_t *)((char *)a2 + v92);
    v99 = *(uint64_t *)((char *)a2 + v92 + 8);
    LOBYTE(v76) = *((_BYTE *)a2 + v92 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v98, v99, (char)v76);
    *(_QWORD *)v97 = v98;
    *((_QWORD *)v97 + 1) = v99;
    v97[16] = (char)v76;
    v100 = a3[13];
    v101 = (char *)a1 + v100;
    v102 = (char *)a2 + v100;
    v103 = *(_QWORD *)v102;
    v104 = *((_QWORD *)v102 + 1);
    LOBYTE(v98) = v102[16];
    sub_1000A411C(*(_QWORD *)v102, v104, v98);
    *(_QWORD *)v101 = v103;
    *((_QWORD *)v101 + 1) = v104;
    v101[16] = v98;
    v105 = a3[14];
    v106 = (char *)a1 + v105;
    v107 = (char *)a2 + v105;
    v108 = *(_QWORD *)v107;
    v109 = *((_QWORD *)v107 + 1);
    v110 = *((_QWORD *)v107 + 2);
    v111 = *((_QWORD *)v107 + 3);
    LOBYTE(v76) = v107[32];
    sub_10006B410(*(_QWORD *)v107, v109, v110, v111, (char)v76);
    *(_QWORD *)v106 = v108;
    *((_QWORD *)v106 + 1) = v109;
    *((_QWORD *)v106 + 2) = v110;
    *((_QWORD *)v106 + 3) = v111;
    v106[32] = (char)v76;
    v112 = a3[15];
    v113 = (char *)a1 + v112;
    v114 = (char *)a2 + v112;
    v115 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v113, v114, v115);
  }
  return a1;
}

uint64_t type metadata accessor for Showcase(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C6C78, (uint64_t)&nominal type descriptor for Showcase);
}

uint64_t sub_10074E494(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = (int *)type metadata accessor for Showcase(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + v7[8];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + v7[9];
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
  {
    v16 = type metadata accessor for Playlist.Variant(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  v18 = (id *)(a1 + v7[12]);

  v19 = type metadata accessor for SegueContext(0);
  v20 = (char *)v18 + *(int *)(v19 + 20);
  if (!v6((uint64_t)v20, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
  if (*(id *)((char *)v18 + *(int *)(v19 + 28)))
    swift_release();
  sub_100007E8C(&qword_1011C6B58);
  swift_release();
  sub_1000A4224(*(id *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[12]), *(_QWORD *)(a1 + a2[12] + 8), *(_BYTE *)(a1 + a2[12] + 16));
  sub_1000A4240(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 16));
  v21 = a1 + a2[14];
  sub_10006B61C(*(_QWORD *)v21, *(_QWORD *)(v21 + 8), *(_QWORD *)(v21 + 16), *(_QWORD *)(v21 + 24), *(_BYTE *)(v21 + 32));
  v22 = a1 + a2[15];
  v23 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
}

char *sub_10074E77C(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v115;
  char *__dst;
  unsigned int (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v118 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v119 = v5;
  v115 = v6;
  if (v118(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for Showcase(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = v8[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = v8[8];
  __dst = &a1[v21];
  v22 = &a2[v21];
  v23 = type metadata accessor for ArtworkImage.ViewModel(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25(v22, 1, v23))
  {
    v26 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(__dst, v22, v27);
    v28 = *(int *)(v23 + 20);
    v29 = &__dst[v28];
    v30 = &v22[v28];
    v31 = type metadata accessor for Artwork.CropStyle(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  v34 = v8[9];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 10, v37))
  {
    v39 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v40 = type metadata accessor for Playlist.Variant(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v36, 1, v40))
    {
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v35, v36, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v35, 0, 1, v40);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 10, v37);
  }
  a1[v8[10]] = a2[v8[10]];
  a1[v8[11]] = a2[v8[11]];
  v43 = v8[12];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = *(void **)&a2[v43];
  *(_QWORD *)&a1[v43] = v46;
  v47 = (int *)type metadata accessor for SegueContext(0);
  v48 = v47[5];
  v49 = &v44[v48];
  v50 = &v45[v48];
  v51 = v46;
  if (v118(v50, 1, v119))
  {
    v52 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v49, v50, v119);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v49, 0, 1, v119);
  }
  v44[v47[6]] = v45[v47[6]];
  v53 = v47[7];
  v54 = &v44[v53];
  v55 = &v45[v53];
  if (*(_QWORD *)v55)
  {
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v54 = *(_OWORD *)v55;
  }
  v57 = sub_100007E8C(&qword_1011C6B58);
  *(_QWORD *)&a1[*(int *)(v57 + 28)] = *(_QWORD *)&a2[*(int *)(v57 + 28)];
  v58 = a3[5];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = *(void **)v60;
  v62 = v60[8];
  swift_retain();
  sub_1000A4100(v61, v62);
  *(_QWORD *)v59 = v61;
  v59[8] = v62;
  v63 = a3[6];
  v64 = a3[7];
  v65 = &a1[v63];
  v66 = &a2[v63];
  v67 = *(_QWORD *)v66;
  v68 = *((_QWORD *)v66 + 1);
  *(_QWORD *)v65 = v67;
  *((_QWORD *)v65 + 1) = v68;
  v69 = &a1[v64];
  v70 = &a2[v64];
  v72 = *(_QWORD *)v70;
  v71 = *((_QWORD *)v70 + 1);
  *(_QWORD *)v69 = v72;
  *((_QWORD *)v69 + 1) = v71;
  v73 = a3[8];
  v74 = &a1[v73];
  v75 = &a2[v73];
  v76 = *(_QWORD *)v75;
  v77 = *((_QWORD *)v75 + 1);
  v78 = v75[16];
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v76, v77);
  *(_QWORD *)v74 = v76;
  *((_QWORD *)v74 + 1) = v77;
  v74[16] = v78;
  v79 = a3[9];
  v80 = a3[10];
  v81 = &a1[v79];
  v82 = &a2[v79];
  v83 = *(_QWORD *)v82;
  v84 = *((_QWORD *)v82 + 1);
  *(_QWORD *)v81 = v83;
  *((_QWORD *)v81 + 1) = v84;
  v85 = &a1[v80];
  v86 = &a2[v80];
  v88 = *(_QWORD *)v86;
  v87 = *((_QWORD *)v86 + 1);
  *(_QWORD *)v85 = v88;
  *((_QWORD *)v85 + 1) = v87;
  v89 = a3[11];
  v90 = a3[12];
  v91 = &a1[v89];
  v92 = &a2[v89];
  v94 = *(_QWORD *)v92;
  v93 = *((_QWORD *)v92 + 1);
  *(_QWORD *)v91 = v94;
  *((_QWORD *)v91 + 1) = v93;
  v95 = &a1[v90];
  v96 = *(_QWORD *)&a2[v90];
  v97 = *(_QWORD *)&a2[v90 + 8];
  LOBYTE(v74) = a2[v90 + 16];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v96, v97, (char)v74);
  *(_QWORD *)v95 = v96;
  *((_QWORD *)v95 + 1) = v97;
  v95[16] = (char)v74;
  v98 = a3[13];
  v99 = &a1[v98];
  v100 = &a2[v98];
  v101 = *(_QWORD *)v100;
  v102 = *((_QWORD *)v100 + 1);
  LOBYTE(v96) = v100[16];
  sub_1000A411C(*(_QWORD *)v100, v102, v96);
  *(_QWORD *)v99 = v101;
  *((_QWORD *)v99 + 1) = v102;
  v99[16] = v96;
  v103 = a3[14];
  v104 = &a1[v103];
  v105 = &a2[v103];
  v106 = *(_QWORD *)v105;
  v107 = *((_QWORD *)v105 + 1);
  v108 = *((_QWORD *)v105 + 2);
  v109 = *((_QWORD *)v105 + 3);
  LOBYTE(v74) = v105[32];
  sub_10006B410(*(_QWORD *)v105, v107, v108, v109, (char)v74);
  *(_QWORD *)v104 = v106;
  *((_QWORD *)v104 + 1) = v107;
  *((_QWORD *)v104 + 2) = v108;
  *((_QWORD *)v104 + 3) = v109;
  v104[32] = (char)v74;
  v110 = a3[15];
  v111 = &a1[v110];
  v112 = &a2[v110];
  v113 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v111, v112, v113);
  return a1;
}

char *sub_10074ED50(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  size_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(void *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  void **v67;
  char *v68;
  void *v69;
  void *v70;
  id v71;
  int *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  id v90;
  char v91;
  void *v92;
  char v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v150;
  int *v151;
  uint64_t (*v152)(char *, uint64_t, uint64_t);
  uint64_t v153;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v152 = v8;
  v153 = v6;
  v150 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Showcase(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v12[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v12[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v12[8];
  v23 = (uint64_t)&a1[v22];
  v24 = &a2[v22];
  v25 = type metadata accessor for ArtworkImage.ViewModel(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27((uint64_t)v24, 1, v25);
  v151 = a3;
  if (!v28)
  {
    if (!v29)
    {
      v40 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v23, v24, v40);
      v41 = *(int *)(v25 + 20);
      v42 = (void *)(v23 + v41);
      v43 = &v24[v41];
      v44 = type metadata accessor for Artwork.CropStyle(0);
      v45 = *(_QWORD *)(v44 - 8);
      v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v45 + 48);
      v47 = v46(v42, 1, v44);
      v48 = v46(v43, 1, v44);
      if (v47)
      {
        if (!v48)
        {
          (*(void (**)(void *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v48)
        {
          (*(void (**)(void *, char *, uint64_t))(v45 + 24))(v42, v43, v44);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v45 + 8))(v42, v44);
      }
      v37 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v38 = v42;
      v39 = v43;
LABEL_14:
      memcpy(v38, v39, v37);
      goto LABEL_21;
    }
    sub_10005B748(v23, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v37 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v38 = (void *)v23;
    v39 = v24;
    goto LABEL_14;
  }
  if (v29)
    goto LABEL_13;
  v30 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v23, v24, v30);
  v31 = *(int *)(v25 + 20);
  v32 = (void *)(v23 + v31);
  v33 = &v24[v31];
  v34 = type metadata accessor for Artwork.CropStyle(0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_21:
  v49 = v12[9];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 10, v52);
  v56 = v54(v51, 10, v52);
  if (!v55)
  {
    if (!v56)
    {
      v61 = type metadata accessor for Playlist.Variant(0);
      v62 = *(_QWORD *)(v61 - 8);
      v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
      v64 = v63(v50, 1, v61);
      v65 = v63(v51, 1, v61);
      if (v64)
      {
        if (!v65)
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v50, v51, v61);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v50, 0, 1, v61);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v65)
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v50, v51, v61);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v62 + 8))(v50, v61);
      }
      v60 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v50, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v60 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v56)
    goto LABEL_27;
  v57 = type metadata accessor for Playlist.Variant(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v51, 1, v57))
  {
    v59 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v50, v51, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v50, 0, 1, v57);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 10, v52);
LABEL_34:
  a1[v12[10]] = a2[v12[10]];
  a1[v12[11]] = a2[v12[11]];
  v66 = v12[12];
  v67 = (void **)&a1[v66];
  v68 = &a2[v66];
  v69 = *(void **)&a2[v66];
  v70 = *v67;
  *v67 = v69;
  v71 = v69;

  v72 = (int *)type metadata accessor for SegueContext(0);
  v73 = v72[5];
  v74 = (char *)v67 + v73;
  v75 = &v68[v73];
  v76 = v152((char *)v67 + v73, 1, v153);
  v77 = v152(v75, 1, v153);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v74, v75, v153);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v74, 0, 1, v153);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v150 + 8))(v74, v153);
LABEL_39:
    v78 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v150 + 24))(v74, v75, v153);
LABEL_40:
  *((_BYTE *)v67 + v72[6]) = v68[v72[6]];
  v79 = v72[7];
  v80 = (void **)((char *)v67 + v79);
  v81 = &v68[v79];
  v82 = *(uint64_t *)((char *)v67 + v79);
  v83 = *(_QWORD *)&v68[v79];
  if (!v82)
  {
    if (v83)
    {
      v85 = *((_QWORD *)v81 + 1);
      *v80 = v83;
      v80[1] = v85;
      swift_retain();
      goto LABEL_47;
    }
LABEL_46:
    *(_OWORD *)v80 = *(_OWORD *)v81;
    goto LABEL_47;
  }
  if (!v83)
  {
    swift_release();
    goto LABEL_46;
  }
  v84 = *((_QWORD *)v81 + 1);
  *v80 = v83;
  v80[1] = v84;
  swift_retain();
  swift_release();
LABEL_47:
  v86 = sub_100007E8C(&qword_1011C6B58);
  *(_QWORD *)&a1[*(int *)(v86 + 28)] = *(_QWORD *)&a2[*(int *)(v86 + 28)];
  swift_retain();
  swift_release();
  v87 = v151[5];
  v88 = &a1[v87];
  v89 = &a2[v87];
  v90 = *(id *)v89;
  v91 = v89[8];
  sub_1000A4100(*(id *)v89, v91);
  v92 = *(void **)v88;
  v93 = v88[8];
  *(_QWORD *)v88 = v90;
  v88[8] = v91;
  sub_1000A4224(v92, v93);
  v94 = v151[6];
  v95 = &a1[v94];
  v96 = &a2[v94];
  *(_QWORD *)&a1[v94] = *(_QWORD *)&a2[v94];
  swift_retain();
  swift_release();
  *((_QWORD *)v95 + 1) = *((_QWORD *)v96 + 1);
  v97 = v151[7];
  v98 = &a1[v97];
  v99 = &a2[v97];
  *(_QWORD *)&a1[v97] = *(_QWORD *)&a2[v97];
  swift_retain();
  swift_release();
  *((_QWORD *)v98 + 1) = *((_QWORD *)v99 + 1);
  v100 = v151[8];
  v101 = &a1[v100];
  v102 = &a2[v100];
  v103 = *(_QWORD *)v102;
  v104 = *((_QWORD *)v102 + 1);
  LOBYTE(v99) = v102[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v102, v104);
  v105 = *(_QWORD *)v101;
  v106 = *((_QWORD *)v101 + 1);
  *(_QWORD *)v101 = v103;
  *((_QWORD *)v101 + 1) = v104;
  v101[16] = (char)v99;
  sub_1000A6174(v105, v106);
  v107 = v151[9];
  v108 = &a1[v107];
  v109 = &a2[v107];
  *(_QWORD *)&a1[v107] = *(_QWORD *)&a2[v107];
  swift_retain();
  swift_release();
  *((_QWORD *)v108 + 1) = *((_QWORD *)v109 + 1);
  v110 = v151[10];
  v111 = &a1[v110];
  v112 = &a2[v110];
  *(_QWORD *)&a1[v110] = *(_QWORD *)&a2[v110];
  swift_retain();
  swift_release();
  *((_QWORD *)v111 + 1) = *((_QWORD *)v112 + 1);
  v113 = v151[11];
  v114 = &a1[v113];
  v115 = &a2[v113];
  *(_QWORD *)&a1[v113] = *(_QWORD *)&a2[v113];
  swift_retain();
  swift_release();
  *((_QWORD *)v114 + 1) = *((_QWORD *)v115 + 1);
  v116 = v151[12];
  v117 = &a1[v116];
  v118 = &a2[v116];
  v119 = *(_QWORD *)v118;
  v120 = *((_QWORD *)v118 + 1);
  LOBYTE(v115) = v118[16];
  sub_1000A410C(*(_QWORD *)v118, v120, (char)v115);
  v121 = *(_QWORD *)v117;
  v122 = *((_QWORD *)v117 + 1);
  v123 = v117[16];
  *(_QWORD *)v117 = v119;
  *((_QWORD *)v117 + 1) = v120;
  v117[16] = (char)v115;
  sub_1000A4230(v121, v122, v123);
  v124 = v151[13];
  v125 = &a1[v124];
  v126 = &a2[v124];
  v127 = *(_QWORD *)v126;
  v128 = *((_QWORD *)v126 + 1);
  LOBYTE(v115) = v126[16];
  sub_1000A411C(*(_QWORD *)v126, v128, (char)v115);
  v129 = *(_QWORD *)v125;
  v130 = *((_QWORD *)v125 + 1);
  v131 = v125[16];
  *(_QWORD *)v125 = v127;
  *((_QWORD *)v125 + 1) = v128;
  v125[16] = (char)v115;
  sub_1000A4240(v129, v130, v131);
  v132 = v151[14];
  v133 = &a1[v132];
  v134 = &a2[v132];
  v135 = *(_QWORD *)v134;
  v136 = *((_QWORD *)v134 + 1);
  v137 = *((_QWORD *)v134 + 2);
  v138 = *((_QWORD *)v134 + 3);
  v139 = v134[32];
  sub_10006B410(*(_QWORD *)v134, v136, v137, v138, v139);
  v140 = *(_QWORD *)v133;
  v141 = *((_QWORD *)v133 + 1);
  v142 = *((_QWORD *)v133 + 2);
  v143 = *((_QWORD *)v133 + 3);
  v144 = v133[32];
  *(_QWORD *)v133 = v135;
  *((_QWORD *)v133 + 1) = v136;
  *((_QWORD *)v133 + 2) = v137;
  *((_QWORD *)v133 + 3) = v138;
  v133[32] = v139;
  sub_10006B61C(v140, v141, v142, v143, v144);
  v145 = v151[15];
  v146 = &a1[v145];
  v147 = &a2[v145];
  v148 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 24))(v146, v147, v148);
  return a1;
}

char *sub_10074F6A4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *__dst;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v70 = v7;
  if (v73(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)type metadata accessor for Showcase(0);
  *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
  *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
  *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
  v10 = v9[8];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v71 = v6;
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    v17 = *(int *)(v13 + 20);
    __dst = &v11[v17];
    v18 = &v12[v17];
    v19 = type metadata accessor for Artwork.CropStyle(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    v6 = v71;
  }
  v22 = v9[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 10, v25))
  {
    v27 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v72 = v6;
    v28 = type metadata accessor for Playlist.Variant(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v24, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v23, v24, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v23, 0, 1, v28);
    }
    v6 = v72;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 10, v25);
  }
  a1[v9[10]] = a2[v9[10]];
  a1[v9[11]] = a2[v9[11]];
  v31 = v9[12];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_QWORD *)&a1[v31] = *(_QWORD *)&a2[v31];
  v34 = (int *)type metadata accessor for SegueContext(0);
  v35 = v34[5];
  v36 = &v32[v35];
  v37 = &v33[v35];
  if (v73(&v33[v35], 1, v6))
  {
    v38 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v36, v37, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v36, 0, 1, v6);
  }
  v32[v34[6]] = v33[v34[6]];
  v39 = v34[7];
  v40 = &v32[v39];
  v41 = &v33[v39];
  v42 = *(_QWORD *)v41;
  if (*(_QWORD *)v41)
  {
    v43 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = v42;
    *((_QWORD *)v40 + 1) = v43;
  }
  else
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
  }
  v44 = sub_100007E8C(&qword_1011C6B58);
  *(_QWORD *)&a1[*(int *)(v44 + 28)] = *(_QWORD *)&a2[*(int *)(v44 + 28)];
  v45 = a3[5];
  v46 = a3[6];
  v47 = &a1[v45];
  v48 = &a2[v45];
  v47[8] = v48[8];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_OWORD *)&a1[v46] = *(_OWORD *)&a2[v46];
  v49 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v50 = &a1[v49];
  v51 = &a2[v49];
  *(_OWORD *)v50 = *(_OWORD *)v51;
  v50[16] = v51[16];
  v52 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v52] = *(_OWORD *)&a2[v52];
  v53 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v54[16] = v55[16];
  *(_OWORD *)v54 = *(_OWORD *)v55;
  v56 = a3[13];
  v57 = a3[14];
  v58 = &a1[v56];
  v59 = &a2[v56];
  v58[16] = v59[16];
  *(_OWORD *)v58 = *(_OWORD *)v59;
  v60 = &a1[v57];
  v61 = &a2[v57];
  v60[32] = v61[32];
  v63 = *(_OWORD *)v61;
  v62 = *((_OWORD *)v61 + 1);
  v64 = a3[15];
  v65 = &a1[v64];
  v66 = &a2[v64];
  *(_OWORD *)v60 = v63;
  *((_OWORD *)v60 + 1) = v62;
  v67 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
  return a1;
}

char *sub_10074FB94(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  size_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(char *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void *v77;
  int *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  void *v97;
  char v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  __int128 v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v149;
  int *v150;
  uint64_t (*v151)(char *, uint64_t, uint64_t);
  uint64_t v152;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v151 = v8;
  v152 = v6;
  v149 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Showcase(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  v18 = v12[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  v23 = v12[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  v28 = v12[8];
  v29 = (uint64_t)&a1[v28];
  v30 = &a2[v28];
  v31 = type metadata accessor for ArtworkImage.ViewModel(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33((uint64_t)v30, 1, v31);
  v150 = a3;
  if (!v34)
  {
    if (!v35)
    {
      v46 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v29, v30, v46);
      v47 = *(int *)(v31 + 20);
      v48 = (void *)(v29 + v47);
      v49 = &v30[v47];
      v50 = type metadata accessor for Artwork.CropStyle(0);
      v51 = *(_QWORD *)(v50 - 8);
      v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48);
      v53 = v52(v48, 1, v50);
      v54 = v52(v49, 1, v50);
      if (v53)
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v51 + 8))(v48, v50);
      }
      v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v44 = v48;
      v45 = v49;
LABEL_14:
      memcpy(v44, v45, v43);
      goto LABEL_21;
    }
    sub_10005B748(v29, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v44 = (void *)v29;
    v45 = v30;
    goto LABEL_14;
  }
  if (v35)
    goto LABEL_13;
  v36 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v29, v30, v36);
  v37 = *(int *)(v31 + 20);
  v38 = (void *)(v29 + v37);
  v39 = &v30[v37];
  v40 = type metadata accessor for Artwork.CropStyle(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_21:
  v55 = v12[9];
  v56 = &a1[v55];
  v57 = &a2[v55];
  v58 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 10, v58);
  v62 = v60(v57, 10, v58);
  if (v61)
  {
    if (!v62)
    {
      v66 = type metadata accessor for Playlist.Variant(0);
      v67 = *(_QWORD *)(v66 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v57, 1, v66))
      {
        v68 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v56, v57, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v56, 0, 1, v66);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 10, v58);
      goto LABEL_34;
    }
    v63 = type metadata accessor for ArtworkImage.Placeholder(0);
  }
  else
  {
    v64 = v152;
    if (v62)
    {
      sub_10004FF60((uint64_t)v56, (uint64_t *)&unk_1011A3DB0);
      v65 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      goto LABEL_35;
    }
    v69 = type metadata accessor for Playlist.Variant(0);
    v70 = *(_QWORD *)(v69 - 8);
    v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
    v72 = v71(v56, 1, v69);
    v73 = v71(v57, 1, v69);
    if (v72)
    {
      if (!v73)
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v56, v57, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v56, 0, 1, v69);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v73)
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 40))(v56, v57, v69);
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v70 + 8))(v56, v69);
    }
    v63 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  }
  memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
LABEL_34:
  v64 = v152;
LABEL_35:
  a1[v12[10]] = a2[v12[10]];
  a1[v12[11]] = a2[v12[11]];
  v74 = v12[12];
  v75 = &a1[v74];
  v76 = &a2[v74];
  v77 = *(void **)&a1[v74];
  *(_QWORD *)&a1[v74] = *(_QWORD *)&a2[v74];

  v78 = (int *)type metadata accessor for SegueContext(0);
  v79 = v78[5];
  v80 = &v75[v79];
  v81 = &v76[v79];
  v82 = v151(&v75[v79], 1, v64);
  v83 = v151(v81, 1, v64);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v80, v81, v64);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v80, 0, 1, v64);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v149 + 8))(v80, v64);
LABEL_40:
    v84 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v149 + 40))(v80, v81, v64);
LABEL_41:
  v75[v78[6]] = v76[v78[6]];
  v85 = v78[7];
  v86 = &v75[v85];
  v87 = &v76[v85];
  v88 = *(_QWORD *)&v75[v85];
  v89 = *(_QWORD *)&v76[v85];
  if (!v88)
  {
    if (v89)
    {
      v91 = *((_QWORD *)v87 + 1);
      *(_QWORD *)v86 = v89;
      *((_QWORD *)v86 + 1) = v91;
      goto LABEL_48;
    }
LABEL_47:
    *(_OWORD *)v86 = *(_OWORD *)v87;
    goto LABEL_48;
  }
  if (!v89)
  {
    swift_release();
    goto LABEL_47;
  }
  v90 = *((_QWORD *)v87 + 1);
  *(_QWORD *)v86 = v89;
  *((_QWORD *)v86 + 1) = v90;
  swift_release();
LABEL_48:
  v92 = sub_100007E8C(&qword_1011C6B58);
  *(_QWORD *)&a1[*(int *)(v92 + 28)] = *(_QWORD *)&a2[*(int *)(v92 + 28)];
  swift_release();
  v93 = v150[5];
  v94 = &a1[v93];
  v95 = &a2[v93];
  v96 = *(_QWORD *)v95;
  LOBYTE(v95) = v95[8];
  v97 = *(void **)v94;
  v98 = v94[8];
  *(_QWORD *)v94 = v96;
  v94[8] = (char)v95;
  sub_1000A4224(v97, v98);
  v99 = v150[6];
  v100 = &a1[v99];
  v101 = &a2[v99];
  *(_QWORD *)&a1[v99] = *(_QWORD *)&a2[v99];
  swift_release();
  *((_QWORD *)v100 + 1) = *((_QWORD *)v101 + 1);
  v102 = v150[7];
  v103 = &a1[v102];
  v104 = &a2[v102];
  *(_QWORD *)&a1[v102] = *(_QWORD *)&a2[v102];
  swift_release();
  *((_QWORD *)v103 + 1) = *((_QWORD *)v104 + 1);
  v105 = v150[8];
  v106 = &a1[v105];
  v107 = &a2[v105];
  v108 = v107[16];
  v109 = *(_QWORD *)v106;
  v110 = *((_QWORD *)v106 + 1);
  *(_OWORD *)v106 = *(_OWORD *)v107;
  v106[16] = v108;
  sub_1000A6174(v109, v110);
  v111 = v150[9];
  v112 = &a1[v111];
  v113 = &a2[v111];
  *(_QWORD *)&a1[v111] = *(_QWORD *)&a2[v111];
  swift_release();
  *((_QWORD *)v112 + 1) = *((_QWORD *)v113 + 1);
  v114 = v150[10];
  v115 = &a1[v114];
  v116 = &a2[v114];
  *(_QWORD *)&a1[v114] = *(_QWORD *)&a2[v114];
  swift_release();
  *((_QWORD *)v115 + 1) = *((_QWORD *)v116 + 1);
  v117 = v150[11];
  v118 = &a1[v117];
  v119 = &a2[v117];
  *(_QWORD *)&a1[v117] = *(_QWORD *)&a2[v117];
  swift_release();
  *((_QWORD *)v118 + 1) = *((_QWORD *)v119 + 1);
  v120 = v150[12];
  v121 = &a1[v120];
  v122 = &a2[v120];
  v123 = v122[16];
  v124 = *(_QWORD *)v121;
  v125 = *((_QWORD *)v121 + 1);
  v126 = v121[16];
  *(_OWORD *)v121 = *(_OWORD *)v122;
  v121[16] = v123;
  sub_1000A4230(v124, v125, v126);
  v127 = v150[13];
  v128 = &a1[v127];
  v129 = &a2[v127];
  v130 = v129[16];
  v131 = *(_QWORD *)v128;
  v132 = *((_QWORD *)v128 + 1);
  v133 = v128[16];
  *(_OWORD *)v128 = *(_OWORD *)v129;
  v128[16] = v130;
  sub_1000A4240(v131, v132, v133);
  v134 = v150[14];
  v135 = &a1[v134];
  v136 = &a2[v134];
  v137 = v136[32];
  v138 = *(_QWORD *)v135;
  v139 = *((_QWORD *)v135 + 1);
  v140 = *((_QWORD *)v135 + 2);
  v141 = *((_QWORD *)v135 + 3);
  v142 = v135[32];
  v143 = *((_OWORD *)v136 + 1);
  *(_OWORD *)v135 = *(_OWORD *)v136;
  *((_OWORD *)v135 + 1) = v143;
  v135[32] = v137;
  sub_10006B61C(v138, v139, v140, v141, v142);
  v144 = v150[15];
  v145 = &a1[v144];
  v146 = &a2[v144];
  v147 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 40))(v145, v146, v147);
  return a1;
}

uint64_t sub_100750444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100750450);
}

uint64_t sub_100750450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_100007E8C(&qword_1011C6B58);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C(qword_1011C9550);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 60), a2, v11);
  }
}

uint64_t sub_10075050C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100750518);
}

uint64_t sub_100750518(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_100007E8C(&qword_1011C6B58);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
      return result;
    }
    v10 = sub_100007E8C(qword_1011C9550);
    v12 = a1 + *(int *)(a4 + 60);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ShowcaseView(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C6BB8, (uint64_t)&nominal type descriptor for ShowcaseView);
}

void sub_1007505D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  sub_1000E3A44(319, (unint64_t *)&unk_1011C6BC8, type metadata accessor for Showcase, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "\t";
    v6[2] = &unk_100ECDE98;
    v6[3] = &unk_100ECDE98;
    v6[4] = &unk_100ECDEB0;
    v6[5] = &unk_100ECDE98;
    v6[6] = &unk_100ECDE98;
    v6[7] = &unk_100ECDE98;
    v6[8] = &unk_100ECDEB0;
    v6[9] = &unk_100ECDEB0;
    v6[10] = &unk_100ECDEC8;
    sub_1000F6458(319);
    if (v5 <= 0x3F)
    {
      v6[11] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 12, v6, a1 + 16);
    }
  }
}

uint64_t *sub_1007506A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void *v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v61;
  char *__dst;
  unsigned int (*v63)(uint64_t *, uint64_t, uint64_t);
  uint64_t v64;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v63 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v64 = v7;
    v61 = v8;
    if (v63(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)a1 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[7];
    v20 = a3[8];
    v21 = (uint64_t *)((char *)a1 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    __dst = (char *)a1 + v20;
    v24 = (char *)a2 + v20;
    v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(__dst, v24, v29);
      v30 = *(int *)(v25 + 20);
      v31 = &__dst[v30];
      v32 = &v24[v30];
      v33 = type metadata accessor for Artwork.CropStyle(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    v36 = a3[9];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
    {
      v41 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
      {
        v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
    }
    v45 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)a1 + v45) = *((_BYTE *)a2 + v45);
    v46 = a3[12];
    v47 = (char *)a1 + v46;
    v48 = (char *)a2 + v46;
    v49 = *(void **)((char *)a2 + v46);
    *(uint64_t *)((char *)a1 + v46) = (uint64_t)v49;
    v50 = (int *)type metadata accessor for SegueContext(0);
    v51 = v50[5];
    v52 = &v47[v51];
    v53 = &v48[v51];
    v54 = v49;
    if (v63((uint64_t *)v53, 1, v64))
    {
      v55 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v52, v53, v64);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v52, 0, 1, v64);
    }
    v47[v50[6]] = v48[v50[6]];
    v56 = v50[7];
    v57 = &v47[v56];
    v58 = &v48[v56];
    if (*(_QWORD *)v58)
    {
      v59 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v59;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v57 = *(_OWORD *)v58;
    }
  }
  return a1;
}

double sub_100750AE0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  char *v19;
  double result;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + a2[8];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    v10 = v7 + *(int *)(v8 + 20);
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = a1 + a2[9];
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 10, v14))
  {
    v15 = type metadata accessor for Playlist.Variant(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
  }
  v17 = (id *)(a1 + a2[12]);

  v18 = type metadata accessor for SegueContext(0);
  v19 = (char *)v17 + *(int *)(v18 + 20);
  if (!v6((uint64_t)v19, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v19, v4);
  if (*(id *)((char *)v17 + *(int *)(v18 + 28)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_100750CE8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void *v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v61;
  int *v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v64 = v6;
  v61 = v7;
  if (v63(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[7];
  v18 = a3[8];
  v62 = a3;
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = &a1[v18];
  v23 = &a2[v18];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    v27 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    v28 = v62;
  }
  else
  {
    v29 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
    v30 = *(int *)(v24 + 20);
    v31 = &v22[v30];
    v32 = &v23[v30];
    v33 = type metadata accessor for Artwork.CropStyle(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v28 = v62;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v36 = v28[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
  {
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = type metadata accessor for Playlist.Variant(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
  }
  v45 = v28[11];
  a1[v28[10]] = a2[v28[10]];
  a1[v45] = a2[v45];
  v46 = v28[12];
  v47 = &a1[v46];
  v48 = &a2[v46];
  v49 = *(void **)&a2[v46];
  *(_QWORD *)&a1[v46] = v49;
  v50 = (int *)type metadata accessor for SegueContext(0);
  v51 = v50[5];
  v52 = &v47[v51];
  v53 = &v48[v51];
  v54 = v49;
  if (v63(v53, 1, v64))
  {
    v55 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v52, v53, v64);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v52, 0, 1, v64);
  }
  v47[v50[6]] = v48[v50[6]];
  v56 = v50[7];
  v57 = &v47[v56];
  v58 = &v48[v56];
  if (*(_QWORD *)v58)
  {
    v59 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *((_QWORD *)v57 + 1) = v59;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v57 = *(_OWORD *)v58;
  }
  return a1;
}

char *sub_1007510F8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  size_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  void **v67;
  char *v68;
  void *v69;
  void *v70;
  id v71;
  int *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *__dst;
  uint64_t v88;
  uint64_t (*v89)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v88 = v7;
  v89 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (uint64_t)&a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26((uint64_t)v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      v38 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v22, v23, v38);
      v39 = *(int *)(v24 + 20);
      v40 = (void *)(v22 + v39);
      v41 = &v23[v39];
      v42 = type metadata accessor for Artwork.CropStyle(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v40, 1, v42);
      v46 = v44(v41, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v40, v41, v42);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v40, v42);
      }
      v35 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v36 = v40;
      v37 = v41;
LABEL_14:
      memcpy(v36, v37, v35);
      goto LABEL_21;
    }
    sub_10005B748(v22, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v35 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v36 = (void *)v22;
    v37 = v23;
    goto LABEL_14;
  }
  if (v28)
    goto LABEL_13;
  v29 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
  v30 = *(int *)(v24 + 20);
  __dst = (void *)(v22 + v30);
  v31 = &v23[v30];
  v32 = type metadata accessor for Artwork.CropStyle(0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v33 + 16))(__dst, v31, v32);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_21:
  v47 = a3[9];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 10, v50);
  v54 = v52(v49, 10, v50);
  if (!v53)
  {
    if (!v54)
    {
      v60 = type metadata accessor for Playlist.Variant(0);
      v61 = *(_QWORD *)(v60 - 8);
      v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
      v63 = v62(v48, 1, v60);
      v64 = v62(v49, 1, v60);
      if (v63)
      {
        v59 = v89;
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v48, v49, v60);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v48, 0, 1, v60);
          goto LABEL_40;
        }
      }
      else
      {
        v59 = v89;
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 24))(v48, v49, v60);
          goto LABEL_40;
        }
        (*(void (**)(char *, uint64_t))(v61 + 8))(v48, v60);
      }
      v65 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      goto LABEL_40;
    }
    sub_10004FF60((uint64_t)v48, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v58 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    v59 = v89;
    goto LABEL_40;
  }
  if (v54)
    goto LABEL_27;
  v55 = type metadata accessor for Playlist.Variant(0);
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v49, 1, v55))
  {
    v57 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v48, v49, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v48, 0, 1, v55);
  }
  v59 = v89;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 10, v50);
LABEL_40:
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  v66 = a3[12];
  v67 = (void **)&a1[v66];
  v68 = &a2[v66];
  v69 = *(void **)&a2[v66];
  v70 = *v67;
  *v67 = v69;
  v71 = v69;

  v72 = (int *)type metadata accessor for SegueContext(0);
  v73 = v72[5];
  v74 = (char *)v67 + v73;
  v75 = &v68[v73];
  v76 = v59((char *)v67 + v73, 1, v6);
  v77 = v59(v75, 1, v6);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v74, v75, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v74, 0, 1, v6);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v88 + 8))(v74, v6);
LABEL_45:
    v78 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v88 + 24))(v74, v75, v6);
LABEL_46:
  *((_BYTE *)v67 + v72[6]) = v68[v72[6]];
  v79 = v72[7];
  v80 = (void **)((char *)v67 + v79);
  v81 = &v68[v79];
  v82 = *(uint64_t *)((char *)v67 + v79);
  v83 = *(_QWORD *)&v68[v79];
  if (!v82)
  {
    if (v83)
    {
      v85 = *((_QWORD *)v81 + 1);
      *v80 = v83;
      v80[1] = v85;
      swift_retain();
      return a1;
    }
LABEL_52:
    *(_OWORD *)v80 = *(_OWORD *)v81;
    return a1;
  }
  if (!v83)
  {
    swift_release();
    goto LABEL_52;
  }
  v84 = *((_QWORD *)v81 + 1);
  *v80 = v83;
  v80[1] = v84;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1007517FC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *__dst;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  unsigned int (*v50)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v48 = v7;
  if (v8(a2, 1, v6))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  v11 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for ArtworkImage.ViewModel(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v49 = v8;
    v17 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
    v18 = *(int *)(v14 + 20);
    __dst = &v12[v18];
    v19 = &v13[v18];
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    v8 = v49;
  }
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 10, v26))
  {
    v28 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v50 = v8;
    v29 = type metadata accessor for Playlist.Variant(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v24, v25, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v24, 0, 1, v29);
    }
    v8 = v50;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 10, v26);
  }
  v32 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v32] = a2[v32];
  v33 = a3[12];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_QWORD *)&a1[v33] = *(_QWORD *)&a2[v33];
  v36 = (int *)type metadata accessor for SegueContext(0);
  v37 = v36[5];
  v38 = &v34[v37];
  v39 = &v35[v37];
  if (v8(&v35[v37], 1, v6))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v38, v39, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v38, 0, 1, v6);
  }
  v34[v36[6]] = v35[v36[6]];
  v41 = v36[7];
  v42 = &v34[v41];
  v43 = &v35[v41];
  v44 = *(_QWORD *)v43;
  if (*(_QWORD *)v43)
  {
    v45 = *((_QWORD *)v43 + 1);
    *(_QWORD *)v42 = v44;
    *((_QWORD *)v42 + 1) = v45;
  }
  else
  {
    *(_OWORD *)v42 = *(_OWORD *)v43;
  }
  return a1;
}

char *sub_100751BD0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  size_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(void *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  void *v76;
  int *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *__dst;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v93 = v7;
  v94 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v26 = *(_QWORD *)v24;
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[8];
  v28 = (uint64_t)&a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for ArtworkImage.ViewModel(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32((uint64_t)v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      v44 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v28, v29, v44);
      v45 = *(int *)(v30 + 20);
      v46 = (void *)(v28 + v45);
      v47 = &v29[v45];
      v48 = type metadata accessor for Artwork.CropStyle(0);
      v49 = *(_QWORD *)(v48 - 8);
      v50 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v49 + 48);
      v51 = v50(v46, 1, v48);
      v52 = v50(v47, 1, v48);
      if (v51)
      {
        if (!v52)
        {
          (*(void (**)(void *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v52)
        {
          (*(void (**)(void *, char *, uint64_t))(v49 + 40))(v46, v47, v48);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v49 + 8))(v46, v48);
      }
      v41 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v42 = v46;
      v43 = v47;
LABEL_14:
      memcpy(v42, v43, v41);
      goto LABEL_21;
    }
    sub_10005B748(v28, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v41 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v42 = (void *)v28;
    v43 = v29;
    goto LABEL_14;
  }
  if (v34)
    goto LABEL_13;
  v35 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v28, v29, v35);
  v36 = *(int *)(v30 + 20);
  __dst = (void *)(v28 + v36);
  v37 = &v29[v36];
  v38 = type metadata accessor for Artwork.CropStyle(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(__dst, v37, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_21:
  v53 = a3[9];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v56 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  v59 = v58(v54, 10, v56);
  v60 = v58(v55, 10, v56);
  if (!v59)
  {
    if (!v60)
    {
      v66 = type metadata accessor for Playlist.Variant(0);
      v67 = *(_QWORD *)(v66 - 8);
      v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
      v69 = v68(v54, 1, v66);
      v70 = v68(v55, 1, v66);
      if (v69)
      {
        v65 = v94;
        if (!v70)
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v54, v55, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v54, 0, 1, v66);
          goto LABEL_40;
        }
      }
      else
      {
        v65 = v94;
        if (!v70)
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v54, v55, v66);
          goto LABEL_40;
        }
        (*(void (**)(char *, uint64_t))(v67 + 8))(v54, v66);
      }
      v71 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      goto LABEL_40;
    }
    sub_10004FF60((uint64_t)v54, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v64 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    v65 = v94;
    goto LABEL_40;
  }
  if (v60)
    goto LABEL_27;
  v61 = type metadata accessor for Playlist.Variant(0);
  v62 = *(_QWORD *)(v61 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v55, 1, v61))
  {
    v63 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v54, v55, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v54, 0, 1, v61);
  }
  v65 = v94;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 10, v56);
LABEL_40:
  v72 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v72] = a2[v72];
  v73 = a3[12];
  v74 = &a1[v73];
  v75 = &a2[v73];
  v76 = *(void **)&a1[v73];
  *(_QWORD *)&a1[v73] = *(_QWORD *)&a2[v73];

  v77 = (int *)type metadata accessor for SegueContext(0);
  v78 = v77[5];
  v79 = &v74[v78];
  v80 = &v75[v78];
  v81 = v65(&v74[v78], 1, v6);
  v82 = v65(v80, 1, v6);
  if (v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v79, v80, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v79, 0, 1, v6);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v79, v6);
LABEL_45:
    v83 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v93 + 40))(v79, v80, v6);
LABEL_46:
  v74[v77[6]] = v75[v77[6]];
  v84 = v77[7];
  v85 = &v74[v84];
  v86 = &v75[v84];
  v87 = *(_QWORD *)&v74[v84];
  v88 = *(_QWORD *)&v75[v84];
  if (!v87)
  {
    if (v88)
    {
      v90 = *((_QWORD *)v86 + 1);
      *(_QWORD *)v85 = v88;
      *((_QWORD *)v85 + 1) = v90;
      return a1;
    }
LABEL_52:
    *(_OWORD *)v85 = *(_OWORD *)v86;
    return a1;
  }
  if (!v88)
  {
    swift_release();
    goto LABEL_52;
  }
  v89 = *((_QWORD *)v86 + 1);
  *(_QWORD *)v85 = v88;
  *((_QWORD *)v85 + 1) = v89;
  swift_release();
  return a1;
}

uint64_t sub_100752290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10075229C);
}

uint64_t sub_10075229C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[8];
    }
    else
    {
      v15 = type metadata accessor for ArtworkImage.Placeholder(0);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[9];
      }
      else
      {
        v13 = type metadata accessor for SegueContext(0);
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a3[12];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_1007523A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007523B0);
}

uint64_t sub_1007523B0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = a2;
      return result;
    }
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v16 = type metadata accessor for ArtworkImage.Placeholder(0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[9];
      }
      else
      {
        v10 = type metadata accessor for SegueContext(0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[12];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1007524A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[9];

  sub_1000E3A44(319, (unint64_t *)&qword_1011A06D8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = &unk_100ECDE98;
    v10[2] = &unk_100ECDE98;
    v10[3] = &unk_100ECDE98;
    sub_1000E3A44(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v10[4] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for ArtworkImage.Placeholder(319);
      if (v7 <= 0x3F)
      {
        v10[5] = *(_QWORD *)(v6 - 8) + 64;
        v10[6] = &unk_100ECDEF0;
        v10[7] = &unk_100ECDEF0;
        v8 = type metadata accessor for SegueContext(319);
        if (v9 <= 0x3F)
        {
          v10[8] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 9, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_1007525AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FABFC4, 1);
}

uint64_t sub_1007525BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for Showcase(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v6, type metadata accessor for Showcase);
  State.init(wrappedValue:)(v6, v4);
  sub_10005B748(a1, type metadata accessor for Showcase);
  v7 = (int *)type metadata accessor for ShowcaseView(0);
  v8 = a2 + v7[5];
  *(_QWORD *)v8 = swift_getKeyPath(&unk_100ECDF58);
  *(_BYTE *)(v8 + 8) = 0;
  v9 = (_QWORD *)(a2 + v7[6]);
  v10 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v11 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v9 = EnvironmentObject.init()(v10, v11);
  v9[1] = v12;
  v13 = (_QWORD *)(a2 + v7[7]);
  v14 = type metadata accessor for NoticePresenter(0);
  v15 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v13 = EnvironmentObject.init()(v14, v15);
  v13[1] = v16;
  v17 = a2 + v7[8];
  *(_QWORD *)v17 = sub_1000DEC04;
  *(_QWORD *)(v17 + 8) = 0;
  *(_BYTE *)(v17 + 16) = 0;
  v18 = (_QWORD *)(a2 + v7[9]);
  v19 = type metadata accessor for NavigationPusher();
  v20 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v18 = EnvironmentObject.init()(v19, v20);
  v18[1] = v21;
  v22 = (_QWORD *)(a2 + v7[10]);
  v23 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v24 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v22 = EnvironmentObject.init()(v23, v24);
  v22[1] = v25;
  v26 = (_QWORD *)(a2 + v7[11]);
  v27 = type metadata accessor for TabSelectionManager(0);
  v28 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v26 = EnvironmentObject.init()(v27, v28);
  v26[1] = v29;
  v30 = a2 + v7[12];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100ECDF80);
  *(_QWORD *)(v30 + 8) = 0;
  *(_BYTE *)(v30 + 16) = 0;
  v31 = a2 + v7[13];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100ECDFA8);
  *(_QWORD *)(v31 + 8) = 0;
  *(_BYTE *)(v31 + 16) = 0;
  v32 = a2 + v7[14];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100ECDFD0);
  *(_QWORD *)(v32 + 8) = 0;
  *(_QWORD *)(v32 + 16) = 0;
  *(_QWORD *)(v32 + 24) = 0;
  *(_BYTE *)(v32 + 32) = 0;
  v36 = 0x4063800000000000;
  v33 = sub_1000E4360();
  return ScaledMetric.init(wrappedValue:)(&v36, &type metadata for CGFloat, v33);
}

uint64_t sub_100752870@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  int *v68;
  _QWORD *v69;
  int *v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t *v76;
  char *v77;
  uint64_t result;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v91 = a3;
  v7 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v7);
  v81 = (uint64_t)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v82 = (char *)&v79 - v10;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v11);
  v92 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v13);
  v88 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v84 = (uint64_t)&v79 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v79 - v18;
  __chkstk_darwin(v20);
  v80 = (uint64_t)&v79 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v79 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v79 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v79 - v29;
  __chkstk_darwin(v31);
  v87 = (uint64_t)&v79 - v32;
  v33 = sub_10004A160(a2, (uint64_t)&v79 - v32, (uint64_t *)&unk_1011A20D0);
  v34 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x3E0))(v33);
  v85 = v35;
  v86 = v34;
  v36 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x368))();
  v38 = v37;
  sub_10004A160(a2, (uint64_t)v30, (uint64_t *)&unk_1011A20D0);
  v89 = v38;
  v90 = a2;
  if (v38)
  {
    v83 = v36;
    v39 = sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011A20D0);
  }
  else
  {
    sub_10004A160((uint64_t)v30, (uint64_t)v27, (uint64_t *)&unk_1011A20D0);
    v40 = type metadata accessor for GenericMusicItem(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v27, 1, v40) == 1)
    {
      sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011A20D0);
      v39 = sub_10004FF60((uint64_t)v27, (uint64_t *)&unk_1011A20D0);
      v83 = 0;
      v89 = 0;
    }
    else
    {
      v83 = sub_100752F30();
      v89 = v42;
      sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011A20D0);
      v39 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v27, v40);
    }
    a2 = v90;
  }
  v43 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x380))(v39);
  v45 = v44;
  sub_10004A160(a2, (uint64_t)v24, (uint64_t *)&unk_1011A20D0);
  if (v45)
  {
    sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A20D0);
    v46 = (uint64_t)v82;
  }
  else
  {
    v47 = v80;
    sub_10004A160((uint64_t)v24, v80, (uint64_t *)&unk_1011A20D0);
    v48 = type metadata accessor for GenericMusicItem(0);
    v49 = *(_QWORD *)(v48 - 8);
    v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48);
    v46 = (uint64_t)v82;
    if (v50 == 1)
    {
      sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A20D0);
      sub_10004FF60(v47, (uint64_t *)&unk_1011A20D0);
      v43 = 0;
      v45 = 0;
    }
    else
    {
      v43 = sub_100753AA0();
      v45 = v51;
      sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A20D0);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    }
    a2 = v90;
  }
  v82 = v45;
  sub_10004A160(v91, v92, (uint64_t *)&unk_1011A3E10);
  sub_10004A160(a2, (uint64_t)v19, (uint64_t *)&unk_1011A20D0);
  v52 = type metadata accessor for GenericMusicItem(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  if (v54(v19, 1, v52) == 1)
  {
    sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011A20D0);
    v55 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v46, 1, 10, v55);
  }
  else
  {
    v56 = v19;
    v57 = a4;
    v58 = a1;
    v59 = v43;
    v60 = v46;
    v61 = v81;
    GenericMusicItem.placeholder.getter(v81);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v52);
    v62 = v61;
    v46 = v60;
    v43 = v59;
    a1 = v58;
    a4 = v57;
    sub_10005B6C0(v62, v46, type metadata accessor for ArtworkImage.Placeholder);
  }
  v63 = v84;
  sub_10004A160(a2, v84, (uint64_t *)&unk_1011A20D0);
  if (v54((char *)v63, 1, v52) == 1)
  {
    sub_10004FF60(v63, (uint64_t *)&unk_1011A20D0);
    v64 = 2;
  }
  else
  {
    v64 = GenericMusicItem.explicitBadge(_:)(1);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v63, v52);
  }
  v65 = a2;
  v66 = v88;
  sub_10004A160(v65, v88, (uint64_t *)&unk_1011A20D0);
  if (v54((char *)v66, 1, v52) == 1)
  {
    sub_10004FF60(v91, (uint64_t *)&unk_1011A3E10);
    sub_10004FF60(v66, (uint64_t *)&unk_1011A20D0);
    v67 = 2;
  }
  else
  {
    v67 = GenericMusicItem.favoriteBadge.getter();
    sub_10004FF60(v91, (uint64_t *)&unk_1011A3E10);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v66, v52);
  }
  v68 = (int *)type metadata accessor for Showcase(0);
  v69 = (_QWORD *)(a4 + v68[12]);
  *v69 = a1;
  v70 = (int *)type metadata accessor for SegueContext(0);
  sub_100065228(v90, (uint64_t)v69 + v70[5], (uint64_t *)&unk_1011A20D0);
  *((_BYTE *)v69 + v70[6]) = 0;
  v71 = (_QWORD *)((char *)v69 + v70[7]);
  *v71 = 0;
  v71[1] = 0;
  sub_100065228(v87, a4, (uint64_t *)&unk_1011A20D0);
  v72 = (uint64_t *)(a4 + v68[5]);
  v73 = v85;
  *v72 = v86;
  v72[1] = v73;
  v74 = (uint64_t *)(a4 + v68[6]);
  v75 = v89;
  *v74 = v83;
  v74[1] = v75;
  v76 = (uint64_t *)(a4 + v68[7]);
  v77 = v82;
  *v76 = v43;
  v76[1] = (uint64_t)v77;
  sub_100065228(v92, a4 + v68[8], (uint64_t *)&unk_1011A3E10);
  result = sub_10005B6C0(v46, a4 + v68[9], type metadata accessor for ArtworkImage.Placeholder);
  *(_BYTE *)(a4 + v68[10]) = v64;
  *(_BYTE *)(a4 + v68[11]) = v67;
  return result;
}

uint64_t sub_100752F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  __n128 v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  __n128 v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  __n128 v67;
  void (*v68)(char *, uint64_t, __n128);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, __n128);
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v78 = type metadata accessor for Logger(0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v70 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = type metadata accessor for SocialProfile(0);
  v92 = *(_QWORD *)(v1 - 8);
  v93 = v1;
  __chkstk_darwin(v1);
  v91 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for EditorialItem(0);
  v106 = *(_QWORD *)(v3 - 8);
  v107 = v3;
  __chkstk_darwin(v3);
  v105 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicMovie(0);
  v103 = *(_QWORD *)(v5 - 8);
  v104 = v5;
  __chkstk_darwin(v5);
  v102 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for TVEpisode(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for UploadedVideo(0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v73 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for UploadedAudio(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v79 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for Station(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for Song(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RadioShow(0);
  v95 = *(_QWORD *)(v12 - 8);
  v96 = v12;
  __chkstk_darwin(v12);
  v94 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Playlist(0);
  v98 = *(_QWORD *)(v14 - 8);
  v99 = v14;
  __chkstk_darwin(v14);
  v97 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicVideo(0);
  v100 = *(_QWORD *)(v16 - 8);
  v101 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Artist(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Album(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for GenericMusicItem(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v72 = (char *)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v70 - v32;
  v71 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v28 + 16);
  v71((char *)&v70 - v32, v108, v27, v31);
  v34 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v33, v27);
  if (v34 != enum case for GenericMusicItem.album(_:))
  {
    if (v34 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v22, v33, v19);
      v36 = Artist.name.getter(v37);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      return v36;
    }
    if (v34 == enum case for GenericMusicItem.composer(_:) || v34 == enum case for GenericMusicItem.curator(_:))
      goto LABEL_11;
    if (v34 == enum case for GenericMusicItem.editorialItem(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v38 = v105;
      v39 = v106;
      v40 = v107;
      v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v106 + 32))(v105, v33, v107);
      v42 = EditorialItem.name.getter(v41);
LABEL_37:
      v36 = v42;
      v46 = *(void (**)(char *, uint64_t))(v39 + 8);
      v47 = v38;
      goto LABEL_38;
    }
    if (v34 == enum case for GenericMusicItem.genre(_:))
      goto LABEL_11;
    if (v34 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v38 = v102;
      v39 = v103;
      v40 = v104;
      v43.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v103 + 32))(v102, v33, v104);
      v42 = MusicMovie.title.getter(v43);
      goto LABEL_37;
    }
    if (v34 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v44 = v100;
      v40 = v101;
      v45.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v100 + 32))(v18, v33, v101);
      v36 = MusicVideo.title.getter(v45);
      v46 = *(void (**)(char *, uint64_t))(v44 + 8);
      v47 = v18;
LABEL_38:
      v46(v47, v40);
      return v36;
    }
    if (v34 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v38 = v97;
      v39 = v98;
      v40 = v99;
      v48.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v98 + 32))(v97, v33, v99);
      v42 = Playlist.name.getter(v48);
      goto LABEL_37;
    }
    if (v34 == enum case for GenericMusicItem.radioShow(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v38 = v94;
      v39 = v95;
      v40 = v96;
      v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v95 + 32))(v94, v33, v96);
      v42 = RadioShow.name.getter(v49);
      goto LABEL_37;
    }
    if (v34 == enum case for GenericMusicItem.recordLabel(_:))
      goto LABEL_11;
    if (v34 == enum case for GenericMusicItem.socialProfile(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v38 = v91;
      v39 = v92;
      v40 = v93;
      v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v92 + 32))(v91, v33, v93);
      v42 = SocialProfile.name.getter(v50);
      goto LABEL_37;
    }
    if (v34 == enum case for GenericMusicItem.song(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v39 = v89;
      v38 = v88;
      v40 = v90;
      v51 = (*(uint64_t (**)(char *, char *, uint64_t))(v89 + 32))(v88, v33, v90);
      v42 = Song.title.getter(v51);
      goto LABEL_37;
    }
    if (v34 == enum case for GenericMusicItem.station(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v39 = v86;
      v38 = v85;
      v40 = v87;
      v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v86 + 32))(v85, v33, v87);
      v42 = Station.name.getter(v52);
      goto LABEL_37;
    }
    if (v34 == enum case for GenericMusicItem.tvEpisode(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v39 = v83;
      v38 = v82;
      v40 = v84;
      v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v83 + 32))(v82, v33, v84);
      v42 = TVEpisode.title.getter(v53);
      goto LABEL_37;
    }
    if (v34 == enum case for GenericMusicItem.tvSeason(_:) || v34 == enum case for GenericMusicItem.tvShow(_:))
    {
LABEL_11:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v27);
    }
    else
    {
      if (v34 == enum case for GenericMusicItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
        v39 = v80;
        v38 = v79;
        v40 = v81;
        v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v80 + 32))(v79, v33, v81);
        v42 = UploadedAudio.title.getter(v54);
        goto LABEL_37;
      }
      if (v34 == enum case for GenericMusicItem.uploadedVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
        v39 = v74;
        v38 = v73;
        v40 = v75;
        v55.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v74 + 32))(v73, v33, v75);
        v42 = UploadedVideo.title.getter(v55);
        goto LABEL_37;
      }
      if (v34 == enum case for GenericMusicItem.other(_:))
      {
        (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
        swift_bridgeObjectRelease();
      }
      else
      {
        v57 = Logger.musicKit.unsafeMutableAddressor();
        (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v57, v78);
        v58 = ((uint64_t (*)(char *, uint64_t, uint64_t))v71)(v72, v108, v27);
        v59 = Logger.logObject.getter(v58);
        v61 = static os_log_type_t.fault.getter(v60);
        if (os_log_type_enabled(v59, v61))
        {
          v62 = swift_slowAlloc(22, -1);
          v108 = swift_slowAlloc(64, -1);
          v110 = v108;
          *(_DWORD *)v62 = 136446466;
          v109 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v110);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110);
          *(_WORD *)(v62 + 12) = 2082;
          v107 = v62 + 14;
          v63 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
          v64 = v72;
          v65 = dispatch thunk of CustomStringConvertible.description.getter(v27, v63);
          v109 = sub_100322200(v65, v66, &v110);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110);
          v67 = swift_bridgeObjectRelease();
          v68 = *(void (**)(char *, uint64_t, __n128))(v28 + 8);
          v68(v64, v27, v67);
          _os_log_impl((void *)&_mh_execute_header, v59, v61, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v62, 0x16u);
          v69 = v108;
          swift_arrayDestroy(v108, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v69, -1, -1);
          swift_slowDealloc(v62, -1, -1);
        }
        else
        {
          v68 = *(void (**)(char *, uint64_t, __n128))(v28 + 8);
          ((void (*)(char *, uint64_t))v68)(v72, v27);
        }

        (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
        ((void (*)(char *, uint64_t))v68)(v33, v27);
      }
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
  v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v26, v33, v23);
  v36 = Album.title.getter(v35);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  return v36;
}

uint64_t sub_100753AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  __n128 v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  __n128 v77;
  void (*v78)(char *, uint64_t, __n128);
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t, __n128);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v88 = type metadata accessor for Logger(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)&v80 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = type metadata accessor for SocialProfile(0);
  v99 = *(_QWORD *)(v1 - 8);
  v100 = v1;
  __chkstk_darwin(v1);
  v98 = (char *)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for EditorialItem(0);
  v112 = *(_QWORD *)(v3 - 8);
  v113 = v3;
  __chkstk_darwin(v3);
  v111 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicMovie(0);
  v108 = *(_QWORD *)(v5 - 8);
  v109 = v5;
  __chkstk_darwin(v5);
  v107 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for UploadedVideo(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for UploadedAudio(0);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v89 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for Station(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v96 = *(_QWORD *)(v10 - 8);
  v97 = v10;
  __chkstk_darwin(v10);
  v95 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A58C8);
  __chkstk_darwin(v12);
  v110 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v104 = (char *)&v80 - v15;
  v16 = type metadata accessor for RadioShow(0);
  v102 = *(_QWORD *)(v16 - 8);
  v103 = v16;
  __chkstk_darwin(v16);
  v101 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Playlist(0);
  v105 = *(_QWORD *)(v18 - 8);
  v106 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MusicVideo(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Album(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for GenericMusicItem(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v85 = (char *)&v80 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v80 - v34;
  v81 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v30 + 16);
  v81((char *)&v80 - v34, v114, v29, v33);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v35, v29);
  if (v36 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v28, v35, v25);
    v38 = Album.artistName.getter(v37);
    v39 = *(void (**)(char *, uint64_t))(v26 + 8);
    v40 = v28;
LABEL_15:
    v47 = v25;
LABEL_16:
    v39(v40, v47);
    return v38;
  }
  if (v36 == enum case for GenericMusicItem.artist(_:)
    || v36 == enum case for GenericMusicItem.composer(_:)
    || v36 == enum case for GenericMusicItem.curator(_:))
  {
    goto LABEL_11;
  }
  if (v36 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v42 = v111;
    v41 = v112;
    v25 = v113;
    v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v112 + 32))(v111, v35, v113);
    v44 = (uint64_t)v110;
    EditorialItem.editorialNotes.getter(v43);
    v45 = type metadata accessor for EditorialNotes(0);
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45) == 1)
    {
      sub_10004FF60(v44, &qword_1011A58C8);
      v38 = 0;
    }
    else
    {
      v38 = EditorialNotes.short.getter();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    }
    v39 = *(void (**)(char *, uint64_t))(v41 + 8);
    v40 = v42;
    goto LABEL_15;
  }
  if (v36 == enum case for GenericMusicItem.genre(_:))
    goto LABEL_11;
  if (v36 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v49 = v107;
    v50 = v108;
    v21 = v109;
    v51 = (*(uint64_t (**)(char *, char *, uint64_t))(v108 + 32))(v107, v35, v109);
    v52 = MusicMovie.artistName.getter(v51);
LABEL_20:
    v38 = v52;
    v39 = *(void (**)(char *, uint64_t))(v50 + 8);
    v40 = v49;
    goto LABEL_32;
  }
  if (v36 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v22 + 32))(v24, v35, v21);
    v38 = MusicVideo.artistName.getter(v53);
    v39 = *(void (**)(char *, uint64_t))(v22 + 8);
    v40 = v24;
    goto LABEL_32;
  }
  if (v36 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v54 = v105;
    v21 = v106;
    v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v105 + 32))(v20, v35, v106);
    v38 = Playlist.curatorName.getter(v55);
    v39 = *(void (**)(char *, uint64_t))(v54 + 8);
    v40 = v20;
    goto LABEL_32;
  }
  if (v36 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v57 = v101;
    v56 = v102;
    v58 = v103;
    v59 = (*(uint64_t (**)(char *, char *, uint64_t))(v102 + 32))(v101, v35, v103);
    v60 = (uint64_t)v104;
    RadioShow.editorialNotes.getter(v59);
    v21 = type metadata accessor for EditorialNotes(0);
    v61 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v60, 1, v21) == 1)
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
      sub_10004FF60(v60, &qword_1011A58C8);
      return 0;
    }
    v38 = EditorialNotes.name.getter();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
    v39 = *(void (**)(char *, uint64_t))(v61 + 8);
    v40 = (char *)v60;
LABEL_32:
    v47 = v21;
    goto LABEL_16;
  }
  if (v36 != enum case for GenericMusicItem.recordLabel(_:))
  {
    if (v36 == enum case for GenericMusicItem.socialProfile(_:))
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
      v49 = v98;
      v50 = v99;
      v21 = v100;
      v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v99 + 32))(v98, v35, v100);
      v52 = SocialProfile.handle.getter(v62);
      goto LABEL_20;
    }
    if (v36 == enum case for GenericMusicItem.song(_:))
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
      v50 = v96;
      v49 = v95;
      v21 = v97;
      v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v96 + 32))(v95, v35, v97);
      v52 = Song.artistName.getter(v63);
      goto LABEL_20;
    }
    if (v36 == enum case for GenericMusicItem.station(_:))
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
      v50 = v93;
      v49 = v92;
      v21 = v94;
      v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v93 + 32))(v92, v35, v94);
      v52 = Station.stationProviderName.getter(v64);
      goto LABEL_20;
    }
    if (v36 != enum case for GenericMusicItem.tvEpisode(_:)
      && v36 != enum case for GenericMusicItem.tvSeason(_:)
      && v36 != enum case for GenericMusicItem.tvShow(_:))
    {
      if (v36 == enum case for GenericMusicItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
        v50 = v90;
        v49 = v89;
        v21 = v91;
        v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v90 + 32))(v89, v35, v91);
        v52 = UploadedAudio.artistName.getter(v65);
      }
      else
      {
        if (v36 != enum case for GenericMusicItem.uploadedVideo(_:))
        {
          if (v36 == enum case for GenericMusicItem.other(_:))
          {
            (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
            swift_bridgeObjectRelease();
          }
          else
          {
            v67 = Logger.musicKit.unsafeMutableAddressor();
            (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v86, v67, v88);
            v68 = ((uint64_t (*)(char *, uint64_t, uint64_t))v81)(v85, v114, v29);
            v69 = Logger.logObject.getter(v68);
            v71 = static os_log_type_t.fault.getter(v70);
            if (os_log_type_enabled(v69, v71))
            {
              v72 = swift_slowAlloc(22, -1);
              v114 = swift_slowAlloc(64, -1);
              v116 = v114;
              *(_DWORD *)v72 = 136446466;
              v115 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v116);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116);
              *(_WORD *)(v72 + 12) = 2082;
              v113 = v72 + 14;
              v73 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
              v74 = v85;
              v75 = dispatch thunk of CustomStringConvertible.description.getter(v29, v73);
              v115 = sub_100322200(v75, v76, &v116);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116);
              v77 = swift_bridgeObjectRelease();
              v78 = *(void (**)(char *, uint64_t, __n128))(v30 + 8);
              v78(v74, v29, v77);
              _os_log_impl((void *)&_mh_execute_header, v69, v71, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v72, 0x16u);
              v79 = v114;
              swift_arrayDestroy(v114, 2, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v79, -1, -1);
              swift_slowDealloc(v72, -1, -1);
            }
            else
            {
              v78 = *(void (**)(char *, uint64_t, __n128))(v30 + 8);
              ((void (*)(char *, uint64_t))v78)(v85, v29);
            }

            (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v88);
            ((void (*)(char *, uint64_t))v78)(v35, v29);
          }
          return 0;
        }
        (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
        v50 = v83;
        v49 = v82;
        v21 = v84;
        v66 = (*(uint64_t (**)(char *, char *, uint64_t))(v83 + 32))(v82, v35, v84);
        v52 = UploadedVideo.artistName.getter(v66);
      }
      goto LABEL_20;
    }
  }
LABEL_11:
  (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v29);
  return 0;
}

uint64_t sub_100754658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  double v74;
  char v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  __int128 *v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  __int128 v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  id v138;
  char v139;
  char *v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t KeyPath;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  char *v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  void *v188;
  _QWORD *v189;
  unint64_t v190;
  unint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t OpaqueTypeConformance2;
  char *v203;
  uint64_t v204;
  __n128 v205;
  uint64_t result;
  uint64_t v207;
  uint64_t *v208;
  uint64_t v209;
  unint64_t *v210;
  void *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  ValueMetadata *v224;
  unint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  _QWORD *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  char *v261;
  uint64_t *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  _BYTE v266[32];
  uint64_t v267;
  _QWORD v268[5];
  _QWORD v269[5];
  _QWORD v270[5];
  _QWORD v271[3];
  uint64_t v272;
  _UNKNOWN **v273;
  _QWORD *v274;
  _OWORD v275[3];
  uint64_t v276;
  unint64_t v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  _QWORD *v283;
  uint64_t v284;
  uint64_t v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  char *v289;
  __int128 v290;
  uint64_t v291;

  v257 = a1;
  v264 = type metadata accessor for ShowcaseView(0);
  __chkstk_darwin(v264);
  v229 = (uint64_t)&v226 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v3);
  v256 = (uint64_t *)((char *)&v226 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v5);
  v228 = (uint64_t)&v226 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v262 = (uint64_t *)((char *)&v226 - v8);
  v9 = type metadata accessor for Material(0);
  v258 = *(_QWORD *)(v9 - 8);
  v259 = v9;
  __chkstk_darwin(v9);
  v249 = (char *)&v226 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AccessibilityChildBehavior(0);
  v237 = *(_QWORD *)(v11 - 8);
  v238 = v11;
  __chkstk_darwin(v11);
  v236 = (char *)&v226 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SegueContext(0);
  __chkstk_darwin(v13);
  v231 = (uint64_t)&v226 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Showcase(0);
  __chkstk_darwin(v15);
  v227 = (uint64_t *)((char *)&v226 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v260 = (uint64_t *)((char *)&v226 - v18);
  __chkstk_darwin(v19);
  v21 = (uint64_t *)((char *)&v226 - v20);
  v22 = sub_100007E8C(&qword_1011AC438);
  __chkstk_darwin(v22);
  v24 = (char *)&v226 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v230 = sub_100007E8C(&qword_1011AC440);
  __chkstk_darwin(v230);
  v26 = (char *)&v226 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011C6CD0);
  v234 = *(_QWORD *)(v27 - 8);
  v235 = v27;
  __chkstk_darwin(v27);
  v29 = (char *)&v226 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = sub_100007E8C(&qword_1011C6CD8);
  __chkstk_darwin(v232);
  v31 = (char *)&v226 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = sub_100007E8C(&qword_1011C6CE0);
  __chkstk_darwin(v233);
  v33 = (char *)&v226 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = sub_100007E8C(&qword_1011C6CE8);
  __chkstk_darwin(v239);
  v35 = (char *)&v226 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007E8C(&qword_1011C6CF0);
  v244 = *(_QWORD *)(v36 - 8);
  v245 = v36;
  __chkstk_darwin(v36);
  v241 = (char *)&v226 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = sub_100007E8C(&qword_1011C6CF8);
  __chkstk_darwin(v243);
  v242 = (char *)&v226 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100007E8C(&qword_1011C6D00);
  v247 = *(_QWORD *)(v39 - 8);
  v248 = v39;
  __chkstk_darwin(v39);
  v246 = (char *)&v226 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v265 = sub_100007E8C(&qword_1011C6D08);
  __chkstk_darwin(v265);
  v261 = (char *)&v226 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C(&qword_1011C6D10);
  v254 = *(_QWORD *)(v42 - 8);
  v255 = v42;
  __chkstk_darwin(v42);
  v253 = (uint64_t)&v226 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100007E8C(&qword_1011C6D18);
  v251 = *(_QWORD *)(v44 - 8);
  v252 = v44;
  __chkstk_darwin(v44);
  v250 = (char *)&v226 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v24 = static VerticalAlignment.center.getter(v46);
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 1;
  v47 = sub_100007E8C(&qword_1011C6D20);
  sub_10075591C((uint64_t)&v24[*(int *)(v47 + 44)]);
  v240 = sub_100007E8C(&qword_1011C6B58);
  v263 = v1;
  State.wrappedValue.getter(v21, v240);
  v48 = v231;
  sub_10005B704((uint64_t)v21 + *(int *)(v15 + 48), v231, type metadata accessor for SegueContext);
  sub_10005B748((uint64_t)v21, type metadata accessor for Showcase);
  sub_10030ED3C(v48, (uint64_t)v26);
  sub_10005B748(v48, type metadata accessor for SegueContext);
  v49 = sub_10004FF60((uint64_t)v24, &qword_1011AC438);
  v50 = v236;
  static AccessibilityChildBehavior.combine.getter(v49);
  v51 = sub_100756C10();
  View.accessibilityElement(children:)(v50, v230, v51);
  (*(void (**)(char *, uint64_t))(v237 + 8))(v50, v238);
  v52 = sub_10004FF60((uint64_t)v26, &qword_1011AC440);
  v53 = static Edge.Set.leading.getter(v52);
  if (qword_10119C8D8 != -1)
    swift_once(&qword_10119C8D8, sub_10085FA00);
  v54 = EdgeInsets.init(_all:)(*(double *)&qword_10124DA50);
  v56 = v55;
  v58 = v57;
  v60 = v59;
  v62 = v234;
  v61 = v235;
  (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v31, v29, v235);
  v63 = &v31[*(int *)(v232 + 36)];
  *v63 = v53;
  *((double *)v63 + 1) = v54;
  *((_QWORD *)v63 + 2) = v56;
  *((_QWORD *)v63 + 3) = v58;
  *((_QWORD *)v63 + 4) = v60;
  v63[40] = 0;
  v64 = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v29, v61);
  v65 = static Edge.Set.vertical.getter(v64);
  v66 = EdgeInsets.init(_all:)(*(double *)&qword_10124DA50);
  v68 = v67;
  v70 = v69;
  v72 = v71;
  sub_10004A160((uint64_t)v31, (uint64_t)v33, &qword_1011C6CD8);
  v73 = &v33[*(int *)(v233 + 36)];
  *v73 = v65;
  *((double *)v73 + 1) = v66;
  *((_QWORD *)v73 + 2) = v68;
  *((_QWORD *)v73 + 3) = v70;
  *((_QWORD *)v73 + 4) = v72;
  v73[40] = 0;
  sub_10004FF60((uint64_t)v31, &qword_1011C6CD8);
  v75 = static Edge.Set.trailing.getter(v74);
  v76 = EdgeInsets.init(_all:)(16.0);
  v78 = v77;
  v80 = v79;
  v82 = v81;
  sub_10004A160((uint64_t)v33, (uint64_t)v35, &qword_1011C6CE0);
  v83 = v239;
  v84 = &v35[*(int *)(v239 + 36)];
  *v84 = v75;
  *((double *)v84 + 1) = v76;
  *((_QWORD *)v84 + 2) = v78;
  *((_QWORD *)v84 + 3) = v80;
  *((_QWORD *)v84 + 4) = v82;
  v84[40] = 0;
  sub_10004FF60((uint64_t)v33, &qword_1011C6CE0);
  v85 = Corner.featured.unsafeMutableAddressor();
  v86 = *(_QWORD *)v85;
  v87 = *((_QWORD *)v85 + 1);
  v88 = *((_BYTE *)v85 + 16);
  v89 = sub_10005610C(&qword_1011C6D38, &qword_1011C6CE8, (void (*)(void))sub_100756CAC);
  v90 = v241;
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v86, v87, v88, 0, 0, 1, 1, v83, 0.0, v89);
  v91 = sub_10004FF60((uint64_t)v35, &qword_1011C6CE8);
  v92 = v249;
  v93 = static Material.ultraThin.getter(v91);
  LOBYTE(v86) = static Edge.Set.all.getter(v93);
  v95 = (uint64_t)v242;
  v94 = v243;
  v96 = &v242[*(int *)(v243 + 36)];
  v98 = v258;
  v97 = v259;
  (*(void (**)(char *, char *, uint64_t))(v258 + 16))(v96, v92, v259);
  v96[*(int *)(sub_100007E8C(&qword_1011B0B88) + 36)] = v86;
  v100 = v244;
  v99 = v245;
  (*(void (**)(uint64_t, char *, uint64_t))(v244 + 16))(v95, v90, v245);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v92, v97);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v90, v99);
  v101 = *(_QWORD *)v85;
  v102 = *((_QWORD *)v85 + 1);
  LOBYTE(v85) = *((_BYTE *)v85 + 16);
  v103 = sub_100756D64();
  v104 = v246;
  View.corner(_:)(v101, v102, (char)v85, v94, v103);
  sub_10004FF60(v95, &qword_1011C6CF8);
  v106 = v263;
  v105 = (int *)v264;
  v107 = sub_100007E8C(qword_1011C9550);
  v108 = ScaledMetric.wrappedValue.getter(&v286, v107);
  v109 = v286;
  v110 = static Alignment.center.getter(v108);
  _FrameLayout.init(width:height:alignment:)(v275, 0, 1, v109, 0, v110, v111);
  v113 = v247;
  v112 = v248;
  v114 = v261;
  (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v261, v104, v248);
  v115 = &v114[*(int *)(v265 + 36)];
  v116 = v275[1];
  *(_OWORD *)v115 = v275[0];
  *((_OWORD *)v115 + 1) = v116;
  *((_OWORD *)v115 + 2) = v275[2];
  (*(void (**)(char *, uint64_t))(v113 + 8))(v104, v112);
  v117 = v260;
  v118 = v240;
  State.wrappedValue.getter(v260, v240);
  v119 = (uint64_t)v262;
  sub_10004A160((uint64_t)v117, (uint64_t)v262, (uint64_t *)&unk_1011A20D0);
  sub_10005B748((uint64_t)v117, type metadata accessor for Showcase);
  v120 = type metadata accessor for GenericMusicItem(0);
  v121 = *(_QWORD *)(v120 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120) == 1)
  {
    v122 = sub_10004FF60(v119, (uint64_t *)&unk_1011A20D0);
    v123 = 0;
    v124 = 0;
    v125 = 0;
    v126 = 0;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    v132 = 0;
LABEL_15:
    v259 = v131;
    v260 = v130;
    v247 = v123;
    v248 = v124;
    v258 = v132;
    v249 = v125;
    v262 = &v226;
    *(_QWORD *)&v286 = v123;
    *((_QWORD *)&v286 + 1) = v124;
    *(_QWORD *)&v287 = v125;
    *((_QWORD *)&v287 + 1) = v126;
    *(_QWORD *)&v288 = v127;
    *((_QWORD *)&v288 + 1) = v128;
    v289 = v129;
    *(_QWORD *)&v290 = v130;
    *((_QWORD *)&v290 + 1) = v131;
    v291 = v132;
    __chkstk_darwin(v122);
    v186 = v185;
    v188 = v187;
    v189 = (_QWORD *)sub_100007E8C(&qword_1011AC3B0);
    v256 = v189;
    v190 = sub_100756E40();
    v191 = sub_1000E3EE4();
    v192 = (_QWORD *)sub_100314AC0();
    v222 = v189;
    v193 = v253;
    v194 = (uint64_t)v261;
    View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)&v286, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100756E38, (uint64_t)&v222, (uint64_t)UIScreen.Dimensions.size.getter, 0, v253, v265, (uint64_t)&type metadata for ActionType, v222, v190, v191, v192);
    sub_1000E4164(v247, v248, (uint64_t)v249, v126, v127, v186, v188, (uint64_t)v260, v259, v258);
    sub_10004FF60(v194, &qword_1011C6D08);
    v195 = (uint64_t *)(v263 + *(int *)(v264 + 32));
    v196 = *v195;
    v197 = v195[1];
    v198 = *((unsigned __int8 *)v195 + 16);
    v199 = sub_100007E8C(&qword_1011A03A8);
    v200 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    v201 = StateObject.wrappedValue.getter(v196, v197, v198, v199, v200);
    v271[0] = v265;
    v271[1] = &type metadata for ActionType;
    v271[2] = v256;
    v272 = v190;
    v273 = (_UNKNOWN **)v191;
    v274 = v192;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v271, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v203 = v250;
    v204 = v255;
    View.shareSheetPresenting(_:)(v201, v255, OpaqueTypeConformance2);
    v205 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v254 + 8))(v193, v204, v205);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v251 + 32))(v257, v203, v252);
  }
  v133 = v118;
  v247 = v121;
  v134 = v227;
  State.wrappedValue.getter(v227, v133);
  v135 = v228;
  sub_10004A160((uint64_t)v134, v228, (uint64_t *)&unk_1011A20D0);
  sub_10005B748((uint64_t)v134, type metadata accessor for Showcase);
  v136 = (char *)Optional<A>.playbackIntent.getter();
  sub_10004FF60(v135, (uint64_t *)&unk_1011A20D0);
  v137 = v106 + v105[5];
  v138 = *(id *)v137;
  v139 = *(_BYTE *)(v137 + 8);
  sub_1000A4100(*(id *)v137, v139);
  v140 = (char *)sub_100824044(v138, v139);
  sub_1000A4224(v138, v139);
  v141 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v256, 1, 1, v141);
  v142 = (uint64_t *)(v106 + v105[6]);
  v143 = *v142;
  if (*v142)
  {
    v246 = v140;
    v248 = v120;
    v272 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v273 = &protocol witness table for <A> PresentedViewState<A>;
    v271[0] = v143;
    v144 = (uint64_t *)(v106 + v105[7]);
    v145 = *v144;
    if (*v144)
    {
      v270[3] = type metadata accessor for NoticePresenter(0);
      v270[4] = &protocol witness table for NoticePresenter;
      v270[0] = v145;
      v289 = 0;
      v287 = 0u;
      v288 = 0u;
      v286 = 0u;
      v290 = xmmword_100EA93A0;
      v146 = v106 + v105[8];
      v147 = *(_QWORD *)v146;
      v148 = *(_QWORD *)(v146 + 8);
      v149 = *(unsigned __int8 *)(v146 + 16);
      swift_retain();
      swift_retain();
      v150 = sub_100007E8C(&qword_1011A03A8);
      v151 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v152 = StateObject.wrappedValue.getter(v147, v148, v149, v150, v151);
      v269[3] = v150;
      v269[4] = &protocol witness table for <A> PresentedViewState<A>;
      v269[0] = v152;
      v153 = (uint64_t *)(v106 + v105[9]);
      v154 = *v153;
      if (*v153)
      {
        v249 = v136;
        v155 = type metadata accessor for NavigationPusher();
        v268[3] = v155;
        v268[4] = &off_1010D58B0;
        v267 = 0;
        v268[0] = v154;
        memset(v266, 0, sizeof(v266));
        v156 = (_QWORD *)(v106 + v105[10]);
        if (*v156)
        {
          v157 = (_QWORD *)(v106 + v105[11]);
          if (*v157)
          {
            v158 = v106;
            __chkstk_darwin(v155);
            v159 = sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100ECDFF8);
            __chkstk_darwin(KeyPath);
            v224 = &type metadata for TabIdentifier;
            v225 = v159;
            v161 = swift_getKeyPath(&unk_100ECE030);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(&v276, v162, KeyPath, v161);
            swift_release();
            swift_release();
            swift_release();
            v163 = v276;
            v164 = v264;
            v165 = v158 + *(int *)(v264 + 48);
            v166 = *(_QWORD *)v165;
            v167 = *(_QWORD *)(v165 + 8);
            LOBYTE(v161) = *(_BYTE *)(v165 + 16);
            sub_1000A410C(*(_QWORD *)v165, v167, v161);
            sub_100824224(v166, v167, v161);
            sub_1000A4230(v166, v167, v161);
            sub_10066D160(v163);
            v260 = v168;
            v170 = v169;
            swift_release();
            swift_bridgeObjectRelease();
            v171 = v158 + *(int *)(v164 + 52);
            v172 = *(_QWORD *)v171;
            v173 = *(_QWORD *)(v171 + 8);
            LOBYTE(v167) = *(_BYTE *)(v171 + 16);
            sub_1000A411C(*(_QWORD *)v171, v173, v167);
            sub_100824400(v172, v173, v167, &v276);
            sub_1000A4240(v172, v173, v167);
            v174 = v276;
            v175 = v277;
            v176 = v229;
            sub_10005B704(v158, v229, type metadata accessor for ShowcaseView);
            if (v175 >> 60 != 15)
            {
              v178 = v249;
              v179 = v174;
              goto LABEL_14;
            }
            v177 = (_QWORD *)(v176 + *(int *)(v164 + 40));
            v178 = v249;
            if (*v177)
            {
              swift_retain();
              v179 = sub_10066D7A8();
              v175 = v180;
              swift_release();
LABEL_14:
              sub_10005B748(v176, type metadata accessor for ShowcaseView);
              v181 = type metadata accessor for MusicLibrary(0);
              v182 = static MusicLibrary.shared.getter(v181);
              v223 = v170;
              v183 = v246;
              v184 = (uint64_t)v256;
              GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v178, v246, v182, (uint64_t)v256, (uint64_t)v271, (unint64_t)v270, (unint64_t)&v286, (unint64_t)v269, &v276, (uint64_t)v268, (unint64_t)v266, (uint64_t)v260, v223, v179, v175);
              v123 = v276;
              v124 = v277;
              v125 = v278;
              v244 = v280;
              v245 = v279;
              v242 = v282;
              v243 = v281;
              v259 = v284;
              v260 = v283;
              v258 = v285;
              swift_release();
              sub_1000822B4(v179, v175);

              swift_bridgeObjectRelease();
              sub_10004FF60((uint64_t)v266, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v286, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v184, (uint64_t *)&unk_1011A20C0);
              sub_10004FF60((uint64_t)v268, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v269);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v270);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v271);
              v122 = (*(uint64_t (**)(uint64_t *, uint64_t))(v247 + 8))(v262, v248);
              v132 = v258;
              v131 = v259;
              v130 = v260;
              v129 = v242;
              v128 = v243;
              v127 = v244;
              v126 = v245;
              goto LABEL_15;
            }
          }
          else
          {
            v218 = v157[1];
            v219 = type metadata accessor for TabSelectionManager(0);
            v220 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain();
            swift_retain();
            EnvironmentObject.error()(0, v218, v219, v220);
            __break(1u);
          }
          v207 = v177[1];
          goto LABEL_22;
        }
LABEL_19:
        v207 = v156[1];
        swift_retain();
LABEL_22:
        v208 = (uint64_t *)&unk_10119CBE0;
        v209 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v210 = &qword_1011C5B90;
        v211 = &unk_100EC0A50;
        goto LABEL_23;
      }
    }
    else
    {
      v212 = v144[1];
      v213 = type metadata accessor for NoticePresenter(0);
      v214 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain();
      EnvironmentObject.error()(0, v212, v213, v214);
      __break(1u);
    }
    v215 = v153[1];
    v216 = type metadata accessor for NavigationPusher();
    v217 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v215, v216, v217);
    __break(1u);
    goto LABEL_19;
  }
  v207 = v142[1];
  v208 = (uint64_t *)&unk_1011B4E40;
  v209 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v210 = (unint64_t *)&unk_10119CC10;
  v211 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_23:
  v221 = sub_100049F28(v210, v208, (uint64_t)v211);
  result = EnvironmentObject.error()(0, v207, v209, v221);
  __break(1u);
  return result;
}

uint64_t sub_10075591C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for ShowcaseView.TextContentView(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v18 - v6);
  v8 = type metadata accessor for ShowcaseView.ArtworkView(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v18 - v12);
  v14 = sub_100007E8C(&qword_1011C6B58);
  State.wrappedValue.getter(v13, v14);
  v19 = 0x4061000000000000;
  v15 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v19, &type metadata for CGFloat, v15);
  State.wrappedValue.getter(v7, v14);
  sub_10005B704((uint64_t)v13, (uint64_t)v10, type metadata accessor for ShowcaseView.ArtworkView);
  sub_10005B704((uint64_t)v7, (uint64_t)v4, type metadata accessor for ShowcaseView.TextContentView);
  sub_10005B704((uint64_t)v10, a1, type metadata accessor for ShowcaseView.ArtworkView);
  v16 = sub_100007E8C(&qword_1011C6D60);
  sub_10005B704((uint64_t)v4, a1 + *(int *)(v16 + 48), type metadata accessor for ShowcaseView.TextContentView);
  sub_10005B748((uint64_t)v7, type metadata accessor for ShowcaseView.TextContentView);
  sub_10005B748((uint64_t)v13, type metadata accessor for ShowcaseView.ArtworkView);
  sub_10005B748((uint64_t)v4, type metadata accessor for ShowcaseView.TextContentView);
  return sub_10005B748((uint64_t)v10, type metadata accessor for ShowcaseView.ArtworkView);
}

uint64_t sub_100755AE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v1 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ContextualPreview(0);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Showcase(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for GenericMusicItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v26 - v18;
  v20 = sub_100007E8C(&qword_1011C6B58);
  State.wrappedValue.getter(v12, v20);
  sub_10004A160((uint64_t)v12, (uint64_t)v9, (uint64_t *)&unk_1011A20D0);
  sub_10005B748((uint64_t)v12, type metadata accessor for Showcase);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
  {
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A20D0);
    v21 = 1;
    v22 = v29;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v9, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
    sub_1001CB080(v3);
    v23 = *(void (**)(char *, uint64_t))(v14 + 8);
    v23(v16, v13);
    sub_10005B6C0((uint64_t)v3, (uint64_t)v6, type metadata accessor for ContextualPreview.Data);
    v23(v19, v13);
    v24 = v29;
    sub_10005B6C0((uint64_t)v6, v29, type metadata accessor for ContextualPreview);
    v21 = 0;
    v22 = v24;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v22, v21, 1, v28);
}

uint64_t sub_100755D60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t OpaqueTypeConformance2;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char *v46;
  char v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77[7];

  v74 = a1;
  v63 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v3 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v58 - v8;
  v65 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v61 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v66 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  __chkstk_darwin(v12);
  v64 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v71 = *(_QWORD *)(v14 - 8);
  v72 = v14;
  __chkstk_darwin(v14);
  v70 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v68);
  v69 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShowcaseView.ArtworkView(0);
  v17 = sub_100007E8C(qword_1011C9550);
  ScaledMetric.wrappedValue.getter(v77, v17);
  v18 = *(double *)v77;
  sub_10004A160(v1, (uint64_t)v9, (uint64_t *)&unk_1011A20D0);
  v19 = type metadata accessor for GenericMusicItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v21 = v60(v9, 1, v19);
  v73 = v6;
  v58 = v20;
  if (v21 == 1)
  {
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A20D0);
    v22 = 1.0;
  }
  else
  {
    GenericMusicItem.aspectRatio.getter();
    v22 = v23;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  }
  v24 = type metadata accessor for Showcase(0);
  v25 = *(int *)(v24 + 36);
  v26 = v1 + *(int *)(v24 + 32);
  v59 = v1;
  v27 = v1 + v25;
  ScaledMetric.wrappedValue.getter(v77, v17);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(COERCE__INT64(v18 * v22), 0, v77[0], 0, 0, 1, 2, (uint64_t)v77);
  v28 = v62;
  v29 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v3, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v63);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v26, v27, (uint64_t)v77, (uint64_t)v3, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v3, v29);
  v30 = Corner.large.unsafeMutableAddressor();
  v31 = *v30;
  v32 = v30[1];
  v33 = *((_BYTE *)v30 + 16);
  v34 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v35 = sub_1000E4264();
  v75 = v34;
  v76 = v35;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v75, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v37 = v64;
  v38 = v65;
  View.corner(_:)(v31, v32, v33, v65, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v11, v38);
  v39 = Border.artwork.unsafeMutableAddressor();
  v40 = *v39;
  v41 = *((double *)v39 + 1);
  v42 = *v30;
  v43 = v30[1];
  LOBYTE(v30) = *((_BYTE *)v30 + 16);
  v44 = *((_BYTE *)v39 + 16);
  swift_retain();
  v75 = v38;
  v76 = OpaqueTypeConformance2;
  v45 = swift_getOpaqueTypeConformance2(&v75, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v46 = v70;
  v47 = (char)v30;
  v48 = v67;
  View.border(_:corner:)(v40, v44, v42, v43, v47, v67, v45, v41);
  v49 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v37, v48, v49);
  v50 = (uint64_t)v73;
  sub_10004A160(v59, (uint64_t)v73, (uint64_t *)&unk_1011A20D0);
  if (v60((char *)v50, 1, v19) == 1)
  {
    sub_10004FF60(v50, (uint64_t *)&unk_1011A20D0);
    v51 = 1.0;
  }
  else
  {
    GenericMusicItem.aspectRatio.getter();
    v51 = v52;
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v50, v19);
  }
  v54 = v71;
  v53 = v72;
  v55 = (uint64_t)v69;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v69, v46, v72);
  v56 = v55 + *(int *)(v68 + 36);
  *(double *)v56 = v51;
  *(_WORD *)(v56 + 8) = 0;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v53);
  return sub_100065228(v55, v74, &qword_1011A0628);
}

uint64_t sub_100756280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  double v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  unint64_t v94;
  Swift::Int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v126 = a1;
  v124 = a2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A4380);
  __chkstk_darwin(v3);
  v122 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100007E8C(&qword_1011A0F48);
  v128 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v6 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_100007E8C(&qword_1011B0330);
  __chkstk_darwin(v121);
  v120 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100007E8C(&qword_1011B0338);
  __chkstk_darwin(v127);
  v123 = (uint64_t)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_100007E8C(&qword_1011B0340);
  __chkstk_darwin(v129);
  v132 = (uint64_t)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v131 = (uint64_t)&v119 - v11;
  v125 = type metadata accessor for Showcase(0);
  v12 = (uint64_t *)(a1 + *(int *)(v125 + 20));
  v13 = *v12;
  v14 = v12[1];
  v15 = sub_1004872C4((uint64_t)&off_1010AD3E0);
  swift_bridgeObjectRetain();
  v16 = Text.init(optional:options:)(v13, v14, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = static Font.footnote.getter(v16);
  KeyPath = swift_getKeyPath(&unk_100ECE110);
  v133 = v16;
  v134 = v18;
  v135 = v20;
  v136 = v22;
  v137 = KeyPath;
  v138 = v23;
  v25 = static Font.Weight.semibold.getter(KeyPath);
  v26 = sub_100007E8C((uint64_t *)&unk_1011B57E0);
  v27 = sub_1000F59AC();
  View.fontWeight(_:)(*(_QWORD *)&v25, 0, v26, v27);
  v28 = v20;
  v29 = v125;
  sub_1000E450C(v16, v18, v28, v22);
  swift_release();
  swift_release();
  v30 = enum case for Text.Case.uppercase(_:);
  v31 = type metadata accessor for Text.Case(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = (uint64_t)v122;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 104))(v122, v30, v31);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v33, 0, 1, v31);
  v34 = swift_getKeyPath(&unk_100ECE140);
  v35 = (uint64_t)v120;
  v36 = (uint64_t *)&v120[*(int *)(v121 + 36)];
  v37 = sub_100007E8C((uint64_t *)&unk_1011C4EE0);
  sub_10004A160(v33, (uint64_t)v36 + *(int *)(v37 + 28), (uint64_t *)&unk_1011A4380);
  *v36 = v34;
  v38 = v128;
  v39 = v130;
  (*(void (**)(uint64_t, char *, uint64_t))(v128 + 16))(v35, v6, v130);
  sub_10004FF60(v33, (uint64_t *)&unk_1011A4380);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
  v40 = swift_getKeyPath(&unk_100ECE170);
  v41 = v123;
  sub_10004A160(v35, v123, &qword_1011B0330);
  v42 = v41 + *(int *)(v127 + 36);
  *(_QWORD *)v42 = v40;
  *(_QWORD *)(v42 + 8) = 1;
  v43 = v126;
  *(_BYTE *)(v42 + 16) = 0;
  v44 = sub_10004FF60(v35, &qword_1011B0330);
  LODWORD(v40) = static HierarchicalShapeStyle.secondary.getter(v44);
  v45 = v132;
  sub_10004A160(v41, v132, &qword_1011B0338);
  *(_DWORD *)(v45 + *(int *)(v129 + 36)) = v40;
  sub_10004FF60(v41, &qword_1011B0338);
  sub_100065228(v45, v131, &qword_1011B0340);
  v46 = v29;
  v47 = (uint64_t *)(v43 + *(int *)(v29 + 24));
  v48 = v47[1];
  if (!v48)
    goto LABEL_6;
  v49 = *v47;
  v50 = HIBYTE(v48) & 0xF;
  if ((v48 & 0x2000000000000000) == 0)
    v50 = v49 & 0xFFFFFFFFFFFFLL;
  if (v50)
  {
    v133 = v49;
    v134 = v48;
    v51 = sub_100055B68();
    swift_bridgeObjectRetain();
    v52 = Text.init<A>(_:)(&v133, &type metadata for String, v51);
    v54 = v53;
    v56 = v55;
    v58 = v57 & 1;
    v59 = TextBadge.view.getter(*(_BYTE *)(v43 + *(int *)(v29 + 40)));
    v61 = v60;
    v63 = v62 & 1;
    v130 = static Text.+ infix(_:_:)(v52, v54, v58, v56, v59, v60, v63, v64);
    v66 = v65;
    v68 = v67;
    v127 = v67;
    LODWORD(v129) = v69 & 1;
    sub_100055BAC(v59, v61, v63);
    swift_bridgeObjectRelease();
    sub_100055BAC(v52, v54, v58);
    swift_bridgeObjectRelease();
    v70 = TextBadge.view.getter(*(_BYTE *)(v126 + *(int *)(v125 + 44)));
    v72 = v71;
    v74 = v73 & 1;
    v75 = v130;
    LOBYTE(v56) = v129;
    v77 = static Text.+ infix(_:_:)(v130, v66, v129, v68, v70, v71, v74, v76);
    v79 = v78;
    v128 = v80;
    v82 = v81 & 1;
    sub_100055BAC(v70, v72, v74);
    swift_bridgeObjectRelease();
    v83 = v75;
    v84 = v66;
    v46 = v125;
    v43 = v126;
    sub_100055BAC(v83, v84, v56);
    swift_bridgeObjectRelease();
    v86 = static Font.body.getter(v85);
    v120 = (char *)Text.font(_:)(v86, v77, v79, v82, v128);
    v119 = v87;
    LOBYTE(v72) = v88;
    v130 = v89;
    swift_release();
    v129 = v72 & 1;
    sub_100055BAC(v77, v79, v82);
    swift_bridgeObjectRelease();
    v128 = swift_getKeyPath(&unk_100ECE170);
    v91 = static HierarchicalShapeStyle.primary.getter(v90) << 32;
    v127 = 2;
  }
  else
  {
LABEL_6:
    v120 = 0;
    v119 = 0;
    v129 = 0;
    v130 = 0;
    v127 = 0;
    v128 = 0;
    v91 = 0;
  }
  v92 = (uint64_t *)(v43 + *(int *)(v46 + 28));
  v93 = *v92;
  v94 = v92[1];
  v95 = sub_1004872C4((uint64_t)&off_1010AD408);
  swift_bridgeObjectRetain();
  v96 = Text.init(optional:options:)(v93, v94, v95);
  v125 = v98;
  v126 = v97;
  v100 = v99;
  v123 = static Font.subheadline.getter(v96);
  v101 = swift_getKeyPath(&unk_100ECE110);
  v102 = swift_getKeyPath(&unk_100ECE170);
  LODWORD(v122) = static HierarchicalShapeStyle.secondary.getter(v102);
  v103 = v132;
  sub_10004A160(v131, v132, &qword_1011B0340);
  v104 = v124;
  sub_10004A160(v103, v124, &qword_1011B0340);
  v105 = sub_100007E8C(&qword_1011C5618);
  v106 = (_QWORD *)(v104 + *(int *)(v105 + 48));
  v107 = (uint64_t)v120;
  v108 = v119;
  *v106 = v120;
  v106[1] = v108;
  v109 = v129;
  v106[2] = v129;
  v110 = v109;
  v129 = v109;
  v111 = v130;
  v106[3] = v130;
  v112 = v111;
  v130 = v111;
  v113 = v128;
  v106[4] = v128;
  v128 = v113;
  v115 = v126;
  v114 = v127;
  v106[5] = v127;
  v106[6] = v91;
  v127 = v114;
  v116 = v104 + *(int *)(v105 + 64);
  *(_QWORD *)v116 = v96;
  *(_QWORD *)(v116 + 8) = v115;
  LOBYTE(v103) = v125;
  *(_QWORD *)(v116 + 16) = v125;
  *(_QWORD *)(v116 + 24) = v100;
  v121 = v101;
  v117 = v123;
  *(_QWORD *)(v116 + 32) = v101;
  *(_QWORD *)(v116 + 40) = v117;
  *(_QWORD *)(v116 + 48) = v102;
  *(_QWORD *)(v116 + 56) = 1;
  *(_BYTE *)(v116 + 64) = 0;
  *(_DWORD *)(v116 + 68) = (_DWORD)v122;
  sub_1003DFEAC(v107, v108, v110, v112);
  sub_1000E4440(v96, v115, v103, v100);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10004FF60(v131, &qword_1011B0340);
  sub_1000E450C(v96, v115, v103, v100);
  swift_release();
  swift_release();
  swift_release();
  sub_1003DFEE8(v107, v108, v129, v130);
  return sub_10004FF60(v132, &qword_1011B0340);
}

uint64_t sub_100756A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011A2E20);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A2E28);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v10);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v11 = sub_100007E8C(&qword_1011C5608);
  v12 = sub_100756280(v2, (uint64_t)&v6[*(int *)(v11 + 44)]);
  v13 = static Alignment.leading.getter(v12);
  sub_10014BCC0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v9, 0.0, 1, 0.0, 1, v13, v14);
  sub_10004FF60((uint64_t)v6, &qword_1011A2E20);
  sub_10004A160((uint64_t)v9, a1, &qword_1011A2E28);
  *(_WORD *)(a1 + *(int *)(sub_100007E8C(&qword_1011C5600) + 36)) = 256;
  return sub_10004FF60((uint64_t)v9, &qword_1011A2E28);
}

unint64_t sub_100756C10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C6D28;
  if (!qword_1011C6D28)
  {
    v1 = sub_100044B54(&qword_1011AC440);
    sub_100049F28(&qword_1011C6D30, &qword_1011AC438, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6D28);
  }
  return result;
}

uint64_t sub_100756CAC()
{
  return sub_10005610C(&qword_1011C6D40, &qword_1011C6CE0, (void (*)(void))sub_100756CD0);
}

unint64_t sub_100756CD0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C6D48;
  if (!qword_1011C6D48)
  {
    v1 = sub_100044B54(&qword_1011C6CD8);
    v2[0] = sub_100044B54(&qword_1011AC440);
    v2[1] = sub_100756C10();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6D48);
  }
  return result;
}

unint64_t sub_100756D64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C6D50;
  if (!qword_1011C6D50)
  {
    v1 = sub_100044B54(&qword_1011C6CF8);
    v2[0] = sub_100044B54(&qword_1011C6CE8);
    v2[1] = sub_10005610C(&qword_1011C6D38, &qword_1011C6CE8, (void (*)(void))sub_100756CAC);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    sub_100049F28(&qword_1011B0B98, &qword_1011B0B88, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6D50);
  }
  return result;
}

uint64_t sub_100756E38@<X0>(uint64_t a1@<X8>)
{
  return sub_100755AE8(a1);
}

unint64_t sub_100756E40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C6D58;
  if (!qword_1011C6D58)
  {
    v1 = sub_100044B54(&qword_1011C6D08);
    v2[0] = sub_100044B54(&qword_1011C6CF8);
    v2[1] = sub_100756D64();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C6D58);
  }
  return result;
}

uint64_t sub_100756EDC()
{
  return 16;
}

__n128 sub_100756EE8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for ShowcaseView.TextContentView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C6DC0, (uint64_t)&nominal type descriptor for ShowcaseView.TextContentView);
}

uint64_t type metadata accessor for ShowcaseView.ArtworkView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C6E50, (uint64_t)&nominal type descriptor for ShowcaseView.ArtworkView);
}

uint64_t *sub_100756F1C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v60;
  char *__dst;
  unsigned int (*v62)(uint64_t *, uint64_t, uint64_t);
  uint64_t v63;

  v4 = type metadata accessor for Showcase(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v62 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v63 = v7;
    v60 = v8;
    if (v62(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = v6[5];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v6[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v6[7];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v6[8];
    __dst = (char *)a1 + v23;
    v24 = (char *)a2 + v23;
    v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(__dst, v24, v29);
      v30 = *(int *)(v25 + 20);
      v31 = &__dst[v30];
      v32 = &v24[v30];
      v33 = type metadata accessor for Artwork.CropStyle(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    v36 = v6[9];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
    {
      v41 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
      {
        v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
    }
    *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
    *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
    v45 = v6[12];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = *(void **)((char *)a2 + v45);
    *(uint64_t *)((char *)a1 + v45) = (uint64_t)v48;
    v49 = (int *)type metadata accessor for SegueContext(0);
    v50 = v49[5];
    v51 = &v46[v50];
    v52 = &v47[v50];
    v53 = v48;
    if (v62((uint64_t *)v52, 1, v63))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v51, v52, v63);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v51, 0, 1, v63);
    }
    v46[v49[6]] = v47[v49[6]];
    v55 = v49[7];
    v56 = &v46[v55];
    v57 = &v47[v55];
    if (*(_QWORD *)v57)
    {
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
  }
  return a1;
}

double sub_100757368(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  char *v18;
  double result;

  v2 = type metadata accessor for GenericMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (!v4(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v5 = (int *)type metadata accessor for Showcase(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + v5[8];
  v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    v9 = v6 + *(int *)(v7 + 20);
    v10 = type metadata accessor for Artwork.CropStyle(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  v12 = a1 + v5[9];
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 10, v13))
  {
    v14 = type metadata accessor for Playlist.Variant(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  }
  v16 = (id *)(a1 + v5[12]);

  v17 = type metadata accessor for SegueContext(0);
  v18 = (char *)v16 + *(int *)(v17 + 20);
  if (!v4((uint64_t)v18, 1, v2))
    (*(void (**)(char *, uint64_t))(v3 + 8))(v18, v2);
  if (*(id *)((char *)v16 + *(int *)(v17 + 28)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_100757578(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void *v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v62 = v4;
  v59 = v5;
  if (v61(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = (int *)type metadata accessor for Showcase(0);
  v8 = v7[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *((_QWORD *)v9 + 1) = v11;
  v12 = v7[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = v7[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = v7[8];
  v60 = a1;
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for ArtworkImage.ViewModel(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25(v22, 1, v23))
  {
    v26 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    v27 = v60;
  }
  else
  {
    v28 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v21, v22, v28);
    v29 = *(int *)(v23 + 20);
    v30 = &v21[v29];
    v31 = &v22[v29];
    v32 = type metadata accessor for Artwork.CropStyle(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v27 = v60;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v35 = v7[9];
  v36 = &v27[v35];
  v37 = &a2[v35];
  v38 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 10, v38))
  {
    v40 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v41 = type metadata accessor for Playlist.Variant(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v37, 1, v41))
    {
      v43 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v36, v37, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v36, 0, 1, v41);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 10, v38);
  }
  v27[v7[10]] = a2[v7[10]];
  v27[v7[11]] = a2[v7[11]];
  v44 = v7[12];
  v45 = &v27[v44];
  v46 = &a2[v44];
  v47 = *(void **)&a2[v44];
  *(_QWORD *)&v27[v44] = v47;
  v48 = (int *)type metadata accessor for SegueContext(0);
  v49 = v48[5];
  v50 = &v45[v49];
  v51 = &v46[v49];
  v52 = v47;
  if (v61(v51, 1, v62))
  {
    v53 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v50, v51, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v50, 0, 1, v62);
  }
  v45[v48[6]] = v46[v48[6]];
  v54 = v48[7];
  v55 = &v45[v54];
  v56 = &v46[v54];
  if (*(_QWORD *)v56)
  {
    v57 = *((_QWORD *)v56 + 1);
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *((_QWORD *)v55 + 1) = v57;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v55 = *(_OWORD *)v56;
  }
  return v27;
}

char *sub_10075799C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  size_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  void **v66;
  char *v67;
  void *v68;
  void *v69;
  id v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *__dst;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  v87 = v5;
  v88 = v6;
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for Showcase(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v10[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v10[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v10[8];
  v21 = (uint64_t)&a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for ArtworkImage.ViewModel(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25((uint64_t)v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      v37 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v21, v22, v37);
      v38 = *(int *)(v23 + 20);
      v39 = (void *)(v21 + v38);
      v40 = &v22[v38];
      v41 = type metadata accessor for Artwork.CropStyle(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
      v44 = v43(v39, 1, v41);
      v45 = v43(v40, 1, v41);
      if (v44)
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v42 + 24))(v39, v40, v41);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v42 + 8))(v39, v41);
      }
      v34 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v35 = v39;
      v36 = v40;
LABEL_14:
      memcpy(v35, v36, v34);
      goto LABEL_21;
    }
    sub_10005B748(v21, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v34 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v35 = (void *)v21;
    v36 = v22;
    goto LABEL_14;
  }
  if (v27)
    goto LABEL_13;
  v28 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v21, v22, v28);
  v29 = *(int *)(v23 + 20);
  __dst = (void *)(v21 + v29);
  v30 = &v22[v29];
  v31 = type metadata accessor for Artwork.CropStyle(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v32 + 16))(__dst, v30, v31);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_21:
  v46 = v10[9];
  v47 = &a1[v46];
  v48 = &a2[v46];
  v49 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
  v52 = v51(v47, 10, v49);
  v53 = v51(v48, 10, v49);
  if (!v52)
  {
    if (!v53)
    {
      v59 = type metadata accessor for Playlist.Variant(0);
      v60 = *(_QWORD *)(v59 - 8);
      v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
      v62 = v61(v47, 1, v59);
      v63 = v61(v48, 1, v59);
      if (v62)
      {
        v58 = v88;
        if (!v63)
        {
          (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v47, v48, v59);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v47, 0, 1, v59);
          goto LABEL_40;
        }
      }
      else
      {
        v58 = v88;
        if (!v63)
        {
          (*(void (**)(char *, char *, uint64_t))(v60 + 24))(v47, v48, v59);
          goto LABEL_40;
        }
        (*(void (**)(char *, uint64_t))(v60 + 8))(v47, v59);
      }
      v64 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      goto LABEL_40;
    }
    sub_10004FF60((uint64_t)v47, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v57 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    v58 = v88;
    goto LABEL_40;
  }
  if (v53)
    goto LABEL_27;
  v54 = type metadata accessor for Playlist.Variant(0);
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v48, 1, v54))
  {
    v56 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v47, v48, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v47, 0, 1, v54);
  }
  v58 = v88;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 10, v49);
LABEL_40:
  a1[v10[10]] = a2[v10[10]];
  a1[v10[11]] = a2[v10[11]];
  v65 = v10[12];
  v66 = (void **)&a1[v65];
  v67 = &a2[v65];
  v68 = *(void **)&a2[v65];
  v69 = *v66;
  *v66 = v68;
  v70 = v68;

  v71 = (int *)type metadata accessor for SegueContext(0);
  v72 = v71[5];
  v73 = (char *)v66 + v72;
  v74 = &v67[v72];
  v75 = v58((char *)v66 + v72, 1, v4);
  v76 = v58(v74, 1, v4);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v73, v74, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v73, 0, 1, v4);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v87 + 8))(v73, v4);
LABEL_45:
    v77 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v87 + 24))(v73, v74, v4);
LABEL_46:
  *((_BYTE *)v66 + v71[6]) = v67[v71[6]];
  v78 = v71[7];
  v79 = (void **)((char *)v66 + v78);
  v80 = &v67[v78];
  v81 = *(uint64_t *)((char *)v66 + v78);
  v82 = *(_QWORD *)&v67[v78];
  if (!v81)
  {
    if (v82)
    {
      v84 = *((_QWORD *)v80 + 1);
      *v79 = v82;
      v79[1] = v84;
      swift_retain();
      return a1;
    }
LABEL_52:
    *(_OWORD *)v79 = *(_OWORD *)v80;
    return a1;
  }
  if (!v82)
  {
    swift_release();
    goto LABEL_52;
  }
  v83 = *((_QWORD *)v80 + 1);
  *v79 = v82;
  v79[1] = v83;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1007580A8(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(char *, uint64_t, uint64_t);
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *__dst;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  unsigned int (*v47)(char *, uint64_t, uint64_t);

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v45 = v5;
  if (v6(a2, 1, v4))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v8 = (int *)type metadata accessor for Showcase(0);
  *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
  *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
  *(_OWORD *)&a1[v8[7]] = *(_OWORD *)&a2[v8[7]];
  v9 = v8[8];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v46 = v6;
    v15 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
    v16 = *(int *)(v12 + 20);
    __dst = &v10[v16];
    v17 = &v11[v16];
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    v6 = v46;
  }
  v21 = v8[9];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 10, v24))
  {
    v26 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v47 = v6;
    v27 = type metadata accessor for Playlist.Variant(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v23, 1, v27))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v22, v23, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v22, 0, 1, v27);
    }
    v6 = v47;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 10, v24);
  }
  a1[v8[10]] = a2[v8[10]];
  a1[v8[11]] = a2[v8[11]];
  v30 = v8[12];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  v33 = (int *)type metadata accessor for SegueContext(0);
  v34 = v33[5];
  v35 = &v31[v34];
  v36 = &v32[v34];
  if (v6(&v32[v34], 1, v4))
  {
    v37 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v35, v36, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v35, 0, 1, v4);
  }
  v31[v33[6]] = v32[v33[6]];
  v38 = v33[7];
  v39 = &v31[v38];
  v40 = &v32[v38];
  v41 = *(_QWORD *)v40;
  if (*(_QWORD *)v40)
  {
    v42 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = v41;
    *((_QWORD *)v39 + 1) = v42;
  }
  else
  {
    *(_OWORD *)v39 = *(_OWORD *)v40;
  }
  return a1;
}

char *sub_100758490(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  size_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *__dst;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, uint64_t);

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  v91 = v5;
  v92 = v6;
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for Showcase(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = v10[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = v10[8];
  v27 = (uint64_t)&a1[v26];
  v28 = &a2[v26];
  v29 = type metadata accessor for ArtworkImage.ViewModel(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31((uint64_t)v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      v43 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v27, v28, v43);
      v44 = *(int *)(v29 + 20);
      v45 = (void *)(v27 + v44);
      v46 = &v28[v44];
      v47 = type metadata accessor for Artwork.CropStyle(0);
      v48 = *(_QWORD *)(v47 - 8);
      v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
      v50 = v49(v45, 1, v47);
      v51 = v49(v46, 1, v47);
      if (v50)
      {
        if (!v51)
        {
          (*(void (**)(void *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v51)
        {
          (*(void (**)(void *, char *, uint64_t))(v48 + 40))(v45, v46, v47);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v48 + 8))(v45, v47);
      }
      v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v41 = v45;
      v42 = v46;
LABEL_14:
      memcpy(v41, v42, v40);
      goto LABEL_21;
    }
    sub_10005B748(v27, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v41 = (void *)v27;
    v42 = v28;
    goto LABEL_14;
  }
  if (v33)
    goto LABEL_13;
  v34 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v27, v28, v34);
  v35 = *(int *)(v29 + 20);
  __dst = (void *)(v27 + v35);
  v36 = &v28[v35];
  v37 = type metadata accessor for Artwork.CropStyle(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v38 + 32))(__dst, v36, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_21:
  v52 = v10[9];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 10, v55);
  v59 = v57(v54, 10, v55);
  if (!v58)
  {
    if (!v59)
    {
      v65 = type metadata accessor for Playlist.Variant(0);
      v66 = *(_QWORD *)(v65 - 8);
      v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
      v68 = v67(v53, 1, v65);
      v69 = v67(v54, 1, v65);
      if (v68)
      {
        v64 = v92;
        if (!v69)
        {
          (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v53, v54, v65);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v53, 0, 1, v65);
          goto LABEL_40;
        }
      }
      else
      {
        v64 = v92;
        if (!v69)
        {
          (*(void (**)(char *, char *, uint64_t))(v66 + 40))(v53, v54, v65);
          goto LABEL_40;
        }
        (*(void (**)(char *, uint64_t))(v66 + 8))(v53, v65);
      }
      v70 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      goto LABEL_40;
    }
    sub_10004FF60((uint64_t)v53, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v63 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    v64 = v92;
    goto LABEL_40;
  }
  if (v59)
    goto LABEL_27;
  v60 = type metadata accessor for Playlist.Variant(0);
  v61 = *(_QWORD *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v54, 1, v60))
  {
    v62 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v53, v54, v60);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v53, 0, 1, v60);
  }
  v64 = v92;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 10, v55);
LABEL_40:
  a1[v10[10]] = a2[v10[10]];
  a1[v10[11]] = a2[v10[11]];
  v71 = v10[12];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = *(void **)&a1[v71];
  *(_QWORD *)&a1[v71] = *(_QWORD *)&a2[v71];

  v75 = (int *)type metadata accessor for SegueContext(0);
  v76 = v75[5];
  v77 = &v72[v76];
  v78 = &v73[v76];
  v79 = v64(&v72[v76], 1, v4);
  v80 = v64(v78, 1, v4);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v77, v78, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v77, 0, 1, v4);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v91 + 8))(v77, v4);
LABEL_45:
    v81 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v91 + 40))(v77, v78, v4);
LABEL_46:
  v72[v75[6]] = v73[v75[6]];
  v82 = v75[7];
  v83 = &v72[v82];
  v84 = &v73[v82];
  v85 = *(_QWORD *)&v72[v82];
  v86 = *(_QWORD *)&v73[v82];
  if (!v85)
  {
    if (v86)
    {
      v88 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = v86;
      *((_QWORD *)v83 + 1) = v88;
      return a1;
    }
LABEL_52:
    *(_OWORD *)v83 = *(_OWORD *)v84;
    return a1;
  }
  if (!v86)
  {
    swift_release();
    goto LABEL_52;
  }
  v87 = *((_QWORD *)v84 + 1);
  *(_QWORD *)v83 = v86;
  *((_QWORD *)v83 + 1) = v87;
  swift_release();
  return a1;
}

uint64_t sub_100758B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100758B68);
}

uint64_t sub_100758B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Showcase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100758BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100758BB0);
}

uint64_t sub_100758BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Showcase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_100758BF0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Showcase(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_100758C58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v64;
  char *__dst;
  unsigned int (*v66)(uint64_t *, uint64_t, uint64_t);
  uint64_t v67;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    v7 = *(_QWORD *)(v6 - 8);
    v66 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
    v67 = v6;
    v64 = v7;
    if (v66(a2, 1, v6))
    {
      v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v10 = (int *)type metadata accessor for Showcase(0);
    v11 = v10[5];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v10[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v10[7];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v10[8];
    __dst = (char *)a1 + v23;
    v24 = (char *)a2 + v23;
    v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(__dst, v24, v29);
      v30 = *(int *)(v25 + 20);
      v31 = &__dst[v30];
      v32 = &v24[v30];
      v33 = type metadata accessor for Artwork.CropStyle(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    v36 = v10[9];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
    {
      v41 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
      {
        v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
    }
    *((_BYTE *)a1 + v10[10]) = *((_BYTE *)a2 + v10[10]);
    *((_BYTE *)a1 + v10[11]) = *((_BYTE *)a2 + v10[11]);
    v45 = v10[12];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = *(void **)((char *)a2 + v45);
    *(uint64_t *)((char *)a1 + v45) = (uint64_t)v48;
    v49 = (int *)type metadata accessor for SegueContext(0);
    v50 = v49[5];
    v51 = &v46[v50];
    v52 = &v47[v50];
    v53 = v48;
    if (v66((uint64_t *)v52, 1, v67))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v51, v52, v67);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v51, 0, 1, v67);
    }
    v46[v49[6]] = v47[v49[6]];
    v55 = v49[7];
    v56 = &v46[v55];
    v57 = &v47[v55];
    if (*(_QWORD *)v57)
    {
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
    v59 = *(int *)(a3 + 20);
    v60 = (char *)a1 + v59;
    v61 = (char *)a2 + v59;
    v62 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  }
  return a1;
}

uint64_t sub_1007590DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = (int *)type metadata accessor for Showcase(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + v7[8];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + v7[9];
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
  {
    v16 = type metadata accessor for Playlist.Variant(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  v18 = (id *)(a1 + v7[12]);

  v19 = type metadata accessor for SegueContext(0);
  v20 = (char *)v18 + *(int *)(v19 + 20);
  if (!v6((uint64_t)v20, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
  if (*(id *)((char *)v18 + *(int *)(v19 + 28)))
    swift_release();
  v21 = a1 + *(int *)(a2 + 20);
  v22 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

char *sub_100759308(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v64;
  char *v65;
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v67 = v5;
  v64 = v6;
  if (v66(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for Showcase(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = v8[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = v8[8];
  v22 = &a1[v21];
  v65 = a2;
  v23 = &a2[v21];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    v27 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    v28 = v65;
  }
  else
  {
    v29 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
    v30 = *(int *)(v24 + 20);
    v31 = &v22[v30];
    v32 = &v23[v30];
    v33 = type metadata accessor for Artwork.CropStyle(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v28 = v65;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v36 = v8[9];
  v37 = &a1[v36];
  v38 = &v28[v36];
  v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
  {
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = type metadata accessor for Playlist.Variant(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
  }
  a1[v8[10]] = v28[v8[10]];
  a1[v8[11]] = v28[v8[11]];
  v45 = v8[12];
  v46 = &a1[v45];
  v47 = &v28[v45];
  v48 = *(void **)&v28[v45];
  *(_QWORD *)&a1[v45] = v48;
  v49 = (int *)type metadata accessor for SegueContext(0);
  v50 = v49[5];
  v51 = &v46[v50];
  v52 = &v47[v50];
  v53 = v48;
  if (v66(v52, 1, v67))
  {
    v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v51, v52, v67);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v51, 0, 1, v67);
  }
  v46[v49[6]] = v47[v49[6]];
  v55 = v49[7];
  v56 = &v46[v55];
  v57 = &v47[v55];
  if (*(_QWORD *)v57)
  {
    v58 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v56 = *(_OWORD *)v57;
  }
  v59 = *(int *)(a3 + 20);
  v60 = &a1[v59];
  v61 = &v28[v59];
  v62 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  return a1;
}

char *sub_100759764(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  void **v66;
  char *v67;
  void *v68;
  void *v69;
  id v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void *__dst;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v91 = v7;
  v92 = a3;
  v93 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Showcase(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v12[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v12[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v12[8];
  v23 = (uint64_t)&a1[v22];
  v24 = &a2[v22];
  v25 = type metadata accessor for ArtworkImage.ViewModel(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27((uint64_t)v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      v39 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v23, v24, v39);
      v40 = *(int *)(v25 + 20);
      v41 = (void *)(v23 + v40);
      v42 = &v24[v40];
      v43 = type metadata accessor for Artwork.CropStyle(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v41, 1, v43);
      v47 = v45(v42, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v41, v42, v43);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v41, v43);
      }
      v36 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v37 = v41;
      v38 = v42;
LABEL_14:
      memcpy(v37, v38, v36);
      goto LABEL_21;
    }
    sub_10005B748(v23, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v36 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v37 = (void *)v23;
    v38 = v24;
    goto LABEL_14;
  }
  if (v29)
    goto LABEL_13;
  v30 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v23, v24, v30);
  v31 = *(int *)(v25 + 20);
  __dst = (void *)(v23 + v31);
  v32 = &v24[v31];
  v33 = type metadata accessor for Artwork.CropStyle(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_21:
  v48 = v12[9];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  v54 = v53(v49, 10, v51);
  v55 = v53(v50, 10, v51);
  if (!v54)
  {
    if (!v55)
    {
      v60 = type metadata accessor for Playlist.Variant(0);
      v61 = *(_QWORD *)(v60 - 8);
      v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
      v63 = v62(v49, 1, v60);
      v64 = v62(v50, 1, v60);
      if (v63)
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v49, v50, v60);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v49, 0, 1, v60);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 24))(v49, v50, v60);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v61 + 8))(v49, v60);
      }
      v59 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v49, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v59 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v55)
    goto LABEL_27;
  v56 = type metadata accessor for Playlist.Variant(0);
  v57 = *(_QWORD *)(v56 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v50, 1, v56))
  {
    v58 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v49, v50, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v49, 0, 1, v56);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 10, v51);
LABEL_34:
  a1[v12[10]] = a2[v12[10]];
  a1[v12[11]] = a2[v12[11]];
  v65 = v12[12];
  v66 = (void **)&a1[v65];
  v67 = &a2[v65];
  v68 = *(void **)&a2[v65];
  v69 = *v66;
  *v66 = v68;
  v70 = v68;

  v71 = (int *)type metadata accessor for SegueContext(0);
  v72 = v71[5];
  v73 = (char *)v66 + v72;
  v74 = &v67[v72];
  v75 = v93((char *)v66 + v72, 1, v6);
  v76 = v93(v74, 1, v6);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v73, v74, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v73, 0, 1, v6);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v91 + 8))(v73, v6);
LABEL_39:
    v77 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v91 + 24))(v73, v74, v6);
LABEL_40:
  *((_BYTE *)v66 + v71[6]) = v67[v71[6]];
  v78 = v71[7];
  v79 = (void **)((char *)v66 + v78);
  v80 = &v67[v78];
  v81 = *(uint64_t *)((char *)v66 + v78);
  v82 = *(_QWORD *)&v67[v78];
  if (!v81)
  {
    if (v82)
    {
      v84 = *((_QWORD *)v80 + 1);
      *v79 = v82;
      v79[1] = v84;
      swift_retain();
      goto LABEL_47;
    }
LABEL_46:
    *(_OWORD *)v79 = *(_OWORD *)v80;
    goto LABEL_47;
  }
  if (!v82)
  {
    swift_release();
    goto LABEL_46;
  }
  v83 = *((_QWORD *)v80 + 1);
  *v79 = v82;
  v79[1] = v83;
  swift_retain();
  swift_release();
LABEL_47:
  v85 = *(int *)(v92 + 20);
  v86 = &a1[v85];
  v87 = &a2[v85];
  v88 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 24))(v86, v87, v88);
  return a1;
}

char *sub_100759E8C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *__dst;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  unsigned int (*v55)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v51 = v7;
  if (v8(a2, 1, v6))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = (int *)type metadata accessor for Showcase(0);
  *(_OWORD *)&a1[v10[5]] = *(_OWORD *)&a2[v10[5]];
  *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
  *(_OWORD *)&a1[v10[7]] = *(_OWORD *)&a2[v10[7]];
  v11 = v10[8];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for ArtworkImage.ViewModel(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v52 = a3;
    v54 = v8;
    v17 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
    v18 = *(int *)(v14 + 20);
    __dst = &v12[v18];
    v19 = &v13[v18];
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    a3 = v52;
    v8 = v54;
  }
  v23 = v10[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 10, v26))
  {
    v28 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v53 = a3;
    v55 = v8;
    v29 = type metadata accessor for Playlist.Variant(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v24, v25, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v24, 0, 1, v29);
    }
    v8 = v55;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 10, v26);
    a3 = v53;
  }
  a1[v10[10]] = a2[v10[10]];
  a1[v10[11]] = a2[v10[11]];
  v32 = v10[12];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];
  v35 = (int *)type metadata accessor for SegueContext(0);
  v36 = v35[5];
  v37 = &v33[v36];
  v38 = &v34[v36];
  if (v8(&v34[v36], 1, v6))
  {
    v39 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v37, v38, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v37, 0, 1, v6);
  }
  v33[v35[6]] = v34[v35[6]];
  v40 = v35[7];
  v41 = &v33[v40];
  v42 = &v34[v40];
  v43 = *(_QWORD *)v42;
  if (*(_QWORD *)v42)
  {
    v44 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = v43;
    *((_QWORD *)v41 + 1) = v44;
  }
  else
  {
    *(_OWORD *)v41 = *(_OWORD *)v42;
  }
  v45 = *(int *)(a3 + 20);
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
  return a1;
}

char *sub_10075A2AC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  size_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(void *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  int v69;
  int v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void *__dst;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v95 = v7;
  v96 = a3;
  v97 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Showcase(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  v18 = v12[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  v23 = v12[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  v28 = v12[8];
  v29 = (uint64_t)&a1[v28];
  v30 = &a2[v28];
  v31 = type metadata accessor for ArtworkImage.ViewModel(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33((uint64_t)v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      v45 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v29, v30, v45);
      v46 = *(int *)(v31 + 20);
      v47 = (void *)(v29 + v46);
      v48 = &v30[v46];
      v49 = type metadata accessor for Artwork.CropStyle(0);
      v50 = *(_QWORD *)(v49 - 8);
      v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
      v52 = v51(v47, 1, v49);
      v53 = v51(v48, 1, v49);
      if (v52)
      {
        if (!v53)
        {
          (*(void (**)(void *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v53)
        {
          (*(void (**)(void *, char *, uint64_t))(v50 + 40))(v47, v48, v49);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
      }
      v42 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v43 = v47;
      v44 = v48;
LABEL_14:
      memcpy(v43, v44, v42);
      goto LABEL_21;
    }
    sub_10005B748(v29, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v42 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v43 = (void *)v29;
    v44 = v30;
    goto LABEL_14;
  }
  if (v35)
    goto LABEL_13;
  v36 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v29, v30, v36);
  v37 = *(int *)(v31 + 20);
  __dst = (void *)(v29 + v37);
  v38 = &v30[v37];
  v39 = type metadata accessor for Artwork.CropStyle(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 32))(__dst, v38, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(__dst, 0, 1, v39);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_21:
  v54 = v12[9];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  v60 = v59(v55, 10, v57);
  v61 = v59(v56, 10, v57);
  if (!v60)
  {
    if (!v61)
    {
      v66 = type metadata accessor for Playlist.Variant(0);
      v67 = *(_QWORD *)(v66 - 8);
      v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
      v69 = v68(v55, 1, v66);
      v70 = v68(v56, 1, v66);
      if (v69)
      {
        if (!v70)
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v55, v56, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v55, 0, 1, v66);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v70)
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v55, v56, v66);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v67 + 8))(v55, v66);
      }
      v65 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v55, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v65 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v61)
    goto LABEL_27;
  v62 = type metadata accessor for Playlist.Variant(0);
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v56, 1, v62))
  {
    v64 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v55, v56, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v55, 0, 1, v62);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 10, v57);
LABEL_34:
  a1[v12[10]] = a2[v12[10]];
  a1[v12[11]] = a2[v12[11]];
  v71 = v12[12];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = *(void **)&a1[v71];
  *(_QWORD *)&a1[v71] = *(_QWORD *)&a2[v71];

  v75 = (int *)type metadata accessor for SegueContext(0);
  v76 = v75[5];
  v77 = &v72[v76];
  v78 = &v73[v76];
  v79 = v97(&v72[v76], 1, v6);
  v80 = v97(v78, 1, v6);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v77, v78, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v77, 0, 1, v6);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v95 + 8))(v77, v6);
LABEL_39:
    v81 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v95 + 40))(v77, v78, v6);
LABEL_40:
  v72[v75[6]] = v73[v75[6]];
  v82 = v75[7];
  v83 = &v72[v82];
  v84 = &v73[v82];
  v85 = *(_QWORD *)&v72[v82];
  v86 = *(_QWORD *)&v73[v82];
  if (!v85)
  {
    if (v86)
    {
      v88 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = v86;
      *((_QWORD *)v83 + 1) = v88;
      goto LABEL_47;
    }
LABEL_46:
    *(_OWORD *)v83 = *(_OWORD *)v84;
    goto LABEL_47;
  }
  if (!v86)
  {
    swift_release();
    goto LABEL_46;
  }
  v87 = *((_QWORD *)v84 + 1);
  *(_QWORD *)v83 = v86;
  *((_QWORD *)v83 + 1) = v87;
  swift_release();
LABEL_47:
  v89 = *(int *)(v96 + 20);
  v90 = &a1[v89];
  v91 = &a2[v89];
  v92 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 40))(v90, v91, v92);
  return a1;
}

uint64_t sub_10075A994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10075A9A0);
}

uint64_t sub_10075A9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Showcase(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C(qword_1011C9550);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_10075AA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10075AA24);
}

uint64_t sub_10075AA24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Showcase(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C(qword_1011C9550);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10075AAA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Showcase(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000F6458(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t sub_10075AB28()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  ValueMetadata *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v0 = sub_100044B54(&qword_1011C6D10);
  v3 = sub_100044B54(&qword_1011C6D08);
  v4 = &type metadata for ActionType;
  v5 = sub_100044B54(&qword_1011AC3B0);
  v6 = sub_100756E40();
  v7 = sub_1000E3EE4();
  v8 = sub_100314AC0();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  v3 = v0;
  v4 = (ValueMetadata *)OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
}

uint64_t sub_10075ABDC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAC014, 1);
}

uint64_t sub_10075ABEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FABFEC, 1);
}

uint64_t sub_10075AC14()
{
  return sub_10005610C(&qword_1011C56C8, &qword_1011C5600, (void (*)(void))sub_10070857C);
}

uint64_t sub_10075AC4C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, qword_10124D950 + a1 + 16);
}

id sub_10075AC8C(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  id v5;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  v5 = sub_10075ADCC(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)((char *)v2 + qword_10124D950) - 8) + 8))(a1);
  return v5;
}

void sub_10075ACEC()
{
  sub_10075AEEC();
}

uint64_t sub_10075AD24(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void sub_10075AD3C()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.StaticHostingController", 29, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

id sub_10075AD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for StaticHostingController(0, *(_QWORD *)((swift_isaMask & *v4) + qword_10124D950), *(_QWORD *)((swift_isaMask & *v4) + qword_10124D950 + 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t type metadata accessor for StaticHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StaticHostingController);
}

id sub_10075ADCC(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  id v4;
  id result;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  __chkstk_darwin(a1);
  v2 = (char *)&v9 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v9 - v1);
  v4 = (id)UIHostingController.init(rootView:)(v2);
  result = objc_msgSend(v4, "view");
  if (result)
  {
    v6 = result;
    v7 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v6, "setBackgroundColor:", v7);

    v8 = v4;
    dispatch thunk of UIHostingController.sizeThatFits(in:)(v8, 1.79769313e308, 1.79769313e308);
    objc_msgSend(v8, "setPreferredContentSize:");

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10075AEEC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Music/StaticHostingController.swift", 35, 2, 33, 0);
  __break(1u);
}

uint64_t sub_10075AF34(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v8 = a3[6];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Artist(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v12 + 48);
    v14 = swift_retain();
    if (v13(v10, 1, v11, v14))
    {
      v15 = _s11MusicVideosV5ScopeOMa(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    v17 = a3[8];
    v18 = (_QWORD *)(v7 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(_QWORD *)(v7 + v17) = *(uint64_t *)((char *)a2 + v17);
    *(_WORD *)(v7 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t _s11MusicVideosV5ScopeOMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C7018, (uint64_t)&_s11MusicVideosV5ScopeOMn);
}

uint64_t sub_10075B084(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*a1);
  v4 = (char *)a1 + a2[6];
  v5 = type metadata accessor for Artist(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[7] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8]));
}

uint64_t sub_10075B114(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v10 + 48);
  v12 = swift_retain();
  if (v11(v8, 1, v9, v12))
  {
    v13 = _s11MusicVideosV5ScopeOMa(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10075B228(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = _s11MusicVideosV5ScopeOMa(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[9];
  v19 = (_BYTE *)(a1 + v18);
  v20 = (_BYTE *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  return a1;
}

uint64_t sub_10075B3B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = _s11MusicVideosV5ScopeOMa(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10075B4A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = _s11MusicVideosV5ScopeOMa(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v20 = a3[9];
  v21 = (_BYTE *)(a1 + v20);
  v22 = (_BYTE *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  return a1;
}

uint64_t sub_10075B618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10075B624);
}

uint64_t sub_10075B624(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = _s11MusicVideosV5ScopeOMa(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_10075B6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10075B6AC);
}

char *sub_10075B6AC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = _s11MusicVideosV5ScopeOMa(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t _s11MusicVideosVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C6F60, (uint64_t)&_s11MusicVideosVMn);
}

uint64_t sub_10075B734(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_100ECE238;
  result = _s11MusicVideosV5ScopeOMa(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100ECE250;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = &unk_100ECE268;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_10075B7D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for Artist(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10075B89C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for Artist(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_10075B904(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10075B9A8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_10075BA98(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10075BB3C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_10075BC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10075BC38);
}

uint64_t sub_10075BC38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for Artist(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_10075BC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10075BC90);
}

uint64_t sub_10075BC90(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for Artist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_10075BCE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Artist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_10075BD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Artist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_10075BD58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t sub_10075BDAC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v9, *(_QWORD *)(a2 + 40));
    v4 = ApplicationCapabilities.Service.rawValue.getter(a1);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_10075C178(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v17, *(_QWORD *)(a2 + 40));
    if (a1)
    {
      v4 = a1 == 1 ? 0x657469726F766166 : 0x64616F6C6E776F64;
      v5 = 0xE900000000000073;
    }
    else
    {
      v5 = 0xE300000000000000;
      v4 = 7105633;
    }
    String.hash(into:)(v17, v4, v5);
    swift_bridgeObjectRelease(v5);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v8 = v6 & ~v7;
    if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v9 = ~v7;
      while (1)
      {
        if (*(_BYTE *)(*(_QWORD *)(a2 + 48) + v8))
        {
          if (*(_BYTE *)(*(_QWORD *)(a2 + 48) + v8) == 1)
            v10 = 0x657469726F766166;
          else
            v10 = 0x64616F6C6E776F64;
          v11 = 0xE900000000000073;
          v12 = a1;
          if (!a1)
          {
LABEL_14:
            v13 = 0xE300000000000000;
            v14 = 7105633;
            if (v10 != 7105633)
              goto LABEL_23;
            goto LABEL_22;
          }
        }
        else
        {
          v11 = 0xE300000000000000;
          v10 = 7105633;
          v12 = a1;
          if (!a1)
            goto LABEL_14;
        }
        if (v12 == 1)
          v14 = 0x657469726F766166;
        else
          v14 = 0x64616F6C6E776F64;
        v13 = 0xE900000000000073;
        if (v10 != v14)
          goto LABEL_23;
LABEL_22:
        if (v11 == v13)
        {
          swift_bridgeObjectRelease_n(v11, 2);
          v15 = 1;
          return v15 & 1;
        }
LABEL_23:
        v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v14, v13, 0);
        swift_bridgeObjectRelease(v11);
        swift_bridgeObjectRelease(v13);
        if ((v15 & 1) == 0)
        {
          v8 = (v8 + 1) & v9;
          if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
            continue;
        }
        return v15 & 1;
      }
    }
  }
  v15 = 0;
  return v15 & 1;
}

uint64_t sub_10075C37C(unsigned __int8 a1, uint64_t a2)
{
  Swift::UInt v4;
  Swift::Int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v10, *(_QWORD *)(a2 + 40));
    if ((a1 - 3) >= 7u)
    {
      Hasher._combine(_:)(6uLL);
      v4 = a1;
    }
    else
    {
      v4 = qword_100ECE4E0[(char)(a1 - 3)];
    }
    Hasher._combine(_:)(v4);
    v5 = Hasher._finalize()();
    v6 = -1 << *(_BYTE *)(a2 + 32);
    v7 = v5 & ~v6;
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    {
      v8 = ~v6;
      while (1)
      {
        switch(*(_BYTE *)(*(_QWORD *)(a2 + 48) + v7))
        {
          case 3:
            if (a1 != 3)
              goto LABEL_8;
            return 1;
          case 4:
            if (a1 == 4)
              return 1;
            goto LABEL_8;
          case 5:
            if (a1 == 5)
              return 1;
            goto LABEL_8;
          case 6:
            if (a1 == 6)
              return 1;
            goto LABEL_8;
          case 7:
            if (a1 == 7)
              return 1;
            goto LABEL_8;
          case 8:
            if (a1 == 8)
              return 1;
            goto LABEL_8;
          case 9:
            if (a1 != 9)
              goto LABEL_8;
            return 1;
          default:
            if ((a1 - 10) <= 0xF8u && *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v7) == a1)
              return 1;
LABEL_8:
            v7 = (v7 + 1) & v8;
            if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
              return 0;
            break;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_10075C510(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(__n128);
  _QWORD v29[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v29, *(_QWORD *)(a2 + 40));
    Lyrics.TextLine.hash(into:)((uint64_t)v29);
    v4 = Hasher._finalize()();
    v5 = -1 << *(_BYTE *)(a2 + 32);
    v6 = v4 & ~v5;
    if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    {
      v7 = ~v5;
      v8 = *(_QWORD *)(a1 + 16);
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = v9 + 104 * v6;
        if (*(_QWORD *)(v10 + 16) == v8
          && *(double *)(v9 + 104 * v6) == *(double *)a1
          && *(double *)(v10 + 8) == *(double *)(a1 + 8)
          && *(double *)(v10 + 40) == *(double *)(a1 + 40)
          && *(double *)(v10 + 48) == *(double *)(a1 + 48))
        {
          v11 = *(_QWORD *)(v10 + 64);
          v27 = *(_QWORD *)(v10 + 32);
          v28 = *(uint64_t (**)(__n128))(v10 + 56);
          v12 = *(_QWORD *)(v10 + 80);
          v13 = *(_QWORD *)(v10 + 96);
          swift_bridgeObjectRetain();
          swift_retain(v11);
          v25 = v12;
          swift_retain(v12);
          v24 = v13;
          v14 = swift_retain(v13);
          v26 = v11;
          v15 = v28(v14);
          v17 = v16;
          v18 = (*(uint64_t (**)(void))(a1 + 56))();
          if (v15 == v18 && v17 == v19)
          {
            swift_release(v24);
            swift_release(v25);
            swift_release(v11);
            swift_bridgeObjectRelease(v27);
            swift_bridgeObjectRelease_n(v17, 2);
            return 1;
          }
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
          swift_release(v24);
          swift_release(v25);
          swift_release(v26);
          swift_bridgeObjectRelease(v27);
          swift_bridgeObjectRelease(v17);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) != 0)
            return 1;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
  }
  return 0;
}

BOOL sub_10075C720(unsigned __int8 a1, uint64_t a2)
{
  Swift::UInt v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(v3);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == (_DWORD)v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == (_DWORD)v3;
    if (v12 == (_DWORD)v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_10075C80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for Song(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_100048748(&qword_1011A3960, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_100048748(&qword_1011A3968, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_10075C990(char a1, uint64_t a2)
{
  uint64_t v4;
  Swift::Int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[9];

  if (*(_QWORD *)(a2 + 16)
    && ((Hasher.init(_seed:)(v12, *(_QWORD *)(a2 + 40)), (a1 & 1) != 0)
      ? (v4 = 0x7972617262696CLL)
      : (v4 = 0x676F6C61746163),
        String.hash(into:)(v12, v4, 0xE700000000000000),
        swift_bridgeObjectRelease(0xE700000000000000),
        v5 = Hasher._finalize()(),
        v6 = -1 << *(_BYTE *)(a2 + 32),
        v7 = v5 & ~v6,
        ((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
  {
    v8 = ~v6;
    while (1)
    {
      v9 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v7) ? 0x7972617262696CLL : 0x676F6C61746163;
      if (v9 == v4)
        break;
      v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, 0xE700000000000000, v4, 0xE700000000000000, 0);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      if ((v10 & 1) == 0)
      {
        v7 = (v7 + 1) & v8;
        if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
          continue;
      }
      return v10 & 1;
    }
    swift_bridgeObjectRelease_n(0xE700000000000000, 2);
    v10 = 1;
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_10075CAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for IndexPath(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_100048748(&qword_1011B5D98, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_100048748(&qword_1011AB870, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_10075CC58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for AudioVariant(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_100048748(&qword_1011A3CF8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_100048748(&qword_1011A3D00, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_10075CDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(_QWORD *)(a3 + 40));
    swift_bridgeObjectRetain(a2);
    String.hash(into:)(v20, a1, a2);
    swift_bridgeObjectRelease(a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_10075CF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(_QWORD *)(a3 + 40));
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_10075D054(char a1, uint64_t a2)
{
  Swift::UInt v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_9;
  v3 = a1 & 1;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(v3);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_9;
  v8 = *(_QWORD *)(a2 + 48);
  if (((((_DWORD)v3 == 0) ^ *(unsigned __int8 *)(v8 + v6)) & 1) != 0)
  {
    v9 = 1;
    return v9 & 1;
  }
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_9:
    v9 = 0;
    return v9 & 1;
  }
  do
  {
    v9 = ((_DWORD)v3 == 0) ^ *(_BYTE *)(v8 + v11);
    if ((v9 & 1) != 0)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return v9 & 1;
}

uint64_t sub_10075D15C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[10];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v8, *(_QWORD *)(a2 + 40));
    v4 = Library.Menu.Identifier.rawValue.getter(a1);
    String.hash(into:)(v8, v4, v5);
    swift_bridgeObjectRelease();
    v6 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_10075D4C0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryMusicVideoFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

void sub_10075D504(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  unint64_t v27;
  unint64_t v28;
  Swift::String v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _BYTE *v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  Swift::String v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  char v49;
  void *v50;
  _QWORD *v51;
  Swift::Int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  unint64_t v63;

  v6 = _s11MusicVideosV5ScopeOMa(0);
  v7 = __chkstk_darwin(v6);
  v57 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v55 = (uint64_t)&v54 - v10;
  v11 = __chkstk_darwin(v9);
  v59 = (uint64_t)&v54 - v12;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v54 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v54 - v16;
  v18 = type metadata accessor for MusicLibrary(0);
  *(_QWORD *)a3 = static MusicLibrary.shared.getter(v18);
  v19 = (int *)_s11MusicVideosVMa(0);
  v20 = (_QWORD *)(a3 + v19[7]);
  *v20 = 0;
  v20[1] = 0xE000000000000000;
  v21 = v19[8];
  *(_QWORD *)(a3 + v21) = &_swiftEmptySetSingleton;
  v60 = a3 + v19[6];
  sub_10005B704(a1, v60, _s11MusicVideosV5ScopeOMa);
  *(_BYTE *)(a3 + 8) = a2;
  v58 = (id)objc_opt_self(NSUserDefaults);
  v22 = objc_msgSend(v58, "standardUserDefaults");
  v23 = a1;
  sub_10005B704(a1, (uint64_t)v17, _s11MusicVideosV5ScopeOMa);
  v24 = type metadata accessor for Artist(0);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48);
  v26 = v25(v17, 1, v24);
  v61 = v21;
  v56 = (unint64_t)"contextMenuAction.filter.";
  if (v26 == 1)
  {
    v27 = 0x8000000100E300B0;
    v28 = 0xD000000000000012;
  }
  else
  {
    sub_10005B748((uint64_t)v17, _s11MusicVideosV5ScopeOMa);
    v28 = 0xD000000000000013;
    v27 = 0x8000000100E2FEF0;
  }
  v62 = (void *)v28;
  v63 = v27;
  swift_bridgeObjectRetain();
  v29._countAndFlagsBits = 0x53746E65746E6F43;
  v29._object = (void *)0xEB0000000074726FLL;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v27);
  v30 = v63;
  v31 = sub_100049FE4();
  sub_10004A028();
  NSUserDefaults.decodeValue<A>(_:forKey:)((uint64_t)&_s11ContentSortVN, v31, &v62);

  swift_bridgeObjectRelease(v30);
  LODWORD(v32) = (unsigned __int16)v62;
  v33 = v23;
  sub_10005B704(v23, (uint64_t)v15, _s11MusicVideosV5ScopeOMa);
  if ((v32 & 0xFF00) == 0x200)
  {
    LODWORD(v32) = sub_100464874(0);
    v34 = v59;
    sub_10005B704((uint64_t)v15, v59, _s11MusicVideosV5ScopeOMa);
    if ((v32 & 0xFF00) == 0x200)
    {
      v32 = v55;
      sub_10005B704(v34, v55, _s11MusicVideosV5ScopeOMa);
      LOBYTE(v35) = 1;
      v36 = v25((char *)v32, 1, v24);
      v37 = (uint64_t)v57;
      if (v36 == 1)
      {
        LOBYTE(v32) = 0;
      }
      else
      {
        sub_10005B748(v32, _s11MusicVideosV5ScopeOMa);
        LOBYTE(v32) = 3;
      }
    }
    else
    {
      v35 = (v32 >> 8) & 1;
      v37 = (uint64_t)v57;
    }
    sub_10005B748(v59, _s11MusicVideosV5ScopeOMa);
    sub_10005B748((uint64_t)v15, _s11MusicVideosV5ScopeOMa);
  }
  else
  {
    sub_10005B748((uint64_t)v15, _s11MusicVideosV5ScopeOMa);
    v35 = (v32 >> 8) & 1;
    v37 = (uint64_t)v57;
  }
  v38 = v60;
  v39 = v58;
  v40 = (_BYTE *)(a3 + v19[9]);
  *v40 = v32;
  v40[1] = v35;
  v41 = objc_msgSend(v39, "standardUserDefaults");
  sub_10005B704(v38, v37, _s11MusicVideosV5ScopeOMa);
  if (v25((char *)v37, 1, v24) == 1)
  {
    v42 = v56 | 0x8000000000000000;
    v43 = 0xD000000000000012;
  }
  else
  {
    sub_10005B748(v37, _s11MusicVideosV5ScopeOMa);
    v43 = 0xD000000000000013;
    v42 = 0x8000000100E2FEF0;
  }
  v44 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
  v62 = (void *)v43;
  v63 = v42;
  swift_bridgeObjectRetain();
  v45._countAndFlagsBits = 0x704F7265746C6946;
  v45._object = (void *)0xEC0000006E6F6974;
  String.append(_:)(v45);
  swift_bridgeObjectRelease(v42);
  v46 = v63;
  v47 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  NSUserDefaults.decodeValue<A>(_:forKey:)(v44, v47, &v62);

  swift_bridgeObjectRelease(v46);
  v48 = v62;
  if (!v62)
  {
    v49 = sub_10075F28C();
    Optional<A>.convertToSet.getter(v49);
    if (v50)
      v48 = v50;
    else
      v48 = &_swiftEmptySetSingleton;
  }
  v51 = sub_10075F4EC();
  v52 = sub_1001A53A0((uint64_t)v51, (uint64_t)v48);
  sub_10005B748(v33, _s11MusicVideosV5ScopeOMa);
  swift_bridgeObjectRelease(v51);
  v53 = v61;
  swift_bridgeObjectRelease(*(_QWORD *)(a3 + v61));
  *(_QWORD *)(a3 + v53) = v52;
}

void sub_10075DA44(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  char v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  const char *v13;
  unint64_t v14;
  Swift::String v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[6];

  v3 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s11MusicVideosVMa(0);
  v7 = (_BYTE *)(v1 + *(int *)(v6 + 36));
  v8 = v7[1];
  *v7 = a1;
  v7[1] = BYTE1(a1) & 1;
  sub_1005CFF5C(a1);
  if ((v9 & 1) == 0 || (((a1 >> 8) & 1 ^ v8) & 1) != 0)
  {
    v10 = 0xD000000000000012;
    v11 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v19[3] = &_s11ContentSortVN;
    v19[4] = sub_100049FE4();
    v19[5] = sub_10004A028();
    LOBYTE(v19[0]) = a1;
    BYTE1(v19[0]) = (unsigned __int16)(a1 & 0x100) >> 8;
    sub_10005B704(v1 + *(int *)(v6 + 24), (uint64_t)v5, _s11MusicVideosV5ScopeOMa);
    v12 = type metadata accessor for Artist(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v5, 1, v12) == 1)
    {
      v13 = "LibraryMusicVideos";
    }
    else
    {
      sub_10005B748((uint64_t)v5, _s11MusicVideosV5ScopeOMa);
      v10 = 0xD000000000000013;
      v13 = "LibraryArtistAlbums";
    }
    v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
    v17 = v10;
    v18 = v14;
    swift_bridgeObjectRetain();
    v15._countAndFlagsBits = 0x53746E65746E6F43;
    v15._object = (void *)0xEB0000000074726FLL;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v14);
    v16 = v18;
    NSUserDefaults.encodeValue(_:forKey:)(v19);
    swift_bridgeObjectRelease(v16);

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v19);
  }
}

uint64_t sub_10075DC18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD v18[7];
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;
  _QWORD v26[6];

  v19 = _s11MusicVideosVMa(0);
  v2 = __chkstk_darwin(v19);
  v18[5] = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v21 = (char *)v18 - v4;
  v5 = type metadata accessor for MusicVideo(0);
  v20 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  v23 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v18[6] = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)v18 - v9;
  sub_10075E9B0((uint64_t)v18 - v9);
  KeyPath = swift_getKeyPath(&unk_100ECE4B8);
  v12 = MusicVideo.id.getter();
  v14 = v13;
  v26[0] = v12;
  v26[1] = v13;
  v22 = v10;
  MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(KeyPath, v26, v6, &protocol witness table for MusicItemID);
  swift_bridgeObjectRelease(v14);
  swift_release(KeyPath);
  v26[3] = v6;
  v26[4] = sub_100760884();
  v15 = sub_100049F68(v26);
  sub_10075E9B0((uint64_t)v15);
  v25 = 0;
  memset(v24, 0, sizeof(v24));
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(v26, v24);
  v16 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 0, 1, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v22, v6);
}

uint64_t sub_10075E1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD v23[6];
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[6];

  v4 = type metadata accessor for Artist(0);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  __chkstk_darwin(v4);
  v23[3] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v6);
  v25 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  __chkstk_darwin(v8);
  v26 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = _s11MusicVideosVMa(0);
  v10 = __chkstk_darwin(v29);
  v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  v24 = sub_100007E8C(&qword_1011B59B0);
  v12 = __chkstk_darwin(v24);
  v23[5] = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  __chkstk_darwin(v14);
  v16 = (char *)v23 - v15;
  v30 = v8;
  v34[3] = v8;
  v34[4] = sub_100760884();
  v17 = sub_100049F68(v34);
  sub_10075E9B0((uint64_t)v17);
  sub_1007608D0(a1, (uint64_t)v16);
  v18 = type metadata accessor for MusicVideo(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
  {
    sub_10004FF60((uint64_t)v16, &qword_1011B59B0);
    v31 = 0u;
    v32 = 0u;
    v33 = 0;
  }
  else
  {
    *((_QWORD *)&v32 + 1) = v18;
    v33 = sub_100048748((unint64_t *)&unk_1011B8C10, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
    v20 = sub_100049F68(&v31);
    (*(void (**)(_QWORD *, char *, uint64_t))(v19 + 32))(v20, v16, v18);
  }
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(v34, &v31);
  v21 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 0, 1, v21);
}

uint64_t sub_10075E928@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryMusicVideoSortProperties.title.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10075E96C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return dispatch thunk of LibraryMusicVideoInternalFilter.favoriteStatus.getter(v1, v2);
}

void sub_10075E9B0(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  __n128 v17;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for Artist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TitledSection(0);
  v12 = type metadata accessor for MusicVideo(0);
  MusicLibrarySectionedRequest.init()(v11, v12, &protocol witness table for TitledSection, &protocol witness table for MusicVideo);
  v13 = *v2;
  swift_retain(*v2);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  MusicLibrarySectionedRequest.library.setter(v13, v14);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)v2 + 8), v14);
  v15 = _s11MusicVideosVMa(0);
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)((char *)v2 + *(int *)(v15 + 28)));
  sub_10005B704((uint64_t)v2 + *(int *)(v15 + 24), (uint64_t)v10, _s11MusicVideosV5ScopeOMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    KeyPath = swift_getKeyPath(&unk_100ECE490);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v7, v14);
    v17 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v17);
  }
  sub_10075EB84();
  sub_10075EF18(a1);
}

void sub_10075EB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  __n128 v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = _s11MusicVideosVMa(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(_BYTE *)(v0 + *(int *)(v2 + 36)))
  {
    case 0:
      KeyPath = swift_getKeyPath(&unk_100ECE3F0);
      v6 = sub_100007E8C((uint64_t *)&unk_1011A3840);
      MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(KeyPath, 1, v6);
      swift_release(KeyPath);
      v7 = swift_getKeyPath(&unk_100ECE418);
      v8 = v7;
      v9 = 1;
      goto LABEL_8;
    case 1:
      v8 = swift_getKeyPath(&unk_100ECE468);
      v6 = sub_100007E8C((uint64_t *)&unk_1011A3840);
      v7 = v8;
      v9 = 0;
LABEL_8:
      MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v7, v9, v6);
      swift_release(v8);
      v20 = swift_getKeyPath(&unk_100ECE440);
      MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v20, 1, v6);
      goto LABEL_10;
    case 2:
      v20 = swift_getKeyPath(&unk_100ECE3A0);
      v6 = sub_100007E8C((uint64_t *)&unk_1011A3840);
      MusicLibrarySectionedRequest<>.sortItems<A>(by:ascending:)(v20, 0, v6, &protocol witness table for MusicVideo);
LABEL_10:
      swift_release(v20);
      v21 = &unk_100ECE3C8;
      goto LABEL_12;
    case 3:
      v22 = swift_getKeyPath(&unk_100ECE3C8);
      v6 = sub_100007E8C((uint64_t *)&unk_1011A3840);
      MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v22, 1, v6);
      swift_release(v22);
      v21 = &unk_100ECE3F0;
LABEL_12:
      v23 = swift_getKeyPath(v21);
      MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v23, 1, v6);
      swift_release(v23);
      break;
    default:
      if (qword_10119C028 != -1)
        swift_once(&qword_10119C028, sub_10046477C);
      v10 = type metadata accessor for Logger(0);
      sub_100048B14(v10, (uint64_t)static Logger.libraryView);
      v11 = sub_10005B704(v0, (uint64_t)v4, _s11MusicVideosVMa);
      v12 = Logger.logObject.getter(v11);
      v14 = static os_log_type_t.fault.getter(v13);
      if (os_log_type_enabled(v12, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc(12, -1);
        v16 = swift_slowAlloc(32, -1);
        *(_DWORD *)v15 = 136446210;
        v25 = v16;
        LOBYTE(v24) = v4[*(int *)(v1 + 36)];
        v17 = String.init<A>(describing:)(&v24, &_s11ContentSortV6OptionON);
        v19 = v18;
        v24 = sub_100322200(v17, v18, &v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
        swift_bridgeObjectRelease(v19);
        sub_10005B748((uint64_t)v4, _s11MusicVideosVMa);
        _os_log_impl((void *)&_mh_execute_header, v12, v14, "Tried to apply unhandled sortOption=%{public}s to music videos request.", v15, 0xCu);
        swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v16, -1, -1);
        swift_slowDealloc(v15, -1, -1);
      }
      else
      {
        sub_10005B748((uint64_t)v4, _s11MusicVideosVMa);
      }

      break;
  }
}

void sub_10075EF18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[9];

  v3 = type metadata accessor for MusicFavoriteStatus(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(int *)(_s11MusicVideosVMa(0) + 32);
  v8 = *(_QWORD *)(v1 + v7);
  if (!*(_QWORD *)(v8 + 16)
    || (v30 = a1,
        Hasher.init(_seed:)(v31, *(_QWORD *)(v8 + 40)),
        String.hash(into:)(v31, 0x657469726F766166, 0xE900000000000073),
        v9 = Hasher._finalize()(),
        v10 = -1 << *(_BYTE *)(v8 + 32),
        v11 = v9 & ~v10,
        ((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0))
  {
    if (!*(_QWORD *)(v8 + 16))
      return;
    goto LABEL_13;
  }
  v29 = v1;
  v12 = ~v10;
  while (!*(_BYTE *)(*(_QWORD *)(v8 + 48) + v11))
  {
    v13 = 0xE300000000000000;
    v14 = 7105633;
LABEL_8:
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v13, 0x657469726F766166, 0xE900000000000073, 0);
    swift_bridgeObjectRelease(v13);
    if ((v15 & 1) != 0)
      goto LABEL_23;
    v11 = (v11 + 1) & v12;
    if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    {
      if (!*(_QWORD *)(v8 + 16))
        return;
      goto LABEL_13;
    }
  }
  if (*(_BYTE *)(*(_QWORD *)(v8 + 48) + v11) == 2)
  {
    v13 = 0xE900000000000073;
    v14 = 0x64616F6C6E776F64;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_23:
  KeyPath = swift_getKeyPath(&unk_100ECE378);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for MusicFavoriteStatus.favorited(_:), v3);
  v24 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  v25 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
  MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(KeyPath, v6, v24, &protocol witness table for MusicVideo, v25);
  v26 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v26);
  v8 = *(_QWORD *)(v29 + v7);
  if (!*(_QWORD *)(v8 + 16))
    return;
LABEL_13:
  Hasher.init(_seed:)(v31, *(_QWORD *)(v8 + 40));
  String.hash(into:)(v31, 0x64616F6C6E776F64, 0xE900000000000073);
  v16 = Hasher._finalize()();
  v17 = -1 << *(_BYTE *)(v8 + 32);
  v18 = v16 & ~v17;
  if (((*(_QWORD *)(v8 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
    return;
  v19 = ~v17;
  while (2)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v8 + 48) + v18))
    {
      v20 = 0xE300000000000000;
      v21 = 7105633;
      goto LABEL_19;
    }
    v20 = 0xE900000000000073;
    v21 = 0x657469726F766166;
    if (*(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) == 1)
    {
LABEL_19:
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v20, 0x64616F6C6E776F64, 0xE900000000000073, 0);
      swift_bridgeObjectRelease(v20);
      if ((v22 & 1) != 0)
        goto LABEL_25;
      v18 = (v18 + 1) & v19;
      if (((*(_QWORD *)(v8 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        return;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_25:
  v27 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(1, v27);
}

uint64_t sub_10075F28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  Swift::Int v14;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s11MusicVideosVMa(0);
  sub_10005B704(v0 + *(int *)(v4 + 24), (uint64_t)v3, _s11MusicVideosV5ScopeOMa);
  v5 = type metadata accessor for Artist(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1)
  {
    sub_10005B748((uint64_t)v3, _s11MusicVideosV5ScopeOMa);
    return 3;
  }
  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = objc_msgSend(v6, "standardUserDefaults");
  v24 = 0;
  v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(v25);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "stringForKey:", v8);

  if (v9)
  {
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    v13._countAndFlagsBits = v10;
    v13._object = v12;
    v14 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010A9F50, v13);
    swift_bridgeObjectRelease(v12);
    if (!v14)
      return 0;
    if (v14 == 1)
      return 1;
  }
  v16 = objc_msgSend(v6, "standardUserDefaults");
  v24 = 0;
  v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(v25);
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v16, "stringForKey:", v17);

  if (!v18)
    return 3;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22._countAndFlagsBits = v19;
  v22._object = v21;
  v23 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010A9FA0, v22);
  swift_bridgeObjectRelease(v21);
  if (v23 >= 3)
    return 3;
  else
    return v23;
}

_QWORD *sub_10075F4EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = _s11MusicVideosVMa(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0 + *(int *)(v1 + 24), (uint64_t)v6, v7);
  v8 = type metadata accessor for Artist(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    {
      sub_10005B704(v0, (uint64_t)v3, _s11MusicVideosVMa);
LABEL_6:
      sub_10005B748((uint64_t)v3, _s11MusicVideosVMa);
      v9 = &off_1010AA170;
      goto LABEL_10;
    }
    v10 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v11 = objc_msgSend(v10, "userInterfaceIdiom");

    sub_10005B704(v0, (uint64_t)v3, _s11MusicVideosVMa);
    if (v11 == (id)6)
      goto LABEL_6;
    v19 = *v3;
    v12 = v19;
    v13 = type metadata accessor for MusicLibrary(0);
    swift_retain(v12);
    v15 = static MusicLibrary.shared.getter(v14);
    v18 = v15;
    v16 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    LOBYTE(v13) = dispatch thunk of static Equatable.== infix(_:_:)(&v19, &v18, v13, v16);
    swift_release(v12);
    swift_release(v15);
    sub_10005B748((uint64_t)v3, _s11MusicVideosVMa);
    if ((v13 & 1) != 0)
      v9 = &off_1010AA198;
    else
      v9 = &off_1010AA170;
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
LABEL_10:
  sub_10005B748((uint64_t)v6, _s11MusicVideosV5ScopeOMa);
  return v9;
}

uint64_t sub_10075F710(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  id v10;
  uint64_t v11;
  int v12;
  const char *v13;
  Swift::String v14;
  _QWORD v15[2];
  _QWORD v16[6];

  v3 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s11MusicVideosVMa(0);
  v7 = *(_QWORD *)(v1 + *(int *)(v6 + 32));
  result = sub_10016CD08(v7, a1);
  if ((result & 1) == 0)
  {
    v9 = 0xD000000000000012;
    v10 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v16[3] = sub_100007E8C((uint64_t *)&unk_1011A38A0);
    v16[4] = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    v16[5] = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    v16[0] = v7;
    sub_10005B704(v1 + *(int *)(v6 + 24), (uint64_t)v5, _s11MusicVideosV5ScopeOMa);
    v11 = type metadata accessor for Artist(0);
    v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v5, 1, v11);
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      v13 = "LibraryMusicVideos";
    }
    else
    {
      sub_10005B748((uint64_t)v5, _s11MusicVideosV5ScopeOMa);
      v9 = 0xD000000000000013;
      v13 = "LibraryArtistAlbums";
    }
    v15[0] = v9;
    v15[1] = (unint64_t)(v13 - 32) | 0x8000000000000000;
    swift_bridgeObjectRetain();
    v14._countAndFlagsBits = 0x704F7265746C6946;
    v14._object = (void *)0xEC0000006E6F6974;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    NSUserDefaults.encodeValue(_:forKey:)(v16);
    swift_bridgeObjectRelease();

    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v16);
  }
  return result;
}

Swift::Int sub_10075F8F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v12[9];

  v1 = v0;
  v2 = type metadata accessor for Artist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v12, 0);
  sub_10005B704(v1, (uint64_t)v8, _s11MusicVideosV5ScopeOMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1uLL);
    v9 = sub_100048748(&qword_10119EE20, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
    dispatch thunk of Hashable.hash(into:)(v12, v2, v9);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return Hasher._finalize()();
}

void sub_10075FA54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for Artist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v2, (uint64_t)v10, _s11MusicVideosV5ScopeOMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1uLL);
    v11 = sub_100048748(&qword_10119EE20, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

Swift::Int sub_10075FB88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v14[9];

  v2 = v1;
  v4 = type metadata accessor for Artist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v14[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v14, a1);
  sub_10005B704(v2, (uint64_t)v10, _s11MusicVideosV5ScopeOMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1uLL);
    v11 = sub_100048748(&qword_10119EE20, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
    dispatch thunk of Hashable.hash(into:)(v14, v4, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return Hasher._finalize()();
}

uint64_t sub_10075FCE8()
{
  return sub_100048748(&qword_1011C7028, _s11MusicVideosV5ScopeOMa, (uint64_t)&unk_100ECE288);
}

_UNKNOWN **sub_10075FD14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _UNKNOWN **v11;
  uint64_t v13;

  v1 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s11MusicVideosVMa(0);
  sub_10005B704((uint64_t)v0 + *(int *)(v4 + 24), (uint64_t)v3, _s11MusicVideosV5ScopeOMa);
  v5 = type metadata accessor for Artist(0);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5);
  v7 = type metadata accessor for MusicLibrary(0);
  v8 = *v0;
  v9 = static MusicLibrary.shared.getter(v7);
  v10 = static MusicLibrary.== infix(_:_:)(v8, v9);
  swift_release(v9);
  if (v6 == 1)
  {
    if ((v10 & 1) != 0)
      return &off_1010A9C50;
    else
      return &off_1010A9C78;
  }
  else
  {
    if ((v10 & 1) != 0)
      v11 = &off_1010A9CA0;
    else
      v11 = &off_1010A9CC8;
    sub_10005B748((uint64_t)v3, _s11MusicVideosV5ScopeOMa);
  }
  return v11;
}

void sub_10075FE44(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v2 = v1;
  v4 = type metadata accessor for Artist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)v1;
  v11 = type metadata accessor for MusicLibrary(0);
  v12 = sub_100048748((unint64_t *)&qword_10119D2D8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
  Hasher._combine(_:)(*(_BYTE *)(v1 + 8));
  v13 = (int *)_s11MusicVideosVMa(0);
  sub_10005B704(v1 + v13[6], (uint64_t)v10, _s11MusicVideosV5ScopeOMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1uLL);
    v14 = sub_100048748(&qword_10119EE20, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v14);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v15 = (uint64_t *)(v1 + v13[7]);
  v16 = *v15;
  v17 = v15[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v16, v17);
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v2 + v13[8]);
  swift_bridgeObjectRetain();
  sub_100045DAC(a1, v18);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

void sub_10076006C()
{
  uint64_t v0;
  Swift::UInt8 v1;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease(0x8000000100E2B550);
  Hasher._combine(_:)(v1);
}

void sub_100760148(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  __n128 v18;
  uint64_t v19;

  v4 = v2;
  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TitledSection(0);
  v14 = type metadata accessor for MusicVideo(0);
  MusicLibrarySectionedRequest.init()(v13, v14, &protocol witness table for TitledSection, &protocol witness table for MusicVideo);
  v15 = *v4;
  swift_retain();
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  MusicLibrarySectionedRequest.library.setter(v15, v16);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)v4 + 8), v16);
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)((char *)v4 + *(int *)(a1 + 28)));
  sub_10005B704((uint64_t)v4 + *(int *)(a1 + 24), (uint64_t)v12, _s11MusicVideosV5ScopeOMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    KeyPath = swift_getKeyPath(&unk_100ECE490);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v9, v16);
    v18 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v18);
  }
  sub_10075EB84();
  sub_10075EF18(a2);
}

Swift::Int sub_100760314()
{
  __int128 v1[4];

  Hasher.init(_seed:)(v1, 0);
  sub_10075FE44(v1);
  return Hasher._finalize()();
}

Swift::Int sub_100760354(uint64_t a1)
{
  __int128 v2[4];

  Hasher.init(_seed:)(v2, a1);
  sub_10075FE44(v2);
  return Hasher._finalize()();
}

uint64_t sub_100760390()
{
  return sub_100048748(&qword_1011C7030, _s11MusicVideosVMa, (uint64_t)&unk_100ECE2F0);
}

uint64_t sub_1007603BC(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011C7110, _s11MusicVideosVMa, (uint64_t)&unk_100ECE318);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1007603F8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryMusicVideoInternalFilter.favoriteStatus.getter);
}

uint64_t sub_100760404@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryMusicVideoInternalSortProperties.releaseYear.getter, a2);
}

uint64_t sub_100760410@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryMusicVideoSortProperties.title.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100760454@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryMusicVideoSortProperties.artistName.getter, a2);
}

uint64_t sub_100760460@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryMusicVideoSortProperties.albumTitle.getter, a2);
}

uint64_t sub_10076046C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryMusicVideoSortProperties.trackNumber.getter(v3, v4);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v6 & 1;
  return result;
}

uint64_t sub_1007604B8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryMusicVideoSortProperties.libraryAddedDate.getter);
}

uint64_t sub_1007604C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = type metadata accessor for Artist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011C7118);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_10005B704(a1, (uint64_t)v14, _s11MusicVideosV5ScopeOMa);
  sub_10005B704(a2, v15, _s11MusicVideosV5ScopeOMa);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_10005B704((uint64_t)v14, (uint64_t)v10, _s11MusicVideosV5ScopeOMa);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = static Artist.== infix(_:_:)(v10, v7);
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_10005B748((uint64_t)v14, _s11MusicVideosV5ScopeOMa);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_10004FF60((uint64_t)v14, &qword_1011C7118);
    v17 = 0;
    return v17 & 1;
  }
  sub_10005B748((uint64_t)v14, _s11MusicVideosV5ScopeOMa);
  v17 = 1;
  return v17 & 1;
}

uint64_t sub_1007606D4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  type metadata accessor for MusicLibrary(0);
  if ((static MusicLibrary.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    goto LABEL_11;
  if (*(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8))
    goto LABEL_11;
  v4 = (int *)_s11MusicVideosVMa(0);
  if ((sub_1007604C8(a1 + v4[6], a2 + v4[6]) & 1) == 0)
    goto LABEL_11;
  v5 = v4[7];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  v10 = v6 == *v8 && v7 == v9;
  if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, *v8, v9, 0), v12 = 0, (v11 & 1) != 0))
  {
    if ((sub_10016CD08(*(_QWORD *)(a1 + v4[8]), *(_QWORD *)(a2 + v4[8])) & 1) != 0)
    {
      v13 = v4[9];
      v14 = *(_BYTE *)(a1 + v13 + 1);
      v15 = *(_BYTE *)(a2 + v13 + 1);
      sub_1005CFF5C(*(_BYTE *)(a1 + v13));
      v12 = v16 & (v14 ^ v15 ^ 1);
      return v12 & 1;
    }
LABEL_11:
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1007607C4(uint64_t a1)
{
  unint64_t v2;
  _QWORD v4[9];

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  Hasher.init(_seed:)(v4, *(_QWORD *)(a1 + 40));
  Hasher._combine(_:)(0);
  v2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a1 + 32));
  return (*(_QWORD *)(a1 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v2) & 1;
}

uint64_t sub_100760840@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryMusicVideoFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_100760884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B4938;
  if (!qword_1011B4938)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011A3840);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B4938);
  }
  return result;
}

uint64_t sub_1007608D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011B59B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for CodableImage()
{
  return &type metadata for CodableImage;
}

void sub_100760928(_QWORD *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  UIImage *v12;
  NSData *v13;
  NSData *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[2];

  v5 = sub_100007E8C(&qword_1011C7140);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100760DE0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CodableImage.CodingKeys, &type metadata for CodableImage.CodingKeys, v11, v9, v10);
  if (!a2)
    goto LABEL_7;
  v12 = a2;
  v13 = UIImageJPEGRepresentation(v12, 0.9);
  if (v13)
  {
    v14 = v13;
    v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0xF000000000000000;
  }
  v24[0] = v15;
  v24[1] = v17;
  v23 = 0;
  v18 = sub_100007E8C(&qword_1011C10F8);
  v19 = sub_100760E68();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v24, &v23, v5, v18, v19);
  if (v2)
  {

    sub_1000822B4(v15, v17);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return;
  }
  sub_1000822B4(v15, v17);
  -[UIImage scale](v12, "scale");
  v24[0] = v20;
  v23 = 1;
  v21 = sub_100228EE8();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v24, &v23, v5, &type metadata for CGFloat, v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

}

uint64_t sub_100760AF8()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C616373;
  else
    return 1635017060;
}

uint64_t sub_100760B28@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1007610B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100760B4C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100760DE0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100760B74(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100760DE0();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_100760B9C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_100760BDC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_100760BC4(_QWORD *a1)
{
  void **v1;

  sub_100760928(a1, *v1);
}

_QWORD *sub_100760BDC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  double v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  Class isa;
  uint64_t v19;
  double v20;
  unint64_t v21;
  char v22;

  v3 = sub_100007E8C(&qword_1011C7128);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_100007E68(a1, v7);
  v10 = sub_100760DE0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CodableImage.CodingKeys, &type metadata for CodableImage.CodingKeys, v10, v7, v8);
  if (!v1)
  {
    v22 = 1;
    v11 = sub_100228EA4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v20, &type metadata for CGFloat, &v22, v3, &type metadata for CGFloat, v11);
    if ((v21 & 1) != 0
      || (v13 = v20,
          v22 = 0,
          v14 = sub_100760E24(),
          KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v20, &type metadata for Data, &v22, v3, &type metadata for Data, v14), v15 = v21, v21 >> 60 == 15))
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v9 = 0;
    }
    else
    {
      v16 = *(_QWORD *)&v20;
      v17 = objc_allocWithZone((Class)UIImage);
      isa = Data._bridgeToObjectiveC()().super.isa;
      v9 = objc_msgSend(v17, "initWithData:scale:", isa, v13);
      sub_1000822B4(v16, v15);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  return v9;
}

unint64_t sub_100760DE0()
{
  unint64_t result;

  result = qword_1011C7130;
  if (!qword_1011C7130)
  {
    result = swift_getWitnessTable(&unk_100ECE648, &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011C7130);
  }
  return result;
}

unint64_t sub_100760E24()
{
  unint64_t result;

  result = qword_1011C7138;
  if (!qword_1011C7138)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1011C7138);
  }
  return result;
}

unint64_t sub_100760E68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7148;
  if (!qword_1011C7148)
  {
    v1 = sub_100044B54(&qword_1011C10F8);
    sub_100760ECC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7148);
  }
  return result;
}

unint64_t sub_100760ECC()
{
  unint64_t result;

  result = qword_1011C7150;
  if (!qword_1011C7150)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1011C7150);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CodableImage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100760F5C + 4 * byte_100ECE51D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100760F90 + 4 * byte_100ECE518[v4]))();
}

uint64_t sub_100760F90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100760F98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100760FA0);
  return result;
}

uint64_t sub_100760FAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100760FB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100760FB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100760FC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableImage.CodingKeys()
{
  return &type metadata for CodableImage.CodingKeys;
}

unint64_t sub_100760FE0()
{
  unint64_t result;

  result = qword_1011C7158;
  if (!qword_1011C7158)
  {
    result = swift_getWitnessTable(&unk_100ECE620, &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011C7158);
  }
  return result;
}

unint64_t sub_100761028()
{
  unint64_t result;

  result = qword_1011C7160;
  if (!qword_1011C7160)
  {
    result = swift_getWitnessTable(&unk_100ECE590, &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011C7160);
  }
  return result;
}

unint64_t sub_100761070()
{
  unint64_t result;

  result = qword_1011C7168;
  if (!qword_1011C7168)
  {
    result = swift_getWitnessTable(&unk_100ECE5B8, &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011C7168);
  }
  return result;
}

uint64_t sub_1007610B4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1635017060, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656C616373, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10076118C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, char a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return sub_1007611DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (uint64_t *)&unk_1011A20D0, (uint64_t *)&unk_1011C7300);
}

uint64_t sub_1007611DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, char a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t *a17, uint64_t *a18)
{
  int *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  sub_100065228(a1, a9, a17);
  v25 = (int *)sub_100007E8C(a18);
  v26 = (_QWORD *)(a9 + v25[9]);
  *v26 = a2;
  v26[1] = a3;
  sub_100065228(a4, a9 + v25[10], (uint64_t *)&unk_1011A3E10);
  sub_10005B6C0(a5, a9 + v25[11], type metadata accessor for ArtworkImage.Placeholder);
  *(double *)(a9 + v25[12]) = a10;
  v27 = a9 + v25[13];
  *(_QWORD *)v27 = a6;
  *(_BYTE *)(v27 + 8) = a7 & 1;
  *(_BYTE *)(a9 + v25[14]) = a8;
  *(_BYTE *)(a9 + v25[15]) = a11;
  *(_BYTE *)(a9 + v25[16]) = a12;
  *(_QWORD *)(a9 + v25[17]) = a13;
  sub_10005B6C0(a14, a9 + v25[18], type metadata accessor for HorizontalCellSource);
  v28 = (_QWORD *)(a9 + v25[19]);
  v29 = sub_100007E8C((uint64_t *)&unk_1011C72C0);
  v30 = sub_100049F28(&qword_1011C3198, (uint64_t *)&unk_1011C72C0, (uint64_t)&protocol conformance descriptor for OptionalObservableObject<A>);
  *v28 = ObservedObject.init(wrappedValue:)(a15, v29, v30);
  v28[1] = v31;
  sub_100065228(a16, a9 + v25[20], (uint64_t *)&unk_1011C72A0);
  v32 = a9 + v25[21];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100ECE7B8);
  *(_BYTE *)(v32 + 8) = 0;
  v33 = (_QWORD *)(a9 + v25[22]);
  v34 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v35 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v33 = EnvironmentObject.init()(v34, v35);
  v33[1] = v36;
  v37 = (_QWORD *)(a9 + v25[23]);
  v38 = type metadata accessor for NoticePresenter(0);
  v39 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v37 = EnvironmentObject.init()(v38, v39);
  v37[1] = v40;
  v41 = a9 + v25[24];
  *(_QWORD *)v41 = sub_1000DEC04;
  *(_QWORD *)(v41 + 8) = 0;
  *(_BYTE *)(v41 + 16) = 0;
  v42 = (_QWORD *)(a9 + v25[25]);
  v43 = type metadata accessor for NavigationPusher();
  v44 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v42 = EnvironmentObject.init()(v43, v44);
  v42[1] = v45;
  v46 = (_QWORD *)(a9 + v25[26]);
  v47 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v48 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v46 = EnvironmentObject.init()(v47, v48);
  v46[1] = v49;
  v50 = (_QWORD *)(a9 + v25[27]);
  v51 = type metadata accessor for TabSelectionManager(0);
  v52 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v50 = EnvironmentObject.init()(v51, v52);
  v50[1] = v53;
  v54 = a9 + v25[28];
  *(_QWORD *)v54 = swift_getKeyPath(&unk_100ECE7E0);
  *(_QWORD *)(v54 + 8) = 0;
  *(_BYTE *)(v54 + 16) = 0;
  v55 = a9 + v25[29];
  result = swift_getKeyPath(&unk_100ECE808);
  *(_QWORD *)v55 = result;
  *(_QWORD *)(v55 + 8) = 0;
  *(_BYTE *)(v55 + 16) = 0;
  return result;
}

uint64_t sub_100761530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100007E8C(&qword_1011A3C78);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TitledSection(0);
  v5 = type metadata accessor for Song(0);
  MusicLibrarySectionedRequest.init()(v4, v5, &protocol witness table for TitledSection, &protocol witness table for Song);
  v6 = sub_100049F28(&qword_1011A3C80, &qword_1011A3C78, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v7 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v0, v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

uint64_t sub_10076160C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  char *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  unsigned __int8 v131;

  v2 = v1;
  v122 = a1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3CA0);
  __chkstk_darwin(v3);
  v121 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for ToolbarItemPlacement(0);
  v118 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v119 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v116 = (char *)&v94 - v7;
  v115 = sub_100007E8C(&qword_1011C73D8);
  __chkstk_darwin(v115);
  v114 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100007E8C(&qword_1011C73E0);
  __chkstk_darwin(v108);
  v106 = (uint64_t)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100007E8C(&qword_1011C73E8);
  __chkstk_darwin(v107);
  v11 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v111 = (uint64_t)&v94 - v13;
  v126 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v126);
  v113 = (uint64_t)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v101 = (uint64_t)&v94 - v16;
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v94 - v18);
  v20 = sub_100007E8C((uint64_t *)&unk_1011C73F0);
  __chkstk_darwin(v20);
  v109 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v110 = (uint64_t)&v94 - v23;
  v112 = sub_100007E8C(&qword_1011AC050);
  __chkstk_darwin(v112);
  v127 = (char *)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011C7400);
  __chkstk_darwin(v25);
  v117 = (uint64_t)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *v1;
  v28 = v2[1];
  v29 = *((unsigned __int8 *)v2 + 16);
  v30 = sub_100007E8C(&qword_1011C7408);
  v31 = sub_100049F28(&qword_1011C7410, &qword_1011C7408, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v32 = StateObject.wrappedValue.getter(v27, v28, v29, v30, v31);
  v33 = _s9SongsViewVMa(0);
  v34 = (char *)v2 + *(int *)(v33 + 20);
  v128 = v19;
  v105 = v34;
  sub_10082460C((uint64_t)v19);
  v124 = *v19;
  swift_retain();
  sub_10022D14C((uint64_t)v19);
  v100 = ObservedObject.init(wrappedValue:)(v32, v30, v31);
  v123 = v35;
  v99 = static SafeAreaRegions.all.getter(v36);
  v98 = static Edge.Set.all.getter(v99);
  StateObject.wrappedValue.getter(*v2, v2[1], *((unsigned __int8 *)v2 + 16), v30, v31);
  v104 = *(int *)(v33 + 24);
  v37 = *(_QWORD *)((char *)v2 + v104);
  AppStorage.projectedValue.getter(&v129, v37, &type metadata for Library.ContentFilterOption, v38);
  v40 = v129;
  v39 = v130;
  v97 = v131;
  swift_retain();
  swift_retain();
  swift_retain();
  v96 = ObservedObject.init(wrappedValue:)(v41, v30, v31);
  v95 = v42;
  swift_release();
  swift_release();
  swift_release();
  v43 = v101;
  sub_10082460C(v101);
  AppStorage.wrappedValue.getter(&v129, v37, &type metadata for Library.ContentFilterOption);
  LOBYTE(v37) = v129;
  v44 = (uint64_t)v128;
  sub_10042BA78(v43, (uint64_t)v128);
  *(_BYTE *)(v44 + *(int *)(v126 + 56)) = v37;
  sub_10022D14C(v43);
  v125 = v2;
  v45 = *v2;
  v46 = v2[1];
  v47 = *((unsigned __int8 *)v2 + 16);
  v103 = v30;
  v102 = v31;
  StateObject.wrappedValue.getter(v45, v46, v47, v30, v31);
  v48 = v44;
  v49 = v106;
  sub_10042BA78(v48, v106);
  v50 = (_QWORD *)(v49 + *(int *)(v108 + 36));
  swift_retain();
  *v50 = ObservedObject.init(wrappedValue:)(v51, v30, v31);
  v50[1] = v52;
  v53 = v107;
  sub_10004A160(v49, (uint64_t)&v11[*(int *)(v107 + 36)], &qword_1011C73E0);
  v54 = v123;
  v55 = v124;
  *(_QWORD *)v11 = v100;
  *((_QWORD *)v11 + 1) = v54;
  v56 = v99;
  *((_QWORD *)v11 + 2) = v55;
  *((_QWORD *)v11 + 3) = v56;
  v11[32] = v98;
  v57 = v95;
  *((_QWORD *)v11 + 5) = v96;
  *((_QWORD *)v11 + 6) = v57;
  *((_QWORD *)v11 + 7) = v40;
  *((_QWORD *)v11 + 8) = v39;
  v11[72] = v97;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10004FF60(v49, &qword_1011C73E0);
  v58 = v111;
  sub_100065228((uint64_t)v11, v111, &qword_1011C73E8);
  v59 = v114;
  sub_10004A160(v58, v114, &qword_1011C73E8);
  v60 = v59;
  swift_storeEnumTagMultiPayload(v59, v115, 0);
  v61 = sub_100007E8C(&qword_1011C7418);
  v62 = sub_1007665D8();
  v63 = sub_10076665C();
  v64 = (uint64_t)v109;
  _ConditionalContent<>.init(storage:)(v60, v53, v61, v62, v63);
  sub_10004FF60(v58, &qword_1011C73E8);
  v65 = v110;
  sub_100065228(v64, v110, (uint64_t *)&unk_1011C73F0);
  swift_release();
  sub_10022D14C((uint64_t)v128);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v66 = swift_release();
  v67 = v104;
  v68 = AppStorage.projectedValue.getter(&v129, *(_QWORD *)((char *)v125 + v104), &type metadata for Library.ContentFilterOption, v66);
  v69 = v129;
  v70 = v130;
  LOBYTE(v53) = v131;
  v71 = v116;
  static ToolbarItemPlacement.navigationBarTrailing.getter(v68);
  v72 = (uint64_t)v127;
  v73 = &v127[*(int *)(v112 + 36)];
  v74 = _s25SortFilterContentModifierVMa(0);
  v75 = v118;
  v76 = v120;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(&v73[*(int *)(v74 + 24)], v71, v120);
  *v73 = 6;
  *((_QWORD *)v73 + 1) = v69;
  *((_QWORD *)v73 + 2) = v70;
  v73[24] = v53;
  v77 = (uint64_t)v119;
  sub_10004A160(v65, v72, (uint64_t *)&unk_1011C73F0);
  v78 = *(void (**)(char *, uint64_t))(v75 + 8);
  v78(v71, v76);
  v79 = sub_10004FF60(v65, (uint64_t *)&unk_1011C73F0);
  static ToolbarItemPlacement.navigationBarTrailing.getter(v79);
  v80 = (uint64_t)v128;
  sub_10082460C((uint64_t)v128);
  v81 = v125;
  AppStorage.wrappedValue.getter(&v129, *(_QWORD *)((char *)v125 + v67), &type metadata for Library.ContentFilterOption);
  LOBYTE(v69) = v129;
  v82 = v113;
  sub_10042BA78(v80, v113);
  v83 = (_QWORD *)v82;
  *(_BYTE *)(v82 + *(int *)(v126 + 56)) = v69;
  sub_10022D14C(v80);
  v84 = (uint64_t)v121;
  StateObject.wrappedValue.getter(*v81, v81[1], *((unsigned __int8 *)v81 + 16), v103, v102);
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v85);
  swift_release();
  v86 = sub_100007E8C((uint64_t *)&unk_1011A3CB0);
  v87 = *(_QWORD *)(v86 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v84, 1, v86) == 1)
  {
    sub_10004FF60(v84, (uint64_t *)&unk_1011A3CA0);
    v88 = 1;
  }
  else
  {
    v89 = MusicLibrarySectionedResponse.sections.getter(v86);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v84, v86);
    v90 = *(_QWORD *)(v89 + 16);
    swift_bridgeObjectRelease();
    v88 = v90 == 0;
  }
  v91 = v117;
  v92 = (uint64_t)v127;
  sub_100302368(v77, v83, v88, v117);
  sub_10022D14C((uint64_t)v83);
  v78((char *)v77, v76);
  sub_10004FF60(v92, &qword_1011AC050);
  return sub_100065228(v91, v122, &qword_1011C7400);
}

void sub_100761EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7;

  *(_QWORD *)(a1
            + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_library) = a5;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1
            + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_response) = a4;
  swift_retain_n(a4, 2);
  swift_release();
  v7 = sub_10076207C();
  objc_msgSend(v7, "reloadData");
  swift_release();

}

id sub_100761F84()
{
  _s9SongsViewV19SongsViewControllerCMa(0);
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
}

void sub_100761FAC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_100761EF0(a1, a2, *v2, v2[1], v2[2]);
}

uint64_t sub_100761FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1007669B8();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100762008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1007669B8();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100762058(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1007669B8();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

id sub_10076207C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController____lazy_storage___collectionView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController____lazy_storage___collectionView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController____lazy_storage___collectionView);
  }
  else
  {
    v4 = sub_1007620DC();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1007620DC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD v9[6];

  v0 = swift_allocObject(&unk_1010DA570, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  v1 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v9[4] = sub_10076452C;
  v9[5] = v0;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1008E31AC;
  v9[3] = &unk_1010DA588;
  v2 = _Block_copy(v9);
  v3 = objc_msgSend(v1, "initWithSectionProvider:", v2, swift_retain().n128_f64[0]);
  _Block_release(v2);
  swift_release();
  swift_release();
  v4 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v3, 0.0, 0.0, 0.0, 0.0);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = v4;
  v7 = objc_msgSend(v5, "clearColor");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  return v6;
}

id sub_100762244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  NSString v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  Class isa;
  void *Strong;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  double v28;
  uint64_t v30[3];

  v4 = a3 + 16;
  v5 = objc_msgSend(objc_allocWithZone((Class)_UICollectionViewListLayoutSectionConfiguration), "initWithAppearanceStyle:layoutEnvironment:", 0, a2);
  objc_msgSend(v5, "setRowHeight:", 68.0);
  objc_msgSend(v5, "setSeparatorStyle:", 0);
  v6 = objc_msgSend(objc_allocWithZone((Class)_UICollectionViewListLayoutSection), "initWithConfiguration:layoutEnvironment:", v5, a2);
  v7 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v8 = objc_msgSend(v7, "fractionalWidthDimension:", 1.0);
  v9 = objc_msgSend(v7, "estimatedDimension:", 1.0);
  v10 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v8, v9);

  static String._unconditionallyBridgeFromObjectiveC(_:)(_UICollectionViewListLayoutElementKindSectionHeader);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v11, v12, 1);

  objc_msgSend(v13, "setPinToVisibleBounds:", 0);
  objc_msgSend(v13, "setZIndex:", 0x7FFFFFFFFFFFFFFFLL);
  v14 = v6;
  v15 = v13;
  v16 = objc_msgSend(v14, "boundarySupplementaryItems");
  v17 = sub_10004A07C(0, (unint64_t *)&unk_1011B42F0, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  v30[0] = v18;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v21 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v20 = *(_QWORD *)((v30[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v21 >= v20 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
  v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v15);
  specialized Array._endMutation()(v22);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  swift_beginAccess(v4, v30, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  v25 = v14;
  if (!Strong
    || (v26 = sub_100763D24(), Strong, !v26)
    || (v27 = v26[2], swift_bridgeObjectRelease(), v28 = 30.0, !v27))
  {
    v28 = 14.0;
  }
  objc_msgSend(v25, "setContentInsets:", 0.0, 0.0, 0.0, v28);

  return v25;
}

void sub_100762578()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  _BYTE v39[24];
  objc_super v40;

  v1 = sub_100007E8C((uint64_t *)&unk_1011C7200);
  __chkstk_darwin(v1);
  v3 = &v39[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_100007E8C((uint64_t *)&unk_1011B8D18);
  __chkstk_darwin(v4);
  v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (objc_class *)_s9SongsViewV19SongsViewControllerCMa(0);
  v40.receiver = v0;
  v40.super_class = v7;
  objc_msgSendSuper2(&v40, "viewDidLoad");
  v8 = swift_allocObject(&unk_1010DA5C0, 24, 7);
  *(_QWORD *)(v8 + 16) = v0;
  v9 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v10 = type metadata accessor for Song(0);
  v11 = v0;
  UICollectionView.CellRegistration.init(handler:)(sub_1007647D0, v8, v9, v10);
  v12 = sub_100007E8C((uint64_t *)&unk_1011B8CE0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
  v13 = (uint64_t)&v11[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_cellRegistration];
  swift_beginAccess(&v11[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_cellRegistration], v39, 33, 0);
  sub_1000A5508((uint64_t)v6, v13, (uint64_t *)&unk_1011B8D18);
  swift_endAccess(v39);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(_UICollectionViewListLayoutElementKindSectionHeader);
  v16 = v15;
  v17 = swift_allocObject(&unk_1010DA5E8, 24, 7);
  *(_QWORD *)(v17 + 16) = v11;
  v18 = v11;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v14, v16, sub_1007647D8, v17, v9);
  v19 = sub_100007E8C(&qword_1011B5650);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 0, 1, v19);
  v20 = (uint64_t)&v18[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_headerRegistration];
  swift_beginAccess(&v18[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_headerRegistration], v39, 33, 0);
  sub_1000A5508((uint64_t)v3, v20, (uint64_t *)&unk_1011C7200);
  swift_endAccess(v39);
  v21 = sub_10076207C();
  objc_msgSend(v21, "setDataSource:", v18);

  v22 = sub_10076207C();
  v23 = objc_msgSend(v18, "view");
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v23, "frame");
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v32 = v31;

    objc_msgSend(v22, "setFrame:", v26, v28, v30, v32);
    v33 = sub_10076207C();
    objc_msgSend(v33, "setAllowsSelection:", 0);

    v34 = sub_10076207C();
    objc_msgSend(v34, "setAutoresizingMask:", 18);

    v35 = objc_msgSend(v18, "view");
    if (v35)
    {
      v36 = v35;
      v37 = sub_10076207C();
      objc_msgSend(v36, "addSubview:", v37);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1007628E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v6 = sub_100007E8C((uint64_t *)&unk_1011C7240);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a4
                  + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_response);
  if (v11
    && (v12 = *(_QWORD *)(a4
                        + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_library)) != 0)
  {
    __chkstk_darwin(v8);
    *(&v17 - 4) = a3;
    *(&v17 - 3) = v12;
    *(&v17 - 2) = v11;
    swift_retain();
    swift_retain();
    v13 = sub_100007E8C(&qword_1011C7258);
    v14 = sub_10005610C(&qword_1011C7260, &qword_1011C7258, (void (*)(void))sub_1007647F4);
    v15 = UIHostingConfiguration<>.init(content:)(sub_1007647E8, &v17 - 6, v13, v14);
    v16 = static Edge.Set.horizontal.getter(v15);
    v19 = v6;
    v20 = sub_100049F28(&qword_1011C7298, (uint64_t *)&unk_1011C7240, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v18);
    UIHostingConfiguration.margins(_:_:)(v16, v6, 0.0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    UICollectionViewCell.contentConfiguration.setter(v18);
    swift_release();
    swift_release();
  }
  else
  {
    v19 = sub_100007E8C(&qword_1011A3F58);
    v20 = sub_100049F28(&qword_1011C7250, &qword_1011A3F58, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v18);
    UIHostingConfiguration<>.init(content:)(UIScreen.Dimensions.size.getter, 0, &type metadata for EmptyView, &protocol witness table for EmptyView);
    UICollectionViewCell.contentConfiguration.setter(v18);
  }
}

uint64_t sub_100762AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, __n128);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;

  v62 = a3;
  v61 = a2;
  v70 = a4;
  v5 = type metadata accessor for Song(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v67 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v11);
  v64 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v13);
  v63 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for HorizontalCellSource(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v18);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C((uint64_t *)&unk_1011C7280);
  __chkstk_darwin(v21);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_1011C7270);
  __chkstk_darwin(v65);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100007E8C(&qword_1011C7258);
  v26 = __chkstk_darwin(v66);
  v68 = (uint64_t)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v59 = a1;
  v60(v20, a1, v5, v26);
  v69 = v6;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v20, 0, 1, v5);
  v28 = v61;
  v29 = swift_retain();
  dispatch thunk of MusicAutoupdatingResponse.request.getter(v29);
  swift_storeEnumTagMultiPayload(v17, v15, 1);
  MusicLibrary.state<A>(for:)(a1, v5, &protocol witness table for Song);
  *((_QWORD *)&v72 + 1) = sub_100007E8C((uint64_t *)&unk_1011C72B0);
  *(_QWORD *)&v73 = sub_100049F28(&qword_1011AFA30, (uint64_t *)&unk_1011C72B0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  sub_100049F68(&v71);
  dispatch thunk of MusicLibrary.ItemState.$downloadStatus.getter(v30);
  swift_release();
  v31 = sub_100007E8C((uint64_t *)&unk_1011C72C0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  v32 = OptionalObservableObject.init(publisher:)((uint64_t)&v71);
  v33 = type metadata accessor for ArtworkImage.ViewModel(0);
  v34 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v63, 1, 1, v33);
  v35 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v36 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v64, 1, 10, v35);
  *v10 = swift_getKeyPath(&unk_100ECE790);
  v37 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  swift_storeEnumTagMultiPayload(v10, v37, 0);
  v55 = (uint64_t)v17;
  v38 = (uint64_t)v67;
  sub_1007611DC((uint64_t)v20, 0, 0, v34, v36, 0, 1, 0, (uint64_t)v23, 1.0, 0, 1, v28, v55, (uint64_t)v32, (uint64_t)v10, &qword_10119E480, (uint64_t *)&unk_1011C7280);
  ((void (*)(uint64_t, uint64_t, uint64_t))v60)(v38, v59, v5);
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v39 = Player.state<A>(for:)(v38, v5, (uint64_t)&protocol witness table for Song);
  v40 = sub_100007E8C((uint64_t *)&unk_1011B8D60);
  v41 = sub_100049F28((unint64_t *)&unk_1011C72E0, (uint64_t *)&unk_1011B8D60, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
  v42 = ObservedObject.init(wrappedValue:)(v39, v40, v41);
  v44 = v43;
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v38, v5);
  sub_10004A160((uint64_t)v23, (uint64_t)v25, (uint64_t *)&unk_1011C7280);
  v45 = (uint64_t *)&v25[*(int *)(v65 + 36)];
  *v45 = v42;
  v45[1] = v44;
  v46 = sub_10004FF60((uint64_t)v23, (uint64_t *)&unk_1011C7280);
  v47 = static Alignment.center.getter(v46);
  LOBYTE(v57) = 1;
  LOBYTE(v56) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v71, 0, 1, 0, 1, 0, 1, 0x4051000000000000, 0, 0, v56, 0, v57, v47, v48);
  v49 = v68;
  sub_10004A160((uint64_t)v25, v68, &qword_1011C7270);
  v50 = (_OWORD *)(v49 + *(int *)(v66 + 36));
  v51 = v76;
  v50[4] = v75;
  v50[5] = v51;
  v50[6] = v77;
  v52 = v72;
  *v50 = v71;
  v50[1] = v52;
  v53 = v74;
  v50[2] = v73;
  v50[3] = v53;
  sub_10004FF60((uint64_t)v25, &qword_1011C7270);
  return sub_100065228(v49, v70, &qword_1011C7258);
}

unint64_t sub_1007630F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  unint64_t result;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];

  v6 = sub_100007E8C(&qword_1011C7210);
  v35 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C7218);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011C7220);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a5
                  + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_response)
    || (KeyPath = swift_getKeyPath(&unk_100ECE720),
        swift_retain(),
        dispatch thunk of MusicAutoupdatingResponse.subscript.getter(v36, KeyPath),
        swift_release(),
        swift_release(),
        (v18 = v36[0]) == 0))
  {
    v25 = sub_100007E8C((uint64_t *)&unk_1011C71F0);
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v25 - 8) + 56))(v15, 1, 1, v25, v26);
    goto LABEL_7;
  }
  result = IndexPath.section.getter(v17);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = result;
    if (result < *(_QWORD *)(v18 + 16))
    {
      v21 = sub_100007E8C((uint64_t *)&unk_1011C71F0);
      v34 = v6;
      v22 = *(_QWORD *)(v21 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v15, v18+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v20, v21);
      v23 = swift_bridgeObjectRelease();
      v6 = v34;
      v24 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v22 + 56))(v15, 0, 1, v21, v23);
LABEL_7:
      __chkstk_darwin(v24);
      *(&v33 - 2) = (uint64_t)v15;
      v27 = sub_100007E8C((uint64_t *)&unk_1011B57F0);
      v28 = sub_1001DAEF8();
      v29 = UIHostingConfiguration<>.init(content:)(sub_1007647E0, &v33 - 4, v27, v28);
      v36[0] = static Color.clear.getter(v29);
      UIHostingConfiguration.background<A>(_:)(v36, v6, &type metadata for Color, &protocol witness table for Color);
      v30 = swift_release();
      v31 = (*(uint64_t (**)(char *, uint64_t, __n128))(v35 + 8))(v8, v6, v30);
      v32 = static Edge.Set.leading.getter(v31);
      v36[3] = v9;
      v36[4] = sub_100049F28(&qword_1011C7238, &qword_1011C7218, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
      sub_100049F68(v36);
      UIHostingConfiguration.margins(_:_:)(v32, v9, 44.0);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      UICollectionViewCell.contentConfiguration.setter(v36);
      return sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011C7220);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10076341C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t KeyPath;
  __n128 v12;
  Swift::Int v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  v4 = sub_100007E8C((uint64_t *)&unk_1011C7220);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v6, (uint64_t *)&unk_1011C7220);
  v7 = sub_100007E8C((uint64_t *)&unk_1011C71F0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011C7220);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_100ECE760);
    MusicLibrarySection.subscript.getter(KeyPath, v7);
    v12 = swift_release();
    v9 = v18[0];
    v10 = v18[1];
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v6, v7, v12);
  }
  v13 = sub_1004872C4((uint64_t)&off_1010AD430);
  result = Text.init(optional:options:)(v9, v10, v13);
  *a2 = result;
  a2[1] = v15;
  a2[2] = v16;
  a2[3] = v17;
  return result;
}

uint64_t sub_100763614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v52 = a2;
  v47 = a1;
  v45 = type metadata accessor for IndexPath(0);
  v43 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v44 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v4);
  v46 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011B8D18);
  __chkstk_darwin(v6);
  v51 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011B8DA0);
  v48 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011C71F0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Song(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v49 = (char *)&v42 - v21;
  v50 = v2;
  if (!*(_QWORD *)(v2
                  + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_response))
    goto LABEL_10;
  KeyPath = swift_getKeyPath(&unk_100ECE720);
  swift_retain();
  dispatch thunk of MusicAutoupdatingResponse.subscript.getter(&v53, KeyPath);
  swift_release();
  v20 = swift_release();
  v24 = v53;
  if (!v53)
    goto LABEL_10;
  v25 = IndexPath.section.getter(v23);
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v25 < *(_QWORD *)(v24 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v24+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v25, v11);
    v26 = swift_bridgeObjectRelease();
    MusicLibrarySection.items.getter(v11, v26);
    v27 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v28 = v52;
    v29 = IndexPath.item.getter(v27);
    MusicItemCollection.subscript.getter(v29, v8);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v8);
    v30 = v49;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v49, v18, v15);
    v31 = v50
        + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_cellRegistration;
    swift_beginAccess(v50+ OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_cellRegistration, &v53, 0, 0);
    v32 = v51;
    sub_10004A160(v31, v51, (uint64_t *)&unk_1011B8D18);
    v33 = sub_100007E8C((uint64_t *)&unk_1011B8CE0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) != 1)
    {
      v35 = (uint64_t)v46;
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v46, v30, v15);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v35, 0, 1, v15);
      v36 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
      v37 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v32, v28, v35, v36, v15);
      sub_10004FF60(v35, &qword_10119E480);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v30, v15);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
      return v37;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  v39 = v45;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v43 + 16))(v44, v52, v45, v20);
  v53 = 0;
  v54 = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  v53 = 0xD000000000000021;
  v54 = 0x8000000100E442A0;
  v40 = sub_100048748((unint64_t *)&unk_1011A9AC0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v41._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v39, v40);
  String.append(_:)(v41);
  swift_bridgeObjectRelease();
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v53, v54, "Music/LibrarySongsView.swift", 28, 2, 148, 0);
  __break(1u);
  return result;
}

_QWORD *sub_100763D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  v1 = sub_100007E8C((uint64_t *)&unk_1011C71F0);
  v23 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_response;
  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_response))
    return 0;
  KeyPath = swift_getKeyPath(&unk_100ECE6E0);
  swift_retain();
  dispatch thunk of MusicAutoupdatingResponse.subscript.getter(&v24, KeyPath);
  swift_release();
  swift_release();
  v6 = 0;
  if ((v25 & 1) == 0 && v24 >= 100)
  {
    v6 = _swiftEmptyArrayStorage;
    if (*(_QWORD *)(v0 + v4))
    {
      v7 = swift_getKeyPath(&unk_100ECE720);
      swift_retain();
      dispatch thunk of MusicAutoupdatingResponse.subscript.getter(&v27, v7);
      swift_release();
      swift_release();
      v8 = v27;
      if (v27)
      {
        v9 = *(_QWORD *)(v27 + 16);
        if (v9)
        {
          v26 = _swiftEmptyArrayStorage;
          sub_10035C6F8(0, v9, 0);
          v10 = v8 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
          v22 = *(_QWORD *)(v23 + 72);
          v11 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
          v20 = v8;
          v21 = v11;
          v6 = v26;
          do
          {
            v21(v3, v10, v1);
            v12 = swift_getKeyPath(&unk_100ECE760);
            MusicLibrarySection.subscript.getter(v12, v1);
            v13 = swift_release();
            (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v3, v1, v13);
            v15 = v24;
            v14 = v25;
            if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
            {
              sub_10035C6F8(0, v6[2] + 1, 1);
              v6 = v26;
            }
            v17 = v6[2];
            v16 = v6[3];
            if (v17 >= v16 >> 1)
            {
              sub_10035C6F8(v16 > 1, v17 + 1, 1);
              v6 = v26;
            }
            v6[2] = v17 + 1;
            v18 = &v6[2 * v17];
            v18[4] = v15;
            v18[5] = v14;
            v10 += v22;
            --v9;
          }
          while (v9);
        }
        swift_bridgeObjectRelease();
      }
    }
  }
  return v6;
}

id sub_10076407C(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSString v10;
  id v11;
  objc_super v13;

  *(_QWORD *)&v3[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_response] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_library] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController____lazy_storage___collectionView] = 0;
  v6 = &v3[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_cellRegistration];
  v7 = sub_100007E8C((uint64_t *)&unk_1011B8CE0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = &v3[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_headerRegistration];
  v9 = sub_100007E8C(&qword_1011B5650);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  if (a2)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = v3;
  v13.super_class = (Class)_s9SongsViewV19SongsViewControllerCMa(0);
  v11 = objc_msgSendSuper2(&v13, "initWithNibName:bundle:", v10, a3);

  return v11;
}

id sub_1007641F8(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_response] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_library] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController____lazy_storage___collectionView] = 0;
  v3 = &v1[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_cellRegistration];
  v4 = sub_100007E8C((uint64_t *)&unk_1011B8CE0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = &v1[OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_headerRegistration];
  v6 = sub_100007E8C(&qword_1011B5650);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v9.receiver = v1;
  v9.super_class = (Class)_s9SongsViewV19SongsViewControllerCMa(0);
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_100764300()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s9SongsViewV19SongsViewControllerCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1007643B0()
{
  return _s9SongsViewV19SongsViewControllerCMa(0);
}

uint64_t _s9SongsViewV19SongsViewControllerCMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C71C0, (uint64_t)&_s9SongsViewV19SongsViewControllerCMn);
}

void sub_1007643CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = "\b";
  v6[1] = "\b";
  v6[2] = "\b";
  sub_1001AB544(319, (unint64_t *)&unk_1011C71D0, (uint64_t *)&unk_1011B8CE0);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001AB544(319, (unint64_t *)&unk_1011C71E0, &qword_1011B5650);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

void *sub_100764484()
{
  return &protocol witness table for TitledSection;
}

void *sub_100764490()
{
  return &protocol witness table for Song;
}

uint64_t sub_10076449C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A3CB0);
  result = MusicLibrarySectionedResponse.totalItemCount.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1007644D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A3CB0);
  result = MusicLibrarySectionedResponse.sections.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_100764508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

id sub_10076452C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100762244(a1, a2, v2);
}

uint64_t sub_100764534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100764544(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10076454C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_response);
  if (!v1)
    return 0;
  KeyPath = swift_getKeyPath(&unk_100ECE720);
  swift_retain(v1);
  dispatch thunk of MusicAutoupdatingResponse.subscript.getter(&v5, KeyPath);
  swift_release(KeyPath);
  swift_release(v1);
  if (!v5)
    return 0;
  v3 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease(v5);
  return v3;
}

void sub_1007645CC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[8];
  uint64_t v19;

  v3 = sub_100007E8C((uint64_t *)&unk_1011B8DA0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011C71F0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library9SongsViewP33_E3F5F7086ECA7634E91FC0DB0840FB7819SongsViewController_response))
  {
    KeyPath = swift_getKeyPath(&unk_100ECE720);
    swift_retain();
    dispatch thunk of MusicAutoupdatingResponse.subscript.getter(&v19, KeyPath);
    swift_release();
    v12 = swift_release();
    if (v19)
    {
      if ((a1 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)(v19 + 16) > a1)
      {
        (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))(v10, v19+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * a1, v7, v12);
        v13 = swift_bridgeObjectRelease();
        MusicLibrarySection.items.getter(v7, v13);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        v14 = sub_100049F28(&qword_1011ACBF0, (uint64_t *)&unk_1011B8DA0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
        dispatch thunk of Collection.startIndex.getter(v3);
        dispatch thunk of Collection.endIndex.getter(&v17, v3, v14);
        v15 = dispatch thunk of Collection.distance(from:to:)(v18, &v17, v3, v14);
        (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v15);
        return;
      }
      __break(1u);
    }
  }
}

uint64_t sub_1007647AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1007647D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1007628E0(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

unint64_t sub_1007647D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1007630F0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1007647E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10076341C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1007647E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100762AF8(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_1007647F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7268;
  if (!qword_1011C7268)
  {
    v1 = sub_100044B54(&qword_1011C7270);
    sub_100049F28(&qword_1011C7278, (uint64_t *)&unk_1011C7280, (uint64_t)&unk_100EBA7E8);
    sub_100049F28(&qword_1011B70E0, &qword_1011C7290, (uint64_t)&unk_100EC08A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7268);
  }
  return result;
}

unint64_t sub_1007648B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v24 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v6 = a3;
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(int *)(v6 + 20);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(v3 + v10);
    v13 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
    *v11 = *v12;
    if (EnumCaseMultiPayload == 1)
    {
      v67 = v13;
      v68 = v3;
      v69 = v6;
      v15 = (int *)type metadata accessor for Library.Context(0);
      v16 = v15[5];
      v17 = (char *)v11 + v16;
      v18 = (char *)v12 + v16;
      v19 = type metadata accessor for Album(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48);
      v22 = swift_retain();
      if (v21(v18, 1, v19, v22))
      {
        v23 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v26 = v15[6];
      v27 = (char *)v11 + v26;
      v28 = (char *)v12 + v26;
      v29 = type metadata accessor for Artist(0);
      v30 = *(_QWORD *)(v29 - 8);
      v3 = v68;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v15[7];
      v33 = (char *)v11 + v32;
      v34 = (char *)v12 + v32;
      v35 = type metadata accessor for Composer(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v15[8];
      v39 = (char *)v11 + v38;
      v40 = (char *)v12 + v38;
      v41 = type metadata accessor for Genre(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_10119ED08);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v15[9];
      v45 = (char *)v11 + v44;
      v46 = (char *)v12 + v44;
      v47 = type metadata accessor for Playlist(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v15[10];
      v51 = (char *)v11 + v50;
      v52 = (char *)v12 + v50;
      v53 = type metadata accessor for TVShow(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v56 = v15[11];
      v57 = (char *)v11 + v56;
      v58 = (char *)v12 + v56;
      v59 = type metadata accessor for TVSeason(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        v61 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      v6 = v69;
      *((_BYTE *)v11 + v15[12]) = *((_BYTE *)v12 + v15[12]);
      *((_BYTE *)v11 + v15[13]) = *((_BYTE *)v12 + v15[13]);
      *((_BYTE *)v11 + v15[14]) = *((_BYTE *)v12 + v15[14]);
      v62 = v15[15];
      v63 = (_QWORD *)((char *)v11 + v62);
      v64 = (_QWORD *)((char *)v12 + v62);
      v65 = v64[1];
      *v63 = *v64;
      v63[1] = v65;
      *(_QWORD *)((char *)v11 + v15[16]) = *(_QWORD *)((char *)v12 + v15[16]);
      *((_BYTE *)v11 + v15[17]) = *((_BYTE *)v12 + v15[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = 1;
      v13 = v67;
    }
    else
    {
      swift_retain();
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v25);
    *(_QWORD *)(a1 + *(int *)(v6 + 24)) = *(_QWORD *)(v3 + *(int *)(v6 + 24));
  }
  swift_retain();
  return a1;
}

double sub_100764DD0(uint64_t *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  int *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double result;

  sub_1000A6174(*a1, a1[1]);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v7 = (int *)type metadata accessor for Library.Context(0);
    v8 = &v4[v7[5]];
    v9 = type metadata accessor for Album(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = &v4[v7[6]];
    v12 = type metadata accessor for Artist(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    v14 = &v4[v7[7]];
    v15 = type metadata accessor for Composer(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    v17 = &v4[v7[8]];
    v18 = type metadata accessor for Genre(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    v20 = &v4[v7[9]];
    v21 = type metadata accessor for Playlist(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
    v23 = &v4[v7[10]];
    v24 = type metadata accessor for TVShow(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
    v26 = &v4[v7[11]];
    v27 = type metadata accessor for TVSeason(0);
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10076503C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v4 = a2;
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(v4 + v9);
  v12 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  *v10 = *v11;
  if (EnumCaseMultiPayload == 1)
  {
    v65 = v12;
    v66 = a3;
    v67 = v4;
    v14 = (int *)type metadata accessor for Library.Context(0);
    v15 = v14[5];
    v16 = (char *)v10 + v15;
    v17 = (char *)v11 + v15;
    v18 = type metadata accessor for Album(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v19 + 48);
    v21 = swift_retain();
    if (v20(v17, 1, v18, v21))
    {
      v22 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v24 = v14[6];
    v25 = (char *)v10 + v24;
    v26 = (char *)v11 + v24;
    v27 = type metadata accessor for Artist(0);
    v28 = *(_QWORD *)(v27 - 8);
    v4 = v67;
    v12 = v65;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v30 = v14[7];
    v31 = (char *)v10 + v30;
    v32 = (char *)v11 + v30;
    v33 = type metadata accessor for Composer(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v36 = v14[8];
    v37 = (char *)v10 + v36;
    v38 = (char *)v11 + v36;
    v39 = type metadata accessor for Genre(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_100007E8C(&qword_10119ED08);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v42 = v14[9];
    v43 = (char *)v10 + v42;
    v44 = (char *)v11 + v42;
    v45 = type metadata accessor for Playlist(0);
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      v47 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    v48 = v14[10];
    v49 = (char *)v10 + v48;
    v50 = (char *)v11 + v48;
    v51 = type metadata accessor for TVShow(0);
    v52 = *(_QWORD *)(v51 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      v53 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    v54 = v14[11];
    v55 = (char *)v10 + v54;
    v56 = (char *)v11 + v54;
    v57 = type metadata accessor for TVSeason(0);
    v58 = *(_QWORD *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      v59 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    *((_BYTE *)v10 + v14[12]) = *((_BYTE *)v11 + v14[12]);
    *((_BYTE *)v10 + v14[13]) = *((_BYTE *)v11 + v14[13]);
    *((_BYTE *)v10 + v14[14]) = *((_BYTE *)v11 + v14[14]);
    v60 = v14[15];
    v61 = (_QWORD *)((char *)v10 + v60);
    v62 = (_QWORD *)((char *)v11 + v60);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    *(_QWORD *)((char *)v10 + v14[16]) = *(_QWORD *)((char *)v11 + v14[16]);
    *((_BYTE *)v10 + v14[17]) = *((_BYTE *)v11 + v14[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = 1;
    a3 = v66;
  }
  else
  {
    swift_retain();
    v23 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v23);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(v4 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

uint64_t sub_100765534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  int *v65;
  uint64_t v66;
  uint64_t v67;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_1000A6174(v9, v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 20);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    sub_10004FF60(a1 + v11, &qword_10119F030);
    v14 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v14);
    *v12 = *v13;
    if (EnumCaseMultiPayload == 1)
    {
      v66 = v14;
      v67 = a3;
      v65 = (int *)type metadata accessor for Library.Context(0);
      v16 = v65[5];
      v17 = (char *)v12 + v16;
      v18 = (char *)v13 + v16;
      v19 = type metadata accessor for Album(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48);
      v22 = swift_retain();
      if (v21(v18, 1, v19, v22))
      {
        v23 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v25 = v65[6];
      v26 = (char *)v12 + v25;
      v27 = (char *)v13 + v25;
      v28 = type metadata accessor for Artist(0);
      v29 = *(_QWORD *)(v28 - 8);
      v14 = v66;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v31 = v65[7];
      v32 = (char *)v12 + v31;
      v33 = (char *)v13 + v31;
      v34 = type metadata accessor for Composer(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = v65[8];
      v38 = (char *)v12 + v37;
      v39 = (char *)v13 + v37;
      v40 = type metadata accessor for Genre(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C(&qword_10119ED08);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v65[9];
      v44 = (char *)v12 + v43;
      v45 = (char *)v13 + v43;
      v46 = type metadata accessor for Playlist(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v49 = v65[10];
      v50 = (char *)v12 + v49;
      v51 = (char *)v13 + v49;
      v52 = type metadata accessor for TVShow(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      v55 = v65[11];
      v56 = (char *)v12 + v55;
      v57 = (char *)v13 + v55;
      v58 = type metadata accessor for TVSeason(0);
      v59 = *(_QWORD *)(v58 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        v60 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      a3 = v67;
      *((_BYTE *)v12 + v65[12]) = *((_BYTE *)v13 + v65[12]);
      *((_BYTE *)v12 + v65[13]) = *((_BYTE *)v13 + v65[13]);
      *((_BYTE *)v12 + v65[14]) = *((_BYTE *)v13 + v65[14]);
      v61 = v65[15];
      v62 = (_QWORD *)((char *)v12 + v61);
      v63 = (_QWORD *)((char *)v13 + v61);
      *v62 = *v63;
      v62[1] = v63[1];
      *(_QWORD *)((char *)v12 + v65[16]) = *(_QWORD *)((char *)v13 + v65[16]);
      *((_BYTE *)v12 + v65[17]) = *((_BYTE *)v13 + v65[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = 1;
    }
    else
    {
      swift_retain();
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v24);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100765A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;

  v3 = a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v54 = v3;
    *v7 = *v8;
    v10 = (int *)type metadata accessor for Library.Context(0);
    v11 = v10[5];
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = type metadata accessor for Album(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = v10[6];
    v18 = (char *)v7 + v17;
    v19 = (char *)v8 + v17;
    v20 = type metadata accessor for Artist(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = v10[7];
    v24 = (char *)v7 + v23;
    v25 = (char *)v8 + v23;
    v26 = type metadata accessor for Composer(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = v10[8];
    v30 = (char *)v7 + v29;
    v31 = (char *)v8 + v29;
    v32 = type metadata accessor for Genre(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C(&qword_10119ED08);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v10[9];
    v36 = (char *)v7 + v35;
    v37 = (char *)v8 + v35;
    v38 = type metadata accessor for Playlist(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v10[10];
    v42 = (char *)v7 + v41;
    v43 = (char *)v8 + v41;
    v44 = type metadata accessor for TVShow(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v10[11];
    v48 = (char *)v7 + v47;
    v49 = (char *)v8 + v47;
    v50 = type metadata accessor for TVSeason(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v3 = v54;
    *((_BYTE *)v7 + v10[12]) = *((_BYTE *)v8 + v10[12]);
    *((_BYTE *)v7 + v10[13]) = *((_BYTE *)v8 + v10[13]);
    *((_BYTE *)v7 + v10[14]) = *((_BYTE *)v8 + v10[14]);
    *(_OWORD *)((char *)v7 + v10[15]) = *(_OWORD *)((char *)v8 + v10[15]);
    *(_QWORD *)((char *)v7 + v10[16]) = *(_QWORD *)((char *)v8 + v10[16]);
    *((_BYTE *)v7 + v10[17]) = *((_BYTE *)v8 + v10[17]);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_QWORD *)(a1 + *(int *)(v3 + 24)) = *(_QWORD *)(a2 + *(int *)(v3 + 24));
  return a1;
}

uint64_t sub_100765F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1000A6174(v7, v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 20);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    sub_10004FF60(a1 + v9, &qword_10119F030);
    v12 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v57 = v12;
      *v10 = *v11;
      v13 = (int *)type metadata accessor for Library.Context(0);
      v14 = v13[5];
      v15 = (char *)v10 + v14;
      v16 = (char *)v11 + v14;
      v17 = type metadata accessor for Album(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v20 = v13[6];
      v21 = (char *)v10 + v20;
      v22 = (char *)v11 + v20;
      v23 = type metadata accessor for Artist(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v26 = v13[7];
      v27 = (char *)v10 + v26;
      v28 = (char *)v11 + v26;
      v29 = type metadata accessor for Composer(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v13[8];
      v33 = (char *)v10 + v32;
      v34 = (char *)v11 + v32;
      v35 = type metadata accessor for Genre(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C(&qword_10119ED08);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v13[9];
      v39 = (char *)v10 + v38;
      v40 = (char *)v11 + v38;
      v41 = type metadata accessor for Playlist(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v13[10];
      v45 = (char *)v10 + v44;
      v46 = (char *)v11 + v44;
      v47 = type metadata accessor for TVShow(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v13[11];
      v51 = (char *)v10 + v50;
      v52 = (char *)v11 + v50;
      v53 = type metadata accessor for TVSeason(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      *((_BYTE *)v10 + v13[12]) = *((_BYTE *)v11 + v13[12]);
      *((_BYTE *)v10 + v13[13]) = *((_BYTE *)v11 + v13[13]);
      *((_BYTE *)v10 + v13[14]) = *((_BYTE *)v11 + v13[14]);
      *(_OWORD *)((char *)v10 + v13[15]) = *(_OWORD *)((char *)v11 + v13[15]);
      *(_QWORD *)((char *)v10 + v13[16]) = *(_QWORD *)((char *)v11 + v13[16]);
      *((_BYTE *)v10 + v13[17]) = *((_BYTE *)v11 + v13[17]);
      swift_storeEnumTagMultiPayload(v10, v57, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_100766418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100766424);
}

uint64_t sub_100766424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100007E8C(&qword_10119EE98);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1007664A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007664B4);
}

uint64_t sub_1007664B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C(&qword_10119EE98);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t _s9SongsViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C7388, (uint64_t)&_s9SongsViewVMn);
}

void sub_100766548(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100ECE830;
  sub_1002ABB08(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_1007665C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAC28C, 1);
}

unint64_t sub_1007665D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7420;
  if (!qword_1011C7420)
  {
    v1 = sub_100044B54(&qword_1011C73E8);
    sub_10076665C();
    sub_100049F28(&qword_1011C7458, &qword_1011C73E0, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7420);
  }
  return result;
}

unint64_t sub_10076665C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7428;
  if (!qword_1011C7428)
  {
    v1 = sub_100044B54(&qword_1011C7418);
    sub_10005610C(&qword_1011C7430, &qword_1011C7438, (void (*)(void))sub_100766700);
    sub_100049F28(&qword_1011C7448, &qword_1011C7450, (uint64_t)&unk_100EC0B30);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7428);
  }
  return result;
}

unint64_t sub_100766700()
{
  unint64_t result;

  result = qword_1011C7440;
  if (!qword_1011C7440)
  {
    result = swift_getWitnessTable(&unk_100ECE91C, &_s9SongsViewV11ContentViewVN);
    atomic_store(result, (unint64_t *)&qword_1011C7440);
  }
  return result;
}

_QWORD *sub_100766748(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  a1[2] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

_QWORD *_s9SongsViewV11ContentViewVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a1[2];
  v7 = a2[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v6);
  return a1;
}

_QWORD *_s9SongsViewV11ContentViewVwta(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = *(_QWORD *)a2;
  swift_release(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  return a1;
}

ValueMetadata *_s9SongsViewV11ContentViewVMa()
{
  return &_s9SongsViewV11ContentViewVN;
}

unint64_t sub_100766840()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7460;
  if (!qword_1011C7460)
  {
    v1 = sub_100044B54(&qword_1011C7400);
    sub_1007668C4();
    sub_100049F28((unint64_t *)&unk_1011C7480, &qword_1011AC040, (uint64_t)&unk_100ED1EB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7460);
  }
  return result;
}

unint64_t sub_1007668C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7468;
  if (!qword_1011C7468)
  {
    v1 = sub_100044B54(&qword_1011AC050);
    sub_100766948();
    sub_100048748(&qword_10119F7E8, _s25SortFilterContentModifierVMa, (uint64_t)&unk_100ED0D00);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7468);
  }
  return result;
}

unint64_t sub_100766948()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7470;
  if (!qword_1011C7470)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011C73F0);
    sub_1007665D8();
    sub_10076665C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7470);
  }
  return result;
}

unint64_t sub_1007669B8()
{
  unint64_t result;

  result = qword_1011C7490;
  if (!qword_1011C7490)
  {
    result = swift_getWitnessTable(&unk_100ECE8A4, &_s9SongsViewV11ContentViewVN);
    atomic_store(result, (unint64_t *)&qword_1011C7490);
  }
  return result;
}

id sub_100766A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content_heightNeeded] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___descriptionTextView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___maskView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___blurView] = 0;
  v9 = &v4[OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content_descriptionText];
  *(_QWORD *)v9 = a3;
  *((_QWORD *)v9 + 1) = a4;
  v18.receiver = v4;
  v18.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v18, "initWithNibName:bundle:", 0, 0);
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setTitle:", v11, swift_bridgeObjectRelease(a2).n128_f64[0]);

  v12 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v10, "dismissAnimated");
  v13 = objc_msgSend(v10, "navigationItem");
  objc_msgSend(v13, "setRightBarButtonItem:", v12);

  v14 = AccessibilityIdentifier.doneButton.unsafeMutableAddressor();
  v15 = *v14;
  v16 = v14[1];
  sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v15, v16);

  return v10;
}

void sub_100766C84()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  double v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  char *v20;
  id v21;
  id v22;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v23.receiver = v0;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v6 = v5;
  v7 = sub_100766F34();
  objc_msgSend(v6, "addSubview:", v7);

  if (qword_10119C778 != -1)
    swift_once(&qword_10119C778, sub_100767D6C);
  v8 = *(double *)&qword_1011C74A8;
  sub_100766F94(0.0, 0.0, *(double *)&qword_1011C74A8, 0.0);
  v9 = sub_100766F34();
  objc_msgSend(v9, "sizeThatFits:", v8, 0.0);
  v11 = v10;

  v12 = *(double *)&qword_1011C74A8;
  if (qword_10119C770 != -1)
    swift_once(&qword_10119C770, sub_100767D58);
  if (*(double *)&qword_1011C74A0 >= v11)
    v13 = v11;
  else
    v13 = *(double *)&qword_1011C74A0;
  objc_msgSend(v0, "setPreferredContentSize:", v12, v13);
  v14 = sub_100007E8C(&qword_1011A1750);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v15 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v15 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v16 = swift_allocObject(&unk_1010DA740, 32, 7);
  *(_QWORD *)(v16 + 16) = v0;
  *(_QWORD *)(v16 + 24) = ObjectType;
  v17 = v0;
  v18 = UIViewController.registerForTraitChanges<A>(_:handler:)(v15, sub_100768770, v16, ObjectType);
  swift_unknownObjectRelease(v18);
  swift_bridgeObjectRelease();
  swift_release();
  v19 = sub_100766F34();
  v20 = sub_100767220();
  objc_msgSend(v19, "setMaskView:", v20);

  sub_1007672CC(1.0);
  v21 = sub_100766F34();
  v22 = sub_1007673F8();
  objc_msgSend(v21, "_addContentSubview:atBack:", v22, 0);

  sub_100767470(0.0);
}

id sub_100766F34()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___descriptionTextView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___descriptionTextView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___descriptionTextView);
  }
  else
  {
    v4 = sub_1007678D8(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_100766F94(double a1, double a2, double a3, double a4)
{
  double Width;
  char v5;
  id v6;
  double v7;
  id v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v24;

  Width = CGRectGetWidth(*(CGRect *)&a1);
  v5 = HI.SizeClass.init(_:)(Width);
  v6 = sub_100766F34();
  objc_msgSend(v6, "textContainerInset");

  v7 = HI.SizeClass.margin.getter(v5);
  v8 = sub_100766F34();
  objc_msgSend(v8, "adjustedContentInset");
  v10 = v9;

  if (20.0 - v10 < 0.0)
    v11 = 0.0;
  else
    v11 = 20.0 - v10;
  v12 = sub_100766F34();
  objc_msgSend(v12, "textContainerInset");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  if (v14 != 20.0 || v7 != v16 || v11 != v18 || v7 != v20)
  {
    v24 = sub_100766F34();
    objc_msgSend(v24, "setTextContainerInset:", 20.0, v7, v11, v7);

  }
}

void sub_1007670C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;

  v4 = sub_100766F34();
  v5 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v4, "setFont:", v5);

  v6 = sub_100766F34();
  if (qword_10119C778 != -1)
    swift_once(&qword_10119C778, sub_100767D6C);
  objc_msgSend(v6, "sizeThatFits:", *(double *)&qword_1011C74A8, 0.0);
  v8 = v7;

  v9 = *(double *)&qword_1011C74A8;
  if (qword_10119C770 != -1)
    swift_once(&qword_10119C770, sub_100767D58);
  if (*(double *)&qword_1011C74A0 >= v8)
    v10 = v8;
  else
    v10 = *(double *)&qword_1011C74A0;
  objc_msgSend(a3, "setPreferredContentSize:", v9, v10);
  v11 = objc_msgSend(a3, "view");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "setNeedsLayout");

  }
  else
  {
    __break(1u);
  }
}

char *sub_100767220()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  double v5;
  id v6;
  char *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___maskView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___maskView);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___maskView);
  }
  else
  {
    v4 = v0;
    if (qword_10119C780 != -1)
      swift_once(&qword_10119C780, sub_100767D80);
    v5 = *(double *)&qword_1011C74B0;
    v6 = objc_allocWithZone((Class)type metadata accessor for DescriptionModal.Content.MaskView());
    v7 = sub_100767ED8(v5);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_1007672CC(double a1)
{
  char *v2;
  id v3;
  double v4;
  double v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double Width;
  id v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  char *v25;
  CGRect v26;
  CGRect v27;

  v2 = sub_100767220();
  sub_100767D90(a1);

  v25 = sub_100767220();
  v3 = sub_100766F34();
  objc_msgSend(v3, "contentOffset");
  v5 = v4;

  v6 = sub_100766F34();
  objc_msgSend(v6, "frame");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v26.origin.x = v8;
  v26.origin.y = v10;
  v26.size.width = v12;
  v26.size.height = v14;
  Width = CGRectGetWidth(v26);
  v16 = sub_100766F34();
  objc_msgSend(v16, "frame");
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  v27.origin.x = v18;
  v27.origin.y = v20;
  v27.size.width = v22;
  v27.size.height = v24;
  objc_msgSend(v25, "setFrame:", 0.0, v5, Width, CGRectGetHeight(v27));

}

id sub_1007673F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___blurView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___blurView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content____lazy_storage___blurView);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for ProgressiveBlurView());
    v6 = ProgressiveBlurView.init(blurRadius:edge:)(3, 6.0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_100767470(double a1)
{
  id v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Height;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  id v27;
  CGRect v28;
  CGRect v29;

  v2 = sub_1007673F8();
  objc_msgSend(v2, "setAlpha:", a1);

  v27 = sub_1007673F8();
  v3 = sub_100766F34();
  objc_msgSend(v3, "frame");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v28.origin.x = v5;
  v28.origin.y = v7;
  v28.size.width = v9;
  v28.size.height = v11;
  Height = CGRectGetHeight(v28);
  if (qword_10119C780 != -1)
    swift_once(&qword_10119C780, sub_100767D80);
  v13 = Height - *(double *)&qword_1011C74B0;
  v14 = sub_100766F34();
  objc_msgSend(v14, "contentOffset");
  v16 = v15;

  v17 = v13 + v16;
  v18 = sub_100766F34();
  objc_msgSend(v18, "frame");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v29.origin.x = v20;
  v29.origin.y = v22;
  v29.size.width = v24;
  v29.size.height = v26;
  objc_msgSend(v27, "setFrame:", 0.0, v17, CGRectGetWidth(v29), *(double *)&qword_1011C74B0);

}

void sub_1007675FC()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  double v33;
  double v34;
  id v35;
  double v36;
  double v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  objc_super v44;

  v44.receiver = v0;
  v44.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v44, "viewDidLayoutSubviews");
  v1 = sub_100766F34();
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_13;
  }
  v3 = v2;
  objc_msgSend(v2, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v1, "setFrame:", v5, v7, v9, v11);
  v12 = objc_msgSend(v0, "view");
  if (!v12)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v13 = v12;
  objc_msgSend(v12, "bounds");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  sub_100766F94(v15, v17, v19, v21);
  v22 = sub_100766F34();
  v23 = objc_msgSend(v0, "view");
  if (!v23)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v24 = v23;
  objc_msgSend(v23, "bounds");
  v26 = v25;
  v28 = v27;

  objc_msgSend(v22, "sizeThatFits:", v26, v28);
  v30 = v29;

  v31 = OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content_heightNeeded;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content_heightNeeded] = v30;
  v32 = sub_100766F34();
  objc_msgSend(v32, "contentOffset");
  v34 = v33;

  v35 = sub_100766F34();
  objc_msgSend(v35, "frame");
  v37 = v36;

  v38 = sub_100766F34();
  objc_msgSend(v38, "adjustedContentInset");
  v40 = v39;

  v41 = *(double *)&v0[v31];
  if (qword_10119C780 != -1)
    swift_once(&qword_10119C780, sub_100767D80);
  v42 = (*(double *)&qword_1011C74B0 - (v41 - (v34 + v37 - v40))) / *(double *)&qword_1011C74B0;
  if (v42 < 0.0)
    v42 = 0.0;
  if (v42 <= 1.0)
    v43 = v42;
  else
    v43 = 1.0;
  sub_1007672CC(v43);
  sub_100767470(1.0 - v43);
}

id sub_1007678D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  void *v19;
  NSString *v20;
  id v21;
  NSString *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[112];
  void *v45;
  _QWORD v46[5];

  v35 = a1;
  v41 = type metadata accessor for AttributedString.AttributeMergePolicy(0);
  v38 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v36 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for AttributeContainer(0);
  v40 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for AttributedString(0);
  v39 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v37 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - v7;
  v9 = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  objc_msgSend(v9, "setEditable:", 0);
  v10 = objc_msgSend(v9, "textContainer");
  objc_msgSend(v10, "setLineFragmentPadding:", 0.0);

  v11 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v11, "setMinimumLineHeight:", 22.0);
  v12 = objc_msgSend(v11, "copy");
  _bridgeAnyObjectToAny(_:)(v46, v12);

  swift_unknownObjectRelease(v12);
  v13 = sub_10004A07C(0, &qword_1011C7578, NSParagraphStyle_ptr);
  swift_dynamicCast(&v45, v46, (char *)&type metadata for Any + 8, v13, 7);
  v14 = v45;
  v15 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content_descriptionText
                  + 8);
  v46[0] = *(_QWORD *)(a1
                     + OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content_descriptionText);
  v46[1] = v15;
  v16 = sub_100007E8C(&qword_1011C7580);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  swift_bridgeObjectRetain();
  MarkupRenderer.init(_:)(v46);
  dispatch thunk of MarkupRenderer.attributedString.getter();
  swift_release();
  v17 = sub_100007E8C((uint64_t *)&unk_1011A21B0);
  inited = swift_initStackObject(v17, v44);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  *(_QWORD *)(inited + 32) = NSParagraphStyleAttributeName;
  *(_QWORD *)(inited + 40) = v14;
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v19 = (void *)objc_opt_self(UIFont);
  v20 = NSParagraphStyleAttributeName;
  v21 = v14;
  v22 = NSFontAttributeName;
  v23 = objc_msgSend(v19, "preferredFontForTextStyle:", UIFontTextStyleBody);
  *(_QWORD *)(inited + 104) = sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  *(_QWORD *)(inited + 80) = v23;
  v24 = sub_100041C10(inited);
  AttributeContainer.init(_:)(v24);
  v25 = v38;
  v26 = v36;
  v27 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v36, enum case for AttributedString.AttributeMergePolicy.keepNew(_:), v41);
  AttributedString.mergeAttributes(_:mergePolicy:)(v4, v26);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v4, v43);
  sub_10004A07C(0, &qword_1011A9AA0, NSAttributedString_ptr);
  v28 = v39;
  v29 = v37;
  v30 = v42;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v37, v8, v42);
  v31 = (void *)NSAttributedString.init(_:)(v29);
  objc_msgSend(v9, "setAttributedText:", v31);

  v32 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v9, "setTextColor:", v32);

  objc_msgSend(v9, "setDelegate:", v35);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v30);
  return v9;
}

void sub_100767D58()
{
  qword_1011C74A0 = 0x4084400000000000;
}

void sub_100767D6C()
{
  qword_1011C74A8 = 0x4080E00000000000;
}

void sub_100767D80()
{
  qword_1011C74B0 = 0x4050000000000000;
}

void sub_100767D90(double a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  id v17;
  _BYTE v18[24];
  _QWORD v19[4];
  __int128 v20;
  __int128 v21;

  v2 = OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradientOpacity;
  v3 = *(double *)(v1
                 + OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradientOpacity);
  *(double *)(v1
            + OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradientOpacity) = a1;
  if (v3 != a1)
  {
    v4 = *(_QWORD *)(v1
                   + OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradient);
    v5 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100EA7DB0;
    v7 = (void *)objc_opt_self(UIColor);
    *(_QWORD *)(v6 + 32) = objc_msgSend(v7, "blackColor");
    v8 = objc_msgSend(v7, "blackColor");
    v9 = objc_msgSend(v8, "colorWithAlphaComponent:", *(double *)(v1 + v2));

    *(_QWORD *)(v6 + 40) = v9;
    v19[0] = v6;
    specialized Array._endMutation()(v10);
    v11 = v6;
    v12 = v4 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
    swift_beginAccess(v4 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration, v18, 0, 0);
    v14 = *(_QWORD *)(v12 + 16);
    v15 = *(_QWORD *)(v12 + 24);
    v19[0] = *(_QWORD *)v12;
    v13 = (void *)v19[0];
    v19[1] = v11;
    v19[2] = v14;
    v19[3] = v15;
    v16 = *(_OWORD *)(v12 + 48);
    v20 = *(_OWORD *)(v12 + 32);
    v21 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = v13;
    Gradient.View.typedConfiguration.setter((uint64_t)v19);
  }
}

char *sub_100767ED8(double a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  double v17;
  double v18;
  double *v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  objc_super v25;
  char v26[24];
  char v27[24];
  _QWORD v28[9];

  v3 = OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_opaqueFiller;
  v4 = objc_allocWithZone((Class)UIView);
  v5 = v1;
  v6 = objc_msgSend(v4, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = objc_msgSend(v7, "blackColor");
  objc_msgSend(v6, "setBackgroundColor:", v8);

  *(_QWORD *)&v1[v3] = v6;
  v9 = OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradient;
  v10 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v11 = swift_allocObject(v10, 48, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA7DB0;
  v12 = kCAGradientLayerAxial;
  *(_QWORD *)(v11 + 32) = objc_msgSend(v7, "blackColor");
  v13 = objc_msgSend(v7, "blackColor");
  v14 = objc_msgSend(v13, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(v11 + 40) = v14;
  v28[0] = v11;
  specialized Array._endMutation()(v15);
  v16 = CGPoint.topCenter.unsafeMutableAddressor();
  swift_beginAccess(v16, v27, 0, 0);
  v17 = *(double *)v16;
  v18 = *((double *)v16 + 1);
  v19 = (double *)CGPoint.bottomCenter.unsafeMutableAddressor();
  swift_beginAccess(v19, v26, 0, 0);
  Gradient.init(kind:colors:locations:interpolations:startPoint:endPoint:)((uint64_t)v12, v11, 0, 0, (uint64_t)v28, v17, v18, *v19, v19[1]);
  v20 = objc_allocWithZone((Class)type metadata accessor for Gradient.View());
  *(_QWORD *)&v5[v9] = Gradient.View.init(configuration:)((uint64_t)v28);
  *(_QWORD *)&v5[OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradientOpacity] = 0x3FF0000000000000;
  *(double *)&v5[OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradientHeight] = a1;

  v25.receiver = v5;
  v25.super_class = (Class)type metadata accessor for DescriptionModal.Content.MaskView();
  v21 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v22 = *(_QWORD *)&v21[OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_opaqueFiller];
  v23 = v21;
  objc_msgSend(v23, "addSubview:", v22);
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v23[OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradient]);

  return v23;
}

id sub_100768178()
{
  char *v0;
  void *v1;
  double Width;
  CGFloat Height;
  uint64_t v4;
  void *v5;
  CGFloat v6;
  CGRect v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;

  v1 = *(void **)&v0[OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_opaqueFiller];
  objc_msgSend(v0, "frame");
  Width = CGRectGetWidth(v8);
  objc_msgSend(v0, "frame");
  Height = CGRectGetHeight(v9);
  v4 = OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradientHeight;
  objc_msgSend(v1, "setFrame:", 0.0, 0.0, Width, Height- *(double *)&v0[OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradientHeight]);
  v5 = *(void **)&v0[OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradient];
  objc_msgSend(v0, "frame");
  v6 = CGRectGetHeight(v10) - *(double *)&v0[v4];
  objc_msgSend(v0, "frame");
  return objc_msgSend(v5, "setFrame:", 0.0, v6, CGRectGetWidth(v11), *(double *)&v0[v4]);
}

id sub_1007682B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DescriptionModal.Content.MaskView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DescriptionModal()
{
  return objc_opt_self(_TtC5Music16DescriptionModal);
}

uint64_t type metadata accessor for DescriptionModal.Content()
{
  return objc_opt_self(_TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content);
}

uint64_t type metadata accessor for DescriptionModal.Content.MaskView()
{
  return objc_opt_self(_TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView);
}

void sub_100768458()
{
  uint64_t v0;
  id v1;
  double v2;
  double v3;
  id v4;
  double v5;
  double v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  v1 = sub_100766F34();
  objc_msgSend(v1, "contentOffset");
  v3 = v2;

  v4 = sub_100766F34();
  objc_msgSend(v4, "frame");
  v6 = v5;

  v7 = sub_100766F34();
  objc_msgSend(v7, "adjustedContentInset");
  v9 = v8;

  v10 = *(double *)(v0
                  + OBJC_IVAR____TtCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content_heightNeeded);
  if (qword_10119C780 != -1)
    swift_once(&qword_10119C780, sub_100767D80);
  v11 = (*(double *)&qword_1011C74B0 - (v10 - (v3 + v6 - v9))) / *(double *)&qword_1011C74B0;
  if (v11 < 0.0)
    v11 = 0.0;
  if (v11 > 1.0)
    v11 = 1.0;
  v12 = 1.0 - v11;
  sub_1007672CC(v11);
  sub_100767470(v12);
}

void sub_100768548()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  double v15;
  double v16;
  double *v17;
  id v18;
  char v19[24];
  char v20[24];
  _QWORD v21[8];

  v1 = v0;
  v2 = OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_opaqueFiller;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "blackColor");
  objc_msgSend(v3, "setBackgroundColor:", v5);

  *(_QWORD *)&v1[v2] = v3;
  v6 = OBJC_IVAR____TtCCC5Music16DescriptionModalP33_0EAC1E89AC1A8ECCCD684CECC329D23C7Content8MaskView_gradient;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v8 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EA7DB0;
  v9 = kCAGradientLayerAxial;
  *(_QWORD *)(v8 + 32) = objc_msgSend(v4, "blackColor");
  v10 = objc_msgSend(v4, "blackColor");
  v11 = objc_msgSend(v10, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(v8 + 40) = v11;
  v21[0] = v8;
  specialized Array._endMutation()(v12);
  v13 = v8;
  v14 = CGPoint.topCenter.unsafeMutableAddressor();
  swift_beginAccess(v14, v20, 0, 0);
  v15 = *(double *)v14;
  v16 = *((double *)v14 + 1);
  v17 = (double *)CGPoint.bottomCenter.unsafeMutableAddressor();
  swift_beginAccess(v17, v19, 0, 0);
  Gradient.init(kind:colors:locations:interpolations:startPoint:endPoint:)((uint64_t)v9, v13, 0, 0, (uint64_t)v21, v15, v16, *v17, v17[1]);
  v18 = objc_allocWithZone((Class)type metadata accessor for Gradient.View());
  *(_QWORD *)&v1[v6] = Gradient.View.init(configuration:)((uint64_t)v21);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/Header+DescriptionModal.swift", 35, 2, 289, 0);
  __break(1u);
}

uint64_t sub_10076874C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100768770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1007670C0(a1, a2, *(void **)(v2 + 16));
}

ValueMetadata *type metadata accessor for GroupedTextListView()
{
  return &type metadata for GroupedTextListView;
}

uint64_t destroy for GroupedItemizedTextListView(uint64_t a1)
{

  return sub_1002BD420(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for GroupedItemizedTextListView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  v9 = v3;
  sub_100154A5C(v4, v5, v6, v7, v8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  return a1;
}

uint64_t assignWithCopy for GroupedItemizedTextListView(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  v4 = (void *)a2[1];
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  v7 = v2[2];
  v8 = v2[3];
  v9 = v2[4];
  v10 = v2[5];
  LOBYTE(v2) = *((_BYTE *)v2 + 48);
  sub_100154A5C(v7, v8, v9, v10, (char)v2);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 48) = (_BYTE)v2;
  sub_1002BD420(v11, v12, v13, v14, v15);
  return a1;
}

uint64_t assignWithTake for GroupedItemizedTextListView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;

  v6 = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_BYTE *)(a1 + 48);
  v12 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 48) = v6;
  sub_1002BD420(v7, v8, v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupedItemizedTextListView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupedItemizedTextListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupedItemizedTextListView()
{
  return &type metadata for GroupedItemizedTextListView;
}

uint64_t sub_1007689B0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAC46C, 1);
}

uint64_t sub_1007689C0@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  _OWORD v58[2];
  char v59;
  _QWORD v60[5];
  __int128 v61;

  v2 = v1;
  v57 = a1;
  v3 = sub_100007E8C(&qword_1011C7588);
  __chkstk_darwin(v3);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011C7590);
  __chkstk_darwin(v6);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100007E8C(&qword_1011C7598);
  __chkstk_darwin(v56);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static VerticalAlignment.top.getter(v11);
  if (qword_10119C798 != -1)
    swift_once(&qword_10119C798, sub_100768F28);
  v13 = qword_10124D970;
  *(_QWORD *)v5 = v12;
  *((_QWORD *)v5 + 1) = v13;
  v5[16] = 0;
  sub_100007E8C(&qword_1011C75A0);
  v61 = *v2;
  v14 = *(uint64_t (**)(void))((swift_isaMask & **((_QWORD **)&v61 + 1)) + 0xE0);
  v15 = *((id *)&v61 + 1);
  v16 = v14();
  sub_1007698B4((uint64_t)&v61);
  v60[0] = v16;
  v17 = sub_100007E8C(&qword_1011C75A8);
  v18 = sub_100007E8C(&qword_1011C75B0);
  v19 = sub_100049F28(&qword_1011C75B8, &qword_1011C75A8, (uint64_t)&protocol conformance descriptor for [A]);
  v20 = sub_10005610C(&qword_1011C75C0, &qword_1011C75B0, (void (*)(void))sub_1007698DC);
  v21 = sub_10076AA78(&qword_1011C75D0, type metadata accessor for JSItemizedTextListViewModel);
  v22 = ForEach<>.init(_:content:)(v60, sub_100768E1C, 0, v17, &type metadata for String, v18, v19, v20, v21);
  if (qword_10119C790 != -1)
    v22 = swift_once(&qword_10119C790, sub_100768F08);
  v23 = qword_10124D968;
  v24 = static Edge.Set.all.getter(v22);
  sub_10004A160((uint64_t)v5, (uint64_t)v8, &qword_1011C7588);
  v25 = &v8[*(int *)(v6 + 36)];
  *v25 = v24;
  *((_QWORD *)v25 + 1) = v23;
  *((_OWORD *)v25 + 1) = xmmword_100EAFDA0;
  *((_QWORD *)v25 + 4) = 0x4046000000000000;
  v25[40] = 0;
  v26 = sub_10004FF60((uint64_t)v5, &qword_1011C7588);
  v27 = static Alignment.center.getter(v26);
  v29 = v28;
  static Color.black.getter(v27);
  v30 = Color.opacity(_:)(0.15);
  swift_release();
  v32 = static Edge.Set.bottom.getter(v31);
  v33 = v2[2];
  v58[0] = v2[1];
  v58[1] = v33;
  v59 = *((_BYTE *)v2 + 48);
  sub_100065228((uint64_t)v58, (uint64_t)v60, &qword_1011AA450);
  sub_10006FDA8((uint64_t)v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100154A5C);
  sub_100825088();
  v35 = v34;
  sub_10006FDA8((uint64_t)v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  v36 = EdgeInsets.init(_all:)(-44.0 - v35);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  sub_10004A160((uint64_t)v8, (uint64_t)v10, &qword_1011C7590);
  v43 = &v10[*(int *)(v56 + 36)];
  *(_QWORD *)v43 = v30;
  v43[8] = v32;
  *((double *)v43 + 2) = v36;
  *((_QWORD *)v43 + 3) = v38;
  *((_QWORD *)v43 + 4) = v40;
  *((_QWORD *)v43 + 5) = v42;
  v43[48] = 0;
  *((_QWORD *)v43 + 7) = v27;
  *((_QWORD *)v43 + 8) = v29;
  v44 = sub_10004FF60((uint64_t)v8, &qword_1011C7590);
  v45 = static Edge.Set.top.getter(v44);
  if (qword_10119C788 != -1)
    swift_once(&qword_10119C788, sub_100768EE8);
  v46 = EdgeInsets.init(_all:)(*(double *)&qword_10124D960);
  v48 = v47;
  v50 = v49;
  v52 = v51;
  v53 = v57;
  sub_10004A160((uint64_t)v10, v57, &qword_1011C7598);
  v54 = v53 + *(int *)(sub_100007E8C(&qword_1011C75D8) + 36);
  *(_BYTE *)v54 = v45;
  *(double *)(v54 + 8) = v46;
  *(_QWORD *)(v54 + 16) = v48;
  *(_QWORD *)(v54 + 24) = v50;
  *(_QWORD *)(v54 + 32) = v52;
  *(_BYTE *)(v54 + 40) = 0;
  return sub_10004FF60((uint64_t)v10, &qword_1011C7598);
}

double sub_100768E1C@<D0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double result;
  __int128 v13;
  id v14;
  _OWORD v15[2];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v14 = *a1;
  v3 = type metadata accessor for JSItemizedTextListViewModel(0);
  v4 = v14;
  v5 = State.init(wrappedValue:)(&v14, v3);
  v6 = v15[0];
  v7 = static Alignment.leading.getter(v5);
  sub_10014BD24(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v7, v8, (void *)v6, *((uint64_t *)&v6 + 1));

  swift_release();
  v9 = v19;
  a2[4] = v18;
  a2[5] = v9;
  v10 = v21;
  a2[6] = v20;
  a2[7] = v10;
  v11 = v15[1];
  *a2 = v15[0];
  a2[1] = v11;
  result = *(double *)&v16;
  v13 = v17;
  a2[2] = v16;
  a2[3] = v13;
  return result;
}

void sub_100768EE8()
{
  qword_10124D960 = Int.seconds.getter(40);
}

void sub_100768F08()
{
  qword_10124D968 = Int.seconds.getter(10);
}

void sub_100768F28()
{
  qword_10124D970 = Int.seconds.getter(44);
}

double sub_100768F4C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v6 = sub_100007E8C(&qword_1011C76A8);
  v31 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - v10;
  v32 = a1;
  v33 = a2;
  v12 = sub_100007E8C(&qword_1011C76B0);
  v13 = State.wrappedValue.getter(&v34, v12);
  v14 = v34;
  v30 = (*(uint64_t (**)(_QWORD *))((swift_isaMask & *v34) + 0x108))(v13);
  v16 = v15;

  v32 = a1;
  v33 = a2;
  v17 = State.wrappedValue.getter(&v34, v12);
  v18 = v34;
  v19 = (*(uint64_t (**)(_QWORD *))((swift_isaMask & *v34) + 0x120))(v17);

  v32 = v19;
  v20 = sub_100007E8C(&qword_1011C76B8);
  v21 = sub_100049F28(&qword_1011C76C0, &qword_1011C76B8, (uint64_t)&protocol conformance descriptor for [A]);
  v22 = sub_100769920();
  v23 = sub_10076AA78(&qword_1011C76C8, (uint64_t (*)(uint64_t))type metadata accessor for JSItemizedTextListItem);
  ForEach<>.init(_:content:)(&v32, sub_10076916C, 0, v20, &type metadata for String, &type metadata for TextColumnSection, v21, v22, v23);
  v24 = v31;
  v25 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v25(v8, v11, v6);
  *a3 = v30;
  a3[1] = v16;
  v26 = sub_100007E8C(&qword_1011C76D0);
  v25((char *)a3 + *(int *)(v26 + 48), v8, v6);
  v27 = *(void (**)(char *, uint64_t))(v24 + 8);
  swift_bridgeObjectRetain();
  v27(v11, v6);
  v27(v8, v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10076916C@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v3 = *a1;
  v4 = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x88))();
  v6 = v5;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A6110);
  v8 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v8 + 32) = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xB8))();
  *(_QWORD *)(v8 + 40) = v9;
  result = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xA0))();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v8;
  *(_BYTE *)(a2 + 24) = result & 1;
  return result;
}

double sub_100769224@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  v4 = v2[1];
  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v6 = sub_100007E8C(&qword_1011C76A0);
  return sub_100768F4C(v5, v4, (uint64_t *)(a2 + *(int *)(v6 + 44)));
}

uint64_t sub_100769278@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;

  v4 = sub_100007E8C(&qword_1011A2E48);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A2E50);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011C75E0);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011C75E8);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v16);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v17 = sub_100007E8C(&qword_1011C75F0);
  v18 = sub_100769560(a1, (uint64_t)&v6[*(int *)(v17 + 44)]);
  v19 = static Alignment.center.getter(v18);
  sub_10014BED8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v9, 0.0, 1, 0.0, 1, v19, v20);
  v21 = sub_10004FF60((uint64_t)v6, &qword_1011A2E48);
  LOBYTE(v6) = static Edge.Set.horizontal.getter(v21);
  v22 = EdgeInsets.init(_all:)(44.0);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  sub_10004A160((uint64_t)v9, (uint64_t)v12, &qword_1011A2E50);
  v29 = &v12[*(int *)(v10 + 36)];
  *v29 = (char)v6;
  *((double *)v29 + 1) = v22;
  *((_QWORD *)v29 + 2) = v24;
  *((_QWORD *)v29 + 3) = v26;
  *((_QWORD *)v29 + 4) = v28;
  v29[40] = 0;
  v30 = sub_10004FF60((uint64_t)v9, &qword_1011A2E50);
  LOBYTE(v6) = static Edge.Set.bottom.getter(v30);
  v31 = EdgeInsets.init(_all:)(16.0);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_10004A160((uint64_t)v12, (uint64_t)v15, &qword_1011C75E0);
  v38 = &v15[*(int *)(v13 + 36)];
  *v38 = (char)v6;
  *((double *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  v39 = sub_10004FF60((uint64_t)v12, &qword_1011C75E0);
  static Color.black.getter(v39);
  v40 = Color.opacity(_:)(0.2);
  swift_release();
  LOBYTE(v6) = static Edge.Set.all.getter(v41);
  sub_10004A160((uint64_t)v15, a2, &qword_1011C75E8);
  v42 = a2 + *(int *)(sub_100007E8C(&qword_1011C75F8) + 36);
  *(_QWORD *)v42 = v40;
  *(_BYTE *)(v42 + 8) = (_BYTE)v6;
  return sub_10004FF60((uint64_t)v15, &qword_1011C75E8);
}

uint64_t sub_100769560@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t (*v17)(void);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a2;
  v3 = sub_100007E8C(&qword_1011C7600);
  v36 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - v7;
  v9 = sub_100007E8C(&qword_1011C7608);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v15);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  v16 = (uint64_t *)&v14[*(int *)(sub_100007E8C(&qword_1011C7610) + 44)];
  v17 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x108);
  v18 = a1;
  v35 = v17();
  v20 = v19;

  v21 = *(uint64_t (**)(void))((swift_isaMask & *v18) + 0x120);
  v22 = v18;
  v23 = v21();

  v38 = v23;
  v24 = sub_100007E8C(&qword_1011C7618);
  v25 = sub_100049F28(&qword_1011C7620, &qword_1011C7618, (uint64_t)&protocol conformance descriptor for [A]);
  v26 = sub_100769920();
  v27 = sub_10076AA78(&qword_1011C7630, type metadata accessor for JSGroupedTextListItem);
  ForEach<>.init(_:content:)(&v38, sub_100769828, 0, v24, &type metadata for String, &type metadata for TextColumnSection, v25, v26, v27);
  v28 = v36;
  v29 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v29(v5, v8, v3);
  *v16 = v35;
  v16[1] = v20;
  v30 = sub_100007E8C(&qword_1011C7638);
  v29((char *)v16 + *(int *)(v30 + 48), v5, v3);
  v31 = *(void (**)(char *, uint64_t))(v28 + 8);
  swift_bridgeObjectRetain();
  v31(v8, v3);
  v31(v5, v3);
  swift_bridgeObjectRelease();
  sub_10004A160((uint64_t)v14, (uint64_t)v11, &qword_1011C7608);
  v32 = v37;
  sub_10004A160((uint64_t)v11, v37, &qword_1011C7608);
  v33 = v32 + *(int *)(sub_100007E8C(&qword_1011C7640) + 48);
  *(_QWORD *)v33 = 0;
  *(_BYTE *)(v33 + 8) = 1;
  sub_10004FF60((uint64_t)v14, &qword_1011C7608);
  return sub_10004FF60((uint64_t)v11, &qword_1011C7608);
}

uint64_t sub_100769828@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x78))();
  v6 = v5;
  result = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x90))();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = result;
  *(_BYTE *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_10076989C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100769278(*(_QWORD **)(v1 + 8), a1);
}

uint64_t sub_1007698A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAC444, 1);
}

uint64_t sub_1007698B4(uint64_t a1)
{

  return a1;
}

unint64_t sub_1007698DC()
{
  unint64_t result;

  result = qword_1011C75C8;
  if (!qword_1011C75C8)
  {
    result = swift_getWitnessTable(&unk_100ECEB64, &type metadata for ItemizedTextListColumn);
    atomic_store(result, (unint64_t *)&qword_1011C75C8);
  }
  return result;
}

unint64_t sub_100769920()
{
  unint64_t result;

  result = qword_1011C7628;
  if (!qword_1011C7628)
  {
    result = swift_getWitnessTable(&unk_100ECEB14, &type metadata for TextColumnSection);
    atomic_store(result, (unint64_t *)&qword_1011C7628);
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemizedTextListColumn()
{
  return &type metadata for ItemizedTextListColumn;
}

uint64_t destroy for Lyrics.Word(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for TextColumnSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for TextColumnSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for TextColumnSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for TextColumnSection()
{
  return &type metadata for TextColumnSection;
}

ValueMetadata *type metadata accessor for TextColumnTitle()
{
  return &type metadata for TextColumnTitle;
}

uint64_t sub_100769AB8()
{
  return sub_10005610C(&qword_1011C7648, &qword_1011C75D8, (void (*)(void))sub_100769AEC);
}

unint64_t sub_100769AEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7650;
  if (!qword_1011C7650)
  {
    v1 = sub_100044B54(&qword_1011C7598);
    sub_100769B70();
    sub_100049F28(&qword_1011C7668, &qword_1011C7670, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7650);
  }
  return result;
}

unint64_t sub_100769B70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7658;
  if (!qword_1011C7658)
  {
    v1 = sub_100044B54(&qword_1011C7590);
    sub_100049F28(&qword_1011C7660, &qword_1011C7588, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7658);
  }
  return result;
}

unint64_t sub_100769BF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7678;
  if (!qword_1011C7678)
  {
    v1 = sub_100044B54(&qword_1011C75F8);
    sub_10005610C(&qword_1011C7680, &qword_1011C75E8, (void (*)(void))sub_100769C9C);
    sub_100049F28(&qword_1011A49A8, &qword_1011A49B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7678);
  }
  return result;
}

uint64_t sub_100769C9C()
{
  return sub_10005610C(&qword_1011C7688, &qword_1011C75E0, (void (*)(void))sub_100769CC0);
}

unint64_t sub_100769CC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7690;
  if (!qword_1011C7690)
  {
    v1 = sub_100044B54(&qword_1011A2E50);
    sub_100049F28(&qword_1011C7698, &qword_1011A2E48, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7690);
  }
  return result;
}

uint64_t sub_100769D44(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAC4E4, 1);
}

void sub_100769D54(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];

  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    v27[0] = a1;
    v27[1] = a2;
    v5 = sub_100055B68();
    swift_bridgeObjectRetain();
    v6 = Text.init<A>(_:)(v27, &type metadata for String, v5);
    v8 = v7;
    v10 = v9;
    v12 = v11 & 1;
    v13 = static Font.title2.getter(v6);
    v14 = Text.font(_:)(v13, v6, v8, v12, v10);
    v16 = v15;
    v18 = v17;
    v20 = v19;
    swift_release();
    v21 = v18 & 1;
    sub_100055BAC(v6, v8, v12);
    swift_bridgeObjectRelease();
    LOBYTE(v6) = static Edge.Set.top.getter(v22);
    v23 = EdgeInsets.init(_all:)(18.0);
    v4 = v6;
  }
  else
  {
    v14 = 0;
    v16 = 0;
    v21 = 0;
    v20 = 0;
    v23 = 0.0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
  }
  *(_QWORD *)a3 = v14;
  *(_QWORD *)(a3 + 8) = v16;
  *(_QWORD *)(a3 + 16) = v21;
  *(_QWORD *)(a3 + 24) = v20;
  *(_QWORD *)(a3 + 32) = v4;
  *(double *)(a3 + 40) = v23;
  *(_QWORD *)(a3 + 48) = v24;
  *(_QWORD *)(a3 + 56) = v25;
  *(_QWORD *)(a3 + 64) = v26;
  *(_BYTE *)(a3 + 72) = 0;
}

void sub_100769E88(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100769D54(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_100769E90(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAC4BC, 1);
}

uint64_t sub_100769EA0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned __int8 v107;
  unsigned __int8 v108;
  int v109;

  v94 = a3;
  v91 = a5;
  v93 = sub_100007E8C(&qword_1011C76E0);
  v90 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v92 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v89 = (char *)&v68 - v10;
  v85 = sub_100007E8C(&qword_1011C76E8);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v82 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_100007E8C(&qword_1011C76F0);
  v87 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v83 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011C76F8);
  __chkstk_darwin(v13);
  v88 = (uint64_t)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v68 - v16;
  v18 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v18 = a1 & 0xFFFFFFFFFFFFLL;
  if (v18)
  {
    v19.n128_f64[0] = sub_10076A42C(a1, a2, a4 & 1, (uint64_t)&v95);
    v20 = v95;
    v21 = v96;
    v80 = v95;
    v79 = v96;
    v22 = v97;
    v78 = v97;
    v23 = v99;
    v72 = v98;
    v77 = v99;
    v24 = v100;
    v25 = v101;
    v76 = v100;
    v75 = v101;
    v27 = v102;
    v26 = v103;
    v74 = v102;
    v73 = v103;
    v28 = v104;
    v71 = v105;
    v81 = v17;
    v29 = v106;
    v70 = v107;
    v69 = v108;
    v30 = static HierarchicalShapeStyle.primary.getter(v19);
    v95 = v20;
    v96 = v21;
    v97 = v22;
    v31 = v72;
    v98 = v72;
    v99 = v23;
    v100 = v24;
    v101 = v25;
    v102 = v27;
    v103 = v26;
    v32 = v71;
    v104 = v28;
    v105 = v71;
    v106 = v29;
    v33 = v29;
    LOBYTE(v27) = v70;
    v107 = v70;
    LOBYTE(v24) = v69;
    v108 = v69;
    v109 = v30;
    v34 = static Font.Weight.semibold.getter(v30);
    v35 = sub_100007E8C(&qword_1011C7700);
    v36 = sub_10076AAB8();
    v37 = v82;
    View.fontWeight(_:)(*(_QWORD *)&v34, 0, v35, v36);
    sub_10076AC34(v80, v79, v78, v31, v77, v76, v75, v74, v73, v28, v32, v33, v27, v24);
    LOBYTE(v34) = static Edge.Set.top.getter(v38);
    v39 = EdgeInsets.init(_all:)(28.0);
    v41 = v40;
    v43 = v42;
    v45 = v44;
    v46 = v84;
    v47 = (uint64_t)v83;
    v48 = v85;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v83, v37, v85);
    v49 = v86;
    v50 = v47 + *(int *)(v86 + 36);
    *(_BYTE *)v50 = LOBYTE(v34);
    *(double *)(v50 + 8) = v39;
    *(_QWORD *)(v50 + 16) = v41;
    *(_QWORD *)(v50 + 24) = v43;
    *(_QWORD *)(v50 + 32) = v45;
    *(_BYTE *)(v50 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v48);
    v17 = v81;
    sub_100065228(v47, (uint64_t)v81, &qword_1011C76F0);
    v51 = 0;
    v52 = v49;
  }
  else
  {
    v51 = 1;
    v52 = v86;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v17, v51, 1, v52);
  v95 = v94;
  KeyPath = swift_getKeyPath(&unk_100ECEBC0);
  swift_bridgeObjectRetain();
  v54 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v55 = sub_100007E8C((uint64_t *)&unk_1011B57F0);
  v56 = sub_100049F28(&qword_1011C7740, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v57 = sub_1001DAEF8();
  v58 = v89;
  ForEach<>.init(_:id:content:)(&v95, KeyPath, sub_10076A8F4, 0, v54, v55, v56, &protocol witness table for String, v57);
  v59 = v88;
  sub_10004A160((uint64_t)v17, v88, &qword_1011C76F8);
  v60 = v90;
  v61 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  v63 = v92;
  v62 = v93;
  v61(v92, v58, v93);
  v64 = v91;
  sub_10004A160(v59, v91, &qword_1011C76F8);
  v65 = sub_100007E8C(&qword_1011C7748);
  v61((char *)(v64 + *(int *)(v65 + 48)), v63, v62);
  v66 = *(void (**)(char *, uint64_t))(v60 + 8);
  v66(v58, v62);
  sub_10004FF60((uint64_t)v17, &qword_1011C76F8);
  v66(v63, v62);
  return sub_10004FF60(v59, &qword_1011C76F8);
}

double sub_10076A42C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t KeyPath;
  unsigned __int8 v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  double result;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[4];
  __int128 v45;
  __int128 v46;
  __int16 v47;
  _OWORD v48[6];
  char v49;
  char v50;

  v8 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    sub_10076A618(a1, a2);
    v12 = Text.init(_:)(v10, v11);
    v14 = v13;
    v16 = v15;
    v18 = v17 & 1;
    KeyPath = swift_getKeyPath(&unk_100ECEBD8);
    v20 = static Edge.Set.bottom.getter(KeyPath);
    v21 = EdgeInsets.init(_all:)(4.0);
    v40 = v12;
    v41 = v14;
    v42 = v18;
    v43 = v16;
    v44[0] = KeyPath;
    *(_OWORD *)&v44[1] = xmmword_100EA93A0;
    v44[3] = v20;
    *(double *)&v45 = v21;
    *((_QWORD *)&v45 + 1) = v22;
    *(_QWORD *)&v46 = v23;
    *((_QWORD *)&v46 + 1) = v24;
    v47 = 0;
  }
  else
  {
    *(_QWORD *)&v48[0] = a1;
    *((_QWORD *)&v48[0] + 1) = a2;
    v25 = sub_100055B68();
    swift_bridgeObjectRetain();
    v40 = Text.init<A>(_:)(v48, &type metadata for String, v25);
    v41 = v26;
    v42 = v27 & 1;
    v43 = v28;
    memset(v44, 0, sizeof(v44));
    v45 = 0u;
    v46 = 0u;
    v47 = 256;
  }
  v29 = sub_100007E8C(&qword_1011C7738);
  v30 = sub_10076ABC8();
  _ConditionalContent<>.init(storage:)(&v40, v29, &type metadata for Text, v30, &protocol witness table for Text);
  result = *(double *)v48;
  v32 = v48[1];
  v33 = v48[2];
  v34 = v48[3];
  v35 = v48[4];
  v36 = v48[5];
  v37 = v49;
  v38 = v50;
  *(_OWORD *)a4 = v48[0];
  *(_OWORD *)(a4 + 16) = v32;
  *(_OWORD *)(a4 + 32) = v33;
  *(_OWORD *)(a4 + 48) = v34;
  *(_OWORD *)(a4 + 64) = v35;
  *(_OWORD *)(a4 + 80) = v36;
  *(_BYTE *)(a4 + 96) = v37;
  *(_BYTE *)(a4 + 97) = v38;
  return result;
}

uint64_t sub_10076A618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v31;
  _QWORD v32[2];

  v4 = sub_100007E8C(&qword_1011A1070);
  __chkstk_darwin(v4);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A1078);
  __chkstk_darwin(v7);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A1080);
  __chkstk_darwin(v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A1088);
  __chkstk_darwin(v13);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A1090);
  __chkstk_darwin(v16);
  v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v19);
  v21 = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = swift_bridgeObjectRetain();
  AttributeContainer.init()(v22);
  AttributedString.init(_:attributes:)(a1, a2, v21);
  v32[0] = swift_getKeyPath(&unk_100ECEC08);
  KeyPath = swift_getKeyPath(&unk_100ECEC38);
  v24 = type metadata accessor for Text.Encapsulation.Scale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 1, 1, v24);
  v25 = type metadata accessor for Text.Encapsulation.Shape(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 1, 1, v25);
  v26 = type metadata accessor for Text.Encapsulation.Style(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 1, 1, v26);
  v27 = type metadata accessor for Text.Encapsulation.PlatterSize(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 1, 1, v27);
  v31 = 1;
  Text.Encapsulation.init(scale:shape:style:platterSize:lineWeight:color:minimumWidth:)(v15, v12, v9, v6, 0, 1, 0, 0, v31);
  v28 = type metadata accessor for Text.Encapsulation(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v18, 0, 1, v28);
  v29 = sub_1000F5F74();
  return AttributedString.subscript.setter(v18, KeyPath, v29);
}

void sub_10076A8F4(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD v20[2];

  v3 = a1[1];
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = *a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    v20[0] = *a1;
    v20[1] = v3;
    v5 = sub_100055B68();
    swift_bridgeObjectRetain();
    v6 = Text.init<A>(_:)(v20, &type metadata for String, v5);
    v8 = v7;
    v10 = v9;
    v12 = v11 & 1;
    LODWORD(v20[0]) = static HierarchicalShapeStyle.secondary.getter(v6);
    v13 = Text.foregroundStyle<A>(_:)(v20, v6, v8, v12, v10, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v15 = v14;
    v17 = v16;
    v19 = v18 & 1;
    sub_100055BAC(v6, v8, v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
    v15 = 0;
    v19 = 0;
    v17 = 0;
  }
  *a2 = v13;
  a2[1] = v15;
  a2[2] = v19;
  a2[3] = v17;
}

uint64_t sub_10076A9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_BYTE *)(v2 + 24);
  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v8 = sub_100007E8C(&qword_1011C76D8);
  return sub_100769EA0(v4, v5, v6, v7, a2 + *(int *)(v8 + 44));
}

uint64_t sub_10076AA68(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAC494, 1);
}

uint64_t sub_10076AA78(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for JSObject, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10076AAB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7708;
  if (!qword_1011C7708)
  {
    v1 = sub_100044B54(&qword_1011C7700);
    sub_1000E4570(&qword_1011C7710, &qword_1011C7718, (void (*)(void))sub_10076AB5C, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7708);
  }
  return result;
}

unint64_t sub_10076AB5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7720;
  if (!qword_1011C7720)
  {
    v1 = sub_100044B54(&qword_1011C7728);
    sub_10076ABC8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7720);
  }
  return result;
}

unint64_t sub_10076ABC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7730;
  if (!qword_1011C7730)
  {
    v1 = sub_100044B54(&qword_1011C7738);
    sub_1001C9648();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7730);
  }
  return result;
}

double sub_10076AC34(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14)
{
  double result;

  sub_100055BAC(a1, a2, a3 & 1);
  if ((a14 & 1) == 0)
    swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10076AC90()
{
  return 8;
}

uint64_t sub_10076AC9C(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10076ACA4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_10076ACB8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10076ACC4()
{
  return sub_100049F28(&qword_1011C7750, &qword_1011C7758, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_10076ACF0()
{
  return sub_100049F28(&qword_1011C7760, &qword_1011C7768, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_10076AD1C()
{
  return sub_1000E4570(&qword_1011A0648, &qword_1011A0650, (void (*)(void))sub_1000E45D4, (uint64_t)&protocol conformance descriptor for <A> A?);
}

uint64_t sub_10076AE24()
{
  return type metadata accessor for PhotoLibraryPicker.Coordinator(0);
}

uint64_t type metadata accessor for PhotoLibraryPicker.Coordinator(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C77F8, (uint64_t)&nominal type descriptor for PhotoLibraryPicker.Coordinator);
}

uint64_t sub_10076AE40(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for PhotoLibraryPicker(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for PhotoLibraryPicker(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C7878, (uint64_t)&nominal type descriptor for PhotoLibraryPicker);
}

uint64_t *sub_10076AEC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    v6 = a2[2];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    v10 = sub_100007E8C(&qword_1011C7808);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    *v8 = *v9;
    if (EnumCaseMultiPayload == 1)
    {
      v8[1] = v9[1];
      swift_retain();
      swift_retain();
      v12 = *(int *)(sub_100007E8C(&qword_1011C7810) + 32);
      v13 = (char *)v8 + v12;
      v14 = (char *)v9 + v12;
      v15 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      v16 = v8;
      v17 = v10;
      v18 = 1;
    }
    else
    {
      swift_retain();
      v16 = v8;
      v17 = v10;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
  return a1;
}

void sub_10076AFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_100007E8C(&qword_1011C7808);
  LODWORD(a1) = swift_getEnumCaseMultiPayload(v4, v5);
  swift_release();
  if ((_DWORD)a1 == 1)
  {
    swift_release();
    v6 = v4 + *(int *)(sub_100007E8C(&qword_1011C7810) + 32);
    v7 = type metadata accessor for PresentationMode(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
}

_QWORD *sub_10076B078(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a2[1];
  v5 = a2[2];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  swift_retain();
  v9 = sub_100007E8C(&qword_1011C7808);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
  *v7 = *v8;
  if (EnumCaseMultiPayload == 1)
  {
    v7[1] = v8[1];
    swift_retain();
    swift_retain();
    v11 = *(int *)(sub_100007E8C(&qword_1011C7810) + 32);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = 1;
  }
  else
  {
    swift_retain();
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v15);
  return a1;
}

_QWORD *sub_10076B160(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_10004FF60((uint64_t)a1 + v7, &qword_1011C7808);
    v10 = sub_100007E8C(&qword_1011C7808);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    *v8 = *v9;
    if (EnumCaseMultiPayload == 1)
    {
      v8[1] = v9[1];
      swift_retain();
      swift_retain();
      v12 = *(int *)(sub_100007E8C(&qword_1011C7810) + 32);
      v13 = (char *)v8 + v12;
      v14 = (char *)v9 + v12;
      v15 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      v16 = 1;
    }
    else
    {
      swift_retain();
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v16);
  }
  return a1;
}

uint64_t sub_10076B274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  v7 = sub_100007E8C(&qword_1011C7808);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = v6[1];
    *v5 = *v6;
    v5[1] = v8;
    v9 = *(int *)(sub_100007E8C(&qword_1011C7810) + 32);
    v10 = (char *)v5 + v9;
    v11 = (char *)v6 + v9;
    v12 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10076B34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_10004FF60(a1 + v6, &qword_1011C7808);
    v9 = sub_100007E8C(&qword_1011C7808);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = v8[1];
      *v7 = *v8;
      v7[1] = v10;
      v11 = *(int *)(sub_100007E8C(&qword_1011C7810) + 32);
      v12 = (char *)v7 + v11;
      v13 = (char *)v8 + v11;
      v14 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10076B44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10076B458);
}

uint64_t sub_10076B458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C7818);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_10076B4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10076B4E4);
}

uint64_t sub_10076B4E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C7818);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_10076B55C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for () + 64;
  sub_10076B5E0(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_10076B5E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011C7888)
  {
    v2 = sub_100044B54(&qword_1011C7810);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011C7888);
  }
}

id sub_10076B638()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v5;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIImagePickerController), "init");
  objc_msgSend(v1, "setAllowsEditing:", 0);
  objc_msgSend(v1, "setSourceType:", *v0);
  v2 = sub_100007E8C(&qword_1011C78C8);
  UIViewControllerRepresentableContext.coordinator.getter(&v5, v2);
  v3 = v5;
  objc_msgSend(v1, "setDelegate:", v5);

  return v1;
}

uint64_t sub_10076B6DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  id v8;
  uint64_t result;
  objc_super v10;

  __chkstk_darwin(a1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10076B8C4(v2, (uint64_t)v5);
  v6 = (objc_class *)type metadata accessor for PhotoLibraryPicker.Coordinator(0);
  v7 = objc_allocWithZone(v6);
  sub_10076B8C4((uint64_t)v5, (uint64_t)v7 + OBJC_IVAR____TtCV5Music18PhotoLibraryPicker11Coordinator_representable);
  v10.receiver = v7;
  v10.super_class = v6;
  v8 = objc_msgSendSuper2(&v10, "init");
  result = sub_10076B908((uint64_t)v5);
  *a2 = v8;
  return result;
}

uint64_t sub_10076B78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748((unint64_t *)&unk_1011C78D0, type metadata accessor for PhotoLibraryPicker, (uint64_t)&unk_100ECECF4);
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10076B7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748((unint64_t *)&unk_1011C78D0, type metadata accessor for PhotoLibraryPicker, (uint64_t)&unk_100ECECF4);
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10076B85C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748((unint64_t *)&unk_1011C78D0, type metadata accessor for PhotoLibraryPicker, (uint64_t)&unk_100ECECF4);
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_10076B898()
{
  return sub_100048748(&qword_1011C78C0, type metadata accessor for PhotoLibraryPicker, (uint64_t)&unk_100ECECA4);
}

uint64_t sub_10076B8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotoLibraryPicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10076B908(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PhotoLibraryPicker(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10076B944(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSString *v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  id v17;
  void (*v18)(void);
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  id v24;
  __int128 v25;
  __int128 v26;

  v2 = v1;
  v4 = type metadata accessor for PresentationMode(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C(&qword_1011C7818);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011C7810);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v25 = 0u;
    v26 = 0u;
    goto LABEL_8;
  }
  v13 = UIImagePickerControllerOriginalImage;
  v14 = sub_10079C328(v13);
  if ((v15 & 1) == 0)
  {
    v25 = 0u;
    v26 = 0u;

    goto LABEL_8;
  }
  sub_10004FA40(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v25);

  if (!*((_QWORD *)&v26 + 1))
  {
LABEL_8:
    sub_10004FF60((uint64_t)&v25, &qword_10119DCC0);
    goto LABEL_9;
  }
  v16 = sub_1005BE204();
  if ((swift_dynamicCast(&v24, &v25, (char *)&type metadata for Any + 8, v16, 6) & 1) != 0)
  {
    v17 = v24;
    v18 = *(void (**)(void))(v2 + OBJC_IVAR____TtCV5Music18PhotoLibraryPicker11Coordinator_representable + 8);
    v19 = objc_msgSend(v24, "CGImage", swift_retain().n128_f64[0]);
    v18();

    swift_release();
  }
LABEL_9:
  v20 = v2 + OBJC_IVAR____TtCV5Music18PhotoLibraryPicker11Coordinator_representable;
  v21 = type metadata accessor for PhotoLibraryPicker(0);
  sub_10076BB8C(v20 + *(int *)(v21 + 24), (uint64_t)v9);
  sub_100825660((uint64_t)v12);
  sub_10004FF60((uint64_t)v9, &qword_1011C7818);
  Binding.wrappedValue.getter(v6, v10);
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter(v6, v10);
  return sub_10004FF60((uint64_t)v12, &qword_1011C7810);
}

uint64_t sub_10076BB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011C7818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10076BBD4()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id result;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _OWORD v16[2];

  if (qword_10119C7A0 != -1)
    swift_once(&qword_10119C7A0, sub_1007793E8);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_1011C78E0);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v16, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_100065228((uint64_t)v16, (uint64_t)&v13, &qword_10119DCC0);
  if (*((_QWORD *)&v14 + 1))
  {
    v3 = type metadata accessor for AppInterfaceContext();
    if ((swift_dynamicCast(&v12, &v13, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
      return (id)v12;
  }
  else
  {
    sub_10004FF60((uint64_t)&v13, &qword_10119DCC0);
  }
  v5 = objc_msgSend(v0, "parentViewController");
  if (v5)
  {
    v6 = v5;
    v4 = (id)sub_10076BBD4();
LABEL_12:

    return v4;
  }
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v8 = result;
    v4 = objc_msgSend(result, "window");

    if (!v4)
      return v4;
    v6 = objc_msgSend(v4, "windowScene");

    if (!v6)
      return 0;
    v9 = objc_msgSend(v6, "delegate");
    if (v9
      && (*(_QWORD *)&v16[0] = v9,
          v10 = sub_100007E8C(&qword_1011A9300),
          v11 = sub_100007E8C(&qword_1011A3120),
          (swift_dynamicCast(&v13, v16, v10, v11, 6) & 1) != 0))
    {
      if (*((_QWORD *)&v14 + 1))
      {
        v4 = *(id *)(*sub_100007E68(&v13, *((uint64_t *)&v14 + 1))
                   + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
        swift_retain(v4);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v13);
        goto LABEL_12;
      }
    }
    else
    {
      v15 = 0;
      v13 = 0u;
      v14 = 0u;
    }
    sub_10004FF60((uint64_t)&v13, (uint64_t *)&unk_1011A3110);
    v4 = 0;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10076BE0C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  char v18;

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain(a3);
  v12 = 0;
  while (v9)
  {
    v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v14 = v13 | (v12 << 6);
LABEL_5:
    v18 = *(_BYTE *)(*(_QWORD *)(a3 + 48) + v14);
    result = a1(&v18);
    if (v3)
      return swift_release(a3);
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v10)
    return swift_release(a3);
  v16 = *(_QWORD *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_19:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v10)
    return swift_release(a3);
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 2;
  if (v12 + 2 >= v10)
    return swift_release(a3);
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 3;
  if (v12 + 3 >= v10)
    return swift_release(a3);
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 4;
  if (v12 + 4 >= v10)
    return swift_release(a3);
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      return swift_release(a3);
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_10076BF84(void (*a1)(uint64_t *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36;

  v4 = v3;
  v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    if (a3 < 0)
      v7 = a3;
    else
      v7 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = __CocoaSet.makeIterator()(v7);
    v9 = type metadata accessor for ImpressionTracker();
    v10 = sub_100048748((unint64_t *)&unk_1011C7C60, (uint64_t (*)(uint64_t))type metadata accessor for ImpressionTracker, (uint64_t)&unk_100EBD34C);
    v11 = Set.Iterator.init(_cocoa:)(v35, v8, v9, v10);
    v5 = v35[0];
    v33 = v35[1];
    v12 = v35[2];
    v13 = v35[3];
    v14 = v35[4];
  }
  else
  {
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v33 = a3 + 56;
    v16 = ~v15;
    v17 = -v15;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v14 = v18 & *(_QWORD *)(a3 + 56);
    v11 = (_QWORD *)swift_bridgeObjectRetain();
    v12 = v16;
    v13 = 0;
  }
  v32 = (unint64_t)(v12 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v19 = __CocoaSet.Iterator.next()(v11);
  if (v19)
  {
    v20 = v19;
    v34 = v19;
    v21 = type metadata accessor for ImpressionTracker();
    swift_unknownObjectRetain(v20, v22);
    swift_dynamicCast(&v36, &v34, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
    v23 = v36;
    v24 = swift_unknownObjectRelease(v20);
    v25 = v13;
    v26 = v14;
    while (v23)
    {
      v36 = v23;
      a1(&v36, v24);
      swift_release();
      if (v4)
      {
        v31 = v5;
        goto LABEL_39;
      }
      v13 = v25;
      v14 = v26;
      if (v5 < 0)
        goto LABEL_11;
LABEL_14:
      if (v14)
      {
        v26 = (v14 - 1) & v14;
        v27 = __clz(__rbit64(v14)) | (v13 << 6);
        v25 = v13;
      }
      else
      {
        v25 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
          return;
        }
        if (v25 >= v32)
          break;
        v28 = *(_QWORD *)(v33 + 8 * v25);
        if (!v28)
        {
          v29 = v13 + 2;
          if (v13 + 2 >= v32)
            break;
          v28 = *(_QWORD *)(v33 + 8 * v29);
          if (v28)
            goto LABEL_25;
          v29 = v13 + 3;
          if (v13 + 3 >= v32)
            break;
          v28 = *(_QWORD *)(v33 + 8 * v29);
          if (v28)
            goto LABEL_25;
          v29 = v13 + 4;
          if (v13 + 4 >= v32)
            break;
          v28 = *(_QWORD *)(v33 + 8 * v29);
          if (v28)
          {
LABEL_25:
            v25 = v29;
          }
          else
          {
            v25 = v13 + 5;
            if (v13 + 5 >= v32)
              break;
            v28 = *(_QWORD *)(v33 + 8 * v25);
            if (!v28)
            {
              v30 = v13 + 6;
              while (v32 != v30)
              {
                v28 = *(_QWORD *)(v33 + 8 * v30++);
                if (v28)
                {
                  v25 = v30 - 1;
                  goto LABEL_26;
                }
              }
              break;
            }
          }
        }
LABEL_26:
        v26 = (v28 - 1) & v28;
        v27 = __clz(__rbit64(v28)) + (v25 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v27);
      v24 = swift_retain();
    }
  }
  v31 = v5;
LABEL_39:
  sub_10004FA7C(v31);
}

void sub_10076C27C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  void (*v24)(char *);

  v24 = a1;
  v5 = type metadata accessor for SidebarMenu.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - v10;
  v12 = *(_QWORD *)(a3 + 56);
  v22 = a3 + 56;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v23 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  v16 = 0;
  while (v15)
  {
    v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v18 = v17 | (v16 << 6);
LABEL_5:
    sub_10005B704(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v6 + 72) * v18, (uint64_t)v11, type metadata accessor for SidebarMenu.Item);
    sub_10005B6C0((uint64_t)v11, (uint64_t)v8, type metadata accessor for SidebarMenu.Item);
    v24(v8);
    sub_10005B748((uint64_t)v8, type metadata accessor for SidebarMenu.Item);
    if (v3)
      goto LABEL_24;
  }
  if (__OFADD__(v16++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v16 >= v23)
    goto LABEL_24;
  v20 = *(_QWORD *)(v22 + 8 * v16);
  if (v20)
  {
LABEL_19:
    v15 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_5;
  }
  v21 = v16 + 1;
  if (v16 + 1 >= v23)
    goto LABEL_24;
  v20 = *(_QWORD *)(v22 + 8 * v21);
  if (v20)
    goto LABEL_18;
  v21 = v16 + 2;
  if (v16 + 2 >= v23)
    goto LABEL_24;
  v20 = *(_QWORD *)(v22 + 8 * v21);
  if (v20)
    goto LABEL_18;
  v21 = v16 + 3;
  if (v16 + 3 >= v23)
    goto LABEL_24;
  v20 = *(_QWORD *)(v22 + 8 * v21);
  if (v20)
    goto LABEL_18;
  v21 = v16 + 4;
  if (v16 + 4 >= v23)
  {
LABEL_24:
    swift_release();
    return;
  }
  v20 = *(_QWORD *)(v22 + 8 * v21);
  if (v20)
  {
LABEL_18:
    v16 = v21;
    goto LABEL_19;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v23)
      goto LABEL_24;
    v20 = *(_QWORD *)(v22 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

void sub_10076C4B8(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  int64_t v20;
  _QWORD v21[4];
  void (*v22)(_QWORD *);

  v22 = a1;
  v19 = a3 + 56;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 56);
  v20 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (v7)
  {
    v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v10 = v9 | (v8 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 32 * v10);
    v12 = *v11;
    v13 = v11[1];
    v14 = v11[2];
    v15 = v11[3];
    v21[0] = v12;
    v21[1] = v13;
    v21[2] = v14;
    v21[3] = v15;
    sub_10004A12C(v12, v13, v14, v15);
    v22(v21);
    sub_10004A0F8(v12, v13, v14, v15);
    if (v3)
      goto LABEL_24;
  }
  if (__OFADD__(v8++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v8 >= v20)
    goto LABEL_24;
  v17 = *(_QWORD *)(v19 + 8 * v8);
  if (v17)
  {
LABEL_19:
    v7 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_5;
  }
  v18 = v8 + 1;
  if (v8 + 1 >= v20)
    goto LABEL_24;
  v17 = *(_QWORD *)(v19 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v8 + 2;
  if (v8 + 2 >= v20)
    goto LABEL_24;
  v17 = *(_QWORD *)(v19 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v8 + 3;
  if (v8 + 3 >= v20)
    goto LABEL_24;
  v17 = *(_QWORD *)(v19 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v8 + 4;
  if (v8 + 4 >= v20)
  {
LABEL_24:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)(v19 + 8 * v18);
  if (v17)
  {
LABEL_18:
    v8 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v20)
      goto LABEL_24;
    v17 = *(_QWORD *)(v19 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

void *sub_10076C6A4(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t, __n128);
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  char v31[16];
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  void **v36;
  _BYTE v37[32];
  void *v38;
  char v39;

  v3 = type metadata accessor for SidebarMenu.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v29 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - v13;
  v15 = OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers;
  v16 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers];
  v17 = swift_bridgeObjectRetain();
  v18 = sub_1006A13E8(v17);
  swift_bridgeObjectRelease(v16);
  v19 = *(_QWORD *)&a1[v15];
  swift_bridgeObjectRetain();
  Array.subscript.getter((uint64_t)objc_msgSend(a1, "selectedIndex"), v19, (uint64_t)&type metadata for TabIdentifier, (uint64_t)v37);
  v20 = swift_bridgeObjectRelease(v19);
  v39 = v37[0];
  v30 = OBJC_IVAR____TtC5Music16TabBarController_isRestoringTabs;
  a1[OBJC_IVAR____TtC5Music16TabBarController_isRestoringTabs] = 1;
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
  v21(v14, 1, 1, v3, v20);
  v38 = &_swiftEmptySetSingleton;
  v32 = v1;
  v33 = a1;
  v34 = &v39;
  v35 = v14;
  v36 = &v38;
  sub_10076BE0C((uint64_t (*)(char *))sub_10077C740, (uint64_t)v31, v18);
  swift_bridgeObjectRelease(v18);
  sub_10004A160((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_1011CEE40);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v22(v11, 1, v3) == 1)
  {
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011CEE40);
  }
  else
  {
    v23 = (uint64_t)v11;
    v24 = v29;
    sub_10005B6C0(v23, v29, type metadata accessor for SidebarMenu.Item);
    sub_10005B704(v24, (uint64_t)v8, type metadata accessor for SidebarMenu.Item);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v8, 0, 1, v3);
    sub_100356210((uint64_t)v8, 1);
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011CEE40);
    sub_10005B748(v24, type metadata accessor for SidebarMenu.Item);
  }
  if (v22(v14, 1, v3) == 1)
  {
    v25 = v38;
    v26 = v1 + OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks, v37, 0, 0);
    sub_10004A160(v26, (uint64_t)v8, (uint64_t *)&unk_1011CEE40);
    swift_bridgeObjectRetain();
    sub_100356210((uint64_t)v8, 1);
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011CEE40);
    swift_bridgeObjectRelease(v25);
  }
  a1[v30] = 0;
  v27 = v38;
  sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011CEE40);
  return v27;
}

id sub_10076C9AC(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  double v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  void *v27;
  id v28;
  id result;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(unsigned __int8 *, _QWORD);
  _QWORD *v41;
  void *v42;
  _BYTE v43[16];
  char *v44;
  char *v45;
  _BYTE *v46;
  unsigned __int8 *v47;
  void **v48;
  unsigned __int8 v49[32];
  void *v50;
  unsigned __int8 v51;
  char v52[40];

  v3 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v3);
  v5 = &v43[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v49 = &_swiftEmptySetSingleton;
  v6 = OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers;
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers];
  v8 = v1;
  v9 = swift_bridgeObjectRetain();
  v10 = sub_1006A13E8(v9);
  swift_bridgeObjectRelease(v7);
  v11 = a1;
  sub_10077C5C0(v10, (uint64_t)v11, (uint64_t)v49);
  swift_bridgeObjectRelease(v10);

  v12 = *(_QWORD *)v49;
  v13 = (uint64_t)&v11[OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks];
  swift_beginAccess(&v11[OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks], v52, 0, 0);
  sub_10004A160(v13, (uint64_t)v5, (uint64_t *)&unk_1011CEE40);
  v8[OBJC_IVAR____TtC5Music16TabBarController_isRestoringTabs] = 1;
  v51 = 6;
  v50 = &_swiftEmptySetSingleton;
  v44 = v8;
  v45 = v11;
  v46 = v5;
  v47 = &v51;
  v48 = &v50;
  sub_10076C27C((void (*)(char *))sub_10077DADC, (uint64_t)v43, v12);
  swift_bridgeObjectRelease(v12);
  v14 = v51;
  if (v51 == 6)
    goto LABEL_11;
  v15 = *(_QWORD *)&v1[v6];
  swift_bridgeObjectRetain();
  Array.subscript.getter((uint64_t)objc_msgSend(v8, "selectedIndex"), v15, (uint64_t)&type metadata for TabIdentifier, (uint64_t)v49);
  swift_bridgeObjectRelease(v15);
  if (v49[0] != 6)
  {
    sub_10072DEC0(v14);
    if ((v16 & 1) != 0)
      goto LABEL_11;
  }
  v17 = *(_QWORD *)&v1[v6];
  swift_bridgeObjectRetain();
  v18 = sub_1008AB1D4(v14, v17);
  v20 = v19;
  *(_QWORD *)&v21 = swift_bridgeObjectRelease(v17).n128_u64[0];
  if ((v20 & 1) != 0)
    goto LABEL_11;
  v22 = objc_msgSend(v8, "viewControllers", v21);
  if (!v22)
    goto LABEL_11;
  v23 = v22;
  v24 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

  Array.subscript.getter(v18, v25, v24, (uint64_t)v49);
  *(_QWORD *)&v26 = swift_bridgeObjectRelease(v25).n128_u64[0];
  v27 = *(void **)v49;
  if (!*(_QWORD *)v49)
    goto LABEL_11;
  objc_msgSend(v8, "setSelectedViewController:", *(_QWORD *)v49, v26);
  v28 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_10072BC34(v14);

  result = objc_msgSend(v8, "view");
  if (result)
  {
    v30 = result;
    v31 = UIView.noticePresenter.getter();

    if (v31)
    {
      sub_100728D24();
      v33 = v32;
      v35 = v34;
      v37 = v36;
      v39 = v38;
      v40 = (void (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v31 + 248))(v49);
      v41[3] = v33;
      v41[4] = v35;
      v41[5] = v37;
      v41[6] = v39;
      v40(v49, 0);

      swift_release();
    }
    else
    {

    }
LABEL_11:
    v42 = v50;
    swift_bridgeObjectRetain();
    sub_10072F5E8(v14);
    swift_bridgeObjectRelease(v42);
    sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011CEE40);
    return v50;
  }
  __break(1u);
  return result;
}

void sub_10076CD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD v20[12];

  v20[5] = a6;
  v20[1] = a5;
  v20[3] = a4;
  v20[4] = a2;
  v20[11] = a3;
  v7 = sub_100007E8C((uint64_t *)&unk_1011AE1E0);
  __chkstk_darwin(v7);
  v8 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v8);
  v20[2] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v11 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v11);
  v20[0] = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v20 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)v20 - v17;
  sub_10005B704(a1, (uint64_t)v20 - v17, type metadata accessor for SidebarMenu.Item);
  sub_10005B6C0((uint64_t)v18, (uint64_t)v15, type metadata accessor for SidebarMenu.Item);
  v19 = (char *)sub_10076CEB0 + 4 * byte_100ECED70[swift_getEnumCaseMultiPayload(v15, v11)];
  __asm { BR              X10 }
}

void sub_10076CEB0()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  v8 = *v0 + 1;
  swift_beginAccess(*(_QWORD *)(v7 - 72) + OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks, v7 - 104, 33, 0);
  v9 = sub_100355A80(v3);
  swift_endAccess(v7 - 104);
  sub_10005B704(v3, v1, type metadata accessor for SidebarMenu.Item);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v1, 0, 1, v4);
  v10 = v5 + *(int *)(v6 + 48);
  sub_10004A160(v1, v5, (uint64_t *)&unk_1011CEE40);
  sub_10004A160(*(_QWORD *)(v7 - 136), v10, (uint64_t *)&unk_1011CEE40);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v11(v5, 1, v4) == 1)
  {
    sub_10004FF60(v1, (uint64_t *)&unk_1011CEE40);
    if (v11(v10, 1, v4) == 1)
    {
      sub_10004FF60(v5, (uint64_t *)&unk_1011CEE40);
LABEL_8:
      **(_BYTE **)(v7 - 152) = v8;
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v7 - 144);
  sub_10004A160(v5, v12, (uint64_t *)&unk_1011CEE40);
  if (v11(v10, 1, v4) == 1)
  {
    sub_10004FF60(v1, (uint64_t *)&unk_1011CEE40);
    sub_10005B748(v12, type metadata accessor for SidebarMenu.Item);
LABEL_6:
    sub_10004FF60(v5, (uint64_t *)&unk_1011AE1E0);
    goto LABEL_9;
  }
  v13 = *(_QWORD *)(v7 - 160);
  sub_10005B6C0(v10, v13, type metadata accessor for SidebarMenu.Item);
  sub_100300E0C(v12, v13);
  v15 = v14;
  sub_10005B748(v13, type metadata accessor for SidebarMenu.Item);
  sub_10004FF60(v1, (uint64_t *)&unk_1011CEE40);
  sub_10005B748(v12, type metadata accessor for SidebarMenu.Item);
  sub_10004FF60(v5, (uint64_t *)&unk_1011CEE40);
  if ((v15 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  sub_10077C768((uint64_t)v9, v3);
  sub_10077C82C(v8, (uint64_t)v9, v3);
  sub_1001941A4(v7 - 104, v8);

}

uint64_t sub_10076D0EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  id v27;
  void *v28;
  char v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a6;
  v35 = a5;
  v36 = a4;
  v10 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v10);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SidebarMenu.Item(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v37 = (uint64_t)v34 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)v34 - v20;
  v38 = a2;
  sub_10076DDF8(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011CEE40);
  v34[1] = v6;
  sub_10005B6C0((uint64_t)v12, (uint64_t)v21, type metadata accessor for SidebarMenu.Item);
  v23 = *(_QWORD *)(a3 + OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers);
  swift_bridgeObjectRetain();
  v24 = sub_1008AB1D4(a1, v23);
  v26 = v25;
  swift_bridgeObjectRelease(v23);
  if ((v26 & 1) != 0 || (v27 = sub_10072D9D8(v24)) == 0)
  {
    v33 = (uint64_t)v21;
  }
  else
  {
    v28 = v27;
    if (v36 != 6)
    {
      sub_10072DEC0(a1);
      if ((v29 & 1) != 0)
      {
        v30 = v35;
        sub_10004FF60(v35, (uint64_t *)&unk_1011CEE40);
        sub_10005B704((uint64_t)v21, v30, type metadata accessor for SidebarMenu.Item);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v30, 0, 1, v13);
      }
    }
    v31 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NavigationController()), "init");
    sub_10077D070(a1, v31);

    objc_msgSend(v28, "additionalSafeAreaInsets");
    objc_msgSend(v28, "setAdditionalSafeAreaInsets:");
    sub_10077D1F8((uint64_t)v21, v28, a1);
    sub_10005B704((uint64_t)v21, (uint64_t)v16, type metadata accessor for SidebarMenu.Item);
    v32 = v37;
    sub_100194530(v37, (uint64_t)v16);

    sub_10005B748(v32, type metadata accessor for SidebarMenu.Item);
    v33 = (uint64_t)v21;
  }
  return sub_10005B748(v33, type metadata accessor for SidebarMenu.Item);
}

uint64_t sub_10076D3BC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v7 = *(_QWORD *)(type metadata accessor for SidebarMenu.Item(0) - 8);
    v8 = *(unsigned __int8 *)(v7 + 80);
    v9 = *(_QWORD *)(v7 + 72);
    --v4;
    v10 = a3 + ((v8 + 32) & ~v8) + v9 * v4;
    v11 = -v9;
    while (1)
    {
      v12 = a1(v10);
      if (v3 || (v12 & 1) != 0)
        break;
      --v4;
      v10 += v11;
      if (v4 == -1)
        return 0;
    }
  }
  return v4;
}

unint64_t sub_10076D474(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  id v9;
  void *v10;
  char v11;
  uint64_t v12;
  id v14;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_17;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    do
    {
      while (__OFSUB__(v7--, 1))
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        if (a3 < 0)
          v12 = a3;
        else
          v12 = a3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a3);
        v7 = _CocoaArrayWrapper.endIndex.getter(v12);
        swift_bridgeObjectRelease(a3);
        if (!v7)
          return v7;
      }
      if ((a3 & 0xC000000000000001) != 0)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a3);
        goto LABEL_9;
      }
      if ((v7 & 0x8000000000000000) != 0)
        goto LABEL_15;
      if (v7 >= *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_16;
      v9 = *(id *)(a3 + 32 + 8 * v7);
LABEL_9:
      v10 = v9;
      v14 = v9;
      v11 = a1(&v14);

    }
    while (!v4 && (v11 & 1) == 0 && v7);
  }
  return v7;
}

void sub_10076D5A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _BYTE *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t isEscapingClosureAtFileLocation;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unsigned __int8 *i;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  unsigned __int8 *v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 *v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unsigned __int8 *v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char *v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void **aBlock;
  uint64_t v88;
  void (*v89)(uint64_t, void *);
  void *v90;
  double (*v91)(_QWORD);
  uint64_t v92;

  v85 = a2;
  v86 = a3;
  v6 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v6);
  v81 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v8);
  v83 = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v84 = (char *)&v79 - v11;
  v12 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v79 - v16;
  v18 = type metadata accessor for Playlist(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v80 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v79 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v79 - v25;
  LOBYTE(aBlock) = 5;
  v82 = (_QWORD *)sub_10004D63C();
  v27 = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, (uint64_t)v82);
  if ((v27 & 1) != 0)
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    v28(v26, a1, v18);
    v29 = sub_100007E8C((uint64_t *)&unk_1011AD760);
    v30 = *(int *)(v29 + 48);
    v82 = a4;
    v31 = *(int *)(v29 + 64);
    v32 = _s6AlbumsV5ScopeOMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 1, 1, v32);
    v17[v30] = 0;
    v17[v31] = 0;
    swift_storeEnumTagMultiPayload(v17, v12, 0);
    v33 = type metadata accessor for URL(0);
    v34 = (uint64_t)v84;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v84, 1, 1, v33);
    v28(v23, (uint64_t)v26, v18);
    sub_10005B704((uint64_t)v17, (uint64_t)v14, type metadata accessor for ContainerDetail.Source);
    v35 = v83;
    sub_10004A160(v34, v83, &qword_10119E460);
    v36 = v86;
    swift_bridgeObjectRetain();
    v37 = sub_10096EE44((uint64_t)v23, (uint64_t)v14, v85, v36, v35);
    v38 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
    v39 = sub_1003728E0(v37, 0, v38);
    sub_10004FF60(v34, &qword_10119E460);
    sub_10005B748((uint64_t)v17, type metadata accessor for ContainerDetail.Source);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v18);
    v40 = sub_100007E8C((uint64_t *)&unk_1011A9590);
    v41 = v82;
    v42 = (char *)v82 + *(int *)(v40 + 48);
    *v82 = v39;
    v43 = type metadata accessor for UITraitOverrides(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 1, 1, v43);
    v44 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
    swift_storeEnumTagMultiPayload(v41, v44, 4);
    v45 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v41, v45, 0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v41, 0, 1, v45);
    return;
  }
  isEscapingClosureAtFileLocation = Playlist.id.getter(v27);
  v48 = v47;
  v49 = HIBYTE(v47) & 0xF;
  v50 = isEscapingClosureAtFileLocation & 0xFFFFFFFFFFFFLL;
  if ((v48 & 0x2000000000000000) != 0)
    v51 = v49;
  else
    v51 = isEscapingClosureAtFileLocation & 0xFFFFFFFFFFFFLL;
  if (v51)
  {
    if ((v48 & 0x1000000000000000) != 0)
    {
      v52 = a4;
      v54 = sub_1001AF604(isEscapingClosureAtFileLocation, v48, 10);
      v56 = v78;
      goto LABEL_47;
    }
    if ((v48 & 0x2000000000000000) == 0)
    {
      v52 = a4;
      if ((isEscapingClosureAtFileLocation & 0x1000000000000000) == 0)
        goto LABEL_65;
      for (i = (unsigned __int8 *)((v48 & 0xFFFFFFFFFFFFFFFLL) + 32);
            ;
            i = (unsigned __int8 *)_StringObject.sharedUTF8.getter(isEscapingClosureAtFileLocation, v48))
      {
        v54 = (uint64_t)sub_1001AF5E4(i, v50, 10);
        v56 = v55 & 1;
LABEL_47:
        swift_bridgeObjectRelease(v48);
        if ((v56 & 1) != 0)
          goto LABEL_62;
        sub_10004A07C(0, (unint64_t *)&qword_10119E4F0, MPIdentifierSet_ptr);
        sub_10004A07C(0, (unint64_t *)&unk_1011A92E0, MPModelPlaylist_ptr);
        v66 = static MPModelPlaylist.defaultMusicKind.getter();
        MPIdentifierSet.init(kind:deviceLibraryPID:)(v66, v54);
        v48 = v67;
        v68 = objc_allocWithZone((Class)MPModelPlaylist);
        v91 = UIScreen.Dimensions.size.getter;
        v92 = 0;
        aBlock = _NSConcreteStackBlock;
        v88 = 1107296256;
        v89 = sub_10004BF88;
        v90 = &unk_1010DAFB0;
        v69 = _Block_copy(&aBlock);
        v70 = objc_msgSend(v68, "initWithIdentifiers:block:", v48, v69);

        _Block_release(v69);
        swift_release();
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1);
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          break;
        __break(1u);
LABEL_65:
        ;
      }
      LOBYTE(aBlock) = 5;
      if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, (uint64_t)v82) & 1) != 0)
      {
        v70 = v70;
        v71 = (uint64_t)v81;
        dispatch thunk of LegacyModelObjectConvertible.init(_:)(v70, v18, &protocol witness table for Playlist);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v71, 1, v18) != 1)
        {
          v73 = v80;
          (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v80, v71, v18);
          sub_10076D5A0(v73, 0, 0);
          (*(void (**)(char *, uint64_t))(v19 + 8))(v73, v18);
          goto LABEL_54;
        }
        sub_10004FF60(v71, &qword_1011A30F0);
      }
      v72 = type metadata accessor for AppInterfaceContext.Activity(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v52, 1, 1, v72);
LABEL_54:

      return;
    }
    aBlock = (void **)isEscapingClosureAtFileLocation;
    v88 = v48 & 0xFFFFFFFFFFFFFFLL;
    if (isEscapingClosureAtFileLocation == 43)
    {
      if (!v49)
      {
LABEL_67:
        __break(1u);
        return;
      }
      if (v49 != 1)
      {
        v52 = a4;
        if ((BYTE1(isEscapingClosureAtFileLocation) - 48) > 9u)
          goto LABEL_32;
        v54 = (BYTE1(isEscapingClosureAtFileLocation) - 48);
        if (v49 != 2)
        {
          if ((BYTE2(isEscapingClosureAtFileLocation) - 48) > 9u)
            goto LABEL_32;
          v54 = 10 * (BYTE1(isEscapingClosureAtFileLocation) - 48)
              + (BYTE2(isEscapingClosureAtFileLocation) - 48);
          v57 = v49 - 3;
          if (v57)
          {
            v58 = (unsigned __int8 *)&aBlock + 3;
            while (1)
            {
              v59 = *v58 - 48;
              if (v59 > 9)
                goto LABEL_32;
              v60 = 10 * v54;
              if ((unsigned __int128)(v54 * (__int128)10) >> 64 != (10 * v54) >> 63)
                goto LABEL_32;
              v54 = v60 + v59;
              if (__OFADD__(v60, v59))
                goto LABEL_32;
              v56 = 0;
              ++v58;
              if (!--v57)
                goto LABEL_47;
            }
          }
        }
        goto LABEL_46;
      }
    }
    else
    {
      if (isEscapingClosureAtFileLocation == 45)
      {
        if (v49)
        {
          if (v49 == 1 || (BYTE1(isEscapingClosureAtFileLocation) - 48) > 9u)
            goto LABEL_17;
          v52 = a4;
          if (v49 == 2)
          {
            v56 = 0;
            v54 = -(uint64_t)(BYTE1(isEscapingClosureAtFileLocation) - 48);
            goto LABEL_47;
          }
          if ((BYTE2(isEscapingClosureAtFileLocation) - 48) <= 9u)
          {
            v54 = -10 * (BYTE1(isEscapingClosureAtFileLocation) - 48)
                - (BYTE2(isEscapingClosureAtFileLocation) - 48);
            v65 = v49 - 3;
            if (!v65)
              goto LABEL_46;
            v74 = (unsigned __int8 *)&aBlock + 3;
            while (1)
            {
              v75 = *v74 - 48;
              if (v75 > 9)
                break;
              v76 = 10 * v54;
              if ((unsigned __int128)(v54 * (__int128)10) >> 64 != (10 * v54) >> 63)
                break;
              v54 = v76 - v75;
              if (__OFSUB__(v76, v75))
                break;
              v56 = 0;
              ++v74;
              if (!--v65)
                goto LABEL_47;
            }
          }
LABEL_32:
          v54 = 0;
          v56 = 1;
          goto LABEL_47;
        }
        __break(1u);
        goto LABEL_67;
      }
      if (v49)
      {
        v52 = a4;
        if ((isEscapingClosureAtFileLocation - 48) > 9u)
          goto LABEL_32;
        v54 = (isEscapingClosureAtFileLocation - 48);
        if (v49 != 1)
        {
          if ((BYTE1(isEscapingClosureAtFileLocation) - 48) > 9u)
            goto LABEL_32;
          v54 = 10 * (isEscapingClosureAtFileLocation - 48)
              + (BYTE1(isEscapingClosureAtFileLocation) - 48);
          v61 = v49 - 2;
          if (v61)
          {
            v62 = (unsigned __int8 *)&aBlock + 2;
            while (1)
            {
              v63 = *v62 - 48;
              if (v63 > 9)
                goto LABEL_32;
              v64 = 10 * v54;
              if ((unsigned __int128)(v54 * (__int128)10) >> 64 != (10 * v54) >> 63)
                goto LABEL_32;
              v54 = v64 + v63;
              if (__OFADD__(v64, v63))
                goto LABEL_32;
              v56 = 0;
              ++v62;
              if (!--v61)
                goto LABEL_47;
            }
          }
        }
LABEL_46:
        v56 = 0;
        goto LABEL_47;
      }
    }
LABEL_17:
    v52 = a4;
    goto LABEL_32;
  }
  v52 = a4;
  swift_bridgeObjectRelease(v48);
LABEL_62:
  v77 = type metadata accessor for AppInterfaceContext.Activity(0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v52, 1, 1, v77);
}

void sub_10076DDF8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[34];

  v2 = sub_100007E8C((uint64_t *)&unk_1011AD720);
  v18[18] = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v18[17] = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011B56A0);
  v18[15] = *(_QWORD *)(v4 - 8);
  v18[16] = v4;
  __chkstk_darwin(v4);
  v18[14] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3C50);
  __chkstk_darwin(v6);
  v18[20] = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A3C60);
  v18[22] = *(_QWORD *)(v8 - 8);
  v18[23] = v8;
  __chkstk_darwin(v8);
  v18[21] = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v10);
  v18[24] = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  __chkstk_darwin(v12);
  v13 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  v18[19] = (char *)v18 - v16;
  v17 = type metadata accessor for Playlist.Folder.Item(0);
  __chkstk_darwin(v17);
  __asm { BR              X10 }
}

uint64_t sub_10076E060()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = 1;
  v1 = type metadata accessor for SidebarMenu.Item(0);
  swift_storeEnumTagMultiPayload(v0, v1, 1);
  return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 0, 1, v1);
}

void sub_10076E80C()
{
  void *v0;
  uint64_t v1;
  char v2;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6573776F7262, 0xE600000000000000, 0x7972617262696CLL, 0xE700000000000000, 0);

  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
    JUMPOUT(0x10076E898);
  type metadata accessor for SidebarMenu.Item(0);
  JUMPOUT(0x10076EA98);
}

void sub_10076E8C8()
{
  void *v0;
  uint64_t v1;

  JUMPOUT(0x10076E8D8);
}

void sub_10076EB44()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = objc_msgSend(v0, "connectedScenes");
  v2 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
  v3 = sub_1000A569C();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  sub_10079470C(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v11 = v6;
    else
      v11 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease();
    if (v12)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v7 = *(id *)(v6 + 32);
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "delegate", swift_bridgeObjectRelease().n128_f64[0]);

  if (v9)
  {
    v10 = type metadata accessor for MainSceneDelegate();
    if (!swift_dynamicCastClass(v9, v10))
      swift_unknownObjectRelease(v9);
  }
}

uint64_t sub_10076ECA8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for Logger(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011ACE00);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2[10] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v7);
  v2[12] = swift_task_alloc(v7);
  v8 = sub_100007E8C(&qword_1011C44D0);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10076ED8C, 0, 0);
}

uint64_t sub_10076ED8C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 128) = v1;
  *(_QWORD *)(v0 + 136) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10076EDF8, v3, v4);
}

uint64_t sub_10076EDF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[4];
  swift_release(v0[17]);
  v2 = *(_QWORD *)(v1 + 16);
  v0[18] = v2;
  swift_retain(v2);
  return swift_task_switch(sub_10076EE44, 0, 0);
}

uint64_t sub_10076EE44(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(v1 + 144))
  {
    v2 = *(_QWORD *)(v1 + 128);
    *(_QWORD *)(v1 + 152) = static MainActor.shared.getter(a1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_10076EEFC, v3, v4);
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 88);
    v7 = *(_QWORD *)(v1 + 96);
    v9 = *(_QWORD *)(v1 + 64);
    v8 = *(_QWORD *)(v1 + 72);
    swift_task_dealloc(*(_QWORD *)(v1 + 120));
    swift_task_dealloc(v7);
    swift_task_dealloc(v6);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10076EEFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 152));
  *(_BYTE *)(v0 + 216) = sub_100770204();
  return swift_task_switch(sub_10076EF44, 0, 0);
}

uint64_t sub_10076EF44(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_BYTE *)(v1 + 216) == 6)
  {
    swift_release(*(_QWORD *)(v1 + 144));
    v2 = *(_QWORD *)(v1 + 88);
    v3 = *(_QWORD *)(v1 + 96);
    v5 = *(_QWORD *)(v1 + 64);
    v4 = *(_QWORD *)(v1 + 72);
    swift_task_dealloc(*(_QWORD *)(v1 + 120));
    swift_task_dealloc(v3);
    swift_task_dealloc(v2);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v1 + 128);
    *(_QWORD *)(v1 + 160) = static MainActor.shared.getter(a1);
    v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
    return swift_task_switch(sub_10076F008, v8, v9);
  }
}

uint64_t sub_10076F008()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 160));
  *(_QWORD *)(v0 + 168) = sub_10076F638(v1);
  return swift_task_switch(sub_10076F058, 0, 0);
}

uint64_t sub_10076F058()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  __n128 v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, v0[5], v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for MusicPageProvider.Destination.listenNow<A, B>(_:)
    || v4 == enum case for MusicPageProvider.Destination.radio<A, B>(_:))
  {
    v7 = 0x676F6C61746163;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0[14] + 8))(v0[15], v0[13]);
    v7 = 0x746C7561666564;
  }
  v0[22] = v7;
  v8 = v0[16];
  v0[23] = static MainActor.shared.getter(v5);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_10076F148, v9, v10);
}

uint64_t sub_10076F148()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1 = v0[22];
  v2 = v0[21];
  v3 = v0[5];
  v4 = swift_release(v0[23]);
  v0[24] = MusicPageProvider.page(for:stackAuthority:motionCacheBucketID:)(v3, v2, v1, 0xE700000000000000, v4);
  swift_bridgeObjectRelease(0xE700000000000000);
  return swift_task_switch(sub_10076F1B8, 0, 0);
}

uint64_t sub_10076F1B8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;

  v1 = (void *)v0[24];
  v2 = v0[10];
  v3 = (_QWORD *)v0[11];
  v4 = v0[9];
  v5 = (uint64_t)v3 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
  *v3 = v1;
  v6 = type metadata accessor for UITraitOverrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_100065228(v4, v5, &qword_1011ACE00);
  v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  swift_storeEnumTagMultiPayload(v3, v7, 4);
  swift_storeEnumTagMultiPayload(v3, v2, 0);
  v8 = dword_1011C791C;
  v9 = v1;
  v10 = (_QWORD *)swift_task_alloc(v8);
  v0[25] = v10;
  *v10 = v0;
  v10[1] = sub_10076F2A4;
  return sub_100771208(v0[12], v0[11]);
}

uint64_t sub_10076F2A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 200);
  v4 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc(v3);
  sub_10005B748(v4, type metadata accessor for AppInterfaceContext.Activity);
  if (v0)
  {
    v5 = sub_10076F3B4;
  }
  else
  {
    sub_10005B748(*(_QWORD *)(v2 + 96), type metadata accessor for AppInterfaceContext.Activity);
    v5 = sub_10076F334;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10076F334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 144);

  swift_release(v1);
  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10076F3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 144);
    v31 = *(void **)(v0 + 192);
    v32 = *(_QWORD *)(v0 + 64);
    v28 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 56);
    v30 = *(_QWORD *)(v0 + 48);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136315138;
    v33 = v12;
    *(_QWORD *)(v0 + 16) = v9;
    swift_errorRetain(v9);
    v13 = sub_100007E8C(&qword_1011A14B0);
    v14 = String.init<A>(describing:)(v0 + 16, v13);
    v16 = v15;
    *(_QWORD *)(v0 + 24) = sub_100322200(v14, v15, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to navigate to destination view controller with error=%s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_release(v10);
    swift_release(v28);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v30);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 208);
    v18 = *(_QWORD *)(v0 + 168);
    v19 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 56);
    v20 = *(_QWORD *)(v0 + 64);
    v22 = *(_QWORD *)(v0 + 48);

    swift_release(v18);
    swift_release(v19);
    swift_errorRelease(v17);
    swift_errorRelease(v17);
    swift_errorRelease(v17);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  v23 = *(_QWORD *)(v0 + 88);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v24);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10076F638(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28[5];
  _BYTE v29[24];

  v2 = v1;
  v4 = v1 + 24;
  swift_beginAccess(v1 + 24, v29, 0, 0);
  v5 = *(_QWORD *)(v1 + 24);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    sub_10079C474(a1);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v6);
      swift_retain(v8);
      swift_bridgeObjectRelease(v5);
      return v8;
    }
    swift_bridgeObjectRelease(v5);
  }
  v9 = swift_allocObject(&unk_1010DB330, 25, 7);
  *(_QWORD *)(v9 + 16) = v2;
  *(_BYTE *)(v9 + 24) = a1;
  v10 = _s11AuthorityAICMa();
  v11 = swift_allocObject(v10, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_10077C5B4;
  *(_QWORD *)(v11 + 24) = v9;
  v28[3] = v10;
  v28[4] = sub_100048748(&qword_1011C7C48, (uint64_t (*)(uint64_t))_s11AuthorityAICMa, (uint64_t)&unk_100EB6BCC);
  v28[0] = v11;
  v12 = type metadata accessor for MusicStackAuthority(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  swift_retain(v2);
  v13 = swift_retain(v11);
  v8 = MusicStackAuthority.init(navigationPathProvider:)(v28, v13);
  swift_beginAccess(v4, v28, 33, 0);
  swift_retain(v11);
  swift_retain(v8);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v2 + 24));
  v27 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 24) = 0x8000000000000000;
  sub_1005ECA84(v8, v11, a1, isUniquelyReferenced_nonNull_native);
  v15 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 24) = v27;
  swift_bridgeObjectRelease(v15);
  swift_endAccess(v28);
  sub_100048748(&qword_1011C7C50, (uint64_t (*)(uint64_t))_s11AuthorityAICMa, (uint64_t)&unk_100EB6BF4);
  v16 = swift_retain(v11);
  MusicStackAuthority.navigationControllerDelegate.setter(v16);
  if (qword_10119C7B0 != -1)
    swift_once(&qword_10119C7B0, sub_100779430);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100048B14(v17, (uint64_t)qword_10124D980);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v28[0] = v22;
    *(_DWORD *)v21 = 136446210;
    LOBYTE(v27) = a1;
    v23 = String.init<A>(describing:)(&v27, &type metadata for TabIdentifier);
    v25 = v24;
    v27 = sub_100322200(v23, v24, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Successfully setup StackAuthority for tab %{public}s", v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    swift_release(v11);
  }
  else
  {
    swift_release(v11);

  }
  return v8;
}

uint64_t sub_10076F980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char v9;
  char v10;
  id v11;
  void *v12;
  uint64_t ObjectType;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  __n128 v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  __n128 v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v4);
  v5 = *(_QWORD *)(a1 + 32);
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers);
    v7 = (id)(v5 & 0x3FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRetain();
    v8 = sub_1008AB1D4(a2, v6);
    v10 = v9;
    swift_bridgeObjectRelease(v6);
    if ((v10 & 1) == 0)
    {
      v11 = sub_10072D9D8(v8);
      if (v11)
      {
        v12 = v11;
        ObjectType = swift_getObjectType();
        if (swift_conformsToProtocol2(ObjectType, &_s11AuthorityAIC9NavigatorPMp))
          v14 = v12;
        else
          v14 = 0;
        if (v14)
        {

          return (uint64_t)v14;
        }

      }
    }
    if (qword_10119C7B0 != -1)
      swift_once(&qword_10119C7B0, sub_100779430);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100048B14(v15, (uint64_t)qword_10124D980);
    v17 = Logger.logObject.getter(v16);
    v19 = static os_log_type_t.fault.getter(v18);
    if (os_log_type_enabled(v17, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      v33 = v21;
      *(_DWORD *)v20 = 136446210;
      LOBYTE(v35) = a2;
      v22 = String.init<A>(describing:)(&v35, &type metadata for TabIdentifier);
      v24 = v23;
      v35 = sub_100322200(v22, v23, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
      swift_bridgeObjectRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, v17, v19, "Attempted to perform navigation on stack authority for tab %{public}s, but no navigation delegate found… yikes!", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }

    return 0;
  }
  if (v5 >> 62 == 1)
    __asm { BR              X10 }
  if (qword_10119C7B0 != -1)
    swift_once(&qword_10119C7B0, sub_100779430);
  v26 = type metadata accessor for Logger(0);
  v27 = sub_100048B14(v26, (uint64_t)qword_10124D980);
  v28 = Logger.logObject.getter(v27);
  v30 = static os_log_type_t.fault.getter(v29);
  if (os_log_type_enabled(v28, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    v33 = v32;
    *(_DWORD *)v31 = 136315138;
    v35 = sub_100322200(0xD000000000000014, 0x8000000100E44830, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
    _os_log_impl((void *)&_mh_execute_header, v28, v30, "Unexpected call to %s in a miniPlayer UI context", v31, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }

  v33 = 0;
  v34 = 0xE000000000000000;
  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease(v34);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000042, 0x8000000100E447E0, "Music/AppInterfaceContext.swift", 31, 2, 109, 0);
  __break(1u);
  return result;
}

uint64_t sub_10076FFF4(unint64_t *a1, unint64_t *a2)
{
  return sub_10077A220(*a1, *a2);
}

void sub_100770000(unint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  id v17;
  unint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;

  v2 = a1 >> 62;
  v3 = a1 & 0x3FFFFFFFFFFFFFFFLL;
  if (!(a1 >> 62))
    v3 = a1;
  v4 = v1;
  v5 = v1[4];
  if (v5 >> 62)
    v5 &= 0x3FFFFFFFFFFFFFFFuLL;
  if (v3 != v5)
  {
    sub_10036B998();
    v7 = v1[4];
    if (v7 >> 62 == 2 || v7 >> 62 == 1)
    {
      v8 = (void *)(v7 & 0x3FFFFFFFFFFFFFFFLL);
      v7 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      v8 = (void *)(v7 & 0x3FFFFFFFFFFFFFFFLL);
    }
    v9 = qword_10119C7A0;
    swift_retain();
    v10 = v8;
    if (v9 != -1)
      swift_once(&qword_10119C7A0, sub_1007793E8);
    objc_setAssociatedObject((id)v7, (const void *)qword_1011C78E0, v4, 0);

    swift_release();
    if ((_DWORD)v2)
      v11 = a1 & 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = a1;
    ObjectType = swift_getObjectType();
    v13 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for BottomPlayerHost);
    if (v13)
      v14 = v13;
    else
      v14 = 0;
    if (!v13)
      v11 = 0;
    if (v11)
    {
      v15 = swift_getObjectType();
      v16 = *(void (**)(uint64_t, uint64_t))(v14 + 32);
      v17 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
      v16(v15, v14);

    }
    v18 = v4[4];
    if ((_DWORD)v2)
    {
      if ((_DWORD)v2 != 1 || v18 >> 62)
        goto LABEL_30;
      v19 = (id)v18;
      v20 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
      v21 = v19;
      v22 = sub_10076C9AC(v20);
    }
    else
    {
      if (v18 >> 62 != 1)
      {
LABEL_30:
        sub_10077045C();
        return;
      }
      v23 = (void *)(v18 & 0x3FFFFFFFFFFFFFFFLL);
      v20 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
      v21 = v23;
      v22 = sub_10076C6A4((char *)a1);
    }
    v24 = v22;

    swift_bridgeObjectRelease(v24);
    goto LABEL_30;
  }
}

uint64_t sub_100770204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  id v10;
  _BYTE v12[24];

  v1 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_QWORD *)(v0 + 32);
  if (v4 >> 62)
  {
    if (v4 >> 62 == 1)
    {
      v5 = (v4 & 0x3FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks;
      swift_beginAccess(v5, v12, 0, 0);
      sub_10004A160(v5, (uint64_t)v3, (uint64_t *)&unk_1011CEE40);
      v6 = type metadata accessor for SidebarMenu.Item(0);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6) != 1)
      {
        v7 = (char *)&loc_1007702F8 + 4 * byte_100ECED7C[swift_getEnumCaseMultiPayload(v3, v6)];
        __asm { BR              X10 }
      }
    }
    return 6;
  }
  else
  {
    v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers);
    v10 = (id)(v4 & 0x3FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRetain();
    Array.subscript.getter((uint64_t)objc_msgSend((id)v4, "selectedIndex"), v9, (uint64_t)&type metadata for TabIdentifier, (uint64_t)v12);

    swift_bridgeObjectRelease(v9);
    return v12[0];
  }
}

void sub_100770368()
{
  JUMPOUT(0x100770354);
}

void sub_100770374()
{
  uint64_t v0;

  sub_10005B748(v0, type metadata accessor for SidebarMenu.Item);
  JUMPOUT(0x100770354);
}

id sub_10077038C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 48);
  if (v1)
  {
    v2 = *(id *)(v0 + 48);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BottomPlayerViewController()), "init");
    v4 = *(void **)(v0 + 48);
    *(_QWORD *)(v0 + 48) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_1007703F4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 56);
  if (v1)
  {
    v2 = *(id *)(v0 + 56);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PalettePresentationInteraction(0)), "init");
    v4 = *(void **)(v0 + 56);
    *(_QWORD *)(v0 + 56) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

void sub_10077045C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 32);
  if (v2 >> 62)
    v3 = v2 & 0x3FFFFFFFFFFFFFFFLL;
  else
    v3 = v2;
  ObjectType = swift_getObjectType();
  v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for BottomPlayerHost);
  if (v5)
    v6 = v5;
  else
    v6 = 0;
  if (v5)
    v7 = v3;
  else
    v7 = 0;
  if (v7)
  {
    v8 = sub_10004D63C();
    v9 = (id)(v2 & 0x3FFFFFFFFFFFFFFFLL);
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v8) & 1) != 0
      && (v10 = *(void **)(v1 + 64)) != 0)
    {
      v11 = swift_getObjectType();
      v12 = v10;
      v13 = sub_1007703F4();
      (*(void (**)(id, id, uint64_t, uint64_t))(v6 + 24))(v12, v13, v11, v6);
    }
    else
    {
      v14 = swift_getObjectType();
      v13 = sub_10077038C();
      v15 = sub_1007703F4();
      (*(void (**)(id, id, uint64_t, uint64_t))(v6 + 16))(v13, v15, v14, v6);
      v12 = v9;
      v9 = v15;
    }

  }
}

Swift::Int sub_1007705A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, 0);
  if (a4)
  {
    if (a4 == 1)
    {
      Hasher._combine(_:)(2uLL);
    }
    else
    {
      Hasher._combine(_:)(0);
      if (a2)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain(a2);
        String.hash(into:)(v9, a1, a2);
        swift_bridgeObjectRelease(a2);
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      String.hash(into:)(v9, a3, a4);
    }
  }
  else
  {
    Hasher._combine(_:)(1uLL);
  }
  return Hasher._finalize()();
}

Swift::Int sub_100770674()
{
  uint64_t *v0;

  return sub_1007705A4(*v0, v0[1], v0[2], v0[3]);
}

void sub_100770680(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  Swift::UInt v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1[3];
  if (!v3)
  {
    v4 = 1;
    goto LABEL_5;
  }
  if (v3 == 1)
  {
    v4 = 2;
LABEL_5:
    Hasher._combine(_:)(v4);
    return;
  }
  v6 = *v1;
  v5 = v1[1];
  v7 = v1[2];
  Hasher._combine(_:)(0);
  if (v5)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v5);
    String.hash(into:)(a1, v6, v5);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  String.hash(into:)(a1, v7, v3);
}

Swift::Int sub_100770744(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  Hasher.init(_seed:)(v7, a1);
  if (v5)
  {
    if (v5 == 1)
    {
      Hasher._combine(_:)(2uLL);
    }
    else
    {
      Hasher._combine(_:)(0);
      if (v2)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain(v2);
        String.hash(into:)(v7, v3, v2);
        swift_bridgeObjectRelease(v2);
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      String.hash(into:)(v7, v4, v5);
    }
  }
  else
  {
    Hasher._combine(_:)(1uLL);
  }
  return Hasher._finalize()();
}

uint64_t sub_100770808(uint64_t *a1, uint64_t a2)
{
  return sub_10077ACC0(*a1, a1[1], a1[2], a1[3], *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_100770824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  id v24;
  unsigned __int8 v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(void (*)(void **), uint64_t, __n128);
  _QWORD *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;

  v7 = type metadata accessor for AppInterfaceContext.Activity(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v35 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v35 - v14;
  sub_10005B704(a1, (uint64_t)&v35 - v14, type metadata accessor for AppInterfaceContext.Activity);
  v37 = v13;
  sub_10005B704((uint64_t)v15, (uint64_t)v13, type metadata accessor for AppInterfaceContext.Activity);
  v16 = *(unsigned __int8 *)(v8 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = v16 | 7;
  v19 = swift_allocObject(&unk_1010DB268, v18 + 16, v16 | 7);
  *(_QWORD *)(v19 + 16) = v3;
  v20 = v19 + v17;
  v21 = v3;
  sub_10005B6C0((uint64_t)v15, v20, type metadata accessor for AppInterfaceContext.Activity);
  v22 = (uint64_t *)(v19 + v18);
  *v22 = a2;
  v22[1] = a3;
  v38 = 6;
  swift_retain(v3);
  sub_100048AAC(a2, a3);
  swift_retain(v3);
  sub_100048AAC(a2, a3);
  v23 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v23) & 1) != 0
    || (v24 = objc_msgSend((id)objc_opt_self(ICPrivacyInfo), "sharedPrivacyInfo"),
        v25 = objc_msgSend(v24, "privacyAcknowledgementRequiredForMusic"),
        v24,
        (v25 & 1) == 0))
  {
    v32 = v36;
    v31 = (uint64_t)v37;
    sub_10005B704((uint64_t)v37, v36, type metadata accessor for AppInterfaceContext.Activity);
    v33 = (v16 + 32) & ~v16;
    v27 = swift_allocObject(&unk_1010DB290, v33 + v9, v35);
    *(_QWORD *)(v27 + 16) = a2;
    *(_QWORD *)(v27 + 24) = a3;
    sub_10005B6C0(v32, v27 + v33, type metadata accessor for AppInterfaceContext.Activity);
    sub_100048AAC(a2, a3);
    sub_100771868(v31, (uint64_t)sub_10077C520, v27);
  }
  else
  {
    v26 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
    v27 = swift_allocObject(&unk_1010DB2B8, 32, 7);
    *(_QWORD *)(v27 + 16) = sub_10077C1C8;
    *(_QWORD *)(v27 + 24) = v19;
    v28 = *(void (**)(void (*)(void **), uint64_t, __n128))((swift_isaMask & *v26) + 0xD8);
    v29 = v26;
    v30 = swift_retain(v19);
    v28(sub_10077C584, v27, v30);

    v31 = (uint64_t)v37;
  }
  swift_release(v19);
  swift_release(v21);
  swift_release(v27);
  sub_10005B748(v31, type metadata accessor for AppInterfaceContext.Activity);
  return sub_10004BA30(a2, a3);
}

double sub_100770B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v7 = type metadata accessor for AppInterfaceContext.Activity(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a2, (uint64_t)v10, type metadata accessor for AppInterfaceContext.Activity);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject(&unk_1010DB308, v12 + v9, v11 | 7);
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  sub_10005B6C0((uint64_t)v10, v13 + v12, type metadata accessor for AppInterfaceContext.Activity);
  sub_100048AAC(a3, a4);
  sub_100771868(a2, (uint64_t)sub_10077C520, v13);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_100770BF8(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void (*v45)(char *);
  void (*v47)(char *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v51 = a3;
  v52 = a2;
  v6 = sub_100007E8C(&qword_1011B6C70);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for AppInterfaceContext.Activity(0);
  v50 = *(_QWORD *)(v53 - 8);
  v9 = __chkstk_darwin(v53);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v48 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v48 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v48 - v18;
  v20 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v20);
  v22 = (uint64_t *)((char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004A160(a1, (uint64_t)v22, &qword_1011C7BC0);
  if (swift_getEnumCaseMultiPayload(v22, v20) == 1)
  {
    v23 = *v22;
    if (qword_10119C7B0 != -1)
      swift_once(&qword_10119C7B0, sub_100779430);
    v24 = type metadata accessor for Logger(0);
    sub_100048B14(v24, (uint64_t)qword_10124D980);
    sub_10005B704(a4, (uint64_t)v11, type metadata accessor for AppInterfaceContext.Activity);
    swift_errorRetain(v23);
    v25 = swift_errorRetain(v23);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(22, -1);
      v29 = (uint64_t *)swift_slowAlloc(8, -1);
      v49 = swift_slowAlloc(32, -1);
      v55 = v49;
      *(_DWORD *)v28 = 136446466;
      sub_10005B704((uint64_t)v11, (uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity);
      v30 = String.init<A>(describing:)(v14, v53);
      v32 = v31;
      v54 = sub_100322200(v30, v31, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
      swift_bridgeObjectRelease(v32);
      sub_10005B748((uint64_t)v11, type metadata accessor for AppInterfaceContext.Activity);
      *(_WORD *)(v28 + 12) = 2114;
      swift_errorRetain(v23);
      v33 = _swift_stdlib_bridgeErrorToNSError(v23);
      v54 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
      *v29 = v33;
      swift_errorRelease(v23);
      swift_errorRelease(v23);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Failed to perform Activity=%{public}s with error=%{public}@", (uint8_t *)v28, 0x16u);
      v34 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
      swift_arrayDestroy(v29, 1, v34);
      swift_slowDealloc(v29, -1, -1);
      v35 = v49;
      swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      sub_10005B748((uint64_t)v11, type metadata accessor for AppInterfaceContext.Activity);
      swift_errorRelease(v23);
      swift_errorRelease(v23);
    }

    v45 = v52;
    if (v52)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v8, 1, 1, v53);
      v45(v8);
      swift_errorRelease(v23);
      return sub_10004FF60((uint64_t)v8, &qword_1011B6C70);
    }
    else
    {
      return swift_errorRelease(v23);
    }
  }
  else
  {
    sub_10005B6C0((uint64_t)v22, (uint64_t)v19, type metadata accessor for AppInterfaceContext.Activity);
    if (qword_10119C7B0 != -1)
      swift_once(&qword_10119C7B0, sub_100779430);
    v36 = type metadata accessor for Logger(0);
    sub_100048B14(v36, (uint64_t)qword_10124D980);
    v37 = sub_10005B704((uint64_t)v19, (uint64_t)v17, type metadata accessor for AppInterfaceContext.Activity);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v55 = v41;
      *(_DWORD *)v40 = 136446210;
      sub_10005B704((uint64_t)v17, (uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity);
      v42 = String.init<A>(describing:)(v14, v53);
      v44 = v43;
      v54 = sub_100322200(v42, v43, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
      swift_bridgeObjectRelease(v44);
      sub_10005B748((uint64_t)v17, type metadata accessor for AppInterfaceContext.Activity);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Successfully performed Activity=%{public}s", v40, 0xCu);
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);
    }
    else
    {
      sub_10005B748((uint64_t)v17, type metadata accessor for AppInterfaceContext.Activity);
    }

    v47 = v52;
    if (v52)
    {
      sub_10005B704((uint64_t)v19, (uint64_t)v8, type metadata accessor for AppInterfaceContext.Activity);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v8, 0, 1, v53);
      v47(v8);
      sub_10004FF60((uint64_t)v8, &qword_1011B6C70);
    }
    return sub_10005B748((uint64_t)v19, type metadata accessor for AppInterfaceContext.Activity);
  }
}

uint64_t sub_100771208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = *(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8);
  v3[13] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v3[14] = v5;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[15] = swift_task_alloc(v6);
  v3[16] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v3[17] = v7;
  v3[18] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v3[19] = v9;
  v3[20] = v10;
  return swift_task_switch(sub_1007712B4, v9, v10);
}

uint64_t sub_1007712B4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 168) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_10077131C, v4, v6);
}

uint64_t sub_10077131C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  v1 = v0 + 2;
  v2 = v0[15];
  v4 = v0[13];
  v3 = v0[14];
  v5 = v0[11];
  v0[7] = v0[16];
  v0[2] = v0;
  v0[3] = sub_1007713F8;
  v6 = swift_continuation_init(v0 + 2, 1);
  sub_10005B704(v5, v2, type metadata accessor for AppInterfaceContext.Activity);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v7 + 24) & ~v7;
  v9 = swift_allocObject(&unk_1010DB240, v8 + v3, v7 | 7);
  *(_QWORD *)(v9 + 16) = v6;
  sub_10005B6C0(v2, v9 + v8, type metadata accessor for AppInterfaceContext.Activity);
  sub_100770824(v5, (uint64_t)sub_10077BE58, v9);
  v10 = swift_release(v9);
  return swift_continuation_await(v1, v10);
}

uint64_t sub_1007713F8(__n128 a1)
{
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = (*v1)[6];
  (*v1)[22] = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[19];
    v5 = v2[20];
    v6 = sub_1007714CC;
  }
  else
  {
    v7 = v2[21];
    sub_10005B6C0(v2[16], v2[10], type metadata accessor for AppInterfaceContext.Activity);
    swift_release(v7);
    v4 = v2[19];
    v5 = v2[20];
    v6 = sub_100771484;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100771484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007714CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 168));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100771528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;

  v6 = sub_100007E8C(&qword_1011B6C70);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v23 - v14;
  sub_10004A160(a1, (uint64_t)v8, &qword_1011B6C70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, &qword_1011B6C70);
    v16 = type metadata accessor for AppInterfaceContext.Error(0);
    v17 = sub_100048748(&qword_1011C7C40, type metadata accessor for AppInterfaceContext.Error, (uint64_t)&unk_100ECF138);
    v18 = swift_allocError(v16, v17, 0, 0);
    sub_10005B704(a3, v19, type metadata accessor for AppInterfaceContext.Activity);
    v20 = sub_100007E8C(&qword_1011A14B0);
    v21 = swift_allocError(v20, &protocol self-conformance witness table for Error, 0, 0);
    *v22 = v18;
    swift_continuation_throwingResumeWithError(a2, v21);
  }
  else
  {
    sub_10005B6C0((uint64_t)v8, (uint64_t)v15, type metadata accessor for AppInterfaceContext.Activity);
    sub_10005B704((uint64_t)v15, (uint64_t)v13, type metadata accessor for AppInterfaceContext.Activity);
    sub_10005B6C0((uint64_t)v13, *(_QWORD *)(*(_QWORD *)(a2 + 64) + 40), type metadata accessor for AppInterfaceContext.Activity);
    swift_continuation_throwingResume(a2);
    sub_10005B748((uint64_t)v15, type metadata accessor for AppInterfaceContext.Activity);
  }
}

void sub_100771714()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1 >> 62)
  {
    if (v1 >> 62 == 1)
    {
      v2 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController)
                    + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController);
      v3 = (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
      v4 = objc_msgSend(v2, "viewControllers");
      v5 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

      if ((unint64_t)v6 >> 62)
      {
        if (v6 < 0)
          v10 = v6;
        else
          v10 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v11 = _CocoaArrayWrapper.endIndex.getter(v10);
        swift_bridgeObjectRelease();
        if (!v11)
          goto LABEL_8;
      }
      else if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_8:

        swift_bridgeObjectRelease();
        return;
      }
      if ((v6 & 0xC000000000000001) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
        goto LABEL_8;
      }
      if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v7 = *(id *)(v6 + 32);
        goto LABEL_8;
      }
      __break(1u);
    }
    else
    {
      v9 = (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
    }
  }
  else
  {
    v8 = (id)v1;
    sub_10072D8C8();

  }
}

void sub_100771868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a3;
  v36 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v4);
  v31 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v24 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v26 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for PlaylistPicker.Context(0);
  __chkstk_darwin(v23);
  v30 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlaylistCreation.LegacyContext(0);
  __chkstk_darwin(v8);
  v22 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v32);
  v33 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaylistCreation.Context(0);
  __chkstk_darwin(v11);
  v12 = sub_100007E8C((uint64_t *)&unk_1011C7C00);
  v13 = __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  v14 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  __chkstk_darwin(v14);
  v15 = type metadata accessor for AppInterfaceContext.Activity(0);
  v27 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v29 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v22 - v18;
  v34 = a1;
  sub_10005B704(a1, (uint64_t)&v22 - v18, v20);
  v21 = (char *)&loc_100771B5C + dword_100772584[swift_getEnumCaseMultiPayload(v19, v15)];
  __asm { BR              X10 }
}

uint64_t sub_100771B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10005B6C0(v1, v0, type metadata accessor for AppInterfaceContext.Activity.Destination);
  sub_100774DE4(v0, *(_QWORD *)(v2 - 328), *(_QWORD *)(v2 - 344));
  return sub_10005B748(v0, type metadata accessor for AppInterfaceContext.Activity.Destination);
}

void sub_10077259C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, __n128))
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  id v26;
  void *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_super v33;

  v12 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v14, &qword_1011C7BC0);
  LODWORD(v12) = swift_getEnumCaseMultiPayload(v14, v12);
  sub_10004FF60((uint64_t)v14, &qword_1011C7BC0);
  if ((_DWORD)v12 == 1)
    goto LABEL_13;
  v32 = a5;
  v16 = *(_QWORD *)(a2 + 32);
  if (v16 >> 62)
  {
    if (v16 >> 62 == 1)
    {
      v17 = *(void **)(*(_QWORD *)(v16 + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController)
                     + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController);
      v18 = type metadata accessor for NavigationController();
      v19 = swift_dynamicCastClass(v17, v18);
      if (v19)
      {
        v20 = (id)v19;
        v21 = v17;
LABEL_7:
        v22 = objc_msgSend(v20, "viewControllers");
        v23 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
        v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

        if ((unint64_t)v24 >> 62)
        {
          if (v24 < 0)
            v30 = v24;
          else
            v30 = v24 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          _CocoaArrayWrapper.endIndex.getter(v30);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v25 = (objc_class *)type metadata accessor for NavigationController();
        v33.receiver = v20;
        v33.super_class = v25;
        v26 = objc_msgSendSuper2(&v33, "popToRootViewControllerAnimated:", 1);
        if (v26)
        {
          v27 = v26;
          static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v23);

        }
        v15 = swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    v20 = sub_10072D9D8((uint64_t)objc_msgSend((id)v16, "selectedIndex"));

    if (v20)
      goto LABEL_7;
  }
  v28 = v32;
  if (*(_QWORD *)(a2 + 16))
  {
    v29 = swift_retain();
    MusicPageProvider.performSearch(for:in:)(a3, a4, v28, v29);
    v15 = swift_release();
  }
LABEL_13:
  if (a6)
    a6(a1, v15);
}

void sub_1007727FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "presentingViewController");

    if (v5)
    {
      objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
}

void sub_100772880(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *Strong;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD aBlock[6];
  _BYTE v23[72];
  _BYTE v24[24];

  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v24, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v13 = Strong;
    v14 = objc_msgSend(Strong, "presentingViewController");

    if (v14)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
      sub_100064AC8(a4, (uint64_t)v23);
      v15 = *(unsigned __int8 *)(v9 + 80);
      v16 = (v15 + 16) & ~v15;
      v17 = (v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
      v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
      v19 = swift_allocObject(&unk_1010DB150, v18 + 72, v15 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v19 + v16, v11, v8);
      *(_QWORD *)(v19 + v17) = a1;
      sub_100064EF0((uint64_t)v23, v19 + v18);
      aBlock[4] = sub_10077B2CC;
      aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001DBD98;
      aBlock[3] = &unk_1010DB168;
      v20 = _Block_copy(aBlock);
      v21 = a1;
      objc_msgSend(v14, "dismissViewControllerAnimated:completion:", 1, v20, swift_release().n128_f64[0]);
      _Block_release(v20);

    }
  }
}

double sub_100772A44(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  double result;
  _BYTE v24[72];

  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v10);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_100064AC8(a3, (uint64_t)v24);
  type metadata accessor for MainActor(0);
  v14 = a2;
  v16 = static MainActor.shared.getter(v15);
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = (v8 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1010DB1A0, v20 + 72, v17 | 7);
  *(_QWORD *)(v21 + 16) = v16;
  *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(v21 + v18, v9, v6);
  *(_QWORD *)(v21 + v19) = v14;
  sub_100064EF0((uint64_t)v24, v21 + v20);
  sub_100166D14((uint64_t)v12, (uint64_t)&unk_1011C7C28, v21);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100772BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MusicLibrary.AddToPlaylistDuplicatePolicy(0);
  v6[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[6] = v8;
  v6[7] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v6[11] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v6[12] = v13;
  v6[13] = v14;
  return swift_task_switch(sub_100772CA8, v13, v14);
}

uint64_t sub_100772CA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[7];
  v2 = v0[5];
  v3 = v0[6];
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[9] + 16))(v0[10], v0[3] + OBJC_IVAR____TtCO5Music14PlaylistPicker14ViewController_tracksToAdd, v0[8]);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, enum case for MusicLibrary.AddToPlaylistDuplicatePolicy.checkForDuplicates(_:), v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1011ACA8C);
  v0[14] = v4;
  *v4 = v0;
  v4[1] = sub_100772D60;
  return Playlist.addTracks(_:duplicatePolicy:duplicateCount:presentationSource:presentNotice:mpModel:)(v0[10], v0[7], 0, 1, v0[4], 1, 0);
}

uint64_t sub_100772D60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 72);
  v2 = *(_QWORD *)(*v0 + 80);
  v5 = *(_QWORD *)(*v0 + 56);
  v4 = *(_QWORD *)(*v0 + 64);
  v6 = *(_QWORD *)(*v0 + 40);
  v7 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_100772DF0, *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_100772DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100772E34(char *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (**v21)(uint64_t);
  char *v22;
  uint64_t v24;
  char v25[24];

  v24 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v24);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100007E8C(&qword_1011B1F10);
  __chkstk_darwin(v6);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v9);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = (int *)type metadata accessor for PlaylistCreation.Context(0);
  __chkstk_darwin(v12);
  v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = (uint64_t)&a1[OBJC_IVAR____TtCO5Music14PlaylistPicker14ViewController_folder];
  swift_beginAccess(&a1[OBJC_IVAR____TtCO5Music14PlaylistPicker14ViewController_folder], v25, 0, 0);
  sub_10004A160(v15, (uint64_t)v11, (uint64_t *)&unk_1011B5660);
  v16 = &a1[OBJC_IVAR____TtCO5Music14PlaylistPicker14ViewController_tracksToAdd];
  v17 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v8, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v8, 0, 1, v17);
  v19 = swift_allocObject(&unk_1010DB0D8, 32, 7);
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  sub_100065228((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_1011B5660);
  v20 = &v14[v12[5]];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  sub_100065228((uint64_t)v8, (uint64_t)&v14[v12[6]], &qword_1011B1F10);
  v21 = (uint64_t (**)(uint64_t))&v14[v12[7]];
  *v21 = sub_10077AFE4;
  v21[1] = (uint64_t (*)(uint64_t))v19;
  sub_10005B704((uint64_t)v14, (uint64_t)v5, type metadata accessor for PlaylistCreation.Context);
  swift_storeEnumTagMultiPayload(v5, v24, 3);
  v22 = a1;
  swift_retain();
  sub_100770824((uint64_t)v5, 0, 0);
  sub_10005B748((uint64_t)v5, type metadata accessor for AppInterfaceContext.Activity);
  return sub_10005B748((uint64_t)v14, type metadata accessor for PlaylistCreation.Context);
}

uint64_t sub_1007730AC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int EnumCaseMultiPayload;
  uint64_t result;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  id v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  id v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v38 = a3;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v5);
  v40 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v37 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v39 = (char *)&v35 - v11;
  v12 = type metadata accessor for PlaylistCreation.FlowResult(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - v16;
  sub_10005B704(a1, (uint64_t)&v35 - v16, type metadata accessor for PlaylistCreation.FlowResult);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v12);
  result = sub_10005B748((uint64_t)v17, type metadata accessor for PlaylistCreation.FlowResult);
  if (EnumCaseMultiPayload != 2)
  {
    v20 = objc_msgSend(a2, "presentingViewController");
    v21 = a2;
    if (v20)
    {
      v22 = v20;
      objc_msgSend(v20, "dismissViewControllerAnimated:completion:", 1, 0);

    }
    sub_10005B704(a1, (uint64_t)v14, type metadata accessor for PlaylistCreation.FlowResult);
    if (swift_getEnumCaseMultiPayload(v14, v12))
    {
      return sub_10005B748((uint64_t)v14, type metadata accessor for PlaylistCreation.FlowResult);
    }
    else
    {
      v23 = *(void **)&v14[*(int *)(sub_100007E8C((uint64_t *)&unk_1011A3430) + 48)];
      v36 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v24 = v39;
      v36(v39, v14, v7);
      v25 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v40, 1, 1, v25);
      v26 = v37;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v24, v7);
      type metadata accessor for MainActor(0);
      v35 = v23;
      v27 = v21;
      v28 = v38;
      v29 = swift_retain();
      v30 = static MainActor.shared.getter(v29);
      v31 = *(unsigned __int8 *)(v8 + 80);
      v32 = (v31 + 48) & ~v31;
      v33 = (v9 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
      v34 = (char *)swift_allocObject(&unk_1010DB100, v33 + 8, v31 | 7);
      *((_QWORD *)v34 + 2) = v30;
      *((_QWORD *)v34 + 3) = &protocol witness table for MainActor;
      *((_QWORD *)v34 + 4) = v23;
      *((_QWORD *)v34 + 5) = v27;
      v36(&v34[v32], v26, v7);
      *(_QWORD *)&v34[v33] = v28;
      sub_100166D14(v40, (uint64_t)&unk_1011C7C18, (uint64_t)v34);
      swift_release();

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v39, v7);
    }
  }
  return result;
}

uint64_t sub_1007733B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v7[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[9] = v9;
  v7[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v7[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v7[12] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v7[13] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v7[14] = v13;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[15] = swift_task_alloc(v14);
  v7[16] = swift_task_alloc(v14);
  v15 = type metadata accessor for Notice.Variant(0);
  v7[17] = v15;
  v7[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Notice(0);
  v7[19] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[20] = swift_task_alloc(v17);
  v7[21] = swift_task_alloc(v17);
  v18 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A1440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[22] = swift_task_alloc(v18);
  v7[23] = swift_task_alloc(v18);
  v7[24] = swift_task_alloc(v18);
  v19 = type metadata accessor for MainActor(0);
  v7[25] = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  return swift_task_switch(sub_10077354C, v21, v22);
}

uint64_t sub_10077354C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  _QWORD *v79;
  char *v80;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release();
  v3 = type metadata accessor for Artwork(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v5(v1, 1, 1, v3);
  if (v2)
  {
    v6 = *(_QWORD *)(v0 + 184);
    v7 = *(_QWORD *)(v0 + 192);
    v8 = *(id *)(v0 + 32);
    v9 = objc_msgSend(objc_allocWithZone((Class)MPArtworkCatalog), "initWithToken:dataSource:", v8, *PlaylistCovers.ArtworkDataSource.shared.unsafeMutableAddressor());
    Artwork.init(_:)(v9);

    sub_10004FF60(v7, &qword_1011A1440);
    v5(v6, 0, 1, v3);
    sub_100065228(v6, v7, &qword_1011A1440);
  }
  v10 = objc_msgSend(*(id *)(v0 + 40), "presentingViewController");
  if (v10 && (v11 = v10, v12 = UIViewController.noticePresenter.getter(), v11, v12))
  {
    v76 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5;
    v80 = v12;
    v79 = (_QWORD *)(v0 + 24);
    v13 = *(_QWORD *)(v0 + 192);
    v14 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD **)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 48);
    v20 = sub_100007E8C((uint64_t *)&unk_1011ACAA0);
    v72 = (char *)v15 + *(int *)(v20 + 48);
    v74 = v20;
    *v15 = Playlist.name.getter(v21);
    v15[1] = v22;
    sub_10004A160(v13, v14, &qword_1011A1440);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    v23(v16, v19, v17);
    v78 = v23;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v14, 1, v3) == 1)
    {
      v24 = *(_QWORD *)(v0 + 128);
      v25 = *(_QWORD *)(v0 + 96);
      v26 = *(_QWORD *)(v0 + 104);
      v27 = *(_QWORD *)(v0 + 88);
      Playlist.artworkViewModel.getter(v27);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
      v28 = type metadata accessor for ArtworkImage.ViewModel(0);
      v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v27, 1, v28);
      v30 = *(_QWORD *)(v0 + 88);
      if (v29 == 1)
      {
        sub_10004FF60(*(_QWORD *)(v0 + 88), (uint64_t *)&unk_1011A3E10);
        v31 = 1;
      }
      else
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 16))(v72, *(_QWORD *)(v0 + 88), v3);
        sub_10005B748(v30, type metadata accessor for ArtworkImage.ViewModel);
        v31 = 0;
      }
      v34 = *(_QWORD *)(v0 + 176);
      v76(v72, v31, 1, v3);
      sub_10004FF60(v34, &qword_1011A1440);
    }
    else
    {
      v33 = *(_QWORD *)(v0 + 176);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 96));
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v72, v33, v3);
      v76(v72, 0, 1, v3);
    }
    v35 = v74;
    v36 = *(_QWORD *)(v0 + 168);
    v37 = *(_QWORD *)(v0 + 144);
    v75 = *(_QWORD *)(v0 + 152);
    v77 = *(_QWORD *)(v0 + 192);
    v65 = *(_QWORD *)(v0 + 136);
    v66 = *(_QWORD *)(v0 + 160);
    v69 = *(_QWORD *)(v0 + 120);
    v70 = *(_QWORD *)(v0 + 104);
    v39 = *(_QWORD *)(v0 + 72);
    v38 = *(_QWORD *)(v0 + 80);
    v40 = *(_QWORD *)(v0 + 64);
    v71 = *(_QWORD *)(v0 + 112);
    v73 = *(_QWORD *)(v0 + 56);
    v67 = *(_QWORD *)(v0 + 48);
    v68 = *(_QWORD *)(v0 + 96);
    v41 = *(int *)(v35 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, *(_QWORD *)(v0 + 40) + OBJC_IVAR____TtCO5Music14PlaylistPicker14ViewController_tracksToAdd, v40);
    v42 = sub_10077B144();
    dispatch thunk of Collection.startIndex.getter(v40);
    dispatch thunk of Collection.endIndex.getter(v79, v40, v42);
    v43 = dispatch thunk of Collection.distance(from:to:)(v0 + 16, v79, v40, v42);
    v45 = v44;
    (*(void (**)(uint64_t, uint64_t, __n128))(v39 + 8))(v38, v40, v43);
    *(_QWORD *)(v37 + v41) = v45;
    swift_storeEnumTagMultiPayload(v37, v65, 0);
    static Notice.variant(_:)(v37);
    sub_10005B748(v37, type metadata accessor for Notice.Variant);
    v78(v69, v67, v68);
    v46 = *(unsigned __int8 *)(v70 + 80);
    v47 = (v46 + 16) & ~v46;
    v48 = (v71 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
    v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
    v50 = swift_allocObject(&unk_1010DB128, v49 + 8, v46 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v50 + v47, v69, v68);
    v51 = (_QWORD *)(v50 + v48);
    *v51 = 0;
    v51[1] = 0;
    *(_QWORD *)(v50 + v49) = v73;
    sub_10005B704(v66, v36, type metadata accessor for Notice);
    v52 = (uint64_t *)(v36 + *(int *)(v75 + 32));
    v53 = *v52;
    v54 = v52[1];
    swift_retain();
    sub_10004BA30(v53, v54);
    *v52 = (uint64_t)sub_10032304C;
    v52[1] = v50;
    sub_10005B748(v66, type metadata accessor for Notice);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v80 + 192))(v36, 0);
    swift_release();
    sub_10005B748(v36, type metadata accessor for Notice);
    v32 = v77;
  }
  else
  {
    v32 = *(_QWORD *)(v0 + 192);
  }
  sub_10004FF60(v32, &qword_1011A1440);
  v55 = *(_QWORD *)(v0 + 184);
  v57 = *(_QWORD *)(v0 + 168);
  v56 = *(_QWORD *)(v0 + 176);
  v58 = *(_QWORD *)(v0 + 160);
  v59 = *(_QWORD *)(v0 + 144);
  v61 = *(_QWORD *)(v0 + 120);
  v60 = *(_QWORD *)(v0 + 128);
  v63 = *(_QWORD *)(v0 + 80);
  v62 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100773A80(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;

  v5 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v5);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (char *)&v9 - v7;
  if (a1)
  {
    sub_10005B704(a3, (uint64_t)&v9 - v7, type metadata accessor for AppInterfaceContext.Activity);
    swift_storeEnumTagMultiPayload(v8, v5, 0);
    a1(v8);
    sub_10004FF60((uint64_t)v8, &qword_1011C7BC0);
  }
}

double sub_100773B34(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  double result;
  uint64_t v38;
  uint64_t *v39;
  int v40;
  _QWORD *v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v47 = a6;
  v48 = a2;
  v49 = a4;
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C7B0 != -1)
    swift_once(&qword_10119C7B0, sub_100779430);
  v13 = type metadata accessor for Logger(0);
  sub_100048B14(v13, (uint64_t)qword_10124D980);
  v14 = a1;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    v18 = swift_slowAlloc(22, -1);
    v42 = v15;
    v19 = v18;
    v20 = (_QWORD *)swift_slowAlloc(8, -1);
    v41 = v20;
    v43 = swift_slowAlloc(32, -1);
    v50 = (uint64_t)v14;
    v51 = v43;
    *(_DWORD *)v19 = 138543618;
    v46 = a3;
    v45 = a5;
    v39 = &v51;
    v21 = v14;
    v40 = v17;
    v22 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    *v20 = v14;

    *(_WORD *)(v19 + 12) = 2082;
    v23 = sub_100773E78();
    v25 = Optional<A>.description.getter(v23, v24);
    v44 = v10;
    v27 = v26;
    a5 = v45;
    swift_bridgeObjectRelease();
    v50 = sub_100322200(v25, v27, &v51);
    LOBYTE(a3) = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v39);
    v10 = v44;
    swift_bridgeObjectRelease();

    v28 = v42;
    _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v40, "Presenting viewController=%{public}@\nidentified by %{public}s", (uint8_t *)v19, 0x16u);
    v29 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    v30 = v41;
    swift_arrayDestroy(v41, 1, v29);
    swift_slowDealloc(v30, -1, -1);
    v31 = v43;
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

  }
  sub_10005B704(v47, (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AppInterfaceContext.Activity);
  v32 = *(unsigned __int8 *)(v10 + 80);
  v33 = (v32 + 40) & ~v32;
  v34 = (_QWORD *)swift_allocObject(&unk_1010DB1C8, v33 + v11, v32 | 7);
  v35 = v49;
  v34[2] = v14;
  v34[3] = v35;
  v34[4] = a5;
  sub_10005B6C0((uint64_t)v12, (uint64_t)v34 + v33, type metadata accessor for AppInterfaceContext.Activity);
  v36 = v14;
  sub_100048AAC(v35, a5);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v36, 1, (id)0xF, (void **)(a3 & 1), sub_10077B7A8, (uint64_t)v34);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100773E78()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  if (qword_10119C7A8 != -1)
    swift_once(&qword_10119C7A8, sub_10077940C);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_1011C78E8);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v5, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100065228((uint64_t)v5, (uint64_t)v6, &qword_10119DCC0);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_10004FF60((uint64_t)v6, &qword_10119DCC0);
    return 0;
  }
}

void sub_100773F68(void *a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD);
  id v41;
  uint64_t v42;

  v7 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C7B0 != -1)
    swift_once(&qword_10119C7B0, sub_100779430);
  v10 = type metadata accessor for Logger(0);
  sub_100048B14(v10, (uint64_t)qword_10124D980);
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = v13;
  if (!os_log_type_enabled(v12, v13))
  {

    if (!a2)
      return;
    goto LABEL_7;
  }
  v15 = swift_slowAlloc(32, -1);
  v39 = a4;
  v16 = v15;
  v17 = (_QWORD *)swift_slowAlloc(8, -1);
  v34 = v17;
  v38 = swift_slowAlloc(64, -1);
  v41 = v11;
  v42 = v38;
  *(_DWORD *)v16 = 138543874;
  v40 = a2;
  v37 = v7;
  v18 = v11;
  v36 = v12;
  v19 = v18;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
  *v17 = v11;

  *(_WORD *)(v16 + 12) = 2082;
  v20 = sub_100773E78();
  v22 = Optional<A>.description.getter(v20, v21);
  v35 = v14;
  v24 = v23;
  swift_bridgeObjectRelease();
  v41 = (id)sub_100322200(v22, v24, &v42);
  v7 = v37;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
  swift_bridgeObjectRelease();

  *(_WORD *)(v16 + 22) = 2082;
  v41 = objc_msgSend(v19, "presentingViewController");
  v25 = sub_100007E8C((uint64_t *)&unk_1011C7C30);
  v26 = String.init<A>(describing:)(&v41, v25);
  v41 = (id)sub_100322200(v26, v27, &v42);
  a2 = v40;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
  swift_bridgeObjectRelease();

  v28 = v36;
  _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v35, "Presented viewController=%{public}@\nidentified by %{public}s\npresented by %{public}s", (uint8_t *)v16, 0x20u);
  v29 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
  v30 = v34;
  swift_arrayDestroy(v34, 1, v29);
  swift_slowDealloc(v30, -1, -1);
  v31 = v38;
  swift_arrayDestroy(v38, 2, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v31, -1, -1);
  v32 = v16;
  a4 = v39;
  swift_slowDealloc(v32, -1, -1);

  if (a2)
  {
LABEL_7:
    sub_10005B704(a4, (uint64_t)v9, type metadata accessor for AppInterfaceContext.Activity);
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    a2(v9);
    sub_10004FF60((uint64_t)v9, &qword_1011C7BC0);
  }
}

void sub_1007742F0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5, int a6, NSObject *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t ObjectType;
  void *v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  unint64_t v27;
  uint64_t v28;
  const void *v29;
  NSString v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;
  Swift::Int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  id v59;
  os_log_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  int v68;
  uint64_t v69;
  _QWORD *v70;
  id v71;
  id v72;
  id v73;
  _QWORD *v74;
  NSObject *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  os_log_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  double v89;
  id v90;
  uint64_t v91;
  char *v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  id v97;
  id v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  os_log_t v105;
  _BYTE *v106;
  uint64_t aBlock;
  _QWORD v108[5];
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;

  v105 = a7;
  v106 = a5;
  LODWORD(v104) = a6;
  v111 = a3;
  v14 = type metadata accessor for AppInterfaceContext.Activity(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (void *)a1[3];
  if ((unint64_t)v17 < 2)
    return;
  v102 = a8;
  v103 = v9;
  v19 = *a1;
  v18 = (void *)a1[1];
  v20 = a1[2];
  v109 = 0;
  v110 = 0xE000000000000000;
  if (v18)
  {
    v21 = v18;
  }
  else
  {
    ObjectType = swift_getObjectType();
    v19 = _typeName(_:qualified:)(ObjectType, 0);
    v21 = v23;
  }
  swift_bridgeObjectRetain();
  v24._countAndFlagsBits = v19;
  v24._object = v21;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v25._countAndFlagsBits = 46;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v26._countAndFlagsBits = v20;
  v26._object = v17;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27 = v110;
  v28 = qword_10119C7A8;
  swift_bridgeObjectRetain();
  if (v28 != -1)
    swift_once(&qword_10119C7A8, sub_10077940C);
  v29 = (const void *)qword_1011C78E8;
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_setAssociatedObject(a2, v29, v30, (void *)3);

  PresentationSource.windowScene.getter();
  if (!v31)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v32 = (void *)v31;
  v33 = static PresentationSource.topmostPresentedViewController(in:options:)(v31, 0);
  if (!v33)
  {
    swift_bridgeObjectRelease();
LABEL_16:

    return;
  }
  v101 = v15;
  v34 = v33;
  v35 = sub_100773E78();
  if (!v36)
  {
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  v100 = v34;
  v99 = v32;
  v37 = v109;
  if (v35 == v109 && v36 == v110)
  {
    swift_bridgeObjectRelease();
    v38 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  }
  else
  {
    v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v109, v110, 0);
    swift_bridgeObjectRelease();
    v38 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRelease();

      return;
    }
  }
  v40 = v101;
  if (*(_QWORD *)(a4 + 16)
    && (Hasher.init(_seed:)(&v109, *(_QWORD *)(a4 + 40)),
        Hasher._combine(_:)(1uLL),
        v41 = Hasher._finalize()(),
        v42 = -1 << *(_BYTE *)(a4 + 32),
        v43 = v41 & ~v42,
        ((*(_QWORD *)(a4 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) != 0))
  {
    v44 = a9;
    v45 = ~v42;
    while (*(_QWORD *)(*(_QWORD *)(a4 + 48) + 32 * v43 + 24))
    {
      v43 = (v43 + 1) & v45;
      if (((*(_QWORD *)(a4 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
        goto LABEL_23;
    }
    if (qword_10119C7B0 != -1)
      swift_once(&qword_10119C7B0, sub_100779430);
    v63 = type metadata accessor for Logger(0);
    sub_100048B14(v63, (uint64_t)qword_10124D980);
    v64 = v100;
    v65 = a2;
    swift_bridgeObjectRetain();
    v98 = v64;
    v97 = v65;
    v66 = Logger.logObject.getter(v97);
    v67 = static os_log_type_t.default.getter();
    v68 = v67;
    v96 = v66;
    if (os_log_type_enabled(v66, v67))
    {
      v69 = swift_slowAlloc(32, -1);
      v70 = (_QWORD *)swift_slowAlloc(16, -1);
      v94 = swift_slowAlloc(32, -1);
      v109 = v94;
      *(_DWORD *)v69 = 138543874;
      v95 = a9;
      v93 = v68;
      aBlock = v98;
      v92 = v38;
      v71 = v98;
      UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v108);
      *v70 = v100;

      *(_WORD *)(v69 + 12) = 2082;
      swift_bridgeObjectRetain();
      aBlock = (id)sub_100322200(v37, v27, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v108);
      swift_bridgeObjectRelease_n(v27, 3);
      *(_WORD *)(v69 + 22) = 2114;
      v72 = v97;
      aBlock = v97;
      v73 = v97;
      v38 = v92;
      UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v108);
      v74 = v70;
      v40 = v101;
      v74[1] = v72;

      v44 = v95;
      v75 = v96;
      _os_log_impl((void *)&_mh_execute_header, v96, (os_log_type_t)v93, "Dismissing viewController=%{public}@\nidentified by %{public}s,\nin favor of %{public}@", (uint8_t *)v69, 0x20u);
      v76 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
      swift_arrayDestroy(v74, 2, v76);
      swift_slowDealloc(v74, -1, -1);
      v77 = v94;
      swift_arrayDestroy(v94, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v77, -1, -1);
      swift_slowDealloc(v69, -1, -1);

    }
    else
    {
      v78 = v98;

      swift_bridgeObjectRelease_n(v27, 2);
      v79 = v97;

    }
    *v106 = 0;
    sub_100064AC8(v111, (uint64_t)&v109);
    sub_10005B704(v44, (uint64_t)v38, type metadata accessor for AppInterfaceContext.Activity);
    v80 = *(unsigned __int8 *)(v40 + 80);
    v81 = (v80 + 120) & ~v80;
    v82 = swift_allocObject(&unk_1010DB1F0, v81 + v16, v80 | 7);
    v83 = v97;
    *(_QWORD *)(v82 + 16) = v97;
    sub_100064EF0((uint64_t)&v109, v82 + 24);
    v84 = v104 & 1;
    *(_BYTE *)(v82 + 96) = v104 & 1;
    v85 = v105;
    v86 = v102;
    *(_QWORD *)(v82 + 104) = v105;
    *(_QWORD *)(v82 + 112) = v86;
    sub_10005B6C0((uint64_t)v38, v82 + v81, type metadata accessor for AppInterfaceContext.Activity);
    v108[3] = sub_10077BB24;
    v108[4] = v82;
    aBlock = _NSConcreteStackBlock;
    v108[0] = 1107296256;
    v108[1] = sub_1001DBD98;
    v108[2] = &unk_1010DB208;
    v87 = _Block_copy(&aBlock);
    v88 = v83;
    sub_100048AAC((uint64_t)v85, v86);
    *(_QWORD *)&v89 = swift_release().n128_u64[0];
    v90 = v98;
    objc_msgSend(v98, "dismissViewControllerAnimated:completion:", v84, v87, v89);

    _Block_release(v87);
  }
  else
  {
LABEL_23:
    *v106 = 0;
    if (qword_10119C7B0 != -1)
      swift_once(&qword_10119C7B0, sub_100779430);
    v46 = type metadata accessor for Logger(0);
    sub_100048B14(v46, (uint64_t)qword_10124D980);
    v47 = v100;
    v48 = a2;
    swift_bridgeObjectRetain();
    v49 = v47;
    v50 = v48;
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.default.getter();
    v53 = v52;
    if (os_log_type_enabled(v51, v52))
    {
      v54 = swift_slowAlloc(32, -1);
      LODWORD(v106) = v53;
      v55 = v54;
      v56 = swift_slowAlloc(16, -1);
      v104 = v37;
      v57 = (_QWORD *)v56;
      v111 = swift_slowAlloc(32, -1);
      v109 = v111;
      *(_DWORD *)v55 = 138543874;
      aBlock = v50;
      v105 = v51;
      v58 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v108);
      *v57 = v50;

      *(_WORD *)(v55 + 12) = 2082;
      swift_bridgeObjectRetain();
      aBlock = (id)sub_100322200(v104, v27, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v108);
      swift_bridgeObjectRelease_n(v27, 3);
      *(_WORD *)(v55 + 22) = 2114;
      aBlock = v49;
      v59 = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v108);
      v57[1] = v100;

      v60 = v105;
      _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v106, "Attempted to present a viewController=%{public}@\nidentified by %{public}s,\nbut a similar viewController is already presented %{public}@", (uint8_t *)v55, 0x20u);
      v61 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
      swift_arrayDestroy(v57, 2, v61);
      swift_slowDealloc(v57, -1, -1);
      v62 = v111;
      swift_arrayDestroy(v111, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v62, -1, -1);
      swift_slowDealloc(v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v27, 2);
    }
  }
}

void sub_100774C90(void **a1, void (*a2)(char *), uint64_t a3)
{
  char *v5;
  _BYTE *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  char *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _BYTE v15[24];
  char v16[24];

  v5 = (char *)*a1;
  v6 = (char *)*a1 + OBJC_IVAR____TtC11MusicJSCore13JSApplication_isPrivacyDisclaimerPresented;
  swift_beginAccess(v6, v16, 0, 0);
  if (*v6 == 1)
  {
    v7 = swift_allocObject(&unk_1010DB2E0, 32, 7);
    *(_QWORD *)(v7 + 16) = a2;
    *(_QWORD *)(v7 + 24) = a3;
    v8 = &v5[OBJC_IVAR____TtC11MusicJSCore13JSApplication_pendingPrivacyDisclaimerDismissalCompletionHandlers];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicJSCore13JSApplication_pendingPrivacyDisclaimerDismissalCompletionHandlers], v15, 33, 0);
    v9 = *(_QWORD **)v8;
    v10 = v5;
    swift_retain(a3);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    *(_QWORD *)v8 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_100431F80(0, v9[2] + 1, 1, v9);
      *(_QWORD *)v8 = v9;
    }
    v13 = v9[2];
    v12 = v9[3];
    if (v13 >= v12 >> 1)
    {
      v9 = sub_100431F80((_QWORD *)(v12 > 1), v13 + 1, 1, v9);
      *(_QWORD *)v8 = v9;
    }
    v9[2] = v13 + 1;
    v14 = &v9[2 * v13];
    v14[4] = sub_10010942C;
    v14[5] = v7;
    swift_endAccess(v15);
  }
  else
  {
    a2(v5);
  }

}

void sub_100774DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  _QWORD v81[9];
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v122 = a2;
  v123 = a3;
  v124 = a1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v108 = (char *)v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Artist(0);
  v115 = *(_QWORD *)(v6 - 8);
  v116 = v6;
  __chkstk_darwin(v6);
  v111 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = v7;
  __chkstk_darwin(v8);
  v114 = (char *)v81 - v9;
  v88 = sub_100007E8C((uint64_t *)&unk_1011AE1E0);
  __chkstk_darwin(v88);
  v89 = (char *)v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for SidebarMenu.Item(0);
  v87 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v81[0] = (char *)v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v102 = (char *)v81 - v13;
  v104 = type metadata accessor for UITraitOverrides(0);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v81[8] = (char *)v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011ACE00);
  v98 = *(_QWORD *)(v15 - 8);
  v16 = *(_QWORD *)(v98 + 64);
  __chkstk_darwin(v15);
  v106 = (char *)v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v85 = (char *)v81 - v18;
  __chkstk_darwin(v19);
  v101 = (char *)v81 - v20;
  __chkstk_darwin(v21);
  v96 = (char *)v81 - v22;
  __chkstk_darwin(v23);
  v81[6] = (char *)v81 - v24;
  __chkstk_darwin(v25);
  v97 = (char *)v81 - v26;
  __chkstk_darwin(v27);
  v81[7] = (char *)v81 - v28;
  v82 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v82);
  v81[3] = (char *)v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v93 = (char *)v81 - v31;
  __chkstk_darwin(v32);
  v86 = (char *)v81 - v33;
  __chkstk_darwin(v34);
  v107 = (char *)v81 - v35;
  v112 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v112);
  v113 = (char *)v81 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v118 = *(_QWORD *)(v37 - 8);
  v38 = *(_QWORD *)(v118 + 64);
  __chkstk_darwin(v37);
  v94 = (char *)v81 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v110 = (char *)v81 - v40;
  __chkstk_darwin(v41);
  v105 = (char *)v81 - v42;
  __chkstk_darwin(v43);
  v84 = (char *)v81 - v44;
  __chkstk_darwin(v45);
  v92 = (char *)v81 - v46;
  __chkstk_darwin(v47);
  v81[5] = (char *)v81 - v48;
  __chkstk_darwin(v49);
  v109 = (char *)v81 - v50;
  __chkstk_darwin(v51);
  __chkstk_darwin(v52);
  v81[2] = (char *)v81 - v53;
  __chkstk_darwin(v54);
  v81[1] = (char *)v81 - v55;
  __chkstk_darwin(v56);
  v91 = (char *)v81 - v57;
  __chkstk_darwin(v58);
  v81[4] = (char *)v81 - v59;
  __chkstk_darwin(v60);
  __chkstk_darwin(v61);
  v100 = (char *)v81 - v62;
  __chkstk_darwin(v63);
  v83 = (char *)v81 - v64;
  __chkstk_darwin(v65);
  v99 = (char *)v81 - v66;
  __chkstk_darwin(v67);
  __chkstk_darwin(v68);
  __chkstk_darwin(v69);
  v119 = (char *)v81 - v70;
  v71 = sub_100007E8C(&qword_1011C7BC8);
  *(_QWORD *)&v72 = __chkstk_darwin(v71).n128_u64[0];
  v74 = (char *)v81 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = *(_QWORD *)(v3 + 32);
  if (v75 >> 62)
    v76 = (void *)(v75 & 0x3FFFFFFFFFFFFFFFLL);
  else
    v76 = *(void **)(v3 + 32);
  v77 = objc_msgSend(v76, "traitCollection", v72);
  v120 = v3;
  v121 = v77;
  v78 = *(_QWORD *)(v3 + 32);
  v79 = *(int *)(v71 + 48);
  sub_10005B704(v124, (uint64_t)v74, type metadata accessor for AppInterfaceContext.Activity.Destination);
  *(_QWORD *)&v74[v79] = v78;
  v117 = v37;
  v80 = (char *)&loc_100775524 + *((int *)qword_100777A40 + swift_getEnumCaseMultiPayload(v74, v37));
  __asm { BR              X10 }
}

uint64_t sub_100775534()
{
  unint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  unint64_t v16;
  void *v17;
  id v18;
  void (*v19)(uint64_t *);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  id v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;

  sub_10005B704(v3, (uint64_t)v2, type metadata accessor for AppInterfaceContext.Activity.Destination);
  v7 = *v2;
  if (!(v0 >> 62))
  {
    *(_QWORD *)(v6 - 224) = v4;
    v39 = (id)(v0 & 0x3FFFFFFFFFFFFFFFLL);
    v40 = (id)v0;
    sub_10072BA14(v7);
    sub_10005B704(*(_QWORD *)(v6 - 168), v1, type metadata accessor for AppInterfaceContext.Activity.Destination);
    sub_10005B704(v1, *(_QWORD *)(v6 - 368), type metadata accessor for AppInterfaceContext.Activity.Destination);
    v41 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 216) + 80);
    v42 = (v41 + 32) & ~v41;
    v43 = swift_allocObject(&unk_1010DAED0, v42 + v5, v41 | 7);
    v15 = *(void (**)(uint64_t))(v6 - 184);
    v14 = *(_QWORD *)(v6 - 176);
    *(_QWORD *)(v43 + 16) = v15;
    *(_QWORD *)(v43 + 24) = v14;
    sub_10005B6C0(v1, v43 + v42, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v44 = *(_QWORD *)(*(_QWORD *)(v6 - 200) + 32);
    if (v44 >> 62 == 2 || v44 >> 62 == 1)
    {
      v45 = (void *)(v44 & 0x3FFFFFFFFFFFFFFFLL);
      v44 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      v45 = (void *)(v44 & 0x3FFFFFFFFFFFFFFFLL);
    }
    v55 = (void *)objc_opt_self(ICPrivacyInfo);
    sub_100048AAC((uint64_t)v15, v14);
    sub_100048AAC((uint64_t)v15, v14);
    v56 = v45;
    v57 = objc_msgSend(v55, "sharedPrivacyInfo");
    v58 = objc_msgSend(v57, "privacyAcknowledgementRequiredForMusic");

    if ((v58 & 1) != 0)
    {
      if (v15)
      {
        v50 = *(_QWORD *)(v6 - 368);
        v59 = *(_QWORD *)(v6 - 256);
        sub_10005B704(v50, v59, type metadata accessor for AppInterfaceContext.Activity.Destination);
        v60 = type metadata accessor for AppInterfaceContext.Activity(0);
        swift_storeEnumTagMultiPayload(v59, v60, 0);
        swift_storeEnumTagMultiPayload(v59, *(_QWORD *)(v6 - 264), 0);
        v15(v59);
        sub_10004FF60(v59, &qword_1011C7BC0);

        goto LABEL_23;
      }

      swift_release();
      v63 = v6 - 112;
LABEL_28:
      v50 = *(_QWORD *)(v63 - 256);
      goto LABEL_29;
    }
    *(_QWORD *)(v6 - 104) = sub_10077AAE4;
    *(_QWORD *)(v6 - 96) = v43;
    *(_QWORD *)(v6 - 136) = _NSConcreteStackBlock;
    *(_QWORD *)(v6 - 128) = 1107296256;
    *(_QWORD *)(v6 - 120) = sub_1001DBD98;
    *(_QWORD *)(v6 - 112) = &unk_1010DAEE8;
    v61 = _Block_copy((const void *)(v6 - 136));
    swift_retain();
    objc_msgSend((id)v44, "dismissViewControllerAnimated:completion:", 1, v61, swift_release().n128_f64[0]);
    _Block_release(v61);

    swift_release();
    sub_10004BA30((uint64_t)v15, v14);
    v54 = v6 - 112;
LABEL_25:
    v62 = *(_QWORD *)(v54 - 256);
LABEL_30:
    sub_10005B748(v62, type metadata accessor for AppInterfaceContext.Activity.Destination);

    return sub_10005B748(v3, type metadata accessor for AppInterfaceContext.Activity.Destination);
  }
  if (v0 >> 62 == 1)
  {
    *(_QWORD *)(v6 - 224) = v4;
    v8 = (id)(v0 & 0x3FFFFFFFFFFFFFFFLL);
    if (objc_msgSend(v8, "displayMode") == (id)3)
      objc_msgSend(v8, "hideColumn:", 0);
    v9 = *(_QWORD *)(v6 - 304);
    sub_1002FA178(v7);
    sub_100356210(v9, 0);
    sub_10004FF60(v9, (uint64_t *)&unk_1011CEE40);
    v10 = *(_QWORD *)(v6 - 496);
    sub_10005B704(*(_QWORD *)(v6 - 168), v10, type metadata accessor for AppInterfaceContext.Activity.Destination);
    sub_10005B704(v10, *(_QWORD *)(v6 - 360), type metadata accessor for AppInterfaceContext.Activity.Destination);
    v11 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 216) + 80);
    v12 = (v11 + 32) & ~v11;
    v13 = swift_allocObject(&unk_1010DAE80, v12 + v5, v11 | 7);
    v15 = *(void (**)(uint64_t))(v6 - 184);
    v14 = *(_QWORD *)(v6 - 176);
    *(_QWORD *)(v13 + 16) = v15;
    *(_QWORD *)(v13 + 24) = v14;
    sub_10005B6C0(v10, v13 + v12, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v16 = *(_QWORD *)(*(_QWORD *)(v6 - 200) + 32);
    if (v16 >> 62 == 2 || v16 >> 62 == 1)
    {
      v17 = (void *)(v16 & 0x3FFFFFFFFFFFFFFFLL);
      v16 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      v17 = (void *)(v16 & 0x3FFFFFFFFFFFFFFFLL);
    }
    v46 = (void *)objc_opt_self(ICPrivacyInfo);
    sub_100048AAC((uint64_t)v15, v14);
    sub_100048AAC((uint64_t)v15, v14);
    v47 = v17;
    v48 = objc_msgSend(v46, "sharedPrivacyInfo");
    v49 = objc_msgSend(v48, "privacyAcknowledgementRequiredForMusic");

    if ((v49 & 1) != 0)
    {
      if (v15)
      {
        v50 = *(_QWORD *)(v6 - 360);
        v51 = *(_QWORD *)(v6 - 256);
        sub_10005B704(v50, v51, type metadata accessor for AppInterfaceContext.Activity.Destination);
        v52 = type metadata accessor for AppInterfaceContext.Activity(0);
        swift_storeEnumTagMultiPayload(v51, v52, 0);
        swift_storeEnumTagMultiPayload(v51, *(_QWORD *)(v6 - 264), 0);
        v15(v51);
        sub_10004FF60(v51, &qword_1011C7BC0);

LABEL_23:
        swift_release();
        sub_10004BA30((uint64_t)v15, v14);
LABEL_29:
        v62 = v50;
        goto LABEL_30;
      }

      swift_release();
      v63 = v6 - 104;
      goto LABEL_28;
    }
    *(_QWORD *)(v6 - 104) = sub_10077AAE4;
    *(_QWORD *)(v6 - 96) = v13;
    *(_QWORD *)(v6 - 136) = _NSConcreteStackBlock;
    *(_QWORD *)(v6 - 128) = 1107296256;
    *(_QWORD *)(v6 - 120) = sub_1001DBD98;
    *(_QWORD *)(v6 - 112) = &unk_1010DAE98;
    v53 = _Block_copy((const void *)(v6 - 136));
    swift_retain();
    objc_msgSend((id)v16, "dismissViewControllerAnimated:completion:", 1, v53, swift_release().n128_f64[0]);
    _Block_release(v53);

    swift_release();
    sub_10004BA30((uint64_t)v15, v14);
    v54 = v6 - 104;
    goto LABEL_25;
  }
  v18 = (id)(v0 & 0x3FFFFFFFFFFFFFFFLL);
  v19 = *(void (**)(uint64_t *))(v6 - 184);
  v20 = *(void **)(v6 - 192);
  v21 = *(_QWORD *)(v6 - 168);
  v22 = *(_QWORD *)(v6 - 208);
  v23 = *(_QWORD *)(v6 - 224);
  *(_QWORD *)(v6 - 136) = 0;
  *(_QWORD *)(v6 - 128) = 0xE000000000000000;
  _StringGuts.grow(_:)(56);
  v24 = *(_QWORD *)(v6 - 128);
  *(_QWORD *)(v6 - 136) = *(_QWORD *)(v6 - 136);
  *(_QWORD *)(v6 - 128) = v24;
  v25._object = (void *)0x8000000100E446F0;
  v25._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v25);
  sub_10005B704(v21, v22, type metadata accessor for AppInterfaceContext.Activity.Destination);
  v26._countAndFlagsBits = String.init<A>(describing:)(v22, v23);
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 0xD00000000000001CLL;
  v27._object = (void *)0x8000000100E44710;
  String.append(_:)(v27);
  v28 = *(_QWORD *)(*(_QWORD *)(v6 - 200) + 32);
  *(_QWORD *)(v6 - 160) = v28;
  v29 = (id)(v28 & 0x3FFFFFFFFFFFFFFFLL);
  v30._countAndFlagsBits = String.init<A>(describing:)(v6 - 160, &type metadata for AppInterfaceContext.RootViewControllerKind);
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v6 - 136);
  v32 = *(_QWORD *)(v6 - 128);
  v33 = sub_10077A608();
  v34 = swift_allocError(&type metadata for AppInterfaceContext.Activity.Error, v33, 0, 0);
  v35 = v34;
  *v36 = v31;
  v36[1] = v32;
  if (v19)
  {
    v37 = *(uint64_t **)(v6 - 256);
    *v37 = v34;
    swift_storeEnumTagMultiPayload(v37, *(_QWORD *)(v6 - 264), 1);
    swift_errorRetain(v35);
    v19(v37);
    sub_10004FF60((uint64_t)v37, &qword_1011C7BC0);
  }

  swift_errorRelease(v35);
  return sub_10004FF60(v3, &qword_1011C7BC8);
}

void sub_100777A58(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v6);
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = (char *)&v11 - v8;
  if (a2)
  {
    sub_10005B704(a4, (uint64_t)&v11 - v8, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v10 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v9, v10, 0);
    swift_storeEnumTagMultiPayload(v9, v6, 0);
    a2(v9);
    sub_10004FF60((uint64_t)v9, &qword_1011C7BC0);
  }
}

uint64_t sub_100777B24(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  unsigned int v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v31 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v31);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - v16;
  sub_10005B704(a5, (uint64_t)&v30 - v16, type metadata accessor for AppInterfaceContext.Activity.Destination);
  sub_10005B704((uint64_t)v17, (uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity.Destination);
  v18 = *(unsigned __int8 *)(v12 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(&unk_1010DAFE8, v19 + v13, v18 | 7);
  *(_QWORD *)(v20 + 16) = a3;
  *(_QWORD *)(v20 + 24) = a4;
  sub_10005B6C0((uint64_t)v17, v20 + v19, type metadata accessor for AppInterfaceContext.Activity.Destination);
  v21 = *(_QWORD *)(a2 + 32);
  if (v21 >> 62 == 2 || v21 >> 62 == 1)
  {
    v22 = (void *)(v21 & 0x3FFFFFFFFFFFFFFFLL);
    v21 &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  else
  {
    v22 = (void *)(v21 & 0x3FFFFFFFFFFFFFFFLL);
  }
  v23 = (void *)objc_opt_self(ICPrivacyInfo);
  sub_100048AAC((uint64_t)a3, a4);
  sub_100048AAC((uint64_t)a3, a4);
  v24 = v22;
  v25 = objc_msgSend(v23, "sharedPrivacyInfo");
  v26 = objc_msgSend(v25, "privacyAcknowledgementRequiredForMusic");

  if (v26)
  {
    if (!a3)
    {

      swift_release();
      return sub_10005B748((uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity.Destination);
    }
    sub_10005B704((uint64_t)v14, (uint64_t)v10, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v27 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v10, v27, 0);
    swift_storeEnumTagMultiPayload(v10, v31, 0);
    a3(v10);
    sub_10004FF60((uint64_t)v10, &qword_1011C7BC0);
  }
  else
  {
    aBlock[4] = sub_10077AAE4;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010DB000;
    v28 = _Block_copy(aBlock);
    swift_retain();
    objc_msgSend((id)v21, "dismissViewControllerAnimated:completion:", 1, v28, swift_release().n128_f64[0]);
    _Block_release(v28);
  }

  swift_release();
  sub_10004BA30((uint64_t)a3, a4);
  return sub_10005B748((uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity.Destination);
}

void sub_100777DF8(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v5);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (char *)&v10 - v7;
  if (a1)
  {
    sub_10005B704(a3, (uint64_t)&v10 - v7, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v9 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v8, v9, 0);
    swift_storeEnumTagMultiPayload(v8, v5, 0);
    a1(v8);
    sub_10004FF60((uint64_t)v8, &qword_1011C7BC0);
  }
}

void sub_100777EC4(uint64_t a1, unsigned __int8 a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  unsigned __int8 v24;
  unint64_t v25;
  unint64_t v26;

  v9 = a2;
  v10 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v9 == 5 || a1 && (sub_1005EBC1C(a2), (v13 & 1) != 0))
  {
    if (a3)
    {
      sub_10005B704(a5, (uint64_t)v12, type metadata accessor for AppInterfaceContext.Activity.Destination);
      v14 = type metadata accessor for AppInterfaceContext.Activity(0);
      swift_storeEnumTagMultiPayload(v12, v14, 0);
      swift_storeEnumTagMultiPayload(v12, v10, 0);
      a3(v12);
      sub_10004FF60((uint64_t)v12, &qword_1011C7BC0);
    }
  }
  else
  {
    v25 = 0;
    v26 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    swift_bridgeObjectRelease();
    v25 = 0xD00000000000002DLL;
    v26 = 0x8000000100E44790;
    v24 = a2;
    v15 = sub_100007E8C(&qword_1011C7BF8);
    v16._countAndFlagsBits = String.init<A>(describing:)(&v24, v15);
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v17 = v25;
    v18 = v26;
    v19 = sub_10077A608();
    v20 = swift_allocError(&type metadata for AppInterfaceContext.Activity.Error, v19, 0, 0);
    v21 = v20;
    *v22 = v17;
    v22[1] = v18;
    if (a3)
    {
      *v12 = v20;
      swift_storeEnumTagMultiPayload(v12, v10, 1);
      swift_errorRetain(v21);
      a3(v12);
      sub_10004FF60((uint64_t)v12, &qword_1011C7BC0);
    }
    swift_errorRelease(v21);
  }
}

void sub_10077809C(uint64_t a1, void *a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v10 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1008EB784(a2, a3, 1);
  if (a4)
  {
    sub_10005B704(a6, (uint64_t)v12, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v13 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v12, v13, 0);
    swift_storeEnumTagMultiPayload(v12, v10, 0);
    a4(v12);
    sub_10004FF60((uint64_t)v12, &qword_1011C7BC0);
  }
}

void sub_100778194(uint64_t a1, void *a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v11 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_retain(*(id *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController)
                          + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController));
  UINavigationController.push(_:traitOverrides:animated:)(a2, a3, 1);

  if (a4)
  {
    sub_10005B704(a6, (uint64_t)v13, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v15 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v13, v15, 0);
    swift_storeEnumTagMultiPayload(v13, v11, 0);
    a4(v13);
    sub_10004FF60((uint64_t)v13, &qword_1011C7BC0);
  }
}

uint64_t sub_1007782B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;

  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a6;
  v10 = sub_100007E8C(&qword_1011C7BC0);
  v8[5] = v10;
  v8[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[7] = type metadata accessor for MainActor(0);
  v8[8] = static MainActor.shared.getter(v11);
  v12 = (_QWORD *)swift_task_alloc(dword_10119EB9C);
  v8[9] = v12;
  *v12 = v8;
  v12[1] = sub_100778354;
  return sub_1000738E0(a5);
}

uint64_t sub_100778354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1007783C4, v2, v3);
}

uint64_t sub_1007783C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 40);
    v2 = *(_QWORD *)(v0 + 48);
    v4 = *(void (**)(uint64_t))(v0 + 16);
    sub_10005B704(*(_QWORD *)(v0 + 32), v2, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v5 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v2, v5, 0);
    swift_storeEnumTagMultiPayload(v2, v3, 0);
    v4(v2);
    sub_10004FF60(v2, &qword_1011C7BC0);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100778468(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v7 = sub_100007E8C(&qword_1011C7BC0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v16 - v11);
  sub_10004A160(a1, (uint64_t)&v16 - v11, &qword_1011C7BC0);
  if (swift_getEnumCaseMultiPayload(v12, v7) == 1)
  {
    v13 = *v12;
    if (a2)
    {
      *v9 = v13;
      swift_storeEnumTagMultiPayload(v9, v7, 1);
      swift_errorRetain(v13);
      a2(v9);
      sub_10004FF60((uint64_t)v9, &qword_1011C7BC0);
    }
    return swift_errorRelease(v13);
  }
  else
  {
    if (a2)
    {
      sub_10005B704(a4, (uint64_t)v9, type metadata accessor for AppInterfaceContext.Activity.Destination);
      v15 = type metadata accessor for AppInterfaceContext.Activity(0);
      swift_storeEnumTagMultiPayload(v9, v15, 0);
      swift_storeEnumTagMultiPayload(v9, v7, 0);
      a2(v9);
      sub_10004FF60((uint64_t)v9, &qword_1011C7BC0);
    }
    return sub_10004FF60((uint64_t)v12, &qword_1011C7BC0);
  }
}

void sub_1007785DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  _BYTE v21[32];
  _BYTE v22[24];

  v2 = v1;
  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for PlaylistCreation.Context(0);
  __chkstk_darwin(v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(v2 + 72, v22, 0, 0);
  v10 = *(_QWORD *)(v2 + 72);
  v20 = a1;
  swift_bridgeObjectRetain();
  v11 = sub_1005D29B8((uint64_t (*)(uint64_t *))sub_10077A364, (uint64_t)v19, v10);
  swift_bridgeObjectRelease();
  swift_release();
  if (!v11)
  {
    sub_10005B704(a1, (uint64_t)v9, type metadata accessor for PlaylistCreation.Context);
    v12 = type metadata accessor for PlaylistCreation.Flow(0);
    swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    swift_retain();
    v13 = sub_1003F44A8((uint64_t)v9, (uint64_t)sub_10077A398, v2);
    swift_beginAccess(v2 + 72, v21, 33, 0);
    v14 = *(_QWORD *)(v2 + 72);
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v17 = *(_QWORD *)(v2 + 72);
      else
        v17 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
      swift_bridgeObjectRetain();
      v18 = _CocoaArrayWrapper.endIndex.getter(v17);
      swift_bridgeObjectRelease();
      if (v18 < 0)
      {
        __break(1u);
        return;
      }
    }
    else
    {
      swift_retain();
    }
    sub_1001FE0FC(0, 0, v13);
    swift_endAccess(v21);
    v15 = *(void **)(v13 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_navigationController);
    *(_QWORD *)v6 = v15;
    v6[8] = 1;
    *((_QWORD *)v6 + 2) = &_swiftEmptySetSingleton;
    swift_storeEnumTagMultiPayload(v6, v4, 2);
    v16 = v15;
    sub_100770824((uint64_t)v6, 0, 0);
    swift_release();
    sub_10005B748((uint64_t)v6, type metadata accessor for AppInterfaceContext.Activity);
  }
}

double sub_100778810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  _BYTE v10[24];
  _BYTE v11[24];

  v4 = a1;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_navigationController), "dismissViewControllerAnimated:completion:", 1, 0);
  v5 = a3 + 72;
  swift_beginAccess(a3 + 72, v11, 0, 0);
  v6 = *(_QWORD *)(a3 + 72);
  swift_bridgeObjectRetain();
  v7 = sub_1008AB84C(v4, v6);
  LOBYTE(v4) = v8;
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  if ((v4 & 1) == 0)
  {
    swift_beginAccess(v5, v10, 33, 0);
    sub_1007286BC(v7);
    swift_endAccess(v10);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_1007788D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  _BYTE v21[32];
  _BYTE v22[24];

  v2 = v1;
  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for PlaylistCreation.LegacyContext(0);
  __chkstk_darwin(v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(v2 + 80, v22, 0, 0);
  v10 = *(_QWORD *)(v2 + 80);
  v20 = a1;
  swift_bridgeObjectRetain();
  v11 = sub_1005D29B8((uint64_t (*)(uint64_t *))sub_10077A328, (uint64_t)v19, v10);
  swift_bridgeObjectRelease();
  swift_release();
  if (!v11)
  {
    sub_10005B704(a1, (uint64_t)v9, type metadata accessor for PlaylistCreation.LegacyContext);
    v12 = type metadata accessor for PlaylistCreation.LegacyFlow(0);
    swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    swift_retain();
    v13 = sub_1003F5018((uint64_t)v9, (uint64_t)sub_10077A35C, v2);
    swift_beginAccess(v2 + 80, v21, 33, 0);
    v14 = *(_QWORD *)(v2 + 80);
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v17 = *(_QWORD *)(v2 + 80);
      else
        v17 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
      swift_bridgeObjectRetain();
      v18 = _CocoaArrayWrapper.endIndex.getter(v17);
      swift_bridgeObjectRelease();
      if (v18 < 0)
      {
        __break(1u);
        return;
      }
    }
    else
    {
      swift_retain();
    }
    sub_1001FE3EC(0, 0, v13);
    swift_endAccess(v21);
    v15 = *(void **)(v13 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_navigationController);
    *(_QWORD *)v6 = v15;
    v6[8] = 1;
    *((_QWORD *)v6 + 2) = &_swiftEmptySetSingleton;
    swift_storeEnumTagMultiPayload(v6, v4, 2);
    v16 = v15;
    sub_100770824((uint64_t)v6, 0, 0);
    swift_release();
    sub_10005B748((uint64_t)v6, type metadata accessor for AppInterfaceContext.Activity);
  }
}

double sub_100778B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  _BYTE v10[24];
  _BYTE v11[24];

  v4 = a1;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_navigationController), "dismissViewControllerAnimated:completion:", 1, 0);
  v5 = a3 + 80;
  swift_beginAccess(a3 + 80, v11, 0, 0);
  v6 = *(_QWORD *)(a3 + 80);
  swift_bridgeObjectRetain();
  v7 = sub_1008AB858(v4, v6);
  LOBYTE(v4) = v8;
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  if ((v4 & 1) == 0)
  {
    swift_beginAccess(v5, v10, 33, 0);
    sub_1007286BC(v7);
    swift_endAccess(v10);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100778BD4()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  swift_bridgeObjectRelease();

  swift_unknownObjectWeakDestroy(v0 + 40, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004BA30(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  sub_10004BA30(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return v0;
}

uint64_t sub_100778C44()
{
  uint64_t v0;

  sub_100778BD4();
  return swift_deallocClassInstance(v0, 120, 7);
}

uint64_t type metadata accessor for AppInterfaceContext()
{
  return objc_opt_self(_TtC5Music19AppInterfaceContext);
}

uint64_t sub_100778C84()
{
  uint64_t v0;
  _QWORD v2[15];

  static ApplicationCapabilities.shared.getter((uint64_t)v2);
  v0 = v2[12];
  swift_bridgeObjectRetain();
  sub_100065184(v2);
  return v0;
}

uint64_t sub_100778CC4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 88, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 88);
  sub_100048AAC(v1, *(_QWORD *)(v0 + 96));
  return v1;
}

uint64_t sub_100778D14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  if (a1)
    v4 = a2;
  else
    v4 = 0;
  swift_beginAccess(v2 + 88, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 88);
  v6 = *(_QWORD *)(v2 + 96);
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = v4;
  return sub_10004BA30(v5, v6);
}

void (*sub_100778D68(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 88, v3, 33, 0);
  v4 = *(_QWORD *)(v1 + 88);
  if (v4)
    v5 = *(_QWORD *)(v1 + 96);
  else
    v5 = 0;
  v3[3] = v4;
  v3[4] = v5;
  return sub_100778DD0;
}

void sub_100778DD0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (!v4)
    v3 = 0;
  *(_QWORD *)(v2 + 88) = v4;
  *(_QWORD *)(v2 + 96) = v3;
  swift_endAccess(v1);
  free(v1);
}

uint64_t sub_100778E0C@<X0>(char *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_100770204();
  if (result == 6)
    v3 = 1;
  else
    v3 = result;
  *a1 = v3;
  return result;
}

uint64_t sub_100778E3C(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v4 = *a1;
  swift_storeEnumTagMultiPayload(v4, v5, 0);
  sub_100774DE4((uint64_t)v4, 0, 0);
  return sub_10005B748((uint64_t)v4, type metadata accessor for AppInterfaceContext.Activity.Destination);
}

void (*sub_100778ED4(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;

  *(_QWORD *)a1 = v1;
  v3 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  v4 = sub_100770204();
  if (v4 == 6)
    v5 = 1;
  else
    v5 = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return sub_100778F30;
}

void sub_100778F30(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_BYTE **)(a1 + 16);
  *v2 = *(_BYTE *)(a1 + 24);
  swift_storeEnumTagMultiPayload(v2, v1, 0);
  sub_100774DE4((uint64_t)v2, 0, 0);
  sub_10005B748((uint64_t)v2, type metadata accessor for AppInterfaceContext.Activity.Destination);
  free(v2);
}

uint64_t (*sub_100778F88())(unsigned __int8 *)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(unsigned __int8 *);
  _BYTE v6[24];

  swift_beginAccess(v0 + 104, v6, 0, 0);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  if (v1)
  {
    v3 = swift_allocObject(&unk_1010DAC28, 32, 7);
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_100782BE4;
  }
  else
  {
    v4 = 0;
  }
  sub_100048AAC(v1, v2);
  return v4;
}

uint64_t sub_100779010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(char);
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  if (a1)
  {
    v5 = swift_allocObject(&unk_1010DAC00, 32, 7);
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v6 = sub_100782C00;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  swift_beginAccess(v2 + 104, v10, 1, 0);
  v7 = *(_QWORD *)(v2 + 104);
  v8 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)(v2 + 104) = v6;
  *(_QWORD *)(v2 + 112) = v5;
  return sub_10004BA30(v7, v8);
}

void (*sub_100779094(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned __int8 *);

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 104, v3, 33, 0);
  v4 = *(_QWORD *)(v1 + 104);
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + 112);
    v6 = swift_allocObject(&unk_1010DABD8, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_100265C5C;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v3[3] = v7;
  v3[4] = v6;
  return sub_10077912C;
}

void sub_10077912C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(char);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (v3)
  {
    if ((a2 & 1) != 0)
      v4 = sub_10077A184;
    else
      v4 = sub_100782C00;
    if ((a2 & 1) != 0)
      v5 = &unk_1010DAB88;
    else
      v5 = &unk_1010DABB0;
    v6 = v2[4];
    v7 = swift_allocObject(v5, 32, 7);
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v6;
  }
  else
  {
    v4 = 0;
    v7 = 0;
  }
  v8 = v2[5];
  *(_QWORD *)(v8 + 104) = v4;
  *(_QWORD *)(v8 + 112) = v7;
  swift_endAccess(v2);
  free(v2);
}

uint64_t sub_1007791BC()
{
  char v0;

  v0 = sub_100770204();
  if (v0 == 6)
    v0 = 1;
  return sub_10076F638(v0);
}

uint64_t sub_1007791DC@<X0>(void *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  id v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  _BYTE v25[16];

  v6 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v6);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Playlist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25[15] = 5;
  v13 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v13) & 1) == 0)
    goto LABEL_4;
  dispatch thunk of LegacyModelObjectConvertible.init(_:)(a1, v9, &protocol witness table for Playlist);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, &qword_1011A30F0);
LABEL_4:
    v14 = type metadata accessor for AppInterfaceContext.Activity(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 1, 1, v14);
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
  if (!a2)
    goto LABEL_9;
  sub_10004A07C(0, (unint64_t *)&qword_10119E4F0, MPIdentifierSet_ptr);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_10119E540, MPModelSong_ptr);
  v17 = a2;
  v18 = (uint64_t *)MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor();
  v19 = static MPIdentifierSet.bestIdentifier<A>(for:purpose:identifiers:)(v16, *v18, 0, v17);
  if (!v20)
  {

LABEL_9:
    v21 = 0;
    v23 = 0;
    goto LABEL_10;
  }
  v21 = MusicItemID.init(_:)(v19, v20);
  v23 = v22;

LABEL_10:
  sub_10076D5A0((uint64_t)v12, v21, v23, a3);
  v24 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v24);
}

uint64_t sub_1007793E8()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_1011C78E0 = result;
  return result;
}

uint64_t sub_10077940C()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_1011C78E8 = result;
  return result;
}

uint64_t sub_100779430()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124D980);
  sub_100048B14(v0, (uint64_t)qword_10124D980);
  return static Logger.music(_:)(0xD000000000000013, 0x8000000100ECEE60);
}

double sub_100779490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  double result;
  uint64_t v23;
  uint64_t v24;

  v23 = a4;
  v24 = a2;
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  type metadata accessor for MainActor(0);
  swift_retain();
  swift_bridgeObjectRetain();
  v15 = static MainActor.shared.getter(v14);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_1010DB380, v19 + 8, v16 | 7);
  *(_QWORD *)(v20 + 16) = v15;
  *(_QWORD *)(v20 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v20 + v17, v9, v6);
  v21 = (_QWORD *)(v20 + v18);
  *v21 = v24;
  v21[1] = a3;
  *(_QWORD *)(v20 + v19) = v23;
  sub_100166D14((uint64_t)v12, (uint64_t)&unk_1011C7C88, v20);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100779630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  v8 = sub_100007E8C(&qword_1011B6C70);
  v7[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  v7[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[14] = v10;
  v7[15] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v7[16] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  return swift_task_switch(sub_1007796EC, v13, v14);
}

void sub_1007796EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD **)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  swift_release();
  sub_10076D5A0(v6, v5, v4, v3);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 96), &qword_1011B6C70);
LABEL_23:
    v25 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v25);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v7 = *(_QWORD *)(v0 + 88);
  sub_10005B6C0(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120), type metadata accessor for AppInterfaceContext.Activity);
  if (v7)
  {
LABEL_4:
    v8 = *(_QWORD *)(v0 + 120);
    swift_retain();
    sub_100770824(v8, 0, 0);
    swift_release();
LABEL_22:
    sub_10005B748(*(_QWORD *)(v0 + 120), type metadata accessor for AppInterfaceContext.Activity);
    goto LABEL_23;
  }
  v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v10 = objc_msgSend(v9, "connectedScenes");
  v11 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
  v12 = sub_1000A569C();
  v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v10, v11, v12);

  sub_10079470C(v13);
  v15 = v14;
  swift_bridgeObjectRelease();
  if (!((unint64_t)v15 >> 62))
  {
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
LABEL_21:

    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if (v15 < 0)
    v23 = v15;
  else
    v23 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease();
  if (!v24)
    goto LABEL_21;
LABEL_7:
  if ((v15 & 0xC000000000000001) != 0)
  {
    v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
    goto LABEL_10;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v15 + 32);
LABEL_10:
    v17 = v16;

    v18 = objc_msgSend(v17, "delegate", swift_bridgeObjectRelease().n128_f64[0]);
    if (v18
      && (*(_QWORD *)(v0 + 56) = v18,
          v19 = sub_100007E8C(&qword_1011A9300),
          v20 = sub_100007E8C(&qword_1011A3120),
          (swift_dynamicCast(v0 + 16, v0 + 56, v19, v20, 6) & 1) != 0))
    {
      v21 = *(_QWORD *)(v0 + 40);
      if (v21)
      {
        v22 = *(_QWORD *)(*sub_100007E68((_QWORD *)(v0 + 16), v21)
                        + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
        swift_retain();
        _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));

        if (!v22)
          goto LABEL_22;
        goto LABEL_4;
      }
    }
    else
    {
      *(_QWORD *)(v0 + 48) = 0;
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    sub_10004FF60(v0 + 16, (uint64_t *)&unk_1011A3110);

    goto LABEL_22;
  }
  __break(1u);
}

double sub_1007799D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  double result;
  uint64_t v16;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor(0);
  swift_retain();
  v10 = a1;
  v11 = a2;
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1010DB358, 56, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v10;
  v14[5] = a2;
  v14[6] = a3;
  sub_100166D14((uint64_t)v8, (uint64_t)&unk_1011C7C78, (uint64_t)v14);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100779AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  v7 = sub_100007E8C(&qword_1011B6C70);
  v6[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AppInterfaceContext.Activity(0);
  v6[12] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[13] = v9;
  v6[14] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v6[15] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_100779B8C, v12, v13);
}

void sub_100779B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD **)(v0 + 88);
  v5 = *(void **)(v0 + 64);
  v4 = *(void **)(v0 + 72);
  swift_release();
  sub_1007791DC(v5, v4, v3);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 88), &qword_1011B6C70);
LABEL_23:
    v24 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v24);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v6 = *(_QWORD *)(v0 + 80);
  sub_10005B6C0(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 112), type metadata accessor for AppInterfaceContext.Activity);
  if (v6)
  {
LABEL_4:
    v7 = *(_QWORD *)(v0 + 112);
    swift_retain();
    sub_100770824(v7, 0, 0);
    swift_release();
LABEL_22:
    sub_10005B748(*(_QWORD *)(v0 + 112), type metadata accessor for AppInterfaceContext.Activity);
    goto LABEL_23;
  }
  v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v9 = objc_msgSend(v8, "connectedScenes");
  v10 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
  v11 = sub_1000A569C();
  v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, v10, v11);

  sub_10079470C(v12);
  v14 = v13;
  swift_bridgeObjectRelease();
  if (!((unint64_t)v14 >> 62))
  {
    if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
LABEL_21:
    swift_bridgeObjectRelease();

    goto LABEL_22;
  }
  if (v14 < 0)
    v22 = v14;
  else
    v22 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v23 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_21;
LABEL_7:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
    goto LABEL_10;
  }
  if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v14 + 32);
LABEL_10:
    v16 = v15;
    swift_bridgeObjectRelease();

    v17 = objc_msgSend(v16, "delegate");
    if (v17
      && (*(_QWORD *)(v0 + 56) = v17,
          v18 = sub_100007E8C(&qword_1011A9300),
          v19 = sub_100007E8C(&qword_1011A3120),
          (swift_dynamicCast(v0 + 16, v0 + 56, v18, v19, 6) & 1) != 0))
    {
      v20 = *(_QWORD *)(v0 + 40);
      if (v20)
      {
        v21 = *(_QWORD *)(*sub_100007E68((_QWORD *)(v0 + 16), v20)
                        + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
        swift_retain();
        _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));

        if (!v21)
          goto LABEL_22;
        goto LABEL_4;
      }
    }
    else
    {
      *(_QWORD *)(v0 + 48) = 0;
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    sub_10004FF60(v0 + 16, (uint64_t *)&unk_1011A3110);

    goto LABEL_22;
  }
  __break(1u);
}

id sub_100779F40()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MiniPlayerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MiniPlayerViewController()
{
  return objc_opt_self(_TtC5Music24MiniPlayerViewController);
}

_QWORD *initializeBufferWithCopyOfBuffer for AppInterfaceContext.RootViewControllerKind(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for AppInterfaceContext.RootViewControllerKind(_QWORD *a1)
{

}

uint64_t *assignWithCopy for AppInterfaceContext.RootViewControllerKind(uint64_t *a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = (void *)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  v4 = *a1;
  *a1 = *a2;
  v5 = (void *)(v4 & 0x3FFFFFFFFFFFFFFFLL);
  v6 = v3;

  return a1;
}

uint64_t *assignWithTake for AppInterfaceContext.RootViewControllerKind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AppInterfaceContext.RootViewControllerKind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AppInterfaceContext.RootViewControllerKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_10077A0E8(_QWORD *a1)
{
  return *a1 >> 62;
}

uint64_t *sub_10077A0F4(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for AppInterfaceContext.RootViewControllerKind()
{
  return &type metadata for AppInterfaceContext.RootViewControllerKind;
}

unint64_t sub_10077A11C()
{
  unint64_t result;

  result = qword_1011C7BA0;
  if (!qword_1011C7BA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabIdentifier, &type metadata for TabIdentifier);
    atomic_store(result, (unint64_t *)&qword_1011C7BA0);
  }
  return result;
}

uint64_t sub_10077A160()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10077A184(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t type metadata accessor for AppInterfaceContext.Activity.Destination(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C7D88, (uint64_t)&nominal type descriptor for AppInterfaceContext.Activity.Destination);
}

unint64_t sub_10077A1C8(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
    return specialized _ArrayBuffer._getElementSlowPath(_:)(result, a2);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_10077A220(unint64_t a1, unint64_t a2)
{
  id v4;
  id v5;
  unint64_t v6;
  id v7;
  void *v8;
  char v9;

  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      if (a2 >> 62 != 1)
        goto LABEL_10;
      goto LABEL_8;
    }
    if (a2 >> 62 == 2)
    {
LABEL_8:
      v8 = (void *)(a1 & 0x3FFFFFFFFFFFFFFFLL);
      sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
      v4 = v8;
      v5 = (id)(a2 & 0x3FFFFFFFFFFFFFFFLL);
      v6 = (unint64_t)v4;
      v7 = v5;
      goto LABEL_9;
    }
LABEL_10:
    v9 = 0;
    return v9 & 1;
  }
  if (a2 >> 62)
    goto LABEL_10;
  sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
  v4 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
  v5 = (id)a2;
  v6 = a1;
  v7 = v5;
LABEL_9:
  v9 = static NSObject.== infix(_:_:)(v6, v7);

  return v9 & 1;
}

uint64_t type metadata accessor for AppInterfaceContext.Activity(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C7E38, (uint64_t)&nominal type descriptor for AppInterfaceContext.Activity);
}

uint64_t sub_10077A328()
{
  uint64_t v0;

  return sub_1003F5620(*(_QWORD **)(v0 + 16)) & 1;
}

double sub_10077A35C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100778B0C(a1, a2, v2);
}

uint64_t sub_10077A364()
{
  uint64_t v0;

  return sub_1003F48F8(*(_QWORD *)(v0 + 16)) & 1;
}

double sub_10077A398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100778810(a1, a2, v2);
}

uint64_t sub_10077A3A4(uint64_t a1)
{
  return sub_10077C534(a1, type metadata accessor for AppInterfaceContext.Activity.Destination, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_100778468);
}

uint64_t sub_10077A3B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, __n128);
  id *v11;
  int EnumCaseMultiPayload;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = type metadata accessor for Artist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v4 + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = *(_QWORD *)(v6 + 64);
  v8 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v9 = v0 + v3;
  v10 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 8);
  v10(v9, v1, v8);
  swift_release();
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  v11 = (id *)(v0 + v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v7, v5);
  if (EnumCaseMultiPayload == 4)
  {

    v13 = (char *)v11 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
    v14 = type metadata accessor for UITraitOverrides(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  }
  else if (EnumCaseMultiPayload == 3)
  {
    ((void (*)(unint64_t, uint64_t))v10)(v0 + v7, v1);
  }
  return swift_deallocObject(v0, v7 + v17);
}

uint64_t sub_10077A520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = *(_QWORD *)(type metadata accessor for Artist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  v9 = (v8 + v7 + 16) & ~v8;
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v1 + v5;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = v1 + v7;
  v15 = *(_QWORD *)(v1 + v7);
  v16 = *(_QWORD *)(v14 + 8);
  v17 = v1 + v9;
  v18 = (_QWORD *)swift_task_alloc(dword_1011C7BDC);
  *(_QWORD *)(v2 + 16) = v18;
  *v18 = v2;
  v18[1] = sub_10006AEE4;
  return sub_1007782B0(a1, v10, v11, v12, v13, v15, v16, v17);
}

unint64_t sub_10077A608()
{
  unint64_t result;

  result = qword_1011C7BE8;
  if (!qword_1011C7BE8)
  {
    result = swift_getWitnessTable(&unk_100ECF178, &type metadata for AppInterfaceContext.Activity.Error);
    atomic_store(result, (unint64_t *)&qword_1011C7BE8);
  }
  return result;
}

uint64_t sub_10077A650()
{
  return sub_10077A808((uint64_t (*)(_QWORD, _QWORD, unint64_t, _QWORD, _QWORD, unint64_t))sub_100778194);
}

uint64_t sub_10077A65C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10077A66C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10077A678()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  id *v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011ACE00) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v17 = *(_QWORD *)(v5 + 64);

  v7 = v0 + v2;
  v8 = type metadata accessor for UITraitOverrides(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = (v3 + v6 + 16) & ~v6;
  if (*(_QWORD *)(v0 + v3))
    swift_release();
  v12 = (id *)(v0 + v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v11, v4);
  if (EnumCaseMultiPayload == 4)
  {

    v15 = (char *)v12 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
    if (!v10((uint64_t)v15, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  }
  else if (EnumCaseMultiPayload == 3)
  {
    v14 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v0 + v11, v14);
  }
  return swift_deallocObject(v0, v11 + v17);
}

uint64_t sub_10077A7FC()
{
  return sub_10077A808((uint64_t (*)(_QWORD, _QWORD, unint64_t, _QWORD, _QWORD, unint64_t))sub_10077809C);
}

uint64_t sub_10077A808(uint64_t (*a1)(_QWORD, _QWORD, unint64_t, _QWORD, _QWORD, unint64_t))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011ACE00) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v3, *(_QWORD *)(v1 + v4), *(_QWORD *)(v1 + v4 + 8), v1 + ((v4 + v5 + 16) & ~v5));
}

uint64_t sub_10077A8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id *v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  v5 = (id *)(v0 + v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v3, v1);
  if (EnumCaseMultiPayload == 4)
  {

    v8 = (char *)v5 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
    v9 = type metadata accessor for UITraitOverrides(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  else if (EnumCaseMultiPayload == 3)
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  }
  return swift_deallocObject(v0, v3 + v4);
}

void sub_10077A99C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  sub_100777EC4(a1, *(_BYTE *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_10077A9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id *v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  if (*(_QWORD *)(v0 + 16))
    swift_release();
  v5 = (id *)(v0 + v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v3, v1);
  if (EnumCaseMultiPayload == 4)
  {

    v8 = (char *)v5 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
    v9 = type metadata accessor for UITraitOverrides(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  else if (EnumCaseMultiPayload == 3)
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  }
  return swift_deallocObject(v0, v3 + v4);
}

void sub_10077AAEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  sub_100777DF8(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_10077AB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id *v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  v5 = (id *)(v0 + v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v3, v1);
  if (EnumCaseMultiPayload == 4)
  {

    v8 = (char *)v5 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
    v9 = type metadata accessor for UITraitOverrides(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  else if (EnumCaseMultiPayload == 3)
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_10077AC24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  return sub_100777B24(a1, *(_QWORD *)(v1 + 16), *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

void sub_10077AC7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  sub_100777A58(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_10077ACC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t result;
  char v13;

  if (!a4)
    return !a8;
  if (a4 == 1)
    return a8 == 1;
  if (a8 < 2)
    return 0;
  if (!a2)
  {
    if (a6)
      return 0;
    goto LABEL_16;
  }
  if (!a6)
    return 0;
  if (a1 == a5 && a2 == a6
    || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0), result = 0, (v13 & 1) != 0))
  {
LABEL_16:
    if (a3 != a7 || a4 != a8)
      return _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0);
    return 1;
  }
  return result;
}

void sub_10077AD98(uint64_t *a1)
{
  uint64_t v1;

  sub_1007742F0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE **)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(NSObject **)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_10077ADCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10077ADF0(uint64_t a1)
{
  uint64_t v1;

  sub_1007727FC(a1, v1);
}

uint64_t sub_10077ADF8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_release();
  swift_unknownObjectWeakDestroy(v0 + 24, v1);
  v2 = *(unsigned __int8 *)(v0 + 72);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v2);
  if (*(_QWORD *)(v0 + 80))
    swift_release();
  return swift_deallocObject(v0, 96);
}

void sub_10077AE50(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100772880(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24);
}

uint64_t sub_10077AE5C(char *a1)
{
  uint64_t v1;

  return sub_100772E34(a1, v1);
}

void sub_10077AE68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8) + 80);
  sub_100773A80(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_10077AE98()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C7C00) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_bridgeObjectRelease();
  v4 = v0 + v2;
  v5 = type metadata accessor for SearchScope(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(v0 + v3))
    swift_release();
  return swift_deallocObject(v0, v3 + 16);
}

void sub_10077AF58(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C7C00) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_10077259C(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + v4, *(void (**)(uint64_t, __n128))((char *)v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10077AFB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10077AFE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1007730AC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10077AFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10077B08C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc(dword_1011C7C14);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10006AEE4;
  return sub_1007733B8(a1, v6, v7, v8, v9, v10, v11);
}

unint64_t sub_10077B144()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A9760;
  if (!qword_1011A9760)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011A96F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A9760);
  }
  return result;
}

uint64_t sub_10077B190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_10077B220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  v6 = v0 + v5;
  swift_unknownObjectWeakDestroy(v0 + v5, v7);
  v8 = *(unsigned __int8 *)(v0 + v5 + 48);
  if (v8 != 255)
    sub_100064AA4(*(id *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), v8);
  if (*(_QWORD *)(v6 + 56))
    swift_release();
  return swift_deallocObject(v0, v5 + 72);
}

double sub_10077B2CC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100772A44(v0 + v2, *(void **)(v0 + v3), v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_10077B318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v6);

  v7 = v0 + v5;
  swift_unknownObjectWeakDestroy(v0 + v5, v8);
  v9 = *(unsigned __int8 *)(v0 + v5 + 48);
  if (v9 != 255)
    sub_100064AA4(*(id *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), v9);
  if (*(_QWORD *)(v7 + 56))
    swift_release();
  return swift_deallocObject(v0, v5 + 72);
}

uint64_t sub_10077B3E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = v1 + v5;
  v10 = *(_QWORD *)(v1 + v6);
  v11 = v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)swift_task_alloc(dword_1011C7C24);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10005AEE4;
  return sub_100772BE4(a1, v7, v8, v9, v10, v11);
}

uint64_t sub_10077B494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  v5 = (id *)(v0 + v3);
  switch(swift_getEnumCaseMultiPayload(v0 + v3, v1))
  {
    case 0u:
      v6 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v3, v6);
      if (EnumCaseMultiPayload == 4)
      {

        v9 = (char *)v5 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
        v10 = type metadata accessor for UITraitOverrides(0);
        goto LABEL_20;
      }
      if (EnumCaseMultiPayload == 3)
      {
        v8 = type metadata accessor for Artist(0);
        (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v3, v8);
      }
      return swift_deallocObject(v0, v3 + v4);
    case 1u:
      swift_bridgeObjectRelease();
      v9 = (char *)v5 + *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48);
      v10 = type metadata accessor for SearchScope(0);
LABEL_20:
      v23 = v10;
      v24 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v9, 1, v10))
        (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v23);
      return swift_deallocObject(v0, v3 + v4);
    case 2u:

      goto LABEL_18;
    case 3u:
      v11 = type metadata accessor for Playlist.Folder(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v3, 1, v11))
        (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v0 + v3, v11);
      v13 = type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease();
      v14 = (char *)v5 + *(int *)(v13 + 24);
      v15 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
      v17 = *(int *)(v13 + 28);
      goto LABEL_24;
    case 4u:

      v18 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v19 = (id *)((char *)v5 + *(int *)(v18 + 28));
      v20 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
      {
        if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
        {
          v21 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
        }
        else
        {

        }
      }
      v17 = *(int *)(v18 + 32);
LABEL_24:
      if (*(id *)((char *)v5 + v17))
        swift_release();
      break;
    case 5u:
      v22 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v0 + v3, v22);
      if (*(id *)((char *)v5 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16) != (id)1)
LABEL_18:
        swift_bridgeObjectRelease();
      break;
    default:
      return swift_deallocObject(v0, v3 + v4);
  }
  return swift_deallocObject(v0, v3 + v4);
}

void sub_10077B7A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8) + 80);
  sub_100773F68(*(void **)(v0 + 16), *(void (**)(_QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_10077B7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  swift_unknownObjectWeakDestroy(v0 + 24, v5);
  v6 = *(unsigned __int8 *)(v0 + 72);
  if (v6 != 255)
    sub_100064AA4(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v6);
  if (*(_QWORD *)(v0 + 80))
    swift_release();
  v7 = (v3 + 120) & ~v3;
  if (*(_QWORD *)(v0 + 104))
    swift_release();
  v8 = (id *)(v0 + v7);
  switch(swift_getEnumCaseMultiPayload(v0 + v7, v1))
  {
    case 0u:
      v9 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v7, v9);
      if (EnumCaseMultiPayload == 4)
      {

        v12 = (char *)v8 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
        v13 = type metadata accessor for UITraitOverrides(0);
        goto LABEL_24;
      }
      if (EnumCaseMultiPayload == 3)
      {
        v11 = type metadata accessor for Artist(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v7, v11);
      }
      return swift_deallocObject(v0, v7 + v4);
    case 1u:
      swift_bridgeObjectRelease();
      v12 = (char *)v8 + *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48);
      v13 = type metadata accessor for SearchScope(0);
LABEL_24:
      v26 = v13;
      v27 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v12, 1, v13))
        (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v26);
      return swift_deallocObject(v0, v7 + v4);
    case 2u:

      goto LABEL_22;
    case 3u:
      v14 = type metadata accessor for Playlist.Folder(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v0 + v7, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v0 + v7, v14);
      v16 = type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease();
      v17 = (char *)v8 + *(int *)(v16 + 24);
      v18 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      v20 = *(int *)(v16 + 28);
      goto LABEL_28;
    case 4u:

      v21 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v22 = (id *)((char *)v8 + *(int *)(v21 + 28));
      v23 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
      {
        if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
        {
          v24 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
        }
        else
        {

        }
      }
      v20 = *(int *)(v21 + 32);
LABEL_28:
      if (*(id *)((char *)v8 + v20))
        swift_release();
      break;
    case 5u:
      v25 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v0 + v7, v25);
      if (*(id *)((char *)v8 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16) != (id)1)
LABEL_22:
        swift_bridgeObjectRelease();
      break;
    default:
      return swift_deallocObject(v0, v7 + v4);
  }
  return swift_deallocObject(v0, v7 + v4);
}

double sub_10077BB24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8) + 80);
  return sub_100773B34(*(void **)(v0 + 16), v0 + 24, *(unsigned __int8 *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), v0 + ((v1 + 120) & ~v1));
}

uint64_t sub_10077BB60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (id *)(v0 + v3);
  switch(swift_getEnumCaseMultiPayload(v0 + v3, v1))
  {
    case 0u:
      v6 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v3, v6);
      if (EnumCaseMultiPayload == 4)
      {

        v9 = (char *)v5 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
        v10 = type metadata accessor for UITraitOverrides(0);
        goto LABEL_18;
      }
      if (EnumCaseMultiPayload == 3)
      {
        v8 = type metadata accessor for Artist(0);
        (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v3, v8);
      }
      return swift_deallocObject(v0, v3 + v4);
    case 1u:
      swift_bridgeObjectRelease();
      v9 = (char *)v5 + *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48);
      v10 = type metadata accessor for SearchScope(0);
LABEL_18:
      v23 = v10;
      v24 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v9, 1, v10))
        (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v23);
      return swift_deallocObject(v0, v3 + v4);
    case 2u:

      goto LABEL_16;
    case 3u:
      v11 = type metadata accessor for Playlist.Folder(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v3, 1, v11))
        (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v0 + v3, v11);
      v13 = type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease();
      v14 = (char *)v5 + *(int *)(v13 + 24);
      v15 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
      v17 = *(int *)(v13 + 28);
      goto LABEL_22;
    case 4u:

      v18 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v19 = (id *)((char *)v5 + *(int *)(v18 + 28));
      v20 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
      {
        if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
        {
          v21 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
        }
        else
        {

        }
      }
      v17 = *(int *)(v18 + 32);
LABEL_22:
      if (*(id *)((char *)v5 + v17))
        swift_release();
      break;
    case 5u:
      v22 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v0 + v3, v22);
      if (*(id *)((char *)v5 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16) != (id)1)
LABEL_16:
        swift_bridgeObjectRelease();
      break;
    default:
      return swift_deallocObject(v0, v3 + v4);
  }
  return swift_deallocObject(v0, v3 + v4);
}

void sub_10077BE58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8) + 80);
  sub_100771528(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t type metadata accessor for AppInterfaceContext.Error(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C7D08, (uint64_t)&nominal type descriptor for AppInterfaceContext.Error);
}

uint64_t sub_10077BEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v5 = (id *)(v0 + v3);
  switch(swift_getEnumCaseMultiPayload(v5, v1))
  {
    case 0u:
      v6 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
      if (EnumCaseMultiPayload == 4)
      {

        v9 = (char *)v5 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
        v10 = type metadata accessor for UITraitOverrides(0);
        goto LABEL_18;
      }
      if (EnumCaseMultiPayload == 3)
      {
        v8 = type metadata accessor for Artist(0);
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      v9 = (char *)v5 + *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48);
      v10 = type metadata accessor for SearchScope(0);
LABEL_18:
      v23 = v10;
      v24 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v9, 1, v10))
        (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v23);
      break;
    case 2u:

      goto LABEL_16;
    case 3u:
      v11 = type metadata accessor for Playlist.Folder(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11))
        (*(void (**)(id *, uint64_t))(v12 + 8))(v5, v11);
      v13 = type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease();
      v14 = (char *)v5 + *(int *)(v13 + 24);
      v15 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
      v17 = *(int *)(v13 + 28);
      goto LABEL_22;
    case 4u:

      v18 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v19 = (id *)((char *)v5 + *(int *)(v18 + 28));
      v20 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
      {
        if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
        {
          v21 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
        }
        else
        {

        }
      }
      v17 = *(int *)(v18 + 32);
LABEL_22:
      if (*(id *)((char *)v5 + v17))
        swift_release();
      break;
    case 5u:
      v22 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v5, v22);
      if (*(id *)((char *)v5 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16) != (id)1)
LABEL_16:
        swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  return swift_deallocObject(v0, v4 + 16);
}

double sub_10077C1C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_100770B04(*(_QWORD *)(v0 + 16), v0 + v2, *v3, v3[1]);
}

uint64_t sub_10077C214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  if (*(_QWORD *)(v0 + 16))
    swift_release();
  v5 = (id *)(v0 + v3);
  switch(swift_getEnumCaseMultiPayload(v0 + v3, v1))
  {
    case 0u:
      v6 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v3, v6);
      if (EnumCaseMultiPayload == 4)
      {

        v9 = (char *)v5 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
        v10 = type metadata accessor for UITraitOverrides(0);
        goto LABEL_20;
      }
      if (EnumCaseMultiPayload == 3)
      {
        v8 = type metadata accessor for Artist(0);
        (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v3, v8);
      }
      return swift_deallocObject(v0, v3 + v4);
    case 1u:
      swift_bridgeObjectRelease();
      v9 = (char *)v5 + *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48);
      v10 = type metadata accessor for SearchScope(0);
LABEL_20:
      v23 = v10;
      v24 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v9, 1, v10))
        (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v23);
      return swift_deallocObject(v0, v3 + v4);
    case 2u:

      goto LABEL_18;
    case 3u:
      v11 = type metadata accessor for Playlist.Folder(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v3, 1, v11))
        (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v0 + v3, v11);
      v13 = type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease();
      v14 = (char *)v5 + *(int *)(v13 + 24);
      v15 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
      v17 = *(int *)(v13 + 28);
      goto LABEL_24;
    case 4u:

      v18 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v19 = (id *)((char *)v5 + *(int *)(v18 + 28));
      v20 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
      {
        if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
        {
          v21 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
        }
        else
        {

        }
      }
      v17 = *(int *)(v18 + 32);
LABEL_24:
      if (*(id *)((char *)v5 + v17))
        swift_release();
      break;
    case 5u:
      v22 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v0 + v3, v22);
      if (*(id *)((char *)v5 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16) != (id)1)
LABEL_18:
        swift_bridgeObjectRelease();
      break;
    default:
      return swift_deallocObject(v0, v3 + v4);
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_10077C520(uint64_t a1)
{
  return sub_10077C534(a1, type metadata accessor for AppInterfaceContext.Activity, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_100770BF8);
}

uint64_t sub_10077C534(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v3 + ((v5 + 32) & ~v5));
}

void sub_10077C584(void **a1)
{
  uint64_t v1;

  sub_100774C90(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10077C590()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10077C5B4()
{
  uint64_t v0;

  return sub_10076F980(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

void sub_10077C5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  char v19;

  v7 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  while (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v12 << 6);
LABEL_5:
    v19 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v14);
    sub_100357C98((uint64_t)&v19, a2, a3);
    if (v3)
      goto LABEL_24;
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v12);
  if (v16)
  {
LABEL_17:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  v18 = v12 + 4;
  if (v12 + 4 >= v11)
  {
LABEL_24:
    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v7 + 8 * v18);
  v12 += 4;
  if (v16)
    goto LABEL_17;
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v11)
      goto LABEL_24;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    ++v18;
    if (v16)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_10077C740(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_10076D0EC(*a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), **(unsigned __int8 **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_10077C768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  _BYTE v11[24];

  v3 = v2;
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks, v11, 33, 0);
  sub_100355CA8(0, a2);
  swift_endAccess(v11);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController);
  v7 = OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController;
  if (*(_QWORD *)(v6
                 + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController) == a1)
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NavigationController()), "init");
    v9 = *(void **)(v6 + v7);
    *(_QWORD *)(v6 + v7) = v8;
    v10 = v8;
    sub_1003587E4(v9);

  }
}

double sub_10077C82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  double result;
  char *v20;
  _QWORD v21[6];
  int v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v6 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist.Folder.Item(0);
  v21[3] = *(_QWORD *)(v9 - 8);
  v21[4] = v9;
  __chkstk_darwin(v9);
  v21[2] = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v11);
  v12 = _s9PlaylistsV5ScopeVMa(0);
  __chkstk_darwin(v12);
  v13 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v16 = (char *)v21 - v15;
  v23 = v3;
  v17 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers);
  swift_bridgeObjectRetain();
  v22 = a1;
  v21[5] = sub_1008AB1D4(a1, v17);
  LOBYTE(a1) = v18;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  if ((a1 & 1) == 0)
  {
    v21[1] = v8;
    sub_10005B704(a3, (uint64_t)v16, type metadata accessor for SidebarMenu.Item);
    v20 = (char *)&loc_10077C9FC + *((int *)qword_10077D058 + swift_getEnumCaseMultiPayload(v16, v13));
    __asm { BR              X10 }
  }
  return result;
}

void sub_10077D070(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  double v18;
  NSArray v19;
  uint64_t v20;

  v3 = v2;
  v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music16TabBarController__tabIdentifiers];
  swift_bridgeObjectRetain();
  v7 = sub_1008AB1D4(a1, v6);
  v9 = v8;
  swift_bridgeObjectRelease(v6);
  if ((v9 & 1) != 0)
    return;
  sub_100915F08(a1);
  v10 = objc_msgSend(v3, "viewControllers");
  if (!v10)
  {
    objc_msgSend(v3, "setViewControllers:", 0);
    swift_bridgeObjectRelease(0);
    return;
  }
  v11 = v10;
  v12 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  v20 = v13;
  if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v13)
    || v13 < 0
    || (v13 & 0x4000000000000000) != 0)
  {
    v13 = sub_10072E088(v13);
    v20 = v13;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v7 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    __break(1u);
    return;
  }
  v14 = (v13 & 0xFFFFFFFFFFFFFF8) + 8 * v7;
  v15 = *(void **)(v14 + 0x20);
  *(_QWORD *)(v14 + 32) = a2;
  v16 = a2;

  specialized Array._endMutation()(v17);
  if (v20)
  {
    v19.super.isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  else
  {
    v19.super.isa = 0;
  }
  objc_msgSend(v3, "setViewControllers:", v19.super.isa, v18);

}

void sub_10077D1F8(uint64_t a1, void *a2, unsigned __int8 a3)
{
  SEL *v3;
  SEL *v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char **v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  SEL *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;
  Class v39;
  id v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  Class isa;
  uint64_t v55;
  int EnumCaseMultiPayload;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  __n128 v63;
  id v64;
  uint64_t v65;
  Class v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  void *v72;
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  int64_t v79;
  Class v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  SEL *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;

  v4 = v3;
  v87 = a1;
  v6 = a3;
  v7 = type metadata accessor for Playlist.Folder.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (uint64_t)&v82 - v15;
  v18 = __chkstk_darwin(v17).n128_u64[0];
  v86 = (uint64_t)&v82 - v19;
  v20 = &selRef_referralObject;
  if (v6)
    goto LABEL_2;
  v40 = objc_msgSend(a2, "viewControllers", *(double *)&v18);
  v85 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v85);

  if ((unint64_t)v41 >> 62)
  {
    if (v41 < 0)
      v48 = v41;
    else
      v48 = v41 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v49 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_bridgeObjectRelease(v41);
    if (v49)
      goto LABEL_12;
LABEL_30:
    v18 = swift_bridgeObjectRelease(v41).n128_u64[0];
    v20 = &selRef_referralObject;
    goto LABEL_2;
  }
  if (!*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_30;
LABEL_12:
  if ((v41 & 0xC000000000000001) != 0)
  {
    v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v41);
  }
  else
  {
    if (!*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_33;
    }
    v42 = *(id *)(v41 + 32);
  }
  v43 = v42;
  swift_bridgeObjectRelease(v41);
  v44 = type metadata accessor for LibraryMainViewController(0);
  v45 = swift_dynamicCastClass(v43, v44);

  v20 = &selRef_referralObject;
  if (v45)
  {
    v84 = v4;
    v46 = (int64_t)objc_msgSend(a2, "viewControllers");
    v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v85);

    v88 = v41;
    v4 = (SEL *)((unint64_t)v41 >> 62);
    if (!((unint64_t)v41 >> 62))
    {
      if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_18;
      goto LABEL_39;
    }
LABEL_33:
    if (v41 < 0)
      v50 = v41;
    else
      v50 = v41 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v83 = v50;
    v51 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease(v41);
    if (!v51)
    {
LABEL_94:
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    v46 = _CocoaArrayWrapper.endIndex.getter(v83);
    swift_bridgeObjectRelease(v41);
    if (v46)
    {
LABEL_18:
      if ((v41 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_71;
        }
        v46 = (int64_t)*(id *)(v41 + 32);
        if (!v4)
          goto LABEL_21;
        goto LABEL_41;
      }
LABEL_40:
      v46 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v41);
      if (!v4)
      {
LABEL_21:
        v4 = *(SEL **)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_45;
      }
LABEL_41:
      if (v41 < 0)
        v52 = v41;
      else
        v52 = v41 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v4 = (SEL *)_CocoaArrayWrapper.endIndex.getter(v52);
      swift_bridgeObjectRelease(v41);
LABEL_45:
      if (v4)
      {
        sub_1001FF2DC(0, 1);

        v53 = v88;
        isa = Array._bridgeToObjectiveC()().super.isa;
        v4 = (SEL *)&selRef_referralObject;
        objc_msgSend(a2, "setViewControllers:", isa, swift_bridgeObjectRelease(v53).n128_f64[0]);

        v55 = v86;
        sub_10005B704(v87, v86, type metadata accessor for SidebarMenu.Item);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v55, v11);
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 3)
          {
            sub_10005B704(v55, v16, type metadata accessor for SidebarMenu.Item);
            (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v10, v16, v7);
            v57 = objc_msgSend(a2, "viewControllers");
            v58 = v85;
            v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v57, v85);

            __chkstk_darwin(v60);
            *(&v82 - 2) = (uint64_t)v10;
            v46 = sub_10076D474(sub_10077DAC0, (uint64_t)(&v82 - 4), v59);
            v62 = v61;
            v63 = swift_bridgeObjectRelease(v59);
            if ((v62 & 1) != 0)
            {
LABEL_57:
              (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v63);
LABEL_58:
              v67 = v86;
LABEL_61:
              sub_10005B748(v67, type metadata accessor for SidebarMenu.Item);
              v4 = v84;
              v20 = &selRef_referralObject;
              goto LABEL_2;
            }
            v16 = v46 + 1;
            if (!__OFADD__(v46, 1))
            {
              v64 = objc_msgSend(a2, "viewControllers", v63.n128_f64[0]);
              v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v64, v58);

              v88 = v46;
              if (!v16)
              {
LABEL_56:
                v66 = Array._bridgeToObjectiveC()().super.isa;
                objc_msgSend(a2, v4[317], v66, swift_bridgeObjectRelease(v46).n128_f64[0]);

                goto LABEL_57;
              }
              if ((v16 & 0x8000000000000000) == 0)
              {
                if (!((unint64_t)v46 >> 62))
                {
                  v65 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
                  if ((v65 & 0x8000000000000000) == 0)
                    goto LABEL_54;
                  goto LABEL_55;
                }
LABEL_74:
                if (v46 < 0)
                  v74 = v46;
                else
                  v74 = v46 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain();
                v65 = _CocoaArrayWrapper.endIndex.getter(v74);
                swift_bridgeObjectRelease(v46);
                if ((v65 & 0x8000000000000000) == 0)
                {
LABEL_54:
                  if (v65 < v16)
                  {
                    while (1)
                    {
                      __break(1u);
LABEL_92:
                      v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
LABEL_68:
                      v72 = v71;
                      swift_bridgeObjectRelease(v16);
                      swift_getObjectType();
                      v73 = objc_msgSend(v72, "isKindOfClass:", swift_getObjCClassFromMetadata());

                      if ((v73 & 1) != 0)
                      {

                        goto LABEL_58;
                      }
LABEL_84:
                      v16 = (uint64_t)(id)v65;
                      v77 = objc_msgSend(a2, "viewControllers");
                      v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v77, v8);

                      v88 = v78;
                      if (!((unint64_t)v78 >> 62))
                        break;
                      v81 = v78 < 0 ? v78 : v78 & 0xFFFFFFFFFFFFFF8;
                      swift_bridgeObjectRetain();
                      v65 = _CocoaArrayWrapper.endIndex.getter(v81);
                      swift_bridgeObjectRelease(v78);
                      if ((v65 & 0x8000000000000000) == 0)
                        break;
                      __break(1u);
                    }
                    sub_1001FD730(0, 0, v16);
                    v79 = v88;
                    v80 = Array._bridgeToObjectiveC()().super.isa;
                    objc_msgSend(a2, v4[317], v80, swift_bridgeObjectRelease(v79).n128_f64[0]);

                    goto LABEL_58;
                  }
                }
LABEL_55:
                sub_1001FF2DC(0, v16);
                v46 = v88;
                goto LABEL_56;
              }
LABEL_73:
              __break(1u);
              goto LABEL_74;
            }
LABEL_72:
            __break(1u);
            goto LABEL_73;
          }
LABEL_60:
          v67 = v55;
          goto LABEL_61;
        }
        sub_10005B704(v55, (uint64_t)v13, type metadata accessor for SidebarMenu.Item);
        if (*v13)
          goto LABEL_60;
        v68 = -[SEL traitCollection](v84, "traitCollection");
        sub_1008B918C((uint64_t)v68);
        v65 = v69;

        if (!v65)
          goto LABEL_58;
        v70 = objc_msgSend(a2, "viewControllers");
        v8 = v85;
        v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, v85);

        if ((unint64_t)v16 >> 62)
        {
          if (v16 < 0)
            v75 = v16;
          else
            v75 = v16 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v76 = _CocoaArrayWrapper.endIndex.getter(v75);
          swift_bridgeObjectRelease(v16);
          if (v76)
            goto LABEL_65;
        }
        else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_65:
          if ((v16 & 0xC000000000000001) != 0)
            goto LABEL_92;
          if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v71 = *(id *)(v16 + 32);
            goto LABEL_68;
          }
          __break(1u);
          goto LABEL_94;
        }
        swift_bridgeObjectRelease(v16);
        goto LABEL_84;
      }
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_2:
  v21 = objc_msgSend(a2, v20[487], *(double *)&v18);
  v22 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v47 = v23;
    else
      v47 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v24 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v25 = v87;
  *(_QWORD *)&v26 = swift_bridgeObjectRelease(v23).n128_u64[0];
  if (!v24)
  {
    v27 = v4;
    v28 = -[SEL traitCollection](v4, "traitCollection", v26);
    sub_1008B918C((uint64_t)v28);
    v30 = v29;

    v4 = v27;
    if (v30)
    {
      v31 = v30;
      v32 = objc_msgSend(a2, "viewControllers");
      v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v22);

      v88 = v33;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
      v36 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v35 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v36 >= v35 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
      v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v31);
      specialized Array._endMutation()(v37);
      v38 = v88;
      v39 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(a2, "setViewControllers:", v39, swift_bridgeObjectRelease(v38).n128_f64[0]);

    }
  }
  sub_100358058((uint64_t)v4, a2, v25);
}

uint64_t sub_10077DAC0(void **a1)
{
  return sub_100358344(a1) & 1;
}

void sub_10077DADC(uint64_t a1)
{
  uint64_t *v1;

  sub_10076CD20(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

_QWORD *sub_10077DAFC(unint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v2 = (_QWORD *)v1;
  *(_QWORD *)(v1 + 16) = 0;
  sub_100043A28((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v1 + 24) = v4;
  swift_unknownObjectWeakInit(v1 + 40, 0);
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_QWORD *)(v1 + 32) = a1;
  v5 = sub_10004D63C();
  v6 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v5) & 1) != 0)
    sub_10036B998();
  if (a1 >> 62)
    a1 = (unint64_t)v6;
  v7 = qword_10119C7A0;
  v8 = v6;
  swift_retain();
  if (v7 != -1)
    swift_once(&qword_10119C7A0, sub_1007793E8);
  objc_setAssociatedObject((id)a1, (const void *)qword_1011C78E0, v2, 0);

  swift_release();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v5) & 1) != 0)
  {
    type metadata accessor for BottomPlayerTabViewController();
    v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
    v10 = (void *)v2[8];
    v2[8] = v9;

  }
  v11 = objc_msgSend((id)a1, "traitCollection");
  v12 = objc_msgSend(v11, "userInterfaceIdiom");

  if (v12 != (id)6)
    sub_10077045C();
  return v2;
}

uint64_t sub_10077DCA4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10077DCE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011C7C74);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_100779AD0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10077DD60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __n128 v8;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_10077DE04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = (uint64_t *)(v1 + v6);
  v12 = *v11;
  v13 = v11[1];
  v14 = *(_QWORD *)(v1 + v7);
  v15 = (_QWORD *)swift_task_alloc(dword_1011C7C84);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10006AEE4;
  return sub_100779630(a1, v8, v9, v10, v12, v13, v14);
}

unint64_t destroy for AppInterfaceContext.Activity.PresentationOptions(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;

  result = *(_QWORD *)(a1 + 24);
  if (result >= 0xFFFFFFFF)
  {
    v3 = *(_QWORD *)(a1 + 8);
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(v3);
  }
  return result;
}

uint64_t initializeWithCopy for AppInterfaceContext.Activity.PresentationOptions(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v3;
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for AppInterfaceContext.Activity.PresentationOptions(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = a2[3];
  if (a1[3] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      v9 = a2[1];
      a1[1] = v9;
      a1[2] = a2[2];
      v10 = a2[3];
      a1[3] = v10;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v10);
      return a1;
    }
LABEL_7:
    v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v11;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    goto LABEL_7;
  }
  *a1 = *a2;
  v5 = a2[1];
  v6 = a1[1];
  a1[1] = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a2[3];
  v8 = a1[3];
  a1[3] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for AppInterfaceContext.Activity.PresentationOptions(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)(a1 + 24);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 24);
  if (v5 < 0xFFFFFFFF)
  {
    v8 = *(_QWORD *)(a1 + 8);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    swift_bridgeObjectRelease(v8);
LABEL_5:
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppInterfaceContext.Activity.PresentationOptions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppInterfaceContext.Activity.PresentationOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t sub_10077E188(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_10077E1A0(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[3] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppInterfaceContext.Activity.PresentationOptions()
{
  return &type metadata for AppInterfaceContext.Activity.PresentationOptions;
}

uint64_t sub_10077E1D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = type metadata accessor for AppInterfaceContext.Activity(0);
    v7 = (char *)&loc_10077E23C + 4 * byte_100ECEDA0[swift_getEnumCaseMultiPayload(a2, v6)];
    __asm { BR              X10 }
  }
  v8 = *a2;
  *a1 = *a2;
  v9 = v8 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v9;
}

double sub_10077E7C0(id *a1)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  void (*v7)(id *, uint64_t);
  id *v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for AppInterfaceContext.Activity(0);
  switch(swift_getEnumCaseMultiPayload(a1, v2))
  {
    case 0u:
      v4 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
      if (EnumCaseMultiPayload == 4)
      {

        v9 = (id *)((char *)a1 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48));
        v10 = type metadata accessor for UITraitOverrides(0);
        goto LABEL_18;
      }
      if (EnumCaseMultiPayload == 3)
      {
        v6 = type metadata accessor for Artist(0);
        v7 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
        v8 = a1;
        goto LABEL_20;
      }
      return result;
    case 1u:
      swift_bridgeObjectRelease();
      v9 = (id *)((char *)a1 + *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48));
      v10 = type metadata accessor for SearchScope(0);
LABEL_18:
      v23 = v10;
      v24 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v24 + 48))(v9, 1, v10))
      {
        v7 = *(void (**)(id *, uint64_t))(v24 + 8);
        v8 = v9;
        v6 = v23;
LABEL_20:
        v7(v8, v6);
      }
      return result;
    case 2u:

      goto LABEL_16;
    case 3u:
      v11 = type metadata accessor for Playlist.Folder(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11))
        (*(void (**)(id *, uint64_t))(v12 + 8))(a1, v11);
      v13 = type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease();
      v14 = (char *)a1 + *(int *)(v13 + 24);
      v15 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
      v17 = *(int *)(v13 + 28);
      goto LABEL_23;
    case 4u:

      v18 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v19 = (id *)((char *)a1 + *(int *)(v18 + 28));
      v20 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
      {
        if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
        {
          v21 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
        }
        else
        {

        }
      }
      v17 = *(int *)(v18 + 32);
LABEL_23:
      if (*(id *)((char *)a1 + v17))
        *(_QWORD *)&result = swift_release().n128_u64[0];
      break;
    case 5u:
      v22 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1, v22);
      if (*(id *)((char *)a1 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16) != (id)1)
LABEL_16:
        *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
      break;
    default:
      return result;
  }
  return result;
}

void sub_10077EAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;

  v3 = type metadata accessor for AppInterfaceContext.Activity(0);
  v4 = (char *)sub_10077EB08 + 4 * byte_100ECEDAC[swift_getEnumCaseMultiPayload(a2, v3)];
  __asm { BR              X10 }
}

void **sub_10077EB08()
{
  void **v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v3);
  if (EnumCaseMultiPayload == 4)
  {
    v10 = *v2;
    *v0 = *v2;
    v11 = v10;
    v12 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
    v13 = (char *)v0 + v12;
    v14 = (char *)v2 + v12;
    v15 = type metadata accessor for UITraitOverrides(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100007E8C(&qword_1011ACE00);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v7 = v0;
    v8 = v3;
    v9 = 4;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 3)
  {
    v5 = type metadata accessor for Artist(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v0, v2, v5);
    v6 = sub_100007E8C(&qword_1011C7BD0);
    *((_BYTE *)v0 + *(int *)(v6 + 48)) = *((_BYTE *)v2 + *(int *)(v6 + 48));
    v7 = v0;
    v8 = v3;
    v9 = 3;
LABEL_9:
    swift_storeEnumTagMultiPayload(v7, v8, v9);
    goto LABEL_10;
  }
  memcpy(v0, v2, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
LABEL_10:
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_10077F06C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  char *v4;

  if (result != a2)
  {
    sub_10005B748(result, type metadata accessor for AppInterfaceContext.Activity);
    v3 = type metadata accessor for AppInterfaceContext.Activity(0);
    v4 = (char *)&loc_10077F0E0 + 4 * byte_100ECEDB2[swift_getEnumCaseMultiPayload(a2, v3)];
    __asm { BR              X10 }
  }
  return result;
}

_QWORD *sub_10077F664(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;

  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  switch(swift_getEnumCaseMultiPayload(a2, v4))
  {
    case 0u:
      v5 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v5);
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        v48 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        v51 = type metadata accessor for UITraitOverrides(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
        {
          v53 = sub_100007E8C(&qword_1011ACE00);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
        }
        v9 = a1;
        v10 = v5;
        v11 = 4;
      }
      else
      {
        if (EnumCaseMultiPayload != 3)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
LABEL_37:
          v32 = a1;
          v33 = v4;
          v34 = 0;
          goto LABEL_38;
        }
        v7 = type metadata accessor for Artist(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = sub_100007E8C(&qword_1011C7BD0);
        *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
        v9 = a1;
        v10 = v5;
        v11 = 3;
      }
      swift_storeEnumTagMultiPayload(v9, v10, v11);
      goto LABEL_37;
    case 1u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v15 = *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for SearchScope(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_100007E8C((uint64_t *)&unk_1011C7C00);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v32 = a1;
      v33 = v4;
      v34 = 1;
      goto LABEL_38;
    case 3u:
      v12 = type metadata accessor for Playlist.Folder(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        v14 = sub_100007E8C((uint64_t *)&unk_1011B5660);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 32))(a1, a2, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
      v35 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      *(_OWORD *)((char *)a1 + v35[5]) = *(_OWORD *)((char *)a2 + v35[5]);
      v36 = v35[6];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
      {
        v41 = sub_100007E8C(&qword_1011B1F10);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      }
      v42 = v35[7];
      v43 = (_QWORD *)((char *)a1 + v42);
      v44 = (_QWORD *)((char *)a2 + v42);
      v45 = *v44;
      if (*v44)
      {
        v46 = v44[1];
        *v43 = v45;
        v43[1] = v46;
      }
      else
      {
        *(_OWORD *)v43 = *(_OWORD *)v44;
      }
      v32 = a1;
      v33 = v4;
      v34 = 3;
      goto LABEL_38;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v21 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v22 = *(int *)(v21 + 28);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = type metadata accessor for SourcedSongs(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = sub_100007E8C(&qword_1011C7C90);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
        {
          v47 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v23, v24, v47);
          swift_storeEnumTagMultiPayload(v23, v25, 1);
        }
        else
        {
          memcpy(v23, v24, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v54 = *(int *)(v21 + 32);
      v55 = (_QWORD *)((char *)a1 + v54);
      v56 = (_QWORD *)((char *)a2 + v54);
      v57 = *v56;
      if (*v56)
      {
        v58 = v56[1];
        *v55 = v57;
        v55[1] = v58;
      }
      else
      {
        *(_OWORD *)v55 = *(_OWORD *)v56;
      }
      v32 = a1;
      v33 = v4;
      v34 = 4;
      goto LABEL_38;
    case 5u:
      v28 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(a1, a2, v28);
      v29 = *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
      v32 = a1;
      v33 = v4;
      v34 = 5;
LABEL_38:
      swift_storeEnumTagMultiPayload(v32, v33, v34);
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      return a1;
  }
}

_QWORD *sub_10077FBA4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for AppInterfaceContext.Activity);
    v4 = type metadata accessor for AppInterfaceContext.Activity(0);
    switch(swift_getEnumCaseMultiPayload(a2, v4))
    {
      case 0u:
        v5 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v5);
        if (EnumCaseMultiPayload == 4)
        {
          *a1 = *a2;
          v48 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
          v49 = (char *)a1 + v48;
          v50 = (char *)a2 + v48;
          v51 = type metadata accessor for UITraitOverrides(0);
          v52 = *(_QWORD *)(v51 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
          {
            v53 = sub_100007E8C(&qword_1011ACE00);
            memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
          }
          v9 = a1;
          v10 = v5;
          v11 = 4;
        }
        else
        {
          if (EnumCaseMultiPayload != 3)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
LABEL_38:
            v32 = a1;
            v33 = v4;
            v34 = 0;
            goto LABEL_39;
          }
          v7 = type metadata accessor for Artist(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
          v8 = sub_100007E8C(&qword_1011C7BD0);
          *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
          v9 = a1;
          v10 = v5;
          v11 = 3;
        }
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        goto LABEL_38;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v15 = *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = type metadata accessor for SearchScope(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = sub_100007E8C((uint64_t *)&unk_1011C7C00);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        v32 = a1;
        v33 = v4;
        v34 = 1;
        goto LABEL_39;
      case 3u:
        v12 = type metadata accessor for Playlist.Folder(0);
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          v14 = sub_100007E8C((uint64_t *)&unk_1011B5660);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 32))(a1, a2, v12);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        v35 = (int *)type metadata accessor for PlaylistCreation.Context(0);
        *(_OWORD *)((char *)a1 + v35[5]) = *(_OWORD *)((char *)a2 + v35[5]);
        v36 = v35[6];
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        {
          v41 = sub_100007E8C(&qword_1011B1F10);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
        }
        v42 = v35[7];
        v43 = (_QWORD *)((char *)a1 + v42);
        v44 = (_QWORD *)((char *)a2 + v42);
        v45 = *v44;
        if (*v44)
        {
          v46 = v44[1];
          *v43 = v45;
          v43[1] = v46;
        }
        else
        {
          *(_OWORD *)v43 = *(_OWORD *)v44;
        }
        v32 = a1;
        v33 = v4;
        v34 = 3;
        goto LABEL_39;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v21 = type metadata accessor for PlaylistCreation.LegacyContext(0);
        v22 = *(int *)(v21 + 28);
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = type metadata accessor for SourcedSongs(0);
        v26 = *(_QWORD *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        {
          v27 = sub_100007E8C(&qword_1011C7C90);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
          {
            v47 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v23, v24, v47);
            swift_storeEnumTagMultiPayload(v23, v25, 1);
          }
          else
          {
            memcpy(v23, v24, *(_QWORD *)(v26 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        v54 = *(int *)(v21 + 32);
        v55 = (_QWORD *)((char *)a1 + v54);
        v56 = (_QWORD *)((char *)a2 + v54);
        v57 = *v56;
        if (*v56)
        {
          v58 = v56[1];
          *v55 = v57;
          v55[1] = v58;
        }
        else
        {
          *(_OWORD *)v55 = *(_OWORD *)v56;
        }
        v32 = a1;
        v33 = v4;
        v34 = 4;
        goto LABEL_39;
      case 5u:
        v28 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(a1, a2, v28);
        v29 = *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        *(_OWORD *)v30 = *(_OWORD *)v31;
        *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
        v32 = a1;
        v33 = v4;
        v34 = 5;
LABEL_39:
        swift_storeEnumTagMultiPayload(v32, v33, v34);
        return a1;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_1007800FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100780138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for AppInterfaceContext.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t sub_100780184(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for AppInterfaceContext.Activity(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase(a1, 256, v4 + 64);
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppInterfaceContext.Activity.Error()
{
  return &type metadata for AppInterfaceContext.Activity.Error;
}

uint64_t storeEnumTagSinglePayload for AppInterfaceContext.Activity.Destination.Source(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10078023C + 4 * byte_100ECEDC9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100780270 + 4 * byte_100ECEDC4[v4]))();
}

uint64_t sub_100780270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100780278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100780280);
  return result;
}

uint64_t sub_10078028C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100780294);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100780298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1007802A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppInterfaceContext.Activity.Destination.Source()
{
  return &type metadata for AppInterfaceContext.Activity.Destination.Source;
}

char *sub_1007802BC(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 4)
    {
      v15 = *a2;
      *(_QWORD *)a1 = *a2;
      v16 = v15;
      v17 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
      v18 = &a1[v17];
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for UITraitOverrides(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_100007E8C(&qword_1011ACE00);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v11 = a1;
      v12 = a3;
      v13 = 4;
      goto LABEL_11;
    }
    if (EnumCaseMultiPayload == 3)
    {
      v9 = type metadata accessor for Artist(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = sub_100007E8C(&qword_1011C7BD0);
      a1[*(int *)(v10 + 48)] = *((_BYTE *)a2 + *(int *)(v10 + 48));
      v11 = a1;
      v12 = a3;
      v13 = 3;
LABEL_11:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_100780444(id *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t (*v5)(id *, uint64_t);
  id *v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 4)
  {

    v7 = (id *)((char *)a1 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48));
    v8 = type metadata accessor for UITraitOverrides(0);
    v9 = *(_QWORD *)(v8 - 8);
    result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    if (!(_DWORD)result)
    {
      v5 = *(uint64_t (**)(id *, uint64_t))(v9 + 8);
      v6 = v7;
      v4 = v8;
      return v5(v6, v4);
    }
  }
  else if ((_DWORD)result == 3)
  {
    v4 = type metadata accessor for Artist(0);
    v5 = *(uint64_t (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v6 = a1;
    return v5(v6, v4);
  }
  return result;
}

void **sub_1007804F8(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 4)
  {
    v12 = *a2;
    *a1 = *a2;
    v13 = v12;
    v14 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for UITraitOverrides(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_100007E8C(&qword_1011ACE00);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v9 = a1;
    v10 = a3;
    v11 = 4;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 3)
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = sub_100007E8C(&qword_1011C7BD0);
    *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
    v9 = a1;
    v10 = a3;
    v11 = 3;
LABEL_9:
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void **sub_100780658(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for AppInterfaceContext.Activity.Destination);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 4)
    {
      v12 = *a2;
      *a1 = *a2;
      v13 = v12;
      v14 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for UITraitOverrides(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = sub_100007E8C(&qword_1011ACE00);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v9 = a1;
      v10 = a3;
      v11 = 4;
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload == 3)
    {
      v7 = type metadata accessor for Artist(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = sub_100007E8C(&qword_1011C7BD0);
      *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
      v9 = a1;
      v10 = a3;
      v11 = 3;
LABEL_10:
      swift_storeEnumTagMultiPayload(v9, v10, v11);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1007807D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 4)
  {
    *a1 = *a2;
    v12 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for UITraitOverrides(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100007E8C(&qword_1011ACE00);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v9 = a1;
    v10 = a3;
    v11 = 4;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 3)
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = sub_100007E8C(&qword_1011C7BD0);
    *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
    v9 = a1;
    v10 = a3;
    v11 = 3;
LABEL_9:
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_10078092C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for AppInterfaceContext.Activity.Destination);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      v12 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for UITraitOverrides(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C(&qword_1011ACE00);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v9 = a1;
      v10 = a3;
      v11 = 4;
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload == 3)
    {
      v7 = type metadata accessor for Artist(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = sub_100007E8C(&qword_1011C7BD0);
      *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
      v9 = a1;
      v10 = a3;
      v11 = 3;
LABEL_10:
      swift_storeEnumTagMultiPayload(v9, v10, v11);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_100780AA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _BYTE v7[32];
  _QWORD v8[5];

  v8[0] = &unk_100ECEFE0;
  v8[1] = &unk_100ECEFF8;
  v8[2] = &unk_100ECEFE0;
  v2 = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v7, *(_QWORD *)(v2 - 8) + 64, &unk_100ECF010);
    v8[3] = v7;
    sub_10015C698(319, (unint64_t *)&unk_1011C7D98, (uint64_t (*)(uint64_t))&type metadata accessor for UITraitOverrides);
    if (v5 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v6, (char *)&value witness table for Builtin.UnknownObject + 64, *(_QWORD *)(v4 - 8) + 64);
      v8[4] = v6;
      swift_initEnumMetadataMultiPayload(a1, 256, 5, v8);
    }
  }
}

uint64_t sub_100780B74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_100780BD4 + 4 * byte_100ECEDCE[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

double sub_100781150(id *a1, uint64_t a2)
{
  double result;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  void (*v7)(id *, uint64_t);
  id *v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v4 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
      if (EnumCaseMultiPayload == 4)
      {

        v9 = (id *)((char *)a1 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48));
        v10 = type metadata accessor for UITraitOverrides(0);
        goto LABEL_18;
      }
      if (EnumCaseMultiPayload == 3)
      {
        v6 = type metadata accessor for Artist(0);
        v7 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
        v8 = a1;
        goto LABEL_20;
      }
      return result;
    case 1u:
      swift_bridgeObjectRelease();
      v9 = (id *)((char *)a1 + *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48));
      v10 = type metadata accessor for SearchScope(0);
LABEL_18:
      v23 = v10;
      v24 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v24 + 48))(v9, 1, v10))
      {
        v7 = *(void (**)(id *, uint64_t))(v24 + 8);
        v8 = v9;
        v6 = v23;
LABEL_20:
        v7(v8, v6);
      }
      return result;
    case 2u:

      goto LABEL_16;
    case 3u:
      v11 = type metadata accessor for Playlist.Folder(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11))
        (*(void (**)(id *, uint64_t))(v12 + 8))(a1, v11);
      v13 = type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease();
      v14 = (char *)a1 + *(int *)(v13 + 24);
      v15 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
      v17 = *(int *)(v13 + 28);
      goto LABEL_23;
    case 4u:

      v18 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v19 = (id *)((char *)a1 + *(int *)(v18 + 28));
      v20 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
      {
        if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
        {
          v21 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
        }
        else
        {

        }
      }
      v17 = *(int *)(v18 + 32);
LABEL_23:
      if (*(id *)((char *)a1 + v17))
        *(_QWORD *)&result = swift_release().n128_u64[0];
      break;
    case 5u:
      v22 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1, v22);
      if (*(id *)((char *)a1 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16) != (id)1)
LABEL_16:
        *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
      break;
    default:
      return result;
  }
  return result;
}

void sub_10078142C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_100781480 + 4 * byte_100ECEDDA[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

void **sub_100781480()
{
  void **v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v3);
  if (EnumCaseMultiPayload == 4)
  {
    v10 = *v2;
    *v0 = *v2;
    v11 = v10;
    v12 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
    v13 = (char *)v0 + v12;
    v14 = (char *)v2 + v12;
    v15 = type metadata accessor for UITraitOverrides(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100007E8C(&qword_1011ACE00);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v7 = v0;
    v8 = v3;
    v9 = 4;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 3)
  {
    v5 = type metadata accessor for Artist(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v0, v2, v5);
    v6 = sub_100007E8C(&qword_1011C7BD0);
    *((_BYTE *)v0 + *(int *)(v6 + 48)) = *((_BYTE *)v2 + *(int *)(v6 + 48));
    v7 = v0;
    v8 = v3;
    v9 = 3;
LABEL_9:
    swift_storeEnumTagMultiPayload(v7, v8, v9);
    goto LABEL_10;
  }
  memcpy(v0, v2, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
LABEL_10:
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_1007819E4(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10005B748(result, type metadata accessor for AppInterfaceContext.Activity);
    v5 = (char *)&loc_100781A50 + 4 * byte_100ECEDE0[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

_QWORD *sub_100781FCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        v49 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
        v50 = (char *)a1 + v49;
        v51 = (char *)a2 + v49;
        v52 = type metadata accessor for UITraitOverrides(0);
        v53 = *(_QWORD *)(v52 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
        {
          v54 = sub_100007E8C(&qword_1011ACE00);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
        }
        v10 = a1;
        v11 = v6;
        v12 = 4;
      }
      else
      {
        if (EnumCaseMultiPayload != 3)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_37:
          v33 = a1;
          v34 = a3;
          v35 = 0;
          goto LABEL_38;
        }
        v8 = type metadata accessor for Artist(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        v9 = sub_100007E8C(&qword_1011C7BD0);
        *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
        v10 = a1;
        v11 = v6;
        v12 = 3;
      }
      swift_storeEnumTagMultiPayload(v10, v11, v12);
      goto LABEL_37;
    case 1u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v16 = *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48);
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = type metadata accessor for SearchScope(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = sub_100007E8C((uint64_t *)&unk_1011C7C00);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v33 = a1;
      v34 = a3;
      v35 = 1;
      goto LABEL_38;
    case 3u:
      v13 = type metadata accessor for Playlist.Folder(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        v15 = sub_100007E8C((uint64_t *)&unk_1011B5660);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 32))(a1, a2, v13);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
      v36 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      *(_OWORD *)((char *)a1 + v36[5]) = *(_OWORD *)((char *)a2 + v36[5]);
      v37 = v36[6];
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C(&qword_1011B1F10);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v36[7];
      v44 = (_QWORD *)((char *)a1 + v43);
      v45 = (_QWORD *)((char *)a2 + v43);
      v46 = *v45;
      if (*v45)
      {
        v47 = v45[1];
        *v44 = v46;
        v44[1] = v47;
      }
      else
      {
        *(_OWORD *)v44 = *(_OWORD *)v45;
      }
      v33 = a1;
      v34 = a3;
      v35 = 3;
      goto LABEL_38;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v22 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v23 = *(int *)(v22 + 28);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for SourcedSongs(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_100007E8C(&qword_1011C7C90);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
        {
          v48 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v24, v25, v48);
          swift_storeEnumTagMultiPayload(v24, v26, 1);
        }
        else
        {
          memcpy(v24, v25, *(_QWORD *)(v27 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v55 = *(int *)(v22 + 32);
      v56 = (_QWORD *)((char *)a1 + v55);
      v57 = (_QWORD *)((char *)a2 + v55);
      v58 = *v57;
      if (*v57)
      {
        v59 = v57[1];
        *v56 = v58;
        v56[1] = v59;
      }
      else
      {
        *(_OWORD *)v56 = *(_OWORD *)v57;
      }
      v33 = a1;
      v34 = a3;
      v35 = 4;
      goto LABEL_38;
    case 5u:
      v29 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
      v30 = *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20);
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
      v33 = a1;
      v34 = a3;
      v35 = 5;
LABEL_38:
      swift_storeEnumTagMultiPayload(v33, v34, v35);
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_QWORD *sub_100782504(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for AppInterfaceContext.Activity);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
        if (EnumCaseMultiPayload == 4)
        {
          *a1 = *a2;
          v49 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9590) + 48);
          v50 = (char *)a1 + v49;
          v51 = (char *)a2 + v49;
          v52 = type metadata accessor for UITraitOverrides(0);
          v53 = *(_QWORD *)(v52 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
          {
            v54 = sub_100007E8C(&qword_1011ACE00);
            memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
          }
          v10 = a1;
          v11 = v6;
          v12 = 4;
        }
        else
        {
          if (EnumCaseMultiPayload != 3)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_38:
            v33 = a1;
            v34 = a3;
            v35 = 0;
            goto LABEL_39;
          }
          v8 = type metadata accessor for Artist(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
          v9 = sub_100007E8C(&qword_1011C7BD0);
          *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
          v10 = a1;
          v11 = v6;
          v12 = 3;
        }
        swift_storeEnumTagMultiPayload(v10, v11, v12);
        goto LABEL_38;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v16 = *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = type metadata accessor for SearchScope(0);
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          v21 = sub_100007E8C((uint64_t *)&unk_1011C7C00);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        v33 = a1;
        v34 = a3;
        v35 = 1;
        goto LABEL_39;
      case 3u:
        v13 = type metadata accessor for Playlist.Folder(0);
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
        {
          v15 = sub_100007E8C((uint64_t *)&unk_1011B5660);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 32))(a1, a2, v13);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
        }
        v36 = (int *)type metadata accessor for PlaylistCreation.Context(0);
        *(_OWORD *)((char *)a1 + v36[5]) = *(_OWORD *)((char *)a2 + v36[5]);
        v37 = v36[6];
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
        {
          v42 = sub_100007E8C(&qword_1011B1F10);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
        v43 = v36[7];
        v44 = (_QWORD *)((char *)a1 + v43);
        v45 = (_QWORD *)((char *)a2 + v43);
        v46 = *v45;
        if (*v45)
        {
          v47 = v45[1];
          *v44 = v46;
          v44[1] = v47;
        }
        else
        {
          *(_OWORD *)v44 = *(_OWORD *)v45;
        }
        v33 = a1;
        v34 = a3;
        v35 = 3;
        goto LABEL_39;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v22 = type metadata accessor for PlaylistCreation.LegacyContext(0);
        v23 = *(int *)(v22 + 28);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for SourcedSongs(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_100007E8C(&qword_1011C7C90);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
          {
            v48 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v24, v25, v48);
            swift_storeEnumTagMultiPayload(v24, v26, 1);
          }
          else
          {
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v55 = *(int *)(v22 + 32);
        v56 = (_QWORD *)((char *)a1 + v55);
        v57 = (_QWORD *)((char *)a2 + v55);
        v58 = *v57;
        if (*v57)
        {
          v59 = v57[1];
          *v56 = v58;
          v56[1] = v59;
        }
        else
        {
          *(_OWORD *)v56 = *(_OWORD *)v57;
        }
        v33 = a1;
        v34 = a3;
        v35 = 4;
        goto LABEL_39;
      case 5u:
        v29 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
        v30 = *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        *(_OWORD *)v31 = *(_OWORD *)v32;
        *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
        v33 = a1;
        v34 = a3;
        v35 = 5;
LABEL_39:
        swift_storeEnumTagMultiPayload(v33, v34, v35);
        return a1;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

void sub_100782A54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _BYTE v12[32];
  _QWORD v13[6];

  v2 = type metadata accessor for AppInterfaceContext.Activity.Destination(319);
  if (v3 <= 0x3F)
  {
    v13[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10015C698(319, (unint64_t *)&unk_1011C7E48, (uint64_t (*)(uint64_t))&type metadata accessor for SearchScope);
    if (v5 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v12, &unk_100ECF038, *(_QWORD *)(v4 - 8) + 64);
      v13[1] = v12;
      v13[2] = &unk_100ECF050;
      v6 = type metadata accessor for PlaylistCreation.Context(319);
      if (v7 <= 0x3F)
      {
        v13[3] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for PlaylistCreation.LegacyContext(319);
        if (v9 <= 0x3F)
        {
          v13[4] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for PlaylistPicker.Context(319);
          if (v11 <= 0x3F)
          {
            v13[5] = *(_QWORD *)(v10 - 8) + 64;
            swift_initEnumMetadataMultiPayload(a1, 256, 6, v13);
          }
        }
      }
    }
  }
}

unint64_t sub_100782B58()
{
  unint64_t result;

  result = qword_1011C7E78;
  if (!qword_1011C7E78)
  {
    result = swift_getWitnessTable(&unk_100ECF0A8, &type metadata for AppInterfaceContext.Activity.Destination.Source);
    atomic_store(result, (unint64_t *)&qword_1011C7E78);
  }
  return result;
}

unint64_t sub_100782BA0()
{
  unint64_t result;

  result = qword_1011C7E80;
  if (!qword_1011C7E80)
  {
    result = swift_getWitnessTable(&unk_100ECF0D0, &type metadata for AppInterfaceContext.Activity.PresentationOptions);
    atomic_store(result, (unint64_t *)&qword_1011C7E80);
  }
  return result;
}

uint64_t sub_100782C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[15] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[16] = swift_task_alloc(v10);
  v7[17] = swift_task_alloc(v10);
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v11 = sub_100007E8C(&qword_1011BFC80);
  v7[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WidgetMusicRecommendation(0);
  v7[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[22] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[23] = swift_task_alloc(v14);
  v7[24] = swift_task_alloc(v14);
  v7[25] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v15);
  v7[27] = swift_task_alloc(v15);
  v16 = type metadata accessor for URL(0);
  v7[28] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[29] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[30] = swift_task_alloc(v18);
  v7[31] = swift_task_alloc(v18);
  v7[32] = swift_task_alloc(v18);
  return swift_task_switch(sub_100782DD4, 0, 0);
}

uint64_t sub_100782DD4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  __n128 v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  BOOL v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  __n128 v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  __n128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(uint64_t, uint64_t);
  void (*v148)(uint64_t, uint64_t, __n128);
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t *v156;
  _QWORD *v157;
  uint64_t v158[2];

  v1 = v0;
  v3 = v0 + 10;
  v2 = v0[10];
  v4 = v0 + 3;
  v5 = v0[28];
  v6 = v0[29];
  v7 = v3[16];
  sub_10004A160(v2, v7, &qword_10119E460);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v9 = v8(v7, 1, v5);
  v10 = v3[18];
  v11 = v3[19];
  v12 = v3[16];
  v13 = v3[17];
  if (v9 == 1)
  {
    sub_10004FF60(v3[16], &qword_10119E460);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v10);
    goto LABEL_4;
  }
  URL.appending(_:)(v1[11], v1[12], 1);
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v12, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  if (v8(v13, 1, v10) == 1)
  {
LABEL_4:
    v154 = v4;
    v15 = v1[19];
    v16 = v1[14];
    v17 = v1[15];
    v18 = v1[12];
    v19 = v1[10];
    sub_10004FF60(v1[27], &qword_10119E460);
    v20 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v19 + *(int *)(v20 + 24), v16);
    v21 = swift_bridgeObjectRetain_n(v18, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    v24 = os_log_type_enabled(v22, v23);
    v25 = v1[19];
    v26 = v1[14];
    v27 = v1[15];
    v28 = v1[12];
    if (v24)
    {
      v149 = v1[19];
      v29 = v1[11];
      v145 = v1[15];
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v158[0] = v31;
      *(_DWORD *)v30 = 136446210;
      swift_bridgeObjectRetain();
      v1[2] = sub_100322200(v29, v28, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 8, v154);
      swift_bridgeObjectRelease_n(v28, 3);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unable to get widget cache url for saving item named \"%{public}s\"", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v149, v26);
    }
    else
    {
      swift_bridgeObjectRelease_n(v1[12], 2);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    goto LABEL_7;
  }
  v44 = v1[21];
  v45 = v1[22];
  v46 = v1[20];
  v47 = v1[13];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[29] + 32))(v1[32], v1[27], v1[28]);
  sub_10004A160(v47, v46, &qword_1011BFC80);
  v156 = v3 - 4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v44) == 1)
  {
    v141 = v3 - 6;
    v147 = v14;
    v49 = v1[31];
    v48 = v1[32];
    v51 = v1[28];
    v50 = v1[29];
    v52 = v1[20];
    v53 = v1[18];
    v55 = v1[14];
    v54 = v1[15];
    v151 = v1;
    v56 = v1[12];
    v57 = v151[10];
    sub_10004FF60(v52, &qword_1011BFC80);
    v142 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v57 + *(int *)(v142 + 24), v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v48, v51);
    v58 = v56;
    v1 = v151;
    v59 = swift_bridgeObjectRetain_n(v58, 2);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.default.getter(v60);
    v62 = os_log_type_enabled(v60, v61);
    v63 = v151[31];
    v64 = v151[28];
    v65 = v151[18];
    v66 = v151[14];
    v67 = v151[15];
    v68 = v151[12];
    if (v62)
    {
      v69 = v3 - 5;
      v139 = v151[18];
      v70 = v151[11];
      v71 = swift_slowAlloc(22, -1);
      v137 = v66;
      v72 = swift_slowAlloc(64, -1);
      v158[0] = v72;
      *(_DWORD *)v71 = 136446466;
      swift_bridgeObjectRetain();
      v151[4] = sub_100322200(v70, v68, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v141, v69);
      swift_bridgeObjectRelease_n(v68, 3);
      *(_WORD *)(v71 + 12) = 2082;
      v73 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v74 = dispatch thunk of CustomStringConvertible.description.getter(v64, v73);
      v151[5] = sub_100322200(v74, v75, v158);
      v76 = v69;
      v1 = v151;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v76, v156);
      v77 = swift_bridgeObjectRelease();
      v78 = v64;
      v79 = v147;
      ((void (*)(uint64_t, uint64_t, __n128))v147)(v63, v78, v77);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v72, -1, -1);
      swift_slowDealloc(v71, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v139, v137);
    }
    else
    {
      v86 = swift_bridgeObjectRelease_n(v151[12], 2);
      v87 = v64;
      v79 = v147;
      ((void (*)(uint64_t, uint64_t, __n128))v147)(v63, v87, v86);

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
    }
    v88 = v1[32];
    v89 = v1[28];
    v90 = swift_task_alloc(32);
    *(_QWORD *)(v90 + 16) = v88;
    v91 = sub_100007E8C(&qword_1011A09A0);
    OS_dispatch_queue.sync<A>(execute:)(sub_10078FB10, v90, v91);
    swift_task_dealloc(v90);
    v79(v88, v89);
  }
  else
  {
    v80 = v1[25];
    v81 = v1[21];
    sub_10005B6C0(v1[20], v80, type metadata accessor for WidgetMusicRecommendation);
    v82 = type metadata accessor for JSONEncoder(0);
    v83 = swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    JSONEncoder.init()(v83);
    v84 = sub_100048748(&qword_1011C8160, type metadata accessor for WidgetMusicRecommendation, (uint64_t)&unk_100EC6BB0);
    v85 = dispatch thunk of JSONEncoder.encode<A>(_:)(v80, v81, v84);
    v152 = v1[32];
    v92 = v85;
    v94 = v93;
    swift_release();
    v143 = type metadata accessor for WidgetDiskCache(0);
    v95 = (_QWORD *)swift_task_alloc(48);
    v95[2] = v92;
    v95[3] = v94;
    v95[4] = v152;
    OS_dispatch_queue.sync<A>(execute:)(sub_10078FB24, v95, (char *)&type metadata for () + 8);
    v138 = v92;
    v140 = v94;
    v157 = v4;
    v96 = v1[29];
    v131 = v1[30];
    v133 = v1[32];
    v97 = v1[28];
    v98 = v1[25];
    v135 = v1[24];
    v99 = v1[17];
    v100 = v1[15];
    v153 = v1;
    v101 = v1[14];
    v102 = v153[12];
    v148 = (void (*)(uint64_t, uint64_t, __n128))v14;
    v103 = v153[10];
    swift_task_dealloc(v95);
    v104 = v101;
    v1 = v153;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(v99, v103 + *(int *)(v143 + 24), v104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v131, v133, v97);
    sub_10005B704(v98, v135, type metadata accessor for WidgetMusicRecommendation);
    v105 = swift_bridgeObjectRetain_n(v102, 2);
    v106 = Logger.logObject.getter(v105);
    v107 = static os_log_type_t.default.getter(v106);
    v108 = os_log_type_enabled(v106, v107);
    v109 = v153[30];
    v110 = v153[28];
    v112 = v153[24];
    v111 = v153[25];
    if (v108)
    {
      v128 = v153[23];
      v129 = v153[21];
      v132 = v153[15];
      v134 = v153[14];
      v136 = v153[17];
      v144 = v153[25];
      v113 = v153[12];
      v127 = v153[11];
      v114 = swift_slowAlloc(32, -1);
      v130 = swift_slowAlloc(96, -1);
      v158[0] = v130;
      *(_DWORD *)v114 = 136446722;
      v115 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v116 = dispatch thunk of CustomStringConvertible.description.getter(v110, v115);
      v153[8] = sub_100322200(v116, v117, v158);
      v1 = v153;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 2, v3 - 1);
      v118 = swift_bridgeObjectRelease();
      v148(v109, v110, v118);
      *(_WORD *)(v114 + 12) = 2082;
      swift_bridgeObjectRetain();
      v153[9] = sub_100322200(v127, v113, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 1, v3);
      swift_bridgeObjectRelease_n(v113, 3);
      *(_WORD *)(v114 + 22) = 2082;
      sub_10005B704(v112, v128, type metadata accessor for WidgetMusicRecommendation);
      v119 = String.init<A>(describing:)(v128, v129);
      v153[3] = sub_100322200(v119, v120, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v157, v3 - 6);
      swift_bridgeObjectRelease();
      sub_10005B748(v112, type metadata accessor for WidgetMusicRecommendation);
      _os_log_impl((void *)&_mh_execute_header, v106, v107, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v114, 0x20u);
      swift_arrayDestroy(v130, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v130, -1, -1);
      swift_slowDealloc(v114, -1, -1);
      sub_1000652DC(v138, v140);

      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v136, v134);
      v121 = v144;
    }
    else
    {
      v122 = v153[17];
      v123 = v153[14];
      v124 = v153[15];
      v125 = v153[12];
      sub_1000652DC(v138, v140);

      sub_10005B748(v112, type metadata accessor for WidgetMusicRecommendation);
      v126 = swift_bridgeObjectRelease_n(v125, 2);
      v148(v109, v110, v126);
      (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v122, v123);
      v121 = v111;
    }
    sub_10005B748(v121, type metadata accessor for WidgetMusicRecommendation);
    ((void (*)(_QWORD, _QWORD))v148)(v1[32], v1[28]);
  }
LABEL_7:
  v33 = v1[31];
  v32 = v1[32];
  v34 = v1[30];
  v36 = v1[26];
  v35 = v1[27];
  v38 = v1[24];
  v37 = v1[25];
  v39 = v1[23];
  v40 = v1;
  v41 = v1[20];
  v42 = v40[19];
  v146 = v40[18];
  v150 = v40[17];
  v155 = v40[16];
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v146);
  swift_task_dealloc(v150);
  swift_task_dealloc(v155);
  return ((uint64_t (*)(void))v40[1])();
}

uint64_t sub_100783B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[17] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v7[20] = swift_task_alloc(v10);
  v7[21] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[22] = swift_task_alloc(v11);
  v7[23] = swift_task_alloc(v11);
  v12 = type metadata accessor for URL(0);
  v7[24] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[25] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v14);
  v7[27] = swift_task_alloc(v14);
  v7[28] = swift_task_alloc(v14);
  return swift_task_switch(sub_100783C10, 0, 0);
}

uint64_t sub_100783C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __n128 v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  __n128 v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  unint64_t v103;
  __n128 v104;
  __n128 v105;
  uint64_t v106;
  os_log_type_t type;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  void (*v121)(uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123[2];

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  sub_10004A160(*(_QWORD *)(v0 + 96), v3, &qword_10119E460);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v5 = v4(v3, 1, v2);
  v6 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 176);
  v9 = *(_QWORD *)(v0 + 184);
  if (v5 == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_10119E460);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v9, 1, 1, v6);
    goto LABEL_4;
  }
  URL.appending(_:)(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), 1);
  v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v8, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  if (v4(v9, 1, v6) == 1)
  {
LABEL_4:
    v11 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 96);
    sub_10004FF60(*(_QWORD *)(v0 + 184), &qword_10119E460);
    v16 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v15 + *(int *)(v16 + 24), v13);
    v17 = swift_bridgeObjectRetain_n(v14, 2);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter();
    v20 = os_log_type_enabled(v18, v19);
    v21 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 128);
    v23 = *(_QWORD *)(v0 + 136);
    v24 = *(_QWORD *)(v0 + 112);
    if (v20)
    {
      v25 = *(_QWORD *)(v0 + 104);
      v119 = *(_QWORD *)(v0 + 128);
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v117 = v21;
      v27 = swift_slowAlloc(32, -1);
      v123[0] = v27;
      *(_DWORD *)v26 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = sub_100322200(v25, v24, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
      swift_bridgeObjectRelease_n(v24, 3);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unable to get widget cache url for saving item named \"%{public}s\"", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v117, v119);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 112), 2);

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    goto LABEL_13;
  }
  v28 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  v121 = v10;
  if (v28)
  {
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 120);
    v29 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    v30 = swift_bridgeObjectRetain();
    JSONEncoder.init()(v30);
    v31 = sub_100007E8C(&qword_1011BFD60);
    v32 = sub_10064F8BC(&qword_1011BFD68, &qword_1011B0698, (uint64_t)&unk_100EB9C90, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v59 = dispatch thunk of JSONEncoder.encode<A>(_:)(v0 + 24, v31, v32);
    v111 = v31;
    v60 = *(_QWORD *)(v0 + 224);
    v62 = v61;
    swift_release();
    v113 = type metadata accessor for WidgetDiskCache(0);
    v63 = (_QWORD *)swift_task_alloc(48);
    v116 = v59;
    v63[2] = v59;
    v63[3] = v62;
    v63[4] = v60;
    OS_dispatch_queue.sync<A>(execute:)(sub_10078FAF4, v63, (char *)&type metadata for () + 8);
    v120 = v62;
    v78 = *(_QWORD *)(v0 + 224);
    v79 = *(_QWORD *)(v0 + 200);
    v110 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 192);
    v81 = *(_QWORD *)(v0 + 152);
    v83 = *(_QWORD *)(v0 + 128);
    v82 = *(_QWORD *)(v0 + 136);
    v84 = *(_QWORD *)(v0 + 112);
    v85 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(v63);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v81, v85 + *(int *)(v113 + 24), v83);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v110, v78, v80);
    v86 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain_n(v84, 2);
    v87 = swift_bridgeObjectRetain_n(v86, 2);
    v88 = Logger.logObject.getter(v87);
    v89 = static os_log_type_t.default.getter();
    v90 = os_log_type_enabled(v88, v89);
    v91 = *(_QWORD *)(v0 + 208);
    v92 = *(_QWORD *)(v0 + 192);
    v93 = *(_QWORD *)(v0 + 152);
    v94 = *(_QWORD *)(v0 + 128);
    v114 = *(_QWORD *)(v0 + 136);
    v95 = *(_QWORD *)(v0 + 112);
    if (v90)
    {
      v106 = *(_QWORD *)(v0 + 104);
      v122 = *(_QWORD *)(v0 + 152);
      v96 = swift_slowAlloc(32, -1);
      v108 = swift_slowAlloc(96, -1);
      v123[0] = v108;
      *(_DWORD *)v96 = 136446722;
      type = v89;
      v97 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v98 = dispatch thunk of CustomStringConvertible.description.getter(v92, v97);
      *(_QWORD *)(v0 + 72) = sub_100322200(v98, v99, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
      v100 = swift_bridgeObjectRelease();
      v101 = v121;
      ((void (*)(uint64_t, uint64_t, __n128))v121)(v91, v92, v100);
      *(_WORD *)(v96 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 80) = sub_100322200(v106, v95, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
      swift_bridgeObjectRelease_n(v95, 3);
      *(_WORD *)(v96 + 22) = 2082;
      *(_QWORD *)(v0 + 88) = v86;
      swift_bridgeObjectRetain();
      v102 = String.init<A>(describing:)(v0 + 88, v111);
      *(_QWORD *)(v0 + 32) = sub_100322200(v102, v103, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v86, 2);
      _os_log_impl((void *)&_mh_execute_header, v88, type, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v96, 0x20u);
      swift_arrayDestroy(v108, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v108, -1, -1);
      swift_slowDealloc(v96, -1, -1);
      sub_1000652DC(v116, v120);

      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v122, v94);
    }
    else
    {
      sub_1000652DC(v116, v120);

      swift_bridgeObjectRelease_n(v86, 2);
      v104 = swift_bridgeObjectRelease_n(v95, 2);
      v101 = v121;
      ((void (*)(uint64_t, uint64_t, __n128))v121)(v91, v92, v104);
      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v93, v94);
    }
    v105 = swift_bridgeObjectRelease();
    ((void (*)(_QWORD, _QWORD, __n128))v101)(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 192), v105);
  }
  else
  {
    v33 = *(_QWORD *)(v0 + 216);
    v34 = *(_QWORD *)(v0 + 224);
    v36 = *(_QWORD *)(v0 + 192);
    v35 = *(_QWORD *)(v0 + 200);
    v37 = *(_QWORD *)(v0 + 160);
    v38 = *(_QWORD *)(v0 + 128);
    v39 = *(_QWORD *)(v0 + 136);
    v40 = *(_QWORD *)(v0 + 112);
    v41 = *(_QWORD *)(v0 + 96);
    v118 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v37, v41 + *(int *)(v118 + 24), v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v33, v34, v36);
    v42 = swift_bridgeObjectRetain_n(v40, 2);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter();
    v45 = os_log_type_enabled(v43, v44);
    v46 = *(_QWORD *)(v0 + 216);
    v47 = *(_QWORD *)(v0 + 192);
    v48 = *(_QWORD *)(v0 + 160);
    v49 = *(_QWORD *)(v0 + 128);
    v50 = *(_QWORD *)(v0 + 136);
    v51 = *(_QWORD *)(v0 + 112);
    if (v45)
    {
      v115 = *(_QWORD *)(v0 + 128);
      v52 = *(_QWORD *)(v0 + 104);
      v112 = *(_QWORD *)(v0 + 160);
      v53 = swift_slowAlloc(22, -1);
      v109 = swift_slowAlloc(64, -1);
      v123[0] = v109;
      *(_DWORD *)v53 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 40) = sub_100322200(v52, v51, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
      swift_bridgeObjectRelease_n(v51, 3);
      *(_WORD *)(v53 + 12) = 2082;
      v54 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v55 = dispatch thunk of CustomStringConvertible.description.getter(v47, v54);
      *(_QWORD *)(v0 + 48) = sub_100322200(v55, v56, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
      v57 = swift_bridgeObjectRelease();
      v58 = v121;
      ((void (*)(uint64_t, uint64_t, __n128))v121)(v46, v47, v57);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy(v109, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v109, -1, -1);
      swift_slowDealloc(v53, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v112, v115);
    }
    else
    {
      v64 = swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 112), 2);
      v58 = v121;
      ((void (*)(uint64_t, uint64_t, __n128))v121)(v46, v47, v64);

      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
    }
    v65 = *(_QWORD *)(v0 + 224);
    v66 = *(_QWORD *)(v0 + 192);
    v67 = swift_task_alloc(32);
    *(_QWORD *)(v67 + 16) = v65;
    v68 = sub_100007E8C(&qword_1011A09A0);
    OS_dispatch_queue.sync<A>(execute:)(sub_10078FADC, v67, v68);
    swift_task_dealloc(v67);
    v58(v65, v66);
  }
LABEL_13:
  v69 = *(_QWORD *)(v0 + 216);
  v70 = *(_QWORD *)(v0 + 208);
  v72 = *(_QWORD *)(v0 + 176);
  v71 = *(_QWORD *)(v0 + 184);
  v74 = *(_QWORD *)(v0 + 160);
  v73 = *(_QWORD *)(v0 + 168);
  v76 = *(_QWORD *)(v0 + 144);
  v75 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100784858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[15] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[16] = swift_task_alloc(v10);
  v7[17] = swift_task_alloc(v10);
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v11 = sub_100007E8C(&qword_10119FA90);
  v7[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WidgetMusicItem(0);
  v7[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[22] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[23] = swift_task_alloc(v14);
  v7[24] = swift_task_alloc(v14);
  v7[25] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v15);
  v7[27] = swift_task_alloc(v15);
  v16 = type metadata accessor for URL(0);
  v7[28] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[29] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[30] = swift_task_alloc(v18);
  v7[31] = swift_task_alloc(v18);
  v7[32] = swift_task_alloc(v18);
  return swift_task_switch(sub_1007849C4, 0, 0);
}

uint64_t sub_1007849C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  __n128 v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  unint64_t v119;
  unint64_t v120;
  __n128 v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  os_log_type_t type;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t);
  void (*v154)(uint64_t, uint64_t, __n128);
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t *v162;
  _QWORD *v163;
  uint64_t v164[2];

  v1 = v0;
  v3 = v0 + 10;
  v2 = v0[10];
  v4 = v0 + 3;
  v5 = v0[28];
  v6 = v0[29];
  v7 = v3[16];
  sub_10004A160(v2, v7, &qword_10119E460);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v9 = v8(v7, 1, v5);
  v10 = v3[18];
  v11 = v3[19];
  v12 = v3[16];
  v13 = v3[17];
  if (v9 == 1)
  {
    sub_10004FF60(v3[16], &qword_10119E460);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v10);
    goto LABEL_4;
  }
  URL.appending(_:)(v1[11], v1[12], 1);
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v12, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  if (v8(v13, 1, v10) == 1)
  {
LABEL_4:
    v160 = v4;
    v15 = v1[19];
    v16 = v1[14];
    v17 = v1[15];
    v18 = v1[12];
    v19 = v1[10];
    sub_10004FF60(v1[27], &qword_10119E460);
    v20 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v19 + *(int *)(v20 + 24), v16);
    v21 = swift_bridgeObjectRetain_n(v18, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    v24 = os_log_type_enabled(v22, v23);
    v25 = v1[19];
    v26 = v1[14];
    v27 = v1[15];
    v28 = v1[12];
    if (v24)
    {
      v155 = v1[19];
      v29 = v1[11];
      v151 = v1[15];
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v164[0] = v31;
      *(_DWORD *)v30 = 136446210;
      swift_bridgeObjectRetain();
      v1[2] = sub_100322200(v29, v28, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 8, v160);
      swift_bridgeObjectRelease_n(v28, 3);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unable to get widget cache url for saving item named \"%{public}s\"", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v155, v26);
    }
    else
    {
      swift_bridgeObjectRelease_n(v1[12], 2);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    goto LABEL_7;
  }
  v44 = v1[21];
  v45 = v1[22];
  v46 = v1[20];
  v47 = v1[13];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[29] + 32))(v1[32], v1[27], v1[28]);
  sub_10004A160(v47, v46, &qword_10119FA90);
  v162 = v3 - 4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v44) == 1)
  {
    v147 = v3 - 6;
    v153 = v14;
    v49 = v1[31];
    v48 = v1[32];
    v51 = v1[28];
    v50 = v1[29];
    v52 = v1[20];
    v53 = v1[18];
    v55 = v1[14];
    v54 = v1[15];
    v157 = v1;
    v56 = v1[12];
    v57 = v157[10];
    sub_10004FF60(v52, &qword_10119FA90);
    v148 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v57 + *(int *)(v148 + 24), v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v48, v51);
    v58 = v56;
    v1 = v157;
    v59 = swift_bridgeObjectRetain_n(v58, 2);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.default.getter(v60);
    v62 = os_log_type_enabled(v60, v61);
    v63 = v157[31];
    v64 = v157[28];
    v65 = v157[18];
    v66 = v157[14];
    v67 = v157[15];
    v68 = v157[12];
    if (v62)
    {
      v69 = v3 - 5;
      v145 = v157[18];
      v70 = v157[11];
      v71 = swift_slowAlloc(22, -1);
      v143 = v66;
      v72 = swift_slowAlloc(64, -1);
      v164[0] = v72;
      *(_DWORD *)v71 = 136446466;
      v140 = v67;
      swift_bridgeObjectRetain();
      v157[4] = sub_100322200(v70, v68, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v147, v69);
      swift_bridgeObjectRelease_n(v68, 3);
      *(_WORD *)(v71 + 12) = 2082;
      v73 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v74 = dispatch thunk of CustomStringConvertible.description.getter(v64, v73);
      v76 = v75;
      v157[5] = sub_100322200(v74, v75, v164);
      v77 = v69;
      v1 = v157;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v77, v162);
      v78 = swift_bridgeObjectRelease(v76);
      v79 = v64;
      v80 = v153;
      ((void (*)(uint64_t, uint64_t, __n128))v153)(v63, v79, v78);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v72, -1, -1);
      swift_slowDealloc(v71, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v145, v143);
    }
    else
    {
      v87 = swift_bridgeObjectRelease_n(v157[12], 2);
      v88 = v64;
      v80 = v153;
      ((void (*)(uint64_t, uint64_t, __n128))v153)(v63, v88, v87);

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
    }
    v89 = v1[32];
    v90 = v1[28];
    v91 = swift_task_alloc(32);
    *(_QWORD *)(v91 + 16) = v89;
    v92 = sub_100007E8C(&qword_1011A09A0);
    OS_dispatch_queue.sync<A>(execute:)(sub_10078FB10, v91, v92);
    swift_task_dealloc(v91);
    v80(v89, v90);
  }
  else
  {
    v81 = v1[25];
    v82 = v1[21];
    sub_10005B6C0(v1[20], v81, type metadata accessor for WidgetMusicItem);
    v83 = type metadata accessor for JSONEncoder(0);
    v84 = swift_allocObject(v83, *(unsigned int *)(v83 + 48), *(unsigned __int16 *)(v83 + 52));
    JSONEncoder.init()(v84);
    v85 = sub_100048748(&qword_1011B0698, type metadata accessor for WidgetMusicItem, (uint64_t)&unk_100EB9C90);
    v86 = dispatch thunk of JSONEncoder.encode<A>(_:)(v81, v82, v85);
    v158 = v1[32];
    v93 = v86;
    v95 = v94;
    swift_release();
    v149 = type metadata accessor for WidgetDiskCache(0);
    v96 = (_QWORD *)swift_task_alloc(48);
    v96[2] = v93;
    v96[3] = v95;
    v96[4] = v158;
    OS_dispatch_queue.sync<A>(execute:)(sub_10078FB24, v96, (char *)&type metadata for () + 8);
    v144 = v93;
    v146 = v95;
    v163 = v4;
    v97 = v1[29];
    v136 = v1[30];
    v138 = v1[32];
    v98 = v1[28];
    v99 = v1[25];
    v141 = v1[24];
    v100 = v1[17];
    v101 = v1[15];
    v159 = v1;
    v102 = v1[14];
    v103 = v159[12];
    v154 = (void (*)(uint64_t, uint64_t, __n128))v14;
    v104 = v159[10];
    swift_task_dealloc(v96);
    v105 = v102;
    v1 = v159;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v100, v104 + *(int *)(v149 + 24), v105);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v136, v138, v98);
    sub_10005B704(v99, v141, type metadata accessor for WidgetMusicItem);
    v106 = swift_bridgeObjectRetain_n(v103, 2);
    v107 = Logger.logObject.getter(v106);
    v108 = static os_log_type_t.default.getter(v107);
    v109 = os_log_type_enabled(v107, v108);
    v110 = v159[30];
    v111 = v159[28];
    v113 = v159[24];
    v112 = v159[25];
    if (v109)
    {
      v133 = v159[23];
      v134 = v159[21];
      v137 = v159[15];
      v139 = v159[14];
      v142 = v159[17];
      v150 = v159[25];
      v114 = v159[12];
      v131 = v159[11];
      v115 = swift_slowAlloc(32, -1);
      v135 = swift_slowAlloc(96, -1);
      v164[0] = v135;
      *(_DWORD *)v115 = 136446722;
      v116 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v117 = dispatch thunk of CustomStringConvertible.description.getter(v111, v116);
      type = v108;
      v118 = v107;
      v120 = v119;
      v159[8] = sub_100322200(v117, v119, v164);
      v1 = v159;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 2, v3 - 1);
      v121 = swift_bridgeObjectRelease(v120);
      v154(v110, v111, v121);
      *(_WORD *)(v115 + 12) = 2082;
      swift_bridgeObjectRetain();
      v159[9] = sub_100322200(v131, v114, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 1, v3);
      swift_bridgeObjectRelease_n(v114, 3);
      *(_WORD *)(v115 + 22) = 2082;
      sub_10005B704(v113, v133, type metadata accessor for WidgetMusicItem);
      v122 = String.init<A>(describing:)(v133, v134);
      v124 = v123;
      v159[3] = sub_100322200(v122, v123, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v163, v3 - 6);
      swift_bridgeObjectRelease(v124);
      sub_10005B748(v113, type metadata accessor for WidgetMusicItem);
      _os_log_impl((void *)&_mh_execute_header, v118, type, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v115, 0x20u);
      swift_arrayDestroy(v135, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v135, -1, -1);
      swift_slowDealloc(v115, -1, -1);
      sub_1000652DC(v144, v146);

      (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v142, v139);
      v125 = v150;
    }
    else
    {
      v126 = v159[17];
      v127 = v159[14];
      v128 = v159[15];
      v129 = v159[12];
      sub_1000652DC(v144, v146);

      sub_10005B748(v113, type metadata accessor for WidgetMusicItem);
      v130 = swift_bridgeObjectRelease_n(v129, 2);
      v154(v110, v111, v130);
      (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v126, v127);
      v125 = v112;
    }
    sub_10005B748(v125, type metadata accessor for WidgetMusicItem);
    ((void (*)(_QWORD, _QWORD))v154)(v1[32], v1[28]);
  }
LABEL_7:
  v33 = v1[31];
  v32 = v1[32];
  v34 = v1[30];
  v36 = v1[26];
  v35 = v1[27];
  v38 = v1[24];
  v37 = v1[25];
  v39 = v1[23];
  v40 = v1;
  v41 = v1[20];
  v42 = v40[19];
  v152 = v40[18];
  v156 = v40[17];
  v161 = v40[16];
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v152);
  swift_task_dealloc(v156);
  swift_task_dealloc(v161);
  return ((uint64_t (*)(void))v40[1])();
}

uint64_t sub_1007856FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[17] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v7[20] = swift_task_alloc(v10);
  v7[21] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[22] = swift_task_alloc(v11);
  v7[23] = swift_task_alloc(v11);
  v12 = type metadata accessor for URL(0);
  v7[24] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[25] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v14);
  v7[27] = swift_task_alloc(v14);
  v7[28] = swift_task_alloc(v14);
  return swift_task_switch(sub_100785800, 0, 0);
}

uint64_t sub_100785800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  __n128 v54;
  void (*v55)(uint64_t, uint64_t);
  void *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  void (*v87)(uint64_t, uint64_t, __n128);
  id v88;
  id v89;
  NSObject *v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  __n128 v103;
  id v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t typea;
  uint64_t typeb;
  os_log_type_t type;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128[2];

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  sub_10004A160(*(_QWORD *)(v0 + 96), v3, &qword_10119E460);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v5 = v4(v3, 1, v2);
  v6 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 176);
  v9 = *(_QWORD *)(v0 + 184);
  if (v5 == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_10119E460);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v9, 1, 1, v6);
    goto LABEL_4;
  }
  URL.appending(_:)(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), 1);
  v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v8, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  if (v4(v9, 1, v6) == 1)
  {
LABEL_4:
    v11 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 96);
    sub_10004FF60(*(_QWORD *)(v0 + 184), &qword_10119E460);
    v16 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v15 + *(int *)(v16 + 24), v13);
    v17 = swift_bridgeObjectRetain_n(v14, 2);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    v20 = os_log_type_enabled(v18, v19);
    v21 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 128);
    v23 = *(_QWORD *)(v0 + 136);
    v24 = *(_QWORD *)(v0 + 112);
    if (v20)
    {
      v25 = *(_QWORD *)(v0 + 104);
      v123 = *(_QWORD *)(v0 + 128);
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v122 = v21;
      v27 = swift_slowAlloc(32, -1);
      v128[0] = v27;
      *(_DWORD *)v26 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = sub_100322200(v25, v24, v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
      swift_bridgeObjectRelease_n(v24, 3);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unable to get widget cache url for saving item named \"%{public}s\"", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v122, v123);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 112), 2);

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    goto LABEL_14;
  }
  v28 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  if (v28 == 1)
  {
    v124 = v10;
    v29 = *(_QWORD *)(v0 + 216);
    v30 = *(_QWORD *)(v0 + 224);
    v32 = *(_QWORD *)(v0 + 192);
    v31 = *(_QWORD *)(v0 + 200);
    v33 = *(_QWORD *)(v0 + 160);
    v34 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 136);
    v36 = *(_QWORD *)(v0 + 112);
    v37 = *(_QWORD *)(v0 + 96);
    typea = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v33, v37 + *(int *)(typea + 24), v34);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v29, v30, v32);
    v38 = swift_bridgeObjectRetain_n(v36, 2);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.default.getter(v39);
    v41 = os_log_type_enabled(v39, v40);
    v42 = *(_QWORD *)(v0 + 216);
    v43 = *(_QWORD *)(v0 + 192);
    v44 = *(_QWORD *)(v0 + 160);
    v45 = *(_QWORD *)(v0 + 128);
    v46 = *(_QWORD *)(v0 + 136);
    v47 = *(_QWORD *)(v0 + 112);
    if (v41)
    {
      v116 = *(_QWORD *)(v0 + 128);
      v48 = *(_QWORD *)(v0 + 104);
      v113 = *(_QWORD *)(v0 + 136);
      v49 = swift_slowAlloc(22, -1);
      v111 = swift_slowAlloc(64, -1);
      v128[0] = v111;
      *(_DWORD *)v49 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 40) = sub_100322200(v48, v47, v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
      swift_bridgeObjectRelease_n(v47, 3);
      *(_WORD *)(v49 + 12) = 2082;
      v50 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v51 = dispatch thunk of CustomStringConvertible.description.getter(v43, v50);
      v53 = v52;
      *(_QWORD *)(v0 + 48) = sub_100322200(v51, v52, v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
      v54 = swift_bridgeObjectRelease(v53);
      v55 = v124;
      ((void (*)(uint64_t, uint64_t, __n128))v124)(v42, v43, v54);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy(v111, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v111, -1, -1);
      swift_slowDealloc(v49, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v44, v116);
    }
    else
    {
      v60 = swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 112), 2);
      v55 = v124;
      ((void (*)(uint64_t, uint64_t, __n128))v124)(v42, v43, v60);

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    }
    v61 = *(_QWORD *)(v0 + 224);
    v62 = *(_QWORD *)(v0 + 192);
    v63 = swift_task_alloc(32);
    *(_QWORD *)(v63 + 16) = v61;
    v64 = sub_100007E8C(&qword_1011A09A0);
    OS_dispatch_queue.sync<A>(execute:)(sub_10078FB10, v63, v64);
    swift_task_dealloc(v63);
    v55(v61, v62);
  }
  else
  {
    v56 = *(void **)(v0 + 120);
    *(_QWORD *)(v0 + 24) = v56;
    v57 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v57, *(unsigned int *)(v57 + 48), *(unsigned __int16 *)(v57 + 52));
    JSONEncoder.init()(v56);
    v58 = sub_1003CE154();
    v59 = dispatch thunk of JSONEncoder.encode<A>(_:)(v0 + 24, &type metadata for CodableImage, v58);
    v125 = *(_QWORD *)(v0 + 224);
    v65 = v59;
    v67 = v66;
    swift_release();
    typeb = type metadata accessor for WidgetDiskCache(0);
    v68 = (_QWORD *)swift_task_alloc(48);
    v68[2] = v65;
    v68[3] = v67;
    v68[4] = v125;
    OS_dispatch_queue.sync<A>(execute:)(sub_10078FB24, v68, (char *)&type metadata for () + 8);
    v126 = v65;
    v127 = v67;
    v117 = *(_QWORD *)(v0 + 224);
    v78 = *(_QWORD *)(v0 + 200);
    v114 = *(_QWORD *)(v0 + 208);
    v79 = *(_QWORD *)(v0 + 192);
    v80 = *(_QWORD *)(v0 + 152);
    v81 = v10;
    v82 = *(_QWORD *)(v0 + 128);
    v83 = *(_QWORD *)(v0 + 136);
    v84 = *(_QWORD *)(v0 + 112);
    v85 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(v68);
    v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16);
    v87 = (void (*)(uint64_t, uint64_t, __n128))v81;
    v86(v80, v85 + *(int *)(typeb + 24), v82);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v114, v117, v79);
    v118 = *(void **)(v0 + 24);
    v88 = v118;
    swift_bridgeObjectRetain_n(v84, 2);
    v89 = v88;
    v90 = Logger.logObject.getter(v89);
    type = static os_log_type_t.default.getter(v90);
    v91 = os_log_type_enabled(v90, type);
    v92 = *(_QWORD *)(v0 + 208);
    v93 = *(_QWORD *)(v0 + 192);
    v94 = *(_QWORD *)(v0 + 152);
    v95 = *(_QWORD *)(v0 + 128);
    v96 = *(_QWORD *)(v0 + 136);
    v97 = *(_QWORD *)(v0 + 112);
    if (v91)
    {
      v109 = *(_QWORD *)(v0 + 104);
      v115 = *(_QWORD *)(v0 + 152);
      v98 = swift_slowAlloc(32, -1);
      v110 = swift_slowAlloc(96, -1);
      v128[0] = v110;
      *(_DWORD *)v98 = 136446722;
      v99 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v100 = dispatch thunk of CustomStringConvertible.description.getter(v93, v99);
      v112 = v96;
      v102 = v101;
      *(_QWORD *)(v0 + 72) = sub_100322200(v100, v101, v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
      v103 = swift_bridgeObjectRelease(v102);
      v87(v92, v93, v103);
      *(_WORD *)(v98 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 80) = sub_100322200(v109, v97, v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
      swift_bridgeObjectRelease_n(v97, 3);
      *(_WORD *)(v98 + 22) = 2082;
      *(_QWORD *)(v0 + 88) = v118;
      v104 = v89;
      v105 = String.init<A>(describing:)(v0 + 88, &type metadata for CodableImage);
      v107 = v106;
      *(_QWORD *)(v0 + 32) = sub_100322200(v105, v106, v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
      swift_bridgeObjectRelease(v107);

      _os_log_impl((void *)&_mh_execute_header, v90, type, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v98, 0x20u);
      swift_arrayDestroy(v110, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v110, -1, -1);
      swift_slowDealloc(v98, -1, -1);
      sub_1000652DC(v126, v127);

      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v115, v95);
    }
    else
    {
      sub_1000652DC(v126, v127);

      v108 = swift_bridgeObjectRelease_n(v97, 2);
      v87(v92, v93, v108);
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v94, v95);
    }

    ((void (*)(_QWORD, _QWORD))v87)(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 192));
  }
LABEL_14:
  v69 = *(_QWORD *)(v0 + 216);
  v70 = *(_QWORD *)(v0 + 208);
  v72 = *(_QWORD *)(v0 + 176);
  v71 = *(_QWORD *)(v0 + 184);
  v74 = *(_QWORD *)(v0 + 160);
  v73 = *(_QWORD *)(v0 + 168);
  v76 = *(_QWORD *)(v0 + 144);
  v75 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078640C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[15] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[16] = swift_task_alloc(v10);
  v7[17] = swift_task_alloc(v10);
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v11 = sub_100007E8C(&qword_1011B08E8);
  v7[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v7[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[22] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[23] = swift_task_alloc(v14);
  v7[24] = swift_task_alloc(v14);
  v7[25] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v15);
  v7[27] = swift_task_alloc(v15);
  v16 = type metadata accessor for URL(0);
  v7[28] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[29] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[30] = swift_task_alloc(v18);
  v7[31] = swift_task_alloc(v18);
  v7[32] = swift_task_alloc(v18);
  return swift_task_switch(sub_100786578, 0, 0);
}

uint64_t sub_100786578()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  __n128 v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  unint64_t v119;
  unint64_t v120;
  __n128 v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  os_log_type_t type;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t);
  void (*v154)(uint64_t, uint64_t, __n128);
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t *v162;
  _QWORD *v163;
  uint64_t v164[2];

  v1 = v0;
  v3 = v0 + 10;
  v2 = v0[10];
  v4 = v0 + 3;
  v5 = v0[28];
  v6 = v0[29];
  v7 = v3[16];
  sub_10004A160(v2, v7, &qword_10119E460);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v9 = v8(v7, 1, v5);
  v10 = v3[18];
  v11 = v3[19];
  v12 = v3[16];
  v13 = v3[17];
  if (v9 == 1)
  {
    sub_10004FF60(v3[16], &qword_10119E460);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v10);
    goto LABEL_4;
  }
  URL.appending(_:)(v1[11], v1[12], 1);
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v12, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  if (v8(v13, 1, v10) == 1)
  {
LABEL_4:
    v160 = v4;
    v15 = v1[19];
    v16 = v1[14];
    v17 = v1[15];
    v18 = v1[12];
    v19 = v1[10];
    sub_10004FF60(v1[27], &qword_10119E460);
    v20 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v19 + *(int *)(v20 + 24), v16);
    v21 = swift_bridgeObjectRetain_n(v18, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    v24 = os_log_type_enabled(v22, v23);
    v25 = v1[19];
    v26 = v1[14];
    v27 = v1[15];
    v28 = v1[12];
    if (v24)
    {
      v155 = v1[19];
      v29 = v1[11];
      v151 = v1[15];
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v164[0] = v31;
      *(_DWORD *)v30 = 136446210;
      swift_bridgeObjectRetain();
      v1[2] = sub_100322200(v29, v28, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 8, v160);
      swift_bridgeObjectRelease_n(v28, 3);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unable to get widget cache url for saving item named \"%{public}s\"", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v155, v26);
    }
    else
    {
      swift_bridgeObjectRelease_n(v1[12], 2);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    goto LABEL_7;
  }
  v44 = v1[21];
  v45 = v1[22];
  v46 = v1[20];
  v47 = v1[13];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[29] + 32))(v1[32], v1[27], v1[28]);
  sub_10004A160(v47, v46, &qword_1011B08E8);
  v162 = v3 - 4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v44) == 1)
  {
    v147 = v3 - 6;
    v153 = v14;
    v49 = v1[31];
    v48 = v1[32];
    v51 = v1[28];
    v50 = v1[29];
    v52 = v1[20];
    v53 = v1[18];
    v55 = v1[14];
    v54 = v1[15];
    v157 = v1;
    v56 = v1[12];
    v57 = v157[10];
    sub_10004FF60(v52, &qword_1011B08E8);
    v148 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v57 + *(int *)(v148 + 24), v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v48, v51);
    v58 = v56;
    v1 = v157;
    v59 = swift_bridgeObjectRetain_n(v58, 2);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.default.getter(v60);
    v62 = os_log_type_enabled(v60, v61);
    v63 = v157[31];
    v64 = v157[28];
    v65 = v157[18];
    v66 = v157[14];
    v67 = v157[15];
    v68 = v157[12];
    if (v62)
    {
      v69 = v3 - 5;
      v145 = v157[18];
      v70 = v157[11];
      v71 = swift_slowAlloc(22, -1);
      v143 = v66;
      v72 = swift_slowAlloc(64, -1);
      v164[0] = v72;
      *(_DWORD *)v71 = 136446466;
      v140 = v67;
      swift_bridgeObjectRetain();
      v157[4] = sub_100322200(v70, v68, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v147, v69);
      swift_bridgeObjectRelease_n(v68, 3);
      *(_WORD *)(v71 + 12) = 2082;
      v73 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v74 = dispatch thunk of CustomStringConvertible.description.getter(v64, v73);
      v76 = v75;
      v157[5] = sub_100322200(v74, v75, v164);
      v77 = v69;
      v1 = v157;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v77, v162);
      v78 = swift_bridgeObjectRelease(v76);
      v79 = v64;
      v80 = v153;
      ((void (*)(uint64_t, uint64_t, __n128))v153)(v63, v79, v78);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v72, -1, -1);
      swift_slowDealloc(v71, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v145, v143);
    }
    else
    {
      v87 = swift_bridgeObjectRelease_n(v157[12], 2);
      v88 = v64;
      v80 = v153;
      ((void (*)(uint64_t, uint64_t, __n128))v153)(v63, v88, v87);

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
    }
    v89 = v1[32];
    v90 = v1[28];
    v91 = swift_task_alloc(32);
    *(_QWORD *)(v91 + 16) = v89;
    v92 = sub_100007E8C(&qword_1011A09A0);
    OS_dispatch_queue.sync<A>(execute:)(sub_10078FB10, v91, v92);
    swift_task_dealloc(v91);
    v80(v89, v90);
  }
  else
  {
    v81 = v1[25];
    v82 = v1[21];
    sub_10005B6C0(v1[20], v81, type metadata accessor for NowPlayingDataProvider.ItemProgress);
    v83 = type metadata accessor for JSONEncoder(0);
    v84 = swift_allocObject(v83, *(unsigned int *)(v83 + 48), *(unsigned __int16 *)(v83 + 52));
    JSONEncoder.init()(v84);
    v85 = sub_100048748(&qword_1011B06B0, type metadata accessor for NowPlayingDataProvider.ItemProgress, (uint64_t)&unk_100EB869C);
    v86 = dispatch thunk of JSONEncoder.encode<A>(_:)(v81, v82, v85);
    v158 = v1[32];
    v93 = v86;
    v95 = v94;
    swift_release();
    v149 = type metadata accessor for WidgetDiskCache(0);
    v96 = (_QWORD *)swift_task_alloc(48);
    v96[2] = v93;
    v96[3] = v95;
    v96[4] = v158;
    OS_dispatch_queue.sync<A>(execute:)(sub_10078FB24, v96, (char *)&type metadata for () + 8);
    v144 = v93;
    v146 = v95;
    v163 = v4;
    v97 = v1[29];
    v136 = v1[30];
    v138 = v1[32];
    v98 = v1[28];
    v99 = v1[25];
    v141 = v1[24];
    v100 = v1[17];
    v101 = v1[15];
    v159 = v1;
    v102 = v1[14];
    v103 = v159[12];
    v154 = (void (*)(uint64_t, uint64_t, __n128))v14;
    v104 = v159[10];
    swift_task_dealloc(v96);
    v105 = v102;
    v1 = v159;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v100, v104 + *(int *)(v149 + 24), v105);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v136, v138, v98);
    sub_10005B704(v99, v141, type metadata accessor for NowPlayingDataProvider.ItemProgress);
    v106 = swift_bridgeObjectRetain_n(v103, 2);
    v107 = Logger.logObject.getter(v106);
    v108 = static os_log_type_t.default.getter(v107);
    v109 = os_log_type_enabled(v107, v108);
    v110 = v159[30];
    v111 = v159[28];
    v113 = v159[24];
    v112 = v159[25];
    if (v109)
    {
      v133 = v159[23];
      v134 = v159[21];
      v137 = v159[15];
      v139 = v159[14];
      v142 = v159[17];
      v150 = v159[25];
      v114 = v159[12];
      v131 = v159[11];
      v115 = swift_slowAlloc(32, -1);
      v135 = swift_slowAlloc(96, -1);
      v164[0] = v135;
      *(_DWORD *)v115 = 136446722;
      v116 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v117 = dispatch thunk of CustomStringConvertible.description.getter(v111, v116);
      type = v108;
      v118 = v107;
      v120 = v119;
      v159[8] = sub_100322200(v117, v119, v164);
      v1 = v159;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 2, v3 - 1);
      v121 = swift_bridgeObjectRelease(v120);
      v154(v110, v111, v121);
      *(_WORD *)(v115 + 12) = 2082;
      swift_bridgeObjectRetain();
      v159[9] = sub_100322200(v131, v114, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 1, v3);
      swift_bridgeObjectRelease_n(v114, 3);
      *(_WORD *)(v115 + 22) = 2082;
      sub_10005B704(v113, v133, type metadata accessor for NowPlayingDataProvider.ItemProgress);
      v122 = String.init<A>(describing:)(v133, v134);
      v124 = v123;
      v159[3] = sub_100322200(v122, v123, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v163, v3 - 6);
      swift_bridgeObjectRelease(v124);
      sub_10005B748(v113, type metadata accessor for NowPlayingDataProvider.ItemProgress);
      _os_log_impl((void *)&_mh_execute_header, v118, type, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v115, 0x20u);
      swift_arrayDestroy(v135, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v135, -1, -1);
      swift_slowDealloc(v115, -1, -1);
      sub_1000652DC(v144, v146);

      (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v142, v139);
      v125 = v150;
    }
    else
    {
      v126 = v159[17];
      v127 = v159[14];
      v128 = v159[15];
      v129 = v159[12];
      sub_1000652DC(v144, v146);

      sub_10005B748(v113, type metadata accessor for NowPlayingDataProvider.ItemProgress);
      v130 = swift_bridgeObjectRelease_n(v129, 2);
      v154(v110, v111, v130);
      (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v126, v127);
      v125 = v112;
    }
    sub_10005B748(v125, type metadata accessor for NowPlayingDataProvider.ItemProgress);
    ((void (*)(_QWORD, _QWORD))v154)(v1[32], v1[28]);
  }
LABEL_7:
  v33 = v1[31];
  v32 = v1[32];
  v34 = v1[30];
  v36 = v1[26];
  v35 = v1[27];
  v38 = v1[24];
  v37 = v1[25];
  v39 = v1[23];
  v40 = v1;
  v41 = v1[20];
  v42 = v40[19];
  v152 = v40[18];
  v156 = v40[17];
  v161 = v40[16];
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v152);
  swift_task_dealloc(v156);
  swift_task_dealloc(v161);
  return ((uint64_t (*)(void))v40[1])();
}

uint64_t sub_1007872B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[37] = a2;
  v3[38] = v2;
  v3[36] = a1;
  return swift_task_switch(sub_1007872CC, 0, 0);
}

uint64_t sub_1007872CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(sub_100007E8C(&qword_10119FA90) - 8);
  *(_QWORD *)(v0 + 312) = v2;
  v3 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v0 + 320) = v3;
  v4 = swift_task_alloc((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WidgetMusicItem(0);
  v14 = *(_OWORD *)(v0 + 288);
  *(_QWORD *)(v0 + 328) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v0 + 336) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = sub_100007E8C(&qword_1011C8088);
  v8 = sub_100049F28(&qword_1011C80B8, &qword_1011C8088, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v9 = dispatch thunk of Collection.count.getter(v7, v8);
  v10 = sub_1000AC470(v4, v9);
  swift_task_dealloc(v4);
  *(_QWORD *)(v0 + 272) = v10;
  v11 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 344) = v11;
  *(_QWORD *)(v11 + 16) = v1;
  *(_OWORD *)(v11 + 24) = v14;
  *(_QWORD *)(v11 + 40) = v0 + 272;
  *(_QWORD *)(v0 + 352) = sub_100007E8C(&qword_1011C80D0);
  if (!sub_100DE8EA8(2, 18, 0, 0))
    return swift_task_switch(sub_1007874EC, 0, 0);
  v12 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 360) = v12;
  *v12 = v0;
  v12[1] = sub_100787480;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_100787480()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 360));
  if (v0)
  {
    *(_QWORD *)(v2 + 400) = v0;
    v3 = sub_100787A28;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 344));
    v3 = sub_1007877F4;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1007874EC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_taskGroup_initialize(v0 + 2, v0[44]);
  v0[35] = v0 + 2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011C80C0
                                                                                    + dword_1011C80C0);
  v1 = (_QWORD *)swift_task_alloc(dword_1011C80C4);
  v0[46] = v1;
  *v1 = v0;
  v1[1] = sub_100787578;
  return v3((uint64_t)v3, (uint64_t)(v0 + 35), v0[38], v0[36], v0[37], (uint64_t)(v0 + 34));
}

uint64_t sub_100787578()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 368);
  v3 = *v1;
  *(_QWORD *)(v3 + 376) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1007876BC, 0, 0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v3 + 384) = v5;
  v6 = sub_100007E8C(&qword_1011C80D8);
  *v5 = v3;
  v5[1] = sub_100787624;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v6);
}

uint64_t sub_100787624()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 384));
  return swift_task_switch(sub_100787678, 0, 0);
}

uint64_t sub_100787678()
{
  uint64_t v0;

  swift_taskGroup_destroy(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  return swift_task_switch(sub_1007877F4, 0, 0);
}

uint64_t sub_1007876BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_100007E8C(&qword_1011A14B0);
  ThrowingTaskGroup.cancelAll()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v0 + 392) = v1;
  v2 = sub_100007E8C(&qword_1011C80D8);
  *v1 = v0;
  v1[1] = sub_10078774C;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v2);
}

uint64_t sub_10078774C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 392));
  return swift_task_switch(sub_1007877A0, 0, 0);
}

uint64_t sub_1007877A0()
{
  uint64_t v0;
  __n128 v1;

  v1.n128_f64[0] = swift_taskGroup_destroy(v0 + 16);
  swift_willThrow(v1);
  *(_QWORD *)(v0 + 400) = *(_QWORD *)(v0 + 376);
  return swift_task_switch(sub_100787A28, 0, 0);
}

uint64_t sub_1007877F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v17 = *(_QWORD *)(v0 + 272);
    v3 = *(_QWORD *)(v0 + 312);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    v19 = *(_QWORD *)(v0 + 336);
    v6 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
    swift_bridgeObjectRetain();
    v20 = _swiftEmptyArrayStorage;
    v18 = v5;
    do
    {
      v7 = *(_QWORD *)(v0 + 328);
      v8 = (*(_QWORD *)(v0 + 320) + 15) & 0xFFFFFFFFFFFFFFF0;
      v9 = swift_task_alloc(v6);
      v10 = swift_task_alloc(v8);
      sub_10004A160(v4, v10, &qword_10119FA90);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v10, 1, v7) == 1)
      {
        sub_10004FF60(v10, &qword_10119FA90);
      }
      else
      {
        sub_10005B6C0(v10, v9, type metadata accessor for WidgetMusicItem);
        swift_task_dealloc(v10);
        v10 = swift_task_alloc(v6);
        sub_10005B6C0(v9, v10, type metadata accessor for WidgetMusicItem);
        if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) != 0)
          v11 = (unint64_t)v20;
        else
          v11 = sub_10043296C(0, v20[2] + 1, 1, (unint64_t)v20);
        v13 = *(_QWORD *)(v11 + 16);
        v12 = *(_QWORD *)(v11 + 24);
        if (v13 >= v12 >> 1)
          v11 = sub_10043296C(v12 > 1, v13 + 1, 1, v11);
        *(_QWORD *)(v11 + 16) = v13 + 1;
        v20 = (_QWORD *)v11;
        sub_10005B6C0(v10, v11+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v13, type metadata accessor for WidgetMusicItem);
        v5 = v18;
      }
      swift_task_dealloc(v10);
      swift_task_dealloc(v9);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(v17);
    v1 = *(_QWORD *)(v0 + 272);
    v14 = v20;
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v15 = swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(_QWORD *, __n128))(v0 + 8))(v14, v15);
}

uint64_t sub_100787A28()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 272));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100787A64()
{
  uint64_t v0;
  id result;

  v0 = type metadata accessor for RecentlyPlayedWidgetDataProvider(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_100787E08();
  qword_10124D998 = (uint64_t)result;
  return result;
}

uint64_t sub_100787AA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch(sub_100787AB8, 0, 0);
}

uint64_t sub_100787AB8(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  *(_QWORD *)(v1 + 40) = OBJC_IVAR____TtC5Music32RecentlyPlayedWidgetDataProvider_logger;
  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "UPDATE ITEMS", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc(dword_1011C7EDC);
  *(_QWORD *)(v1 + 48) = v5;
  *v5 = v1;
  v5[1] = sub_100787B88;
  return sub_100788154();
}

uint64_t sub_100787B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 48);
  *(_QWORD *)(*v2 + 56) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100787C48;
  }
  else
  {
    *(_QWORD *)(v4 + 64) = a1;
    v6 = sub_100787BFC;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100787BFC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 64);
  sub_10078D6AC(v1);
  sub_10078F734(v1);
  v2 = swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100787C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 56);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 56);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136446210;
    v14 = v7;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = sub_100007E8C(&qword_1011A14B0);
    v9 = String.init<A>(describing:)(v0 + 16, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 24) = sub_100322200(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Not updating cache - error=%{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
    swift_errorRelease(v5);

  }
  else
  {
    v12 = *(_QWORD *)(v0 + 56);
    swift_errorRelease(v12);

    swift_errorRelease(v12);
    swift_errorRelease(v12);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100787E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id result;
  void *v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for MusicDataRequest.ExecutionMethod(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RecentlyPlayedWidgetDataProvider.Cache(0);
  v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  sub_1003CF204(0, 0x796C746E65636552, 0xEE00646579616C50, 0x736D657469, 0xE500000000000000, (char *)(v7+ OBJC_IVAR____TtCC5Music32RecentlyPlayedWidgetDataProviderP33_23E5867D7557CCAE0A35FCF9C1439AE75Cache__items));
  *(_QWORD *)(v1 + 16) = v7;
  static Logger.music(_:)(0xD000000000000020, 0x8000000100ECF1B0);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for MusicDataRequest.ExecutionMethod.firstParty(_:), v2);
  static MusicDataRequest.preferredExecutionMethod.setter(v5);
  v8 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v9 = objc_msgSend(v8, "processName");

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  if (v10 == 0x646957636973754DLL && v12 == 0xEC00000073746567)
  {
    swift_bridgeObjectRelease(0xEC00000073746567);
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, 0x646957636973754DLL, 0xEC00000073746567, 0);
    swift_bridgeObjectRelease(v12);
    if ((v14 & 1) == 0)
      return (id)v1;
  }
  v15 = Logger.logObject.getter(v13);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "running in widget process, disabling fallback cache", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "defaultMediaLibrary");
  v19 = objc_msgSend(v18, "artworkDataSource");
  if (v19)
  {
    v20 = v19;
    objc_opt_self(MPMediaLibraryArtworkDataSource);
    v21 = (void *)swift_dynamicCastObjCClass(v20);
    if (v21)
      objc_msgSend(v21, "setUsesFallbackCache:", 0);
    swift_unknownObjectRelease(v20);
  }
  result = objc_msgSend((id)objc_opt_self(MPStoreArtworkDataSource), "sharedStoreArtworkDataSource");
  if (result)
  {
    v23 = result;
    objc_msgSend(result, "setUsesFallbackCache:", 0);

    return (id)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10078811C()
{
  uint64_t v0;

  sub_10004FF60(v0 + OBJC_IVAR____TtCC5Music32RecentlyPlayedWidgetDataProviderP33_23E5867D7557CCAE0A35FCF9C1439AE75Cache__items, &qword_1011B0988);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100788154()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[4] = v0;
  v2 = type metadata accessor for MusicSubscription.PrivacyAcknowledgementPolicy(0);
  v1[5] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[6] = v3;
  v1[7] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MusicSubscription(0);
  v1[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[9] = v5;
  v1[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1007881DC, 0, 0);
}

id sub_1007881DC()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  id v8;
  char v9;
  char v10;
  char v11;
  char v12;
  id result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v2 = objc_msgSend(v1, "processName");

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  if (v3 == 0x636973754DLL && v5 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    v7 = 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 0x636973754DLL, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v5);
  }
  *(_BYTE *)(v0 + 160) = v7 & 1;
  if (qword_10119BDA8 != -1)
    swift_once(&qword_10119BDA8, sub_1002DDCC8);
  if (qword_10124CCC0)
  {
    v8 = (id)qword_10124CCC0;
    v9 = sub_1002DDEE8();
    v10 = (v9 == 2) | v9;
    v11 = sub_1002DDEF0();

    v12 = v11 | v10;
    if (v11 == 2)
      v12 = v10;
  }
  else
  {
    v12 = 1;
  }
  *(_BYTE *)(v0 + 161) = v12 & 1;
  result = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (result)
  {
    v14 = result;
    v16 = *(_QWORD *)(v0 + 48);
    v15 = *(_QWORD *)(v0 + 56);
    v17 = *(_QWORD *)(v0 + 40);
    *(_BYTE *)(v0 + 162) = objc_msgSend(result, "hasProperNetworkConditionsToShowCloudMedia");

    (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v15, enum case for MusicSubscription.PrivacyAcknowledgementPolicy.promptProhibited(_:), v17);
    v18 = (_QWORD *)swift_task_alloc(async function pointer to static MusicSubscription.current(privacyAcknowledgementPolicy:)[1]);
    *(_QWORD *)(v0 + 88) = v18;
    *v18 = v0;
    v18[1] = sub_1007883CC;
    return (id)static MusicSubscription.current(privacyAcknowledgementPolicy:)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007883CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
    v6 = sub_10078876C;
  else
    v6 = sub_100788450;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100788450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v12;
  int v13;
  int v14;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = MusicSubscription.canPlayCatalogContent.getter();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v14 = *(unsigned __int8 *)(v0 + 162);
    v13 = *(unsigned __int8 *)(v0 + 161);
    v8 = *(unsigned __int8 *)(v0 + 160);
    v9 = swift_slowAlloc(26, -1);
    *(_DWORD *)(v0 + 144) = v8;
    *(_DWORD *)v9 = 67240960;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 148);
    *(_WORD *)(v9 + 8) = 1026;
    *(_DWORD *)(v0 + 148) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 148, v0 + 152);
    *(_WORD *)(v9 + 14) = 1026;
    *(_DWORD *)(v0 + 152) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 156);
    *(_WORD *)(v9 + 20) = 1026;
    *(_DWORD *)(v0 + 156) = v4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 156, v0 + 160);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FETCH ITEMS: isMusicProcess: %{BOOL,public}d, areRemoteQueriesEnabled: %{BOOL,public}d, canShowCloudMedia: %{BOOL,public}d, canPlayCatalogContent: %{BOOL,public}d", (uint8_t *)v9, 0x1Au);
    swift_slowDealloc(v9, -1, -1);
  }

  if (((*(_BYTE *)(v0 + 160) & *(_BYTE *)(v0 + 161) & *(_BYTE *)(v0 + 162)) & v4 & 1) != 0)
  {
    v10 = (_QWORD *)swift_task_alloc(dword_1011C7EE4);
    *(_QWORD *)(v0 + 104) = v10;
    *v10 = v0;
    v10[1] = sub_100788664;
    return sub_100788A4C();
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc(dword_1011C7EEC);
    *(_QWORD *)(v0 + 112) = v12;
    *v12 = v0;
    v12[1] = sub_100788700;
    return sub_100789A48();
  }
}

uint64_t sub_100788664(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;

  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 104);
  v5 = *v1;
  swift_task_dealloc(v4);
  if (a1)
  {
    v6 = v3[10];
    v7 = v3[7];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
  }
  else
  {
    v9 = (_QWORD *)swift_task_alloc(dword_1011C7EEC);
    v3[14] = v9;
    *v9 = v5;
    v9[1] = sub_100788700;
    return sub_100789A48();
  }
}

uint64_t sub_100788700(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*v2 + 112);
  v5 = *v2;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 56);
  swift_task_dealloc(*(_QWORD *)(v5 + 80));
  v7 = swift_task_dealloc(v6);
  if (!v1)
    v7 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v7);
}

uint64_t sub_10078876C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v1 = v0[12];
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = v0[12];
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136446210;
    v15 = v7;
    v0[2] = v5;
    swift_errorRetain(v5);
    v8 = sub_100007E8C(&qword_1011A14B0);
    v9 = String.init<A>(describing:)(v0 + 2, v8);
    v11 = v10;
    v0[3] = sub_100322200(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FETCH ITEMS: error checking subscription status %{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    v12 = v0[12];

    swift_errorRelease(v12);
    swift_errorRelease(v12);
  }
  v13 = (_QWORD *)swift_task_alloc(dword_1011C7EEC);
  v0[15] = v13;
  *v13 = v0;
  v13[1] = sub_100788940;
  return sub_100789A48();
}

uint64_t sub_100788940(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 120);
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100788A04;
  }
  else
  {
    *(_QWORD *)(v4 + 136) = a1;
    v6 = sub_1007889B4;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1007889B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100788A04()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100788A4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[4] = v0;
  v2 = sub_100007E8C(&qword_1011C8088);
  v1[5] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[6] = v3;
  v1[7] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C8090);
  v1[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[9] = v5;
  v1[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicDataRequest.Source(0);
  v1[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[12] = v7;
  v1[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C8098);
  v1[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[15] = v9;
  v1[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100788B30, 0, 0);
}

uint64_t sub_100788B30(uint64_t a1)
{
  _QWORD *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1[17] = OBJC_IVAR____TtC5Music32RecentlyPlayedWidgetDataProvider_logger;
  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FETCH REMOTE ITEMS", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v6 = v1[13];
  v5 = v1[14];
  v7 = v1[11];
  v8 = v1[12];

  v9 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v10 = sub_100048748(&qword_1011C80A0, (uint64_t (*)(uint64_t))&type metadata accessor for RecentlyPlayedMusicItem, (uint64_t)&protocol conformance descriptor for RecentlyPlayedMusicItem);
  MusicRecentlyPlayedRequest.init()(v9, &protocol witness table for RecentlyPlayedMusicItem, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v6, enum case for MusicDataRequest.Source.widgets(_:), v7);
  MusicRecentlyPlayedRequest.source.setter(v6, v5);
  MusicRecentlyPlayedRequest.limit.setter(5, 0, v5);
  v11 = (_QWORD *)swift_task_alloc(async function pointer to MusicRecentlyPlayedRequest.response()[1]);
  v1[18] = v11;
  *v11 = v1;
  v11[1] = sub_100788C9C;
  return MusicRecentlyPlayedRequest.response()(v1[10], v1[14]);
}

uint64_t sub_100788C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100788EA4;
  else
    v3 = sub_100788D00;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100788D00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t);

  MusicRecentlyPlayedResponse.items.getter(*(_QWORD *)(v0 + 64));
  v3 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1011C80B0 + dword_1011C80B0);
  v1 = (_QWORD *)swift_task_alloc(unk_1011C80B4);
  *(_QWORD *)(v0 + 160) = v1;
  *v1 = v0;
  v1[1] = sub_100788D78;
  return v3((uint64_t)&unk_1011C80A8, 0);
}

uint64_t sub_100788D78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch(sub_100788DF4, 0, 0);
}

uint64_t sub_100788DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = sub_10078D6AC(v1);
  (*(void (**)(uint64_t, uint64_t, double))(v6 + 8))(v5, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100788EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 152);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 112);
    v22 = *(_QWORD *)(v0 + 128);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136446210;
    v23 = v7;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = sub_100007E8C(&qword_1011A14B0);
    v9 = String.init<A>(describing:)(v0 + 16, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 24) = sub_100322200(v9, v10, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FETCH REMOTE ITEMS ERROR %{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v5);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 112);
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    swift_errorRelease(v12);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 80);
  v18 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1007890CC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10078912C, 0, 0);
}

uint64_t sub_10078912C()
{
  uint64_t *v0;
  uint64_t **v1;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[5] + 16))(v0[6], v0[3], v0[4]);
  v1 = (uint64_t **)swift_task_alloc(dword_1011C8134);
  v0[7] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_10078918C;
  return sub_1007891E0(v0[2], v0[6]);
}

uint64_t sub_10078918C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 48);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1007891E0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2[8] = a1;
  v2[9] = a2;
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v2[10] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[11] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[12] = swift_task_alloc(v5);
  v2[13] = swift_task_alloc(v5);
  v6 = type metadata accessor for MusicSiriRepresentation(0);
  v2[14] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[15] = v7;
  v2[16] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkImage.Placeholder(0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A1440);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Station(0);
  v2[20] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[21] = v12;
  v2[22] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Playlist(0);
  v2[23] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[24] = v14;
  v2[25] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Album(0);
  v2[26] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[27] = v16;
  v2[28] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v2[29] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[30] = v18;
  v2[31] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10078937C, 0, 0);
}

uint64_t sub_10078937C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  _QWORD *v54;

  v2 = *(_QWORD *)(v0 + 240);
  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 72), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for RecentlyPlayedMusicItem.album(_:))
  {
    v5 = *(_QWORD *)(v0 + 248);
    v6 = *(_QWORD *)(v0 + 224);
    v7 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 96))(v5, *(_QWORD *)(v0 + 232));
    v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    v10 = Album.id.getter(v9);
    v12 = v11;
    v13 = Album.catalogID.getter(v10);
  }
  else
  {
    if (v4 != enum case for RecentlyPlayedMusicItem.playlist(_:))
    {
      v22 = *(_QWORD *)(v0 + 240);
      v21 = *(_QWORD *)(v0 + 248);
      v23 = *(_QWORD *)(v0 + 232);
      if (v4 == enum case for RecentlyPlayedMusicItem.station(_:))
      {
        v25 = *(_QWORD *)(v0 + 168);
        v24 = *(_QWORD *)(v0 + 176);
        v26 = *(_QWORD *)(v0 + 160);
        (*(void (**)(_QWORD, _QWORD))(v22 + 96))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
        v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v24, v21, v26);
        v10 = Station.id.getter(v27);
        v12 = v28;
        v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
      }
      else
      {
        v10 = RecentlyPlayedMusicItem.id.getter();
        v12 = v29;
        v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      }
      v18 = 0;
      v19 = 0;
      goto LABEL_10;
    }
    v15 = *(_QWORD *)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 192);
    v6 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 96))(v15, *(_QWORD *)(v0 + 232));
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v15, v7);
    v10 = Playlist.id.getter(v16);
    v12 = v17;
    v13 = Playlist.catalogID.getter(v10);
  }
  v18 = v13;
  v19 = v14;
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
LABEL_10:
  *(_QWORD *)(v0 + 16) = v10;
  *(_QWORD *)(v0 + 24) = v12;
  *(_QWORD *)(v0 + 256) = v18;
  *(_QWORD *)(v0 + 264) = v19;
  v31 = *(_QWORD *)(v0 + 144);
  v30 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 32) = RecentlyPlayedMusicItem.title.getter(v20);
  *(_QWORD *)(v0 + 40) = v32;
  *(_QWORD *)(v0 + 48) = RecentlyPlayedMusicItem.subtitle.getter();
  *(_QWORD *)(v0 + 56) = v33;
  v34 = sub_10078DA4C(v30);
  RecentlyPlayedMusicItem.artwork.getter(v34);
  v35 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v0 + 272) = v35;
  v36 = *(_QWORD *)(v35 - 8);
  *(_QWORD *)(v0 + 280) = v36;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v31, 1, v35) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 144), &qword_1011A1440);
    *(_QWORD *)(v0 + 304) = 0;
    v37 = *(_QWORD *)(v0 + 32);
    v38 = *(_QWORD *)(v0 + 40);
    v39 = *(_QWORD *)(v0 + 16);
    v40 = *(_QWORD *)(v0 + 24);
    v42 = *(_QWORD *)(v0 + 128);
    v41 = *(_QWORD *)(v0 + 136);
    v43 = *(_QWORD *)(v0 + 112);
    v44 = *(_QWORD *)(v0 + 120);
    *(int8x16_t *)(v0 + 312) = vextq_s8(*(int8x16_t *)(v0 + 48), *(int8x16_t *)(v0 + 48), 8uLL);
    *(_QWORD *)(v0 + 328) = v38;
    *(_QWORD *)(v0 + 336) = v37;
    *(_QWORD *)(v0 + 344) = v40;
    *(_QWORD *)(v0 + 352) = v39;
    v45 = sub_10078E1DC(v41);
    v46 = RecentlyPlayedMusicItem.siriRepresentation.getter(v45);
    *(_QWORD *)(v0 + 360) = MusicSiriRepresentation.id.getter(v46);
    *(_QWORD *)(v0 + 368) = v47;
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    *(_QWORD *)(v0 + 376) = sub_10078E3B8();
    v48 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 384) = static MainActor.shared.getter(v49);
    v50 = dispatch thunk of Actor.unownedExecutor.getter(v48, &protocol witness table for MainActor);
    return swift_task_switch(sub_100789814, v50, v51);
  }
  else
  {
    if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
      v53 = 350;
    else
      v53 = 275;
    v54 = (_QWORD *)swift_task_alloc(dword_1011BD36C);
    *(_QWORD *)(v0 + 288) = v54;
    *v54 = v0;
    v54[1] = sub_1007896B4;
    return sub_1005FE0C4(v53);
  }
}

uint64_t sub_1007896B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 296) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_100789730, 0, 0);
}

uint64_t sub_100789730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 296);
  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  *(int8x16_t *)(v0 + 312) = vextq_s8(*(int8x16_t *)(v0 + 48), *(int8x16_t *)(v0 + 48), 8uLL);
  *(_QWORD *)(v0 + 328) = v2;
  *(_QWORD *)(v0 + 336) = v1;
  *(_QWORD *)(v0 + 344) = v4;
  *(_QWORD *)(v0 + 352) = v3;
  v9 = sub_10078E1DC(v5);
  v10 = RecentlyPlayedMusicItem.siriRepresentation.getter(v9);
  *(_QWORD *)(v0 + 360) = MusicSiriRepresentation.id.getter(v10);
  *(_QWORD *)(v0 + 368) = v11;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  *(_QWORD *)(v0 + 376) = sub_10078E3B8();
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 384) = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  return swift_task_switch(sub_100789814, v14, v15);
}

uint64_t sub_100789814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 72);
  swift_release();
  type metadata accessor for InternalMusicPlayer(0);
  static InternalMusicPlayer.localDevice.getter();
  InternalMusicPlayer.state<A>(for:)(v6, v1, &protocol witness table for RecentlyPlayedMusicItem);
  swift_release();
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v7);
  v8 = swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v5 + 104))(v3, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4, v8);
  *(_BYTE *)(v0 + 392) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v2, v3) & 1;
  v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(v3, v4);
  v9(v2, v4);
  return swift_task_switch(sub_10078990C, 0, 0);
}

uint64_t sub_10078990C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 72);
  sub_1004008A0(0, 0, *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 312), v7, *(_QWORD *)(v0 + 304), *(_QWORD **)(v0 + 64), 1.0, v8, *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), 0, 0,
    0,
    0,
    0,
    0,
    (uint64_t)_swiftEmptyArrayStorage,
    *(_QWORD *)(v0 + 376),
    *(_BYTE *)(v0 + 392));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v9, v4);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v11);
  swift_task_dealloc(v8);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100789A48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1[14] = v0;
  v2 = *(_QWORD *)(type metadata accessor for WidgetMusicItem(0) - 8);
  v1[15] = v2;
  v3 = (*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[16] = swift_task_alloc(v3);
  v1[17] = swift_task_alloc(v3);
  v1[18] = swift_task_alloc(v3);
  v1[19] = swift_task_alloc(v3);
  v4 = type metadata accessor for Date(0);
  v1[20] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[21] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[22] = swift_task_alloc(v6);
  v1[23] = swift_task_alloc(v6);
  v7 = sub_100007E8C(&qword_1011B08D0);
  v1[24] = v7;
  v1[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A30A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[26] = swift_task_alloc(v8);
  v1[27] = swift_task_alloc(v8);
  v9 = type metadata accessor for Playlist(0);
  v1[28] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[29] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[30] = swift_task_alloc(v11);
  v1[31] = swift_task_alloc(v11);
  v1[32] = swift_task_alloc(v11);
  v12 = type metadata accessor for Album(0);
  v1[33] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v1[34] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[35] = swift_task_alloc(v14);
  v1[36] = swift_task_alloc(v14);
  v1[37] = swift_task_alloc(v14);
  v15 = sub_100007E8C(&qword_10119FCA0);
  v1[38] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v1[39] = v16;
  v1[40] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011ACAD0);
  v1[41] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v1[42] = v18;
  v1[43] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_10119FCA8);
  v1[44] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v1[45] = v20;
  v1[46] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_10119FD00);
  v1[47] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v1[48] = v22;
  v1[49] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011A3D80);
  v1[50] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v1[51] = v24;
  v1[52] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_10119FD08);
  v1[53] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v1[54] = v26;
  v1[55] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100789CF0, 0, 0);
}

uint64_t sub_100789CF0(uint64_t a1)
{
  _QWORD *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  __n128 v8;
  _QWORD *v9;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FETCH LOCAL ITEMS", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = v1[53];
  v6 = v1[33];

  MusicLibraryRequest.init()(v6, &protocol witness table for Album);
  MusicLibraryRequest.wantsDetailedLibraryResponse.setter(1, v5);
  KeyPath = swift_getKeyPath(&unk_100ECF1F8);
  MusicLibraryRequest.sort<A>(by:ascending:)(KeyPath, 0, v5);
  v8 = swift_release();
  MusicLibraryRequest.limit.setter(5, v5, v8);
  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
  v1[56] = v9;
  *v9 = v1;
  v9[1] = sub_100789E28;
  return MusicLibraryRequest.response()(v1[49], v1[53]);
}

uint64_t sub_100789E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 448);
  *(_QWORD *)(*(_QWORD *)v1 + 456) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10078C324;
  else
    v3 = sub_100789E8C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100789E8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  __n128 v7;
  _QWORD *v8;

  v2 = v0[48];
  v1 = v0[49];
  v3 = v0[47];
  v4 = v0[44];
  v5 = v0[28];
  MusicLibraryResponse.items.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  MusicLibraryRequest.init()(v5, &protocol witness table for Playlist);
  MusicLibraryRequest.wantsDetailedLibraryResponse.setter(1, v4);
  KeyPath = swift_getKeyPath(&unk_100ECF220);
  MusicLibraryRequest.sort<A>(by:ascending:)(KeyPath, 0, v4);
  v7 = swift_release();
  MusicLibraryRequest.limit.setter(5, v4, v7);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
  v0[58] = v8;
  *v8 = v0;
  v8[1] = sub_100789F74;
  return MusicLibraryRequest.response()(v0[40], v0[44]);
}

uint64_t sub_100789F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 464);
  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10078C494;
  else
    v3 = sub_100789FD8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100789FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, _QWORD);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, _QWORD);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v1 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 304);
  MusicLibraryResponse.items.getter(v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v5 = sub_100049F28((unint64_t *)&qword_1011ACAC0, &qword_1011A3D80, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v6 = dispatch thunk of Collection.count.getter(v1, v5);
  if (v6)
  {
    v7 = v6;
    v8 = v0 + 88;
    v9 = *(_QWORD *)(v0 + 400);
    sub_10035C8A0(0, v6 & ~(v6 >> 63), 0);
    result = dispatch thunk of Collection.startIndex.getter(v9);
    if (v7 < 0)
    {
      __break(1u);
      goto LABEL_37;
    }
    v96 = v0 + 16;
    v11 = *(_QWORD *)(v0 + 272);
    do
    {
      v12 = *(_QWORD *)(v0 + 296);
      v13 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v96, v8, *(_QWORD *)(v0 + 400), v5);
      (*(void (**)(uint64_t))(v11 + 16))(v12);
      v13(v96, 0);
      v14 = v8;
      v15 = v5;
      v17 = _swiftEmptyArrayStorage[2];
      v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1)
        sub_10035C8A0(v16 > 1, v17 + 1, 1);
      v18 = *(_QWORD *)(v0 + 400);
      v19 = *(_QWORD *)(v0 + 296);
      v20 = *(_QWORD *)(v0 + 264);
      _swiftEmptyArrayStorage[2] = v17 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v17, v19, v20);
      dispatch thunk of Collection.formIndex(after:)(v14, v18, v15);
      --v7;
      v5 = v15;
      v8 = v14;
    }
    while (v7);
  }
  v21 = *(_QWORD *)(v0 + 328);
  *(_QWORD *)(v0 + 80) = _swiftEmptyArrayStorage;
  v22 = sub_100049F28((unint64_t *)&unk_1011B56E0, (uint64_t *)&unk_1011ACAD0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v23 = dispatch thunk of Collection.count.getter(v21, v22);
  if (!v23)
    goto LABEL_13;
  v24 = v23;
  v25 = v0 + 104;
  v26 = *(_QWORD *)(v0 + 328);
  sub_10035C950(0, v23 & ~(v23 >> 63), 0);
  result = dispatch thunk of Collection.startIndex.getter(v26);
  if (v24 < 0)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v97 = v0 + 48;
  v27 = *(_QWORD *)(v0 + 232);
  do
  {
    v28 = *(_QWORD *)(v0 + 256);
    v29 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v97, v25, *(_QWORD *)(v0 + 328), v22);
    (*(void (**)(uint64_t))(v27 + 16))(v28);
    v29(v97, 0);
    v30 = v25;
    v31 = v22;
    v33 = _swiftEmptyArrayStorage[2];
    v32 = _swiftEmptyArrayStorage[3];
    if (v33 >= v32 >> 1)
      sub_10035C950(v32 > 1, v33 + 1, 1);
    v34 = *(_QWORD *)(v0 + 328);
    v35 = *(_QWORD *)(v0 + 256);
    v36 = *(_QWORD *)(v0 + 224);
    _swiftEmptyArrayStorage[2] = v33 + 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v33, v35, v36);
    dispatch thunk of Collection.formIndex(after:)(v30, v34, v31);
    --v24;
    v22 = v31;
    v25 = v30;
  }
  while (v24);
LABEL_13:
  v37 = *(_QWORD *)(v0 + 272);
  v38 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 96) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + 480) = _swiftEmptyArrayStorage;
  v39 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v39 + 16))
  {
    if (_swiftEmptyArrayStorage[2] >= 6uLL)
    {
LABEL_25:
      swift_bridgeObjectRelease(v39);
      v58 = *(_QWORD *)(v0 + 440);
      v59 = *(_QWORD *)(v0 + 416);
      v78 = *(_QWORD *)(v0 + 432);
      v79 = *(_QWORD *)(v0 + 424);
      v76 = *(_QWORD *)(v0 + 408);
      v77 = *(_QWORD *)(v0 + 400);
      v61 = *(_QWORD *)(v0 + 360);
      v60 = *(_QWORD *)(v0 + 368);
      v62 = *(_QWORD *)(v0 + 344);
      v75 = *(_QWORD *)(v0 + 352);
      v63 = *(_QWORD *)(v0 + 328);
      v64 = *(_QWORD *)(v0 + 336);
      v80 = *(_QWORD *)(v0 + 392);
      v81 = *(_QWORD *)(v0 + 320);
      v82 = *(_QWORD *)(v0 + 296);
      v83 = *(_QWORD *)(v0 + 288);
      v84 = *(_QWORD *)(v0 + 280);
      v85 = *(_QWORD *)(v0 + 256);
      v86 = *(_QWORD *)(v0 + 248);
      v87 = *(_QWORD *)(v0 + 240);
      v88 = *(_QWORD *)(v0 + 216);
      v89 = *(_QWORD *)(v0 + 208);
      v90 = *(_QWORD *)(v0 + 200);
      v91 = *(_QWORD *)(v0 + 184);
      v92 = *(_QWORD *)(v0 + 176);
      v93 = *(_QWORD *)(v0 + 152);
      v94 = *(_QWORD *)(v0 + 144);
      v95 = *(_QWORD *)(v0 + 136);
      v98 = *(_QWORD *)(v0 + 128);
      v65 = swift_bridgeObjectRetain();
      sub_10078D6AC(v65);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      v66 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
      (*(void (**)(uint64_t, uint64_t, __n128))(v64 + 8))(v62, v63, v66);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v75);
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v59, v77);
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v58, v79);
      swift_task_dealloc(v58);
      swift_task_dealloc(v59);
      swift_task_dealloc(v80);
      swift_task_dealloc(v60);
      swift_task_dealloc(v62);
      swift_task_dealloc(v81);
      swift_task_dealloc(v82);
      swift_task_dealloc(v83);
      swift_task_dealloc(v84);
      swift_task_dealloc(v85);
      swift_task_dealloc(v86);
      swift_task_dealloc(v87);
      swift_task_dealloc(v88);
      swift_task_dealloc(v89);
      swift_task_dealloc(v90);
      swift_task_dealloc(v91);
      swift_task_dealloc(v92);
      swift_task_dealloc(v93);
      swift_task_dealloc(v94);
      swift_task_dealloc(v95);
      swift_task_dealloc(v98);
      return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
    }
    v40 = *(_QWORD *)(v0 + 288);
    v41 = *(_QWORD *)(v0 + 264);
    v42 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v37 + 16))(v40, v39 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)), v41);
    Album.lastPlayedDate.getter(v42);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v40, v41);
  }
  else
  {
    if (!_swiftEmptyArrayStorage[2] || _swiftEmptyArrayStorage[2] > 5uLL)
      goto LABEL_25;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v38 + 56))(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 160));
  }
  *(_QWORD *)(v0 + 488) = &_swiftEmptyArrayStorage[2];
  v43 = *(_QWORD *)(v0 + 96);
  if (*(_QWORD *)(v43 + 16))
  {
    v44 = *(_QWORD *)(v0 + 248);
    v45 = *(_QWORD *)(v0 + 224);
    v46 = *(_QWORD *)(v0 + 232);
    v47 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v46 + 16))(v44, v43 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80)), v45);
    Playlist.lastPlayedDate.getter(v47);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 160));
  }
  v48 = (uint64_t *)(v0 + 80);
  v49 = v0 + 96;
  v51 = *(_QWORD *)(v0 + 208);
  v50 = *(_QWORD *)(v0 + 216);
  v52 = *(_QWORD *)(v0 + 200);
  v53 = *(_QWORD *)(v0 + 160);
  v54 = *(_QWORD *)(v0 + 168);
  v55 = *(int *)(*(_QWORD *)(v0 + 192) + 48);
  *(_DWORD *)(v0 + 528) = v55;
  v56 = v52 + v55;
  sub_100065228(v50, v52, (uint64_t *)&unk_1011A30A0);
  sub_100065228(v51, v56, (uint64_t *)&unk_1011A30A0);
  v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  LODWORD(v51) = v57(v52, 1, v53);
  result = v57(v56, 1, v53);
  if ((_DWORD)v51 == 1)
  {
    if ((_DWORD)result == 1)
    {
      v39 = *v48;
      goto LABEL_25;
    }
    if (*(_QWORD *)(*(_QWORD *)v49 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v49+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_1001FF6C8(0, 1);
      v68 = (_QWORD *)swift_task_alloc(dword_1011C807C);
      *(_QWORD *)(v0 + 520) = v68;
      *v68 = v0;
      v68[1] = sub_10078BC88;
      return sub_10078C62C(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 240));
    }
    goto LABEL_39;
  }
  if ((_DWORD)result == 1)
  {
    if (*(_QWORD *)(*v48 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v48+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
      sub_1001FF6DC(0, 1);
      v67 = (_QWORD *)swift_task_alloc(dword_1011C8084);
      *(_QWORD *)(v0 + 512) = v67;
      *v67 = v0;
      v67[1] = sub_10078B5EC;
      return sub_10078CF14(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 280));
    }
    goto LABEL_38;
  }
  v70 = *(_QWORD *)(v0 + 176);
  v69 = *(_QWORD *)(v0 + 184);
  v71 = *(_QWORD *)(v0 + 160);
  v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32);
  v72(v69, *(_QWORD *)(v0 + 200), v71);
  v72(v70, v56, v71);
  result = static Date.< infix(_:_:)(v69, v70);
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v49 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v49+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_1001FF6C8(0, 1);
      v73 = (_QWORD *)swift_task_alloc(dword_1011C807C);
      *(_QWORD *)(v0 + 496) = v73;
      *v73 = v0;
      v73[1] = sub_10078A89C;
      return sub_10078C62C(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 240));
    }
    goto LABEL_40;
  }
  if (*(_QWORD *)(*v48 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v48+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_1001FF6DC(0, 1);
    v74 = (_QWORD *)swift_task_alloc(dword_1011C8084);
    *(_QWORD *)(v0 + 504) = v74;
    *v74 = v0;
    v74[1] = sub_10078AF44;
    return sub_10078CF14(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 280));
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10078A89C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 496));
  return swift_task_switch(sub_10078A8F0, 0, 0);
}

uint64_t sub_10078A8F0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + 480)) & 1) != 0)
    v1 = *(_QWORD *)(v0 + 480);
  else
    v1 = sub_10043296C(0, **(_QWORD **)(v0 + 488) + 1, 1, *(_QWORD *)(v0 + 480));
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (v3 >= v2 >> 1)
    v1 = sub_10043296C(v2 > 1, v3 + 1, 1, v1);
  v4 = v0 + 96;
  v6 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 152);
  v10 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v1 + 16) = v3 + 1;
  v11 = (_QWORD *)(v1 + 16);
  sub_10005B6C0(v9, v1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v3, type metadata accessor for WidgetMusicItem);
  v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v6, v7);
  v12(v5, v7);
  *(_QWORD *)(v0 + 480) = v1;
  v13 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v13 + 16))
  {
    if (*v11 >= 6uLL)
    {
LABEL_17:
      swift_bridgeObjectRelease(v13);
      v33 = *(_QWORD *)(v0 + 440);
      v34 = *(_QWORD *)(v0 + 416);
      v57 = *(_QWORD *)(v0 + 432);
      v58 = *(_QWORD *)(v0 + 424);
      v55 = *(_QWORD *)(v0 + 408);
      v56 = *(_QWORD *)(v0 + 400);
      v35 = *(_QWORD *)(v0 + 360);
      v36 = *(_QWORD *)(v0 + 368);
      v37 = *(_QWORD *)(v0 + 344);
      v54 = *(_QWORD *)(v0 + 352);
      v38 = *(_QWORD *)(v0 + 328);
      v39 = *(_QWORD *)(v0 + 336);
      v59 = *(_QWORD *)(v0 + 392);
      v60 = *(_QWORD *)(v0 + 320);
      v61 = *(_QWORD *)(v0 + 296);
      v62 = *(_QWORD *)(v0 + 288);
      v63 = *(_QWORD *)(v0 + 280);
      v64 = *(_QWORD *)(v0 + 256);
      v65 = *(_QWORD *)(v0 + 248);
      v66 = *(_QWORD *)(v0 + 240);
      v67 = *(_QWORD *)(v0 + 216);
      v68 = *(_QWORD *)(v0 + 208);
      v69 = *(_QWORD *)(v0 + 200);
      v70 = *(_QWORD *)(v0 + 184);
      v71 = *(_QWORD *)(v0 + 176);
      v72 = *(_QWORD *)(v0 + 152);
      v73 = *(_QWORD *)(v0 + 144);
      v74 = *(_QWORD *)(v0 + 136);
      v75 = *(_QWORD *)(v0 + 128);
      v40 = swift_bridgeObjectRetain();
      sub_10078D6AC(v40);
      swift_bridgeObjectRelease(v1);
      v41 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
      (*(void (**)(uint64_t, uint64_t, __n128))(v39 + 8))(v37, v38, v41);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v54);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v34, v56);
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v33, v58);
      swift_task_dealloc(v33);
      swift_task_dealloc(v34);
      swift_task_dealloc(v59);
      swift_task_dealloc(v36);
      swift_task_dealloc(v37);
      swift_task_dealloc(v60);
      swift_task_dealloc(v61);
      swift_task_dealloc(v62);
      swift_task_dealloc(v63);
      swift_task_dealloc(v64);
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v74);
      swift_task_dealloc(v75);
      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
    }
    v14 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 264);
    v16 = *(_QWORD *)(v0 + 272);
    v17 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v14, v13 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    Album.lastPlayedDate.getter(v17);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  else
  {
    if (!*(_QWORD *)(*(_QWORD *)v4 + 16) || *v11 > 5uLL)
      goto LABEL_17;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 160));
  }
  *(_QWORD *)(v0 + 488) = v11;
  v18 = *(_QWORD *)(v0 + 96);
  if (*(_QWORD *)(v18 + 16))
  {
    v19 = *(_QWORD *)(v0 + 248);
    v20 = *(_QWORD *)(v0 + 224);
    v21 = *(_QWORD *)(v0 + 232);
    v22 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(v19, v18 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), v20);
    Playlist.lastPlayedDate.getter(v22);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 160));
  }
  v23 = (uint64_t *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 200);
  v27 = *(_QWORD *)(v0 + 160);
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(int *)(*(_QWORD *)(v0 + 192) + 48);
  *(_DWORD *)(v0 + 528) = v29;
  v30 = v26 + v29;
  sub_100065228(v24, v26, (uint64_t *)&unk_1011A30A0);
  sub_100065228(v25, v30, (uint64_t *)&unk_1011A30A0);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v25) = v31(v26, 1, v27);
  result = v31(v30, 1, v27);
  if ((_DWORD)v25 == 1)
  {
    if ((_DWORD)result == 1)
    {
      v13 = *v23;
      goto LABEL_17;
    }
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_1001FF6C8(0, 1);
      v45 = (_QWORD *)swift_task_alloc(dword_1011C807C);
      *(_QWORD *)(v0 + 520) = v45;
      *v45 = v0;
      v45[1] = sub_10078BC88;
      v46 = *(_QWORD *)(v0 + 240);
      v47 = *(_QWORD *)(v0 + 128);
      return sub_10078C62C(v47, v46);
    }
    goto LABEL_32;
  }
  if ((_DWORD)result == 1)
  {
    if (!*(_QWORD *)(*v23 + 16))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v23+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_1001FF6DC(0, 1);
    v42 = (_QWORD *)swift_task_alloc(dword_1011C8084);
    *(_QWORD *)(v0 + 512) = v42;
    *v42 = v0;
    v42[1] = sub_10078B5EC;
    v43 = *(_QWORD *)(v0 + 280);
    v44 = *(_QWORD *)(v0 + 136);
    return sub_10078CF14(v44, v43);
  }
  v49 = *(_QWORD *)(v0 + 176);
  v48 = *(_QWORD *)(v0 + 184);
  v50 = *(_QWORD *)(v0 + 160);
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32);
  v51(v48, *(_QWORD *)(v0 + 200), v50);
  v51(v49, v30, v50);
  result = static Date.< infix(_:_:)(v48, v49);
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_1001FF6C8(0, 1);
      v52 = (_QWORD *)swift_task_alloc(dword_1011C807C);
      *(_QWORD *)(v0 + 496) = v52;
      *v52 = v0;
      v52[1] = sub_10078A89C;
      v46 = *(_QWORD *)(v0 + 240);
      v47 = *(_QWORD *)(v0 + 152);
      return sub_10078C62C(v47, v46);
    }
    goto LABEL_33;
  }
  if (*(_QWORD *)(*v23 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v23+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_1001FF6DC(0, 1);
    v53 = (_QWORD *)swift_task_alloc(dword_1011C8084);
    *(_QWORD *)(v0 + 504) = v53;
    *v53 = v0;
    v53[1] = sub_10078AF44;
    v43 = *(_QWORD *)(v0 + 280);
    v44 = *(_QWORD *)(v0 + 144);
    return sub_10078CF14(v44, v43);
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10078AF44()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 504));
  return swift_task_switch(sub_10078AF98, 0, 0);
}

uint64_t sub_10078AF98()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + 480)) & 1) != 0)
    v1 = *(_QWORD *)(v0 + 480);
  else
    v1 = sub_10043296C(0, **(_QWORD **)(v0 + 488) + 1, 1, *(_QWORD *)(v0 + 480));
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (v3 >= v2 >> 1)
    v1 = sub_10043296C(v2 > 1, v3 + 1, 1, v1);
  v4 = v0 + 96;
  v6 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 144);
  v10 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v1 + 16) = v3 + 1;
  v11 = (_QWORD *)(v1 + 16);
  sub_10005B6C0(v9, v1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v3, type metadata accessor for WidgetMusicItem);
  v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v6, v7);
  v12(v5, v7);
  *(_QWORD *)(v0 + 480) = v1;
  v13 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v13 + 16))
  {
    if (*v11 >= 6uLL)
    {
LABEL_17:
      swift_bridgeObjectRelease(v13);
      v33 = *(_QWORD *)(v0 + 440);
      v34 = *(_QWORD *)(v0 + 416);
      v57 = *(_QWORD *)(v0 + 432);
      v58 = *(_QWORD *)(v0 + 424);
      v55 = *(_QWORD *)(v0 + 408);
      v56 = *(_QWORD *)(v0 + 400);
      v35 = *(_QWORD *)(v0 + 360);
      v36 = *(_QWORD *)(v0 + 368);
      v37 = *(_QWORD *)(v0 + 344);
      v54 = *(_QWORD *)(v0 + 352);
      v38 = *(_QWORD *)(v0 + 328);
      v39 = *(_QWORD *)(v0 + 336);
      v59 = *(_QWORD *)(v0 + 392);
      v60 = *(_QWORD *)(v0 + 320);
      v61 = *(_QWORD *)(v0 + 296);
      v62 = *(_QWORD *)(v0 + 288);
      v63 = *(_QWORD *)(v0 + 280);
      v64 = *(_QWORD *)(v0 + 256);
      v65 = *(_QWORD *)(v0 + 248);
      v66 = *(_QWORD *)(v0 + 240);
      v67 = *(_QWORD *)(v0 + 216);
      v68 = *(_QWORD *)(v0 + 208);
      v69 = *(_QWORD *)(v0 + 200);
      v70 = *(_QWORD *)(v0 + 184);
      v71 = *(_QWORD *)(v0 + 176);
      v72 = *(_QWORD *)(v0 + 152);
      v73 = *(_QWORD *)(v0 + 144);
      v74 = *(_QWORD *)(v0 + 136);
      v75 = *(_QWORD *)(v0 + 128);
      v40 = swift_bridgeObjectRetain();
      sub_10078D6AC(v40);
      swift_bridgeObjectRelease(v1);
      v41 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
      (*(void (**)(uint64_t, uint64_t, __n128))(v39 + 8))(v37, v38, v41);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v54);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v34, v56);
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v33, v58);
      swift_task_dealloc(v33);
      swift_task_dealloc(v34);
      swift_task_dealloc(v59);
      swift_task_dealloc(v36);
      swift_task_dealloc(v37);
      swift_task_dealloc(v60);
      swift_task_dealloc(v61);
      swift_task_dealloc(v62);
      swift_task_dealloc(v63);
      swift_task_dealloc(v64);
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v74);
      swift_task_dealloc(v75);
      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
    }
    v14 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 264);
    v16 = *(_QWORD *)(v0 + 272);
    v17 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v14, v13 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    Album.lastPlayedDate.getter(v17);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  else
  {
    if (!*(_QWORD *)(*(_QWORD *)v4 + 16) || *v11 > 5uLL)
      goto LABEL_17;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 160));
  }
  *(_QWORD *)(v0 + 488) = v11;
  v18 = *(_QWORD *)(v0 + 96);
  if (*(_QWORD *)(v18 + 16))
  {
    v19 = *(_QWORD *)(v0 + 248);
    v20 = *(_QWORD *)(v0 + 224);
    v21 = *(_QWORD *)(v0 + 232);
    v22 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(v19, v18 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), v20);
    Playlist.lastPlayedDate.getter(v22);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 160));
  }
  v23 = (uint64_t *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 200);
  v27 = *(_QWORD *)(v0 + 160);
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(int *)(*(_QWORD *)(v0 + 192) + 48);
  *(_DWORD *)(v0 + 528) = v29;
  v30 = v26 + v29;
  sub_100065228(v24, v26, (uint64_t *)&unk_1011A30A0);
  sub_100065228(v25, v30, (uint64_t *)&unk_1011A30A0);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v25) = v31(v26, 1, v27);
  result = v31(v30, 1, v27);
  if ((_DWORD)v25 == 1)
  {
    if ((_DWORD)result == 1)
    {
      v13 = *v23;
      goto LABEL_17;
    }
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_1001FF6C8(0, 1);
      v45 = (_QWORD *)swift_task_alloc(dword_1011C807C);
      *(_QWORD *)(v0 + 520) = v45;
      *v45 = v0;
      v45[1] = sub_10078BC88;
      v46 = *(_QWORD *)(v0 + 240);
      v47 = *(_QWORD *)(v0 + 128);
      return sub_10078C62C(v47, v46);
    }
    goto LABEL_32;
  }
  if ((_DWORD)result == 1)
  {
    if (!*(_QWORD *)(*v23 + 16))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v23+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_1001FF6DC(0, 1);
    v42 = (_QWORD *)swift_task_alloc(dword_1011C8084);
    *(_QWORD *)(v0 + 512) = v42;
    *v42 = v0;
    v42[1] = sub_10078B5EC;
    v43 = *(_QWORD *)(v0 + 280);
    v44 = *(_QWORD *)(v0 + 136);
    return sub_10078CF14(v44, v43);
  }
  v49 = *(_QWORD *)(v0 + 176);
  v48 = *(_QWORD *)(v0 + 184);
  v50 = *(_QWORD *)(v0 + 160);
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32);
  v51(v48, *(_QWORD *)(v0 + 200), v50);
  v51(v49, v30, v50);
  result = static Date.< infix(_:_:)(v48, v49);
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_1001FF6C8(0, 1);
      v52 = (_QWORD *)swift_task_alloc(dword_1011C807C);
      *(_QWORD *)(v0 + 496) = v52;
      *v52 = v0;
      v52[1] = sub_10078A89C;
      v46 = *(_QWORD *)(v0 + 240);
      v47 = *(_QWORD *)(v0 + 152);
      return sub_10078C62C(v47, v46);
    }
    goto LABEL_33;
  }
  if (*(_QWORD *)(*v23 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v23+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_1001FF6DC(0, 1);
    v53 = (_QWORD *)swift_task_alloc(dword_1011C8084);
    *(_QWORD *)(v0 + 504) = v53;
    *v53 = v0;
    v53[1] = sub_10078AF44;
    v43 = *(_QWORD *)(v0 + 280);
    v44 = *(_QWORD *)(v0 + 144);
    return sub_10078CF14(v44, v43);
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10078B5EC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 512));
  return swift_task_switch(sub_10078B640, 0, 0);
}

uint64_t sub_10078B640()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + 480)) & 1) != 0)
    v1 = *(_QWORD *)(v0 + 480);
  else
    v1 = sub_10043296C(0, **(_QWORD **)(v0 + 488) + 1, 1, *(_QWORD *)(v0 + 480));
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (v3 >= v2 >> 1)
    v1 = sub_10043296C(v2 > 1, v3 + 1, 1, v1);
  v4 = v0 + 96;
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v1 + 16) = v3 + 1;
  v10 = (_QWORD *)(v1 + 16);
  sub_10005B6C0(v8, v1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v3, type metadata accessor for WidgetMusicItem);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  *(_QWORD *)(v0 + 480) = v1;
  v11 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v11 + 16))
  {
    if (*v10 >= 6uLL)
    {
LABEL_17:
      swift_bridgeObjectRelease(v11);
      v31 = *(_QWORD *)(v0 + 440);
      v32 = *(_QWORD *)(v0 + 416);
      v55 = *(_QWORD *)(v0 + 432);
      v56 = *(_QWORD *)(v0 + 424);
      v53 = *(_QWORD *)(v0 + 408);
      v54 = *(_QWORD *)(v0 + 400);
      v33 = *(_QWORD *)(v0 + 360);
      v34 = *(_QWORD *)(v0 + 368);
      v35 = *(_QWORD *)(v0 + 344);
      v52 = *(_QWORD *)(v0 + 352);
      v36 = *(_QWORD *)(v0 + 328);
      v37 = *(_QWORD *)(v0 + 336);
      v57 = *(_QWORD *)(v0 + 392);
      v58 = *(_QWORD *)(v0 + 320);
      v59 = *(_QWORD *)(v0 + 296);
      v60 = *(_QWORD *)(v0 + 288);
      v61 = *(_QWORD *)(v0 + 280);
      v62 = *(_QWORD *)(v0 + 256);
      v63 = *(_QWORD *)(v0 + 248);
      v64 = *(_QWORD *)(v0 + 240);
      v65 = *(_QWORD *)(v0 + 216);
      v66 = *(_QWORD *)(v0 + 208);
      v67 = *(_QWORD *)(v0 + 200);
      v68 = *(_QWORD *)(v0 + 184);
      v69 = *(_QWORD *)(v0 + 176);
      v70 = *(_QWORD *)(v0 + 152);
      v71 = *(_QWORD *)(v0 + 144);
      v72 = *(_QWORD *)(v0 + 136);
      v73 = *(_QWORD *)(v0 + 128);
      v38 = swift_bridgeObjectRetain();
      sub_10078D6AC(v38);
      swift_bridgeObjectRelease(v1);
      v39 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
      (*(void (**)(uint64_t, uint64_t, __n128))(v37 + 8))(v35, v36, v39);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v52);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v32, v54);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v31, v56);
      swift_task_dealloc(v31);
      swift_task_dealloc(v32);
      swift_task_dealloc(v57);
      swift_task_dealloc(v34);
      swift_task_dealloc(v35);
      swift_task_dealloc(v58);
      swift_task_dealloc(v59);
      swift_task_dealloc(v60);
      swift_task_dealloc(v61);
      swift_task_dealloc(v62);
      swift_task_dealloc(v63);
      swift_task_dealloc(v64);
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
    }
    v12 = *(_QWORD *)(v0 + 288);
    v13 = *(_QWORD *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 272);
    v15 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(v12, v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), v13);
    Album.lastPlayedDate.getter(v15);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  else
  {
    if (!*(_QWORD *)(*(_QWORD *)v4 + 16) || *v10 > 5uLL)
      goto LABEL_17;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 160));
  }
  *(_QWORD *)(v0 + 488) = v10;
  v16 = *(_QWORD *)(v0 + 96);
  if (*(_QWORD *)(v16 + 16))
  {
    v17 = *(_QWORD *)(v0 + 248);
    v18 = *(_QWORD *)(v0 + 224);
    v19 = *(_QWORD *)(v0 + 232);
    v20 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v19 + 16))(v17, v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80)), v18);
    Playlist.lastPlayedDate.getter(v20);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 160));
  }
  v21 = (uint64_t *)(v0 + 80);
  v23 = *(_QWORD *)(v0 + 208);
  v22 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 200);
  v25 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 168);
  v27 = *(int *)(*(_QWORD *)(v0 + 192) + 48);
  *(_DWORD *)(v0 + 528) = v27;
  v28 = v24 + v27;
  sub_100065228(v22, v24, (uint64_t *)&unk_1011A30A0);
  sub_100065228(v23, v28, (uint64_t *)&unk_1011A30A0);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v23) = v29(v24, 1, v25);
  result = v29(v28, 1, v25);
  if ((_DWORD)v23 == 1)
  {
    if ((_DWORD)result == 1)
    {
      v11 = *v21;
      goto LABEL_17;
    }
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_1001FF6C8(0, 1);
      v43 = (_QWORD *)swift_task_alloc(dword_1011C807C);
      *(_QWORD *)(v0 + 520) = v43;
      *v43 = v0;
      v43[1] = sub_10078BC88;
      v44 = *(_QWORD *)(v0 + 240);
      v45 = *(_QWORD *)(v0 + 128);
      return sub_10078C62C(v45, v44);
    }
    goto LABEL_32;
  }
  if ((_DWORD)result == 1)
  {
    if (!*(_QWORD *)(*v21 + 16))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v21+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_1001FF6DC(0, 1);
    v40 = (_QWORD *)swift_task_alloc(dword_1011C8084);
    *(_QWORD *)(v0 + 512) = v40;
    *v40 = v0;
    v40[1] = sub_10078B5EC;
    v41 = *(_QWORD *)(v0 + 280);
    v42 = *(_QWORD *)(v0 + 136);
    return sub_10078CF14(v42, v41);
  }
  v47 = *(_QWORD *)(v0 + 176);
  v46 = *(_QWORD *)(v0 + 184);
  v48 = *(_QWORD *)(v0 + 160);
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32);
  v49(v46, *(_QWORD *)(v0 + 200), v48);
  v49(v47, v28, v48);
  result = static Date.< infix(_:_:)(v46, v47);
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_1001FF6C8(0, 1);
      v50 = (_QWORD *)swift_task_alloc(dword_1011C807C);
      *(_QWORD *)(v0 + 496) = v50;
      *v50 = v0;
      v50[1] = sub_10078A89C;
      v44 = *(_QWORD *)(v0 + 240);
      v45 = *(_QWORD *)(v0 + 152);
      return sub_10078C62C(v45, v44);
    }
    goto LABEL_33;
  }
  if (*(_QWORD *)(*v21 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v21+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_1001FF6DC(0, 1);
    v51 = (_QWORD *)swift_task_alloc(dword_1011C8084);
    *(_QWORD *)(v0 + 504) = v51;
    *v51 = v0;
    v51[1] = sub_10078AF44;
    v41 = *(_QWORD *)(v0 + 280);
    v42 = *(_QWORD *)(v0 + 144);
    return sub_10078CF14(v42, v41);
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10078BC88()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 520));
  return swift_task_switch(sub_10078BCDC, 0, 0);
}

uint64_t sub_10078BCDC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + 480)) & 1) != 0)
    v1 = *(_QWORD *)(v0 + 480);
  else
    v1 = sub_10043296C(0, **(_QWORD **)(v0 + 488) + 1, 1, *(_QWORD *)(v0 + 480));
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (v3 >= v2 >> 1)
    v1 = sub_10043296C(v2 > 1, v3 + 1, 1, v1);
  v4 = v0 + 96;
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 200) + *(int *)(v0 + 528);
  *(_QWORD *)(v1 + 16) = v3 + 1;
  v8 = (_QWORD *)(v1 + 16);
  sub_10005B6C0(v5, v1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v3, type metadata accessor for WidgetMusicItem);
  sub_10004FF60(v7, (uint64_t *)&unk_1011A30A0);
  *(_QWORD *)(v0 + 480) = v1;
  v9 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v9 + 16))
  {
    if (*v8 >= 6uLL)
    {
LABEL_17:
      swift_bridgeObjectRelease(v9);
      v29 = *(_QWORD *)(v0 + 440);
      v30 = *(_QWORD *)(v0 + 416);
      v53 = *(_QWORD *)(v0 + 432);
      v54 = *(_QWORD *)(v0 + 424);
      v51 = *(_QWORD *)(v0 + 408);
      v52 = *(_QWORD *)(v0 + 400);
      v31 = *(_QWORD *)(v0 + 360);
      v32 = *(_QWORD *)(v0 + 368);
      v33 = *(_QWORD *)(v0 + 344);
      v50 = *(_QWORD *)(v0 + 352);
      v34 = *(_QWORD *)(v0 + 328);
      v35 = *(_QWORD *)(v0 + 336);
      v55 = *(_QWORD *)(v0 + 392);
      v56 = *(_QWORD *)(v0 + 320);
      v57 = *(_QWORD *)(v0 + 296);
      v58 = *(_QWORD *)(v0 + 288);
      v59 = *(_QWORD *)(v0 + 280);
      v60 = *(_QWORD *)(v0 + 256);
      v61 = *(_QWORD *)(v0 + 248);
      v62 = *(_QWORD *)(v0 + 240);
      v63 = *(_QWORD *)(v0 + 216);
      v64 = *(_QWORD *)(v0 + 208);
      v65 = *(_QWORD *)(v0 + 200);
      v66 = *(_QWORD *)(v0 + 184);
      v67 = *(_QWORD *)(v0 + 176);
      v68 = *(_QWORD *)(v0 + 152);
      v69 = *(_QWORD *)(v0 + 144);
      v70 = *(_QWORD *)(v0 + 136);
      v71 = *(_QWORD *)(v0 + 128);
      v36 = swift_bridgeObjectRetain();
      sub_10078D6AC(v36);
      swift_bridgeObjectRelease(v1);
      v37 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
      (*(void (**)(uint64_t, uint64_t, __n128))(v35 + 8))(v33, v34, v37);
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v50);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v30, v52);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v29, v54);
      swift_task_dealloc(v29);
      swift_task_dealloc(v30);
      swift_task_dealloc(v55);
      swift_task_dealloc(v32);
      swift_task_dealloc(v33);
      swift_task_dealloc(v56);
      swift_task_dealloc(v57);
      swift_task_dealloc(v58);
      swift_task_dealloc(v59);
      swift_task_dealloc(v60);
      swift_task_dealloc(v61);
      swift_task_dealloc(v62);
      swift_task_dealloc(v63);
      swift_task_dealloc(v64);
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
    }
    v10 = *(_QWORD *)(v0 + 288);
    v11 = *(_QWORD *)(v0 + 264);
    v12 = *(_QWORD *)(v0 + 272);
    v13 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v12 + 16))(v10, v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11);
    Album.lastPlayedDate.getter(v13);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  else
  {
    if (!*(_QWORD *)(*(_QWORD *)v4 + 16) || *v8 > 5uLL)
      goto LABEL_17;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 160));
  }
  *(_QWORD *)(v0 + 488) = v8;
  v14 = *(_QWORD *)(v0 + 96);
  if (*(_QWORD *)(v14 + 16))
  {
    v15 = *(_QWORD *)(v0 + 248);
    v16 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 232);
    v18 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v17 + 16))(v15, v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v16);
    Playlist.lastPlayedDate.getter(v18);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 160));
  }
  v19 = (uint64_t *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 216);
  v22 = *(_QWORD *)(v0 + 200);
  v23 = *(_QWORD *)(v0 + 160);
  v24 = *(_QWORD *)(v0 + 168);
  v25 = *(int *)(*(_QWORD *)(v0 + 192) + 48);
  *(_DWORD *)(v0 + 528) = v25;
  v26 = v22 + v25;
  sub_100065228(v20, v22, (uint64_t *)&unk_1011A30A0);
  sub_100065228(v21, v26, (uint64_t *)&unk_1011A30A0);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v21) = v27(v22, 1, v23);
  result = v27(v26, 1, v23);
  if ((_DWORD)v21 == 1)
  {
    if ((_DWORD)result == 1)
    {
      v9 = *v19;
      goto LABEL_17;
    }
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_1001FF6C8(0, 1);
      v41 = (_QWORD *)swift_task_alloc(dword_1011C807C);
      *(_QWORD *)(v0 + 520) = v41;
      *v41 = v0;
      v41[1] = sub_10078BC88;
      v42 = *(_QWORD *)(v0 + 240);
      v43 = *(_QWORD *)(v0 + 128);
      return sub_10078C62C(v43, v42);
    }
    goto LABEL_32;
  }
  if ((_DWORD)result == 1)
  {
    if (!*(_QWORD *)(*v19 + 16))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v19+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_1001FF6DC(0, 1);
    v38 = (_QWORD *)swift_task_alloc(dword_1011C8084);
    *(_QWORD *)(v0 + 512) = v38;
    *v38 = v0;
    v38[1] = sub_10078B5EC;
    v39 = *(_QWORD *)(v0 + 280);
    v40 = *(_QWORD *)(v0 + 136);
    return sub_10078CF14(v40, v39);
  }
  v45 = *(_QWORD *)(v0 + 176);
  v44 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 160);
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32);
  v47(v44, *(_QWORD *)(v0 + 200), v46);
  v47(v45, v26, v46);
  result = static Date.< infix(_:_:)(v44, v45);
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_1001FF6C8(0, 1);
      v48 = (_QWORD *)swift_task_alloc(dword_1011C807C);
      *(_QWORD *)(v0 + 496) = v48;
      *v48 = v0;
      v48[1] = sub_10078A89C;
      v42 = *(_QWORD *)(v0 + 240);
      v43 = *(_QWORD *)(v0 + 152);
      return sub_10078C62C(v43, v42);
    }
    goto LABEL_33;
  }
  if (*(_QWORD *)(*v19 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v19+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_1001FF6DC(0, 1);
    v49 = (_QWORD *)swift_task_alloc(dword_1011C8084);
    *(_QWORD *)(v0 + 504) = v49;
    *v49 = v0;
    v49[1] = sub_10078AF44;
    v39 = *(_QWORD *)(v0 + 280);
    v40 = *(_QWORD *)(v0 + 144);
    return sub_10078CF14(v40, v39);
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10078C324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 296);
  v9 = *(_QWORD *)(v0 + 280);
  v11 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 248);
  v13 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 200);
  v17 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 152);
  v20 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 432) + 8))(v1, *(_QWORD *)(v0 + 424));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078C494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *(_QWORD *)(v0 + 408);
  v1 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 400);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 8))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 352));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 440);
  v5 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 392);
  v7 = *(_QWORD *)(v0 + 368);
  v8 = *(_QWORD *)(v0 + 344);
  v9 = *(_QWORD *)(v0 + 320);
  v10 = *(_QWORD *)(v0 + 288);
  v11 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 280);
  v14 = *(_QWORD *)(v0 + 256);
  v15 = *(_QWORD *)(v0 + 248);
  v16 = *(_QWORD *)(v0 + 240);
  v17 = *(_QWORD *)(v0 + 216);
  v18 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 200);
  v20 = *(_QWORD *)(v0 + 184);
  v21 = *(_QWORD *)(v0 + 176);
  v22 = *(_QWORD *)(v0 + 152);
  v23 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 432) + 8))(v4, *(_QWORD *)(v0 + 424));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078C62C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[6] = a1;
  v2[7] = a2;
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v5);
  v2[11] = swift_task_alloc(v5);
  v6 = sub_100007E8C(&qword_1011A19A0);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B8D50);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicSiriRepresentation(0);
  v2[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[15] = v9;
  v2[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkImage.Placeholder(0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A1440);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119E460);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v2[20] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[21] = v14;
  v2[22] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10078C79C, 0, 0);
}

uint64_t sub_10078C79C(__n128 a1)
{
  int8x16_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int8x16_t **v46;

  v2 = v1[10].i64[0];
  v3 = v1[10].i64[1];
  v4 = v1[9].i64[1];
  v5 = Playlist.name.getter(a1);
  v1[1].i64[0] = v5;
  v1[1].i64[1] = v6;
  v7 = Playlist.curatorName.getter(v5);
  v1[2].i64[0] = v7;
  v1[2].i64[1] = v8;
  v9 = Playlist.id.getter(v7);
  v11 = v10;
  _StringGuts.grow(_:)(55);
  v12._object = (void *)0x8000000100E448F0;
  v12._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v12);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v9;
  v13._object = v11;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v11);
  v14._countAndFlagsBits = 0xD00000000000001FLL;
  v14._object = (void *)0x8000000100E44910;
  String.append(_:)(v14);
  URL.init(string:)(0, 0xE000000000000000);
  v15 = swift_bridgeObjectRelease(0xE000000000000000);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 48))(v4, 1, v2, v15);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v17 = v1[9].i64[0];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1[10].i64[1] + 32))(v1[11].i64[0], v1[9].i64[1], v1[10].i64[0]);
    swift_bridgeObjectRelease(v11);
    Playlist.artwork.getter(v18);
    v19 = type metadata accessor for Artwork(0);
    v1[11].i64[1] = v19;
    v20 = *(_QWORD *)(v19 - 8);
    v1[12].i64[0] = v20;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
    {
      v21 = sub_10004FF60(v1[9].i64[0], &qword_1011A1440);
      v1[13].i64[1] = 0;
      v22 = v1[1].i64[0];
      v23 = v1[1].i64[1];
      v24 = v1[8].i64[0];
      v25 = v1[8].i64[1];
      v26 = v1[7].i64[0];
      v27 = v1[7].i64[1];
      v28 = v1[6].i64[0];
      v29 = v1[6].i64[1];
      v1[14] = vextq_s8(v1[2], v1[2], 8uLL);
      v1[15].i64[0] = v23;
      v1[15].i64[1] = v22;
      Playlist.variant.getter(v21);
      v30 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      v31 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v25, 0, 10, v30);
      v32 = Playlist.id.getter(v31);
      v1[16].i64[0] = v32;
      v1[16].i64[1] = v33;
      v1[17].i64[0] = Playlist.catalogID.getter(v32);
      v1[17].i64[1] = v34;
      v35 = Playlist.siriRepresentation.getter();
      v1[18].i64[0] = MusicSiriRepresentation.id.getter(v35);
      v1[18].i64[1] = v36;
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v24, v26);
      v37 = sub_100007E8C(&qword_1011B0958);
      v38 = swift_allocObject(v37, 34, 7);
      v1[19].i64[0] = v38;
      *(_OWORD *)(v38 + 16) = xmmword_100EA7A80;
      Playlist.contentRating.getter(v38);
      v39 = TextBadge.init(for:isPlayable:)(v29, 1);
      *(_BYTE *)(v38 + 32) = v39;
      Playlist.favoriteStatus.getter(v39);
      v40 = type metadata accessor for MusicFavoriteStatus(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v28, 0, 1, v40);
      *(_BYTE *)(v38 + 33) = TextBadge.init(for:)(v28);
      v41 = type metadata accessor for MainActor(0);
      v1[19].i64[1] = static MainActor.shared.getter(v42);
      v43 = dispatch thunk of Actor.unownedExecutor.getter(v41, &protocol witness table for MainActor);
      return swift_task_switch(sub_10078CCF0, v43, v44);
    }
    else
    {
      if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
        v45 = 350;
      else
        v45 = 275;
      v46 = (int8x16_t **)swift_task_alloc(dword_1011BD36C);
      v1[12].i64[1] = (uint64_t)v46;
      *v46 = v1;
      v46[1] = (int8x16_t *)sub_10078CAE0;
      return sub_1005FE0C4(v45);
    }
  }
  return result;
}

uint64_t sub_10078CAE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_10078CB5C, 0, 0);
}

uint64_t sub_10078CB5C(uint64_t a1)
{
  int8x16_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;

  v1[13].i64[1] = v1[13].i64[0];
  v2 = v1[1].i64[0];
  v3 = v1[1].i64[1];
  v4 = v1[8].i64[0];
  v5 = v1[8].i64[1];
  v6 = v1[7].i64[0];
  v7 = v1[7].i64[1];
  v8 = v1[6].i64[0];
  v9 = v1[6].i64[1];
  v1[14] = vextq_s8(v1[2], v1[2], 8uLL);
  v1[15].i64[0] = v3;
  v1[15].i64[1] = v2;
  Playlist.variant.getter(a1);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v11 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 10, v10);
  v12 = Playlist.id.getter(v11);
  v1[16].i64[0] = v12;
  v1[16].i64[1] = v13;
  v1[17].i64[0] = Playlist.catalogID.getter(v12);
  v1[17].i64[1] = v14;
  v15 = Playlist.siriRepresentation.getter();
  v1[18].i64[0] = MusicSiriRepresentation.id.getter(v15);
  v1[18].i64[1] = v16;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  v17 = sub_100007E8C(&qword_1011B0958);
  v18 = swift_allocObject(v17, 34, 7);
  v1[19].i64[0] = v18;
  *(_OWORD *)(v18 + 16) = xmmword_100EA7A80;
  Playlist.contentRating.getter(v18);
  v19 = TextBadge.init(for:isPlayable:)(v9, 1);
  *(_BYTE *)(v18 + 32) = v19;
  Playlist.favoriteStatus.getter(v19);
  v20 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 0, 1, v20);
  *(_BYTE *)(v18 + 33) = TextBadge.init(for:)(v8);
  v21 = type metadata accessor for MainActor(0);
  v1[19].i64[1] = static MainActor.shared.getter(v22);
  v23 = dispatch thunk of Actor.unownedExecutor.getter(v21, &protocol witness table for MainActor);
  return swift_task_switch(sub_10078CCF0, v23, v24);
}

uint64_t sub_10078CCF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  void (*v9)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  swift_release();
  type metadata accessor for InternalMusicPlayer(0);
  static InternalMusicPlayer.localDevice.getter();
  v6 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v0 + 320) = v6;
  InternalMusicPlayer.state<A>(for:)(v5, v6, &protocol witness table for Playlist);
  swift_release();
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v7);
  v8 = swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v4 + 104))(v2, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v3, v8);
  *(_BYTE *)(v0 + 328) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v1, v2) & 1;
  v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v2, v3);
  v9(v1, v3);
  return swift_task_switch(sub_10078CDE8, 0, 0);
}

uint64_t sub_10078CDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  sub_1004008A0(0, 0, *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 224), v2, *(_QWORD *)(v0 + 216), *(_QWORD **)(v0 + 48), 1.0, v5, *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), 0, 0,
    0,
    0,
    0,
    0,
    (uint64_t)_swiftEmptyArrayStorage,
    *(_QWORD *)(v0 + 304),
    *(_BYTE *)(v0 + 328));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v9, v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078CF14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[6] = a1;
  v2[7] = a2;
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v5);
  v2[11] = swift_task_alloc(v5);
  v6 = sub_100007E8C(&qword_1011A19A0);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B8D50);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicSiriRepresentation(0);
  v2[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[15] = v9;
  v2[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkImage.Placeholder(0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A1440);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119E460);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v2[20] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[21] = v14;
  v2[22] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10078D084, 0, 0);
}

uint64_t sub_10078D084(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;

  v2 = v1[20];
  v3 = v1[21];
  v4 = v1[19];
  v5 = Album.title.getter(a1);
  v1[2] = v5;
  v1[3] = v6;
  v7 = Album.artistName.getter(v5);
  v1[4] = v7;
  v1[5] = v8;
  v9 = Album.id.getter(v7);
  v11 = v10;
  _StringGuts.grow(_:)(55);
  v12._object = (void *)0x8000000100E448F0;
  v12._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v12);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v9;
  v13._object = v11;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v11);
  v14._countAndFlagsBits = 0xD00000000000001FLL;
  v14._object = (void *)0x8000000100E44910;
  String.append(_:)(v14);
  URL.init(string:)(0, 0xE000000000000000);
  v15 = swift_bridgeObjectRelease(0xE000000000000000);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 48))(v4, 1, v2, v15);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v17 = v1[18];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[21] + 32))(v1[22], v1[19], v1[20]);
    swift_bridgeObjectRelease(v11);
    Album.artwork.getter(v18);
    v19 = type metadata accessor for Artwork(0);
    v1[23] = v19;
    v20 = *(_QWORD *)(v19 - 8);
    v1[24] = v20;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
    {
      sub_10004FF60(v1[18], &qword_1011A1440);
      v21 = v1[4];
      v22 = v1[5];
      v23 = v1[2];
      v24 = v1[3];
      v26 = v1[16];
      v25 = v1[17];
      v27 = v1[14];
      v28 = v1[15];
      v29 = v1[12];
      v30 = v1[13];
      v1[27] = 0;
      v1[28] = v22;
      v1[29] = v21;
      v1[30] = v24;
      v1[31] = v23;
      v31 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v25, 1, 10, v31);
      v33 = Album.id.getter(v32);
      v1[32] = v33;
      v1[33] = v34;
      v1[34] = Album.catalogID.getter(v33);
      v1[35] = v35;
      v36 = Album.siriRepresentation.getter();
      v1[36] = MusicSiriRepresentation.id.getter(v36);
      v1[37] = v37;
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
      v38 = sub_100007E8C(&qword_1011B0958);
      v39 = swift_allocObject(v38, 34, 7);
      v1[38] = v39;
      *(_OWORD *)(v39 + 16) = xmmword_100EA7A80;
      Album.contentRating.getter(v39);
      *(_BYTE *)(v39 + 32) = TextBadge.init(for:isPlayable:)(v30, 1);
      Album.favoriteStatus.getter();
      v40 = type metadata accessor for MusicFavoriteStatus(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v29, 0, 1, v40);
      *(_BYTE *)(v39 + 33) = TextBadge.init(for:)(v29);
      v41 = type metadata accessor for MainActor(0);
      v1[39] = static MainActor.shared.getter(v42);
      v43 = dispatch thunk of Actor.unownedExecutor.getter(v41, &protocol witness table for MainActor);
      return swift_task_switch(sub_10078D5B4, v43, v44);
    }
    else
    {
      if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
        v45 = 350;
      else
        v45 = 275;
      v46 = (_QWORD *)swift_task_alloc(dword_1011BD36C);
      v1[25] = v46;
      *v46 = v1;
      v46[1] = sub_10078D3B0;
      return sub_1005FE0C4(v45);
    }
  }
  return result;
}

uint64_t sub_10078D3B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_10078D42C, 0, 0);
}

uint64_t sub_10078D42C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0[4];
  v2 = v0[5];
  v3 = v0[2];
  v4 = v0[3];
  v6 = v0[16];
  v5 = v0[17];
  v7 = v0[14];
  v8 = v0[15];
  v9 = v0[12];
  v10 = v0[13];
  v0[27] = v0[26];
  v0[28] = v2;
  v0[29] = v1;
  v0[30] = v4;
  v0[31] = v3;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 10, v11);
  v13 = Album.id.getter(v12);
  v0[32] = v13;
  v0[33] = v14;
  v0[34] = Album.catalogID.getter(v13);
  v0[35] = v15;
  v16 = Album.siriRepresentation.getter();
  v0[36] = MusicSiriRepresentation.id.getter(v16);
  v0[37] = v17;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v18 = sub_100007E8C(&qword_1011B0958);
  v19 = swift_allocObject(v18, 34, 7);
  v0[38] = v19;
  *(_OWORD *)(v19 + 16) = xmmword_100EA7A80;
  Album.contentRating.getter(v19);
  *(_BYTE *)(v19 + 32) = TextBadge.init(for:isPlayable:)(v10, 1);
  Album.favoriteStatus.getter();
  v20 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 0, 1, v20);
  *(_BYTE *)(v19 + 33) = TextBadge.init(for:)(v9);
  v21 = type metadata accessor for MainActor(0);
  v0[39] = static MainActor.shared.getter(v22);
  v23 = dispatch thunk of Actor.unownedExecutor.getter(v21, &protocol witness table for MainActor);
  return swift_task_switch(sub_10078D5B4, v23, v24);
}

uint64_t sub_10078D5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  void (*v9)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  swift_release();
  type metadata accessor for InternalMusicPlayer(0);
  static InternalMusicPlayer.localDevice.getter();
  v6 = type metadata accessor for Album(0);
  *(_QWORD *)(v0 + 320) = v6;
  InternalMusicPlayer.state<A>(for:)(v5, v6, &protocol witness table for Album);
  swift_release();
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v7);
  v8 = swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v4 + 104))(v2, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v3, v8);
  *(_BYTE *)(v0 + 328) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v1, v2) & 1;
  v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v2, v3);
  v9(v1, v3);
  return swift_task_switch(sub_10078CDE8, 0, 0);
}

double sub_10078D6AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v3 = type metadata accessor for WidgetMusicItem(0);
  *(_QWORD *)&result = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v9 = v1 + OBJC_IVAR____TtC5Music32RecentlyPlayedWidgetDataProvider_logger;
    v10 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v11 = *(_QWORD *)(v4 + 72);
    v22 = a1;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v12 = 136446210;
    v24 = v12;
    v23 = (char *)&type metadata for Any + 8;
    v25 = v11;
    do
    {
      v19 = sub_10005B704(v10, (uint64_t)v7, type metadata accessor for WidgetMusicItem);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.default.getter(v20);
      if (os_log_type_enabled(v20, v21))
      {
        v13 = v9;
        v14 = swift_slowAlloc(12, -1);
        v15 = swift_slowAlloc(32, -1);
        v26 = v15;
        *(_DWORD *)v14 = v24;
        v16 = sub_100400BD0();
        v18 = v17;
        *(_QWORD *)(v14 + 4) = sub_100322200(v16, v17, &v26);
        swift_bridgeObjectRelease(v18);
        sub_10005B748((uint64_t)v7, type metadata accessor for WidgetMusicItem);
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "ITEM %{public}s", (uint8_t *)v14, 0xCu);
        swift_arrayDestroy(v15, 1, v23);
        swift_slowDealloc(v15, -1, -1);
        v9 = v13;
        v11 = v25;
        swift_slowDealloc(v14, -1, -1);

      }
      else
      {

        sub_10005B748((uint64_t)v7, type metadata accessor for WidgetMusicItem);
      }
      v10 += v11;
      --v8;
    }
    while (v8);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
  }
  return result;
}

uint64_t sub_10078D898()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  v1 = (char *)v0 + OBJC_IVAR____TtC5Music32RecentlyPlayedWidgetDataProvider_logger;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10078D8F0()
{
  return type metadata accessor for RecentlyPlayedWidgetDataProvider(0);
}

uint64_t type metadata accessor for RecentlyPlayedWidgetDataProvider(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C7EC0, (uint64_t)&nominal type descriptor for RecentlyPlayedWidgetDataProvider);
}

uint64_t sub_10078D90C()
{
  return type metadata accessor for RecentlyPlayedWidgetDataProvider.Cache(0);
}

uint64_t type metadata accessor for RecentlyPlayedWidgetDataProvider.Cache(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C7FD0, (uint64_t)&nominal type descriptor for RecentlyPlayedWidgetDataProvider.Cache);
}

void sub_10078D928(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_10078D994(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_10078D994(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1011C7FE0)
  {
    v2 = sub_100044B54(&qword_1011BFD60);
    v3 = sub_10064F8BC(&qword_1011BFD88, &qword_1011B0690, (uint64_t)&unk_100EB9CB8, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v4 = sub_10064F8BC(&qword_1011BFD68, &qword_1011B0698, (uint64_t)&unk_100EB9C90, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v5 = type metadata accessor for FileBacked(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1011C7FE0);
  }
}

uint64_t sub_10078DA4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  void *v42;
  void *v43;
  Swift::String v44;
  Swift::String v45;
  __n128 v46;
  uint64_t result;
  __n128 v48;
  void (*v49)(char *, uint64_t, __n128);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  char *v66;
  __n128 v67;
  __n128 v68;
  void (*v69)(char *, uint64_t, __n128);
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, uint64_t, __n128);
  unint64_t v99;
  unint64_t v100;

  v97 = a1;
  v1 = type metadata accessor for Station(0);
  v90 = *(_QWORD *)(v1 - 8);
  v91 = v1;
  __chkstk_darwin(v1);
  v89 = (char *)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Playlist(0);
  v93 = *(_QWORD *)(v3 - 8);
  v94 = v3;
  __chkstk_darwin(v3);
  v96 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v92 = (char *)&v85 - v6;
  v7 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v7);
  v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v86 = (char *)&v85 - v11;
  __chkstk_darwin(v12);
  v87 = (char *)&v85 - v13;
  __chkstk_darwin(v14);
  v88 = (char *)&v85 - v15;
  __chkstk_darwin(v16);
  v95 = (uint64_t)&v85 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v85 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v85 - v22;
  v24 = type metadata accessor for Album(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v85 - v29;
  v31 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v85 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t, __n128), uint64_t, __n128))(v32 + 16))(v35, v98, v31, v33);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v35, v31);
  if (v36 == enum case for RecentlyPlayedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v32 + 96))(v35, v31);
    v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v30, v35, v24);
    Album.url.getter(v37);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    v38 = type metadata accessor for URL(0);
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
    v41 = v40(v23, 1, v38);
    if ((_DWORD)v41 != 1)
    {
      v70 = *(void (**)(char *, uint64_t))(v25 + 8);
      v70(v27, v24);
      v70(v30, v24);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v97, v23, v38);
    }
    v98 = (uint64_t (*)(char *, uint64_t, uint64_t, __n128))v40;
    v96 = (char *)Album.id.getter(v41);
    v43 = v42;
    v99 = 0;
    v100 = 0xE000000000000000;
    _StringGuts.grow(_:)(50);
    swift_bridgeObjectRelease();
    v99 = 0xD000000000000016;
    v100 = 0x8000000100E448F0;
    swift_bridgeObjectRetain();
    v44._countAndFlagsBits = (uint64_t)v96;
    v44._object = v43;
    String.append(_:)(v44);
    swift_bridgeObjectRelease();
    v45._countAndFlagsBits = 0xD00000000000001ALL;
    v45._object = (void *)0x8000000100E44930;
    String.append(_:)(v45);
    URL.init(string:)(v99, v100);
    v46 = swift_bridgeObjectRelease();
    result = v98(v20, 1, v38, v46);
    if ((_DWORD)result != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v97, v20, v38);
      v48 = swift_bridgeObjectRelease();
      v49 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
      v49(v27, v24, v48);
      ((void (*)(char *, uint64_t))v49)(v30, v24);
      return sub_10004FF60((uint64_t)v23, &qword_10119E460);
    }
    __break(1u);
    goto LABEL_21;
  }
  if (v36 == enum case for RecentlyPlayedMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v32 + 96))(v35, v31);
    v51 = v92;
    v50 = v93;
    v52 = v94;
    v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v93 + 32))(v92, v35, v94);
    v54 = v95;
    Playlist.url.getter(v53);
    v55 = v96;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v96, v51, v52);
    v56 = type metadata accessor for URL(0);
    v57 = *(_QWORD *)(v56 - 8);
    v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
    v59 = v58(v54, 1, v56);
    if ((_DWORD)v59 == 1)
    {
      v60 = Playlist.id.getter(v59);
      v62 = v61;
      v99 = 0;
      v100 = 0xE000000000000000;
      _StringGuts.grow(_:)(55);
      v63._object = (void *)0x8000000100E448F0;
      v63._countAndFlagsBits = 0xD000000000000016;
      String.append(_:)(v63);
      swift_bridgeObjectRetain();
      v64._countAndFlagsBits = v60;
      v64._object = v62;
      String.append(_:)(v64);
      swift_bridgeObjectRelease();
      v65._countAndFlagsBits = 0xD00000000000001FLL;
      v65._object = (void *)0x8000000100E44910;
      String.append(_:)(v65);
      v66 = v88;
      URL.init(string:)(v99, v100);
      v67 = swift_bridgeObjectRelease();
      result = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v58)(v66, 1, v56, v67);
      if ((_DWORD)result != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v97, v66, v56);
        v68 = swift_bridgeObjectRelease();
        v69 = *(void (**)(char *, uint64_t, __n128))(v50 + 8);
        v69(v96, v52, v68);
        ((void (*)(char *, uint64_t))v69)(v51, v52);
        return sub_10004FF60(v95, &qword_10119E460);
      }
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      return result;
    }
    v79 = *(void (**)(char *, uint64_t))(v50 + 8);
    v79(v55, v52);
    v79(v51, v52);
    v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 32);
    v81 = v97;
    v82 = v54;
  }
  else
  {
    if (v36 != enum case for RecentlyPlayedMusicItem.station(_:))
    {
      URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
      v83 = type metadata accessor for URL(0);
      v84 = *(_QWORD *)(v83 - 8);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48))(v9, 1, v83);
      if ((_DWORD)result != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v97, v9, v83);
        return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v35, v31);
      }
      goto LABEL_22;
    }
    (*(void (**)(char *, uint64_t))(v32 + 96))(v35, v31);
    v72 = v89;
    v71 = v90;
    v73 = v91;
    v74 = (*(uint64_t (**)(char *, char *, uint64_t))(v90 + 32))(v89, v35, v91);
    v75 = (uint64_t)v87;
    Station.url.getter(v74);
    v56 = type metadata accessor for URL(0);
    v76 = *(_QWORD *)(v56 - 8);
    v77 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 48);
    if (v77((char *)v75, 1, v56) == 1)
    {
      v78 = v86;
      URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
      result = v77(v78, 1, v56);
      if ((_DWORD)result != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v97, v78, v56);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
        return sub_10004FF60(v75, &qword_10119E460);
      }
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
    v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 32);
    v81 = v97;
    v82 = v75;
  }
  return v80(v81, v82, v56);
}

uint64_t sub_10078E1DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, v2, v8, v10);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
  if (v13 == enum case for RecentlyPlayedMusicItem.album(_:))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
LABEL_7:
    v21 = a1;
    v22 = 1;
    goto LABEL_8;
  }
  v16 = v13;
  if (v13 == enum case for RecentlyPlayedMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
    v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v12, v4);
    Playlist.variant.getter(v17);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v18 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 0, 10, v18);
  }
  v20 = enum case for RecentlyPlayedMusicItem.station(_:);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  if (v16 != v20)
    goto LABEL_7;
  v21 = a1;
  v22 = 8;
LABEL_8:
  v15(v21, v22, 10, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

_QWORD *sub_10078E3B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v2 = type metadata accessor for Station(0);
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  __chkstk_darwin(v2);
  v38 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist(0);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Album(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v21, v1, v17, v19);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v21, v17);
  if (v22 == enum case for RecentlyPlayedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v21, v17);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v21, v13);
    v23 = sub_100007E8C(&qword_1011B0958);
    v24 = swift_allocObject(v23, 34, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100EA7A80;
    Album.contentRating.getter(v24);
    v25 = TextBadge.init(for:isPlayable:)(v12, 1);
    *(_BYTE *)(v24 + 32) = v25;
    Album.favoriteStatus.getter(v25);
    v26 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 0, 1, v26);
    *(_BYTE *)(v24 + 33) = TextBadge.init(for:)(v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else if (v22 == enum case for RecentlyPlayedMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v21, v17);
    v28 = v41;
    v27 = v42;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v6, v21, v42);
    v29 = sub_100007E8C(&qword_1011B0958);
    v24 = swift_allocObject(v29, 34, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100EA7A80;
    Playlist.contentRating.getter(v24);
    v30 = TextBadge.init(for:isPlayable:)(v12, 1);
    *(_BYTE *)(v24 + 32) = v30;
    Playlist.favoriteStatus.getter(v30);
    v31 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 0, 1, v31);
    *(_BYTE *)(v24 + 33) = TextBadge.init(for:)(v9);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v27);
  }
  else if (v22 == enum case for RecentlyPlayedMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v21, v17);
    v32 = v38;
    v33 = v39;
    v34 = v40;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v21, v40);
    v35 = sub_100007E8C(&qword_1011B0958);
    v24 = swift_allocObject(v35, 33, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100EA7AA0;
    Station.contentRating.getter(v24);
    *(_BYTE *)(v24 + 32) = TextBadge.init(for:isPlayable:)(v12, 1);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    return _swiftEmptyArrayStorage;
  }
  return (_QWORD *)v24;
}

uint64_t sub_10078E7B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return dispatch thunk of LibraryAlbumSortProperties.lastPlayedDate.getter(v1, v2);
}

uint64_t sub_10078E7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6[18] = a5;
  v6[19] = a6;
  v6[16] = a3;
  v6[17] = a4;
  v6[15] = a2;
  v7 = *(_QWORD *)(sub_100007E8C(&qword_10119FA90) - 8);
  v6[20] = v7;
  v6[21] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C80E0);
  v6[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C80E8);
  v6[23] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[24] = v10;
  v6[25] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A13B0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[26] = swift_task_alloc(v11);
  v6[27] = swift_task_alloc(v11);
  v12 = sub_100007E8C(&qword_1011C80F0);
  v6[28] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[29] = v13;
  v6[30] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v6[31] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v6[32] = v15;
  v16 = *(_QWORD *)(v15 + 64);
  v6[33] = v16;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[34] = swift_task_alloc(v17);
  v6[35] = swift_task_alloc(v17);
  v6[36] = swift_task_alloc(v17);
  v18 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011C80F8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[37] = swift_task_alloc(v18);
  v6[38] = swift_task_alloc(v18);
  v19 = sub_100007E8C(&qword_1011C8088);
  v6[39] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v6[40] = v20;
  v6[41] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011C8100);
  v6[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011C8108);
  v6[43] = v22;
  v6[44] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10078EA08, 0, 0);
}

uint64_t sub_10078EA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, _QWORD);
  void (*v21)(uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v64;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t i;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v70 = v0 + 16;
  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 320);
  v81 = *(_QWORD *)(v0 + 256);
  v73 = *(_QWORD *)(v0 + 232);
  v74 = *(_QWORD *)(v0 + 224);
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v67(v4, *(_QWORD *)(v0 + 128), v5);
  v68 = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v4, v5);
  v7 = sub_100049F28(&qword_1011C8110, &qword_1011C8088, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Sequence.makeIterator()(v5, v7);
  v66 = *(int *)(v1 + 36);
  *(_QWORD *)(v2 + v66) = 0;
  v69 = v2;
  v8 = (_QWORD *)(v2 + *(int *)(sub_100007E8C(&qword_1011C8118) + 36));
  v9 = sub_100049F28(&qword_1011C80B8, &qword_1011C8088, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v72 = v8;
  for (i = v9; ; v9 = i)
  {
    v11 = v8;
    v12 = *v8;
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 312), v9);
    if (v12 == *(_QWORD *)(v0 + 104))
    {
      v13 = v73;
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v73 + 56))(*(_QWORD *)(v0 + 296), 1, 1, *(_QWORD *)(v0 + 224));
      v14 = v74;
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 352);
      v16 = *(_QWORD *)(v0 + 328);
      v17 = *(_QWORD *)(v0 + 312);
      v18 = *(_QWORD *)(v0 + 280);
      v19 = *(_QWORD *)(v0 + 248);
      v77 = *(_QWORD *)(v0 + 288);
      v79 = *(_QWORD *)(v0 + 240);
      v20 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v70, v11, v17, v9);
      (*(void (**)(uint64_t))(v81 + 16))(v18);
      v20(v70, 0);
      v67(v16, v15, v17);
      dispatch thunk of Collection.formIndex(after:)(v11, v17, v9);
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v16, v17);
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 32);
      v21(v77, v18, v19);
      v22 = v79 + *(int *)(v74 + 48);
      v23 = *(_QWORD *)(v69 + v66);
      v21(v22, v77, v19);
      if (__OFADD__(v23, 1))
      {
        __break(1u);
        goto LABEL_18;
      }
      v24 = *(_QWORD **)(v0 + 296);
      v25 = *(_QWORD *)(v0 + 248);
      v26 = *(_QWORD *)(v0 + 224);
      *(_QWORD *)(v69 + v66) = v23 + 1;
      v27 = (char *)v24 + *(int *)(v74 + 48);
      *v24 = v23;
      v21((uint64_t)v27, v22, v25);
      v13 = v73;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v24, 0, 1, v26);
      v14 = v74;
    }
    v28 = *(_QWORD *)(v0 + 304);
    v29 = *(_QWORD *)(v0 + 224);
    sub_100065228(*(_QWORD *)(v0 + 296), v28, &qword_1011C80F8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v28, 1, v29) == 1)
      break;
    v30 = *(uint64_t **)(v0 + 304);
    v31 = *(_QWORD *)(v0 + 264);
    v32 = *(char **)(v0 + 272);
    v33 = *(_QWORD *)(v0 + 248);
    v34 = *(_QWORD *)(v0 + 216);
    v75 = v34;
    v35 = *(_QWORD *)(v0 + 144);
    v78 = *(_QWORD *)(v0 + 136);
    v80 = *(_QWORD *)(v0 + 208);
    v76 = *v30;
    v36 = (char *)v30 + *(int *)(v14 + 48);
    v37 = type metadata accessor for TaskPriority(0);
    v38 = *(_QWORD *)(v37 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v34, 1, 1, v37);
    v39 = *(void (**)(uint64_t, char *, uint64_t))(v81 + 32);
    v39((uint64_t)v32, v36, v33);
    v40 = *(unsigned __int8 *)(v81 + 80);
    v41 = (v40 + 56) & ~v40;
    v42 = (_QWORD *)swift_allocObject(&unk_1010DB638, v41 + v31, v40 | 7);
    v42[2] = 0;
    v43 = v42 + 2;
    v42[3] = 0;
    v42[4] = v76;
    v42[5] = v78;
    v42[6] = v35;
    v39((uint64_t)v42 + v41, v32, v33);
    sub_10004A160(v75, v80, (uint64_t *)&unk_1011A13B0);
    LODWORD(v41) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v80, 1, v37);
    v44 = swift_retain();
    v45 = *(_QWORD *)(v0 + 208);
    if ((_DWORD)v41 == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 208), (uint64_t *)&unk_1011A13B0);
      v46 = 0;
      v47 = *v43;
      if (*v43)
        goto LABEL_10;
    }
    else
    {
      v54 = TaskPriority.rawValue.getter(v44);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v45, v37);
      v46 = v54;
      v47 = *v43;
      if (*v43)
      {
LABEL_10:
        v48 = v42[3];
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v47, v50);
        v51 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v48);
        v53 = v52;
        swift_unknownObjectRelease(v47);
        goto LABEL_13;
      }
    }
    v51 = 0;
    v53 = 0;
LABEL_13:
    v55 = **(_QWORD **)(v0 + 120);
    v56 = sub_100007E8C(&qword_1011C80D0);
    v57 = v53 | v51;
    if (v53 | v51)
    {
      v57 = v0 + 48;
      *(_QWORD *)(v0 + 48) = 0;
      *(_QWORD *)(v0 + 56) = 0;
      *(_QWORD *)(v0 + 64) = v51;
      *(_QWORD *)(v0 + 72) = v53;
    }
    v8 = v72;
    v10 = *(_QWORD *)(v0 + 216);
    *(_QWORD *)(v0 + 80) = 1;
    *(_QWORD *)(v0 + 88) = v57;
    *(_QWORD *)(v0 + 96) = v55;
    swift_task_create(v46 | 0x3100, v0 + 80, v56, &unk_1011C8128, v42);
    swift_release();
    sub_10004FF60(v10, (uint64_t *)&unk_1011A13B0);
  }
  v58 = *(unint64_t **)(v0 + 152);
  v59 = *(uint64_t **)(v0 + 120);
  sub_10004FF60(*(_QWORD *)(v0 + 352), &qword_1011C8108);
  v60 = *v59;
  v61 = sub_100007E8C(&qword_1011C80D0);
  *(_QWORD *)(v0 + 360) = v61;
  v62 = sub_100007E8C(&qword_1011A14B0);
  ThrowingTaskGroup.makeAsyncIterator()(v60, v61, v62, &protocol self-conformance witness table for Error);
  v22 = *v58;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v58);
  *v58 = v22;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    goto LABEL_16;
LABEL_18:
  v22 = sub_10072E0DC(v22);
LABEL_16:
  **(_QWORD **)(v0 + 152) = v22;
  v64 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 368) = v64;
  *v64 = v0;
  v64[1] = sub_10078EFA0;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 176), 0, 0, *(_QWORD *)(v0 + 184), v0 + 112);
}

uint64_t sub_10078EFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 368));
  if (v0)
    v2 = sub_10078F234;
  else
    v2 = sub_10078F004;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10078F004()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(unint64_t **)(v0 + 176);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(v2, 1, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 352);
    v5 = *(_QWORD *)(v0 + 328);
    v4 = *(_QWORD *)(v0 + 336);
    v7 = *(_QWORD *)(v0 + 296);
    v6 = *(_QWORD *)(v0 + 304);
    v9 = *(_QWORD *)(v0 + 280);
    v8 = *(_QWORD *)(v0 + 288);
    v19 = *(_QWORD *)(v0 + 272);
    v20 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 200);
    v21 = *(_QWORD *)(v0 + 216);
    v22 = *(_QWORD *)(v0 + 208);
    v23 = *(_QWORD *)(v0 + 168);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v10, *(_QWORD *)(v0 + 184));
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v10);
    swift_task_dealloc(v2);
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v12 = *(_QWORD *)(v0 + 168);
  v13 = *(unint64_t **)(v0 + 152);
  v14 = *v2;
  sub_10005B6C0((uint64_t)v2 + *(int *)(v1 + 48), v12, type metadata accessor for WidgetMusicItem);
  v15 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 0, 1, v15);
  v16 = *v13;
  result = swift_isUniquelyReferenced_nonNull_native(*v13);
  *v13 = v16;
  if ((result & 1) != 0)
  {
    if ((v14 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v18 = *(uint64_t **)(v0 + 152);
  result = sub_10072E0DC(v16);
  v16 = result;
  *v18 = result;
  if ((v14 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_5:
  if (v14 < *(_QWORD *)(v16 + 16))
  {
    sub_10078F5BC(*(_QWORD *)(v0 + 168), v16+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 160) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 160) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 160) + 72) * v14);
    v17 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 376) = v17;
    *v17 = v0;
    v17[1] = sub_10078F33C;
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 176), 0, 0, *(_QWORD *)(v0 + 184), v0 + 112);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10078F234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 272);
  v11 = *(_QWORD *)(v0 + 240);
  v12 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 168);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v9, *(_QWORD *)(v0 + 184));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v9);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078F33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 376));
  if (v0)
    v2 = sub_10078F234;
  else
    v2 = sub_10078F004;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10078F3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch(sub_10078F3C0, 0, 0);
}

uint64_t sub_10078F3C0()
{
  _QWORD *v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  _QWORD *v5;
  int *v7;

  v2 = v0[3];
  v1 = (int *)v0[4];
  v3 = (_QWORD *)v0[2];
  v4 = (char *)v3 + *(int *)(sub_100007E8C(&qword_1011C80D0) + 48);
  *v3 = v2;
  v7 = (int *)((char *)v1 + *v1);
  v5 = (_QWORD *)swift_task_alloc(v1[1]);
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_10078F448;
  return ((uint64_t (*)(char *, _QWORD))v7)(v4, v0[6]);
}

uint64_t sub_10078F448()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10078F490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v7;
  uint64_t v14;
  _QWORD *v15;

  v14 = *a7;
  v15 = (_QWORD *)swift_task_alloc(dword_1011C8154);
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_10006AEE4;
  return sub_100783B0C(a1, a2, a3, a4, a5, a6, v14);
}

uint64_t sub_10078F528(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc(dword_1011C80C4);
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011C80C0
                                                                                       + dword_1011C80C0))(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_10078F5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119FA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10078F604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10078F680(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RecentlyPlayedMusicItem(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_1011C8124);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011C8120
                                                                                                + dword_1011C8120))(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10078F734(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  _BYTE v24[24];

  v3 = type metadata accessor for WidgetDiskCache(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = v1 + OBJC_IVAR____TtCC5Music32RecentlyPlayedWidgetDataProviderP33_23E5867D7557CCAE0A35FCF9C1439AE75Cache__items;
  swift_beginAccess(v10, v24, 33, 0);
  v11 = (uint64_t *)(v10 + *(int *)(sub_100007E8C(&qword_1011B0988) + 44));
  v13 = *v11;
  v12 = v11[1];
  static TaskPriority.userInitiated.getter(v14);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 0, 1, v15);
  sub_10005B704(v10, (uint64_t)v6, type metadata accessor for WidgetDiskCache);
  v23 = a1;
  v16 = *(unsigned __int8 *)(v4 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (v5 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_1010DB660, v19 + 8, v16 | 7);
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v20 + 24) = 0;
  sub_10005B6C0((uint64_t)v6, v20 + v17, type metadata accessor for WidgetDiskCache);
  v21 = (_QWORD *)(v20 + v18);
  *v21 = v13;
  v21[1] = v12;
  sub_100065228((uint64_t)&v23, v20 + v19, &qword_1011C8140);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000E8908((uint64_t)v9, (uint64_t)&unk_1011C8148, v20);
  swift_release();
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A13B0);
  return swift_endAccess(v24);
}

uint64_t sub_10078F90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for WidgetDiskCache(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = v0 + v3;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);

  v8 = v5 + *(int *)(v1 + 24);
  v9 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
}

uint64_t sub_10078FA0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = (uint64_t *)(v1 + v6);
  v12 = *v11;
  v13 = v11[1];
  v14 = (uint64_t *)(v1 + v7);
  v15 = (_QWORD *)swift_task_alloc(dword_1011C813C);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_1011C8138
                                                                                                  + dword_1011C8138))(a1, v8, v9, v10, v12, v13, v14);
}

id sub_10078FADC@<X0>(_BYTE *a1@<X8>)
{
  return sub_100510340(a1);
}

uint64_t sub_10078FAF4()
{
  uint64_t *v0;

  return sub_100510444(v0[2], v0[3], v0[4]);
}

id sub_10078FB10@<X0>(_BYTE *a1@<X8>)
{
  return sub_10078FADC(a1);
}

uint64_t sub_10078FB24()
{
  return sub_10078FAF4();
}

uint64_t static SourcedPlaybackIntent.with(_:configurator:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);

  v28 = a3;
  v29 = a2;
  v10 = type metadata accessor for Optional(0, a4);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - v12;
  v14 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v28 - v20;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, a1, v10, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v23 = type metadata accessor for SourcedPlaybackIntent(0, a4, a5, v22);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a6, 1, 1, v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v21, v13, a4);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v21, a4);
    SourcedPlaybackIntent.init(source:)((uint64_t)v17, a4, a5, v25, a6);
    v29(a6);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, a4);
    v27 = type metadata accessor for SourcedPlaybackIntent(0, a4, a5, v26);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a6, 0, 1, v27);
  }
}

uint64_t type metadata accessor for SourcedPlaybackIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SourcedPlaybackIntent);
}

uint64_t PlaybackSource.sourcedIntent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  __chkstk_darwin(a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v3, a1);
  return SourcedPlaybackIntent.init(source:)((uint64_t)v8, a1, a2, v10, a3);
}

uint64_t sub_10078FD98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  __chkstk_darwin(a1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, a1);
  v8 = *(_QWORD *)(a1 + 16);
  if (EnumCaseMultiPayload == 1)
  {
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v5, v8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
  }
  else
  {
    v11 = type metadata accessor for Optional(0, v8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a2, v5, v11);
  }
}

uint64_t SourcedPlaybackIntent.withPlaybackMode(_:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v6;
  uint64_t result;

  v6 = a1 & 1;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, v3, a2);
  *(_BYTE *)(a3 + *(int *)(a2 + 40)) = v6;
  return result;
}

uint64_t SourcedPlaybackIntent.init(source:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v9 = type metadata accessor for SourcedPlaybackIntent(0, a2, a3, a4);
  v10 = a5 + *(int *)(v9 + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, a2, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v10, 1, 1, AssociatedTypeWitness);
  v14 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v12, v13);
  swift_storeEnumTagMultiPayload(v10, v14, 0);
  *(_BYTE *)(a5 + *(int *)(v9 + 40)) = 2;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a5, a1, a2);
}

uint64_t sub_10078FF84()
{
  return sub_1006A1478((uint64_t)&off_1010AC088);
}

uint64_t sub_10078FF90@<X0>(uint64_t a1@<X8>)
{
  return sub_100790320(type metadata accessor for HorizontalCellSource, &qword_1011B0C40, a1);
}

_UNKNOWN **static PlaybackMode.allCases.getter()
{
  return &off_1010AD458;
}

uint64_t URL.externalURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_10078FFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1007901BC(a1, &qword_1011C82C0, &qword_1011C82C8, a2);
}

uint64_t AnyAction.identifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SourcedPlaybackIntent.enqueueMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + *(int *)(a1 + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 16), &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v8 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v6, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v4, v8);
}

uint64_t SourcedPlaybackIntent.enqueueMode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + *(int *)(a2 + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 16), &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v8 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v6, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v4, a1, v8);
}

uint64_t SourcedPlaybackIntent.playbackMode.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t SourcedPlaybackIntent.playbackMode.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 40)) = result;
  return result;
}

uint64_t PlaybackMode.rawValue.getter(char a1)
{
  return a1 & 1;
}

BOOL static PlaybackMode.< infix(_:_:)(char a1, char a2)
{
  return (a1 & 1u) < (a2 & 1u);
}

Music::PlaybackMode_optional __swiftcall PlaybackMode.init(rawValue:)(Swift::Int rawValue)
{
  Music::PlaybackMode_optional v1;

  if (rawValue == 1)
    v1.value = Music_PlaybackMode_shuffle;
  else
    v1.value = Music_PlaybackMode_unknownDefault;
  if (rawValue)
    return v1;
  else
    return 0;
}

_QWORD *sub_10079011C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_10079013C(_QWORD *a1@<X8>)
{
  *a1 = &off_1010AD480;
}

uint64_t sub_10079014C(_BYTE *a1, _BYTE *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_100790160(_BYTE *a1, _BYTE *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_100790174(_BYTE *a1, _BYTE *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_100790188(_BYTE *a1, _BYTE *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t sub_10079019C()
{
  return sub_1006A1478((uint64_t)&off_1010AD4A8);
}

uint64_t sub_1007901A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1007901BC(a1, &qword_1011B4D20, &qword_10119F7C8, a2);
}

uint64_t sub_1007901BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v8 = v4;
  v10 = *(_QWORD *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a4, v8, a1);
  v11 = sub_100007E8C(a2);
  v12 = a4 + *(int *)(v11 + 36);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v12, 1, 1, a1);
  v13 = sub_100007E8C(a3);
  result = swift_storeEnumTagMultiPayload(v12, v13, 0);
  *(_BYTE *)(a4 + *(int *)(v11 + 40)) = 2;
  return result;
}

uint64_t sub_10079025C()
{
  return sub_1006A1478((uint64_t)&off_1010AD4D0);
}

uint64_t sub_100790268@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  *a2 = *v2;
  v5 = sub_100007E8C(&qword_1011B0BC8);
  v6 = (char *)a2 + *(int *)(v5 + 36);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 56))(v6, 1, 1);
  v7 = sub_100007E8C(&qword_10119F7C8);
  swift_storeEnumTagMultiPayload(v6, v7, 0);
  *((_BYTE *)a2 + *(int *)(v5 + 40)) = 2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100790300()
{
  return sub_1006A1478((uint64_t)&off_1010AD7C0);
}

uint64_t sub_10079030C@<X0>(uint64_t a1@<X8>)
{
  return sub_100790320(type metadata accessor for ArtistPlaybackSource, (uint64_t *)&unk_1011C82D0, a1);
}

uint64_t sub_100790320@<X0>(uint64_t (*a1)(_QWORD)@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v5 = v3;
  sub_10005B704(v5, a3, a1);
  v7 = sub_100007E8C(a2);
  v8 = a3 + *(int *)(v7 + 36);
  v9 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = sub_100007E8C(&qword_10119F7C8);
  result = swift_storeEnumTagMultiPayload(v8, v10, 0);
  *(_BYTE *)(a3 + *(int *)(v7 + 40)) = 2;
  return result;
}

uint64_t sub_1007903B4()
{
  return sub_1006A1478((uint64_t)&off_1010AD798);
}

id sub_1007903C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  id v4;

  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(id *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 24) = 512;
  swift_bridgeObjectRetain(v2);
  return v4;
}

uint64_t _s5Music14PlaybackSourcePAAE09supportedB5ModesShyAA0B4ModeOGvg_0()
{
  uint64_t v0;
  unint64_t v1;
  char *v2;
  char v3;
  char v5;
  uint64_t v6;

  v0 = 2;
  v1 = sub_1006A1B20();
  v6 = Set.init(minimumCapacity:)(2, &type metadata for PlaybackMode, v1);
  v2 = &byte_1010AA488;
  do
  {
    v3 = *v2++;
    sub_1001947EC(&v5, v3);
    --v0;
  }
  while (v0);
  return v6;
}

uint64_t type metadata accessor for PlaybackEnqueueMode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlaybackEnqueueMode);
}

unint64_t sub_10079047C()
{
  unint64_t result;

  result = qword_1011C81A8;
  if (!qword_1011C81A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaybackMode, &type metadata for PlaybackMode);
    atomic_store(result, (unint64_t *)&qword_1011C81A8);
  }
  return result;
}

void *sub_1007904C0()
{
  return &protocol witness table for Int;
}

unint64_t sub_1007904D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C81B0;
  if (!qword_1011C81B0)
  {
    v1 = sub_100044B54(qword_1011C81B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011C81B0);
  }
  return result;
}

uint64_t sub_10079051C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(a1 + 16);
  result = type metadata accessor for Optional(319, v2);
  if (v4 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, v2);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 0, 2, v6);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1007905A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = v7 + 1;
  if (v7 <= v8)
    v9 = v8;
  else
    v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_DWORD *)(v6 + 80);
  if (v10 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v9 + 1 > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain(v13);
  }
  else
  {
    v14 = *((unsigned __int8 *)a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    if (v14 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
      *((_BYTE *)v4 + v9) = 1;
    }
    else
    {
      if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
      {
        memcpy(v4, a2, v8);
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(v4, a2, v5);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      }
      *((_BYTE *)v4 + v9) = 0;
    }
  }
  return v4;
}

uint64_t sub_100790728(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  if (*(_DWORD *)(v4 + 84))
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = v5 + 1;
  if (v5 > v6)
    v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(a1 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_100790818(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  size_t v8;
  size_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = v7 + 1;
  if (v7 <= v8)
    v9 = v8;
  else
    v9 = *(_QWORD *)(v6 + 64);
  v10 = a2[v9];
  if (v10 >= 2)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X12 }
  }
  if (v10 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
    v12 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v12 = 0;
  }
  *((_BYTE *)a1 + v9) = v12;
  return a1;
}

unsigned __int8 *sub_100790960(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  size_t v8;
  size_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  char v14;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (*(_DWORD *)(v6 + 84))
      v8 = *(_QWORD *)(v6 + 64);
    else
      v8 = v7 + 1;
    if (v7 <= v8)
      v9 = v8;
    else
      v9 = *(_QWORD *)(v6 + 64);
    v10 = a1[v9];
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1
      || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, _QWORD))(v6 + 48))(a1, 1, *(_QWORD *)(a3 + 16)))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    v12 = a2[v9];
    if (v12 >= 2)
    {
      if (v9 <= 3)
        v13 = v9;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    if (v12 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      v14 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v8);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      v14 = 0;
    }
    a1[v9] = v14;
  }
  return a1;
}

void *sub_100790B50(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  size_t v8;
  size_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = v7 + 1;
  if (v7 <= v8)
    v9 = v8;
  else
    v9 = *(_QWORD *)(v6 + 64);
  v10 = a2[v9];
  if (v10 >= 2)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X12 }
  }
  if (v10 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, _QWORD))(v6 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
    v12 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v12 = 0;
  }
  *((_BYTE *)a1 + v9) = v12;
  return a1;
}

unsigned __int8 *sub_100790C98(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  size_t v8;
  size_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  char v14;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (*(_DWORD *)(v6 + 84))
      v8 = *(_QWORD *)(v6 + 64);
    else
      v8 = v7 + 1;
    if (v7 <= v8)
      v9 = v8;
    else
      v9 = *(_QWORD *)(v6 + 64);
    v10 = a1[v9];
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1
      || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, _QWORD))(v6 + 48))(a1, 1, *(_QWORD *)(a3 + 16)))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    v12 = a2[v9];
    if (v12 >= 2)
    {
      if (v9 <= 3)
        v13 = v9;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    if (v12 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      v14 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v8);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      v14 = 0;
    }
    a1[v9] = v14;
  }
  return a1;
}

uint64_t sub_100790E88(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v11;
  int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(v3 + 64);
  if (v4)
    v6 = v5;
  else
    v6 = v5 + 1;
  if (v5 > v6)
    v6 = v5;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_24;
  v7 = v6 + 1;
  v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    v11 = ((a2 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v11))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v11 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v11 < 2)
    {
LABEL_24:
      v13 = *(unsigned __int8 *)(a1 + v6);
      if (v13 >= 2)
        return (v13 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_24;
LABEL_17:
  v12 = (v9 - 1) << v8;
  if (v7 > 3)
    v12 = 0;
  if (!(_DWORD)v7)
    return (v12 + 255);
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100790F54 + 4 * byte_100ECF278[(v7 - 1)]))();
}

void sub_100790FA0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6)
    v8 = v7;
  else
    v8 = v7 + 1;
  if (v7 <= v8)
    v7 = v8;
  v9 = v7 + 1;
  if (a3 < 0xFF)
  {
    v10 = 0;
  }
  else if (v9 <= 3)
  {
    v12 = ((a3 + ~(-1 << (8 * v9)) - 254) >> (8 * v9)) + 1;
    if (HIWORD(v12))
    {
      v10 = &dword_100000004;
    }
    else if (v12 >= 0x100)
    {
      v10 = 2;
    }
    else
    {
      v10 = v12 > 1;
    }
  }
  else
  {
    v10 = &_mh_execute_header.magic + 1;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v11 = a2 - 255;
  if (v9 < 4)
  {
    if ((_DWORD)v7 != -1)
    {
      v13 = v11 & ~(-1 << (8 * v9));
      bzero(a1, v9);
      if ((_DWORD)v9 == 3)
      {
        *a1 = v13;
        *((_BYTE *)a1 + 2) = BYTE2(v13);
      }
      else if ((_DWORD)v9 == 2)
      {
        *a1 = v13;
      }
      else
      {
        *(_BYTE *)a1 = v13;
      }
    }
  }
  else
  {
    bzero(a1, v7 + 1);
    *(_DWORD *)a1 = v11;
  }
  __asm { BR              X10 }
}

uint64_t sub_100791150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_DWORD *)(v2 + 84);
  v4 = *(_QWORD *)(v2 + 64);
  if (v3)
    v5 = v4;
  else
    v5 = v4 + 1;
  if (v4 > v5)
    v5 = v4;
  if (*(unsigned __int8 *)(a1 + v5) < 2u)
    return *(unsigned __int8 *)(a1 + v5);
  if (v5 <= 3)
    v6 = v5;
  else
    v6 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1007911A0 + 4 * byte_100ECF286[v6]))();
}

_BYTE *sub_1007911E8(_BYTE *result, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  size_t v6;
  size_t v7;
  size_t v8;
  char v9;
  int v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  if (v6 <= v7)
    v8 = v7;
  else
    v8 = v6;
  if (a2 > 1)
  {
    if (v8 <= 3)
      v9 = ((a2 - 2) >> (8 * v8)) + 2;
    else
      v9 = 2;
    result[v8] = v9;
    if (v8 >= 4)
      v10 = 4;
    else
      v10 = v8;
    bzero(result, v8);
    __asm { BR              X10 }
  }
  result[v8] = a2;
  return result;
}

uint64_t sub_1007912C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[3];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v11[0] = *(_QWORD *)(v2 - 8) + 64;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(a1 + 24), v2, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
    v8 = type metadata accessor for PlaybackEnqueueMode(319, AssociatedTypeWitness, v6, v7);
    v3 = v8;
    if (v9 <= 0x3F)
    {
      v11[1] = *(_QWORD *)(v8 - 8) + 64;
      v11[2] = &unk_100ECF4D8;
      swift_initStructMetadata(a1, 0, 3, v11, a1 + 32);
      return 0;
    }
  }
  return v3;
}

uint64_t *sub_100791380(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  size_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  char v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v7 + v10;
  v13 = (v7 + v11) & ~v11;
  v14 = *(_QWORD *)(v9 + 64);
  if (*(_DWORD *)(v9 + 84))
    v15 = *(_QWORD *)(v9 + 64);
  else
    v15 = v14 + 1;
  if (v14 <= v15)
    v16 = v15;
  else
    v16 = *(_QWORD *)(v9 + 64);
  v17 = v13 + v16 + 1 + 1;
  v18 = *(_DWORD *)(v6 + 80) | v10;
  v19 = (*(_BYTE *)(v6 + 80) | v10);
  v20 = v18 & 0x100000;
  if (v19 > 7 || v20 != 0 || v17 > 0x18)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v19 + 16) & ~v19));
    swift_retain(v23);
  }
  else
  {
    v24 = AssociatedTypeWitness;
    v25 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v26 = ((unint64_t)a1 + v12) & v25;
    v27 = (unsigned __int8 *)(((unint64_t)a2 + v12) & v25);
    v28 = v27[v16];
    if (v28 >= 2)
    {
      if (v16 <= 3)
        v29 = v16;
      else
        v29 = 4;
      __asm { BR              X12 }
    }
    if (v28 == 1)
    {
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v25, v27, v24);
      v30 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(v27, 1, v24))
      {
        memcpy((void *)(((unint64_t)a1 + v12) & v25), v27, v15);
      }
      else
      {
        (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v25, v27, v24);
        (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v12) & v25, 0, 1, v24);
      }
      v30 = 0;
    }
    *(_BYTE *)(v26 + v16) = v30;
    *(_BYTE *)(v16 + 1 + v26) = v27[v16 + 1];
  }
  return a1;
}

uint64_t sub_100791594(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a2 + 24), v4, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = (v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  if (*(_DWORD *)(v8 + 84))
    v11 = *(_QWORD *)(v8 + 64);
  else
    v11 = v10 + 1;
  if (v10 > v11)
    v11 = *(_QWORD *)(v8 + 64);
  v12 = *(unsigned __int8 *)(v9 + v11);
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X13 }
  }
  if (v12 == 1)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v8 + 8))(v9, AssociatedTypeWitness);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v8 + 8))(v9, AssociatedTypeWitness);
  return result;
}

uint64_t sub_1007916D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unsigned __int8 *v13;
  size_t v14;
  size_t v15;
  size_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)((v8 + v11 + a1) & ~v11);
  v13 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v14 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84))
    v15 = *(_QWORD *)(v10 + 64);
  else
    v15 = v14 + 1;
  if (v14 <= v15)
    v16 = v15;
  else
    v16 = *(_QWORD *)(v10 + 64);
  v17 = v13[v16];
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X12 }
  }
  if (v17 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v10 + 16))(v12, v13, AssociatedTypeWitness);
    v19 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v13, 1, AssociatedTypeWitness))
    {
      memcpy(v12, v13, v15);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v10 + 16))(v12, v13, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, AssociatedTypeWitness);
    }
    v19 = 0;
  }
  *((_BYTE *)v12 + v16) = v19;
  *((_BYTE *)v12 + v16 + 1) = v13[v16 + 1];
  return a1;
}

uint64_t sub_100791880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  int v14;
  size_t v15;
  uint64_t v16;
  size_t v17;
  size_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  size_t v24;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (unsigned __int8 *)((v8 + v11 + a1) & ~v11);
  v13 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v14 = *(_DWORD *)(v10 + 84);
  v15 = *(_QWORD *)(v10 + 64);
  if (v12 != v13)
  {
    v16 = AssociatedTypeWitness;
    if (v14)
      v17 = *(_QWORD *)(v10 + 64);
    else
      v17 = v15 + 1;
    if (v15 <= v17)
      v18 = v17;
    else
      v18 = *(_QWORD *)(v10 + 64);
    v19 = v12[v18];
    if (v19 >= 2)
    {
      if (v18 <= 3)
        v20 = v18;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 1
      || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v12, 1, AssociatedTypeWitness))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v12, v16);
    }
    v21 = v13[v18];
    if (v21 >= 2)
    {
      if (v18 <= 3)
        v22 = v18;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    if (v21 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(v12, v13, v16);
      v23 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v13, 1, v16))
      {
        memcpy(v12, v13, v17);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(v12, v13, v16);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v16);
      }
      v23 = 0;
    }
    v12[v18] = v23;
  }
  if (v14)
    v24 = v15;
  else
    v24 = v15 + 1;
  if (v15 > v24)
    v24 = v15;
  v12[v24 + 1] = v13[v24 + 1];
  return a1;
}

uint64_t sub_100791AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unsigned __int8 *v13;
  size_t v14;
  size_t v15;
  size_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)((v8 + v11 + a1) & ~v11);
  v13 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v14 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84))
    v15 = *(_QWORD *)(v10 + 64);
  else
    v15 = v14 + 1;
  if (v14 <= v15)
    v16 = v15;
  else
    v16 = *(_QWORD *)(v10 + 64);
  v17 = v13[v16];
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X12 }
  }
  if (v17 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v10 + 32))(v12, v13, AssociatedTypeWitness);
    v19 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v13, 1, AssociatedTypeWitness))
    {
      memcpy(v12, v13, v15);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v10 + 32))(v12, v13, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, AssociatedTypeWitness);
    }
    v19 = 0;
  }
  *((_BYTE *)v12 + v16) = v19;
  *((_BYTE *)v12 + v16 + 1) = v13[v16 + 1];
  return a1;
}

uint64_t sub_100791CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  int v14;
  size_t v15;
  uint64_t v16;
  size_t v17;
  size_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  size_t v24;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (unsigned __int8 *)((v8 + v11 + a1) & ~v11);
  v13 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v14 = *(_DWORD *)(v10 + 84);
  v15 = *(_QWORD *)(v10 + 64);
  if (v12 != v13)
  {
    v16 = AssociatedTypeWitness;
    if (v14)
      v17 = *(_QWORD *)(v10 + 64);
    else
      v17 = v15 + 1;
    if (v15 <= v17)
      v18 = v17;
    else
      v18 = *(_QWORD *)(v10 + 64);
    v19 = v12[v18];
    if (v19 >= 2)
    {
      if (v18 <= 3)
        v20 = v18;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 1
      || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v12, 1, AssociatedTypeWitness))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v12, v16);
    }
    v21 = v13[v18];
    if (v21 >= 2)
    {
      if (v18 <= 3)
        v22 = v18;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    if (v21 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(v12, v13, v16);
      v23 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v13, 1, v16))
      {
        memcpy(v12, v13, v17);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(v12, v13, v16);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v16);
      }
      v23 = 0;
    }
    v12[v18] = v23;
  }
  if (v14)
    v24 = v15;
  else
    v24 = v15 + 1;
  if (v15 > v24)
    v24 = v15;
  v12[v24 + 1] = v13[v24 + 1];
  return a1;
}

uint64_t sub_100791F10(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v9 = *(_QWORD *)(v8 + 64);
  if (v7 <= 0xFE)
    v10 = 254;
  else
    v10 = v7;
  if (*(_DWORD *)(v8 + 84))
    v11 = *(_QWORD *)(v8 + 64);
  else
    v11 = v9 + 1;
  if (v9 > v11)
    v11 = *(_QWORD *)(v8 + 64);
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = *(_QWORD *)(v6 + 64) + v12;
  if (a2 <= v10)
    goto LABEL_29;
  v14 = v11 + (v13 & ~v12) + 2;
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v18 = ((a2 - v10 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 < 2)
    {
LABEL_29:
      if (v7 >= 0xFE)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
      v21 = *(unsigned __int8 *)(((v13 + a1) & ~v12) + v11);
      if (v21 >= 2)
        return (v21 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_29;
LABEL_20:
  v19 = (v16 - 1) << v15;
  if (v14 > 3)
    v19 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v20 = v14;
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v10 + v19 + 1;
}

void sub_1007920D8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  size_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;

  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, *(_QWORD *)(a4 + 24), v7, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v11 = *(_QWORD *)(v10 + 64);
  if (v9 <= 0xFE)
    v12 = 254;
  else
    v12 = v9;
  v13 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v14 = *(_QWORD *)(v10 + 64);
  else
    v14 = v11 + 1;
  if (v11 > v14)
    v14 = v11;
  v15 = v14 + ((*(_QWORD *)(v8 + 64) + v13) & ~v13) + 2;
  if (a3 <= v12)
  {
    v16 = 0;
  }
  else if (v15 <= 3)
  {
    v18 = ((a3 - v12 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v18))
    {
      v16 = &dword_100000004;
    }
    else if (v18 >= 0x100)
    {
      v16 = 2;
    }
    else
    {
      v16 = v18 > 1;
    }
  }
  else
  {
    v16 = &_mh_execute_header.magic + 1;
  }
  if (v12 < a2)
  {
    v17 = ~v12 + a2;
    if (v15 < 4)
    {
      if ((_DWORD)v14 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v13) & ~(_DWORD)v13) != -2)
      {
        v19 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if ((_DWORD)v15 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if ((_DWORD)v15 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_10079237C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x100792364);
}

void sub_10079238C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x100792364);
}

void sub_100792394()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x100792364);
}

uint64_t storeEnumTagSinglePayload for PlaybackMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1007923EC + 4 * byte_100ECF2CE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100792420 + 4 * byte_100ECF2C9[v4]))();
}

uint64_t sub_100792420(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100792428(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100792430);
  return result;
}

uint64_t sub_10079243C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100792444);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100792448(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100792450(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackMode()
{
  return &type metadata for PlaybackMode;
}

void sub_10079246C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Music12VolumeSlider_route;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC5Music12VolumeSlider_route);
  if (v5)
  {
    if (a1)
    {
      sub_10004A07C(0, qword_1011C8420, MPAVRoute_ptr);
      v6 = a1;
      v7 = v5;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
        return;
      v5 = *(void **)(v2 + v4);
    }
  }
  else
  {
    if (!a1)
      return;
    v5 = 0;
  }
  v12 = objc_msgSend(objc_allocWithZone((Class)MPVolumeControllerRouteDataSource), "initWithGroupRoute:outputDeviceRoute:", v5, 0);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Music12VolumeSlider_ignoreAnimationForVolumeEvents) = 1;
  v9 = objc_msgSend(objc_allocWithZone((Class)MPVolumeController), "initWithDataSource:", v12);
  v10 = OBJC_IVAR____TtC5Music12VolumeSlider_volumeController;
  v11 = *(void **)(v2 + OBJC_IVAR____TtC5Music12VolumeSlider_volumeController);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music12VolumeSlider_volumeController) = v9;

  objc_msgSend(*(id *)(v2 + v10), "setDelegate:", v2);
  objc_msgSend(*(id *)(v2 + v10), "updateVolumeValue");
  sub_100792EE0(0);

}

char *sub_1007925C0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void *v28;
  char *v29;
  double v30;
  uint64_t v31;
  double v32;
  double v33;
  void *v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  NSString v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  Class isa;
  id v78;
  double *v79;
  id v80;
  objc_super v81;

  v9 = OBJC_IVAR____TtC5Music12VolumeSlider_volumeController;
  v10 = objc_allocWithZone((Class)MPVolumeControllerSystemDataSource);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  v13 = objc_msgSend(objc_allocWithZone((Class)MPVolumeController), "initWithDataSource:", v12);

  *(_QWORD *)&v4[v9] = v13;
  v11[OBJC_IVAR____TtC5Music12VolumeSlider_isTracking] = 0;
  v11[OBJC_IVAR____TtC5Music12VolumeSlider_ignoreAnimationForVolumeEvents] = 0;
  v14 = OBJC_IVAR____TtC5Music12VolumeSlider_elapsedTrackColor;
  v15 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v11[v14] = objc_msgSend(v15, "whiteColor");
  v16 = OBJC_IVAR____TtC5Music12VolumeSlider_remainingTrackColor;
  *(_QWORD *)&v11[v16] = objc_msgSend(v15, "systemFillColor");
  v17 = OBJC_IVAR____TtC5Music12VolumeSlider_trackingColor;
  v18 = UIColor.MusicTint.normal.unsafeMutableAddressor();
  v19 = (void *)*v18;
  *(_QWORD *)&v11[v17] = *v18;
  v20 = OBJC_IVAR____TtC5Music12VolumeSlider_slider;
  v21 = objc_allocWithZone((Class)UISlider);
  v22 = v19;
  v23 = objc_msgSend(v21, "init");
  v24 = UIView.forAutolayout.getter();

  *(_QWORD *)&v11[v20] = v24;
  v25 = OBJC_IVAR____TtC5Music12VolumeSlider_trackLayoutGuide;
  *(_QWORD *)&v11[v25] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Music12VolumeSlider_route] = 0;
  v26 = &v11[OBJC_IVAR____TtC5Music12VolumeSlider_volumeChangeHandler];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;

  v81.receiver = v11;
  v81.super_class = (Class)type metadata accessor for VolumeSlider();
  v27 = (char *)objc_msgSendSuper2(&v81, "initWithFrame:", a1, a2, a3, a4);
  v28 = *(void **)&v27[OBJC_IVAR____TtC5Music12VolumeSlider_volumeController];
  v29 = v27;
  objc_msgSend(v28, "setDelegate:", v29);
  sub_100792EE0(0);
  v80 = objc_msgSend(objc_allocWithZone((Class)_UISliderFluidConfiguration), "init");
  objc_msgSend(v80, "setDelegate:", v29);
  v30 = *(double *)SliderView.Specs.expandedBarHeight.unsafeMutableAddressor();
  v79 = (double *)SliderView.Specs.barHeight.unsafeMutableAddressor();
  objc_msgSend(v80, "setExpansionFactor:", v30 / *v79);
  objc_msgSend(v80, "setStretchLimit:", *(double *)SliderView.Specs.stretchLimit.unsafeMutableAddressor());
  v31 = OBJC_IVAR____TtC5Music12VolumeSlider_slider;
  objc_msgSend(*(id *)&v29[OBJC_IVAR____TtC5Music12VolumeSlider_slider], "_setSliderConfiguration:", v80);
  LODWORD(v32) = 0;
  objc_msgSend(*(id *)&v29[v31], "setMinimumValue:", v32);
  LODWORD(v33) = 1.0;
  objc_msgSend(*(id *)&v29[v31], "setMaximumValue:", v33);
  v34 = *(void **)&v29[v31];
  v35 = sub_100793DBC();
  v36 = v34;
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.MediaControls, v35) & 1) != 0)
    v37 = 111;
  else
    v37 = 110;
  objc_msgSend(v36, "_setSliderStyle:", v37);

  v38 = *(void **)&v29[v31];
  v39 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v40 = v38;
  v41 = objc_msgSend(v39, "configurationWithPointSize:", 14.0);
  v42 = String._bridgeToObjectiveC()();
  v43 = (void *)objc_opt_self(UIImage);
  v44 = objc_msgSend(v43, "systemImageNamed:withConfiguration:", v42, v41);

  objc_msgSend(v40, "setMinimumValueImage:", v44);
  v45 = *(id *)&v29[v31];
  v46 = objc_msgSend(v39, "configurationWithPointSize:", 14.0);
  v47 = String._bridgeToObjectiveC()();
  v48 = objc_msgSend(v43, "systemImageNamed:withConfiguration:", v47, v46);

  objc_msgSend(v45, "setMaximumValueImage:", v48);
  objc_msgSend(*(id *)&v29[v31], "addTarget:action:forControlEvents:", v29, "sliderDidChangeValue:", 4096);
  objc_msgSend(v29, "addSubview:", *(_QWORD *)&v29[v31]);
  v49 = OBJC_IVAR____TtC5Music12VolumeSlider_trackLayoutGuide;
  objc_msgSend(v29, "addLayoutGuide:", *(_QWORD *)&v29[OBJC_IVAR____TtC5Music12VolumeSlider_trackLayoutGuide]);
  v78 = (id)objc_opt_self(NSLayoutConstraint);
  v50 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v51 = swift_allocObject(v50, 96, 7);
  *(_OWORD *)(v51 + 16) = xmmword_100EC1140;
  v52 = objc_msgSend(*(id *)&v29[v31], "leadingAnchor");
  v53 = objc_msgSend(v29, "leadingAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v51 + 32) = v54;
  v55 = objc_msgSend(*(id *)&v29[v31], "trailingAnchor");
  v56 = objc_msgSend(v29, "trailingAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  *(_QWORD *)(v51 + 40) = v57;
  v58 = objc_msgSend(*(id *)&v29[v31], "topAnchor");
  v59 = objc_msgSend(v29, "topAnchor");
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

  *(_QWORD *)(v51 + 48) = v60;
  v61 = objc_msgSend(*(id *)&v29[v31], "bottomAnchor");
  v62 = objc_msgSend(v29, "bottomAnchor");
  v63 = objc_msgSend(v61, "constraintEqualToAnchor:", v62);

  *(_QWORD *)(v51 + 56) = v63;
  v64 = objc_msgSend(*(id *)&v29[v49], "leadingAnchor");
  v65 = objc_msgSend(v29, "leadingAnchor");
  v66 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

  *(_QWORD *)(v51 + 64) = v66;
  v67 = objc_msgSend(*(id *)&v29[v49], "trailingAnchor");
  v68 = objc_msgSend(v29, "trailingAnchor");
  v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

  *(_QWORD *)(v51 + 72) = v69;
  v70 = objc_msgSend(*(id *)&v29[v49], "centerYAnchor");
  v71 = objc_msgSend(v29, "centerYAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  *(_QWORD *)(v51 + 80) = v72;
  v73 = objc_msgSend(*(id *)&v29[v49], "heightAnchor");
  v74 = objc_msgSend(v73, "constraintEqualToConstant:", *v79);

  *(_QWORD *)(v51 + 88) = v74;
  specialized Array._endMutation()(v75);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v78, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  return v29;
}

void sub_100792E00()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  char **v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for VolumeSlider();
  objc_msgSendSuper2(&v5, "didMoveToWindow");
  v1 = objc_msgSend(v0, "window");

  v2 = objc_msgSend((id)objc_opt_self(MPVolumeHUDController), "sharedInstance");
  v3 = v2;
  v4 = &selRef_removeVolumeDisplay_;
  if (v1)
    v4 = &selRef_addVolumeDisplay_;
  objc_msgSend(v2, *v4, v0);

}

id sub_100792EE0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  float v5;
  float v6;
  uint64_t v7;
  double v8;

  v3 = OBJC_IVAR____TtC5Music12VolumeSlider_volumeController;
  v4 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Music12VolumeSlider_volumeController), "isVolumeControlAvailable");
  objc_msgSend(*(id *)(v1 + v3), "volumeValue");
  v6 = v5;
  v7 = OBJC_IVAR____TtC5Music12VolumeSlider_slider;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Music12VolumeSlider_slider), "value");
  *(float *)&v8 = vabds_f32(*(float *)&v8, v6);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music12VolumeSlider_ignoreAnimationForVolumeEvents) == 1)
  {
    if (*(float *)&v8 > 0.00000011921)
    {
      a1 = 0;
      *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music12VolumeSlider_ignoreAnimationForVolumeEvents) = 0;
LABEL_5:
      *(float *)&v8 = v6;
      objc_msgSend(*(id *)(v1 + v7), "setValue:animated:", a1 & 1, v8, 3.18618444e-58);
    }
  }
  else if (*(float *)&v8 > 0.00000011921)
  {
    goto LABEL_5;
  }
  objc_msgSend(*(id *)(v1 + v7), "setEnabled:", v4);
  return objc_msgSend(*(id *)(v1 + v7), "_setMinimumTrackVisible:withDuration:", v4, 0.0);
}

void sub_100792FCC(void *a1)
{
  uint64_t v1;
  id v3;
  void (*v4)(__n128);
  uint64_t v5;
  __n128 v6;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC5Music12VolumeSlider_volumeController);
  objc_msgSend(a1, "value");
  objc_msgSend(v3, "setVolume:withNotificationDelay:");

  v4 = *(void (**)(__n128))(v1 + OBJC_IVAR____TtC5Music12VolumeSlider_volumeChangeHandler);
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music12VolumeSlider_volumeChangeHandler + 8);
    v6 = swift_retain();
    v4(v6);
    sub_10004BA30((uint64_t)v4, v5);
  }
}

id sub_1007930BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v1 = OBJC_IVAR____TtC5Music12VolumeSlider_slider;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Music12VolumeSlider_isTracking))
    v2 = &OBJC_IVAR____TtC5Music12VolumeSlider_trackingColor;
  else
    v2 = &OBJC_IVAR____TtC5Music12VolumeSlider_elapsedTrackColor;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music12VolumeSlider_slider), "setMinimumTrackTintColor:", *(_QWORD *)(v0 + *v2));
  return objc_msgSend(*(id *)(v0 + v1), "setMaximumTrackTintColor:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music12VolumeSlider_remainingTrackColor));
}

id sub_100793130()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VolumeSlider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VolumeSlider()
{
  return objc_opt_self(_TtC5Music12VolumeSlider);
}

id sub_100793480(char *a1)
{
  char *v2;
  __int128 v3;
  __int128 v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t *v10;
  _OWORD v12[3];

  v2 = SliderView.Specs.expandedTransform.unsafeMutableAddressor();
  v3 = *((_OWORD *)v2 + 1);
  v4 = *((_OWORD *)v2 + 2);
  v12[0] = *(_OWORD *)v2;
  v12[1] = v3;
  v12[2] = v4;
  objc_msgSend(a1, "setTransform:", v12);
  v5 = *(void **)&a1[OBJC_IVAR____TtC5Music12VolumeSlider_slider];
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v5;
  v8 = objc_msgSend(v6, "labelColor");
  objc_msgSend(v7, "setTintColor:", v8);

  v9 = OBJC_IVAR____TtC5Music12VolumeSlider_slider;
  if (a1[OBJC_IVAR____TtC5Music12VolumeSlider_isTracking])
    v10 = &OBJC_IVAR____TtC5Music12VolumeSlider_trackingColor;
  else
    v10 = &OBJC_IVAR____TtC5Music12VolumeSlider_elapsedTrackColor;
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Music12VolumeSlider_slider], "setMinimumTrackTintColor:", *(_QWORD *)&a1[*v10]);
  return objc_msgSend(*(id *)&a1[v9], "setMaximumTrackTintColor:", *(_QWORD *)&a1[OBJC_IVAR____TtC5Music12VolumeSlider_remainingTrackColor]);
}

void sub_1007936F8(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  id v5;
  void (*v6)(__n128);
  uint64_t v7;
  __n128 v8;
  int v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  void *v15;
  _BYTE *v16;
  _QWORD v17[6];

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Music12VolumeSlider_isTracking;
  v2[OBJC_IVAR____TtC5Music12VolumeSlider_isTracking] = 0;
  v5 = *(id *)&v2[OBJC_IVAR____TtC5Music12VolumeSlider_volumeController];
  objc_msgSend(a1, "value");
  objc_msgSend(v5, "setVolume:withNotificationDelay:");

  v6 = *(void (**)(__n128))&v2[OBJC_IVAR____TtC5Music12VolumeSlider_volumeChangeHandler];
  if (v6)
  {
    v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music12VolumeSlider_volumeChangeHandler + 8];
    v8 = swift_retain();
    v6(v8);
    sub_10004BA30((uint64_t)v6, v7);
  }
  v9 = v2[v4];
  v10 = swift_allocObject(&unk_1010DB8C8, 24, 7);
  *(_QWORD *)(v10 + 16) = v2;
  if (v9)
    v11 = 26.5;
  else
    v11 = 40.0;
  if (v9)
    v12 = 288.0;
  else
    v12 = 500.0;
  if (v9)
    v13 = 1.0;
  else
    v13 = 2.0;
  v14 = (void *)objc_opt_self(UIView);
  v17[4] = sub_100793A2C;
  v17[5] = v10;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_1001DBD98;
  v17[3] = &unk_1010DB8E0;
  v15 = _Block_copy(v17);
  v16 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v14, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 2, v15, 0, 1.0, 0.0, v13, v12, v11, 0.0);
  _Block_release(v15);
  swift_release();
}

id sub_1007938C8(char *a1)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD v5[6];

  v5[0] = 0x3FF0000000000000;
  v5[1] = 0;
  v5[2] = 0;
  v5[3] = 0x3FF0000000000000;
  v5[4] = 0;
  v5[5] = 0;
  objc_msgSend(a1, "setTransform:", v5);
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Music12VolumeSlider_slider], "setTintColor:", 0);
  v2 = OBJC_IVAR____TtC5Music12VolumeSlider_slider;
  if (a1[OBJC_IVAR____TtC5Music12VolumeSlider_isTracking])
    v3 = &OBJC_IVAR____TtC5Music12VolumeSlider_trackingColor;
  else
    v3 = &OBJC_IVAR____TtC5Music12VolumeSlider_elapsedTrackColor;
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Music12VolumeSlider_slider], "setMinimumTrackTintColor:", *(_QWORD *)&a1[*v3]);
  return objc_msgSend(*(id *)&a1[v2], "setMaximumTrackTintColor:", *(_QWORD *)&a1[OBJC_IVAR____TtC5Music12VolumeSlider_remainingTrackColor]);
}

uint64_t sub_100793A08()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100793A2C()
{
  uint64_t v0;

  return sub_1007938C8(*(char **)(v0 + 16));
}

uint64_t sub_100793A34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100793A44(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100793A4C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Music12VolumeSlider_volumeController;
  v3 = objc_msgSend(objc_allocWithZone((Class)MPVolumeControllerSystemDataSource), "init");
  v4 = objc_msgSend(objc_allocWithZone((Class)MPVolumeController), "initWithDataSource:", v3);

  *(_QWORD *)&v1[v2] = v4;
  v1[OBJC_IVAR____TtC5Music12VolumeSlider_isTracking] = 0;
  v1[OBJC_IVAR____TtC5Music12VolumeSlider_ignoreAnimationForVolumeEvents] = 0;
  v5 = OBJC_IVAR____TtC5Music12VolumeSlider_elapsedTrackColor;
  v6 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v1[v5] = objc_msgSend(v6, "whiteColor");
  v7 = OBJC_IVAR____TtC5Music12VolumeSlider_remainingTrackColor;
  *(_QWORD *)&v1[v7] = objc_msgSend(v6, "systemFillColor");
  v8 = OBJC_IVAR____TtC5Music12VolumeSlider_trackingColor;
  v9 = UIColor.MusicTint.normal.unsafeMutableAddressor();
  v10 = (void *)*v9;
  *(_QWORD *)&v1[v8] = *v9;
  v11 = OBJC_IVAR____TtC5Music12VolumeSlider_slider;
  v12 = objc_allocWithZone((Class)UISlider);
  v13 = v10;
  v14 = objc_msgSend(v12, "init");
  v15 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v11] = v15;
  v16 = OBJC_IVAR____TtC5Music12VolumeSlider_trackLayoutGuide;
  *(_QWORD *)&v1[v16] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music12VolumeSlider_route] = 0;
  v17 = &v1[OBJC_IVAR____TtC5Music12VolumeSlider_volumeChangeHandler];
  *v17 = 0;
  v17[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/VolumeSlider.swift", 24, 2, 92, 0);
  __break(1u);
}

void sub_100793BFC()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  void (*v3)(__n128);
  uint64_t v4;
  __n128 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  _BYTE *v14;
  _QWORD v15[6];

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Music12VolumeSlider_isTracking;
  v0[OBJC_IVAR____TtC5Music12VolumeSlider_isTracking] = 1;
  v3 = *(void (**)(__n128))&v0[OBJC_IVAR____TtC5Music12VolumeSlider_volumeChangeHandler];
  if (v3)
  {
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music12VolumeSlider_volumeChangeHandler + 8];
    v5 = swift_retain();
    v3(v5);
    sub_10004BA30((uint64_t)v3, v4);
    v6 = v1[v2];
    v7 = swift_allocObject(&unk_1010DB918, 24, 7);
    *(_QWORD *)(v7 + 16) = v1;
    if ((v6 & 1) == 0)
    {
      v8 = 0x4044000000000000;
      goto LABEL_6;
    }
  }
  else
  {
    v7 = swift_allocObject(&unk_1010DB918, 24, 7);
    *(_QWORD *)(v7 + 16) = v1;
    v6 = 1;
  }
  v8 = 0x403A800000000000;
LABEL_6:
  v9 = *(double *)&v8;
  if ((v6 & 1) != 0)
    v10 = 288.0;
  else
    v10 = 500.0;
  if ((v6 & 1) != 0)
    v11 = 1.0;
  else
    v11 = 2.0;
  v12 = (void *)objc_opt_self(UIView);
  v15[4] = sub_100793DB4;
  v15[5] = v7;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_1001DBD98;
  v15[3] = &unk_1010DB930;
  v13 = _Block_copy(v15);
  v14 = v1;
  swift_retain();
  swift_release();
  objc_msgSend(v12, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 2, v13, 0, 1.0, 0.0, v11, v10, v9, 0.0);
  _Block_release(v13);
  swift_release();
}

id sub_100793DB4()
{
  uint64_t v0;

  return sub_100793480(*(char **)(v0 + 16));
}

unint64_t sub_100793DBC()
{
  unint64_t result;

  result = qword_1011C8418;
  if (!qword_1011C8418)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.MediaControls, &type metadata for Feature.MediaControls);
    atomic_store(result, (unint64_t *)&qword_1011C8418);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchHeader()
{
  return &type metadata for SearchHeader;
}

uint64_t sub_100793E1C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FACBD8, 1);
}

uint64_t sub_100793E2C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECF5D8);
  v10 = v3;
  v5 = sub_10044C45C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v5);
  swift_release();
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  if (v6)
    v8 = *(_QWORD *)(v3 + 24);
  else
    v8 = 0;
  *a2 = v6;
  a2[1] = v8;
  return sub_100048AAC(v6, v7);
}

double sub_100793EAC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  double result;
  _QWORD v9[7];
  uint64_t v10;

  v2 = *a1;
  v3 = a1[1];
  if (*a1)
    v4 = a1[1];
  else
    v4 = 0;
  v5 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ECF5D8);
  v9[2] = v5;
  v9[3] = v2;
  v9[4] = v4;
  v10 = v5;
  sub_100048AAC(v2, v3);
  v7 = sub_10044C45C();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_1007946D4, v9, (char *)&type metadata for () + 8, v7);
  sub_10004BA30(v2, v3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100793F64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECF588);
  v7 = v3;
  v5 = sub_10044C45C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

double sub_100793FDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ECF588);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_10044C45C();
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1007946F0, v7, (char *)&type metadata for () + 8, v5);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

__n128 sub_10079407C@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  __n128 result;
  uint64_t v10;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECF5B0);
  v10 = v3;
  v5 = sub_10044C45C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v5);
  swift_release();
  v6 = *(_QWORD *)(v3 + 88);
  v7 = *(_BYTE *)(v3 + 96);
  v8 = *(_OWORD *)(v3 + 56);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + 40);
  *(_OWORD *)(a2 + 16) = v8;
  result = *(__n128 *)(v3 + 72);
  *(__n128 *)(a2 + 32) = result;
  *(_QWORD *)(a2 + 48) = v6;
  *(_BYTE *)(a2 + 56) = v7;
  return result;
}

double sub_10079410C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;
  _BYTE v9[64];

  sub_10044C16C(a1, (uint64_t)v9);
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ECF5B0);
  v7[2] = v3;
  v7[3] = v9;
  v8 = v3;
  v5 = sub_10044C45C();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1007945CC, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1007941A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  KeyPath = swift_getKeyPath(&unk_100ECF588);
  v15 = a1;
  v5 = sub_10044C45C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, KeyPath, v5);
  swift_release();
  v6 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  v8 = static Edge.Set.horizontal.getter(v7);
  v9 = swift_getKeyPath(&unk_100ECF5B0);
  v15 = a1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, v9, v5);
  swift_release();
  v10 = (unint64_t)*(unsigned __int8 *)(a1 + 66) << 16;
  v11 = 0.0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  if (v10 != 0x20000)
    v11 = EdgeInsets.init(_all:)(*(double *)(a1 + 56));
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = sub_1007945BC;
  *(_QWORD *)(a2 + 16) = a1;
  *(_BYTE *)(a2 + 24) = v8;
  *(double *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 48) = v13;
  *(_QWORD *)(a2 + 56) = v14;
  *(_BYTE *)(a2 + 64) = v10 == 0x20000;
}

uint64_t sub_1007942BC(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t KeyPath;
  unint64_t v17;
  __n128 v18;
  void (*v19)(__n128);
  uint64_t v20;
  __n128 v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v36;
  uint64_t v37;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v36 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PlaybackIntentDescriptor(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - v11;
  v13 = sub_100007E8C(&qword_1011A9A10);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100ECF5D8);
  v37 = a2;
  v17 = sub_10044C45C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v37, KeyPath, v17);
  v18 = swift_release();
  v19 = *(void (**)(__n128))(a2 + 16);
  if (v19)
  {
    v20 = *(_QWORD *)(a2 + 24);
    v21 = swift_retain();
    v19(v21);
    sub_10004BA30((uint64_t)v19, v20);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v15, 1, 1, v6, v18);
  }
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v22(v15, 1, v6))
  {
    v23 = (void *)PlaybackIntentDescriptor.intent.getter();
    objc_msgSend(v23, "setShuffleMode:", a1 == 1);

    v24 = (void *)PlaybackIntentDescriptor.intent.getter();
    objc_msgSend(v24, "setRepeatMode:", 0);

    v15[*(int *)(v6 + 32)] = a1 == 2;
  }
  if (!v22(v15, 1, v6))
  {
    sub_1001493F0((uint64_t)v15, (uint64_t)v12);
    v25 = type metadata accessor for TaskPriority(0);
    v26 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v36, 1, 1, v25);
    sub_1001493F0((uint64_t)v12, (uint64_t)v9);
    type metadata accessor for MainActor(0);
    v28 = static MainActor.shared.getter(v27);
    v29 = *(unsigned __int8 *)(v7 + 80);
    v30 = (v29 + 32) & ~v29;
    v31 = (v8 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    v33 = swift_allocObject(&unk_1010DB990, v32 + 16, v29 | 7);
    *(_QWORD *)(v33 + 16) = v28;
    *(_QWORD *)(v33 + 24) = &protocol witness table for MainActor;
    sub_100149448((uint64_t)v9, v33 + v30);
    *(_QWORD *)(v33 + v31) = 0;
    v34 = (_QWORD *)(v33 + v32);
    *v34 = 0;
    v34[1] = 0;
    sub_100166D14(v26, (uint64_t)&unk_1011A3D90, v33);
    swift_release();
    sub_100108888((uint64_t)v12);
  }
  return sub_1003F3248((uint64_t)v15);
}

void sub_1007945AC(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_1007941A4(*v1, a1);
}

uint64_t sub_1007945BC(char a1)
{
  uint64_t v1;

  return sub_1007942BC(a1, v1);
}

uint64_t sub_1007945CC()
{
  uint64_t v0;

  return sub_10044BE94(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1007945EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = (id *)(v0 + v3);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {

  }
  v8 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (id *)((char *)v5 + *(int *)(v1 + 28));
  if (v9[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v9);

  if (*(_QWORD *)(v0 + v8))
    swift_release();
  return swift_deallocObject(v0, v8 + 16);
}

uint64_t sub_1007946D4()
{
  uint64_t *v0;

  return sub_10044BD14(v0[2], v0[3], v0[4]);
}

uint64_t sub_1007946F0()
{
  uint64_t v0;

  return sub_10044BDCC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10079470C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  _QWORD v49[5];
  unint64_t v50;

  v1 = a1;
  v50 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_1001B10A4();
    v5 = sub_1000A569C();
    v6 = Set.Iterator.init(_cocoa:)(v49, v3, v4, v5);
    v1 = v49[0];
    v46 = v49[1];
    v7 = v49[2];
    v8 = v49[3];
    v9 = v49[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v46 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v7 = v11;
    v8 = 0;
  }
  v44 = v7;
  v45 = (unint64_t)(v7 + 64) >> 6;
  while (v1 < 0)
  {
    v17 = __CocoaSet.Iterator.next()(v6);
    if (!v17)
      goto LABEL_48;
    v18 = v17;
    v47 = v17;
    v19 = sub_1001B10A4();
    swift_unknownObjectRetain(v18, v20);
    swift_dynamicCast(&v48, &v47, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v21 = v48;
    swift_unknownObjectRelease(v18);
    v16 = v8;
    v14 = v9;
    if (!v21)
      goto LABEL_48;
LABEL_37:
    objc_opt_self(UIWindowScene);
    v25 = swift_dynamicCastObjCClass(v21);
    if (!v25)
      goto LABEL_12;
    v26 = (void *)v25;
    v21 = v21;
    v27 = objc_msgSend(v26, "session");
    v28 = objc_msgSend(v27, "role");

    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIWindowSceneSessionRoleApplication);
    v34 = v32;
    if (v29 == v33 && v31 == v32)
    {

      swift_bridgeObjectRelease_n(v31, 2);
    }
    else
    {
      v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v33, v32, 0);

      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v34);
      if ((v35 & 1) == 0)
        goto LABEL_11;
    }
    v36 = objc_msgSend(v21, "delegate", v44);
    if (!v36)
    {
LABEL_11:

LABEL_12:
      goto LABEL_13;
    }
    v37 = v36;
    v38 = type metadata accessor for MainSceneDelegate();
    v39 = swift_dynamicCastClass(v37, v38);

    if (v39)
    {
      swift_unknownObjectRelease(v37);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
      v42 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v41 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v42 >= v41 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
      v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v26);
      v6 = (_QWORD *)specialized Array._endMutation()(v43);
    }
    else
    {

      swift_unknownObjectRelease(v37);
    }
LABEL_13:
    v8 = v16;
    v9 = v14;
  }
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
LABEL_36:
    v21 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v21)
      goto LABEL_48;
    goto LABEL_37;
  }
  v22 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v22 >= v45)
      goto LABEL_48;
    v23 = *(_QWORD *)(v46 + 8 * v22);
    v16 = v8 + 1;
    if (!v23)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v45)
        goto LABEL_48;
      v23 = *(_QWORD *)(v46 + 8 * v16);
      if (!v23)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v45)
          goto LABEL_48;
        v23 = *(_QWORD *)(v46 + 8 * v16);
        if (!v23)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v45)
            goto LABEL_48;
          v23 = *(_QWORD *)(v46 + 8 * v16);
          if (!v23)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v45)
              goto LABEL_48;
            v23 = *(_QWORD *)(v46 + 8 * v16);
            if (!v23)
            {
              v24 = v8 + 6;
              while (v45 != v24)
              {
                v23 = *(_QWORD *)(v46 + 8 * v24++);
                if (v23)
                {
                  v16 = v24 - 1;
                  goto LABEL_35;
                }
              }
LABEL_48:
              sub_10004FA7C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_35:
    v14 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v16 << 6);
    goto LABEL_36;
  }
  __break(1u);
}

void sub_100794B44()
{
  uint64_t ObjectType;
  id v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t MetatypeMetadata;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  ObjectType = swift_getObjectType();
  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "connectedScenes");
  v3 = sub_1001B10A4();
  v4 = sub_1000A569C();
  v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v2, v3, v4);

  sub_10079470C(v5);
  v7 = v6;
  swift_bridgeObjectRelease(v5);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v14 = v7;
    else
      v14 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v7);
    if (v15)
      goto LABEL_3;
LABEL_17:

    swift_bridgeObjectRelease(v7);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_17;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v8 = *(id *)(v7 + 32);
  }
  v9 = v8;

  v10 = objc_msgSend(v9, "delegate", swift_bridgeObjectRelease(v7).n128_f64[0]);
  if (v10
    && (v28 = (uint64_t)v10,
        v11 = sub_100007E8C(&qword_1011A9300),
        v12 = sub_100007E8C(&qword_1011A3120),
        (swift_dynamicCast(&v29, &v28, v11, v12, 6) & 1) != 0))
  {
    if (*((_QWORD *)&v30 + 1))
    {
      v13 = *(_QWORD *)(*sub_100007E68(&v29, *((uint64_t *)&v30 + 1))
                      + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
      swift_retain(v13);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v29);

      if (v13)
        return;
      goto LABEL_18;
    }
  }
  else
  {
    v31 = 0;
    v29 = 0u;
    v30 = 0u;
  }
  sub_1006DCBC4((uint64_t)&v29);

LABEL_18:
  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100048B14(v16, (uint64_t)qword_10124CEC8);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v28 = v21;
    *(_QWORD *)&v29 = ObjectType;
    *(_DWORD *)v20 = 136315138;
    MetatypeMetadata = swift_getMetatypeMetadata(ObjectType);
    v23 = String.init<A>(describing:)(&v29, MetatypeMetadata);
    v25 = v24;
    *(_QWORD *)&v29 = sub_100322200(v23, v24, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, (char *)&v29 + 8);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s cannot obtain AppInterfaceContext", v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }

  v26 = sub_100794EBC();
  swift_allocError(&_s30InterfaceContextProvidingErrorON, v26, 0, 0);
  swift_willThrow(v27);
}

unint64_t sub_100794EBC()
{
  unint64_t result;

  result = qword_1011C8438;
  if (!qword_1011C8438)
  {
    result = swift_getWitnessTable(&unk_100ECF6C0, &_s30InterfaceContextProvidingErrorON);
    atomic_store(result, (unint64_t *)&qword_1011C8438);
  }
  return result;
}

uint64_t sub_100794F00()
{
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E44B60);
}

uint64_t _s30InterfaceContextProvidingErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100794F5C + 4 * byte_100ECF600[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100794F7C + 4 * byte_100ECF605[v4]))();
}

_BYTE *sub_100794F5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100794F7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100794F84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100794F8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100794F94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100794F9C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s30InterfaceContextProvidingErrorOMa()
{
  return &_s30InterfaceContextProvidingErrorON;
}

unint64_t sub_100794FBC()
{
  unint64_t result;

  result = qword_1011C8440;
  if (!qword_1011C8440)
  {
    result = swift_getWitnessTable(&unk_100ECF698, &_s30InterfaceContextProvidingErrorON);
    atomic_store(result, (unint64_t *)&qword_1011C8440);
  }
  return result;
}

uint64_t sub_100795000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch(sub_10079501C, 0, 0);
}

uint64_t sub_10079501C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  int *v9;

  v2 = v0[4];
  v1 = v0[5];
  v3 = *(_QWORD **)(v0[3] + OBJC_IVAR____TtC5Music22RecentlyPlayedObserver_pushObserver);
  v4 = swift_allocObject(&unk_1010DBB40, 32, 7);
  v0[6] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = *(int **)((swift_isaMask & *v3) + 0x70);
  v6 = v5[1];
  v9 = (int *)((char *)v5 + *v5);
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc(v6);
  v0[7] = v7;
  *v7 = v0;
  v7[1] = sub_1007950FC;
  return ((uint64_t (*)(_QWORD, unint64_t, unint64_t, uint64_t (*)(), uint64_t))v9)(v0[2], 0xD000000000000016, 0x8000000100E44BC0, sub_10004D5F4, v4);
}

uint64_t sub_1007950FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 48);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_100795278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v5;
  Class isa;

  v5 = String._bridgeToObjectiveC()();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, NSString, Class))(a4 + 16))(a4, v5, isa);

}

uint64_t type metadata accessor for RecentlyPlayedObserver()
{
  return objc_opt_self(_TtC5Music22RecentlyPlayedObserver);
}

uint64_t sub_10079539C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1007953C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100795278(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1007953C8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1007953FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc(dword_1011C8484);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_10005AEE4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch(sub_10079501C, 0, 0);
}

uint64_t sub_100795474()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100795498(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a5;
  v33 = a6;
  v35 = a4;
  v36 = a3;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  type metadata accessor for MainActor(0);
  swift_retain();
  v34 = a1;
  sub_100048AAC(a5, a6);
  v19 = static MainActor.shared.getter(v18);
  v20 = *(unsigned __int8 *)(v11 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject(&unk_1010DBB90, v24 + 16, v20 | 7);
  *(_QWORD *)(v25 + 16) = v19;
  *(_QWORD *)(v25 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v25 + v21, v13, v10);
  v26 = (_QWORD *)(v25 + v22);
  v27 = v35;
  *v26 = v36;
  v26[1] = v27;
  *(_QWORD *)(v25 + v23) = v34;
  v28 = (uint64_t *)(v25 + v24);
  v29 = v33;
  *v28 = v32;
  v28[1] = v29;
  sub_100166D14((uint64_t)v16, (uint64_t)&unk_1011C8498, v25);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100795670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8[30] = a8;
  v8[31] = v16;
  v8[28] = a6;
  v8[29] = a7;
  v8[26] = a4;
  v8[27] = a5;
  v9 = type metadata accessor for Logger(0);
  v8[32] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[33] = v10;
  v8[34] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v8[35] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v8[36] = v13;
  v8[37] = v14;
  return swift_task_switch(sub_100795714, v13, v14);
}

uint64_t sub_100795714()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  (*(void (**)(_QWORD))(v0 + 216))(*(_QWORD *)(v0 + 232));
  if (*(_QWORD *)(v0 + 136) == 1)
  {
    sub_10079636C(v0 + 80);
    Strong = 0;
  }
  else
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 80);
    sub_100064B4C(v0 + 80);
  }
  *(_QWORD *)(v0 + 304) = Strong;
  v2 = (_QWORD *)swift_task_alloc(dword_1011DBC9C);
  *(_QWORD *)(v0 + 312) = v2;
  *v2 = v0;
  v2[1] = sub_1007957B0;
  return static ClassicalBridge.openPrestoOrStoreSheet(withURL:viewController:)(*(_QWORD *)(v0 + 208), Strong);
}

uint64_t sub_1007957B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 312);
  *(_QWORD *)(*v1 + 320) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 288);
    v5 = *(_QWORD *)(v2 + 296);
    v6 = sub_100795920;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 288);
    v5 = *(_QWORD *)(v2 + 296);
    v6 = sub_10079581C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10079581C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 280));
  if (v1)
    (*(void (**)(_QWORD))(v0 + 240))(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100795868()
{
  uint64_t v0;

  return swift_task_switch(sub_1007958AC, *(_QWORD *)(*(_QWORD *)v0 + 288), *(_QWORD *)(*(_QWORD *)v0 + 296));
}

uint64_t sub_1007958AC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 336);
  v2 = *(void **)(v0 + 344);
  v3 = *(void **)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 280));

  v5 = *(_QWORD *)(v0 + 320);
  if (v4)
    (*(void (**)(_QWORD))(v0 + 240))(*(_QWORD *)(v0 + 208));
  swift_errorRelease(v5);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100795920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSURL *v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  _QWORD *v27;
  __n128 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);

  v5 = Logger.classicalBridge.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 320);
    v10 = *(_QWORD *)(v0 + 264);
    v30 = *(_QWORD *)(v0 + 256);
    v31 = *(_QWORD *)(v0 + 272);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136446210;
    v32 = v12;
    *(_QWORD *)(v0 + 192) = v9;
    swift_errorRetain(v9);
    v13 = sub_100007E8C(&qword_1011A14B0);
    v14 = String.init<A>(describing:)(v0 + 192, v13);
    *(_QWORD *)(v0 + 200) = sub_100322200(v14, v15, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208);
    swift_bridgeObjectRelease();
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to open in Apple Classical with error=%{public}s. Opening URL instead.", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v31, v30);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 320);
    v18 = *(_QWORD *)(v0 + 264);
    v17 = *(_QWORD *)(v0 + 272);
    v19 = *(_QWORD *)(v0 + 256);
    swift_errorRelease(v16);
    swift_errorRelease(v16);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v20 = v0 + 16;
  v21 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  *(_QWORD *)(v0 + 328) = v21;
  URL._bridgeToObjectiveC()(v22);
  v24 = v23;
  *(_QWORD *)(v0 + 336) = v23;
  sub_100043474((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1007963AC();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)(v0 + 344) = isa;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 56) = v0 + 352;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_100795868;
  v26 = swift_continuation_init(v0 + 16, 0);
  *(_QWORD *)(v0 + 152) = _NSConcreteStackBlock;
  v27 = (_QWORD *)(v0 + 152);
  v27[1] = 0x40000000;
  v27[2] = sub_100795C0C;
  v27[3] = &unk_1010DBBA8;
  v27[4] = v26;
  objc_msgSend(v21, "openURL:options:completionHandler:", v24, isa, v27);
  return swift_continuation_await(v20, v28);
}

uint64_t sub_100795C0C(uint64_t a1, char a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  **(_BYTE **)(*(_QWORD *)(v2 + 64) + 40) = a2;
  return swift_continuation_resume(v2);
}

char *sub_100795C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *v34;
  void *v35;
  _BYTE *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char *v55;
  _BYTE v57[12];
  int v58;
  __int128 v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[16];
  uint64_t v74;
  void *v75;
  uint64_t v76;
  unsigned __int8 v77;
  __int128 v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE v85[4];
  id v86;
  id v87;

  v72 = a5;
  v71 = a4;
  v70 = a3;
  v69 = a2;
  v68 = a1;
  v66 = type metadata accessor for URL(0);
  v65 = *(_QWORD *)(v66 - 8);
  v67 = *(_QWORD *)(v65 + 64);
  __chkstk_darwin(v66);
  v64 = &v57[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100007E8C(&qword_10119DDD8);
  __chkstk_darwin(v6);
  v8 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v63 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v63);
  v10 = &v57[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  SymbolButton.Configuration.init()((uint64_t)v10);
  variable initialization expression of SymbolButton.Configuration.symbol((uint64_t)v73);
  v11 = v83;
  v12 = v81;
  v62 = v82;
  v61 = v79;
  v60 = v80;
  v59 = v78;
  v58 = v77;
  v13 = v76;
  v14 = v74;
  sub_100065228((uint64_t)&v84, (uint64_t)&v87, &qword_10119E580);
  v86 = v75;
  sub_100065228((uint64_t)v73, (uint64_t)v85, &qword_10119DCA0);
  sub_1001C7464((uint64_t)v85);
  v15 = UIFontTextStyleSubheadline;
  sub_100065200(&v86);
  sub_100065200(&v87);
  v16 = (void *)*((_QWORD *)v10 + 2);
  v17 = (void *)*((_QWORD *)v10 + 14);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_OWORD *)v10 = xmmword_100ECF720;
  *((_QWORD *)v10 + 2) = v14;
  *((_QWORD *)v10 + 3) = v15;
  *((_QWORD *)v10 + 4) = v13;
  v10[40] = v58;
  *((_QWORD *)v10 + 6) = 4;
  *(_OWORD *)(v10 + 56) = v59;
  *((_QWORD *)v10 + 9) = v61;
  v10[80] = v60;
  v18 = v62;
  *((_QWORD *)v10 + 11) = v12;
  *((_QWORD *)v10 + 12) = v18;
  *((_QWORD *)v10 + 13) = v11;
  *((_QWORD *)v10 + 14) = 0;
  v19 = SymbolButton.Background.tertiary.unsafeMutableAddressor();
  v20 = *v19;
  v21 = (void *)v19[1];
  v23 = v19[2];
  v22 = v19[3];
  v24 = *((_QWORD *)v10 + 24);
  v25 = (void *)*((_QWORD *)v10 + 25);
  v26 = *((_QWORD *)v10 + 26);
  v27 = *((_QWORD *)v10 + 27);
  swift_bridgeObjectRetain();
  v28 = v21;
  v29 = sub_10013BA8C(v24, v25, v26, v27);
  *((_QWORD *)v10 + 24) = v20;
  *((_QWORD *)v10 + 25) = v21;
  *((_QWORD *)v10 + 26) = v23;
  *((_QWORD *)v10 + 27) = v22;
  static UIView.Corner.rounded.getter(v29);
  v30 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v8, 0, 1, v30);
  v31 = v63;
  sub_100796098((uint64_t)v8, (uint64_t)&v10[*(int *)(v63 + 36)]);
  v32 = v31;
  *(_OWORD *)&v10[*(int *)(v31 + 52)] = *SymbolButton.Configuration.platterMinimumSize.unsafeMutableAddressor();
  v33 = SymbolButton.Configuration.Accessibility.forBarButtonItem.unsafeMutableAddressor();
  LOBYTE(v31) = *v33;
  v34 = (void *)*((_QWORD *)v33 + 1);
  v35 = (void *)*((_QWORD *)v33 + 2);
  LOBYTE(v8) = v33[24];
  v36 = &v10[*(int *)(v32 + 64)];
  v37 = (void *)*((_QWORD *)v36 + 1);
  v38 = v34;
  v39 = v35;

  *v36 = v31;
  *((_QWORD *)v36 + 1) = v34;
  *((_QWORD *)v36 + 2) = v35;
  v36[24] = (_BYTE)v8;
  v40 = v65;
  v41 = v64;
  v42 = v66;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v65 + 16))(v64, v68, v66);
  v43 = *(unsigned __int8 *)(v40 + 80);
  v44 = v40;
  v45 = (v43 + 16) & ~v43;
  v46 = (v67 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v46 + 23) & 0xFFFFFFFFFFFFFFF8;
  v48 = swift_allocObject(&unk_1010DBB68, v47 + 16, v43 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v44 + 32))(v48 + v45, v41, v42);
  v49 = (_QWORD *)(v48 + v46);
  v50 = v70;
  *v49 = v69;
  v49[1] = v50;
  v51 = (uint64_t *)(v48 + v47);
  v52 = v71;
  v53 = v72;
  *v51 = v71;
  v51[1] = v53;
  v54 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  swift_retain();
  sub_100048AAC(v52, v53);
  v55 = SymbolButton.init(configuration:handler:)((uint64_t)v10, (uint64_t)sub_10079616C, v48);
  (*(void (**)(unint64_t, unint64_t))((swift_isaMask & *(_QWORD *)v55) + 0x100))(0xD000000000000010, 0x8000000100E44BE0);
  return v55;
}

uint64_t sub_100796098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119DDD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007960E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v5 + 8));
  if (*(_QWORD *)(v0 + v6))
    swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v3 | 7);
}

double sub_10079616C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100795498(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1007961D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __n128 v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v8);
  swift_release(*(_QWORD *)(v0 + v5 + 8));

  if (*(_QWORD *)(v0 + v7))
    swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v3 | 7);
}

uint64_t sub_100796288(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = (uint64_t *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v7);
  v13 = *v11;
  v14 = v11[1];
  v15 = *(_QWORD *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  v16 = (_QWORD *)swift_task_alloc(dword_1011C8494);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10005AEE4;
  return sub_100795670(a1, v8, v9, v10, v13, v14, v12, v15);
}

uint64_t sub_10079636C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A20F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1007963AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119D840;
  if (!qword_10119D840)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    result = swift_getWitnessTable(&unk_100EA7788, v1);
    atomic_store(result, (unint64_t *)&qword_10119D840);
  }
  return result;
}

uint64_t *sub_1007963F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = *(int *)(a3 + 24);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v12);
    v14 = *(int *)(a3 + 28);
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for UserInterfaceSizeClass(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        v20 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(v15, v16, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      v21 = v15;
      v22 = v17;
      v23 = 1;
    }
    else
    {
      *v15 = *v16;
      swift_retain();
      v21 = v15;
      v22 = v17;
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v22, v23);
  }
  return v4;
}

void sub_1007965A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
}

_OWORD *sub_1007966A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for UserInterfaceSizeClass(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
    {
      v18 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      v19 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v13, v14, v16);
      v19 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
  }
  else
  {
    *v13 = *v14;
    swift_retain();
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v19);
  return a1;
}

_QWORD *sub_100796828(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_10004FF60((uint64_t)a1 + v6, (uint64_t *)&unk_1011ACE40);
    v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
    v12 = *(int *)(a3 + 28);
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    sub_10004FF60((uint64_t)a1 + v12, (uint64_t *)&unk_1011A3ED0);
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for UserInterfaceSizeClass(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        v18 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        v19 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v13, v14, v16);
        v19 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v19);
  }
  return a1;
}

_OWORD *sub_1007969E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for UserInterfaceSizeClass(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
    {
      v17 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v12, v13, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_100796B68(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_10004FF60((uint64_t)a1 + v6, (uint64_t *)&unk_1011ACE40);
    v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    v11 = *(int *)(a3 + 28);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_10004FF60((uint64_t)a1 + v11, (uint64_t *)&unk_1011A3ED0);
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for UserInterfaceSizeClass(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v12, v13, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100796D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100796D24);
}

uint64_t sub_100796D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_100007E8C(&qword_1011C6890);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 24);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A48A0);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 28);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t sub_100796D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100796DA8);
}

uint64_t sub_100796DA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_100007E8C(&qword_1011C6890);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 24);
  }
  else
  {
    v10 = sub_100007E8C(&qword_1011A48A0);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 28);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t _s12AddMusicCellVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C84F8;
  if (!qword_1011C84F8)
    return swift_getSingletonMetadata(a1, &_s12AddMusicCellVMn);
  return result;
}

void sub_100796E64(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_1000559DC(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001C17C8(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t sub_100796EF8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FACC84, 1);
}

uint64_t sub_100796F08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t OpaqueTypeConformance2;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD v81[3];

  v2 = (double *)v1;
  v78 = a1;
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v77 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v76 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccessibilityTraits(0);
  v74 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  __chkstk_darwin(v7);
  v73 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AccessibilityChildBehavior(0);
  v71 = *(_QWORD *)(v9 - 8);
  v72 = v9;
  __chkstk_darwin(v9);
  v69 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for DynamicTypeSize(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011C8538);
  __chkstk_darwin(v13);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A2D60);
  __chkstk_darwin(v16);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011A2D68);
  __chkstk_darwin(v19);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011C8540);
  __chkstk_darwin(v22);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_1011C8548);
  v68 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100007E8C(&qword_1011C8550);
  __chkstk_darwin(v70);
  v66 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v15 = static VerticalAlignment.center.getter(v28);
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v29 = sub_100007E8C(&qword_1011C8558);
  sub_10079751C(v1, (uint64_t)&v15[*(int *)(v29 + 44)]);
  _s12AddMusicCellVMa(0);
  sub_1008237B8((uint64_t)v12);
  v30 = sub_1007983E8((uint64_t)v12);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v12, v65);
  v32 = static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(v81, 0, 1, *(_QWORD *)&v30, 0, v32, v33);
  sub_10004A160((uint64_t)v15, (uint64_t)v18, &qword_1011C8538);
  v34 = &v18[*(int *)(v16 + 36)];
  v35 = v81[1];
  *(_OWORD *)v34 = v81[0];
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v81[2];
  v36 = sub_10004FF60((uint64_t)v15, &qword_1011C8538);
  v37 = static Alignment.leading.getter(v36);
  sub_10014BF3C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v21, 0.0, 1, 0.0, 1, v37, v38);
  v39 = sub_10004FF60((uint64_t)v18, &qword_1011A2D60);
  v40 = static Edge.Set.horizontal.getter(v39);
  v41 = EdgeInsets.init(_all:)(*v2);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  sub_10004A160((uint64_t)v21, (uint64_t)v24, &qword_1011A2D68);
  v48 = &v24[*(int *)(v22 + 36)];
  *v48 = v40;
  *((double *)v48 + 1) = v41;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v45;
  *((_QWORD *)v48 + 4) = v47;
  v48[40] = 0;
  v49 = sub_10004FF60((uint64_t)v21, &qword_1011A2D68);
  v50 = v69;
  static AccessibilityChildBehavior.combine.getter(v49);
  v51 = sub_10005610C(&qword_1011C8560, &qword_1011C8540, (void (*)(void))sub_100798514);
  View.accessibilityElement(children:)(v50, v22, v51);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v50, v72);
  v52 = sub_10004FF60((uint64_t)v24, &qword_1011C8540);
  v53 = v73;
  static AccessibilityTraits.isButton.getter(v52);
  v79 = v22;
  v80 = v51;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v79, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v55 = (uint64_t)v66;
  v56 = v67;
  View.accessibilityAddTraits(_:)(v53, v67, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v53, v75);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v26, v56);
  v57 = v76;
  v58 = String.LocalizationValue.init(stringLiteral:)(0x6973754D20646441, 0xE900000000000063);
  v59 = v77;
  static Locale.current.getter(v58);
  v79 = String.init(localized:table:bundle:locale:comment:)(v57, 0, 0, 0, v59, "Accessibility label for add music button", 40, 2);
  v80 = v60;
  v61 = sub_100055B68();
  ModifiedContent<>.accessibilityLabel<A>(_:)(&v79, v70, &type metadata for String, v61);
  swift_bridgeObjectRelease();
  return sub_10004FF60(v55, &qword_1011C8550);
}

uint64_t sub_10079751C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  double v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t *v42;
  __int128 v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  double v47;
  __int128 v48;
  char v49;
  uint64_t OpaqueTypeConformance2;
  char *v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  double v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  unsigned int v94;
  char *v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  char *v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  char v140;
  double v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _OWORD v185[3];

  v178 = a1;
  v173 = a2;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v172 = (char *)&v154 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v170 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = type metadata accessor for DynamicTypeSize(0);
  v179 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v166 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v167 = (char *)&v154 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v154 - v10;
  __chkstk_darwin(v12);
  v177 = (uint64_t)&v154 - v13;
  __chkstk_darwin(v14);
  v157 = (uint64_t)&v154 - v15;
  v16 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v16);
  v18 = (double *)((char *)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_100007E8C(&qword_1011AEDF8);
  __chkstk_darwin(v19);
  v21 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011C8580);
  v155 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_100007E8C(&qword_1011C8588);
  v158 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v26 = (char *)&v154 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_100007E8C(&qword_1011C8590);
  __chkstk_darwin(v156);
  v174 = (uint64_t)&v154 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_100007E8C(&qword_1011C8598);
  __chkstk_darwin(v175);
  v176 = (uint64_t)&v154 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_100007E8C(&qword_1011C85A0);
  v164 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v163 = (char *)&v154 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_100007E8C(&qword_1011C85A8);
  __chkstk_darwin(v162);
  v171 = (uint64_t)&v154 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v161 = (char *)&v154 - v32;
  __chkstk_darwin(v33);
  v35 = (char *)&v154 - v34;
  if (qword_10119C7C8 != -1)
    swift_once(&qword_10119C7C8, sub_100798338);
  v160 = (uint64_t)v11;
  if ((byte_10124D9C0 & 1) != 0)
    v36 = Int.seconds.getter(5);
  else
    v36 = *(double *)&xmmword_10124D9B0;
  v169 = v35;
  v37 = (char *)v18 + *(int *)(v16 + 20);
  v38 = enum case for RoundedCornerStyle.continuous(_:);
  v39 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
  *v18 = v36;
  v18[1] = v36;
  if (qword_10119C7C0 != -1)
    swift_once(&qword_10119C7C0, sub_1007982FC);
  v40 = qword_10124D9A0;
  KeyPath = swift_getKeyPath(&unk_100ECF790);
  sub_1007985C4((uint64_t)v18, (uint64_t)v21);
  v42 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  *v42 = KeyPath;
  v42[1] = v40;
  swift_retain();
  sub_100798608((uint64_t)v18);
  v43 = xmmword_10124D9B0;
  LOBYTE(KeyPath) = byte_10124D9C0;
  v44 = sub_1005A1A6C();
  View.corner(_:)(v43, *((uint64_t *)&v43 + 1), KeyPath, v19, v44);
  sub_10004FF60((uint64_t)v21, &qword_1011AEDF8);
  v45 = Border.artwork.unsafeMutableAddressor();
  v46 = *v45;
  v47 = *((double *)v45 + 1);
  v48 = xmmword_10124D9B0;
  LOBYTE(KeyPath) = byte_10124D9C0;
  v49 = *((_BYTE *)v45 + 16);
  swift_retain();
  *(_QWORD *)&v185[0] = v19;
  *((_QWORD *)&v185[0] + 1) = v44;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v185, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v51 = v26;
  View.border(_:corner:)(v46, v49, v48, *((uint64_t *)&v48 + 1), KeyPath, v22, OpaqueTypeConformance2, v47);
  v52 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v155 + 8))(v24, v22, v52);
  v53 = v178 + *(int *)(_s12AddMusicCellVMa(0) + 24);
  v54 = v157;
  sub_1008237B8(v157);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  v55 = v168;
  v56 = v160;
  if (byte_1011C36B8 == 1)
  {
    v57 = *(void (**)(uint64_t, uint64_t))(v179 + 8);
    v58 = enum case for DynamicTypeSize.accessibility3(_:);
    v59 = 0x4048000000000000;
    v57(v54, v168);
  }
  else
  {
    v58 = enum case for DynamicTypeSize.accessibility3(_:);
    v60 = v179;
    v61 = v177;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v179 + 104))(v177, enum case for DynamicTypeSize.accessibility3(_:), v168);
    v62 = static DynamicTypeSize.< infix(_:_:)(v54, v61);
    v57 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
    v57(v61, v55);
    if ((v62 & 1) != 0)
      v59 = 0x4048000000000000;
    else
      v59 = 0x4052000000000000;
    v57(v54, v55);
  }
  v157 = v53;
  sub_1008237B8(v56);
  v63 = 0x4048000000000000;
  if ((byte_1011C36B8 & 1) == 0)
  {
    v64 = v177;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v179 + 104))(v177, v58, v55);
    v65 = static DynamicTypeSize.< infix(_:_:)(v56, v64);
    v57(v64, v55);
    if ((v65 & 1) == 0)
      v63 = 0x4052000000000000;
  }
  v66 = ((uint64_t (*)(uint64_t, uint64_t))v57)(v56, v55);
  v67 = static Alignment.center.getter(v66);
  _FrameLayout.init(width:height:alignment:)(v185, v59, 0, v63, 0, v67, v68);
  v69 = v158;
  v70 = v174;
  v71 = v159;
  (*(void (**)(uint64_t, char *, uint64_t))(v158 + 16))(v174, v51, v159);
  v72 = (_OWORD *)(v70 + *(int *)(v156 + 36));
  v73 = v185[1];
  *v72 = v185[0];
  v72[1] = v73;
  v72[2] = v185[2];
  v74 = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v51, v71);
  v160 = static Alignment.center.getter(v74);
  v159 = v75;
  v76 = v176 + *(int *)(v175 + 36);
  v77 = Image.init(systemName:)(1937075312, 0xE400000000000000);
  v79 = static Color.accentColor.getter(v77, v78);
  v80 = swift_getKeyPath(&unk_100ECF790);
  v81 = static Font.title3.getter(v80);
  LODWORD(v158) = v58;
  v82 = v81;
  v83 = swift_getKeyPath(&unk_100ECF7C0);
  v180 = v77;
  v181 = v80;
  v182 = v79;
  v183 = v83;
  v184 = v82;
  v84 = static Font.Weight.semibold.getter(v83);
  v156 = (uint64_t)v57;
  v85 = v84;
  v86 = sub_100007E8C(&qword_1011A4CB8);
  v87 = sub_1001C3E78();
  View.fontWeight(_:)(*(_QWORD *)&v85, 0, v86, v87);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v88 = (uint64_t *)(v76 + *(int *)(sub_100007E8C(&qword_1011C85B0) + 36));
  v89 = v159;
  *v88 = v160;
  v88[1] = v89;
  v90 = v176;
  sub_100065228(v174, v176, &qword_1011C8590);
  v91 = v177;
  sub_1008237B8(v177);
  v92 = *(void (**)(char *, uint64_t, uint64_t))(v179 + 104);
  v93 = v166;
  v94 = v158;
  v92(v166, v158, v55);
  LOBYTE(v86) = static DynamicTypeSize.< infix(_:_:)(v91, v93);
  v95 = v93;
  v96 = (void (*)(uint64_t, uint64_t))v156;
  ((void (*)(char *, uint64_t))v156)(v95, v55);
  v96(v91, v55);
  if ((v86 & 1) != 0)
    v97 = enum case for DynamicTypeSize.large(_:);
  else
    v97 = v94;
  v98 = v167;
  v92(v167, v97, v55);
  v99 = sub_10079864C();
  v100 = v163;
  View.dynamicTypeSize(_:)(v98, v175, v99);
  v96((uint64_t)v98, v55);
  v101 = sub_10004FF60(v90, &qword_1011C8598);
  v102 = static HorizontalAlignment.listRowSeparatorLeading.getter(v101);
  v103 = v164;
  v104 = (uint64_t)v161;
  v105 = v165;
  (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v161, v100, v165);
  v106 = (uint64_t *)(v104 + *(int *)(v162 + 36));
  *v106 = v102;
  v106[1] = (uint64_t)sub_100798188;
  v106[2] = 0;
  (*(void (**)(char *, uint64_t))(v103 + 8))(v100, v105);
  v107 = (uint64_t)v169;
  sub_100065228(v104, (uint64_t)v169, &qword_1011C85A8);
  v108 = v170;
  v109 = String.LocalizationValue.init(stringLiteral:)(0x6973754D20646441, 0xE900000000000063);
  v110 = v172;
  static Locale.current.getter(v109);
  v180 = String.init(localized:table:bundle:locale:comment:)(v108, 0, 0, 0, v110, "Add music button text", 21, 2);
  v181 = v111;
  v112 = sub_100055B68();
  v113 = Text.init<A>(_:)(&v180, &type metadata for String, v112);
  v115 = v114;
  v117 = v116;
  v119 = v118 & 1;
  v120 = sub_1007981AC();
  v121 = Text.font(_:)(v120, v113, v115, v119, v117);
  v123 = v122;
  v125 = v124;
  v127 = v126;
  swift_release();
  v128 = v125 & 1;
  sub_100055BAC(v113, v115, v119);
  v129 = swift_bridgeObjectRelease();
  v130 = static Color.primary.getter(v129);
  v131 = Text.foregroundColor(_:)(v130, v121, v123, v128, v127);
  v133 = v132;
  v135 = v134;
  v137 = v136;
  swift_release();
  sub_100055BAC(v121, v123, v128);
  swift_bridgeObjectRelease();
  v139 = static Edge.Set.leading.getter(v138);
  if (qword_10119C7D0 != -1)
    swift_once(&qword_10119C7D0, sub_100798364);
  v140 = v135 & 1;
  v141 = EdgeInsets.init(_all:)(*(double *)&qword_10124D9C8);
  v143 = v142;
  v145 = v144;
  v147 = v146;
  v148 = v171;
  sub_10004A160(v107, v171, &qword_1011C85A8);
  v149 = v173;
  sub_10004A160(v148, v173, &qword_1011C85A8);
  v150 = sub_100007E8C(&qword_1011C85D0);
  v151 = v149 + *(int *)(v150 + 48);
  *(_QWORD *)v151 = v131;
  *(_QWORD *)(v151 + 8) = v133;
  *(_BYTE *)(v151 + 16) = v140;
  *(_QWORD *)(v151 + 24) = v137;
  *(_BYTE *)(v151 + 32) = v139;
  *(double *)(v151 + 40) = v141;
  *(_QWORD *)(v151 + 48) = v143;
  *(_QWORD *)(v151 + 56) = v145;
  *(_QWORD *)(v151 + 64) = v147;
  *(_BYTE *)(v151 + 72) = 0;
  v152 = v149 + *(int *)(v150 + 64);
  *(_QWORD *)v152 = 0;
  *(_BYTE *)(v152 + 8) = 1;
  sub_100055BBC(v131, v133, v140);
  swift_bridgeObjectRetain();
  sub_10004FF60(v107, &qword_1011C85A8);
  sub_100055BAC(v131, v133, v140);
  swift_bridgeObjectRelease();
  return sub_10004FF60(v148, &qword_1011C85A8);
}

double sub_100798188()
{
  uint64_t v0;

  v0 = static HorizontalAlignment.leading.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_1007981AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  double v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];

  v1 = type metadata accessor for DynamicTypeSize(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(double *)(v0 + 8);
  _s12AddMusicCellVMa(0);
  sub_100824BE4((uint64_t)v7);
  sub_1008237B8((uint64_t)v4);
  v15[15] = 5;
  v9 = sub_10004D63C();
  v10 = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v9);
  if ((v10 & 1) != 0 && (v10 = sub_1006CFD38((uint64_t)v7, (uint64_t)v4, v8), (v10 & 1) != 0))
    v12 = static Font.callout.getter(v11);
  else
    v12 = static Font.body.getter(v10);
  v13 = v12;
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A33B8);
  return v13;
}

uint64_t sub_1007982FC()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  result = Color.init(_:)(v0);
  qword_10124D9A0 = result;
  return result;
}

__n128 sub_100798338()
{
  __n128 *v0;
  char v1;
  __n128 result;

  v0 = (__n128 *)Corner.small.unsafeMutableAddressor();
  v1 = v0[1].n128_i8[0];
  result = *v0;
  xmmword_10124D9B0 = (__int128)*v0;
  byte_10124D9C0 = v1;
  return result;
}

uint64_t sub_100798364()
{
  unint64_t v0;
  uint64_t result;
  uint64_t v2;

  v0 = sub_10004D63C();
  result = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v0);
  v2 = 16.0;
  if ((result & 1) != 0)
  {
    if (qword_10119C678 != -1)
      result = swift_once(&qword_10119C678, sub_1006CA5B0);
    v2 = qword_10124D780;
  }
  qword_10124D9C8 = v2;
  return result;
}

double sub_1007983E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  char v8;
  uint64_t v9;
  uint64_t v11;

  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  v6 = 20.0;
  if ((byte_1011C36B8 & 1) != 0)
  {
    v7 = 48.0;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DynamicTypeSize.accessibility3(_:), v2);
    v8 = static DynamicTypeSize.< infix(_:_:)(a1, v5);
    v9 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v8 & 1) != 0)
      v7 = 48.0;
    else
      v7 = 72.0;
    if (byte_1011C36B8 != 1)
    {
      if ((DynamicTypeSize.isAccessibilitySize.getter(v9) & 1) != 0)
        v6 = 28.0;
      else
        v6 = 8.0;
    }
  }
  return v7 + v6;
}

uint64_t sub_100798514()
{
  return sub_10005610C(&qword_1011C8568, &qword_1011A2D68, (void (*)(void))sub_100798538);
}

unint64_t sub_100798538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C8570;
  if (!qword_1011C8570)
  {
    v1 = sub_100044B54(&qword_1011A2D60);
    sub_100049F28(&qword_1011C8578, &qword_1011C8538, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C8570);
  }
  return result;
}

uint64_t sub_1007985C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100798608(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10079864C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C85B8;
  if (!qword_1011C85B8)
  {
    v1 = sub_100044B54(&qword_1011C8598);
    sub_1007986D0();
    sub_100049F28(&qword_1011C85C8, &qword_1011C85B0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C85B8);
  }
  return result;
}

unint64_t sub_1007986D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_1011C85C0;
  if (!qword_1011C85C0)
  {
    v1 = sub_100044B54(&qword_1011C8590);
    v2 = sub_100044B54(&qword_1011C8580);
    v4 = sub_100044B54(&qword_1011AEDF8);
    v5 = sub_1005A1A6C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C85C0);
  }
  return result;
}

unint64_t sub_100798798()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C85D8;
  if (!qword_1011C85D8)
  {
    v1 = sub_100044B54(&qword_1011C8550);
    v2[0] = sub_100044B54(&qword_1011C8540);
    v2[1] = sub_10005610C(&qword_1011C8560, &qword_1011C8540, (void (*)(void))sub_100798514);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C85D8);
  }
  return result;
}

uint64_t Optional<A>.playbackIntent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v14[16];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v14[-v10];
  sub_10004A160(v1, (uint64_t)v4, (uint64_t *)&unk_1011A20D0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A20D0);
    return 0;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v11, v4, v5);
    sub_1000E3E80();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
    v12 = MPCPlaybackIntent.init(for:)(v8);
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  }
  return v12;
}

uint64_t GenericMusicItem.playbackIntent(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, __n128);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = v0;
  v35 = type metadata accessor for Station(0);
  v39 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v36 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011A3F48);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - v7;
  v9 = type metadata accessor for Artist(0);
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for GenericMusicItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v34 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  v20((char *)&v34 - v18, v1, v12, v17);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v19, v12) == enum case for GenericMusicItem.artist(_:))
  {
    v21 = v36;
    v22 = v39;
    (*(void (**)(char *, uint64_t))(v13 + 96))(v19, v12);
    v23 = v37;
    v24 = v38;
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v37 + 32))(v11, v19, v38);
    Artist.defaultPlayableItem.getter(v25);
    v26 = type metadata accessor for Artist.PlayableItem(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = v11;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v8, 1, v26) != 1)
    {
      sub_10004A160((uint64_t)v8, (uint64_t)v5, &qword_1011A3F48);
      if ((*(unsigned int (**)(char *, uint64_t))(v27 + 88))(v5, v26) == enum case for Artist.PlayableItem.station(_:))
      {
        (*(void (**)(char *, uint64_t))(v27 + 96))(v5, v26);
        v29 = v21;
        v30 = v21;
        v31 = v35;
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v30, v5, v35);
        sub_1000E3E80();
        v32 = static MPCPlaybackIntent.radioPlaybackIntent(for:)(v29);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v29, v31);
LABEL_8:
        (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v24);
        sub_10004FF60((uint64_t)v8, &qword_1011A3F48);
        return v32;
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v26);
    }
    sub_1000E3E80();
    v32 = static MPCPlaybackIntent.radioPlaybackIntent<A>(from:)(v11, v24, &protocol witness table for Artist);
    goto LABEL_8;
  }
  sub_1000E3E80();
  ((void (*)(char *, uint64_t, uint64_t))v20)(v15, v1, v12);
  v32 = MPCPlaybackIntent.init(_:)(v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  return v32;
}

uint64_t Array<A>.playbackIntent(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - v12;
  v14 = sub_100007E8C(&qword_10119F7C8);
  __chkstk_darwin(v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v16, &qword_10119F7C8);
  if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v16, v4);
    v17 = GenericMusicItem.playbackIntent(for:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_100798F08((uint64_t)v16, (uint64_t)v13);
    sub_1000E3E80();
    v22 = a2;
    sub_10004A160((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1011A20D0);
    swift_bridgeObjectRetain();
    v18 = sub_100007E8C((uint64_t *)&unk_1011AB338);
    v19 = sub_100798F50();
    v17 = MPCPlaybackIntent.init<A>(_:startingAt:)(&v22, v10, v18, v19);
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A20D0);
  }
  return v17;
}

uint64_t sub_100798F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100798F50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B1810;
  if (!qword_1011B1810)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011AB338);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, &qword_1011B1810);
  }
  return result;
}

uint64_t sub_100798F9C(uint64_t a1)
{
  uint64_t *v1;

  return Array<A>.playbackIntent(for:)(a1, *v1);
}

uint64_t sub_100798FA4()
{
  uint64_t *v0;

  sub_10004BA30(v0[2], v0[3]);
  sub_10004BA30(v0[4], v0[5]);
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for SceneElementSizing()
{
  return objc_opt_self(_TtC5Music18SceneElementSizing);
}

uint64_t sub_100798FF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SceneElementSizing();
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t CompoundRequestResponseInvalidation.onInvalidation.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 16, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 16);
  sub_100048AAC(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t CompoundRequestResponseInvalidation.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 16, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_10004BA30(v5, v6);
}

uint64_t (*CompoundRequestResponseInvalidation.onInvalidation.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 16, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t GenericRequestResponseInvalidation.onInvalidation.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 32, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  sub_100048AAC(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t GenericRequestResponseInvalidation.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 32, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_10004BA30(v5, v6);
}

uint64_t (*sub_10079919C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 32, a1, 33, 0);
  return j__swift_endAccess;
}

double Gradient.endPoint.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

id sub_1007991E0()
{
  return objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
}

void sub_10079920C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSURL *v13;
  double v14;
  void *v15;
  void *v16;
  _QWORD aBlock[6];

  v8 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v8);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v10, &qword_10119E460);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    URL._bridgeToObjectiveC()(v13);
    v15 = v16;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  if (a2)
  {
    aBlock[4] = a2;
    aBlock[5] = a3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10012F6FC;
    aBlock[3] = &unk_1010DBC88;
    a2 = _Block_copy(aBlock);
    swift_retain();
    *(_QWORD *)&v14 = swift_release().n128_u64[0];
  }
  objc_msgSend(a4, "openURL:withCompletionHandler:", v15, a2, v14);
  _Block_release(a2);

}

uint64_t sub_100799364()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v1[10] = v0;
  v2 = type metadata accessor for Locale(0);
  v1[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  v1[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StorySharingController.ShareData(0);
  v1[13] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[14] = swift_task_alloc(v5);
  v1[15] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v1[16] = v6;
  v1[17] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v1[18] = v8;
  v1[19] = v9;
  return swift_task_switch(sub_100799448, v8, v9);
}

uint64_t sub_100799448(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 160) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_1007994B0, v4, v6);
}

uint64_t sub_1007994B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void (*)(uint64_t), uint64_t);
  uint64_t v5;
  __n128 v6;

  v1 = v0 + 2;
  v2 = v0[10];
  v0[7] = v0[14];
  v0[2] = v0;
  v0[3] = sub_100799550;
  v3 = swift_continuation_init(v0 + 2, 1);
  v4 = *(void (**)(void (*)(uint64_t), uint64_t))(v2
                                                                    + OBJC_IVAR____TtC5Music22StorySharingController_shareDataBuilder);
  v5 = swift_allocObject(&unk_1010DBCC0, 24, 7);
  *(_QWORD *)(v5 + 16) = v3;
  v4(sub_10079B3F8, v5);
  v6 = swift_release();
  return swift_continuation_await(v1, v6);
}

uint64_t sub_100799550(__n128 a1)
{
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = (*v1)[6];
  (*v1)[21] = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[18];
    v5 = v2[19];
    v6 = sub_1007996A4;
  }
  else
  {
    sub_10079B400(v2[14], v2[15]);
    swift_release();
    v4 = v2[18];
    v5 = v2[19];
    v6 = sub_1007995D0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1007995D0()
{
  uint64_t v0;
  double *v1;
  double v2;
  double v3;
  _QWORD *v4;

  v1 = (double *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC5Music22StorySharingController_artworkSize);
  v2 = *v1;
  v3 = v1[1];
  v4 = (_QWORD *)swift_task_alloc(dword_1011C879C);
  *(_QWORD *)(v0 + 176) = v4;
  *v4 = v0;
  v4[1] = sub_10079963C;
  return sub_10079A6BC(v2, v3);
}

uint64_t sub_10079963C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 176);
  v3[23] = a1;
  v3[24] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100799A98;
  else
    v5 = sub_100799874;
  return swift_task_switch(v5, v3[18], v3[19]);
}

uint64_t sub_1007996A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;
  __n128 v9;
  uint64_t v11;

  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100E42E70);
  static Locale.current.getter(v4);
  String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, 0, v2, 0, 0, 256);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v5, 1);

  String.okButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v7, 1, 0);

  objc_msgSend(v6, "addAction:", v8);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v6, 1, (id)0xF, (void **)1, 0, 0);
  swift_willThrow(v9);

  swift_task_dealloc(v1);
  swift_task_dealloc(v11);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100799874()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int *v12;

  v1 = v0[10];
  v2 = OBJC_IVAR____TtC5Music22StorySharingController_renderer;
  v0[25] = OBJC_IVAR____TtC5Music22StorySharingController_renderer;
  v3 = (uint64_t *)(v1 + v2);
  v4 = *v3;
  v0[26] = *v3;
  v5 = v3[1];
  ObjectType = swift_getObjectType();
  v7 = *(int **)(v5 + 16);
  v8 = v7[1];
  v12 = (int *)((char *)v7 + *v7);
  swift_unknownObjectRetain(v4, v9);
  v10 = (_QWORD *)swift_task_alloc(v8);
  v0[27] = v10;
  *v10 = v0;
  v10[1] = sub_10079991C;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v12)(v0[23], ObjectType, v5);
}

uint64_t sub_10079991C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 216);
  *(_QWORD *)(*(_QWORD *)v2 + 224) = v1;
  swift_task_dealloc(v5);
  swift_unknownObjectRelease(v4[26]);
  if (v1)
  {
    v6 = v4[18];
    v7 = v4[19];
    v8 = sub_100799C68;
  }
  else
  {
    v4[29] = a1;
    v6 = v4[18];
    v7 = v4[19];
    v8 = sub_100799998;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100799998()
{
  uint64_t v0;
  UIImage *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  uint64_t v12;
  UIImage *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(UIImage **)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 112);
  v16 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v17 = *(_QWORD *)(v0 + 88);
  swift_release();
  v7 = v6 + v2;
  v8 = *(_QWORD *)(v6 + v2);
  v9 = *(_QWORD *)(v7 + 8);
  ObjectType = swift_getObjectType();
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 24);
  swift_unknownObjectRetain(v8, v12);
  v13 = (UIImage *)v11(v3, ObjectType, v9);
  swift_unknownObjectRelease(v8);
  sub_100799FDC(v1, v13, v4, v4 + *(int *)(v5 + 20));

  sub_10079B444(v4);
  swift_task_dealloc(v4);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100799A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  NSString v8;
  id v9;
  __n128 v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  sub_10079B444(v1);
  v2 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100E42E70);
  static Locale.current.getter(v5);
  String.init(localized:table:bundle:locale:comment:)(v4, 0, 0, 0, v3, 0, 0, 256);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v6, 1);

  String.okButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v8, 1, 0);

  objc_msgSend(v7, "addAction:", v9);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v7, 1, (id)0xF, (void **)1, 0, 0);
  swift_willThrow(v10);

  swift_task_dealloc(v2);
  swift_task_dealloc(v12);
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100799C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  NSString v8;
  id v9;
  __n128 v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 120);

  swift_release();
  sub_10079B444(v1);
  v2 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100E42E70);
  static Locale.current.getter(v5);
  String.init(localized:table:bundle:locale:comment:)(v4, 0, 0, 0, v3, 0, 0, 256);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v6, 1);

  String.okButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v8, 1, 0);

  objc_msgSend(v7, "addAction:", v9);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v7, 1, (id)0xF, (void **)1, 0, 0);
  swift_willThrow(v10);

  swift_task_dealloc(v2);
  swift_task_dealloc(v12);
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100799E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;

  v4 = sub_100007E8C(&qword_1011BA080);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StorySharingController.ShareData(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v19 - v12;
  sub_10004A160(a1, (uint64_t)v6, &qword_1011BA080);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10004FF60((uint64_t)v6, &qword_1011BA080);
    v14 = sub_10079B480();
    v15 = swift_allocError(&type metadata for StorySharingController.StoryError, v14, 0, 0);
    v16 = sub_100007E8C(&qword_1011A14B0);
    v17 = swift_allocError(v16, &protocol self-conformance witness table for Error, 0, 0);
    *v18 = v15;
    swift_continuation_throwingResumeWithError(a2, v17);
  }
  else
  {
    sub_10079B400((uint64_t)v6, (uint64_t)v13);
    sub_10079B4C4((uint64_t)v13, (uint64_t)v10);
    sub_10079B400((uint64_t)v10, *(_QWORD *)(*(_QWORD *)(a2 + 64) + 40));
    swift_continuation_throwingResume(a2);
    sub_10079B444((uint64_t)v13);
  }
}

uint64_t sub_100799FDC(UIImage *a1, UIImage *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  UIImage *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  NSData *v34;
  NSData *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  NSData *v44;
  NSData *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  Class isa;
  uint64_t v60;
  uint64_t inited;
  NSString *v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  Class v66;
  void (*v67)(uint64_t, _QWORD, _QWORD);
  uint64_t v69;
  unint64_t v70;
  UIImage *v71;
  UIImage *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  char v80[72];
  unint64_t v81;
  _OWORD v82[2];
  __int128 v83;
  _QWORD *v84;

  v69 = a4;
  v72 = a2;
  v71 = a1;
  v77 = type metadata accessor for Date(0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v75 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v6);
  v73 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v69 - v9;
  *(_QWORD *)&v79 = type metadata accessor for URL(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(unsigned __int8 *)(v4 + 16);
  v14 = sub_100415174(*(_BYTE *)(v4 + 16));
  v15 = 0xD000000000000025;
  v16 = 0x8000000100E44E90;
  v70 = 0xD000000000000025;
  if (v13 != 1)
  {
    v15 = 0xD000000000000026;
    v16 = 0x8000000100E44CE0;
  }
  if (v13)
    v17 = v15;
  else
    v17 = 0xD000000000000026;
  if (v13)
    v18 = v16;
  else
    v18 = 0x8000000100E44E60;
  v19 = v14;
  v20 = URL.absoluteString.getter(v14);
  v84 = &type metadata for String;
  *(_QWORD *)&v83 = v20;
  *((_QWORD *)&v83 + 1) = v21;
  sub_100048ABC(&v83, v82);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
  v81 = v19;
  sub_1005EE168(v82, v17, v18, isUniquelyReferenced_nonNull_native);
  v23 = v81;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = sub_1004155C4(v13);
  v74 = v4;
  if ((v24 & 1) == 0)
    goto LABEL_12;
  sub_10004A160(v69, (uint64_t)v10, &qword_10119E460);
  v25 = v78;
  v26 = v79;
  if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v78 + 48))(v10, 1, v79) == 1)
  {
    sub_10004FF60((uint64_t)v10, &qword_10119E460);
LABEL_12:
    v27 = (uint64_t)v73;
    v28 = v71;
    goto LABEL_16;
  }
  v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v12, v10, v26);
  v28 = v71;
  if ((v13 - 1) > 1u)
  {
    v31 = URL.absoluteString.getter(v29);
    v84 = &type metadata for String;
    *(_QWORD *)&v83 = v31;
    *((_QWORD *)&v83 + 1) = v32;
    sub_100048ABC(&v83, v82);
    v33 = swift_isUniquelyReferenced_nonNull_native(v23);
    v81 = v23;
    sub_1005EE168(v82, 0xD000000000000026, 0x8000000100E44E30, v33);
    v23 = v81;
    v30 = swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t, __n128))(v25 + 8))(v12, v26, v30);
  v27 = (uint64_t)v73;
LABEL_16:
  v34 = UIImagePNGRepresentation(v28);
  if (v34)
  {
    v35 = v34;
    v36 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v38 = v37;

    v39 = 0xD00000000000002ALL;
    v40 = 0x8000000100E44E00;
    if (v13 != 1)
    {
      v39 = 0xD000000000000028;
      v40 = 0x8000000100E44DA0;
    }
    if (v13)
      v41 = v39;
    else
      v41 = 0xD00000000000002BLL;
    if (v13)
      v42 = v40;
    else
      v42 = 0x8000000100E44DD0;
    v84 = &type metadata for Data;
    *(_QWORD *)&v83 = v36;
    *((_QWORD *)&v83 + 1) = v38;
    sub_100048ABC(&v83, v82);
    sub_100079DE4(v36, v38);
    v43 = swift_isUniquelyReferenced_nonNull_native(v23);
    v81 = v23;
    sub_1005EE168(v82, v41, v42, v43);
    v23 = v81;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000652DC(v36, v38);
  }
  v44 = UIImagePNGRepresentation(v72);
  if (v44)
  {
    v45 = v44;
    v46 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v48 = v47;

    v49 = 0x8000000100E44D70;
    v50 = v70;
    if (v13 == 1)
      v50 = 0xD000000000000027;
    else
      v49 = 0x8000000100E44D10;
    if (v13)
      v51 = v50;
    else
      v51 = 0xD000000000000028;
    if (v13)
      v52 = v49;
    else
      v52 = 0x8000000100E44D40;
    v84 = &type metadata for Data;
    *(_QWORD *)&v83 = v46;
    *((_QWORD *)&v83 + 1) = v48;
    sub_100048ABC(&v83, v82);
    sub_100079DE4(v46, v48);
    v53 = swift_isUniquelyReferenced_nonNull_native(v23);
    v81 = v23;
    sub_1005EE168(v82, v51, v52, v53);
    v23 = v81;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000652DC(v46, v48);
  }
  v54 = v79;
  v55 = v78;
  v56 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v57 = sub_100007E8C((uint64_t *)&unk_1011AE300);
  v58 = swift_allocObject(v57, 40, 7);
  v79 = xmmword_100EA7AA0;
  *(_OWORD *)(v58 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v58 + 32) = v23;
  sub_100007E8C((uint64_t *)&unk_1011A3090);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v60 = sub_100007E8C(&qword_1011C8928);
  inited = swift_initStackObject(v60, v80);
  *(_OWORD *)(inited + 16) = v79;
  *(_QWORD *)(inited + 32) = UIPasteboardOptionExpirationDate;
  v62 = UIPasteboardOptionExpirationDate;
  v63 = v75;
  Date.init()(v62);
  v64 = v77;
  *(_QWORD *)(inited + 64) = v77;
  v65 = sub_100049F68((_QWORD *)(inited + 40));
  Date.addingTimeInterval(_:)(v65, 300.0);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v63, v64);
  sub_100043EEC(inited);
  type metadata accessor for OptionsKey(0);
  sub_10079B3A0();
  v66 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v56, "setItems:options:", isa, v66, swift_bridgeObjectRelease().n128_f64[0]);

  v67 = *(void (**)(uint64_t, _QWORD, _QWORD))(v74 + OBJC_IVAR____TtC5Music22StorySharingController_openURL);
  swift_retain();
  sub_100415274(v13, v27);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v27, 0, 1, v54);
  v67(v27, 0, 0);
  swift_release();
  return sub_10004FF60(v27, &qword_10119E460);
}

uint64_t sub_10079A6BC(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 + 32) = v2;
  *(double *)(v3 + 16) = a1;
  *(double *)(v3 + 24) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A63A0);
  *(_QWORD *)(v3 + 40) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  *(_QWORD *)(v3 + 48) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A1440);
  *(_QWORD *)(v3 + 56) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v3 + 64) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 72) = v8;
  *(_QWORD *)(v3 + 80) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10079A78C, 0, 0);
}

uint64_t sub_10079A78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC5Music22StorySharingController_artwork, v3, &qword_1011A1440);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 56), &qword_1011A1440);
    v4 = sub_10079B35C();
    swift_allocError(&type metadata for StorySharingController.LoadArtworkFailure, v4, 0, 0);
    swift_willThrow(v5);
    v7 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 48);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 32))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
    v12 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    objc_msgSend(v12, "displayScale");
    v14 = v13;

    v15 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
    v16 = type metadata accessor for Artwork.ImageFormat(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 1, 1, v16);
    v17 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1]);
    *(_QWORD *)(v0 + 88) = v17;
    *v17 = v0;
    v17[1] = sub_10079A95C;
    return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 40), 0, 0, *(double *)(v0 + 16), *(double *)(v0 + 24), 1.0 / v14);
  }
}

uint64_t sub_10079A95C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  *(_QWORD *)(*(_QWORD *)v2 + 96) = v1;
  swift_task_dealloc(v5);
  v6 = v4[5];
  v7 = v4[6];
  if (v1)
  {
    sub_10004FF60(v6, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v7, (uint64_t *)&unk_1011A14A0);
    v8 = sub_10079AA7C;
  }
  else
  {
    v4[13] = a1;
    sub_10004FF60(v6, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v7, (uint64_t *)&unk_1011A14A0);
    v8 = sub_10079AA0C;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_10079AA0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v1, *(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 104));
}

uint64_t sub_10079AA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10079AAE8()
{
  uint64_t v0;

  sub_10004FF60(v0 + OBJC_IVAR____TtC5Music22StorySharingController_artwork, &qword_1011A1440);
  sub_100064B4C(v0 + OBJC_IVAR____TtC5Music22StorySharingController_presentationSource);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music22StorySharingController_renderer));
  swift_release();
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10079AB68()
{
  return type metadata accessor for StorySharingController(0);
}

uint64_t type metadata accessor for StorySharingController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C8780, (uint64_t)&nominal type descriptor for StorySharingController);
}

void sub_10079AB84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_100ECF8D8;
  sub_10015C698(319, (unint64_t *)&qword_1011B66A0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100ECF8F0;
    v4[3] = &unk_100ECF908;
    v4[4] = (char *)&value witness table for () + 64;
    v4[5] = &unk_100ECF920;
    v4[6] = (char *)&value witness table for () + 64;
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
  }
}

uint64_t *sub_10079AC38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      v13 = sub_100007E8C(&qword_10119E460);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10079AD30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *sub_10079ADC4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = sub_100007E8C(&qword_10119E460);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_10079AE90(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100007E8C(&qword_10119E460);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *sub_10079AFA8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = sub_100007E8C(&qword_10119E460);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_10079B074(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100007E8C(&qword_10119E460);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t sub_10079B18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10079B198);
}

uint64_t sub_10079B198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C(&qword_10119E460);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_10079B210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10079B21C);
}

uint64_t sub_10079B21C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C(&qword_10119E460);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for StorySharingController.ShareData(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C88E8, (uint64_t)&nominal type descriptor for StorySharingController.ShareData);
}

void sub_10079B2B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10015C698(319, qword_1011ACF90, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t sub_10079B344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10079B354(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10079B35C()
{
  unint64_t result;

  result = qword_1011C8920;
  if (!qword_1011C8920)
  {
    result = swift_getWitnessTable(&unk_100ECFA74, &type metadata for StorySharingController.LoadArtworkFailure);
    atomic_store(result, (unint64_t *)&qword_1011C8920);
  }
  return result;
}

unint64_t sub_10079B3A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119D8A0;
  if (!qword_10119D8A0)
  {
    type metadata accessor for OptionsKey(255);
    result = swift_getWitnessTable(&unk_100EA7898, v1);
    atomic_store(result, (unint64_t *)&qword_10119D8A0);
  }
  return result;
}

uint64_t sub_10079B3E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10079B3F8(uint64_t a1)
{
  uint64_t v1;

  sub_100799E44(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10079B400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StorySharingController.ShareData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10079B444(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StorySharingController.ShareData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10079B480()
{
  unint64_t result;

  result = qword_1011C8930;
  if (!qword_1011C8930)
  {
    result = swift_getWitnessTable(&unk_100ECFA34, &type metadata for StorySharingController.StoryError);
    atomic_store(result, (unint64_t *)&qword_1011C8930);
  }
  return result;
}

uint64_t sub_10079B4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StorySharingController.ShareData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for StorySharingController.StoryError()
{
  return &type metadata for StorySharingController.StoryError;
}

uint64_t _s5Music22StorySharingControllerC10StoryErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10079B55C + 4 * byte_100ECF8A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10079B57C + 4 * byte_100ECF8A5[v4]))();
}

_BYTE *sub_10079B55C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10079B57C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10079B584(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10079B58C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10079B594(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10079B59C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StorySharingController.LoadArtworkFailure()
{
  return &type metadata for StorySharingController.LoadArtworkFailure;
}

unint64_t sub_10079B5BC()
{
  unint64_t result;

  result = qword_1011C8938;
  if (!qword_1011C8938)
  {
    result = swift_getWitnessTable(&unk_100ECF9A4, &type metadata for StorySharingController.LoadArtworkFailure);
    atomic_store(result, (unint64_t *)&qword_1011C8938);
  }
  return result;
}

unint64_t sub_10079B604()
{
  unint64_t result;

  result = qword_1011C8940;
  if (!qword_1011C8940)
  {
    result = swift_getWitnessTable(&unk_100ECFA0C, &type metadata for StorySharingController.StoryError);
    atomic_store(result, (unint64_t *)&qword_1011C8940);
  }
  return result;
}

uint64_t sub_10079B648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, _QWORD *);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  __n128 v48;
  char isUniquelyReferenced_nonNull_native;
  void (*v50)(unint64_t, uint64_t);
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  _QWORD *v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  __n128 v70;
  unint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t result;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  int64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;
  int64_t v114;
  uint64_t v115;
  _QWORD v116[2];
  _QWORD v117[3];
  uint64_t v118;
  _QWORD v119[5];
  _BYTE v120[32];
  _OWORD v121[2];
  _OWORD v122[2];
  uint64_t v123;
  _OWORD v124[2];
  _OWORD v125[2];
  uint64_t v126;
  char v127[32];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v99 = (char *)&v96 - v6;
  v7 = type metadata accessor for VideoArtwork(0);
  v107 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v103 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011BCC50);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v104 = (char *)&v96 - v13;
  v14 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v113 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v112 = (unint64_t)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v96 - v17;
  v19 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicJSCore14JSVideoArtwork_dictionary);
  swift_beginAccess(v19, v127, 0, 0);
  v20 = *v19;
  if (!*v19)
    return 0;
  v100 = v12;
  v96 = v5;
  v97 = v2;
  v98 = v1;
  swift_bridgeObjectRetain();
  v21 = (_QWORD *)sub_100041D8C((uint64_t)_swiftEmptyArrayStorage);
  v22 = *(_QWORD *)(v20 + 64);
  v102 = v20 + 64;
  v23 = 1 << *(_BYTE *)(v20 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v115 = v24 & v22;
  v105 = (unint64_t)(v23 + 63) >> 6;
  v25 = v120;
  v110 = (uint64_t)v125 + 8;
  v111 = (char *)v122 + 8;
  swift_bridgeObjectRetain();
  v26 = 0;
  v108 = v120;
  v109 = (char *)&type metadata for Any + 8;
  v27 = v107;
  v28 = v20;
  v29 = v115;
  v106 = v28;
  v101 = v18;
  while (1)
  {
    if (v29)
    {
      v114 = v26;
      v115 = (v29 - 1) & v29;
      v30 = __clz(__rbit64(v29)) | (v26 << 6);
      v31 = (uint64_t)v111;
    }
    else
    {
      v32 = v26 + 1;
      v31 = (uint64_t)v111;
      if (__OFADD__(v26, 1))
      {
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v25);
        __break(1u);
        return result;
      }
      if (v32 >= v105)
        goto LABEL_55;
      v33 = *(_QWORD *)(v102 + 8 * v32);
      v34 = v26 + 1;
      if (!v33)
      {
        v34 = v26 + 2;
        if (v26 + 2 >= v105)
          goto LABEL_55;
        v33 = *(_QWORD *)(v102 + 8 * v34);
        if (!v33)
        {
          v34 = v26 + 3;
          if (v26 + 3 >= v105)
            goto LABEL_55;
          v33 = *(_QWORD *)(v102 + 8 * v34);
          if (!v33)
          {
            v34 = v26 + 4;
            if (v26 + 4 >= v105)
              goto LABEL_55;
            v33 = *(_QWORD *)(v102 + 8 * v34);
            if (!v33)
            {
              v35 = v26 + 5;
              if (v26 + 5 >= v105)
              {
LABEL_55:
                swift_release(v28);
                swift_bridgeObjectRelease(v28);
                return (uint64_t)v21;
              }
              v33 = *(_QWORD *)(v102 + 8 * v35);
              if (!v33)
              {
                while (1)
                {
                  v34 = v35 + 1;
                  if (__OFADD__(v35, 1))
                    goto LABEL_62;
                  if (v34 >= v105)
                    goto LABEL_55;
                  v33 = *(_QWORD *)(v102 + 8 * v34);
                  ++v35;
                  if (v33)
                    goto LABEL_24;
                }
              }
              v34 = v26 + 5;
            }
          }
        }
      }
LABEL_24:
      v114 = v34;
      v115 = (v33 - 1) & v33;
      v30 = __clz(__rbit64(v33)) + (v34 << 6);
    }
    sub_100051FEC(*(_QWORD *)(v28 + 48) + 40 * v30, (uint64_t)v124);
    sub_10004FA40(*(_QWORD *)(v28 + 56) + 32 * v30, v110);
    v122[0] = v125[0];
    v122[1] = v125[1];
    v123 = v126;
    v121[0] = v124[0];
    v121[1] = v124[1];
    sub_100051FEC((uint64_t)v121, (uint64_t)v119);
    sub_10004FA40(v31, (uint64_t)v25);
    v36 = sub_100007E8C((uint64_t *)&unk_1011A3090);
    if (!swift_dynamicCast(v116, v25, v109, v36, 6))
    {
      sub_10004FF2C((uint64_t)v119);
      goto LABEL_49;
    }
    v37 = v116[0];
    sub_10004FF2C((uint64_t)v119);
    sub_100051FEC((uint64_t)v121, (uint64_t)v119);
    sub_10004FA40(v31, (uint64_t)v25);
    if ((swift_dynamicCast(v116, v119, &type metadata for AnyHashable, &type metadata for String, 6) & 1) == 0)
      break;
    v38 = v25;
    v25 = (_QWORD *)v14;
    v39 = v116[0];
    v40 = v116[1];
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v38);
    EditorialVideoArtworkFlavor.init(_:)(v39, v40);
    if (!v21)
    {
      v14 = (uint64_t)v25;
      (*(void (**)(char *, _QWORD *))(v113 + 8))(v18, v25);
      swift_bridgeObjectRelease(v37);
      v25 = v108;
      v26 = v114;
      goto LABEL_6;
    }
    v41 = *(void (**)(uint64_t, char *, _QWORD *))(v113 + 16);
    v42 = v18;
    v43 = v112;
    v14 = (uint64_t)v25;
    v41(v112, v42, v25);
    v44 = (uint64_t)v104;
    VideoArtwork.init(_:)(v37);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v44, 1, v7) == 1)
    {
      sub_10004FF60(v44, &qword_1011BCC50);
      swift_bridgeObjectRetain();
      v45 = sub_10079C3DC(v43);
      v47 = v46;
      v48 = swift_bridgeObjectRelease(v21);
      if ((v47 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
        v119[0] = v21;
        v18 = v101;
        v25 = v108;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1007A97E4();
          v21 = (_QWORD *)v119[0];
        }
        v50 = *(void (**)(unint64_t, uint64_t))(v113 + 8);
        v50(v21[6] + *(_QWORD *)(v113 + 72) * v45, v14);
        v21 = (_QWORD *)v119[0];
        v51 = (uint64_t)v100;
        (*(void (**)(char *, unint64_t, uint64_t))(v27 + 32))(v100, *(_QWORD *)(v119[0] + 56) + *(_QWORD *)(v27 + 72) * v45, v7);
        sub_1007AC444(v45, (uint64_t)v21);
        v52 = swift_bridgeObjectRelease(0x8000000000000000);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v27 + 56))(v51, 0, 1, v7, v52);
      }
      else
      {
        v51 = (uint64_t)v100;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v27 + 56))(v100, 1, 1, v7, v48);
        v50 = *(void (**)(unint64_t, uint64_t))(v113 + 8);
        v18 = v101;
        v25 = v108;
      }
      v50(v112, v14);
      sub_10004FF60(v51, &qword_1011BCC50);
      goto LABEL_46;
    }
    v53 = v7;
    v54 = *(void (**)(char *, uint64_t))(v27 + 32);
    v55 = v53;
    v54(v103, v44);
    v56 = swift_isUniquelyReferenced_nonNull_native(v21);
    v119[0] = v21;
    v58 = sub_10079C3DC(v43);
    v59 = v21[2];
    v60 = (v57 & 1) == 0;
    v61 = v59 + v60;
    if (__OFADD__(v59, v60))
      goto LABEL_60;
    v62 = v57;
    if (v21[3] >= v61)
    {
      v18 = v101;
      if ((v56 & 1) == 0)
        sub_1007A97E4();
      v63 = v112;
      v66 = (_QWORD *)v119[0];
      if ((v62 & 1) == 0)
        goto LABEL_37;
    }
    else
    {
      sub_1007A49D4(v61, v56);
      v63 = v112;
      v64 = sub_10079C3DC(v112);
      v18 = v101;
      if ((v62 & 1) != (v65 & 1))
        goto LABEL_63;
      v58 = v64;
      v66 = (_QWORD *)v119[0];
      if ((v62 & 1) == 0)
      {
LABEL_37:
        v66[(v58 >> 6) + 8] |= 1 << v58;
        v14 = (uint64_t)v25;
        v41(v66[6] + *(_QWORD *)(v113 + 72) * v58, (char *)v63, v25);
        ((void (*)(unint64_t, char *, uint64_t))v54)(v66[7] + *(_QWORD *)(v107 + 72) * v58, v103, v55);
        v67 = v66[2];
        v68 = __OFADD__(v67, 1);
        v69 = v67 + 1;
        if (v68)
          goto LABEL_61;
        v66[2] = v69;
        v7 = v55;
        goto LABEL_45;
      }
    }
    v7 = v55;
    (*(void (**)(unint64_t, char *, uint64_t))(v107 + 40))(v66[7] + *(_QWORD *)(v107 + 72) * v58, v103, v55);
    v14 = (uint64_t)v25;
LABEL_45:
    v21 = (_QWORD *)v119[0];
    v70 = swift_bridgeObjectRelease(0x8000000000000000);
    v50 = *(void (**)(unint64_t, uint64_t))(v113 + 8);
    ((void (*)(uint64_t, uint64_t, __n128))v50)(v63, v14, v70);
    v27 = v107;
    v25 = v108;
LABEL_46:
    v26 = v114;
    v50((unint64_t)v18, v14);
    v28 = v106;
LABEL_6:
    v29 = v115;
    sub_10004FF60((uint64_t)v121, &qword_10119DD10);
  }
  swift_bridgeObjectRelease(v37);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v25);
LABEL_49:
  v71 = sub_10079C190();
  v72 = swift_allocError(&_s14DataParseErrorON, v71, 0, 0);
  swift_willThrow(v73);
  swift_bridgeObjectRelease(v21);
  sub_10004FF60((uint64_t)v121, &qword_10119DD10);
  v74 = v106;
  swift_release(v106);
  swift_bridgeObjectRelease(v74);
  *(_QWORD *)&v124[0] = v72;
  swift_errorRetain(v72);
  v75 = sub_100007E8C(&qword_1011A14B0);
  v76 = swift_dynamicCast(v75, v124, v75, &_s14DataParseErrorON, 0);
  v78 = v97;
  v77 = v98;
  if ((v76 & 1) != 0)
  {
    swift_errorRelease(v72);
    v79 = Logger.motion.unsafeMutableAddressor();
    v80 = v99;
    v81 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 16))(v99, v79, v77);
    v82 = Logger.logObject.getter(v81);
    v83 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v82, v83))
    {
      v84 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v84 = 0;
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "Invalid structure: Data was not in [String: [String: Any]] format.", v84, 2u);
      swift_slowDealloc(v84, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v77);
    swift_errorRelease(*(_QWORD *)&v124[0]);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)&v124[0]);
    v85 = Logger.motion.unsafeMutableAddressor();
    v86 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v96, v85, v77);
    swift_errorRetain(v72);
    v87 = swift_errorRetain(v72);
    v88 = Logger.logObject.getter(v87);
    v89 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc(12, -1);
      v91 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v124[0] = v91;
      *(_DWORD *)v90 = 136446210;
      swift_getErrorValue(v72, &v118, v117);
      v92 = Error.localizedDescription.getter(v117[1], v117[2]);
      v94 = v93;
      *(_QWORD *)&v121[0] = sub_100322200(v92, v93, (uint64_t *)v124);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v121, (char *)v121 + 8);
      swift_bridgeObjectRelease(v94);
      swift_errorRelease(v72);
      swift_errorRelease(v72);
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Unrecognized error parsing JSVideoArtwork.Dictionary: %{public}s", v90, 0xCu);
      swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v90, -1, -1);

      swift_errorRelease(v72);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v86, v98);
    }
    else
    {
      swift_errorRelease(v72);
      swift_errorRelease(v72);
      swift_errorRelease(v72);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v86, v77);
    }
  }
  return 0;
}

uint64_t sub_10079C0F0()
{
  _QWORD **v0;
  uint64_t result;
  void *v2;
  uint64_t v3;

  result = (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x1A8))();
  if (result)
  {
    v2 = (void *)result;
    v3 = sub_10079B648();

    return v3;
  }
  return result;
}

uint64_t sub_10079C140()
{
  _QWORD **v0;
  uint64_t result;
  void *v2;
  uint64_t v3;

  result = (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x1F0))();
  if (result)
  {
    v2 = (void *)result;
    v3 = sub_10079B648();

    return v3;
  }
  return result;
}

unint64_t sub_10079C190()
{
  unint64_t result;

  result = qword_1011C8948;
  if (!qword_1011C8948)
  {
    result = swift_getWitnessTable(&unk_100ECFBF4, &_s14DataParseErrorON);
    atomic_store(result, (unint64_t *)&qword_1011C8948);
  }
  return result;
}

unint64_t sub_10079C1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  swift_bridgeObjectRetain();
  String.hash(into:)(v7, a1, a2);
  swift_bridgeObjectRelease(a2);
  v5 = Hasher._finalize()();
  return sub_10079CDF0(a1, a2, v5);
}

unint64_t sub_10079C248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10079E5B8(a1, v4, (unint64_t *)&qword_10119E4F0, MPIdentifierSet_ptr);
}

unint64_t sub_10079C294(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10079CED0(a1, v4);
}

unint64_t sub_10079C2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_10079CDF0(a1, a2, v5);
}

unint64_t sub_10079C32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  Swift::Int v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, *(_QWORD *)(v4 + 40));
  swift_bridgeObjectRetain();
  String.hash(into:)(v11, a1, a2);
  swift_bridgeObjectRelease(a2);
  if (a4)
  {
    swift_bridgeObjectRetain();
    String.hash(into:)(v11, a3, a4);
    swift_bridgeObjectRelease(a4);
  }
  v9 = Hasher._finalize()();
  return sub_10079CF94(a1, a2, a3, a4, v9);
}

unint64_t sub_10079C3DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v6 = sub_100048748(&qword_1011C8950, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialVideoArtworkFlavor, (uint64_t)&protocol conformance descriptor for EditorialVideoArtworkFlavor);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10079DED4(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialVideoArtworkFlavor, &qword_1011A6EE0, (uint64_t)&protocol conformance descriptor for EditorialVideoArtworkFlavor);
}

void sub_10079C474(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_10079C4CC()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v3;

  String.hash(into:)(&v3, 0x6F4E6E657473696CLL, 0xE900000000000077);
  swift_bridgeObjectRelease(0xE900000000000077);
  v1 = Hasher._finalize()();
  return sub_10079D09C(v0, v1);
}

unint64_t sub_10079C56C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:_:)(*(_QWORD *)(v1 + 40), a1);
  return sub_10079D734(a1, v3);
}

unint64_t sub_10079C5A4(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  sub_1002FA294();
  v3 = Hasher._finalize()();
  return sub_10079D2CC(a1, v3);
}

unint64_t sub_10079C5FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10, *(_QWORD *)(v1 + 40));
  if (a1 < 0)
  {
    Hasher._combine(_:)(1uLL);
    v6 = *(_QWORD *)(a1 + 16);
    v7 = *(_QWORD *)(a1 + 24);
    swift_retain();
    String.hash(into:)(v10, v6, v7);
    sub_1001A7ABC(a1);
  }
  else
  {
    Hasher._combine(_:)(0);
    v3 = Library.Menu.Identifier.rawValue.getter(a1);
    v5 = v4;
    String.hash(into:)(v10, v3, v4);
    swift_bridgeObjectRelease(v5);
  }
  v8 = Hasher._finalize()();
  return sub_10079D3C4(a1, v8);
}

unint64_t sub_10079C6C0(Swift::UInt a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_10079D734(a1, v3);
}

unint64_t sub_10079C71C(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_10079DE34(a1, v3);
}

unint64_t sub_10079C780(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v2 = v1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v2 + 40));
  v4 = a1 & 1;
  if ((a1 & 1) != 0)
    v5 = 0x6F4E6E657473696CLL;
  else
    v5 = 0x487972617262696CLL;
  if ((a1 & 1) != 0)
    v6 = 0xEF72656461654877;
  else
    v6 = 0xED00007265646165;
  String.hash(into:)(v9, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()();
  return sub_10079D7D0(v4, v7);
}

unint64_t sub_10079C82C(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = v1;
  v4 = a1;
  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  if (v4 == 9)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(a1);
  }
  v5 = Hasher._finalize()();
  return sub_10079D92C(a1, v5);
}

unint64_t sub_10079C8AC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = v1;
  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  if ((a1 & 1) != 0)
    v4 = 0x7972617262696CLL;
  else
    v4 = 0x676F6C61746163;
  String.hash(into:)(v7, v4, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  v5 = Hasher._finalize()();
  return sub_10079D9B8(a1 & 1, v5);
}

uint64_t sub_10079C934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, *(_QWORD *)(v1 + 40));
  v3 = sub_100253EDC(a1);
  v5 = v4;
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v5);
  v6 = Hasher._finalize()();
  return sub_10079DABC(a1, v6);
}

unint64_t sub_10079C9A8(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_10079DE34(a1, v3);
}

unint64_t sub_10079CA00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_10079E2A4(a1, v7);
}

unint64_t sub_10079CA8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for IndexPath(0);
  v6 = sub_100048748(&qword_1011B5D98, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10079DED4(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, &qword_1011AB870, (uint64_t)&protocol conformance descriptor for IndexPath);
}

unint64_t sub_10079CB24(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v1 + 40));
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x7478654E7075;
    else
      v3 = 0x79616C506F747561;
    if (a1 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE800000000000000;
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x79726F74736968;
  }
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = Hasher._finalize()();
  return sub_10079E004(a1, v5);
}

unint64_t sub_10079CBD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10079E19C(a1, v4);
}

unint64_t sub_10079CC04(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v1 + 40));
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x73636972796CLL;
    else
      v3 = 0x6575657571;
    if (a1 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE500000000000000;
  }
  else
  {
    v4 = 0xEB000000006D6574;
    v3 = 0x49746E6572727563;
  }
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease();
  v5 = Hasher._finalize()();
  return sub_10079E418(a1, v5);
}

unint64_t sub_10079CCB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10079E5B8(a1, v4, &qword_1011A3AF8, MPCPlayerPath_ptr);
}

void sub_10079CD04(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_10079CD54()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v3;

  String.hash(into:)(&v3, 0x6573776F7262, 0xE600000000000000);
  swift_bridgeObjectRelease();
  v1 = Hasher._finalize()();
  return sub_10079E6C8(v0, v1);
}

unint64_t sub_10079CDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10079CED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_100051FEC(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10004FF2C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10079CF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v16 = v15[1];
      v18 = v15[2];
      v17 = v15[3];
      v19 = *v15 == a1 && v16 == a2;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v15, v16, a1, a2, 0) & 1) != 0)
      {
        if (v17)
        {
          if (a4)
          {
            v20 = v18 == a3 && v17 == a4;
            if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v17, a3, a4, 0) & 1) != 0)
              return v8;
          }
        }
        else if (!a4)
        {
          return v8;
        }
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

uint64_t sub_10079D09C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_10079D2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v16;

  v5 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1001FFA40(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8);
      sub_100300E0C((uint64_t)v8, a1);
      v14 = v13;
      sub_1003B260C((uint64_t)v8);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_10079D3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v14;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    v14 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v4);
      if (v7 < 0)
      {
        if (a1 < 0)
        {
          v8 = *(_QWORD *)(v7 + 16);
          v9 = *(_QWORD *)(v7 + 24);
          v10 = *(_QWORD *)(v14 + 16);
          v11 = *(_QWORD *)(v14 + 24);
          v12 = v8 == v10 && v9 == v11;
          if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0) & 1) != 0)
            return v4;
        }
      }
      else if ((a1 & 0x8000000000000000) == 0)
      {
        __asm { BR              X9 }
      }
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10079D734(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_10079D7D0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x6F4E6E657473696CLL;
    else
      v6 = 0x487972617262696CLL;
    if ((a1 & 1) != 0)
      v7 = 0xEF72656461654877;
    else
      v7 = 0xED00007265646165;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x6F4E6E657473696CLL : 0x487972617262696CLL;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xEF72656461654877 : 0xED00007265646165;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v4;
}

unint64_t sub_10079D92C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  int v7;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + result);
      if (v7 == 9)
      {
        if (a1 == 9)
          return result;
      }
      else if (a1 != 9 && v7 == a1)
      {
        return result;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10079D9B8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x7972617262696CLL;
    else
      v6 = 0x676F6C61746163;
    while (1)
    {
      v7 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x7972617262696CLL : 0x676F6C61746163;
      if (v7 == v6)
        break;
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, 0xE700000000000000, v6, 0xE700000000000000, 0);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      if ((v8 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  }
  return v4;
}

uint64_t sub_10079DABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_10079DE34(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_10079DED4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  unint64_t *v22;
  uint64_t v23;

  v22 = a4;
  v23 = a5;
  v6 = v5;
  v20 = a1;
  v21 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      v17 = sub_100048748(v22, v21, v23);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v20, v8, v17);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v18 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_10079E004(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0xE600000000000000;
          v8 = 0x7478654E7075;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v7 = 0xE800000000000000;
          v8 = 0x79616C506F747561;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v11 = 0xE700000000000000;
            v10 = 0x79726F74736968;
            if (v8 != 0x79726F74736968)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v7 = 0xE700000000000000;
        v8 = 0x79726F74736968;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 0x7478654E7075;
      else
        v10 = 0x79616C506F747561;
      if (v9 == 1)
        v11 = 0xE600000000000000;
      else
        v11 = 0xE800000000000000;
      if (v8 != v10)
        goto LABEL_19;
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n(v7, 2);
        return v4;
      }
LABEL_19:
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v7, v10, v11, 0);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_10079E19C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for JSGridSection();
    v7 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v8 = static NSObject.== infix(_:_:)(v7, a1);

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = static NSObject.== infix(_:_:)(v10, a1);

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_10079E2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10079E418(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0xE600000000000000;
          v8 = 0x73636972796CLL;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v7 = 0xE500000000000000;
          v8 = 0x6575657571;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v10 = 0x49746E6572727563;
            v11 = 0xEB000000006D6574;
            if (v8 != 0x49746E6572727563)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v8 = 0x49746E6572727563;
        v7 = 0xEB000000006D6574;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 0x73636972796CLL;
      else
        v10 = 0x6575657571;
      if (v9 == 1)
        v11 = 0xE600000000000000;
      else
        v11 = 0xE500000000000000;
      if (v8 != v10)
        goto LABEL_19;
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n(v7, 2);
        return v4;
      }
LABEL_19:
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v7, v10, v11, 0);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_10079E5B8(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t i;
  id v9;
  char v10;
  uint64_t v11;
  id v12;
  char v13;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  i = a2 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_10004A07C(0, a3, a4);
    v9 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
    v10 = static NSObject.== infix(_:_:)(v9, a1);

    if ((v10 & 1) == 0)
    {
      v11 = ~v6;
      for (i = (i + 1) & v11; ((*(_QWORD *)(v5 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v11)
      {
        v12 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
        v13 = static NSObject.== infix(_:_:)(v12, a1);

        if ((v13 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_10079E6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

void sub_10079E8E0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(a4 + 40));
  __asm { BR              X10 }
}

unint64_t sub_10079E944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  Swift::Int v4;
  unint64_t result;
  _QWORD *v6;
  uint64_t v7;

  String.hash(into:)(&v7, 0x6F4E6E657473696CLL, 0xE900000000000077);
  swift_bridgeObjectRelease(0xE900000000000077);
  v4 = Hasher._finalize()();
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(v0 + 32)), v0 + 64, ~(-1 << *(_BYTE *)(v0 + 32)));
  *(_QWORD *)(v0 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_BYTE *)(*(_QWORD *)(v0 + 48) + result) = v3;
  v6 = (_QWORD *)(*(_QWORD *)(v0 + 56) + 16 * result);
  *v6 = v2;
  v6[1] = v1;
  ++*(_QWORD *)(v0 + 16);
  return result;
}

void sub_10079EA3C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(a4 + 40));
  __asm { BR              X10 }
}

unint64_t sub_10079EAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  Swift::Int v4;
  unint64_t result;
  _QWORD *v6;
  uint64_t v7;

  String.hash(into:)(&v7, 0x6F4E6E657473696CLL, 0xE900000000000077);
  swift_bridgeObjectRelease(0xE900000000000077);
  v4 = Hasher._finalize()();
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(v0 + 32)), v0 + 64, ~(-1 << *(_BYTE *)(v0 + 32)));
  *(_QWORD *)(v0 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_BYTE *)(*(_QWORD *)(v0 + 48) + result) = v3;
  v6 = (_QWORD *)(*(_QWORD *)(v0 + 56) + 16 * result);
  *v6 = v2;
  v6[1] = v1;
  ++*(_QWORD *)(v0 + 16);
  return result;
}

void sub_10079EB98(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D1F8);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_100048ABC(v24, v38);
      }
      else
      {
        sub_10004FA40((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_100048ABC(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_10079EE94(uint64_t a1, uint64_t a2)
{
  sub_1007A4398(a1, a2, &qword_10119D5A0);
}

void sub_10079EEA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D4D0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  if (*(_QWORD *)(v5 + 16))
  {
    v24 = v3;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    v10 = -1;
    if (v8 < 64)
      v10 = ~(-1 << v8);
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return;
        }
        if (v16 >= v12)
          goto LABEL_25;
        v17 = v9[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v12)
            goto LABEL_25;
          v17 = v9[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v12)
            {
LABEL_25:
              swift_release(v5);
              v3 = v24;
              if ((a2 & 1) != 0)
              {
                v23 = 1 << *(_BYTE *)(v5 + 32);
                if (v23 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v23;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v9[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_32;
                if (v13 >= v12)
                  goto LABEL_25;
                v17 = v9[v13];
                ++v18;
                if (v17)
                  goto LABEL_22;
              }
            }
            v13 = v18;
          }
        }
LABEL_22:
        v11 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v15);
      v20 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v15);
      v21 = *v20;
      v22 = v20[1];
      if ((a2 & 1) == 0)
      {
        swift_retain(*v20);
        swift_retain(v22);
      }
      sub_10079E8E0(v19, v21, v22, v7);
    }
  }
  swift_release(v5);
  *v3 = v7;
}

void sub_10079F0A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D260);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_34;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_36;
      v26 = *(_QWORD *)(v42 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v13 >= v41)
              goto LABEL_36;
            v26 = *(_QWORD *)(v42 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v13 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v44, v35, v34);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_10079F3C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D368);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_10079F6D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t *v36;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D360);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v36 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v33 = -1 << v10;
    v34 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v22 >= v35)
          goto LABEL_36;
        v23 = v36[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_36;
          v23 = v36[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v34 >= 64)
                  bzero(v36, 8 * v35);
                else
                  *v36 = v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_44;
                if (v9 >= v35)
                  goto LABEL_36;
                v23 = v36[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v21);
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v21);
      v31 = *v30;
      v32 = v30[1];
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      v14 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v29);
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v18) = v29;
      v19 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v18);
      *v19 = v31;
      v19[1] = v32;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_10079F98C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  _QWORD v41[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D8E8);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v3;
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v14 << 6);
      goto LABEL_34;
    }
    v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v12)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v38 + 8 * v24);
    ++v14;
    if (!v26)
    {
      v14 = v24 + 1;
      if (v24 + 1 >= v12)
        goto LABEL_36;
      v26 = *(_QWORD *)(v38 + 8 * v14);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v37;
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v14 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v26 = *(_QWORD *)(v38 + 8 * v14);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v14 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v14 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v40 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v32);
    if ((v39 & 1) == 0)
      swift_bridgeObjectRetain();
    Hasher.init(_seed:)(v41, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v41, v35, v34);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v18 == v29;
        if (v18 == v29)
          v18 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v31 == -1);
      v19 = __clz(__rbit64(~v31)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 16 * v19;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v20);
    *v21 = v35;
    v21[1] = v34;
    *(_OWORD *)(*(_QWORD *)(v8 + 56) + v20) = v40;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v37;
  v25 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_10079FC98(uint64_t a1, uint64_t a2)
{
  sub_1007A604C(a1, a2, &qword_10119D210);
}

void sub_10079FCA4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  _QWORD v28[12];
  uint64_t *v29;
  const char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[6];

  v3 = v2;
  v6 = type metadata accessor for Playlist.Folder.Item(0);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  __chkstk_darwin(v6);
  v31 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for SidebarMenu.Item(0);
  v8 = *(_QWORD *)(v39 - 8);
  v9 = __chkstk_darwin(v39);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v40 = (uint64_t)v28 - v12;
  v13 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_100007E8C(&qword_10119D4E0);
  v14 = static _DictionaryStorage.resize(original:capacity:move:)(v13, a1, a2);
  if (*(_QWORD *)(v13 + 16))
  {
    v29 = v3;
    v15 = 1 << *(_BYTE *)(v13 + 32);
    v16 = *(_QWORD *)(v13 + 64);
    v35 = (_QWORD *)(v13 + 64);
    if (v15 < 64)
      v17 = ~(-1 << v15);
    else
      v17 = -1;
    v18 = v17 & v16;
    v34 = (unint64_t)(v15 + 63) >> 6;
    swift_retain(v13);
    v19 = 0;
    v30 = "account";
    v28[11] = "LibraryView.RecentlyAdded";
    v28[10] = "LibraryView.Playlists";
    v28[9] = "LibraryView.Artists";
    v28[8] = "LibraryView.Albums";
    v28[7] = "LibraryView.Songs";
    v28[6] = "LibraryView.MadeForYou";
    v28[5] = "LibraryView.MusicVideos";
    v28[4] = "LibraryView.Genres";
    v28[3] = "LibraryView.Compilations";
    v28[2] = "LibraryView.Composers";
    v28[1] = "LibraryView.Shows";
    v28[0] = "LibraryView.Downloaded";
    v36 = a2;
    v37 = v13;
    v38 = v11;
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      goto LABEL_20;
    }
    if (v34 > 1)
    {
      v21 = v35[1];
      v19 = 1;
      if (v21)
        goto LABEL_19;
      v19 = 2;
      if (v34 > 2)
      {
        v21 = v35[2];
        if (!v21)
        {
          v22 = 3;
          if (v34 > 3)
          {
            v21 = v35[3];
            if (v21)
            {
              v19 = 3;
              goto LABEL_19;
            }
            while (1)
            {
              v19 = v22 + 1;
              if (__OFADD__(v22, 1))
              {
                __break(1u);
                JUMPOUT(0x1007A03B8);
              }
              if (v19 >= v34)
                break;
              v21 = v35[v19];
              ++v22;
              if (v21)
                goto LABEL_19;
            }
          }
          goto LABEL_24;
        }
LABEL_19:
        v20 = __clz(__rbit64(v21)) + (v19 << 6);
LABEL_20:
        v23 = *(_QWORD *)(v13 + 48) + *(_QWORD *)(v8 + 72) * v20;
        v41 = v19;
        v24 = v40;
        if ((a2 & 1) != 0)
        {
          sub_10004A0B4(v23, v40);
        }
        else
        {
          sub_1001FFA40(v23, v40);
          v25 = *(id *)(*(_QWORD *)(v13 + 56) + 8 * v20);
        }
        Hasher.init(_seed:)(v42, *(_QWORD *)(v14 + 40));
        sub_1001FFA40(v24, (uint64_t)v11);
        v26 = (char *)&loc_1007A0074 + *((int *)qword_1007A03B8 + swift_getEnumCaseMultiPayload(v11, v39));
        __asm { BR              X9 }
      }
    }
LABEL_24:
    swift_release(v13);
    v3 = v29;
    if ((a2 & 1) != 0)
    {
      v27 = 1 << *(_BYTE *)(v13 + 32);
      if (v27 >= 64)
        bzero(v35, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      else
        *v35 = -1 << v27;
      *(_QWORD *)(v13 + 16) = 0;
    }
  }
  swift_release(v13);
  *v3 = v14;
}

void sub_1007A0404(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D460);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_36;
      v24 = *(_QWORD *)(v37 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v36)
              goto LABEL_36;
            v24 = *(_QWORD *)(v37 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_BYTE *)(*(_QWORD *)(v8 + 56) + v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1007A070C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  int v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D620);
  v7 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v9 = v8;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_49;
  v10 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v5 + 64);
  v36 = v3;
  v37 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v22 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v23 = v22 | (v14 << 6);
      goto LABEL_40;
    }
    v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      return;
    }
    if (v24 >= v37)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v38 + 8 * v24);
    ++v14;
    if (!v26)
    {
      v14 = v24 + 1;
      if (v24 + 1 >= v37)
        goto LABEL_42;
      v26 = *(_QWORD *)(v38 + 8 * v14);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v37)
        {
LABEL_42:
          swift_release(v5);
          v3 = v36;
          if ((v7 & 1) == 0)
            goto LABEL_49;
          goto LABEL_45;
        }
        v26 = *(_QWORD *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v14 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_51;
            if (v14 >= v37)
              goto LABEL_42;
            v26 = *(_QWORD *)(v38 + 8 * v14);
            ++v27;
            if (v26)
              goto LABEL_39;
          }
        }
        v14 = v27;
      }
    }
LABEL_39:
    v12 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v14 << 6);
LABEL_40:
    v32 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v23);
    v33 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v23);
    if ((v7 & 1) == 0)
      v34 = v33;
    Hasher.init(_seed:)(v39, *(_QWORD *)(v9 + 40));
    if (v32)
      v15 = 0x6F4E6E657473696CLL;
    else
      v15 = 0x487972617262696CLL;
    if (v32)
      v16 = 0xEF72656461654877;
    else
      v16 = 0xED00007265646165;
    String.hash(into:)(v39, v15, v16);
    swift_bridgeObjectRelease(v16);
    v17 = Hasher._finalize()();
    v18 = -1 << *(_BYTE *)(v9 + 32);
    v19 = v17 & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v13 + 8 * (v19 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v13 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_50;
        }
        v30 = v20 == v29;
        if (v20 == v29)
          v20 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v13 + 8 * v20);
      }
      while (v31 == -1);
      v21 = __clz(__rbit64(~v31)) + (v20 << 6);
    }
    *(_QWORD *)(v13 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v21) = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21) = v33;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v25 = (_QWORD *)(v5 + 64);
  if ((v7 & 1) == 0)
    goto LABEL_49;
LABEL_45:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v25, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_49:
  swift_release(v5);
  *v3 = v9;
}

void sub_1007A0A4C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D240);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_100048ABC(v24, v38);
      }
      else
      {
        sub_10004FA40((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      swift_bridgeObjectRetain();
      String.hash(into:)(v37, v23, v22);
      swift_bridgeObjectRelease(v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_100048ABC(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1007A0D58(uint64_t a1, uint64_t a2)
{
  sub_1007A16CC(a1, a2, &qword_10119D580);
}

void sub_1007A0D64(uint64_t a1, uint64_t a2)
{
  sub_1007A3D24(a1, a2, &qword_10119D588);
}

void sub_1007A0D70(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  char v39;
  _QWORD v40[9];
  char v41[8];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D218);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return;
        }
        if (v18 >= v37)
          goto LABEL_39;
        v19 = v38[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v37)
            goto LABEL_39;
          v19 = v38[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v37)
            {
LABEL_39:
              swift_release(v5);
              v3 = v36;
              if ((v39 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v5 + 32);
                if (v35 >= 64)
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v35;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v38[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_46;
                if (v13 >= v37)
                  goto LABEL_39;
                v19 = v38[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v17);
      v23 = *v21;
      v22 = v21[1];
      v25 = v21[2];
      v24 = v21[3];
      v26 = *(_QWORD *)(v5 + 56) + 8 * v17;
      if ((v39 & 1) != 0)
      {
        sub_100048ACC(v26, (uint64_t)v41);
      }
      else
      {
        sub_1007AC8E4(v26, (uint64_t)v41);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)(v40, *(_QWORD *)(v8 + 40));
      swift_bridgeObjectRetain();
      String.hash(into:)(v40, v23, v22);
      swift_bridgeObjectRelease(v22);
      if (v24)
      {
        swift_bridgeObjectRetain();
        String.hash(into:)(v40, v25, v24);
        swift_bridgeObjectRelease(v24);
      }
      v27 = Hasher._finalize()();
      v28 = -1 << *(_BYTE *)(v8 + 32);
      v29 = v27 & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v12 + 8 * v30);
        }
        while (v34 == -1);
        v14 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 32 * v14);
      *v15 = v23;
      v15[1] = v22;
      v15[2] = v25;
      v15[3] = v24;
      sub_100048ACC((uint64_t)v41, *(_QWORD *)(v8 + 56) + 8 * v14);
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1007A10C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  _QWORD *v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D318);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v9 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return;
        }
        if (v18 >= v13)
          goto LABEL_37;
        v19 = v34[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_37;
          v19 = v34[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_37:
              if ((v33 & 1) == 0)
              {
                swift_release(v5);
                v3 = v32;
                goto LABEL_44;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_46;
                if (v9 >= v13)
                  goto LABEL_37;
                v19 = v34[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v17);
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      Hasher.init(_seed:)(v35, *(_QWORD *)(v8 + 40));
      if (v21 == 9)
      {
        Hasher._combine(_:)(0);
      }
      else
      {
        Hasher._combine(_:)(1u);
        Hasher._combine(_:)(v21);
      }
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v15) = v21;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v15) = v22;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_44:
  *v3 = v8;
}

void sub_1007A13A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D490);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_36;
      v24 = *(_QWORD *)(v37 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v36)
              goto LABEL_36;
            v24 = *(_QWORD *)(v37 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    swift_bridgeObjectRetain();
    String.hash(into:)(v39, v32, v31);
    swift_bridgeObjectRelease(v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_BYTE *)(*(_QWORD *)(v8 + 56) + v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1007A16C0(uint64_t a1, uint64_t a2)
{
  sub_1007A16CC(a1, a2, &qword_1011A8F80);
}

void sub_1007A16CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_100007E8C(a3);
  v38 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v36 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  swift_retain();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v36)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v36)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v36)
        {
LABEL_36:
          swift_release();
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v36)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v39, *(_QWORD *)(v9 + 40));
    swift_bridgeObjectRetain();
    String.hash(into:)(v39, v33, v32);
    swift_bridgeObjectRelease();
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release();
  v24 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  swift_release();
  *v4 = v9;
}

void sub_1007A19EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D340);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_36;
      v24 = *(_QWORD *)(v37 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v36)
              goto LABEL_36;
            v24 = *(_QWORD *)(v37 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    swift_bridgeObjectRetain();
    String.hash(into:)(v39, v32, v31);
    swift_bridgeObjectRelease(v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1007A1D04(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D4A0);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_34;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_36;
      v26 = *(_QWORD *)(v42 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v13 >= v41)
              goto LABEL_36;
            v26 = *(_QWORD *)(v42 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v13 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    swift_bridgeObjectRetain();
    String.hash(into:)(v44, v35, v34);
    swift_bridgeObjectRelease(v34);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1007A2038(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  int v46;
  char *v47;
  uint64_t v48;
  _QWORD v49[9];

  v3 = v2;
  v48 = type metadata accessor for Album(0);
  v6 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v47 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_100007E8C(&qword_10119D568);
  v46 = a2;
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_43;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v45 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = v3;
  v44 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  v16 = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v44)
      break;
    v23 = v45;
    v24 = v45[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v44)
        goto LABEL_36;
      v24 = v45[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v44)
        {
LABEL_36:
          swift_release();
          v3 = v43;
          if ((v46 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = v45[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v17 >= v44)
              goto LABEL_36;
            v24 = v45[v17];
            ++v25;
            if (v24)
              goto LABEL_23;
          }
        }
        v17 = v25;
      }
    }
LABEL_23:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_24:
    v26 = *(_QWORD *)(v8 + 56);
    v27 = v8;
    v28 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v30 = *v28;
    v29 = v28[1];
    v31 = *(_QWORD *)(v6 + 72);
    v32 = v26 + v31 * v21;
    if ((v46 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 32))(v47, v32, v48, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v47, v32, v48, v16);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v49, *(_QWORD *)(v10 + 40));
    swift_bridgeObjectRetain();
    String.hash(into:)(v49, v30, v29);
    swift_bridgeObjectRelease(v29);
    v33 = Hasher._finalize()();
    v34 = -1 << *(_BYTE *)(v10 + 32);
    v35 = v33 & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v15 + 8 * (v35 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v15 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v15 + 8 * v36);
      }
      while (v40 == -1);
      v18 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v30;
    v19[1] = v29;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v10 + 56) + v31 * v18, v47, v48);
    ++*(_QWORD *)(v10 + 16);
    v8 = v27;
  }
  swift_release();
  v3 = v43;
  v23 = v45;
  if ((v46 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v41 = 1 << *(_BYTE *)(v8 + 32);
  if (v41 >= 64)
    bzero(v23, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v41;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v10;
}

void sub_1007A23C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t i;
  char v41;
  _QWORD v42[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_1011C8958);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v39 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v38 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v23 >= v38)
          goto LABEL_36;
        v24 = v39[v23];
        ++v13;
        if (!v24)
        {
          v13 = v23 + 1;
          if (v23 + 1 >= v38)
            goto LABEL_36;
          v24 = v39[v13];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v38)
            {
LABEL_36:
              swift_release();
              v3 = v2;
              if ((v41 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v5 + 32);
                if (v37 >= 64)
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v37;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v39[v25];
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_43;
                if (v13 >= v38)
                  goto LABEL_36;
                v24 = v39[v13];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v13 = v25;
          }
        }
LABEL_33:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
      v31 = *v30;
      v32 = v30[1];
      v33 = *(_QWORD *)(v5 + 56) + 24 * v22;
      v35 = *(_QWORD *)v33;
      v34 = *(_QWORD *)(v33 + 8);
      v36 = *(_BYTE *)(v33 + 16);
      if ((v41 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1007AC8CC(v35, v34, v36);
      }
      Hasher.init(_seed:)(v42, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v42, v31, v32);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
      *v19 = v31;
      v19[1] = v32;
      v20 = *(_QWORD *)(v8 + 56) + 24 * v18;
      *(_QWORD *)v20 = v35;
      *(_QWORD *)(v20 + 8) = v34;
      *(_BYTE *)(v20 + 16) = v36;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
  *v3 = v8;
}

void sub_1007A26EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  Swift::UInt v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  uint64_t v41[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D1F0);
  v40 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = v3;
    v9 = 0;
    v38 = (_QWORD *)(v5 + 64);
    v39 = v5;
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v22 >= v37)
          goto LABEL_36;
        v23 = v38[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_36;
          v23 = v38[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_36:
              if ((v40 & 1) == 0)
              {
                swift_release(v5);
                v3 = v36;
                goto LABEL_43;
              }
              v35 = 1 << *(_BYTE *)(v5 + 32);
              if (v35 >= 64)
                bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v35;
              v3 = v36;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_45;
                if (v9 >= v37)
                  goto LABEL_36;
                v23 = v38[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v21);
      v30 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v31 = *(_BYTE *)v30;
      v32 = *(_BYTE *)(v30 + 1);
      v33 = *(_QWORD *)(v30 + 8);
      v34 = *(_QWORD *)(v30 + 16);
      if ((v40 & 1) == 0)
        sub_100048AAC(v33, v34);
      Hasher.init(_seed:)(v41, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v29);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      v19 = *(_QWORD *)(v8 + 56) + 24 * v18;
      *(_BYTE *)v19 = v31;
      *(_BYTE *)(v19 + 1) = v32;
      *(_QWORD *)(v19 + 8) = v33;
      *(_QWORD *)(v19 + 16) = v34;
      ++*(_QWORD *)(v8 + 16);
      v5 = v39;
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_1007A29F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  Swift::UInt v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[9];

  v3 = v2;
  v42 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v6 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_100007E8C(&qword_1011C8960);
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (*(_QWORD *)(v9 + 16))
  {
    v37 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v40 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v39 = (unint64_t)(v14 + 63) >> 6;
    v17 = v10 + 64;
    v38 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v41 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v22 >= v39)
          goto LABEL_35;
        v23 = v40[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v39)
            goto LABEL_35;
          v23 = v40[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_35:
              if ((v38 & 1) == 0)
              {
                swift_release();
                v3 = v37;
                goto LABEL_42;
              }
              v35 = 1 << *(_BYTE *)(v9 + 32);
              if (v35 >= 64)
                bzero(v40, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v40 = -1 << v35;
              v3 = v37;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_44;
                if (v12 >= v39)
                  goto LABEL_35;
                v23 = v40[v12];
                ++v24;
                if (v23)
                  goto LABEL_25;
              }
            }
            v12 = v24;
          }
        }
LABEL_25:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 48) + v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v41))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v42);
      Hasher.init(_seed:)(v43, *(_QWORD *)(v11 + 40));
      Hasher._combine(_:)(v25);
      v27 = Hasher._finalize()();
      v28 = -1 << *(_BYTE *)(v11 + 32);
      v29 = v27 & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v17 + 8 * (v29 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v17 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v17 + 8 * v30);
        }
        while (v34 == -1);
        v19 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_BYTE *)(*(_QWORD *)(v11 + 48) + v19) = v25;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v42);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  swift_release();
LABEL_42:
  *v3 = v11;
}

void sub_1007A2D34(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D250);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_25;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v21 >= v12)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v12)
        goto LABEL_37;
      v23 = *(_QWORD *)(v37 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v12)
        {
LABEL_37:
          swift_release(v5);
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_46;
            if (v14 >= v12)
              goto LABEL_37;
            v23 = *(_QWORD *)(v37 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_24;
          }
        }
        v14 = v24;
      }
    }
LABEL_24:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_25:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v41 = *(_QWORD *)(v25 + 32);
      v39 = v26;
      v40 = v27;
      sub_100048ABC((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v38);
    }
    else
    {
      sub_100051FEC(v25, (uint64_t)&v39);
      sub_10004FA40(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v38);
    }
    v28 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v13 + 8 * v31);
      }
      while (v35 == -1);
      v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v8 + 48) + 40 * v15;
    v17 = v39;
    v18 = v40;
    *(_QWORD *)(v16 + 32) = v41;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    sub_100048ABC(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_1007A3048(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C((uint64_t *)&unk_1011C5BC0);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_1007A335C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  Swift::UInt v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  uint64_t v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D550);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = v3;
    v9 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v22 >= v36)
          goto LABEL_36;
        v23 = v37[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v36)
            goto LABEL_36;
          v23 = v37[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_36:
              if ((v38 & 1) == 0)
              {
                swift_release();
                v3 = v35;
                goto LABEL_43;
              }
              v34 = 1 << *(_BYTE *)(v5 + 32);
              if (v34 >= 64)
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v34;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_45;
                if (v9 >= v36)
                  goto LABEL_36;
                v23 = v37[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v21);
      v30 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v31 = *(_BYTE *)v30;
      v32 = *(_QWORD *)(v30 + 8);
      v33 = *(_QWORD *)(v30 + 16);
      if ((v38 & 1) == 0)
        sub_100048AAC(v32, v33);
      Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v29);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      v19 = *(_QWORD *)(v8 + 56) + 24 * v18;
      *(_BYTE *)v19 = v31;
      *(_QWORD *)(v19 + 8) = v32;
      *(_QWORD *)(v19 + 16) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
LABEL_43:
  *v3 = v8;
}

void sub_1007A3658(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  char v42;
  _QWORD v43[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D418);
  v42 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v39 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v41 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v40 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain();
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v22 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v23 = v22 | (v13 << 6);
      }
      else
      {
        v24 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v24 >= v40)
          goto LABEL_36;
        v25 = v41[v24];
        ++v13;
        if (!v25)
        {
          v13 = v24 + 1;
          if (v24 + 1 >= v40)
            goto LABEL_36;
          v25 = v41[v13];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v40)
            {
LABEL_36:
              swift_release();
              v3 = v39;
              if ((v42 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v5 + 32);
                if (v38 >= 64)
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v38;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v25 = v41[v26];
            if (!v25)
            {
              while (1)
              {
                v13 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_43;
                if (v13 >= v40)
                  goto LABEL_36;
                v25 = v41[v13];
                ++v26;
                if (v25)
                  goto LABEL_33;
              }
            }
            v13 = v26;
          }
        }
LABEL_33:
        v11 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v13 << 6);
      }
      v31 = 16 * v23;
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
      v34 = *v32;
      v33 = v32[1];
      v35 = *(_QWORD *)(v5 + 56) + v31;
      v36 = *(_QWORD *)v35;
      v37 = *(_BYTE *)(v35 + 8);
      if ((v42 & 1) == 0)
        swift_bridgeObjectRetain();
      Hasher.init(_seed:)(v43, *(_QWORD *)(v8 + 40));
      swift_bridgeObjectRetain();
      String.hash(into:)(v43, v34, v33);
      swift_bridgeObjectRelease(v33);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v17 == v28;
          if (v17 == v28)
            v17 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v30 == -1);
        v18 = __clz(__rbit64(~v30)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v34;
      v20[1] = v33;
      v21 = *(_QWORD *)(v8 + 56) + v19;
      *(_QWORD *)v21 = v36;
      *(_BYTE *)(v21 + 8) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
  *v3 = v8;
}

void sub_1007A3978(uint64_t a1, uint64_t a2)
{
  sub_1007A604C(a1, a2, &qword_10119D208);
}

void sub_1007A3984(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  int v46;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D440);
  v46 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_43;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v44 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v42 = v2;
  v43 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v18 = swift_retain();
  v19 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v43)
      break;
    v24 = v44;
    v25 = v44[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v43)
        goto LABEL_36;
      v25 = v44[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v43)
        {
LABEL_36:
          swift_release();
          v3 = v42;
          if ((v46 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v44[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v19 >= v43)
              goto LABEL_36;
            v25 = v44[v19];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v19 = v26;
      }
    }
LABEL_23:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v7 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v46 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 32))(v9, v28, v6, v18);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v9, v28, v6, v18);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
      swift_retain();
    }
    v30 = *(_QWORD *)(v12 + 40);
    v31 = sub_100048748(&qword_1011B5D98, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v32 = dispatch thunk of Hashable._rawHashValue(seed:)(v30, v6, v31);
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v20 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v6);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v42;
  v24 = v44;
  if ((v46 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v40 = 1 << *(_BYTE *)(v10 + 32);
  if (v40 >= 64)
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v40;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v12;
}

void sub_1007A3D18(uint64_t a1, uint64_t a2)
{
  sub_1007A3D24(a1, a2, &qword_10119D5D8);
}

void sub_1007A3D24(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_100007E8C(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v4;
  v38 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  swift_retain(v6);
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v22 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v23 = v22 | (v15 << 6);
      goto LABEL_34;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v13)
      break;
    v25 = (_QWORD *)(v6 + 64);
    v26 = *(_QWORD *)(v38 + 8 * v24);
    ++v15;
    if (!v26)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_36;
      v26 = *(_QWORD *)(v38 + 8 * v15);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v13)
        {
LABEL_36:
          swift_release(v6);
          v4 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v15 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v15 >= v13)
              goto LABEL_36;
            v26 = *(_QWORD *)(v38 + 8 * v15);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v15 = v27;
      }
    }
LABEL_33:
    v12 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_34:
    v32 = 8 * v23;
    v33 = *(void **)(*(_QWORD *)(v6 + 48) + v32);
    v34 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v32);
    if ((a2 & 1) == 0)
    {
      v35 = v33;
      swift_bridgeObjectRetain();
    }
    v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v9 + 40));
    v17 = -1 << *(_BYTE *)(v9 + 32);
    v18 = v16 & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v19 == v29;
        if (v19 == v29)
          v19 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v21 = 8 * v20;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v21) = v33;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v21) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v4 = v37;
  v25 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  swift_release(v6);
  *v4 = v9;
}

void sub_1007A3FF4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  __int128 v42;
  _QWORD v43[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D4B0);
  v40 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_48;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = v3;
  v38 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_25;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      return;
    }
    if (v18 >= v38)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v39 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v38)
        goto LABEL_41;
      v20 = *(_QWORD *)(v39 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v38)
        {
LABEL_41:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_48;
          goto LABEL_44;
        }
        v20 = *(_QWORD *)(v39 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_50;
            if (v13 >= v38)
              goto LABEL_41;
            v20 = *(_QWORD *)(v39 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_24;
          }
        }
        v13 = v21;
      }
    }
LABEL_24:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_25:
    v22 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v17);
    v23 = *(_QWORD *)(v5 + 56) + 48 * v17;
    v24 = *(_BYTE *)v23;
    v41 = *(_OWORD *)(v23 + 24);
    v42 = *(_OWORD *)(v23 + 8);
    v25 = *(_QWORD *)(v23 + 40);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    Hasher.init(_seed:)(v43, *(_QWORD *)(v8 + 40));
    if (v22)
    {
      if (v22 == 1)
      {
        v26 = 0xE600000000000000;
        v27 = 0x7478654E7075;
      }
      else
      {
        v26 = 0xE800000000000000;
        v27 = 0x79616C506F747561;
      }
    }
    else
    {
      v26 = 0xE700000000000000;
      v27 = 0x79726F74736968;
    }
    String.hash(into:)(v43, v27, v26);
    swift_bridgeObjectRelease();
    v28 = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_49;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v14) = v22;
    v15 = *(_QWORD *)(v8 + 56) + 48 * v14;
    *(_BYTE *)v15 = v24;
    *(_OWORD *)(v15 + 8) = v42;
    *(_OWORD *)(v15 + 24) = v41;
    *(_QWORD *)(v15 + 40) = v25;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v37;
  v19 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_48;
LABEL_44:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v19, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_48:
  swift_release();
  *v3 = v8;
}

void sub_1007A438C(uint64_t a1, uint64_t a2)
{
  sub_1007A4398(a1, a2, &qword_1011C8968);
}

void sub_1007A4398(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_100007E8C(a3);
  v39 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v36 = v4;
  v37 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  swift_retain(v6);
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v37)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v37)
        goto LABEL_36;
      v25 = *(_QWORD *)(v38 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v37)
        {
LABEL_36:
          swift_release(v6);
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v37)
              goto LABEL_36;
            v25 = *(_QWORD *)(v38 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v22);
    if ((v39 & 1) == 0)
      swift_bridgeObjectRetain();
    Hasher.init(_seed:)(v40, *(_QWORD *)(v9 + 40));
    String.hash(into:)(v40, v33, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v4 = v36;
  v24 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  swift_release(v6);
  *v4 = v9;
}

void sub_1007A469C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];
  _OWORD v41[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_1011AD4E0);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_25;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v17 >= v37)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v38 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v37)
        goto LABEL_37;
      v19 = *(_QWORD *)(v38 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v37)
        {
LABEL_37:
          swift_release();
          if ((v39 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v19 = *(_QWORD *)(v38 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_46;
            if (v13 >= v37)
              goto LABEL_37;
            v19 = *(_QWORD *)(v38 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_24;
          }
        }
        v13 = v20;
      }
    }
LABEL_24:
    v11 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_25:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v39 & 1) != 0)
    {
      sub_100048ABC(v22, v41);
    }
    else
    {
      sub_10004FA40((uint64_t)v22, (uint64_t)v41);
      v23 = v21;
    }
    v24 = *(_QWORD *)(v8 + 40);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v27 = v26;
    Hasher.init(_seed:)(v40, v24);
    String.hash(into:)(v40, v25, v27);
    v28 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v21;
    sub_100048ABC(v41, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v18, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release();
  *v3 = v8;
}

void sub_1007A49D4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[4];
  int v49;
  uint64_t *v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;

  v3 = v2;
  v6 = type metadata accessor for VideoArtwork(0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  __chkstk_darwin(v6);
  v56 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v55 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = &v48[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v12 = a1;
  else
    v12 = *(_QWORD *)(*v3 + 24);
  sub_100007E8C(&qword_10119D1E0);
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v11, v12, a2);
  v14 = v13;
  if (!*(_QWORD *)(v11 + 16))
  {
    v45 = v11;
LABEL_45:
    swift_release(v45);
    *v3 = v14;
    return;
  }
  v15 = 1 << *(_BYTE *)(v11 + 32);
  v16 = *(_QWORD *)(v11 + 64);
  v52 = (_QWORD *)(v11 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v50 = v3;
  v51 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  v54 = v11;
  v20 = swift_retain(v11);
  v21 = 0;
  v49 = a2;
  v22 = 16;
  if ((a2 & 1) != 0)
    v22 = 32;
  v53 = v22;
  v23 = v22;
  while (1)
  {
    if (v18)
    {
      v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v26 = v25 | (v21 << 6);
      goto LABEL_27;
    }
    v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v27 >= v51)
    {
      v46 = v54;
      swift_release(v54);
      v3 = v50;
      v28 = v52;
      if ((v49 & 1) != 0)
      {
LABEL_40:
        v47 = 1 << *(_BYTE *)(v46 + 32);
        if (v47 >= 64)
          bzero(v28, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v28 = -1 << v47;
        *(_QWORD *)(v46 + 16) = 0;
      }
LABEL_44:
      v45 = v46;
      goto LABEL_45;
    }
    v28 = v52;
    v29 = v52[v27];
    ++v21;
    if (!v29)
    {
      v21 = v27 + 1;
      if (v27 + 1 >= v51)
        goto LABEL_37;
      v29 = v52[v21];
      if (!v29)
        break;
    }
LABEL_26:
    v18 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v21 << 6);
LABEL_27:
    v31 = v54;
    v32 = *(_QWORD *)(v55 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t, __n128))(v55 + v23))(v10, *(_QWORD *)(v54 + 48) + v32 * v26, v8, v20);
    v33 = *(_QWORD *)(v31 + 56);
    v34 = *(_QWORD *)(v57 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v57 + v23))(v56, v33 + v34 * v26, v58);
    v35 = *(_QWORD *)(v14 + 40);
    v36 = sub_100048748(&qword_1011C8950, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialVideoArtworkFlavor, (uint64_t)&protocol conformance descriptor for EditorialVideoArtworkFlavor);
    v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v8, v36);
    v38 = -1 << *(_BYTE *)(v14 + 32);
    v39 = v37 & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v19 + 8 * v40);
      }
      while (v44 == -1);
      v24 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v19 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v55 + 32))(*(_QWORD *)(v14 + 48) + v32 * v24, v10, v8);
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v57 + 32))(*(_QWORD *)(v14 + 56) + v34 * v24, v56, v58);
    ++*(_QWORD *)(v14 + 16);
  }
  v30 = v27 + 2;
  if (v30 >= v51)
  {
LABEL_37:
    v46 = v54;
    swift_release(v54);
    v3 = v50;
    if ((v49 & 1) != 0)
      goto LABEL_40;
    goto LABEL_44;
  }
  v29 = v52[v30];
  if (v29)
  {
    v21 = v30;
    goto LABEL_26;
  }
  while (1)
  {
    v21 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v21 >= v51)
      goto LABEL_37;
    v29 = v52[v21];
    ++v30;
    if (v29)
      goto LABEL_26;
  }
LABEL_47:
  __break(1u);
}

void sub_1007A4DCC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D480);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    v10 = -1;
    if (v8 < 64)
      v10 = ~(-1 << v8);
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    swift_retain();
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return;
        }
        if (v16 >= v12)
          goto LABEL_23;
        v17 = v9[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v12)
            goto LABEL_23;
          v17 = v9[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v12)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v19 = 1 << *(_BYTE *)(v5 + 32);
                if (v19 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v19;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v9[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_30;
                if (v13 >= v12)
                  goto LABEL_23;
                v17 = v9[v13];
                ++v18;
                if (v17)
                  goto LABEL_22;
              }
            }
            v13 = v18;
          }
        }
LABEL_22:
        v11 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      sub_10079EA3C(*(_BYTE *)(*(_QWORD *)(v5 + 48) + v15), *(_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v15), *(_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v15 + 8), v7);
    }
  }
  swift_release();
  *v3 = v7;
}

void sub_1007A4F90(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  char v39;
  uint64_t v40;
  _QWORD v41[10];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D428);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v37 = v3;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v10 = (_QWORD *)(v5 + 64);
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v5 + 64);
  v38 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_25;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_44;
    if (v20 >= v38)
      break;
    v21 = v10[v20];
    ++v14;
    if (!v21)
    {
      v14 = v20 + 1;
      if (v20 + 1 >= v38)
        break;
      v21 = v10[v14];
      if (!v21)
      {
        v22 = v20 + 2;
        if (v22 >= v38)
          break;
        v21 = v10[v22];
        if (!v21)
        {
          while (1)
          {
            v14 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_45;
            if (v14 >= v38)
              goto LABEL_38;
            v21 = v10[v14];
            ++v22;
            if (v21)
              goto LABEL_24;
          }
        }
        v14 = v22;
      }
    }
LABEL_24:
    v12 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v14 << 6);
LABEL_25:
    v23 = 8 * v19;
    v24 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v23);
    v25 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v23);
    if ((v39 & 1) == 0)
    {
      sub_10004A06C(v24);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v41, *(_QWORD *)(v8 + 40));
    v40 = v25;
    if ((v24 & 0x8000000000000000) == 0)
    {
      Hasher._combine(_:)(0);
      __asm { BR              X9 }
    }
    Hasher._combine(_:)(1uLL);
    v26 = *(_QWORD *)(v24 + 16);
    v27 = *(_QWORD *)(v24 + 24);
    swift_retain();
    String.hash(into:)(v41, v26, v27);
    sub_1001A7ABC(v24);
    v28 = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      v16 = v40;
      goto LABEL_10;
    }
    v32 = 0;
    v33 = (unint64_t)(63 - v29) >> 6;
    v16 = v40;
    do
    {
      if (++v31 == v33 && (v32 & 1) != 0)
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        JUMPOUT(0x1007A546CLL);
      }
      v34 = v31 == v33;
      if (v31 == v33)
        v31 = 0;
      v32 |= v34;
      v35 = *(_QWORD *)(v13 + 8 * v31);
    }
    while (v35 == -1);
    v15 = __clz(__rbit64(~v35)) + (v31 << 6);
LABEL_10:
    *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v17 = 8 * v15;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v17) = v24;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v17) = v16;
    ++*(_QWORD *)(v8 + 16);
  }
LABEL_38:
  swift_release();
  v3 = v37;
  if ((v39 & 1) != 0)
  {
    v36 = 1 << *(_BYTE *)(v5 + 32);
    if (v36 >= 64)
      bzero(v10, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v10 = -1 << v36;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_1007A54A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D3C8);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_36;
      v24 = *(_QWORD *)(v38 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_36:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v37)
              goto LABEL_36;
            v24 = *(_QWORD *)(v38 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    Hasher.init(_seed:)(v40, *(_QWORD *)(v8 + 40));
    swift_bridgeObjectRetain();
    String.hash(into:)(v40, v32, v31);
    swift_bridgeObjectRelease();
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_1007A57BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C((uint64_t *)&unk_1011CE790);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v3;
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v38 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release();
          v3 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v38 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(void **)(*(_QWORD *)(v5 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      v35 = v33;
    }
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v37;
  v24 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_1007A5A8C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D3B0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_retain();
    }
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

