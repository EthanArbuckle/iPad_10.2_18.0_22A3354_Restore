uint64_t sub_100826AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  int *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  _QWORD v118[3];

  v113 = a2;
  v3 = sub_100007E8C(&qword_1011CBE60);
  __chkstk_darwin(v3);
  v114 = (uint64_t)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v112 = (char *)&v97 - v6;
  v97 = _s8MenuViewVMa(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64);
  v105 = *(_QWORD *)(v97 - 8);
  v106 = v7;
  __chkstk_darwin(v97);
  v104 = (uint64_t)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100007E8C(&qword_1011CBE68);
  v109 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v110 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v107 = (char *)&v97 - v12;
  v115 = type metadata accessor for EditMode(0, v11);
  v103 = *(_QWORD **)(v115 - 8);
  __chkstk_darwin(v115);
  v14 = (uint64_t *)((char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_100007E8C(&qword_1011CBE70);
  __chkstk_darwin(v15);
  v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100007E8C(&qword_1011CBE78);
  __chkstk_darwin(v98);
  v19 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100007E8C(&qword_1011CBE80);
  __chkstk_darwin(v99);
  v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A2EC0);
  __chkstk_darwin(v22);
  v24 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011A2EC8);
  __chkstk_darwin(v25);
  v100 = (uint64_t)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100007E8C(&qword_1011CBE88);
  __chkstk_darwin(v102);
  v108 = (uint64_t)&v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v101 = (uint64_t)&v97 - v29;
  __chkstk_darwin(v30);
  v116 = (uint64_t)&v97 - v31;
  sub_10082747C();
  v33 = static Font.body.getter(v32);
  KeyPath = swift_getKeyPath(&unk_100ED2980);
  sub_10004A160((uint64_t)v17, (uint64_t)v19, &qword_1011CBE70);
  v35 = (uint64_t *)&v19[*(int *)(v98 + 36)];
  *v35 = KeyPath;
  v35[1] = v33;
  v36 = sub_10004FF60((uint64_t)v17, &qword_1011CBE70);
  LODWORD(v33) = static HierarchicalShapeStyle.secondary.getter(v36);
  sub_10004A160((uint64_t)v19, (uint64_t)v21, &qword_1011CBE78);
  *(_DWORD *)&v21[*(int *)(v99 + 36)] = v33;
  sub_10004FF60((uint64_t)v19, &qword_1011CBE78);
  sub_10004A160((uint64_t)v21, (uint64_t)v24, &qword_1011CBE80);
  v37 = &v24[*(int *)(v22 + 36)];
  *(_OWORD *)v37 = xmmword_100EBDBC0;
  *((_OWORD *)v37 + 1) = xmmword_100ECD400;
  v37[32] = 0;
  sub_10004FF60((uint64_t)v21, &qword_1011CBE80);
  v38 = a1;
  v39 = swift_getKeyPath(&unk_100ED2738);
  v40 = swift_getKeyPath(&unk_100ED2760);
  swift_retain();
  static Published.subscript.getter(v14, v41, v39, v40);
  swift_release();
  v42 = swift_release();
  LOBYTE(v39) = EditMode.isEditing.getter(v42);
  v43 = (_QWORD *)v103[1];
  v44 = v115;
  ((void (*)(_QWORD *, uint64_t))v43)(v14, v115);
  v103 = v43;
  swift_release();
  v46 = static Alignment.center.getter(v45);
  v47 = v100;
  sub_10014C3FC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v100, 0.0, 1, 0.0, (v39 & 1) == 0, v46, v48);
  sub_10004FF60((uint64_t)v24, &qword_1011A2EC0);
  v49 = swift_getKeyPath(&unk_100ED2738);
  v50 = swift_getKeyPath(&unk_100ED2760);
  swift_retain();
  static Published.subscript.getter(v14, v51, v49, v50);
  swift_release();
  v52 = swift_release();
  LOBYTE(v49) = EditMode.isEditing.getter(v52);
  ((void (*)(_QWORD *, uint64_t))v43)(v14, v44);
  swift_release();
  if ((v49 & 1) != 0)
    v53 = 0.0;
  else
    v53 = 1.0;
  v54 = v101;
  sub_10004A160(v47, v101, &qword_1011A2EC8);
  *(double *)(v54 + *(int *)(v102 + 36)) = v53;
  sub_10004FF60(v47, &qword_1011A2EC8);
  sub_100065228(v54, v116, &qword_1011CBE88);
  v55 = swift_getKeyPath(&unk_100ED2810);
  v56 = swift_getKeyPath(&unk_100ED2838);
  swift_retain();
  static Published.subscript.getter(v118, v57, v55, v56);
  swift_release();
  swift_release();
  swift_release();
  v58 = swift_getKeyPath(&unk_100ED29B8);
  v59 = v104;
  sub_10005B704(v38, v104, _s8MenuViewVMa);
  v60 = *(unsigned __int8 *)(v105 + 80);
  v61 = (v60 + 16) & ~v60;
  v62 = swift_allocObject(&unk_1010DE2D0, v61 + v106, v60 | 7);
  sub_10005B6C0(v59, v62 + v61, _s8MenuViewVMa);
  v63 = sub_100007E8C(&qword_1011CB6B0);
  v64 = sub_100007E8C(&qword_1011CBE90);
  v65 = sub_100049F28(&qword_1011CBE98, &qword_1011CB6B0, (uint64_t)&protocol conformance descriptor for [A]);
  v66 = sub_1006A1C40();
  v67 = sub_10083C368();
  v68 = v107;
  ForEach<>.init(_:id:content:)(v118, v58, sub_10083C31C, v62, v63, v64, v65, v66, v67);
  v69 = swift_getKeyPath(&unk_100ED2738);
  v70 = swift_getKeyPath(&unk_100ED2760);
  swift_retain();
  static Published.subscript.getter(v14, v71, v69, v70);
  swift_release();
  v72 = swift_release();
  LOBYTE(v69) = EditMode.isEditing.getter(v72);
  ((void (*)(_QWORD *, uint64_t))v103)(v14, v115);
  swift_release();
  if ((v69 & 1) != 0)
  {
    v73 = _s15PlaylistSectionVMa(0);
    v74 = v112;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v112, 1, 1, v73);
  }
  else
  {
    v75 = *(_QWORD *)(v38 + 8);
    v76 = (int *)_s15PlaylistSectionVMa(0);
    v74 = v112;
    v77 = &v112[v76[5]];
    swift_retain();
    v78 = sub_100007E8C(&qword_1011C2BB8);
    Binding.wrappedValue.getter(v77, v78);
    v79 = type metadata accessor for MenuDataSource(0);
    v80 = sub_100048748(&qword_1011C2B08, type metadata accessor for MenuDataSource, (uint64_t)&unk_100ED23B0);
    *v74 = ObservedObject.init(wrappedValue:)(v75, v79, v80);
    v74[1] = v81;
    v82 = (char *)v74 + v76[6];
    *(_QWORD *)v82 = sub_10082D474;
    *((_QWORD *)v82 + 1) = 0;
    v82[16] = 0;
    v83 = (char *)v74 + v76[7];
    v117 = 1;
    State.init(wrappedValue:)(&v117, &type metadata for Bool);
    v84 = v118[1];
    *v83 = v118[0];
    *((_QWORD *)v83 + 1) = v84;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(*((_QWORD *)v76 - 1) + 56))(v74, 0, 1, v76);
  }
  v85 = v108;
  sub_10004A160(v116, v108, &qword_1011CBE88);
  v87 = v109;
  v86 = v110;
  v88 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
  v89 = v68;
  v90 = v68;
  v91 = v111;
  v88(v110, v90, v111);
  v92 = v114;
  sub_10004A160((uint64_t)v74, v114, &qword_1011CBE60);
  v93 = v113;
  sub_10004A160(v85, v113, &qword_1011CBE88);
  v94 = sub_100007E8C(&qword_1011CBEB0);
  v88((char *)(v93 + *(int *)(v94 + 48)), v86, v91);
  sub_10004A160(v92, v93 + *(int *)(v94 + 64), &qword_1011CBE60);
  sub_10004FF60((uint64_t)v74, &qword_1011CBE60);
  v95 = *(void (**)(char *, uint64_t))(v87 + 8);
  v95(v89, v91);
  sub_10004FF60(v116, &qword_1011CBE88);
  sub_10004FF60(v92, &qword_1011CBE60);
  v95(v86, v91);
  return sub_10004FF60(v85, &qword_1011CBE88);
}

void sub_10082747C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;
  char v36;

  v0 = sub_100007E8C(&qword_1011CBEB8);
  __chkstk_darwin(v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011CBEC0);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10082AE2C();
  if (!v6)
  {
    v16 = LocalizedStringKey.init(stringLiteral:)(0x6973754D206C6C41, 0xE900000000000063);
    v9 = Text.init(_:tableName:bundle:comment:)(v16);
    v11 = v9;
    v12 = v10;
    v29 = v9;
    v30 = v10;
    v14 = v17 & 1;
    v31 = v17 & 1;
    v32 = v18;
    v33 = 0;
    goto LABEL_5;
  }
  v7 = v6;
  if (v6 == 1)
  {
    v8 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000010, 0x8000000100E46610);
    v9 = Text.init(_:tableName:bundle:comment:)(v8);
    v11 = v9;
    v12 = v10;
    v14 = v13 & 1;
    v29 = v9;
    v30 = v10;
    v31 = v13 & 1;
    v32 = v15;
    v33 = 1;
LABEL_5:
    sub_100055BBC(v9, v10, v14);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)(&v29, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
    v19 = v36;
    v20 = v35;
    *(_OWORD *)v5 = v34;
    *((_OWORD *)v5 + 1) = v20;
    v5[32] = v19;
    swift_storeEnumTagMultiPayload(v5, v3, 0);
    v21 = sub_100007E8C(&qword_1011CBED0);
    v22 = sub_10083C47C();
    v23 = sub_100049F28(&qword_1011CBEE0, &qword_1011CBEB8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v5, v21, v0, v22, v23);
    sub_100055BAC(v11, v12, v14);
    swift_bridgeObjectRelease();
    return;
  }
  *(_QWORD *)v2 = static VerticalAlignment.center.getter(v6);
  *((_QWORD *)v2 + 1) = 0;
  v2[16] = 1;
  v24 = sub_100007E8C(&qword_1011CBEC8);
  sub_10082AF64(v7, (uint64_t)&v2[*(int *)(v24 + 44)]);
  sub_10004A160((uint64_t)v2, (uint64_t)v5, &qword_1011CBEB8);
  swift_storeEnumTagMultiPayload(v5, v3, 1);
  v25 = sub_100007E8C(&qword_1011CBED0);
  v26 = sub_10083C47C();
  v27 = sub_100049F28(&qword_1011CBEE0, &qword_1011CBEB8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  _ConditionalContent<>.init(storage:)(v5, v25, v0, v26, v27);
  sub_10083C4D8(v7);
  sub_10004FF60((uint64_t)v2, &qword_1011CBEB8);
}

uint64_t sub_1008277A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];

  v58 = a2;
  v5 = type metadata accessor for AccessibilityTraits(0);
  v64 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011CBB30);
  __chkstk_darwin(v63);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A2A80);
  v59 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011CBB38);
  v60 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100007E8C(&qword_1011CBB40);
  __chkstk_darwin(v61);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011CBB48);
  __chkstk_darwin(v17);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v26 = __chkstk_darwin(v21);
  v27 = *a1;
  if (v27 < 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v24 + 56))(a3, 1, 1, v26);
  v56 = (char *)&v53 - v23;
  v57 = a3;
  v28 = *(_QWORD *)(v58 + 8);
  v53 = v5;
  v54 = v22;
  v29 = OBJC_IVAR____TtC5Music14MenuDataSource_downloadedOnly;
  v55 = v25;
  v30 = *(unsigned __int8 *)(v28 + OBJC_IVAR____TtC5Music14MenuDataSource_downloadedOnly);
  v58 = v24;
  Library.Menu.Identifier.name(for:)(v30, v27);
  v65[0] = v31;
  v65[1] = v32;
  v33 = Library.Menu.Identifier.symbolName(for:)(*(unsigned __int8 *)(v28 + v29), v27);
  v35 = v34;
  v36 = sub_100055B68();
  Label<>.init<A>(_:systemImage:)(v65, v33, v35, &type metadata for String, v36);
  v37 = sub_100049F28(&qword_1011A2BF8, &qword_1011A2A80, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v38 = sub_100838CC0();
  View.labelStyle<A>(_:)(v38, v10, &type metadata for MusicSidebarStyle, v37, v38);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v12, v10);
  v39 = v60;
  v40 = v62;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v9, v14, v62);
  *(_QWORD *)&v9[*(int *)(v63 + 36)] = v27;
  sub_10004A160((uint64_t)v9, (uint64_t)v16, &qword_1011CBB30);
  v41 = v61;
  *(_QWORD *)&v16[*(int *)(v61 + 36)] = v27;
  sub_10004FF60((uint64_t)v9, &qword_1011CBB30);
  v42 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v14, v40);
  static AccessibilityTraits.isButton.getter(v42);
  v43 = sub_100838D04();
  View.accessibility(addTraits:)(v7, v41, v43);
  v44 = *(void (**)(char *, uint64_t))(v64 + 8);
  v45 = v53;
  v44(v7, v53);
  v46 = sub_10004FF60((uint64_t)v16, &qword_1011CBB40);
  static AccessibilityTraits.isStaticText.getter(v46);
  v47 = v54;
  v48 = v55;
  ModifiedContent<>.accessibilityRemoveTraits(_:)(v7, v54);
  v44(v7, v45);
  sub_10004FF60((uint64_t)v19, &qword_1011CBB48);
  v49 = Library.Menu.Identifier.rawValue.getter(v27);
  v50 = (uint64_t)v56;
  ModifiedContent<>.accessibility(identifier:)(v49);
  swift_bridgeObjectRelease();
  sub_10004FF60(v48, &qword_1011CBB48);
  v51 = v57;
  sub_100065228(v50, v57, &qword_1011CBB48);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v51, 0, 1, v47);
}

uint64_t sub_100827BE0(uint64_t a1, uint64_t *a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;

  v5 = type metadata accessor for EditMode(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v25 - v10);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v25 - v14;
  v16 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  ((void (*)(char *, uint64_t, uint64_t, __n128))v16)((char *)&v25 - v14, a1, v5, v13);
  v17 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED2738);
  v19 = swift_getKeyPath(&unk_100ED2760);
  static Published.subscript.getter(v11, v17, KeyPath, v19);
  swift_release();
  swift_release();
  v20 = swift_getKeyPath(&unk_100ED2738);
  v21 = swift_getKeyPath(&unk_100ED2760);
  v16(v8, v15, v5);
  swift_retain();
  static Published.subscript.setter(v8, v17, v20, v21);
  sub_100831FF0((uint64_t)v11, v22);
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23(v15, v5);
  return ((uint64_t (*)(_QWORD *, uint64_t))v23)(v11, v5);
}

uint64_t sub_100827D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t OpaqueTypeConformance2;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v82 = a2;
  v81 = sub_100007E8C(&qword_1011CBDF0);
  __chkstk_darwin(v81);
  v80 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011CBDF8);
  v78 = *(_QWORD *)(v4 - 8);
  v79 = v4;
  __chkstk_darwin(v4);
  v77 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100007E8C(&qword_1011CBE00);
  v69 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011CBE08);
  v71 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v70 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100007E8C(&qword_1011CBE10);
  v10 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v13);
  v75 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011CBE18);
  v72 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011CBE20);
  __chkstk_darwin(v18);
  v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v76 = (char *)&v69 - v22;
  v23 = a1;
  v24 = *(uint64_t (**)(void))(**(_QWORD **)(a1 + *(int *)(_s8MenuViewVMa(0) + 40) + 8) + 336);
  v25 = v24();
  if (!(v25 >> 30) || (v25 >> 30 == 2 ? (v26 = v25 == 2147483651) : (v26 = 0), v26))
  {
    v71 = v8;
    v45 = v75;
    v46 = static ToolbarItemPlacement.navigationBarTrailing.getter(v25);
    __chkstk_darwin(v46);
    *(&v69 - 2) = a1;
    v47 = sub_10083C2CC();
    ToolbarItem<>.init(placement:content:)(v45, sub_10083C2C4, &v69 - 4, &_s8MenuViewV24EnableCloudLibraryButtonVN, v47);
    v48 = sub_100049F28(&qword_1011CBE38, &qword_1011CBE18, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    static ToolbarContentBuilder.buildBlock<A>(_:)(v17, v15, v48);
    v83 = v15;
    v84 = v48;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v50 = sub_100049F28(&qword_1011CBE40, &qword_1011CBE08, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    v83 = v71;
    v84 = v50;
    v51 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v52 = v73;
    static ToolbarContentBuilder.buildEither<A, B>(first:)(v12, v73, v74, OpaqueTypeConformance2, v51);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v52);
    v53 = sub_100007E8C(&qword_1011CBE28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v20, 0, 1, v53);
    v54 = sub_10083C160();
    v39 = (uint64_t)v76;
    v55 = v53;
    v41 = v23;
    static ToolbarContentBuilder.buildIf<A>(_:)(v20, v55, v54);
    v56 = (uint64_t)v20;
    v43 = v45;
    sub_10004FF60(v56, &qword_1011CBE20);
    v44 = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v17, v15);
  }
  else
  {
    v27 = v24();
    if (v27 >> 30 != 1 && (v27 >> 30 != 2 || v27 != 2147483652))
    {
      v62 = sub_100007E8C(&qword_1011CBE28);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v20, 1, 1, v62);
      v63 = sub_10083C160();
      v39 = (uint64_t)v76;
      static ToolbarContentBuilder.buildIf<A>(_:)(v20, v62, v63);
      v44 = sub_10004FF60((uint64_t)v20, &qword_1011CBE20);
      v58 = (uint64_t)v80;
      v57 = v81;
      v60 = v78;
      v59 = v79;
      v61 = v77;
      v41 = v23;
      v43 = v75;
      goto LABEL_13;
    }
    v28 = v75;
    v29 = static ToolbarItemPlacement.navigationBarTrailing.getter(v27);
    __chkstk_darwin(v29);
    *(&v69 - 2) = a1;
    v30 = sub_10083C280();
    v31 = v70;
    ToolbarItem<>.init(placement:content:)(v28, sub_10083C278, &v69 - 4, &_s8MenuViewV23CloudLibraryLoadingViewVN, v30);
    v32 = sub_100049F28(&qword_1011CBE40, &qword_1011CBE08, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    static ToolbarContentBuilder.buildBlock<A>(_:)(v31, v8, v32);
    v33 = sub_100049F28(&qword_1011CBE38, &qword_1011CBE18, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    v83 = v15;
    v84 = v33;
    v34 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v83 = v8;
    v84 = v32;
    v35 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v36 = v74;
    static ToolbarContentBuilder.buildEither<A, B>(second:)(v7, v73, v74, v34, v35);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v7, v36);
    v37 = sub_100007E8C(&qword_1011CBE28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v20, 0, 1, v37);
    v38 = sub_10083C160();
    v39 = (uint64_t)v76;
    v40 = v37;
    v41 = v23;
    static ToolbarContentBuilder.buildIf<A>(_:)(v20, v40, v38);
    v42 = (uint64_t)v20;
    v43 = v28;
    sub_10004FF60(v42, &qword_1011CBE20);
    v44 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v31, v8);
  }
  v58 = (uint64_t)v80;
  v57 = v81;
  v60 = v78;
  v59 = v79;
  v61 = v77;
LABEL_13:
  v64 = static ToolbarItemPlacement.navigationBarTrailing.getter(v44);
  __chkstk_darwin(v64);
  *(&v69 - 2) = v41;
  v65 = _s8MenuViewV8MoreMenuVMa(0);
  v66 = sub_100048748(&qword_1011CBE48, _s8MenuViewV8MoreMenuVMa, (uint64_t)&unk_100ED2B4C);
  ToolbarItem<>.init(placement:content:)(v43, sub_10083C25C, &v69 - 4, v65, v66);
  v67 = v58 + *(int *)(v57 + 48);
  sub_10004A160(v39, v58, &qword_1011CBE20);
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v67, v61, v59);
  TupleToolbarContent.init(_:)(v58, v57);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
  return sub_10004FF60(v39, &qword_1011CBE20);
}

uint64_t sub_100828488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  _BYTE v11[9];
  uint64_t v12;

  _s8MenuViewVMa(0);
  v2 = type metadata accessor for CloudLibrary.StatusObserver(0);
  v3 = sub_100048748(&qword_1011B9940, type metadata accessor for CloudLibrary.StatusObserver, (uint64_t)&protocol conformance descriptor for CloudLibrary.StatusObserver);
  swift_retain();
  v5 = ObservedObject.init(wrappedValue:)(v4, v2, v3);
  v7 = v6;
  v11[0] = 0;
  result = State.init(wrappedValue:)(v11, &type metadata for Bool);
  v9 = v11[1];
  v10 = v12;
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  return result;
}

uint64_t sub_100828540@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  _s8MenuViewVMa(0);
  v2 = type metadata accessor for CloudLibrary.StatusObserver(0);
  v3 = sub_100048748(&qword_1011B9940, type metadata accessor for CloudLibrary.StatusObserver, (uint64_t)&protocol conformance descriptor for CloudLibrary.StatusObserver);
  swift_retain();
  result = ObservedObject.init(wrappedValue:)(v4, v2, v3);
  *a1 = result;
  a1[1] = v6;
  return result;
}

double sub_1008285C0@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double result;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[24];

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for MenuDataSource(0);
  v7 = sub_100048748(&qword_1011C2B08, type metadata accessor for MenuDataSource, (uint64_t)&unk_100ED23B0);
  v8 = ObservedObject.projectedValue.getter(v4, v5, v6, v7);
  KeyPath = swift_getKeyPath(&unk_100ED2738);
  ObservedObject.Wrapper.subscript.getter(a2, KeyPath, v8, v7);
  swift_release();
  swift_release();
  v10 = (int *)_s8MenuViewVMa(0);
  v11 = (uint64_t *)((char *)a1 + v10[9]);
  v13 = *v11;
  v12 = v11[1];
  v43 = v13;
  v44 = v12;
  v14 = sub_100007E8C(&qword_1011CBDC8);
  State.projectedValue.getter(v45, v14);
  v15 = *(_QWORD *)v45;
  v42 = *(_OWORD *)&v45[8];
  v16 = (char *)a1 + v10[6];
  v17 = *v16;
  v18 = *((_QWORD *)v16 + 1);
  LOBYTE(v43) = v17;
  v44 = v18;
  v19 = sub_100007E8C(&qword_1011C4DD0);
  State.projectedValue.getter(v45, v19);
  v20 = *(_OWORD *)v45;
  v21 = v45[16];
  v22 = (char *)a1 + v10[8];
  v23 = *(_QWORD *)v22;
  v24 = *((_QWORD *)v22 + 1);
  v25 = v22[16];
  v26 = type metadata accessor for MusicAutoupdatingSharedLibrariesResponse(0);
  v27 = sub_100048748(&qword_1011CBDD0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicAutoupdatingSharedLibrariesResponse, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingSharedLibrariesResponse);
  v28 = StateObject.wrappedValue.getter(v23, v24, v25, v26, v27);
  v29 = (int *)_s8MenuViewV8MoreMenuVMa(0);
  v30 = (char *)a2 + v29[5];
  *(_QWORD *)v30 = v15;
  *(_OWORD *)(v30 + 8) = v42;
  v31 = (char *)a2 + v29[6];
  *(_OWORD *)v31 = v20;
  v31[16] = v21;
  v32 = (_QWORD *)((char *)a2 + v29[7]);
  *v32 = ObservedObject.init(wrappedValue:)(v28, v26, v27);
  v32[1] = v33;
  v34 = (char *)a2 + v29[8];
  v35 = type metadata accessor for MusicLibrary(0);
  static MusicLibrary.shared.getter(v35);
  v37 = MusicLibrary.id.getter(v36);
  v39 = v38;
  swift_release();
  v43 = v37;
  v44 = v39;
  State.init(wrappedValue:)(&v43, &type metadata for String);
  result = *(double *)v45;
  v41 = *(_QWORD *)&v45[16];
  *(_OWORD *)v34 = *(_OWORD *)v45;
  *((_QWORD *)v34 + 2) = v41;
  return result;
}

double sub_1008287F4(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v5 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a2;
  _s8MenuViewVMa(0);
  v9 = sub_100007E8C(&qword_1011C2BB8);
  Binding.wrappedValue.getter(v7, v9);
  *((_BYTE *)v7 + *(int *)(v5 + 48)) = v8;
  Binding.wrappedValue.setter(v7, v9);
  v10 = *(_QWORD *)(a3 + 8);
  LOBYTE(a3) = *(_BYTE *)(v10 + OBJC_IVAR____TtC5Music14MenuDataSource_downloadedOnly);
  *(_BYTE *)(v10 + OBJC_IVAR____TtC5Music14MenuDataSource_downloadedOnly) = v8;
  swift_retain();
  sub_100831ED4(a3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1008288CC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = _s8MenuViewVMa(0);
  v27 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v27 + 64);
  __chkstk_darwin(v8);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  MusicLibrary.disconnect()();
  v29 = v13;
  v14 = type metadata accessor for MusicLibrary(0);
  v28 = static MusicLibrary.shared.getter(v14);
  v15 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  LOBYTE(a2) = dispatch thunk of static Equatable.== infix(_:_:)(&v29, &v28, v14, v15);
  swift_release();
  if ((a2 & 1) != 0)
  {
    v17 = static MusicLibrary.shared.getter(v16);
    v18 = sub_100007E8C(&qword_1011C2BB8);
    Binding.wrappedValue.getter(v7, v18);
    swift_release();
    *v7 = v17;
    Binding.wrappedValue.setter(v7, v18);
  }
  else
  {
    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
    sub_10005B704(a3, (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), _s8MenuViewVMa);
    type metadata accessor for MainActor(0);
    v21 = swift_retain();
    v22 = static MainActor.shared.getter(v21);
    v23 = *(unsigned __int8 *)(v27 + 80);
    v24 = (v23 + 40) & ~v23;
    v25 = (_QWORD *)swift_allocObject(&unk_1010DE2A8, v24 + v9, v23 | 7);
    v25[2] = v22;
    v25[3] = &protocol witness table for MainActor;
    v25[4] = v13;
    sub_10005B6C0((uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v25 + v24, _s8MenuViewVMa);
    sub_100166D14((uint64_t)v12, (uint64_t)&unk_1011CBDE8, (uint64_t)v25);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100828B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _QWORD *v10;

  v5[7] = a4;
  v5[8] = a5;
  v6 = type metadata accessor for Logger(0);
  v5[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[10] = v7;
  v5[11] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Library.Context(0);
  v5[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[13] = type metadata accessor for MainActor(0);
  v5[14] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.connect()[1]);
  v5[15] = v10;
  *v10 = v5;
  v10[1] = sub_100828BDC;
  return MusicLibrary.connect()();
}

uint64_t sub_100828BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100828CFC;
  else
    v6 = sub_100828C64;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100828C64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 56);
  swift_release();
  _s8MenuViewVMa(0);
  swift_retain();
  v3 = sub_100007E8C(&qword_1011C2BB8);
  Binding.wrappedValue.getter(v1, v3);
  swift_release();
  *v1 = v2;
  Binding.wrappedValue.setter(v1, v3);
  v4 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100828CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 72);
  swift_release();
  v5 = Logger.libraryMenu.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 80);
    v29 = *(_QWORD *)(v0 + 72);
    v30 = *(_QWORD *)(v0 + 88);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136446210;
    v31 = v12;
    *(_QWORD *)(v0 + 40) = v9;
    swift_errorRetain(v9);
    v13 = sub_100007E8C(&qword_1011A14B0);
    v14 = String.init<A>(describing:)(v0 + 40, v13);
    *(_QWORD *)(v0 + 48) = sub_100322200(v14, v15, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
    swift_bridgeObjectRelease();
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Home Sharing Connect Error=%{public}s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v30, v29);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 128);
    v18 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 88);
    v19 = *(_QWORD *)(v0 + 72);
    swift_errorRelease(v16);
    swift_errorRelease(v16);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v20 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 64);
  v22 = type metadata accessor for MusicLibrary(0);
  v23 = static MusicLibrary.shared.getter(v22);
  v24 = (_QWORD *)(v21 + *(int *)(_s8MenuViewVMa(0) + 36));
  v25 = v24[1];
  *(_QWORD *)(v0 + 16) = *v24;
  *(_QWORD *)(v0 + 24) = v25;
  *(_QWORD *)(v0 + 32) = v23;
  swift_retain();
  swift_retain();
  v26 = sub_100007E8C(&qword_1011CBDC8);
  State.wrappedValue.setter(v0 + 32, v26);
  swift_errorRelease(v20);
  swift_release();
  swift_release();
  v27 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100828F88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = type metadata accessor for Logger(0);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *a2;
  v8 = (uint64_t *)(a3 + *(int *)(_s8MenuViewVMa(0) + 36));
  v10 = *v8;
  v9 = v8[1];
  v29 = *v8;
  v30 = v9;
  v11 = sub_100007E8C(&qword_1011CBDC8);
  State.wrappedValue.getter(&v31, v11);
  v29 = v31;
  v12 = type metadata accessor for MusicLibrary(0);
  v31 = static MusicLibrary.shared.getter(v12);
  v13 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  LOBYTE(a2) = dispatch thunk of static Equatable.== infix(_:_:)(&v29, &v31, v12, v13);
  swift_release();
  swift_release();
  if ((a2 & 1) == 0)
  {
    v29 = v10;
    v30 = v9;
    State.wrappedValue.getter(&v31, v11);
    v14 = sub_1004147EC(v31, v28);
    swift_release();
    if ((v14 & 1) == 0)
    {
      v15 = Logger.libraryMenu.unsafeMutableAddressor();
      v17 = v26;
      v16 = v27;
      v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 16))(v7, v15, v27);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.error.getter(v19);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Selected Home Sharing Library became unavailable", v21, 2u);
        swift_slowDealloc(v21, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v16);
      v23 = *v8;
      v22 = v8[1];
      v29 = v23;
      v30 = v22;
      State.wrappedValue.getter(&v31, v11);
      MusicLibrary.disconnect()();
      swift_release();
      v25 = static MusicLibrary.shared.getter(v24);
      v29 = v23;
      v30 = v22;
      v31 = v25;
      State.wrappedValue.setter(&v31, v11);
    }
  }
}

uint64_t sub_1008291D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t OpaqueTypeConformance2;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t KeyPath;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _BYTE v149[24];
  void *v150;

  v146 = a1;
  v130 = type metadata accessor for ControlSize(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v128 = (char *)&v109 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for ButtonBorderShape(0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100007E8C(&qword_1011CC000);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100007E8C(&qword_1011CC008);
  __chkstk_darwin(v114);
  v126 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for BorderedButtonStyle(0);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for ButtonMenuStyle(0);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v8 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011CC010);
  v111 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C(&qword_1011CC018);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v138 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_100007E8C(&qword_1011CC020);
  __chkstk_darwin(v147);
  v127 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_100007E8C(&qword_1011CC028);
  v133 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v132 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100007E8C(&qword_1011CC030);
  v135 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v131 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v134 = (char *)&v109 - v17;
  v141 = sub_100007E8C(&qword_1011CC038);
  __chkstk_darwin(v141);
  v143 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = _s8MenuViewV8MoreMenuVMa(0);
  v136 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v137 = v19;
  v140 = (uint64_t)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_100007E8C(&qword_10119DFD8);
  v20 = *(_QWORD *)(v142 - 8);
  v21 = __chkstk_darwin(v142);
  v23 = (char *)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for EditMode(0, v21);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (uint64_t *)((char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = sub_100007E8C(&qword_1011CBD80);
  v29 = v1;
  Binding.wrappedValue.getter(v27, v28);
  v31 = EditMode.isEditing.getter(v30);
  v32 = (*(uint64_t (**)(_QWORD *, uint64_t))(v25 + 8))(v27, v24);
  if ((v31 & 1) != 0)
  {
    v33 = LocalizedStringKey.init(stringLiteral:)(1701736260, 0xE400000000000000);
    v34 = v140;
    sub_10005B704(v29, v140, _s8MenuViewV8MoreMenuVMa);
    v35 = *(unsigned __int8 *)(v136 + 80);
    v36 = (v35 + 16) & ~v35;
    v37 = swift_allocObject(&unk_1010DE470, v36 + v137, v35 | 7);
    sub_10005B6C0(v34, v37 + v36, _s8MenuViewV8MoreMenuVMa);
    Button<>.init(_:action:)(v33);
    v39 = v142;
    v38 = v143;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v143, v23, v142);
    swift_storeEnumTagMultiPayload(v38, v141, 0);
    v40 = sub_100049F28(&qword_1011C5140, &qword_10119DFD8, (uint64_t)&protocol conformance descriptor for Button<A>);
    v41 = type metadata accessor for MusicLibrary(255);
    v42 = sub_10083D308();
    v43 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    *(_QWORD *)v149 = v147;
    *(_QWORD *)&v149[8] = v41;
    *(_QWORD *)&v149[16] = v42;
    v150 = (void *)v43;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v149, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    *(_QWORD *)v149 = v144;
    *(_QWORD *)&v149[8] = &type metadata for String;
    *(_QWORD *)&v149[16] = OpaqueTypeConformance2;
    v150 = &protocol witness table for String;
    v45 = swift_getOpaqueTypeConformance2(v149, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v38, v39, v145, v40, v45);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v39);
  }
  else
  {
    __chkstk_darwin(v32);
    v110 = v29;
    *(&v109 - 2) = v29;
    v47 = sub_100007E8C(&qword_1011A05F8);
    v48 = sub_100007E8C(&qword_1011CC040);
    v49 = sub_1000E41D0();
    v50 = sub_100049F28(&qword_1011CC048, &qword_1011CC040, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v51 = Menu.init(content:label:)(sub_10083D2E0, &v109 - 4, sub_100558D1C, 0, v47, v48, v49, v50);
    ButtonMenuStyle.init()(v51);
    v52 = sub_100049F28(&qword_1011CC050, &qword_1011CC010, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    v53 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
    v54 = v113;
    View.menuStyle<A>(_:)(v8, v9, v113, v52, v53);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v8, v54);
    v55 = (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v11, v9);
    v56 = v123;
    BorderedButtonStyle.init()(v55);
    *(_QWORD *)v149 = v9;
    *(_QWORD *)&v149[8] = v54;
    *(_QWORD *)&v149[16] = v52;
    v150 = (void *)v53;
    v57 = swift_getOpaqueTypeConformance2(v149, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v58 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
    v59 = v117;
    v60 = v116;
    v61 = v125;
    v62 = View.buttonStyle<A>(_:)(v56, v116, v125, v57, v58);
    v63 = v120;
    static ButtonBorderShape.circle.getter(v62);
    KeyPath = swift_getKeyPath(&unk_100ED2BA0);
    v65 = (uint64_t)v126;
    v66 = (uint64_t *)&v126[*(int *)(v114 + 36)];
    v67 = sub_100007E8C(&qword_1011A0610);
    v68 = v121;
    v69 = v122;
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))((char *)v66 + *(int *)(v67 + 28), v63, v122);
    *v66 = KeyPath;
    v70 = v118;
    v71 = v119;
    (*(void (**)(uint64_t, char *, uint64_t))(v118 + 16))(v65, v59, v119);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v63, v69);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v59, v71);
    v72 = v129;
    v73 = v128;
    v74 = v130;
    (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v128, enum case for ControlSize.regular(_:), v130);
    v75 = swift_getKeyPath(&unk_100ED25C0);
    v76 = (uint64_t)v127;
    v77 = (uint64_t *)&v127[*(int *)(v147 + 36)];
    v78 = sub_100007E8C(&qword_1011A0618);
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))((char *)v77 + *(int *)(v78 + 28), v73, v74);
    *v77 = v75;
    sub_10004A160(v65, v76, &qword_1011CC008);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
    sub_10004FF60(v65, &qword_1011CC008);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v56, v61);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v138, v60);
    v79 = v110;
    v80 = v110 + *(int *)(v139 + 20);
    *(_QWORD *)v149 = *(_QWORD *)v80;
    *(_OWORD *)&v149[8] = *(_OWORD *)(v80 + 8);
    v81 = sub_100007E8C(&qword_1011CC058);
    Binding.wrappedValue.getter(&v148, v81);
    v82 = v140;
    sub_10005B704(v79, v140, _s8MenuViewV8MoreMenuVMa);
    v83 = *(unsigned __int8 *)(v136 + 80);
    v84 = (v83 + 16) & ~v83;
    v85 = (char *)(v84 + v137);
    v137 = v83 | 7;
    v138 = v85;
    v86 = swift_allocObject(&unk_1010DE420, v85, v83 | 7);
    sub_10005B6C0(v82, v86 + v84, _s8MenuViewV8MoreMenuVMa);
    v87 = type metadata accessor for MusicLibrary(0);
    v88 = sub_10083D308();
    v89 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    v90 = v132;
    v91 = v147;
    View.onChange<A>(of:initial:_:)(&v148, 0, sub_10083D2F4, v86, v147, v87, v88, v89);
    swift_release();
    swift_release();
    sub_10004FF60(v76, &qword_1011CC020);
    v92 = v110;
    v93 = v110 + *(int *)(v139 + 32);
    v94 = *(_OWORD *)v93;
    v95 = *(_QWORD *)(v93 + 16);
    *(_OWORD *)v149 = v94;
    *(_QWORD *)&v149[16] = v95;
    v96 = sub_100007E8C(&qword_1011CC070);
    State.wrappedValue.getter(&v148, v96);
    sub_10005B704(v92, v82, _s8MenuViewV8MoreMenuVMa);
    v97 = swift_allocObject(&unk_1010DE448, v138, v137);
    sub_10005B6C0(v82, v97 + v84, _s8MenuViewV8MoreMenuVMa);
    *(_QWORD *)v149 = v91;
    *(_QWORD *)&v149[8] = v87;
    *(_QWORD *)&v149[16] = v88;
    v150 = (void *)v89;
    v98 = swift_getOpaqueTypeConformance2(v149, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v99 = v131;
    v100 = v144;
    View.onChange<A>(of:initial:_:)(&v148, 0, sub_10083D5FC, v97, v144, &type metadata for String, v98, &protocol witness table for String);
    swift_release();
    v101 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v133 + 8))(v90, v100, v101);
    v103 = v134;
    v102 = v135;
    v104 = v99;
    v105 = v145;
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v134, v104, v145);
    v106 = v143;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v143, v103, v105);
    swift_storeEnumTagMultiPayload(v106, v141, 1);
    v107 = sub_100049F28(&qword_1011C5140, &qword_10119DFD8, (uint64_t)&protocol conformance descriptor for Button<A>);
    *(_QWORD *)v149 = v100;
    *(_QWORD *)&v149[8] = &type metadata for String;
    *(_QWORD *)&v149[16] = v98;
    v150 = &protocol witness table for String;
    v108 = swift_getOpaqueTypeConformance2(v149, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v106, v142, v105, v107, v108);
    return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v103, v105);
  }
}

uint64_t sub_100829E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;

  v68 = a2;
  v3 = (int *)_s8MenuViewV8MoreMenuVMa(0);
  v63 = *((_QWORD *)v3 - 1);
  __chkstk_darwin(v3);
  v64 = v4;
  v66 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_10119DFD8);
  v71 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v72 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v69 = (char *)&v62 - v7;
  v8 = sub_100007E8C(&qword_1011CC078);
  __chkstk_darwin(v8);
  v70 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v62 - v11;
  v13 = sub_100007E8C(&qword_1011CC080);
  __chkstk_darwin(v13);
  v67 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v62 - v16;
  v18 = swift_retain();
  v19 = dispatch thunk of MusicAutoupdatingSharedLibrariesResponse.libraries.getter(v18);
  swift_release();
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v61 = v19;
    else
      v61 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v20 = _CocoaArrayWrapper.endIndex.getter(v61);
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v20)
  {
    v21 = a1 + v3[8];
    v22 = *(_OWORD *)v21;
    v23 = *(_QWORD *)(v21 + 16);
    v73 = v22;
    v74 = v23;
    v24 = sub_100007E8C(&qword_1011CC070);
    v25 = State.projectedValue.getter(&v75, v24);
    v62 = (uint64_t)&v62;
    v26 = v75;
    v27 = v76;
    v28 = v77;
    __chkstk_darwin(v25);
    v75 = v26;
    *(_QWORD *)&v76 = v27;
    *((_QWORD *)&v76 + 1) = v29;
    v77 = v28;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100007E8C(&qword_1011CC088);
    sub_100049F28(&qword_1011CC090, &qword_1011CC088, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    Picker.init(selection:label:content:)(&v75);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v30 = sub_100007E8C(&qword_1011CC098);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v17, 0, 1, v30);
  }
  else
  {
    v31 = sub_100007E8C(&qword_1011CC098);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v17, 1, 1, v31);
  }
  type metadata accessor for MusicLibrary(0);
  v32 = a1 + v3[5];
  v75 = *(_QWORD *)v32;
  v76 = *(_OWORD *)(v32 + 8);
  v33 = sub_100007E8C(&qword_1011CC058);
  v34 = Binding.wrappedValue.getter(&v73, v33);
  v35 = v73;
  v36 = static MusicLibrary.shared.getter(v34);
  v37 = static MusicLibrary.== infix(_:_:)(v35, v36);
  swift_release();
  swift_release();
  if ((v37 & 1) != 0)
  {
    v38 = a1 + v3[6];
    v39 = *(_QWORD *)v38;
    v40 = *(_QWORD *)(v38 + 8);
    LOBYTE(v38) = *(_BYTE *)(v38 + 16);
    *(_QWORD *)&v73 = v39;
    *((_QWORD *)&v73 + 1) = v40;
    LOBYTE(v74) = v38;
    v41 = sub_100007E8C(&qword_1011A4B88);
    Binding.projectedValue.getter(&v75, v41);
    swift_retain();
    swift_retain();
    sub_100007E8C(&qword_1011CC0B0);
    sub_100049F28(&qword_1011CC0B8, &qword_1011CC0B0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    Picker.init(selection:label:content:)(&v75);
    swift_release();
    swift_release();
    v42 = sub_100007E8C(&qword_1011CC0A0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v12, 0, 1, v42);
  }
  else
  {
    v43 = sub_100007E8C(&qword_1011CC0A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v12, 1, 1, v43);
  }
  v44 = LocalizedStringKey.init(stringLiteral:)(0x6469532074696445, 0xEC00000072616265);
  v45 = (uint64_t)v66;
  sub_10005B704(a1, (uint64_t)v66, _s8MenuViewV8MoreMenuVMa);
  v46 = *(unsigned __int8 *)(v63 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = swift_allocObject(&unk_1010DE498, v47 + v64, v46 | 7);
  sub_10005B6C0(v45, v48 + v47, _s8MenuViewV8MoreMenuVMa);
  v49 = v69;
  Button<>.init(_:action:)(v44);
  v50 = (uint64_t)v17;
  v66 = v17;
  v51 = v67;
  sub_10004A160(v50, v67, &qword_1011CC080);
  v52 = v70;
  sub_10004A160((uint64_t)v12, v70, &qword_1011CC078);
  v54 = v71;
  v53 = v72;
  v55 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
  v56 = v65;
  v55(v72, v49, v65);
  v57 = v68;
  sub_10004A160(v51, v68, &qword_1011CC080);
  v58 = sub_100007E8C(&qword_1011CC0A8);
  sub_10004A160(v52, v57 + *(int *)(v58 + 48), &qword_1011CC078);
  v55((char *)(v57 + *(int *)(v58 + 64)), v53, v56);
  v59 = *(void (**)(char *, uint64_t))(v54 + 8);
  v59(v49, v56);
  sub_10004FF60((uint64_t)v12, &qword_1011CC078);
  sub_10004FF60((uint64_t)v66, &qword_1011CC080);
  v59(v53, v56);
  sub_10004FF60(v52, &qword_1011CC078);
  return sub_10004FF60(v51, &qword_1011CC080);
}

uint64_t sub_10082A510@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = sub_100007E8C(&qword_1011CC0C0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - v7;
  v9 = LocalizedStringKey.init(stringLiteral:)(0x617262694C20794DLL, 0xEA00000000007972);
  v10 = Text.init(_:tableName:bundle:comment:)(v9);
  v41 = v11;
  v42 = v10;
  v43 = v12;
  v14 = v13 & 1;
  v15 = type metadata accessor for MusicLibrary(0);
  static MusicLibrary.shared.getter(v15);
  v44 = MusicLibrary.id.getter(v16);
  v40 = v17;
  swift_release();
  _s8MenuViewV8MoreMenuVMa(0);
  swift_bridgeObjectRetain();
  v18 = swift_retain();
  v19 = dispatch thunk of MusicAutoupdatingSharedLibrariesResponse.libraries.getter(v18);
  swift_release();
  v45 = v19;
  v20 = sub_100007E8C(&qword_1011B3990);
  v21 = sub_100007E8C(&qword_1011CC0C8);
  v22 = sub_100049F28(&qword_1011CC0D0, &qword_1011B3990, (uint64_t)&protocol conformance descriptor for [A]);
  v23 = sub_10083D6F0();
  v24 = sub_100048748(&qword_1011CC110, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  v39 = v8;
  ForEach<>.init(_:content:)(&v45, sub_10082A7F4, 0, v20, &type metadata for String, v21, v22, v23, v24);
  v25 = v3;
  v26 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v27 = v5;
  v26(v5, v8, v2);
  v28 = v41;
  v29 = v42;
  *(_QWORD *)a1 = v42;
  *(_QWORD *)(a1 + 8) = v28;
  *(_BYTE *)(a1 + 16) = v14;
  v30 = v44;
  *(_QWORD *)(a1 + 24) = v43;
  *(_QWORD *)(a1 + 32) = v30;
  v31 = v40;
  *(_QWORD *)(a1 + 40) = v40;
  *(_QWORD *)(a1 + 48) = v30;
  *(_QWORD *)(a1 + 56) = v31;
  v32 = (char *)(a1 + *(int *)(sub_100007E8C(&qword_1011CC118) + 48));
  v33 = v27;
  v34 = v27;
  v35 = v2;
  v26(v32, v33, v2);
  sub_100055BBC(v29, v28, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = v44;
  sub_1003351D4(v44, v31);
  v37 = *(void (**)(char *, uint64_t))(v25 + 8);
  v37(v39, v35);
  v37(v34, v35);
  sub_100055BAC(v29, v28, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10013B670(v36, v31);
}

uint64_t sub_10082A7F4@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v16[0] = MusicLibrary.name.getter(a2);
  v16[1] = v3;
  v4 = sub_100055B68();
  v5 = Text.init<A>(_:)(v16, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = MusicLibrary.id.getter(v12);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v9 & 1;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v13;
  *(_QWORD *)(a1 + 40) = v14;
  *(_QWORD *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 56) = v14;
  return swift_bridgeObjectRetain();
}

double sub_10082A880@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  double result;

  v2 = LocalizedStringKey.init(stringLiteral:)(0x6C6C4120776F6853, 0xEE00636973754D20);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E46700);
  v11 = Text.init(_:tableName:bundle:comment:)(v10);
  v13 = v12;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v5;
  v15 = v14 & 1;
  *(_BYTE *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_BYTE *)(a1 + 56) = v14 & 1;
  *(_QWORD *)(a1 + 64) = v16;
  *(_WORD *)(a1 + 72) = 257;
  sub_100055BBC(v3, v5, v9);
  swift_bridgeObjectRetain();
  sub_100055BBC(v11, v13, v15);
  swift_bridgeObjectRetain();
  sub_100055BAC(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_100055BAC(v3, v5, v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10082A9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v5[4];

  v5[2] = a1;
  v3 = static Animation.default.getter();
  withAnimation<A>(_:_:)(v3, a2, v5, (char *)&type metadata for () + 8);
  return swift_release(v3);
}

uint64_t sub_10082AA54(__n128 a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v4 = type metadata accessor for EditMode(0, a1);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v14 - v10;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))((char *)v14 - v10, *a3, v4, v9);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v4);
  v12 = sub_100007E8C(&qword_1011CBD80);
  Binding.wrappedValue.setter(v7, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
}

double sub_10082AB40(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = MusicLibrary.id.getter(a1);
  v3 = v2;
  _s8MenuViewV8MoreMenuVMa(0);
  v4 = sub_100007E8C(&qword_1011CC070);
  State.wrappedValue.getter(&v10, v4);
  if (v1 == v10 && v3 == v11)
  {
    v7.n128_u64[0] = swift_bridgeObjectRelease_n(v3, 2).n128_u64[0];
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v10, v11, 0);
    swift_bridgeObjectRelease();
    v7 = swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      v10 = MusicLibrary.id.getter(v7);
      v11 = v8;
      State.wrappedValue.setter(&v10, v4);
    }
  }
  return v7.n128_f64[0];
}

uint64_t sub_10082AC3C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  __int128 v25;

  v4 = *a2;
  v5 = a2[1];
  v6 = type metadata accessor for MusicLibrary(0);
  static MusicLibrary.shared.getter(v6);
  v8 = MusicLibrary.id.getter(v7);
  v10 = v9;
  swift_release();
  if (v4 == v8 && v5 == v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v8, v10, 0);
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
LABEL_10:
    v17 = static MusicLibrary.shared.getter(v13);
    v19 = *(int *)(_s8MenuViewV8MoreMenuVMa(0) + 20);
    goto LABEL_11;
  }
  v14 = _s8MenuViewV8MoreMenuVMa(0);
  v15 = swift_retain();
  v16 = dispatch thunk of MusicAutoupdatingSharedLibrariesResponse.libraries.getter(v15);
  swift_release();
  swift_bridgeObjectRetain();
  v17 = sub_1008385C4(v16, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v17)
    v17 = static MusicLibrary.shared.getter(v18);
  v19 = *(int *)(v14 + 20);
LABEL_11:
  v20 = (uint64_t *)(a3 + v19);
  v21 = *v20;
  v24[0] = v17;
  v24[1] = v21;
  v25 = *(_OWORD *)(v20 + 1);
  v22 = sub_100007E8C(&qword_1011CC058);
  return Binding.wrappedValue.setter(v24, v22);
}

uint64_t sub_10082ADAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for MusicSharedLibrariesRequest(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MusicSharedLibrariesRequest.init()(v2);
  v6 = MusicSharedLibrariesRequest.autoupdatingResponse.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v6;
}

uint64_t sub_10082AE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = _s8MenuViewVMa(0);
  v3 = (uint64_t *)(v0 + *(int *)(v2 + 36));
  v4 = *v3;
  v5 = v3[1];
  v15 = v5;
  v6 = sub_100007E8C(&qword_1011CBDC8);
  State.wrappedValue.getter(&v16, v6);
  v14 = v16;
  v7 = type metadata accessor for MusicLibrary(0);
  v16 = static MusicLibrary.shared.getter(v7);
  v8 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  LOBYTE(v7) = dispatch thunk of static Equatable.== infix(_:_:)(&v14, &v16, v7, v8);
  swift_release();
  swift_release();
  if ((v7 & 1) != 0)
  {
    v9 = (char *)(v1 + *(int *)(v2 + 24));
    v10 = *v9;
    v11 = *((_QWORD *)v9 + 1);
    LOBYTE(v14) = v10;
    v15 = v11;
    v12 = sub_100007E8C(&qword_1011C4DD0);
    State.wrappedValue.getter(&v16, v12);
    return v16;
  }
  else
  {
    v14 = v4;
    v15 = v5;
    State.wrappedValue.getter(&v16, v6);
    return v16;
  }
}

uint64_t sub_10082AF64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  __n128 v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  __int128 v56;
  uint64_t *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;

  v127 = a2;
  v3 = type metadata accessor for CircularProgressView.LineStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for CircularProgressView(0);
  v115 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v8 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011CBEE8);
  __chkstk_darwin(v9);
  v112 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100007E8C(&qword_1011CBEF0);
  __chkstk_darwin(v114);
  v12 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100007E8C(&qword_1011CBEF8);
  __chkstk_darwin(v122);
  v116 = (uint64_t)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v117 = (uint64_t)&v111 - v15;
  v121 = sub_100007E8C(&qword_1011CBF00);
  __chkstk_darwin(v121);
  v123 = (uint64_t)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100007E8C(&qword_1011CBF08);
  __chkstk_darwin(v119);
  v18 = (char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_100007E8C(&qword_1011CBF10);
  v19 = __chkstk_darwin(v124);
  v120 = (char *)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MusicLibrary.ConnectionStatus(0, v19);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (unsigned int *)((char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = sub_100007E8C(&qword_1011CBF18);
  __chkstk_darwin(v25);
  v125 = (uint64_t)&v111 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v27);
  v118 = (char *)&v111 - v29;
  v126 = a1;
  MusicLibrary.connectionStatus.getter(v28);
  v30 = (*(uint64_t (**)(unsigned int *, uint64_t))(v22 + 88))(v24, v21);
  if (v30 == enum case for MusicLibrary.ConnectionStatus.connecting(_:))
  {
    (*(void (**)(unsigned int *, uint64_t))(v22 + 96))(v24, v21);
    v31 = *v24;
    v32 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
    v33 = Color.init(_:)(v32);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for CircularProgressView.LineStyle.round(_:), v3);
    LOBYTE(v132) = 0;
    CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)(v31, v33, v6, 1.25);
    v34 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x8000000100E46670);
    v35 = Text.init(_:tableName:bundle:comment:)(v34);
    v37 = v36;
    v39 = v38;
    v41 = v40 & 1;
    v42 = sub_100048748((unint64_t *)&qword_1011CAA18, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressView, (uint64_t)&protocol conformance descriptor for CircularProgressView);
    v43 = (uint64_t)v112;
    v44 = v113;
    View.accessibility(label:)(v35, v37, v41, v39, v113, v42);
    sub_100055BAC(v35, v37, v41);
    v45 = swift_bridgeObjectRelease();
    v46.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v115 + 8))(v8, v44, v45);
    v47 = static Color.primary.getter(v46);
    KeyPath = swift_getKeyPath(&unk_100ED2A00);
    sub_10004A160(v43, (uint64_t)v12, &qword_1011CBEE8);
    v49 = (uint64_t *)&v12[*(int *)(v114 + 36)];
    *v49 = KeyPath;
    v49[1] = v47;
    v50 = sub_10004FF60(v43, &qword_1011CBEE8);
    v51 = static Alignment.center.getter(v50);
    _FrameLayout.init(width:height:alignment:)(&v132, 0x4028000000000000, 0, 0x4028000000000000, 0, v51, v52);
    v53 = v116;
    sub_10004A160((uint64_t)v12, v116, &qword_1011CBEF0);
    v54 = v122;
    v55 = (_OWORD *)(v53 + *(int *)(v122 + 36));
    v56 = v133;
    *v55 = v132;
    v55[1] = v56;
    v55[2] = v134;
    sub_10004FF60((uint64_t)v12, &qword_1011CBEF0);
    v57 = &qword_1011CBEF8;
    v58 = v117;
    sub_100065228(v53, v117, &qword_1011CBEF8);
    sub_10004A160(v58, (uint64_t)v18, &qword_1011CBEF8);
    swift_storeEnumTagMultiPayload(v18, v119, 1);
    v59 = sub_10083C554();
    v60 = (uint64_t)v120;
    _ConditionalContent<>.init(storage:)(v18, &type metadata for EmptyView, v54, &protocol witness table for EmptyView, v59);
    v61 = v123;
    sub_10004A160(v60, v123, &qword_1011CBF10);
    swift_storeEnumTagMultiPayload(v61, v121, 0);
    v62 = sub_100007E8C(&qword_1011CBF20);
    v63 = sub_10083C4E8();
    v64 = sub_10005B654(&qword_1011CBF48, &qword_1011CBF20, (void (*)(void))sub_1001C3EFC);
    v65 = (uint64_t)v118;
    _ConditionalContent<>.init(storage:)(v61, v124, v62, v63, v64);
    sub_10004FF60(v60, &qword_1011CBF10);
LABEL_9:
    sub_10004FF60(v58, v57);
    goto LABEL_10;
  }
  v66 = v18;
  v67 = (uint64_t)v120;
  v68 = v121;
  v69 = v122;
  v70 = v123;
  v65 = (uint64_t)v118;
  if (v30 == enum case for MusicLibrary.ConnectionStatus.notConnected(_:))
  {
    v71 = Image.init(systemName:)(0xD000000000000016, 0x8000000100E46650);
    v73 = static Color.primary.getter(v72);
    v74 = swift_getKeyPath(&unk_100ED29D0);
    v128 = v71;
    v129 = v74;
    v130 = v73;
    v131 = 0;
    swift_retain();
    swift_retain();
    swift_retain();
    v75 = sub_100007E8C(&qword_1011A4CD0);
    v76 = sub_1001C3EFC();
    _ConditionalContent<>.init(storage:)(&v128, v75, &type metadata for EmptyView, v76, &protocol witness table for EmptyView);
    v77 = v133;
    v78 = BYTE8(v133);
    v79 = v70;
    *(_OWORD *)v70 = v132;
    *(_QWORD *)(v70 + 16) = v77;
    *(_BYTE *)(v70 + 24) = v78;
    swift_storeEnumTagMultiPayload(v70, v68, 1);
    v80 = sub_100007E8C(&qword_1011CBF20);
    v81 = sub_10083C4E8();
    v82 = sub_10005B654(&qword_1011CBF48, &qword_1011CBF20, (void (*)(void))sub_1001C3EFC);
    _ConditionalContent<>.init(storage:)(v79, v124, v80, v81, v82);
    swift_release();
    swift_release();
    v83 = swift_release();
  }
  else
  {
    v84 = v123;
    v85 = v121;
    if (v30 == enum case for MusicLibrary.ConnectionStatus.connected(_:)
      || v30 == enum case for MusicLibrary.ConnectionStatus.disconnecting(_:))
    {
      v93 = v66;
      swift_storeEnumTagMultiPayload(v66, v119, 0);
      v94 = sub_10083C554();
      v58 = v67;
      _ConditionalContent<>.init(storage:)(v93, &type metadata for EmptyView, v69, &protocol witness table for EmptyView, v94);
      v57 = &qword_1011CBF10;
      sub_10004A160(v67, v84, &qword_1011CBF10);
      swift_storeEnumTagMultiPayload(v84, v85, 0);
      v95 = sub_100007E8C(&qword_1011CBF20);
      v96 = sub_10083C4E8();
      v97 = sub_10005B654(&qword_1011CBF48, &qword_1011CBF20, (void (*)(void))sub_1001C3EFC);
      _ConditionalContent<>.init(storage:)(v84, v124, v95, v96, v97);
      goto LABEL_9;
    }
    v128 = 0;
    v129 = 0;
    v130 = 0;
    v131 = 1;
    v86 = sub_100007E8C(&qword_1011A4CD0);
    v87 = sub_1001C3EFC();
    _ConditionalContent<>.init(storage:)(&v128, v86, &type metadata for EmptyView, v87, &protocol witness table for EmptyView);
    v88 = v133;
    v89 = BYTE8(v133);
    *(_OWORD *)v84 = v132;
    *(_QWORD *)(v84 + 16) = v88;
    *(_BYTE *)(v84 + 24) = v89;
    swift_storeEnumTagMultiPayload(v84, v85, 1);
    v90 = sub_100007E8C(&qword_1011CBF20);
    v91 = sub_10083C4E8();
    v92 = sub_10005B654(&qword_1011CBF48, &qword_1011CBF20, (void (*)(void))sub_1001C3EFC);
    _ConditionalContent<>.init(storage:)(v84, v124, v90, v91, v92);
    (*(void (**)(unsigned int *, uint64_t))(v22 + 8))(v24, v21);
  }
LABEL_10:
  v128 = MusicLibrary.name.getter(v83);
  v129 = v98;
  v99 = sub_100055B68();
  v100 = Text.init<A>(_:)(&v128, &type metadata for String, v99);
  v102 = v101;
  v104 = v103;
  v106 = v105 & 1;
  v107 = v125;
  sub_10004A160(v65, v125, &qword_1011CBF18);
  v108 = v127;
  sub_10004A160(v107, v127, &qword_1011CBF18);
  v109 = v108 + *(int *)(sub_100007E8C(&qword_1011CBF50) + 48);
  *(_QWORD *)v109 = v100;
  *(_QWORD *)(v109 + 8) = v102;
  *(_BYTE *)(v109 + 16) = v106;
  *(_QWORD *)(v109 + 24) = v104;
  sub_100055BBC(v100, v102, v106);
  swift_bridgeObjectRetain();
  sub_10004FF60(v65, &qword_1011CBF18);
  sub_100055BAC(v100, v102, v106);
  swift_bridgeObjectRelease();
  return sub_10004FF60(v107, &qword_1011CBF18);
}

uint64_t sub_10082B9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  char v78[16];
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  _QWORD v85[2];
  unsigned __int8 v86;
  _QWORD v87[2];

  v75 = a4;
  v76 = a2;
  v77 = a3;
  v68 = a1;
  v74 = a5;
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v73 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v72 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for ControlSize(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for ButtonBorderShape(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011CC120);
  v13 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100007E8C(&qword_1011CC128);
  __chkstk_darwin(v61);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for BorderedButtonStyle(0);
  v67 = *(_QWORD *)(v18 - 8);
  v58 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011CA7A0);
  v66 = *(_QWORD *)(v21 - 8);
  v59 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011CC130);
  __chkstk_darwin(v62);
  v60 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = swift_allocObject(&unk_1010DE4C0, 48, 7);
  *(_QWORD *)(v25 + 16) = a1;
  *(_QWORD *)(v25 + 24) = v76;
  *(_BYTE *)(v25 + 32) = v77;
  *(_QWORD *)(v25 + 40) = v75;
  swift_retain();
  swift_retain();
  v26 = Button.init(action:label:)(sub_10083D7FC, v25, sub_10082C01C, 0, &type metadata for Image, &protocol witness table for Image);
  BorderedButtonStyle.init()(v26);
  v27 = sub_100049F28(&qword_1011CA7B8, &qword_1011CA7A0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v28 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  v29 = View.buttonStyle<A>(_:)(v20, v21, v18, v27, v28);
  static ButtonBorderShape.circle.getter(v29);
  KeyPath = swift_getKeyPath(&unk_100ED2BA0);
  v31 = (uint64_t *)&v17[*(int *)(v61 + 36)];
  v32 = sub_100007E8C(&qword_1011A0610);
  v33 = v64;
  v34 = v65;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))((char *)v31 + *(int *)(v32 + 28), v12, v65);
  *v31 = KeyPath;
  v35 = v63;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v15, v63);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v35);
  v36 = v70;
  v37 = v69;
  v38 = v71;
  (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v69, enum case for ControlSize.regular(_:), v71);
  v39 = swift_getKeyPath(&unk_100ED25C0);
  v40 = v62;
  v41 = (uint64_t)v60;
  v42 = (uint64_t *)&v60[*(int *)(v62 + 36)];
  v43 = sub_100007E8C(&qword_1011A0618);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))((char *)v42 + *(int *)(v43 + 28), v37, v38);
  *v42 = v39;
  sub_10004A160((uint64_t)v17, v41, &qword_1011CC128);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  sub_10004FF60((uint64_t)v17, &qword_1011CC128);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v20, v58);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v23, v59);
  v44 = v72;
  v45 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100E46770);
  v46 = v73;
  static Locale.current.getter(v45);
  v87[0] = String.init(localized:table:bundle:locale:comment:)(v44, 0, 0, 0, v46, "Title for Cloud Library Alert", 29, 2);
  v87[1] = v47;
  LOBYTE(v17) = v77;
  v83 = v77;
  v48 = v75;
  v84 = v75;
  v49 = sub_100007E8C(&qword_1011C4DD0);
  State.projectedValue.getter(v85, v49);
  v50 = v85[0];
  v51 = v85[1];
  v52 = v86;
  v79 = v68;
  v80 = v76;
  v81 = (char)v17;
  v82 = v48;
  v53 = sub_100007E8C(&qword_1011CC138);
  v54 = sub_10083D860();
  v55 = sub_100055B68();
  v56 = sub_100049F28(&qword_1011CC150, &qword_1011CC138, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  View.alert<A, B, C>(_:isPresented:actions:message:)(v87, v50, v51, v52, sub_10083D850, v78, sub_10082C4F4, 0, v40, &type metadata for String, v53, &type metadata for Text, v54, v55, v56, &protocol witness table for Text);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10004FF60(v41, &qword_1011CC130);
}

uint64_t sub_10082C01C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0x732E64756F6C6369, 0xEC0000006873616CLL);
  *a1 = result;
  return result;
}

uint64_t sub_10082C05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;

  v65 = a4;
  LODWORD(v64) = a3;
  v63 = a1;
  v69 = a5;
  v6 = type metadata accessor for KeyboardShortcut(0);
  v7 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  __chkstk_darwin(v6);
  v66 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_10119DFD8);
  v62 = *(_QWORD *)(v15 - 8);
  v16 = v15;
  __chkstk_darwin(v15);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011CC158);
  v61 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v68 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v67 = (char *)&v57 - v22;
  __chkstk_darwin(v23);
  v25 = (char *)&v57 - v24;
  __chkstk_darwin(v26);
  v70 = (char *)&v57 - v27;
  v59 = v14;
  v28 = String.LocalizationValue.init(stringLiteral:)(0x6E4F206E727554, 0xE700000000000000);
  v60 = v11;
  static Locale.current.getter(v28);
  v71 = String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, 0, v11, "Button title to turn on Cloud Library", 37, 2);
  v72 = v29;
  v30 = swift_allocObject(&unk_1010DE4E8, 48, 7);
  *(_QWORD *)(v30 + 16) = v63;
  *(_QWORD *)(v30 + 24) = a2;
  *(_BYTE *)(v30 + 32) = v64;
  *(_QWORD *)(v30 + 40) = v65;
  v31 = sub_100055B68();
  v64 = v31;
  swift_retain();
  v32 = swift_retain();
  v33 = Button<>.init<A>(_:action:)(&v71, sub_10083DA1C, v30, &type metadata for String, v31, v32);
  v34 = v66;
  static KeyboardShortcut.defaultAction.getter(v33);
  v65 = sub_100049F28(&qword_1011C5140, &qword_10119DFD8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v57 = v25;
  v35 = v16;
  View.keyboardShortcut(_:)(v34, v16, v65);
  v36 = *(void (**)(char *, uint64_t))(v7 + 8);
  v36(v34, v6);
  v37 = *(void (**)(char *, uint64_t))(v62 + 8);
  v37(v18, v35);
  v38 = v61;
  v39 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
  v39(v70, v25, v19);
  v40 = v59;
  v41 = String.LocalizationValue.init(stringLiteral:)(0x66664F207065654BLL, 0xE800000000000000);
  v42 = v60;
  static Locale.current.getter(v41);
  v71 = String.init(localized:table:bundle:locale:comment:)(v40, 0, 0, 0, v42, "Button title to dismiss Cloud Library Alert", 43, 2);
  v72 = v43;
  v45 = Button<>.init<A>(_:action:)(&v71, UIScreen.Dimensions.size.getter, 0, &type metadata for String, v64, v44);
  v46 = v34;
  static KeyboardShortcut.cancelAction.getter(v45);
  v47 = v67;
  View.keyboardShortcut(_:)(v46, v35, v65);
  v36(v46, v58);
  v37(v18, v35);
  v48 = v57;
  v39(v57, v47, v19);
  v49 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v50 = v47;
  v51 = v70;
  v49(v47, v70, v19);
  v52 = v68;
  v49(v68, v48, v19);
  v53 = v69;
  v49(v69, v50, v19);
  v54 = sub_100007E8C(&qword_1011CC160);
  v49(&v53[*(int *)(v54 + 48)], v52, v19);
  v55 = *(void (**)(char *, uint64_t))(v38 + 8);
  v55(v48, v19);
  v55(v51, v19);
  v55(v52, v19);
  return ((uint64_t (*)(char *, uint64_t))v55)(v50, v19);
}

uint64_t sub_10082C4F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000047, 0x8000000100E467B0);
  result = Text.init(_:tableName:bundle:comment:)(v2);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_10082C570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10082B9A0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10082C580@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(__n128);
  __n128 v17;
  unint64_t v18;
  BOOL v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  __n128 v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[3];

  v48 = a2;
  v3 = type metadata accessor for CircularProgressView.LineStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for CircularProgressView(0);
  v46 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011CBEE8);
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100007E8C(&qword_1011CBEF0);
  __chkstk_darwin(v45);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_1011CBEF8);
  __chkstk_darwin(v47);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(uint64_t (**)(__n128))(*(_QWORD *)a1 + 336);
  v17 = swift_retain();
  v18 = v16(v17);
  swift_release();
  v19 = (v18 & 0xC0000000) != 0x40000000;
  if ((v18 & 0xC0000000) == 0x40000000)
    v20 = HIDWORD(v18);
  else
    v20 = 0;
  v21 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  v22 = Color.init(_:)(v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for CircularProgressView.LineStyle.round(_:), v3);
  LOBYTE(v49[0]) = v19;
  CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)(v20 | ((unint64_t)v19 << 32), v22, v6, 1.75);
  v23 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x8000000100E46670);
  v24 = Text.init(_:tableName:bundle:comment:)(v23);
  v26 = v25;
  v28 = v27;
  v30 = v29 & 1;
  v31 = sub_100048748((unint64_t *)&qword_1011CAA18, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressView, (uint64_t)&protocol conformance descriptor for CircularProgressView);
  v32 = v44;
  View.accessibility(label:)(v24, v26, v30, v28, v44, v31);
  sub_100055BAC(v24, v26, v30);
  v33 = swift_bridgeObjectRelease();
  v34.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v46 + 8))(v8, v32, v33);
  v35 = static Color.primary.getter(v34);
  KeyPath = swift_getKeyPath(&unk_100ED2A00);
  sub_10004A160((uint64_t)v11, (uint64_t)v13, &qword_1011CBEE8);
  v37 = (uint64_t *)&v13[*(int *)(v45 + 36)];
  *v37 = KeyPath;
  v37[1] = v35;
  v38 = sub_10004FF60((uint64_t)v11, &qword_1011CBEE8);
  v39 = static Alignment.center.getter(v38);
  _FrameLayout.init(width:height:alignment:)(v49, 0x4032000000000000, 0, 0x4032000000000000, 0, v39, v40);
  sub_10004A160((uint64_t)v13, (uint64_t)v15, &qword_1011CBEF0);
  v41 = &v15[*(int *)(v47 + 36)];
  v42 = v49[1];
  *(_OWORD *)v41 = v49[0];
  *((_OWORD *)v41 + 1) = v42;
  *((_OWORD *)v41 + 2) = v49[2];
  sub_10004FF60((uint64_t)v13, &qword_1011CBEF0);
  return sub_100065228((uint64_t)v15, v48, &qword_1011CBEF8);
}

uint64_t sub_10082C91C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10082C580(*(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_10082C928()
{
  return sub_1004F5420((uint64_t)&unk_100ED2578, (uint64_t)&unk_100ED25A0);
}

uint64_t sub_10082C93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011B5778);
  v6 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  v46 = v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B5780);
  v10 = *(_QWORD *)(v9 - 8);
  v47 = v9;
  v48 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011B5718);
  v49 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011CBC38);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library15PlaylistSectionP33_EFB6AC87FA0200846E396AA65E2983889ViewModel_responseSubscription) = 0;
  v20 = v1
      + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library15PlaylistSectionP33_EFB6AC87FA0200846E396AA65E2983889ViewModel__playlists;
  v50 = _swiftEmptyArrayStorage;
  v21 = sub_100007E8C((uint64_t *)&unk_1011CB450);
  Published.init(initialValue:)(&v50, v21);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  v22 = type metadata accessor for TitledSection(0);
  v23 = type metadata accessor for Playlist(0);
  MusicLibrarySectionedRequest.init()(v22, v23, &protocol witness table for TitledSection, &protocol witness table for Playlist);
  v24 = sub_100049F28((unint64_t *)&unk_1011B5788, (uint64_t *)&unk_1011B5718, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v25 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v13, v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v1+ OBJC_IVAR____TtCVE5MusicO9MusicCore7Library15PlaylistSectionP33_EFB6AC87FA0200846E396AA65E2983889ViewModel_request, v15, v13);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library15PlaylistSectionP33_EFB6AC87FA0200846E396AA65E2983889ViewModel_response) = v25;
  v26 = swift_retain();
  dispatch thunk of MusicAutoupdatingResponse.$response.getter(v26);
  v27 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v50 = (_QWORD *)static OS_dispatch_queue.main.getter(v27, v28, v29, v30, v31, v32, v33, v34);
  v35 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v4, 1, 1, v35);
  v36 = sub_100049F28((unint64_t *)&unk_1011B5798, &qword_1011B5778, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v37 = sub_10006A92C();
  v38 = v45;
  Publisher.receive<A>(on:options:)(&v50, v4, v45, v27, v36, v37);
  sub_10004FF60((uint64_t)v4, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v38);
  v39 = swift_allocObject(&unk_1010DE2F8, 24, 7);
  swift_weakInit(v39 + 16, v1);
  v40 = sub_100049F28((unint64_t *)&unk_1011B57A8, &qword_1011B5780, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v41 = v47;
  v42 = Publisher<>.sink(receiveValue:)(sub_10083C474, v39, v47, v40);
  swift_release();
  v43 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v12, v41, v43);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v13);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library15PlaylistSectionP33_EFB6AC87FA0200846E396AA65E2983889ViewModel_responseSubscription) = v42;
  swift_release();
  return v1;
}

uint64_t sub_10082CD18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  double (*v34)(char *, uint64_t, uint64_t);
  __n128 v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t KeyPath;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  _QWORD v71[3];
  _QWORD *v72;
  char v73[24];

  v68 = (char *)a1;
  v3 = type metadata accessor for Playlist(0);
  v70 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v66 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v60 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v60 - v9;
  __chkstk_darwin(v11);
  v69 = (char *)&v60 - v12;
  v13 = sub_100007E8C((uint64_t *)&unk_1011ACAD0);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011B5690);
  v63 = *(_QWORD **)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011B5680);
  __chkstk_darwin(v19);
  v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011B5620);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v65 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v73, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v64 = result;
    sub_10004A160((uint64_t)v68, (uint64_t)v21, &qword_1011B5680);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
    {
      swift_release();
      return sub_10004FF60((uint64_t)v21, &qword_1011B5680);
    }
    v26 = v23;
    v68 = v7;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v65, v21, v22);
    v27 = MusicLibrarySectionedResponse.sections.getter(v22);
    v28 = _swiftEmptyArrayStorage;
    v71[0] = _swiftEmptyArrayStorage;
    v29 = *(_QWORD *)(v27 + 16);
    v61 = v23;
    v62 = v22;
    if (v29)
    {
      v30 = (uint64_t)v15;
      v31 = v63;
      v32 = *((unsigned __int8 *)v63 + 80);
      v60 = v27;
      v33 = v27 + ((v32 + 32) & ~v32);
      v67 = v63[9];
      v34 = (double (*)(char *, uint64_t, uint64_t))v63[2];
      do
      {
        v35.n128_f64[0] = v34(v18, v33, v16);
        MusicLibrarySection.items.getter(v16, v35);
        ((void (*)(char *, uint64_t))v31[1])(v18, v16);
        sub_100807F0C(v30);
        v33 += v67;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRelease();
      v37 = v70;
      v36 = (_QWORD *)v71[0];
      v38 = v66;
      v26 = v61;
      v22 = v62;
      v28 = _swiftEmptyArrayStorage;
      v39 = *(_QWORD *)(v71[0] + 16);
      if (v39)
        goto LABEL_8;
    }
    else
    {
      swift_bridgeObjectRelease();
      v36 = _swiftEmptyArrayStorage;
      v37 = v70;
      v38 = v66;
      v39 = _swiftEmptyArrayStorage[2];
      if (v39)
      {
LABEL_8:
        v72 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)(v39);
        v40 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
        v63 = v36;
        v41 = (char *)v36 + v40;
        v42 = *(_QWORD *)(v37 + 72);
        v66 = *(char **)(v37 + 16);
        v67 = v42;
        do
        {
          v43 = v69;
          v44 = (void (*)(char *, char *, uint64_t))v66;
          ((void (*)(char *, char *, uint64_t))v66)(v69, v41, v3);
          v45 = v10;
          v44(v10, v43, v3);
          v46 = _s15PlaylistSectionV12PlaylistCellV9ViewModelCMa(0);
          v47 = swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
          *(_QWORD *)(v47 + 16) = Playlist.id.getter(v47);
          *(_QWORD *)(v47 + 24) = v48;
          v49 = (uint64_t)v68;
          v44(v68, v45, v3);
          v50 = swift_beginAccess(v47 + OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library15PlaylistSection12PlaylistCell9ViewModel__playlist, v71, 33, 0);
          ((void (*)(char *, uint64_t, uint64_t, __n128))v44)(v38, v49, v3, v50);
          Published.init(initialValue:)(v38, v3);
          v51 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
          v51(v49, v3);
          swift_endAccess(v71);
          v51((uint64_t)v45, v3);
          v52 = ((uint64_t (*)(char *, uint64_t))v51)(v43, v3);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v52);
          v53 = v38;
          v54 = v3;
          v55 = v72[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v55);
          v56 = v55;
          v10 = v45;
          v3 = v54;
          v38 = v53;
          v57 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v47);
          specialized ContiguousArray._endMutation()(v57);
          v41 += v67;
          --v39;
        }
        while (v39);
        v28 = v72;
        swift_bridgeObjectRelease();
        v26 = v61;
        v22 = v62;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
LABEL_13:
    KeyPath = swift_getKeyPath(&unk_100ED2578);
    v59 = swift_getKeyPath(&unk_100ED25A0);
    v71[0] = v28;
    static Published.subscript.setter(v71, v64, KeyPath, v59);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v65, v22);
  }
  return result;
}

uint64_t sub_10082D20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0
     + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library15PlaylistSectionP33_EFB6AC87FA0200846E396AA65E2983889ViewModel_request;
  v2 = sub_100007E8C((uint64_t *)&unk_1011B5718);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  v3 = v0
     + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library15PlaylistSectionP33_EFB6AC87FA0200846E396AA65E2983889ViewModel__playlists;
  v4 = sub_100007E8C(&qword_1011CBC38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10082D2AC()
{
  return _s15PlaylistSectionV9ViewModelCMa(0);
}

uint64_t _s15PlaylistSectionV9ViewModelCMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011CB430, (uint64_t)&_s15PlaylistSectionV9ViewModelCMn);
}

void sub_10082D2C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_10082D378(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[2] = "\b";
    sub_1000EA54C(319, &qword_1011CB448, (uint64_t *)&unk_1011CB450);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

void sub_10082D378(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  if (!qword_1011CB440)
  {
    v4[0] = type metadata accessor for TitledSection(255);
    v4[1] = type metadata accessor for Playlist(255);
    v4[2] = &protocol witness table for TitledSection;
    v4[3] = &protocol witness table for Playlist;
    v2 = type metadata accessor for MusicLibrarySectionedRequest(a1, v4);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1011CB440);
  }
}

uint64_t sub_10082D3F8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = _s15PlaylistSectionV9ViewModelCMa(0);
  result = Identifiable<>.id.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_10082D438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = _s15PlaylistSectionV9ViewModelCMa(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_10082D474()
{
  uint64_t v0;

  v0 = _s15PlaylistSectionV9ViewModelCMa(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return sub_10082C93C();
}

uint64_t sub_10082D4A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  _QWORD v176[2];
  unsigned __int8 v177;
  _QWORD v178[2];

  v166 = a1;
  v161 = type metadata accessor for ControlSize(0);
  v160 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v159 = (char *)&v131 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = _s15PlaylistSectionVMa(0);
  v155 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v157 = v4;
  v158 = (uint64_t)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_100007E8C(&qword_1011CBA88);
  __chkstk_darwin(v147);
  v148 = (uint64_t)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_100007E8C(&qword_1011CBA90);
  __chkstk_darwin(v146);
  v145 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v141 = (char *)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v140 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_100007E8C(&qword_1011CBA98);
  v143 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v171 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_100007E8C(&qword_1011CBAA0);
  __chkstk_darwin(v149);
  v142 = (char *)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v150 = (uint64_t)&v131 - v14;
  v154 = sub_100007E8C(&qword_1011CBAA8);
  v153 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v152 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_100007E8C(&qword_1011CBAB0);
  __chkstk_darwin(v170);
  v151 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v156 = (uint64_t)&v131 - v18;
  v168 = sub_100007E8C(&qword_1011CBAB8);
  __chkstk_darwin(v168);
  v169 = (uint64_t)&v131 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100007E8C(&qword_1011CBAC0);
  __chkstk_darwin(v138);
  v139 = (uint64_t)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_100007E8C(&qword_1011C9760);
  __chkstk_darwin(v164);
  v22 = (char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100007E8C(&qword_1011CBAC8);
  __chkstk_darwin(v137);
  v135 = (uint64_t)&v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v136 = (uint64_t)&v131 - v25;
  v26 = sub_100007E8C(&qword_1011BFDB0);
  __chkstk_darwin(v26);
  v28 = (char *)&v131 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v163);
  v162 = (uint64_t)&v131 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v165 = (uint64_t)&v131 - v31;
  v167 = sub_100007E8C(&qword_1011CBAD0);
  __chkstk_darwin(v167);
  v133 = (char *)&v131 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v134 = (uint64_t)&v131 - v34;
  __chkstk_darwin(v35);
  v37 = (char *)&v131 - v36;
  v38 = v3;
  v39 = *(int *)(v3 + 24);
  v40 = v1;
  v41 = (_QWORD *)(v1 + v39);
  v42 = *(_QWORD *)(v1 + v39);
  v43 = v41[1];
  v44 = *((unsigned __int8 *)v41 + 16);
  v45 = _s15PlaylistSectionV9ViewModelCMa(0);
  v172 = sub_100048748(&qword_1011CBAD8, _s15PlaylistSectionV9ViewModelCMa, (uint64_t)&unk_100ED24C0);
  v173 = v45;
  v46 = StateObject.wrappedValue.getter(v42, v43, v44, v45, v172);
  KeyPath = swift_getKeyPath(&unk_100ED2578);
  v48 = swift_getKeyPath(&unk_100ED25A0);
  static Published.subscript.getter(v176, v46, KeyPath, v48);
  swift_release();
  swift_release();
  swift_release();
  if (v176[0] >> 62)
  {
    if (v176[0] < 0)
      v129 = v176[0];
    else
      v129 = v176[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v49 = _CocoaArrayWrapper.endIndex.getter(v129);
    swift_bridgeObjectRelease();
  }
  else
  {
    v49 = *(_QWORD *)((v176[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v49)
  {
    v50 = v140;
    v51 = String.LocalizationValue.init(stringLiteral:)(0x7473696C79616C50, 0xE900000000000073);
    v52 = v141;
    static Locale.current.getter(v51);
    v178[0] = String.init(localized:table:bundle:locale:comment:)(v50, 0, 0, 0, v52, "Title for playlist Section in Library Sidebar", 45, 2);
    v178[1] = v53;
    v54 = v40 + *(int *)(v38 + 28);
    v55 = *(_BYTE *)v54;
    v56 = *(_QWORD *)(v54 + 8);
    v174 = v55;
    v175 = v56;
    v57 = sub_100007E8C(&qword_1011C4DD0);
    v58 = State.projectedValue.getter(v176, v57);
    v141 = (char *)&v131;
    v59 = v176[0];
    v60 = v176[1];
    v61 = v177;
    __chkstk_darwin(v58);
    v132 = v40;
    v62 = sub_100007E8C(&qword_1011CBAE0);
    v63 = sub_100049F28(&qword_1011CBAE8, &qword_1011CBAE0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v64 = sub_100055B68();
    v130 = v63;
    v65 = v171;
    Section<>.init<A>(_:isExpanded:content:)(v178, v59, v60, v61, sub_100837F8C, &v131 - 4, v62, &type metadata for String, v130, v64);
    v66 = _s15LegacyPlaylistsV5ScopeOMa(0);
    swift_storeEnumTagMultiPayload(v28, v66, 3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v28, 0, 1, v66);
    v67 = v162;
    sub_1006520D4((uint64_t)v28, v162);
    sub_10004FF60((uint64_t)v28, &qword_1011BFDB0);
    v68 = v165;
    sub_10005B704(v67, v165, type metadata accessor for Library.Context);
    *(_BYTE *)(v68 + *(int *)(v163 + 52)) = 1;
    sub_10005B748(v67, type metadata accessor for Library.Context);
    v69 = *(_QWORD *)(StateObject.wrappedValue.getter(*v41, v41[1], *((unsigned __int8 *)v41 + 16), v173, v172)
                    + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library15PlaylistSectionP33_EFB6AC87FA0200846E396AA65E2983889ViewModel_response);
    swift_retain();
    swift_release();
    v70 = v146;
    v71 = (uint64_t)v145;
    v72 = (uint64_t)&v145[*(int *)(v146 + 36)];
    sub_10005B704(v68, v72, type metadata accessor for Library.Context);
    v73 = (_QWORD *)(v72 + *(int *)(v164 + 36));
    swift_retain();
    v74 = sub_100007E8C(&qword_1011C9750);
    v75 = sub_100049F28(&qword_1011C9758, &qword_1011C9750, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
    *v73 = ObservedObject.init(wrappedValue:)(v69, v74, v75);
    v73[1] = v76;
    v77 = v143;
    v78 = v144;
    (*(void (**)(uint64_t, char *, uint64_t))(v143 + 16))(v71, v65, v144);
    v79 = v148;
    sub_10004A160(v71, v148, &qword_1011CBA90);
    swift_storeEnumTagMultiPayload(v79, v147, 0);
    v80 = sub_100837F94();
    v81 = sub_100838018();
    v82 = (uint64_t)v142;
    _ConditionalContent<>.init(storage:)(v79, v70, v78, v80, v81);
    sub_10004FF60(v71, &qword_1011CBA90);
    v83 = v150;
    sub_100065228(v82, v150, &qword_1011CBAA0);
    swift_release();
    sub_10005B748(v68, type metadata accessor for Library.Context);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v171, v78);
    v84 = StateObject.wrappedValue.getter(*v41, v41[1], *((unsigned __int8 *)v41 + 16), v173, v172);
    v85 = swift_getKeyPath(&unk_100ED2578);
    v86 = swift_getKeyPath(&unk_100ED25A0);
    static Published.subscript.getter(v176, v84, v85, v86);
    swift_release();
    swift_release();
    swift_release();
    v87 = v158;
    sub_10005B704(v132, v158, _s15PlaylistSectionVMa);
    v88 = *(unsigned __int8 *)(v155 + 80);
    v89 = (v88 + 16) & ~v88;
    v90 = swift_allocObject(&unk_1010DE1E0, v89 + v157, v88 | 7);
    sub_10005B6C0(v87, v90 + v89, _s15PlaylistSectionVMa);
    v91 = sub_100007E8C((uint64_t *)&unk_1011CB450);
    v92 = sub_10015FD08(&qword_1011CBB00, &qword_1011CBAA0, (void (*)(void))sub_100837F94, (void (*)(void))sub_100838018);
    v93 = sub_100838360();
    v94 = v152;
    View.onChange<A>(of:initial:_:)(v176, 0, sub_10083834C, v90, v149, v91, v92, v93);
    swift_release();
    swift_bridgeObjectRelease();
    sub_10004FF60(v83, &qword_1011CBAA0);
    v95 = v160;
    v96 = v159;
    v97 = v161;
    (*(void (**)(char *, _QWORD, uint64_t))(v160 + 104))(v159, enum case for ControlSize.small(_:), v161);
    v98 = swift_getKeyPath(&unk_100ED25C0);
    v99 = v170;
    v100 = (uint64_t)v151;
    v101 = (uint64_t *)&v151[*(int *)(v170 + 36)];
    v102 = sub_100007E8C(&qword_1011A0618);
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))((char *)v101 + *(int *)(v102 + 28), v96, v97);
    *v101 = v98;
    v103 = v153;
    v104 = v154;
    (*(void (**)(uint64_t, char *, uint64_t))(v153 + 16))(v100, v94, v154);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v97);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v94, v104);
    v105 = v156;
    sub_100065228(v100, v156, &qword_1011CBAB0);
    v106 = v169;
    sub_10004A160(v105, v169, &qword_1011CBAB0);
    swift_storeEnumTagMultiPayload(v106, v168, 1);
    v107 = sub_100838400();
    v108 = sub_1008384A0();
    _ConditionalContent<>.init(storage:)(v106, v167, v99, v107, v108);
    v109 = v105;
    v110 = &qword_1011CBAB0;
  }
  else
  {
    v111 = _s15LegacyPlaylistsV5ScopeOMa(0);
    swift_storeEnumTagMultiPayload(v28, v111, 3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v28, 0, 1, v111);
    v112 = v162;
    sub_1006520D4((uint64_t)v28, v162);
    sub_10004FF60((uint64_t)v28, &qword_1011BFDB0);
    v113 = v165;
    sub_10005B704(v112, v165, type metadata accessor for Library.Context);
    *(_BYTE *)(v113 + *(int *)(v163 + 52)) = 1;
    sub_10005B748(v112, type metadata accessor for Library.Context);
    v114 = *(_QWORD *)(StateObject.wrappedValue.getter(*v41, v41[1], *((unsigned __int8 *)v41 + 16), v173, v172)
                     + OBJC_IVAR____TtCVE5MusicO9MusicCore7Library15PlaylistSectionP33_EFB6AC87FA0200846E396AA65E2983889ViewModel_response);
    swift_retain();
    swift_release();
    sub_10005B704(v113, (uint64_t)v22, type metadata accessor for Library.Context);
    v115 = &v22[*(int *)(v164 + 36)];
    swift_retain();
    v116 = sub_100007E8C(&qword_1011C9750);
    v117 = sub_100049F28(&qword_1011C9758, &qword_1011C9750, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
    *(_QWORD *)v115 = ObservedObject.init(wrappedValue:)(v114, v116, v117);
    *((_QWORD *)v115 + 1) = v118;
    v119 = v135;
    sub_10004A160((uint64_t)v22, v135, &qword_1011C9760);
    sub_10004FF60((uint64_t)v22, &qword_1011C9760);
    v120 = v136;
    sub_100065228(v119, v136, &qword_1011CBAC8);
    v121 = v139;
    sub_10004A160(v120, v139, &qword_1011CBAC8);
    swift_storeEnumTagMultiPayload(v121, v138, 0);
    v122 = sub_10083841C();
    v123 = (uint64_t)v133;
    _ConditionalContent<>.init(storage:)(v121, v137, &type metadata for EmptyView, v122, &protocol witness table for EmptyView);
    sub_10004FF60(v120, &qword_1011CBAC8);
    v124 = v134;
    sub_100065228(v123, v134, &qword_1011CBAD0);
    swift_release();
    sub_10005B748(v113, type metadata accessor for Library.Context);
    sub_100065228(v124, (uint64_t)v37, &qword_1011CBAD0);
    v125 = v169;
    sub_10004A160((uint64_t)v37, v169, &qword_1011CBAD0);
    swift_storeEnumTagMultiPayload(v125, v168, 0);
    v126 = sub_100838400();
    v127 = sub_1008384A0();
    _ConditionalContent<>.init(storage:)(v125, v167, v170, v126, v127);
    v109 = (uint64_t)v37;
    v110 = &qword_1011CBAD0;
  }
  return sub_10004FF60(v109, v110);
}

uint64_t sub_10082E3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[2];

  v72 = a1;
  v77 = a2;
  v2 = sub_100007E8C(&qword_1011CBB28);
  v75 = *(_QWORD *)(v2 - 8);
  v76 = v2;
  __chkstk_darwin(v2);
  v74 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v73 = (char *)&v62 - v5;
  v6 = type metadata accessor for AccessibilityTraits(0);
  v70 = *(_QWORD *)(v6 - 8);
  v71 = v6;
  __chkstk_darwin(v6);
  v69 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100007E8C(&qword_1011CBB30);
  __chkstk_darwin(v68);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A2A80);
  v64 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011CBB38);
  v13 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011CBB40);
  __chkstk_darwin(v16);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_1011CBB48);
  __chkstk_darwin(v67);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v65 = (char *)&v62 - v22;
  __chkstk_darwin(v23);
  v66 = (uint64_t)&v62 - v24;
  Library.Menu.Identifier.name(for:)(0, 1);
  v78[0] = v25;
  v78[1] = v26;
  v27 = Library.Menu.Identifier.symbolName(for:)(0, 1u);
  v29 = v28;
  v30 = sub_100055B68();
  Label<>.init<A>(_:systemImage:)(v78, v27, v29, &type metadata for String, v30);
  v31 = sub_100049F28(&qword_1011A2BF8, &qword_1011A2A80, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v32 = sub_100838CC0();
  View.labelStyle<A>(_:)(v32, v10, &type metadata for MusicSidebarStyle, v31, v32);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v12, v10);
  v33 = v63;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v15, v63);
  *(_QWORD *)&v9[*(int *)(v68 + 36)] = 1;
  sub_10004A160((uint64_t)v9, (uint64_t)v18, &qword_1011CBB30);
  *(_QWORD *)&v18[*(int *)(v16 + 36)] = 1;
  sub_10004FF60((uint64_t)v9, &qword_1011CBB30);
  v34 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v33);
  v35 = v69;
  static AccessibilityTraits.isButton.getter(v34);
  v36 = sub_100838D04();
  View.accessibility(addTraits:)(v35, v16, v36);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v35, v71);
  sub_10004FF60((uint64_t)v18, &qword_1011CBB40);
  v37 = (uint64_t)v65;
  ModifiedContent<>.accessibility(identifier:)(0xD000000000000025);
  sub_10004FF60((uint64_t)v20, &qword_1011CBB48);
  v38 = v66;
  sub_100065228(v37, v66, &qword_1011CBB48);
  v39 = (uint64_t *)(v72 + *(int *)(_s15PlaylistSectionVMa(0) + 24));
  v40 = *v39;
  v41 = v39[1];
  v42 = *((unsigned __int8 *)v39 + 16);
  v43 = _s15PlaylistSectionV9ViewModelCMa(0);
  v44 = sub_100048748(&qword_1011CBAD8, _s15PlaylistSectionV9ViewModelCMa, (uint64_t)&unk_100ED24C0);
  v45 = StateObject.wrappedValue.getter(v40, v41, v42, v43, v44);
  KeyPath = swift_getKeyPath(&unk_100ED2578);
  v47 = swift_getKeyPath(&unk_100ED25A0);
  static Published.subscript.getter(v78, v45, KeyPath, v47);
  swift_release();
  swift_release();
  swift_release();
  v48 = sub_100007E8C((uint64_t *)&unk_1011CB450);
  v49 = _s15PlaylistSectionV12PlaylistCellVMa(0);
  v50 = sub_100049F28(&qword_1011CBB88, (uint64_t *)&unk_1011CB450, (uint64_t)&protocol conformance descriptor for [A]);
  v51 = sub_100048748(&qword_1011CBB90, _s15PlaylistSectionV12PlaylistCellVMa, (uint64_t)&unk_100ED2270);
  v52 = sub_100048748(&qword_1011CBB98, _s15PlaylistSectionV12PlaylistCellV9ViewModelCMa, (uint64_t)&unk_100ED2488);
  v53 = v73;
  ForEach<>.init(_:content:)(v78, sub_10082E9A4, 0, v48, &type metadata for String, v49, v50, v51, v52);
  sub_10004A160(v38, v37, &qword_1011CBB48);
  v54 = v74;
  v55 = v75;
  v56 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
  v57 = v76;
  v56(v74, v53, v76);
  v58 = v77;
  sub_10004A160(v37, v77, &qword_1011CBB48);
  v59 = sub_100007E8C(&qword_1011CBBA0);
  v56((char *)(v58 + *(int *)(v59 + 48)), v54, v57);
  v60 = *(void (**)(char *, uint64_t))(v55 + 8);
  v60(v53, v57);
  sub_10004FF60(v38, &qword_1011CBB48);
  v60(v54, v57);
  return sub_10004FF60(v37, &qword_1011CBB48);
}

uint64_t sub_10082E9A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v4 = swift_getKeyPath(&unk_100ED2638);
  v5 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v4, v5, 0);
  swift_retain();
  return sub_10082EA4C(v6, (uint64_t)v4, a1);
}

uint64_t sub_10082EA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;

  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s15PlaylistSectionV12PlaylistCellV9ViewModelCMa(0);
  v11 = sub_100048748(&qword_1011CBBA8, _s15PlaylistSectionV12PlaylistCellV9ViewModelCMa, (uint64_t)&unk_100ED2410);
  *(_QWORD *)a3 = ObservedObject.init(wrappedValue:)(a1, v10, v11);
  *(_QWORD *)(a3 + 8) = v12;
  *(_QWORD *)(a3 + 16) = swift_getKeyPath(&unk_100ED2668);
  *(_BYTE *)(a3 + 24) = 0;
  v13 = (int *)_s15PlaylistSectionV12PlaylistCellVMa(0);
  sub_100065228(a2, a3 + v13[6], &qword_10119EE98);
  v14 = (_QWORD *)(a3 + v13[7]);
  v15 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v16 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v14 = EnvironmentObject.init()(v15, v16);
  v14[1] = v17;
  v18 = (_QWORD *)(a3 + v13[8]);
  v19 = type metadata accessor for NoticePresenter(0);
  v20 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v18 = EnvironmentObject.init()(v19, v20);
  v18[1] = v21;
  v22 = a3 + v13[9];
  *(_QWORD *)v22 = sub_1000DEC04;
  *(_QWORD *)(v22 + 8) = 0;
  *(_BYTE *)(v22 + 16) = 0;
  v23 = (_QWORD *)(a3 + v13[10]);
  v24 = type metadata accessor for NavigationPusher();
  v25 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v23 = EnvironmentObject.init()(v24, v25);
  v23[1] = v26;
  v27 = (_QWORD *)(a3 + v13[11]);
  v28 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v29 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v27 = EnvironmentObject.init()(v28, v29);
  v27[1] = v30;
  v31 = (_QWORD *)(a3 + v13[12]);
  v32 = type metadata accessor for TabSelectionManager(0);
  v33 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v31 = EnvironmentObject.init()(v32, v33);
  v31[1] = v34;
  v35 = a3 + v13[13];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100ED2690);
  *(_QWORD *)(v35 + 8) = 0;
  *(_BYTE *)(v35 + 16) = 0;
  v36 = a3 + v13[14];
  *(_QWORD *)v36 = swift_getKeyPath(&unk_100ED26B8);
  *(_QWORD *)(v36 + 8) = 0;
  *(_BYTE *)(v36 + 16) = 0;
  v40 = 0x4042000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for Font.TextStyle.largeTitle(_:), v6);
  v37 = sub_1000E4360();
  return ScaledMetric.init(wrappedValue:relativeTo:)(&v40, v9, &type metadata for CGFloat, v37);
}

void sub_10082ED20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = *a1;
  v5 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED25F0);
  v7 = swift_getKeyPath(&unk_100ED2618);
  swift_retain();
  static Published.subscript.getter(&v40, v8, KeyPath, v7);
  swift_release();
  swift_release();
  swift_release();
  v9 = v40;
  if (v40 <= (uint64_t)0xEFFFFFFFFFFFFFFFLL)
  {
    sub_10069D640(v40);
    v10 = sub_100838864(v5, v9 & 0x7FFFFFFFFFFFFFFFLL);
    sub_10069CD60(v9);
    if ((v10 & 1) != 0
      || (sub_10069D640(v9),
          v11 = sub_100838ACC(v4, v9 & 0x7FFFFFFFFFFFFFFFLL),
          v13 = v12,
          sub_10069CD60(v9),
          (v13 & 1) != 0))
    {
      sub_10069CD60(v9);
    }
    else
    {
      v14 = __OFSUB__(v11, 1);
      v15 = v11 - 1;
      if (v14)
      {
        __break(1u);
      }
      else
      {
        v16 = _s15PlaylistSectionV12PlaylistCellV9ViewModelCMa(0);
        Array.subscript.getter(v15, v4, v16, (uint64_t)&v40);
        v17 = v40;
        if (v40)
        {
          swift_retain();
          v18 = sub_10083873C(v5, v17);
          swift_release();
          v19 = *(_QWORD *)(a3 + 8);
          if (v18)
          {
            v20 = swift_getKeyPath(&unk_100ED25F0);
            v21 = swift_getKeyPath(&unk_100ED2618);
            swift_retain_n(v18, 2);
            swift_retain();
            static Published.subscript.getter(&v40, v22, v20, v21);
            swift_release();
            swift_release();
            v23 = v40;
            v24 = swift_getKeyPath(&unk_100ED25F0);
            v25 = swift_getKeyPath(&unk_100ED2618);
            v40 = v18 | 0x8000000000000000;
            swift_retain();
            swift_retain();
            static Published.subscript.setter(&v40, v19, v24, v25);
            sub_100831784(v23);
            swift_release();
            sub_10069CD60(v23);
            sub_10069CD60(v9);
            v26 = swift_release();
            swift_release_n(v18, 2, v26);
          }
          else
          {
            v34 = swift_getKeyPath(&unk_100ED25F0);
            v35 = swift_getKeyPath(&unk_100ED2618);
            swift_retain();
            static Published.subscript.getter(&v40, v36, v34, v35);
            swift_release();
            swift_release();
            v37 = v40;
            v38 = swift_getKeyPath(&unk_100ED25F0);
            v39 = swift_getKeyPath(&unk_100ED2618);
            v40 = 1;
            swift_retain();
            static Published.subscript.setter(&v40, v19, v38, v39);
            sub_100831784(v37);
            sub_10069CD60(v37);
            sub_10069CD60(v9);
            swift_release();
          }
          swift_release();
        }
        else
        {
          v27 = *(_QWORD *)(a3 + 8);
          v28 = swift_getKeyPath(&unk_100ED25F0);
          v29 = swift_getKeyPath(&unk_100ED2618);
          swift_retain();
          static Published.subscript.getter(&v40, v30, v28, v29);
          swift_release();
          swift_release();
          v31 = v40;
          v32 = swift_getKeyPath(&unk_100ED25F0);
          v33 = swift_getKeyPath(&unk_100ED2618);
          v40 = 1;
          swift_retain();
          static Published.subscript.setter(&v40, v27, v32, v33);
          sub_100831784(v31);
          sub_10069CD60(v31);
          sub_10069CD60(v9);
          swift_release();
        }
      }
    }
  }
}

uint64_t sub_10082F0D8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001ED7F8((uint64_t)&unk_100ED2530, (uint64_t)&unk_100ED2558, a1);
}

uint64_t sub_10082F0EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtCVVE5MusicO9MusicCore7Library15PlaylistSection12PlaylistCell9ViewModel__playlist;
  v2 = sub_100007E8C(&qword_1011CBC30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10082F148()
{
  return _s15PlaylistSectionV12PlaylistCellV9ViewModelCMa(0);
}

uint64_t _s15PlaylistSectionV12PlaylistCellV9ViewModelCMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011CB560, (uint64_t)&_s15PlaylistSectionV12PlaylistCellV9ViewModelCMn);
}

void sub_10082F164(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100ED21A8;
  sub_1000E3A44(319, (unint64_t *)&unk_1011CB570, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

uint64_t sub_10082F1F4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

Swift::Int sub_10082F204()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  String.hash(into:)(v3, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  return Hasher._finalize()();
}

uint64_t sub_10082F248(uint64_t a1)
{
  uint64_t v1;

  return String.hash(into:)(a1, *(_QWORD *)(*(_QWORD *)v1 + 16), *(_QWORD *)(*(_QWORD *)v1 + 24));
}

Swift::Int sub_10082F254(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  String.hash(into:)(v3, *(_QWORD *)(*(_QWORD *)v1 + 16), *(_QWORD *)(*(_QWORD *)v1 + 24));
  return Hasher._finalize()();
}

uint64_t sub_10082F294@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = _s15PlaylistSectionV12PlaylistCellV9ViewModelCMa(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_10082F2D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  v4 = *(_QWORD *)(*a1 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  if (v4 == v6 && v5 == v7)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0);
}

uint64_t sub_10082F2FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  unint64_t v37;
  int *v38;
  void (*v39)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  unint64_t v90;
  uint64_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t result;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  unint64_t *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  _QWORD v134[4];
  uint64_t v135;
  void *v136;
  void *v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  _QWORD v169[4];
  _QWORD v170[4];
  _BYTE v171[32];
  uint64_t v172;
  _QWORD v173[5];
  _QWORD v174[5];
  __int128 v175;
  __int128 v176;
  __int128 v177;
  uint64_t v178;
  __int128 v179;
  _QWORD v180[5];
  _QWORD v181[5];
  uint64_t v182;
  unint64_t v183;

  v2 = v1;
  v164 = a1;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v162 = *(_QWORD *)(v3 - 8);
  v163 = v3;
  __chkstk_darwin(v3);
  v161 = (char *)&v135 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_100007E8C(&qword_1011CBBB0);
  __chkstk_darwin(v159);
  v160 = (char *)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = _s15PlaylistSectionV12PlaylistCellVMa(0);
  __chkstk_darwin(v166);
  v143 = (uint64_t)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v7);
  v168 = (char *)&v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v9);
  v140 = (uint64_t *)((char *)&v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v167 = type metadata accessor for Playlist(0);
  v145 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v139 = (uint64_t *)((char *)&v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v135 - v13);
  v15 = sub_100007E8C(&qword_1011CBBB8);
  v146 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v135 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011CBBC0);
  v148 = *(_QWORD *)(v18 - 8);
  v149 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v135 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011CBBC8);
  v151 = *(_QWORD *)(v21 - 8);
  v152 = v21;
  __chkstk_darwin(v21);
  v150 = (uint64_t)&v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100007E8C(&qword_1011CBBD0);
  v155 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v154 = (char *)&v135 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_100007E8C(&qword_1011CBBD8);
  __chkstk_darwin(v156);
  v158 = (char *)&v135 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011CBBE0);
  __chkstk_darwin(v25);
  v153 = (char *)&v135 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170[2] = v2;
  v169[2] = v2;
  v27 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v28 = sub_100044B54((uint64_t *)&unk_1011C9250);
  v29 = sub_100044B54((uint64_t *)&unk_1011C4FE0);
  v30 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v31 = sub_1000E4264();
  v182 = v30;
  v183 = v31;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v182 = v29;
  v183 = OpaqueTypeConformance2;
  v33 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v182 = v28;
  v183 = v33;
  v34 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
  Label.init(title:icon:)(sub_100838EA4, v170, sub_100838EAC, v169, &type metadata for Text, v27, &protocol witness table for Text, v34, v35);
  v36 = sub_100049F28(&qword_1011CBBE8, &qword_1011CBBB8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v37 = sub_100838CC0();
  v147 = v20;
  v38 = (int *)v166;
  v141 = v37;
  v142 = v36;
  View.labelStyle<A>(_:)(v37, v15, &type metadata for MusicSidebarStyle, v36, v37);
  v39 = *(void (**)(char *, uint64_t))(v146 + 8);
  v146 = v15;
  v39(v17, v15);
  KeyPath = swift_getKeyPath(&unk_100ED2530);
  v41 = swift_getKeyPath(&unk_100ED2558);
  swift_retain();
  v144 = v14;
  static Published.subscript.getter(v14, v42, KeyPath, v41);
  swift_release();
  swift_release();
  swift_release();
  sub_10004A07C(0, (unint64_t *)&qword_1011A99D0, MPCPlaybackIntent_ptr);
  v43 = swift_getKeyPath(&unk_100ED2530);
  v44 = swift_getKeyPath(&unk_100ED2558);
  swift_retain();
  v45 = v139;
  static Published.subscript.getter(v139, v46, v43, v44);
  swift_release();
  swift_release();
  swift_release();
  v47 = (void *)MPCPlaybackIntent.init<A>(_:)(v45, v167, &protocol witness table for Playlist);
  v48 = *(void **)(v2 + 16);
  LOBYTE(v45) = *(_BYTE *)(v2 + 24);
  sub_1000A4100(v48, (char)v45);
  v49 = sub_100824044(v48, (char)v45);
  sub_1000A4224(v48, (char)v45);
  v50 = v140;
  sub_10082460C((uint64_t)v140);
  v51 = *v50;
  swift_retain();
  sub_10005B748((uint64_t)v50, type metadata accessor for Library.Context);
  v52 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v168, 1, 1, v52);
  v53 = (uint64_t *)(v2 + v38[7]);
  v54 = *v53;
  if (*v53)
  {
    v135 = v51;
    v136 = v49;
    v137 = v47;
    v181[3] = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v181[4] = &protocol witness table for <A> PresentedViewState<A>;
    v181[0] = v54;
    v55 = (uint64_t *)(v2 + v38[8]);
    v56 = *v55;
    if (*v55)
    {
      v180[3] = type metadata accessor for NoticePresenter(0);
      v180[4] = &protocol witness table for NoticePresenter;
      v180[0] = v56;
      v178 = 0;
      v176 = 0u;
      v177 = 0u;
      v175 = 0u;
      v179 = xmmword_100EA93A0;
      v57 = v2 + v38[9];
      v58 = *(_QWORD *)v57;
      v59 = *(_QWORD *)(v57 + 8);
      v60 = *(unsigned __int8 *)(v57 + 16);
      swift_retain();
      swift_retain();
      v61 = (_QWORD *)sub_100007E8C(&qword_1011A03A8);
      v62 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v63 = StateObject.wrappedValue.getter(v58, v59, v60, v61, v62);
      v174[3] = v61;
      v174[4] = &protocol witness table for <A> PresentedViewState<A>;
      v174[0] = v63;
      v64 = (uint64_t *)(v2 + v38[10]);
      v65 = *v64;
      if (*v64)
      {
        v66 = type metadata accessor for NavigationPusher();
        v173[3] = v66;
        v173[4] = &off_1010D58B0;
        v173[0] = v65;
        v172 = 0;
        memset(v171, 0, sizeof(v171));
        v67 = (_QWORD *)(v2 + v38[11]);
        if (*v67)
        {
          v138 = v62;
          v139 = v61;
          v140 = (uint64_t *)v57;
          v68 = (_QWORD *)(v2 + v38[12]);
          if (*v68)
          {
            __chkstk_darwin(v66);
            v69 = sub_1000502A4();
            v70 = swift_getKeyPath(&unk_100ED26E0);
            __chkstk_darwin(v70);
            v134[2] = &type metadata for TabIdentifier;
            v134[3] = v69;
            v71 = swift_getKeyPath(&unk_100ED2718);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(&v182, v72, v70, v71);
            swift_release();
            swift_release();
            swift_release();
            v73 = v182;
            v74 = v166;
            v75 = v2 + *(int *)(v166 + 52);
            v76 = *(_QWORD *)v75;
            v77 = *(_QWORD *)(v75 + 8);
            LOBYTE(v71) = *(_BYTE *)(v75 + 16);
            sub_1000A410C(*(_QWORD *)v75, v77, v71);
            sub_100824224(v76, v77, v71);
            sub_1000A4230(v76, v77, v71);
            sub_10066D160(v73);
            v79 = v78;
            v81 = v80;
            swift_release();
            swift_bridgeObjectRelease();
            v82 = v2 + *(int *)(v74 + 56);
            v83 = *(_QWORD *)v82;
            v84 = *(_QWORD *)(v82 + 8);
            LOBYTE(v76) = *(_BYTE *)(v82 + 16);
            sub_1000A411C(*(_QWORD *)v82, v84, v76);
            sub_100824400(v83, v84, v76, &v182);
            sub_1000A4240(v83, v84, v76);
            v85 = v2;
            v87 = v182;
            v86 = v183;
            v88 = v143;
            sub_10005B704(v85, v143, _s15PlaylistSectionV12PlaylistCellVMa);
            v165 = v85;
            if (v86 >> 60 != 15)
            {
LABEL_9:
              sub_10005B748(v88, _s15PlaylistSectionV12PlaylistCellVMa);
              v91 = v167;
              *((_QWORD *)&v133 + 1) = v81;
              *((_QWORD *)&v132 + 1) = v171;
              *(_QWORD *)&v133 = v79;
              *(_QWORD *)&v132 = v173;
              v93 = v136;
              v92 = v137;
              v94 = (uint64_t)v168;
              v95 = v144;
              MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v137, v136, v135, (uint64_t)v181, (uint64_t)v180, (uint64_t)&v175, (unint64_t)v174, (uint64_t)&v182, v132, v133, v87, v86, v167, (uint64_t)&protocol witness table for Playlist);
              sub_1000822B4(v87, v86);

              swift_release();
              swift_bridgeObjectRelease();
              sub_10004FF60((uint64_t)v171, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v175, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v94, (uint64_t *)&unk_1011A20C0);
              (*(void (**)(_QWORD *, uint64_t))(v145 + 8))(v95, v91);
              sub_10004FF60((uint64_t)v173, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v174);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v180);
              v96 = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v181);
              __chkstk_darwin(v96);
              v97 = (_QWORD *)type metadata accessor for ContextualPreview(0);
              *(_QWORD *)&v175 = v146;
              *((_QWORD *)&v175 + 1) = &type metadata for MusicSidebarStyle;
              *(_QWORD *)&v176 = v142;
              *((_QWORD *)&v176 + 1) = v141;
              v98 = swift_getOpaqueTypeConformance2(&v175, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
              v99 = sub_1000E3EE4();
              v100 = (_QWORD *)sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
              v101 = v149;
              v102 = v150;
              v103 = v147;
              View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)&v182, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100838EF8, (uint64_t)v134, (uint64_t)UIScreen.Dimensions.size.getter, 0, v150, v149, (uint64_t)&type metadata for ActionType, v97, v98, v99, v100);
              sub_1000E411C((uint64_t)&v182);
              (*(void (**)(char *, uint64_t))(v148 + 8))(v103, v101);
              v104 = StateObject.wrappedValue.getter(*v140, v140[1], *((unsigned __int8 *)v140 + 16), v139, v138);
              *(_QWORD *)&v175 = v101;
              *((_QWORD *)&v175 + 1) = &type metadata for ActionType;
              *(_QWORD *)&v176 = v97;
              *((_QWORD *)&v176 + 1) = v98;
              *(_QWORD *)&v177 = v99;
              *((_QWORD *)&v177 + 1) = v100;
              v105 = swift_getOpaqueTypeConformance2(&v175, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
              v106 = v154;
              v107 = v152;
              View.shareSheetPresenting(_:)(v104, v152, v105);
              v108 = swift_release();
              (*(void (**)(uint64_t, uint64_t, __n128))(v151 + 8))(v102, v107, v108);
              v109 = *(_QWORD *)(v165 + 8);
              v110 = v155;
              v111 = (uint64_t)v160;
              v112 = v157;
              (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v160, v106, v157);
              v113 = (uint64_t)v158;
              *(_QWORD *)(v111 + *(int *)(v159 + 36)) = v109 | 0x8000000000000000;
              sub_10004A160(v111, v113, &qword_1011CBBB0);
              v114 = v156;
              *(_QWORD *)(v113 + *(int *)(v156 + 36)) = v109 | 0x8000000000000000;
              swift_retain_n(v109, 2);
              sub_10004FF60(v111, &qword_1011CBBB0);
              v115 = (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v106, v112);
              v116 = v161;
              static AccessibilityTraits.isButton.getter(v115);
              v117 = sub_100838F00();
              v118 = (uint64_t)v153;
              View.accessibility(addTraits:)(v116, v114, v117);
              (*(void (**)(char *, uint64_t))(v162 + 8))(v116, v163);
              sub_10004FF60(v113, &qword_1011CBBD8);
              return sub_100065228(v118, v164, &qword_1011CBBE0);
            }
            v89 = (_QWORD *)(v88 + *(int *)(v74 + 44));
            if (*v89)
            {
              swift_retain();
              v87 = sub_10066D7A8();
              v86 = v90;
              swift_release();
              goto LABEL_9;
            }
            goto LABEL_16;
          }
          v125 = v68[1];
          v126 = type metadata accessor for TabSelectionManager(0);
          v127 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
          swift_retain();
LABEL_15:
          swift_retain();
          EnvironmentObject.error()(0, v125, v126, v127);
          __break(1u);
LABEL_16:
          v120 = v89[1];
          goto LABEL_17;
        }
      }
      else
      {
        v128 = v64[1];
        v129 = type metadata accessor for NavigationPusher();
        v130 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
        EnvironmentObject.error()(0, v128, v129, v130);
        __break(1u);
      }
      v120 = v67[1];
      swift_retain();
LABEL_17:
      v121 = (uint64_t *)&unk_10119CBE0;
      v122 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
      v123 = &qword_1011C5B90;
      v124 = &unk_100EC0A50;
      goto LABEL_18;
    }
    v125 = v55[1];
    v126 = type metadata accessor for NoticePresenter(0);
    v127 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    goto LABEL_15;
  }
  v120 = v53[1];
  v121 = (uint64_t *)&unk_1011B4E40;
  v122 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v123 = (unint64_t *)&unk_10119CC10;
  v124 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_18:
  v131 = sub_100049F28(v123, v121, (uint64_t)v124);
  result = EnvironmentObject.error()(0, v120, v122, v131);
  __break(1u);
  return result;
}

uint64_t sub_1008300E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[2];

  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100ED2530);
  v7 = swift_getKeyPath(&unk_100ED2558);
  swift_retain();
  static Published.subscript.getter(v5, v8, KeyPath, v7);
  swift_release();
  swift_release();
  v9 = swift_release();
  v10 = Playlist.name.getter(v9);
  v12 = v11;
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  v18[0] = v10;
  v18[1] = v12;
  v13 = sub_100055B68();
  result = Text.init<A>(_:)(v18, &type metadata for String, v13);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v15;
  *(_BYTE *)(a1 + 16) = v16 & 1;
  *(_QWORD *)(a1 + 24) = v17;
  return result;
}

uint64_t sub_100830200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t OpaqueTypeConformance2;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67[7];

  v64 = a1;
  v1 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v60 = *(_QWORD *)(v1 - 8);
  v61 = v1;
  __chkstk_darwin(v1);
  v58 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v6);
  v54 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v54 - v13);
  v57 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v59 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (uint64_t)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v17 = *(_QWORD *)(v16 - 8);
  v62 = v16;
  v63 = v17;
  __chkstk_darwin(v16);
  v56 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100ED2530);
  v20 = swift_getKeyPath(&unk_100ED2558);
  swift_retain();
  static Published.subscript.getter(v14, v21, KeyPath, v20);
  swift_release();
  swift_release();
  swift_release();
  v22 = v54;
  Playlist.artworkViewModel.getter(v54);
  v23 = *(void (**)(_QWORD *, uint64_t))(v9 + 8);
  v23(v14, v8);
  v24 = swift_getKeyPath(&unk_100ED2530);
  v25 = swift_getKeyPath(&unk_100ED2558);
  swift_retain();
  static Published.subscript.getter(v11, v26, v24, v25);
  swift_release();
  swift_release();
  swift_release();
  Playlist.variant.getter(v27);
  v23(v11, v8);
  v28 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v5, 0, 10, v28);
  _s15PlaylistSectionV12PlaylistCellVMa(0);
  v29 = sub_100007E8C(qword_1011C9550);
  ScaledMetric.wrappedValue.getter(v67, v29);
  ArtworkImage.Size.init(width:aspectRatio:fittingAspectRatio:)(v67[0], 0, 0.0, 1, (uint64_t)v67, 1.0);
  v31 = v60;
  v30 = v61;
  v32 = (uint64_t)v58;
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v58, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v61);
  v33 = v55;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v22, (uint64_t)v5, (uint64_t)v67, v32, v55);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v30);
  sub_10005B748((uint64_t)v5, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60(v22, (uint64_t *)&unk_1011A3E10);
  v34 = Corner.small.unsafeMutableAddressor();
  v35 = *v34;
  v36 = v34[1];
  LOBYTE(v24) = *((_BYTE *)v34 + 16);
  v37 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v38 = sub_1000E4264();
  v65 = v37;
  v66 = v38;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v65, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v40 = v56;
  v41 = v36;
  v42 = v57;
  View.corner(_:)(v35, v41, v24, v57, OpaqueTypeConformance2);
  v43 = v42;
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v33, v42);
  v44 = Border.artwork.unsafeMutableAddressor();
  v45 = *v44;
  v46 = *((double *)v44 + 1);
  v47 = *v34;
  v48 = v34[1];
  LOBYTE(v34) = *((_BYTE *)v34 + 16);
  LOBYTE(v33) = *((_BYTE *)v44 + 16);
  swift_retain();
  v65 = v43;
  v66 = OpaqueTypeConformance2;
  v49 = swift_getOpaqueTypeConformance2(&v65, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v50 = (char)v34;
  v51 = v62;
  View.border(_:corner:)(v45, v33, v47, v48, v50, v62, v49, v46);
  v52 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v63 + 8))(v40, v51, v52);
}

uint64_t sub_100830690@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  unsigned __int8 v16;
  __n128 v17;
  __n128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;

  v2 = (int *)type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100ED2530);
  v10 = swift_getKeyPath(&unk_100ED2558);
  swift_retain();
  static Published.subscript.getter(v8, v11, KeyPath, v10);
  swift_release();
  swift_release();
  swift_release();
  Playlist.artworkViewModel.getter((uint64_t)v4);
  v12 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v13 = &v4[v12[5]];
  Playlist.variant.getter(v12);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 10, v14);
  v15 = Corner.large.unsafeMutableAddressor();
  v16 = *((_BYTE *)v15 + 16);
  v17 = *(__n128 *)v15;
  *(_QWORD *)&v4[v12[6]] = 0x3FF0000000000000;
  v18 = (__n128 *)&v4[v12[7]];
  *v18 = v17;
  v18[1].n128_u8[0] = v16;
  v19 = Playlist.name.getter(v17);
  v21 = v20;
  v22 = Playlist.curatorName.getter(v19);
  v23 = (uint64_t *)&v4[v2[5]];
  *v23 = v19;
  v23[1] = v21;
  v24 = (uint64_t *)&v4[v2[6]];
  *v24 = v22;
  v24[1] = v25;
  v26 = &v4[v2[7]];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v4[v2[8]] = 1;
  v4[v2[9]] = 0;
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  return sub_10005B6C0((uint64_t)v4, a1, type metadata accessor for ContextualPreview.Data);
}

uint64_t sub_100830884(uint64_t a1)
{
  if (a1 < 0)
    return 0xD000000000000025;
  else
    return ((uint64_t (*)(unint64_t, unint64_t))((char *)&loc_1008308D0
                                                                       + 4 * byte_100ED216D[a1]))(0xD000000000000029, 0x8000000100E2AED0);
}

uint64_t sub_1008308E0()
{
  uint64_t v0;

  return v0 - 2;
}

Swift::Int sub_10083099C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  if (a1 < 0)
  {
    Hasher._combine(_:)(1uLL);
    v4 = *(_QWORD *)(a1 + 16);
    v5 = *(_QWORD *)(a1 + 24);
    swift_retain();
    String.hash(into:)(v7, v4, v5);
    sub_1001A7ABC(a1);
  }
  else
  {
    Hasher._combine(_:)(0);
    v2 = Library.Menu.Identifier.rawValue.getter(a1);
    String.hash(into:)(v7, v2, v3);
    swift_bridgeObjectRelease();
  }
  return Hasher._finalize()();
}

Swift::Int sub_100830A4C()
{
  uint64_t *v0;

  return sub_10083099C(*v0);
}

void sub_100830A54(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  if (*v1 < 0)
  {
    Hasher._combine(_:)(1uLL);
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(_QWORD *)(v3 + 24);
    swift_retain();
    String.hash(into:)(a1, v6, v7);
    sub_1001A7ABC(v3);
  }
  else
  {
    Hasher._combine(_:)(0);
    v4 = Library.Menu.Identifier.rawValue.getter(v3);
    String.hash(into:)(a1, v4, v5);
    swift_bridgeObjectRelease();
  }
}

Swift::Int sub_100830AFC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  if (v2 < 0)
  {
    Hasher._combine(_:)(1uLL);
    v5 = *(_QWORD *)(v2 + 16);
    v6 = *(_QWORD *)(v2 + 24);
    swift_retain();
    String.hash(into:)(v8, v5, v6);
    sub_1001A7ABC(v2);
  }
  else
  {
    Hasher._combine(_:)(0);
    v3 = Library.Menu.Identifier.rawValue.getter(v2);
    String.hash(into:)(v8, v3, v4);
    swift_bridgeObjectRelease();
  }
  return Hasher._finalize()();
}

uint64_t sub_100830BA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100825B14(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100830BD0(uint64_t *a1, uint64_t *a2)
{
  return sub_100837E6C(*a1, *a2);
}

uint64_t sub_100830BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[4];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011CBC40);
  v3 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  v65 = v3;
  __chkstk_darwin(v2);
  v63 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CBC28);
  v61 = *(_QWORD *)(v5 - 8);
  v62 = v5;
  v6 = __chkstk_darwin(v5);
  v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EditMode(0, v6);
  v58 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v59 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v57 = (char *)&v52 - v11;
  v12 = sub_100007E8C(&qword_1011CBC20);
  v55 = *(_QWORD *)(v12 - 8);
  v56 = v12;
  __chkstk_darwin(v12);
  v54 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011CBC18);
  v52 = *(_QWORD *)(v14 - 8);
  v53 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011CBC10);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011CBC08);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 16) = 0;
  static Library.Menu.Request.with(_:)((uint64_t (*)(id *))sub_1008311CC, (uint64_t)v66);
  v25 = sub_100007E8C(&qword_1011BC798);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  *(_QWORD *)(v0 + 24) = RequestResponse.Controller.init(request:)((uint64_t)v66, v26, v27, v28);
  v29 = v0 + OBJC_IVAR____TtC5Music14MenuDataSource__libraryMenu;
  memset(v66, 0, 48);
  v30 = sub_100007E8C(&qword_1011BC7C0);
  Published.init(initialValue:)(v66, v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v31 = v1 + OBJC_IVAR____TtC5Music14MenuDataSource__displayedLibraryItems;
  *(_QWORD *)&v66[0] = _swiftEmptyArrayStorage;
  v32 = sub_100007E8C(&qword_1011CB6B0);
  Published.init(initialValue:)(v66, v32);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v31, v20, v17);
  v33 = v1 + OBJC_IVAR____TtC5Music14MenuDataSource__selectedItem;
  *(_QWORD *)&v66[0] = 0xF000000000000000;
  v34 = sub_100007E8C(&qword_1011C2B10);
  Published.init(initialValue:)(v66, v34);
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v33, v16, v53);
  v35 = v1 + OBJC_IVAR____TtC5Music14MenuDataSource__userSelectedLibraryItems;
  *(_QWORD *)&v66[0] = &_swiftEmptySetSingleton;
  v36 = sub_100007E8C(&qword_1011CB6C8);
  v37 = v54;
  Published.init(initialValue:)(v66, v36);
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v35, v37, v56);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music14MenuDataSource_downloadedOnly) = 0;
  v38 = OBJC_IVAR____TtC5Music14MenuDataSource__persistedSelectionItem;
  *(_QWORD *)(v1 + v38) = AppStorage<A>.init<>(_:store:)(0xD000000000000022, 0x8000000100E46560, 0);
  v39 = v1 + OBJC_IVAR____TtC5Music14MenuDataSource__editMode;
  v41 = v57;
  v40 = v58;
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v57, enum case for EditMode.inactive(_:), v8);
  v42 = v40;
  v43 = v59;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v59, v41, v8);
  v44 = v60;
  Published.init(initialValue:)(v43, v8);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v39, v44, v62);
  swift_retain();
  v45 = v63;
  RequestResponse.Controller.$revision.getter();
  swift_release();
  v46 = swift_allocObject(&unk_1010DE208, 24, 7);
  swift_weakInit(v46 + 16, v1);
  v47 = sub_100049F28(&qword_1011CBC48, &qword_1011CBC40, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v48 = v64;
  v49 = Publisher<>.sink(receiveValue:)(sub_100839208, v46, v64, v47);
  v50 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v65 + 8))(v45, v48, v50);
  *(_QWORD *)(v1 + 16) = v49;
  swift_release();
  return v1;
}

double sub_1008310BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  _QWORD v14[6];
  _QWORD v15[6];
  _BYTE v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    RequestResponse.Revision.content.getter((uint64_t)v15);
    v6 = v15[0];
    v7 = (void *)v15[1];
    v8 = v15[2];
    v9 = v15[3];
    v10 = v15[4];
    v11 = v15[5];
    KeyPath = swift_getKeyPath(&unk_100ED2780);
    v13 = swift_getKeyPath(&unk_100ED27A8);
    v14[0] = v6;
    v14[1] = v7;
    v14[2] = v8;
    v14[3] = v9;
    v14[4] = v10;
    v14[5] = v11;
    swift_retain();
    sub_1005CB9F0(v6, v7, v8, v9, v10, v11);
    static Published.subscript.setter(v14, v5, KeyPath, v13);
    sub_100831208();
    sub_1005CB898(v6, v7, v8, v9, v10, v11);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_1008311CC(uint64_t a1)
{
  void *v2;

  v2 = sub_1000491D8((uint64_t)&off_1010AD7E8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 42) = 0;
}

double sub_100831208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double result;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100ED2780);
  v3 = swift_getKeyPath(&unk_100ED27A8);
  static Published.subscript.getter(&v23, v1, KeyPath, v3);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  v5 = v23;
  if (v23)
  {
    v6 = v24;
    v7 = v25;
    v8 = v26;
    v9 = v27;
    v10 = v28;
    v11 = v23[2];
    v12 = _swiftEmptyArrayStorage;
    if (v11)
    {
      v19 = v27;
      v20 = v26;
      v21 = v25;
      v22 = v24;
      v23 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10035CC44(0, v11, 0);
      v13 = 0;
      v12 = v23;
      v14 = v23[2];
      do
      {
        v15 = *((unsigned __int8 *)v5 + v13 + 32);
        v23 = v12;
        v16 = v12[3];
        if (v14 >= v16 >> 1)
        {
          sub_10035CC44(v16 > 1, v14 + 1, 1);
          v12 = v23;
        }
        ++v13;
        v12[2] = v14 + 1;
        v12[v14++ + 4] = v15;
      }
      while (v11 != v13);
      swift_bridgeObjectRelease(v5);
      v7 = v21;
      v6 = v22;
      v9 = v19;
      v8 = v20;
    }
    v17 = swift_getKeyPath(&unk_100ED2810);
    v18 = swift_getKeyPath(&unk_100ED2838);
    v23 = v12;
    swift_retain();
    static Published.subscript.setter(&v23, v1, v17, v18);
    sub_100831448();
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v7);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  return result;
}

double sub_1008313C8@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  __int128 v6;
  __int128 v7;
  _OWORD v8[3];

  KeyPath = swift_getKeyPath(&unk_100ED2780);
  v4 = swift_getKeyPath(&unk_100ED27A8);
  static Published.subscript.getter(v8, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  result = *(double *)v8;
  v6 = v8[1];
  v7 = v8[2];
  *a1 = v8[0];
  a1[1] = v6;
  a1[2] = v7;
  return result;
}

void sub_100831448()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String string;

  KeyPath = swift_getKeyPath(&unk_100ED25F0);
  v2 = swift_getKeyPath(&unk_100ED2618);
  static Published.subscript.getter(&string, v0, KeyPath, v2);
  swift_release();
  swift_release();
  countAndFlagsBits = string._countAndFlagsBits;
  if ((unint64_t)string._countAndFlagsBits >> 60 == 15)
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music14MenuDataSource__persistedSelectionItem);
    swift_retain();
    v5 = sub_100007E8C(&qword_10119DCA0);
    AppStorage.wrappedValue.getter(&string, v4, v5);
    swift_release();
    v6._object = string._object;
    if (string._object)
    {
      v6._countAndFlagsBits = string._countAndFlagsBits;
      v7 = sub_100838A84(v6);
      if (v7 != 13)
      {
        v11 = v7;
        goto LABEL_17;
      }
    }
    v8 = swift_getKeyPath(&unk_100ED2810);
    v9 = swift_getKeyPath(&unk_100ED2838);
    static Published.subscript.getter(&string, v0, v8, v9);
    swift_release();
    swift_release();
    v10 = string._countAndFlagsBits;
    if (!*(_QWORD *)(string._countAndFlagsBits + 16))
    {
      swift_bridgeObjectRelease(string._countAndFlagsBits);
      v11 = 0xF000000000000000;
      goto LABEL_17;
    }
    goto LABEL_5;
  }
  if ((string._countAndFlagsBits & 0x8000000000000000) == 0)
  {
    v12 = Library.Menu.Identifier.rawValue.getter(string._countAndFlagsBits);
    v14 = v13;
    if (v12 == 0xD000000000000025 && v13 == 0x8000000100E2AF00)
    {
      swift_bridgeObjectRelease(0x8000000100E2AF00);
    }
    else
    {
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, 0xD000000000000025, 0x8000000100E2AF00, 0);
      swift_bridgeObjectRelease(v14);
      if ((v15 & 1) == 0)
      {
        v16 = swift_getKeyPath(&unk_100ED2810);
        v17 = swift_getKeyPath(&unk_100ED2838);
        static Published.subscript.getter(&string, v0, v16, v17);
        swift_release();
        swift_release();
        v18 = string._countAndFlagsBits;
        v19 = sub_100414DA4(countAndFlagsBits, string._countAndFlagsBits);
        swift_bridgeObjectRelease(v18);
        if ((v19 & 1) != 0)
          return;
        v20 = swift_getKeyPath(&unk_100ED2810);
        v21 = swift_getKeyPath(&unk_100ED2838);
        static Published.subscript.getter(&string, v0, v20, v21);
        swift_release();
        swift_release();
        v10 = string._countAndFlagsBits;
        if (!*(_QWORD *)(string._countAndFlagsBits + 16))
        {
          v11 = 0xF000000000000000;
          goto LABEL_6;
        }
LABEL_5:
        v11 = *(_QWORD *)(v10 + 32);
        sub_10004A06C(v11);
LABEL_6:
        swift_bridgeObjectRelease(v10);
LABEL_17:
        v22 = swift_getKeyPath(&unk_100ED25F0);
        v23 = swift_getKeyPath(&unk_100ED2618);
        static Published.subscript.getter(&string, v0, v22, v23);
        swift_release();
        swift_release();
        countAndFlagsBits = string._countAndFlagsBits;
        v24 = swift_getKeyPath(&unk_100ED25F0);
        v25 = swift_getKeyPath(&unk_100ED2618);
        string._countAndFlagsBits = v11;
        swift_retain();
        sub_10069D640(v11);
        static Published.subscript.setter(&string, v0, v24, v25);
        sub_100831784(countAndFlagsBits);
        sub_10069CD60(v11);
      }
    }
  }
  sub_10069CD60(countAndFlagsBits);
}

uint64_t sub_100831770()
{
  return sub_1004F5420((uint64_t)&unk_100ED2810, (uint64_t)&unk_100ED2838);
}

void sub_100831784(unint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  char v26;
  uint64_t v27[2];

  KeyPath = swift_getKeyPath(&unk_100ED25F0);
  v4 = swift_getKeyPath(&unk_100ED2618);
  static Published.subscript.getter(v27, v1, KeyPath, v4);
  swift_release();
  swift_release();
  v5 = v27[0];
  if (a1 >> 60 == 15)
  {
    if ((unint64_t)v27[0] >> 60 == 15)
      return;
    goto LABEL_3;
  }
  if ((unint64_t)v27[0] >> 60 == 15)
    goto LABEL_5;
  if ((a1 & 0x8000000000000000) != 0)
  {
    if (v27[0] < 0)
    {
      v20 = *(_QWORD *)(a1 + 16);
      v21 = *(_QWORD *)(a1 + 24);
      v22 = *(_QWORD *)(v27[0] + 16);
      v23 = *(_QWORD *)(v27[0] + 24);
      if (v20 == v22 && v21 == v23)
      {
        sub_10069CD60(v27[0]);
        return;
      }
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, v22, v23, 0);
      sub_10069CD60(v5);
      if ((v25 & 1) == 0)
        goto LABEL_5;
      return;
    }
LABEL_3:
    sub_10069CD60(v27[0]);
LABEL_5:
    v6 = swift_getKeyPath(&unk_100ED25F0);
    v7 = swift_getKeyPath(&unk_100ED2618);
    static Published.subscript.getter(v27, v1, v6, v7);
    swift_release();
    swift_release();
    v8 = v27[0];
    if ((unint64_t)v27[0] >> 60 == 15)
    {
      v9 = 0;
      v10 = 0;
    }
    else
    {
      v9 = sub_100830884(v27[0]);
      v10 = v11;
      sub_10069CD60(v8);
    }
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music14MenuDataSource__persistedSelectionItem);
    v27[0] = v9;
    v27[1] = v10;
    swift_retain();
    v13 = sub_100007E8C(&qword_10119DCA0);
    AppStorage.wrappedValue.setter(v27, v12, v13);
    swift_release();
    return;
  }
  if (v27[0] < 0)
    goto LABEL_3;
  v14 = Library.Menu.Identifier.rawValue.getter(a1);
  v16 = v15;
  v18 = Library.Menu.Identifier.rawValue.getter(v5);
  v19 = v17;
  if (v14 == v18 && v16 == v17)
  {
    sub_10004A06C(a1);
    swift_bridgeObjectRelease_n(v16, 2);
    sub_10069CD60(v5);
    sub_10069CD60(a1);
    return;
  }
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
  sub_10004A06C(a1);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v19);
  sub_10069CD60(v5);
  sub_10069CD60(a1);
  if ((v26 & 1) == 0)
    goto LABEL_5;
}

uint64_t sub_1008319CC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100ED25F0);
  v2 = swift_getKeyPath(&unk_100ED2618);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100831A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100ED25F0);
  v4 = swift_getKeyPath(&unk_100ED2618);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release();
  swift_release();
  v5 = v9;
  v6 = swift_getKeyPath(&unk_100ED25F0);
  v7 = swift_getKeyPath(&unk_100ED2618);
  v9 = a1;
  swift_retain();
  sub_10069D640(a1);
  static Published.subscript.setter(&v9, v1, v6, v7);
  sub_100831784(v5);
  sub_10069CD60(a1);
  return sub_10069CD60(v5);
}

uint64_t sub_100831B18()
{
  return sub_1004F5420((uint64_t)&unk_100ED27C8, (uint64_t)&unk_100ED27F0);
}

void *sub_100831B2C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t KeyPath;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t inited;
  _BYTE v19[40];
  unint64_t v20;

  v2 = v1;
  v3 = type metadata accessor for EditMode(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = swift_getKeyPath(&unk_100ED2738);
  v8 = swift_getKeyPath(&unk_100ED2760);
  static Published.subscript.getter(v6, v2, KeyPath, v8);
  swift_release();
  v9 = swift_release();
  LOBYTE(KeyPath) = EditMode.isEditing.getter(v9);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((KeyPath & 1) != 0)
  {
    v10 = swift_getKeyPath(&unk_100ED27C8);
    v11 = swift_getKeyPath(&unk_100ED27F0);
    static Published.subscript.getter(&v20, v2, v10, v11);
    swift_release();
    swift_release();
    return (void *)v20;
  }
  else
  {
    v13 = swift_getKeyPath(&unk_100ED25F0);
    v14 = swift_getKeyPath(&unk_100ED2618);
    static Published.subscript.getter(&v20, v2, v13, v14);
    swift_release();
    swift_release();
    v15 = v20;
    if (v20 >> 60 == 15)
    {
      return &_swiftEmptySetSingleton;
    }
    else
    {
      v16 = sub_100007E8C(&qword_1011AE0B8);
      inited = swift_initStackObject(v16, v19);
      *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(inited + 32) = v15;
      v12 = sub_1006A1BBC(inited);
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, 1, &type metadata for MenuDataSource.Item);
    }
  }
  return (void *)v12;
}

uint64_t sub_100831CF8(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t KeyPath;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v3 = v2;
  v5 = type metadata accessor for EditMode(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100ED2738);
  v10 = swift_getKeyPath(&unk_100ED2760);
  static Published.subscript.getter(v8, v3, KeyPath, v10);
  swift_release();
  v11 = swift_release();
  LOBYTE(KeyPath) = EditMode.isEditing.getter(v11);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((KeyPath & 1) != 0)
  {
    v12 = swift_getKeyPath(&unk_100ED27C8);
    v13 = swift_getKeyPath(&unk_100ED27F0);
    v22 = a1;
    swift_retain();
    return static Published.subscript.setter(&v22, v3, v12, v13);
  }
  else
  {
    v15 = sub_10031E6B0(a1);
    swift_bridgeObjectRelease();
    v16 = swift_getKeyPath(&unk_100ED25F0);
    v17 = swift_getKeyPath(&unk_100ED2618);
    static Published.subscript.getter(&v22, v3, v16, v17);
    swift_release();
    swift_release();
    v18 = v22;
    v19 = swift_getKeyPath(&unk_100ED25F0);
    v20 = swift_getKeyPath(&unk_100ED2618);
    v22 = v15;
    swift_retain();
    sub_10069D640(v15);
    static Published.subscript.setter(&v22, v3, v19, v20);
    sub_100831784(v18);
    sub_10069CD60(v15);
    return sub_10069CD60(v18);
  }
}

double sub_100831ED4(char a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  void *v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  unint64_t v12;
  id v13;
  double result;
  void *v15;
  char v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  _BYTE v23[24];

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Music14MenuDataSource_downloadedOnly);
  if (v2 != (a1 & 1))
  {
    v3 = *(_QWORD *)(v1 + 24);
    v4 = v3 + 16;
    if (v2)
    {
      swift_beginAccess(v4, v23, 0, 0);
      v5 = *(void **)(v3 + 16);
      v6 = *(_BYTE *)(v3 + 24);
      v7 = *(void **)(v3 + 40);
      v8 = *(_QWORD *)(v3 + 48);
      v9 = *(_BYTE *)(v3 + 56);
      v10 = *(_BYTE *)(v3 + 57);
      v11 = *(_BYTE *)(v3 + 58);
      v12 = *(_QWORD *)(v3 + 32) | 2;
    }
    else
    {
      swift_beginAccess(v4, v23, 0, 0);
      v5 = *(void **)(v3 + 16);
      v6 = *(_BYTE *)(v3 + 24);
      v7 = *(void **)(v3 + 40);
      v8 = *(_QWORD *)(v3 + 48);
      v9 = *(_BYTE *)(v3 + 56);
      v10 = *(_BYTE *)(v3 + 57);
      v11 = *(_BYTE *)(v3 + 58);
      v12 = *(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFFDLL;
    }
    v15 = v5;
    v16 = v6;
    v17 = v12;
    v18 = v7;
    v19 = v8;
    v20 = v9;
    v21 = v10;
    v22 = v11;
    swift_retain();
    sub_1002F558C(v5, v6);
    v13 = v7;
    swift_bridgeObjectRetain();
    RequestResponse.Controller.request.setter((uint64_t)&v15);
    swift_release();
    swift_retain();
    RequestResponse.Controller.setNeedsReload(_:)(0, 0);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100831FF0(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  id v22;
  void *v23;
  char v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  _QWORD v67[5];
  _QWORD v68[3];
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v3 = v2;
  v5 = type metadata accessor for EditMode(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100ED2738);
  v10 = swift_getKeyPath(&unk_100ED2760);
  static Published.subscript.getter(v8, v3, KeyPath, v10);
  swift_release();
  swift_release();
  v11 = sub_100048748(&qword_1011CBC00, (uint64_t (*)(uint64_t))&type metadata accessor for EditMode, (uint64_t)&protocol conformance descriptor for EditMode);
  LOBYTE(a1) = dispatch thunk of static Equatable.== infix(_:_:)(v8, a1, v5, v11);
  v12 = *(void (**)(_QWORD *, uint64_t))(v6 + 8);
  v12(v8, v5);
  if ((a1 & 1) == 0)
  {
    v13 = swift_getKeyPath(&unk_100ED2738);
    v14 = swift_getKeyPath(&unk_100ED2760);
    static Published.subscript.getter(v8, v3, v13, v14);
    swift_release();
    v15 = swift_release();
    LOBYTE(v13) = EditMode.isEditing.getter(v15);
    v12(v8, v5);
    if ((v13 & 1) != 0)
    {
      swift_retain();
      RequestResponse.Controller.isPaused.setter(1);
      swift_release();
      v16 = *(_QWORD *)(v3 + 24);
      swift_beginAccess(v16 + 16, v68, 0, 0);
      v17 = *(_BYTE *)(v16 + 24);
      v18 = *(_QWORD *)(v16 + 32);
      v19 = *(void **)(v16 + 40);
      v20 = *(_QWORD *)(v16 + 48);
      v21 = *(_BYTE *)(v16 + 58);
      *(_QWORD *)&v69 = *(_QWORD *)(v16 + 16);
      BYTE8(v69) = v17;
      *(_QWORD *)&v70 = v18;
      *((_QWORD *)&v70 + 1) = v19;
      *(_QWORD *)&v71 = v20;
      BYTE10(v71) = v21;
      WORD4(v71) = 0;
      sub_1002F558C((void *)v69, v17);
      v22 = v19;
      swift_bridgeObjectRetain();
      sub_10019636C((unsigned __int8 *)&v72, 0xCu);
      v23 = (void *)v69;
      v24 = BYTE8(v69);
      v25 = (void *)*((_QWORD *)&v70 + 1);
      *(_QWORD *)&v72 = v69;
      BYTE8(v72) = BYTE8(v69);
      v73 = v70;
      *(_QWORD *)&v74 = v71;
      WORD4(v74) = WORD4(v71);
      BYTE10(v74) = BYTE10(v71);
      v26 = swift_allocObject(&unk_1010DE208, 24, 7);
      swift_weakInit(v26 + 16, v3);
      sub_1002F558C(v23, v24);
      v27 = sub_1005CB944();
      v28 = v25;
      swift_bridgeObjectRetain();
      Request.performThenCompleteOnMain(_:_:)(0, (uint64_t)sub_1008391B8, v26, (uint64_t)&type metadata for Library.Menu.Request, v27);
      swift_release();
      v29 = (void *)*((_QWORD *)&v73 + 1);
      sub_1002F5684((void *)v72, SBYTE8(v72));
      swift_bridgeObjectRelease();

      sub_10004FF60((uint64_t)v67, (uint64_t *)&unk_1011CEEB0);
      sub_1002F5684(v23, v24);
      swift_bridgeObjectRelease();

    }
    else
    {
      v30 = swift_getKeyPath(&unk_100ED2780);
      v31 = swift_getKeyPath(&unk_100ED27A8);
      static Published.subscript.getter(&v69, v3, v30, v31);
      swift_release();
      swift_release();
      v32 = v69;
      if ((_QWORD)v69)
      {
        v33 = (void *)*((_QWORD *)&v69 + 1);
        v35 = *((_QWORD *)&v70 + 1);
        v34 = v70;
        v37 = *((_QWORD *)&v71 + 1);
        v36 = v71;
        v72 = v69;
        v73 = v70;
        v74 = v71;
        v38 = *(_QWORD *)(v69 + 16);
        v53 = v3;
        v52 = v38;
        if (v38)
        {
          v66 = v69 + 32;
          swift_bridgeObjectRetain();
          v39 = 0;
          v65 = "LibraryView.RecentlyAdded";
          v64 = "LibraryView.Playlists";
          v63 = "LibraryView.Artists";
          v62 = "LibraryView.Albums";
          v61 = "LibraryView.Songs";
          v60 = "LibraryView.MadeForYou";
          v59 = "LibraryView.MusicVideos";
          v58 = "LibraryView.Genres";
          v57 = "LibraryView.Compilations";
          v56 = "LibraryView.Composers";
          v55 = "LibraryView.Shows";
          v54 = "LibraryView.Downloaded";
          v40 = v52;
          v51 = v32;
          do
          {
            if (v39 >= *(_QWORD *)(v32 + 16))
            {
              __break(1u);
              JUMPOUT(0x100832A6CLL);
            }
            v41 = *(unsigned __int8 *)(v66 + v39);
            v42 = swift_getKeyPath(&unk_100ED27C8);
            v43 = swift_getKeyPath(&unk_100ED27F0);
            static Published.subscript.getter(&v69, v3, v42, v43);
            swift_release();
            swift_release();
            if (*(_QWORD *)(v69 + 16))
            {
              Hasher.init(_seed:)(&v69, *(_QWORD *)(v69 + 40));
              Hasher._combine(_:)(0);
              __asm { BR              X8 }
            }
            swift_bridgeObjectRelease();
            ++v39;
            Library.Menu.setSelectionState(_:for:)(1, v41);
          }
          while (v39 != v40);
          swift_bridgeObjectRelease();
          v33 = (void *)*((_QWORD *)&v72 + 1);
          v32 = v72;
          v35 = *((_QWORD *)&v73 + 1);
          v34 = v73;
          v37 = *((_QWORD *)&v74 + 1);
          v36 = v74;
        }
        v44 = swift_getKeyPath(&unk_100ED2780);
        v45 = swift_getKeyPath(&unk_100ED27A8);
        *(_QWORD *)&v69 = v32;
        *((_QWORD *)&v69 + 1) = v33;
        *(_QWORD *)&v70 = v34;
        *((_QWORD *)&v70 + 1) = v35;
        *(_QWORD *)&v71 = v36;
        *((_QWORD *)&v71 + 1) = v37;
        swift_bridgeObjectRetain_n(v32, 2);
        v46 = v33;
        swift_bridgeObjectRetain_n(v34, 2);
        swift_bridgeObjectRetain_n(v35, 2);
        swift_bridgeObjectRetain_n(v36, 2);
        swift_bridgeObjectRetain_n(v37, 2);
        v47 = v46;
        v48 = v53;
        swift_retain();
        static Published.subscript.setter(&v69, v48, v44, v45);
        sub_100831208();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v69 = v72;
        v70 = v73;
        v71 = v74;
        v49 = (void *)*((_QWORD *)&v72 + 1);
        v67[0] = v72;
        v68[0] = v73;
        v76 = v74;
        v77 = *((_QWORD *)&v73 + 1);
        v75 = *((_QWORD *)&v74 + 1);
        sub_100055D0C(v67);
        v50 = v49;
        sub_100055D0C(v68);
        sub_100055D0C(&v77);
        sub_100055D0C(&v76);
        sub_100055D0C(&v75);
        Library.Menu.persist()();
        sub_1001E3E14(v67);

        sub_1001E3E14(v68);
        sub_1001E3E14(&v77);
        sub_1001E3E14(&v76);
        sub_1001E3E14(&v75);
        swift_retain();
        RequestResponse.Controller.setNeedsReload(_:)(0, 0);
        swift_release();
        swift_retain();
        RequestResponse.Controller.isPaused.setter(0);
        swift_release();
        sub_1001E3E14(v67);

        sub_1001E3E14(v68);
        sub_1001E3E14(&v77);
        sub_1001E3E14(&v76);
        sub_1001E3E14(&v75);
      }
    }
  }
}

void sub_100832B08(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t Strong;
  uint64_t v23;
  __n128 v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  int64_t v38;
  _QWORD *v39;
  int64_t v40;
  int v41;
  int v42;
  char v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[6];
  char v62[24];

  v7 = type metadata accessor for EditMode(0, a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v54 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - v15;
  v17 = *(_QWORD *)a1;
  v18 = *(void **)(a1 + 8);
  v59 = *(_QWORD *)(a1 + 16);
  v60 = v17;
  v19 = *(_QWORD *)(a1 + 24);
  v20 = *(_QWORD *)(a1 + 40);
  v57 = *(_QWORD *)(a1 + 32);
  v58 = v19;
  a5 += 16;
  v21 = *(_BYTE *)(a1 + 48);
  swift_beginAccess(a5, v62, 0, 0);
  Strong = swift_weakLoadStrong(a5);
  if (Strong)
  {
    if ((v21 & 1) != 0)
    {
      v23 = Strong;
      swift_retain();
      RequestResponse.Controller.isPaused.setter(0);
      v24 = swift_release();
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v16, enum case for EditMode.inactive(_:), v7, v24);
      KeyPath = swift_getKeyPath(&unk_100ED2738);
      v26 = swift_getKeyPath(&unk_100ED2760);
      static Published.subscript.getter(v13, v23, KeyPath, v26);
      swift_release();
      swift_release();
      v27 = swift_getKeyPath(&unk_100ED2738);
      v28 = swift_getKeyPath(&unk_100ED2760);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v16, v7);
      swift_retain();
      static Published.subscript.setter(v10, v23, v27, v28);
      sub_100831FF0(v13);
      v29 = *(void (**)(char *, uint64_t))(v8 + 8);
      v29(v16, v7);
      v29(v13, v7);
      swift_release();
    }
    else
    {
      v30 = Strong;
      v31 = swift_getKeyPath(&unk_100ED2780);
      v32 = swift_getKeyPath(&unk_100ED27A8);
      v34 = v59;
      v33 = v60;
      v61[0] = v60;
      v61[1] = v18;
      v36 = v57;
      v35 = v58;
      v61[2] = v59;
      v61[3] = v58;
      v61[4] = v57;
      v61[5] = v20;
      swift_retain();
      sub_1005CB988(v33, v18, v34, v35, v36, v20, 0);
      swift_bridgeObjectRetain();
      v37 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      static Published.subscript.setter(v61, v30, v31, v32);
      v56 = v30;
      sub_100831208();
      v38 = *(_QWORD *)(v20 + 16);
      v39 = _swiftEmptyArrayStorage;
      if (v38)
      {
        v55 = v37;
        v61[0] = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_10035CC44(0, v38, 0);
        v39 = (_QWORD *)v61[0];
        v40 = sub_100837CE4(v20);
        v42 = v41;
        v44 = v43 & 1;
        while ((v40 & 0x8000000000000000) == 0 && v40 < 1 << *(_BYTE *)(v20 + 32))
        {
          if (((*(_QWORD *)(v20 + 56 + (((unint64_t)v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
            goto LABEL_17;
          if (*(_DWORD *)(v20 + 36) != v42)
            goto LABEL_18;
          v45 = *(unsigned __int8 *)(*(_QWORD *)(v20 + 48) + v40);
          v61[0] = v39;
          v47 = v39[2];
          v46 = v39[3];
          if (v47 >= v46 >> 1)
          {
            sub_10035CC44(v46 > 1, v47 + 1, 1);
            v39 = (_QWORD *)v61[0];
          }
          v39[2] = v47 + 1;
          v39[v47 + 4] = v45;
          v48 = sub_100837D88(v40, v42, v44 & 1, v20);
          v40 = v48;
          v42 = v49;
          v44 = v50 & 1;
          if (!--v38)
          {
            sub_10016AE14(v48, v49, v50 & 1);
            swift_bridgeObjectRelease();
            v37 = v55;
            goto LABEL_14;
          }
        }
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
      }
      else
      {
LABEL_14:
        v51 = sub_1006A1BBC((uint64_t)v39);
        swift_bridgeObjectRelease();
        v52 = swift_getKeyPath(&unk_100ED27C8);
        v53 = swift_getKeyPath(&unk_100ED27F0);
        v61[0] = v51;
        static Published.subscript.setter(v61, v56, v52, v53);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_100832F50@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001ED7F8((uint64_t)&unk_100ED2738, (uint64_t)&unk_100ED2760, a1);
}

uint64_t sub_100832F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC5Music14MenuDataSource__libraryMenu;
  v2 = sub_100007E8C(&qword_1011CBC08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Music14MenuDataSource__displayedLibraryItems;
  v4 = sub_100007E8C(&qword_1011CBC10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC5Music14MenuDataSource__selectedItem;
  v6 = sub_100007E8C(&qword_1011CBC18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtC5Music14MenuDataSource__userSelectedLibraryItems;
  v8 = sub_100007E8C(&qword_1011CBC20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  v9 = v0 + OBJC_IVAR____TtC5Music14MenuDataSource__editMode;
  v10 = sub_100007E8C(&qword_1011CBC28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100833088()
{
  return type metadata accessor for MenuDataSource(0);
}

uint64_t type metadata accessor for MenuDataSource(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011CB690, (uint64_t)&nominal type descriptor for MenuDataSource);
}

void sub_1008330A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[9];

  v12[0] = "\b";
  v12[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1000EA54C(319, &qword_1011CB6A0, &qword_1011BC7C0);
  if (v3 <= 0x3F)
  {
    v12[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000EA54C(319, &qword_1011CB6A8, &qword_1011CB6B0);
    if (v5 <= 0x3F)
    {
      v12[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000EA54C(319, &qword_1011CB6B8, &qword_1011C2B10);
      if (v7 <= 0x3F)
      {
        v12[4] = *(_QWORD *)(v6 - 8) + 64;
        sub_1000EA54C(319, &qword_1011CB6C0, &qword_1011CB6C8);
        if (v9 <= 0x3F)
        {
          v12[5] = *(_QWORD *)(v8 - 8) + 64;
          v12[6] = &unk_100ED21E8;
          v12[7] = (char *)&value witness table for Builtin.NativeObject + 64;
          sub_1000E3A44(319, (unint64_t *)&unk_1011CB6D0, (uint64_t (*)(uint64_t))&type metadata accessor for EditMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
          if (v11 <= 0x3F)
          {
            v12[8] = *(_QWORD *)(v10 - 8) + 64;
            swift_updateClassMetadata2(a1, 256, 9, v12, a1 + 80);
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for MenuDataSource.Item(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  sub_10004A06C(*a2);
  *a1 = v3;
  return a1;
}

uint64_t destroy for MenuDataSource.Item(uint64_t *a1)
{
  return sub_1001A7ABC(*a1);
}

uint64_t *assignWithCopy for MenuDataSource.Item(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  sub_10004A06C(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1001A7ABC(v4);
  return a1;
}

uint64_t *assignWithTake for MenuDataSource.Item(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1001A7ABC(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSBridge.ScriptingConstructorHolder(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 15);
  v3 = (((*(_QWORD *)a1 >> 60) >> 3) & 0xFFFFFFF1 | (2 * ((*(_QWORD *)a1 >> 60) & 7))) ^ 0xF;
  if (v3 >= 0xE)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JSBridge.ScriptingConstructorHolder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE)
  {
    *(_QWORD *)result = a2 - 15;
    if (a3 >= 0xF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0xF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = (unint64_t)(((-a2 >> 1) & 7) - 8 * a2) << 60;
  }
  return result;
}

uint64_t *sub_10083333C(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFFFLL | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for MenuDataSource.Item()
{
  return &type metadata for MenuDataSource.Item;
}

uint64_t *sub_100833360(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char *v67;
  char *v68;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    v19 = (uint64_t *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    *(uint64_t *)((char *)a1 + v6) = *(uint64_t *)((char *)a2 + v6);
    v9 = (int *)type metadata accessor for Library.Context(0);
    v10 = v9[5];
    v11 = &v7[v10];
    v12 = &v8[v10];
    v13 = type metadata accessor for Album(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48);
    swift_retain();
    v16 = swift_retain();
    if (v15(v12, 1, v13, v16))
    {
      v17 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v20 = v9[6];
    v21 = &v7[v20];
    v22 = &v8[v20];
    v23 = type metadata accessor for Artist(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v26 = v9[7];
    v27 = &v7[v26];
    v28 = &v8[v26];
    v29 = type metadata accessor for Composer(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v32 = v9[8];
    v33 = &v7[v32];
    v34 = &v8[v32];
    v35 = type metadata accessor for Genre(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_100007E8C(&qword_10119ED08);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v38 = v9[9];
    v39 = &v7[v38];
    v40 = &v8[v38];
    v41 = type metadata accessor for Playlist(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v44 = v9[10];
    v45 = &v7[v44];
    v46 = &v8[v44];
    v47 = type metadata accessor for TVShow(0);
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    v50 = v9[11];
    v51 = &v7[v50];
    v52 = &v8[v50];
    v53 = type metadata accessor for TVSeason(0);
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    v7[v9[12]] = v8[v9[12]];
    v7[v9[13]] = v8[v9[13]];
    v7[v9[14]] = v8[v9[14]];
    v56 = v9[15];
    v57 = &v7[v56];
    v58 = &v8[v56];
    v59 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *((_QWORD *)v57 + 1) = v59;
    *(_QWORD *)&v7[v9[16]] = *(_QWORD *)&v8[v9[16]];
    v7[v9[17]] = v8[v9[17]];
    v60 = a3[6];
    v19 = a1;
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    v63 = *(_QWORD *)v62;
    v64 = *((_QWORD *)v62 + 1);
    v65 = v62[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    KeyValueObservationTrigger.keyPath.getter(v63, v64);
    *(_QWORD *)v61 = v63;
    *((_QWORD *)v61 + 1) = v64;
    v61[16] = v65;
    v66 = a3[7];
    v67 = (char *)a1 + v66;
    v68 = (char *)a2 + v66;
    *v67 = *v68;
    *((_QWORD *)v67 + 1) = *((_QWORD *)v68 + 1);
  }
  swift_retain();
  return v19;
}

double sub_10083385C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  v5 = (int *)type metadata accessor for Library.Context(0);
  v6 = v4 + v5[5];
  v7 = type metadata accessor for Album(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v4 + v5[6];
  v10 = type metadata accessor for Artist(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v4 + v5[7];
  v13 = type metadata accessor for Composer(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  v15 = v4 + v5[8];
  v16 = type metadata accessor for Genre(0);
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  v18 = v4 + v5[9];
  v19 = type metadata accessor for Playlist(0);
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  v21 = v4 + v5[10];
  v22 = type metadata accessor for TVShow(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v24 = v4 + v5[11];
  v25 = type metadata accessor for TVSeason(0);
  v26 = *(_QWORD *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000A6174(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_100833AB4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char *v63;
  char *v64;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a3[5];
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v7 = (int *)type metadata accessor for Library.Context(0);
  v8 = v7[5];
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = type metadata accessor for Album(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
  swift_retain();
  v14 = swift_retain();
  if (v13(v10, 1, v11, v14))
  {
    v15 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v16 = v7[6];
  v17 = &v5[v16];
  v18 = &v6[v16];
  v19 = type metadata accessor for Artist(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = v7[7];
  v23 = &v5[v22];
  v24 = &v6[v22];
  v25 = type metadata accessor for Composer(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v28 = v7[8];
  v29 = &v5[v28];
  v30 = &v6[v28];
  v31 = type metadata accessor for Genre(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = sub_100007E8C(&qword_10119ED08);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v34 = v7[9];
  v35 = &v5[v34];
  v36 = &v6[v34];
  v37 = type metadata accessor for Playlist(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v40 = v7[10];
  v41 = &v5[v40];
  v42 = &v6[v40];
  v43 = type metadata accessor for TVShow(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v46 = v7[11];
  v47 = &v5[v46];
  v48 = &v6[v46];
  v49 = type metadata accessor for TVSeason(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  v5[v7[12]] = v6[v7[12]];
  v5[v7[13]] = v6[v7[13]];
  v5[v7[14]] = v6[v7[14]];
  v52 = v7[15];
  v53 = &v5[v52];
  v54 = &v6[v52];
  v55 = *((_QWORD *)v54 + 1);
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *((_QWORD *)v53 + 1) = v55;
  *(_QWORD *)&v5[v7[16]] = *(_QWORD *)&v6[v7[16]];
  v5[v7[17]] = v6[v7[17]];
  v56 = a3[6];
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = *(_QWORD *)v58;
  v60 = *((_QWORD *)v58 + 1);
  v61 = v58[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  KeyValueObservationTrigger.keyPath.getter(v59, v60);
  *(_QWORD *)v57 = v59;
  *((_QWORD *)v57 + 1) = v60;
  v57[16] = v61;
  v62 = a3[7];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  *v63 = *v64;
  *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
  swift_retain();
  return a1;
}

_QWORD *sub_100833F84(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(char *, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v88;
  _QWORD *v89;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v88 = a3;
  v89 = a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  v9 = (int *)type metadata accessor for Library.Context(0);
  v10 = v9[5];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = type metadata accessor for Album(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = v9[6];
  v20 = &v7[v19];
  v21 = &v8[v19];
  v22 = type metadata accessor for Artist(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
LABEL_12:
    v27 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
LABEL_13:
  v28 = v9[7];
  v29 = &v7[v28];
  v30 = &v8[v28];
  v31 = type metadata accessor for Composer(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
LABEL_18:
    v36 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v29, v30, v31);
LABEL_19:
  v37 = v9[8];
  v38 = &v7[v37];
  v39 = &v8[v37];
  v40 = type metadata accessor for Genre(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
LABEL_24:
    v45 = sub_100007E8C(&qword_10119ED08);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 24))(v38, v39, v40);
LABEL_25:
  v46 = v9[9];
  v47 = &v7[v46];
  v48 = &v8[v46];
  v49 = type metadata accessor for Playlist(0);
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
  v52 = v51(v47, 1, v49);
  v53 = v51(v48, 1, v49);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v49);
LABEL_30:
    v54 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v50 + 24))(v47, v48, v49);
LABEL_31:
  v55 = v9[10];
  v56 = &v7[v55];
  v57 = &v8[v55];
  v58 = type metadata accessor for TVShow(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 1, v58);
  v62 = v60(v57, 1, v58);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v58);
LABEL_36:
    v63 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v56, v57, v58);
LABEL_37:
  v64 = v9[11];
  v65 = &v7[v64];
  v66 = &v8[v64];
  v67 = type metadata accessor for TVSeason(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48);
  v70 = v69(v65, 1, v67);
  v71 = v69(v66, 1, v67);
  if (!v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 24))(v65, v66, v67);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v67);
    goto LABEL_42;
  }
  if (v71)
  {
LABEL_42:
    v72 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
LABEL_43:
  v7[v9[12]] = v8[v9[12]];
  v7[v9[13]] = v8[v9[13]];
  v7[v9[14]] = v8[v9[14]];
  v73 = v9[15];
  v74 = &v7[v73];
  v75 = &v8[v73];
  *(_QWORD *)v74 = *(_QWORD *)v75;
  *((_QWORD *)v74 + 1) = *((_QWORD *)v75 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v9[16]] = *(_QWORD *)&v8[v9[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[17]] = v8[v9[17]];
  v76 = *(int *)(v88 + 24);
  v77 = (char *)a1 + v76;
  v78 = (char *)v89 + v76;
  v79 = *(_QWORD *)v78;
  v80 = *((_QWORD *)v78 + 1);
  v81 = v78[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v78, v80);
  v82 = *(_QWORD *)v77;
  v83 = *((_QWORD *)v77 + 1);
  *(_QWORD *)v77 = v79;
  *((_QWORD *)v77 + 1) = v80;
  v77[16] = v81;
  sub_1000A6174(v82, v83);
  v84 = *(int *)(v88 + 28);
  v85 = (char *)a1 + v84;
  v86 = (char *)v89 + v84;
  *v85 = *v86;
  *((_QWORD *)v85 + 1) = *((_QWORD *)v86 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100834680(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for Library.Context(0);
  v10 = v9[5];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = type metadata accessor for Album(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = v9[6];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = type metadata accessor for Artist(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = v9[7];
  v23 = &v7[v22];
  v24 = &v8[v22];
  v25 = type metadata accessor for Composer(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v28 = v9[8];
  v29 = &v7[v28];
  v30 = &v8[v28];
  v31 = type metadata accessor for Genre(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = sub_100007E8C(&qword_10119ED08);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v34 = v9[9];
  v35 = &v7[v34];
  v36 = &v8[v34];
  v37 = type metadata accessor for Playlist(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v40 = v9[10];
  v41 = &v7[v40];
  v42 = &v8[v40];
  v43 = type metadata accessor for TVShow(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v46 = v9[11];
  v47 = &v7[v46];
  v48 = &v8[v46];
  v49 = type metadata accessor for TVSeason(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  v7[v9[12]] = v8[v9[12]];
  v7[v9[13]] = v8[v9[13]];
  v7[v9[14]] = v8[v9[14]];
  *(_OWORD *)&v7[v9[15]] = *(_OWORD *)&v8[v9[15]];
  *(_QWORD *)&v7[v9[16]] = *(_QWORD *)&v8[v9[16]];
  v7[v9[17]] = v8[v9[17]];
  v52 = a3[6];
  v53 = a3[7];
  v54 = (char *)a1 + v52;
  v55 = (char *)a2 + v52;
  *(_OWORD *)v54 = *(_OWORD *)v55;
  v54[16] = v55[16];
  *(_OWORD *)((char *)a1 + v53) = *(_OWORD *)((char *)a2 + v53);
  return a1;
}

_QWORD *sub_100834AF8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v89;
  _QWORD *v90;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v89 = a3;
  v90 = a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  swift_release();
  v10 = (int *)type metadata accessor for Library.Context(0);
  v11 = v10[5];
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = type metadata accessor for Album(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = v10[6];
  v21 = &v8[v20];
  v22 = &v9[v20];
  v23 = type metadata accessor for Artist(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
LABEL_12:
    v28 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
LABEL_13:
  v29 = v10[7];
  v30 = &v8[v29];
  v31 = &v9[v29];
  v32 = type metadata accessor for Composer(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
LABEL_18:
    v37 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v30, v31, v32);
LABEL_19:
  v38 = v10[8];
  v39 = &v8[v38];
  v40 = &v9[v38];
  v41 = type metadata accessor for Genre(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
LABEL_24:
    v46 = sub_100007E8C(&qword_10119ED08);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v39, v40, v41);
LABEL_25:
  v47 = v10[9];
  v48 = &v8[v47];
  v49 = &v9[v47];
  v50 = type metadata accessor for Playlist(0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52(v49, 1, v50);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
LABEL_30:
    v55 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
LABEL_31:
  v56 = v10[10];
  v57 = &v8[v56];
  v58 = &v9[v56];
  v59 = type metadata accessor for TVShow(0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  v62 = v61(v57, 1, v59);
  v63 = v61(v58, 1, v59);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v59);
LABEL_36:
    v64 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v60 + 40))(v57, v58, v59);
LABEL_37:
  v65 = v10[11];
  v66 = &v8[v65];
  v67 = &v9[v65];
  v68 = type metadata accessor for TVSeason(0);
  v69 = *(_QWORD *)(v68 - 8);
  v70 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
  v71 = v70(v66, 1, v68);
  v72 = v70(v67, 1, v68);
  if (!v71)
  {
    if (!v72)
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 40))(v66, v67, v68);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v66, v68);
    goto LABEL_42;
  }
  if (v72)
  {
LABEL_42:
    v73 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v66, v67, v68);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
LABEL_43:
  v8[v10[12]] = v9[v10[12]];
  v8[v10[13]] = v9[v10[13]];
  v8[v10[14]] = v9[v10[14]];
  v74 = v10[15];
  v75 = &v8[v74];
  v76 = &v9[v74];
  v78 = *(_QWORD *)v76;
  v77 = *((_QWORD *)v76 + 1);
  *(_QWORD *)v75 = v78;
  *((_QWORD *)v75 + 1) = v77;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[v10[16]] = *(_QWORD *)&v9[v10[16]];
  swift_bridgeObjectRelease();
  v8[v10[17]] = v9[v10[17]];
  v79 = *(int *)(v89 + 24);
  v80 = (char *)a1 + v79;
  v81 = (char *)v90 + v79;
  v82 = v81[16];
  v83 = *(_QWORD *)v80;
  v84 = *((_QWORD *)v80 + 1);
  *(_OWORD *)v80 = *(_OWORD *)v81;
  v80[16] = v82;
  sub_1000A6174(v83, v84);
  v85 = *(int *)(v89 + 28);
  v86 = (char *)a1 + v85;
  v87 = (char *)v90 + v85;
  *v86 = *v87;
  *((_QWORD *)v86 + 1) = *((_QWORD *)v87 + 1);
  swift_release();
  return a1;
}

uint64_t sub_1008351AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008351B8);
}

uint64_t sub_1008351B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Library.Context(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_100835234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100835240);
}

uint64_t sub_100835240(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Library.Context(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t _s15PlaylistSectionVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CB988, (uint64_t)&_s15PlaylistSectionVMn);
}

uint64_t sub_1008352C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100ED21A8;
  result = type metadata accessor for Library.Context(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100ED2218;
    v4[3] = &unk_100ED2230;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100835350(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v110;
  char *__dst;
  int *v112;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v23 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = (void *)a2[2];
    v9 = *((_BYTE *)a2 + 24);
    swift_retain();
    sub_1000A4100(v8, v9);
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v9;
    v10 = a3[6];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
    *v11 = *v12;
    if (EnumCaseMultiPayload == 1)
    {
      v110 = v13;
      v15 = type metadata accessor for Library.Context(0);
      v16 = *(int *)(v15 + 20);
      __dst = (char *)v11 + v16;
      v112 = (int *)v15;
      v17 = (char *)v12 + v16;
      v18 = type metadata accessor for Album(0);
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v19 + 48);
      v21 = swift_retain();
      if (v20(v17, 1, v18, v21))
      {
        v22 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      v25 = v112[6];
      v26 = (char *)v11 + v25;
      v27 = (char *)v12 + v25;
      v28 = type metadata accessor for Artist(0);
      v29 = *(_QWORD *)(v28 - 8);
      v13 = v110;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v31 = v112[7];
      v32 = (char *)v11 + v31;
      v33 = (char *)v12 + v31;
      v34 = type metadata accessor for Composer(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = v112[8];
      v38 = (char *)v11 + v37;
      v39 = (char *)v12 + v37;
      v40 = type metadata accessor for Genre(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C(&qword_10119ED08);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v112[9];
      v44 = (char *)v11 + v43;
      v45 = (char *)v12 + v43;
      v46 = type metadata accessor for Playlist(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v49 = v112[10];
      v50 = (char *)v11 + v49;
      v51 = (char *)v12 + v49;
      v52 = type metadata accessor for TVShow(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      v55 = v112[11];
      v56 = (char *)v11 + v55;
      v57 = (char *)v12 + v55;
      v58 = type metadata accessor for TVSeason(0);
      v59 = *(_QWORD *)(v58 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        v60 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      *((_BYTE *)v11 + v112[12]) = *((_BYTE *)v12 + v112[12]);
      *((_BYTE *)v11 + v112[13]) = *((_BYTE *)v12 + v112[13]);
      *((_BYTE *)v11 + v112[14]) = *((_BYTE *)v12 + v112[14]);
      v61 = v112[15];
      v62 = (_QWORD *)((char *)v11 + v61);
      v63 = (_QWORD *)((char *)v12 + v61);
      v64 = v63[1];
      *v62 = *v63;
      v62[1] = v64;
      *(_QWORD *)((char *)v11 + v112[16]) = *(_QWORD *)((char *)v12 + v112[16]);
      *((_BYTE *)v11 + v112[17]) = *((_BYTE *)v12 + v112[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = 1;
    }
    else
    {
      swift_retain();
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v24);
    v65 = a3[7];
    v66 = a3[8];
    v67 = (_QWORD *)(a1 + v65);
    v68 = (uint64_t *)((char *)a2 + v65);
    v69 = *v68;
    v70 = v68[1];
    *v67 = v69;
    v67[1] = v70;
    v71 = (_QWORD *)(a1 + v66);
    v72 = (uint64_t *)((char *)a2 + v66);
    v74 = *v72;
    v73 = v72[1];
    *v71 = v74;
    v71[1] = v73;
    v75 = a3[9];
    v76 = a1 + v75;
    v77 = (uint64_t)a2 + v75;
    v78 = *(_QWORD *)v77;
    v79 = *(_QWORD *)(v77 + 8);
    v80 = *(_BYTE *)(v77 + 16);
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v78, v79);
    *(_QWORD *)v76 = v78;
    *(_QWORD *)(v76 + 8) = v79;
    *(_BYTE *)(v76 + 16) = v80;
    v81 = a3[10];
    v82 = a3[11];
    v83 = (_QWORD *)(a1 + v81);
    v84 = (uint64_t *)((char *)a2 + v81);
    v85 = *v84;
    v86 = v84[1];
    *v83 = v85;
    v83[1] = v86;
    v87 = (_QWORD *)(a1 + v82);
    v88 = (uint64_t *)((char *)a2 + v82);
    v90 = *v88;
    v89 = v88[1];
    *v87 = v90;
    v87[1] = v89;
    v91 = a3[12];
    v92 = a3[13];
    v93 = (_QWORD *)(a1 + v91);
    v94 = (uint64_t *)((char *)a2 + v91);
    v96 = *v94;
    v95 = v94[1];
    *v93 = v96;
    v93[1] = v95;
    v97 = a1 + v92;
    v98 = *(uint64_t *)((char *)a2 + v92);
    v99 = *(uint64_t *)((char *)a2 + v92 + 8);
    LOBYTE(v76) = *((_BYTE *)a2 + v92 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v98, v99, v76);
    *(_QWORD *)v97 = v98;
    *(_QWORD *)(v97 + 8) = v99;
    *(_BYTE *)(v97 + 16) = v76;
    v100 = a3[14];
    v101 = a1 + v100;
    v102 = (uint64_t)a2 + v100;
    v103 = *(_QWORD *)v102;
    v104 = *(_QWORD *)(v102 + 8);
    LOBYTE(v98) = *(_BYTE *)(v102 + 16);
    sub_1000A411C(*(_QWORD *)v102, v104, v98);
    *(_QWORD *)v101 = v103;
    *(_QWORD *)(v101 + 8) = v104;
    *(_BYTE *)(v101 + 16) = v98;
    v105 = a3[15];
    v106 = a1 + v105;
    v107 = (uint64_t)a2 + v105;
    v108 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v106, v107, v108);
  }
  return a1;
}

uint64_t sub_1008359AC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  swift_release();
  sub_1000A4224(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + a2[6];
  v5 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v7 = (int *)type metadata accessor for Library.Context(0);
    v8 = v4 + v7[5];
    v9 = type metadata accessor for Album(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = v4 + v7[6];
    v12 = type metadata accessor for Artist(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v4 + v7[7];
    v15 = type metadata accessor for Composer(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = v4 + v7[8];
    v18 = type metadata accessor for Genre(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    v20 = v4 + v7[9];
    v21 = type metadata accessor for Playlist(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    v23 = v4 + v7[10];
    v24 = type metadata accessor for TVShow(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    v26 = v4 + v7[11];
    v27 = type metadata accessor for TVSeason(0);
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[9]), *(_QWORD *)(a1 + a2[9] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 16));
  sub_1000A4240(*(_QWORD *)(a1 + a2[14]), *(_QWORD *)(a1 + a2[14] + 8), *(_BYTE *)(a1 + a2[14] + 16));
  v29 = a1 + a2[15];
  v30 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
}

uint64_t sub_100835CB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *__dst;
  uint64_t v108;
  int *v109;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(void **)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_1000A4100(v7, v8);
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  *v10 = *v11;
  if (EnumCaseMultiPayload == 1)
  {
    v108 = v12;
    v109 = (int *)type metadata accessor for Library.Context(0);
    v14 = v109[5];
    __dst = (char *)v10 + v14;
    v15 = (char *)v11 + v14;
    v16 = type metadata accessor for Album(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48);
    v19 = swift_retain();
    if (v18(v15, 1, v16, v19))
    {
      v20 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    v22 = v109[6];
    v23 = (char *)v10 + v22;
    v24 = (char *)v11 + v22;
    v25 = type metadata accessor for Artist(0);
    v26 = *(_QWORD *)(v25 - 8);
    v12 = v108;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v28 = v109[7];
    v29 = (char *)v10 + v28;
    v30 = (char *)v11 + v28;
    v31 = type metadata accessor for Composer(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v34 = v109[8];
    v35 = (char *)v10 + v34;
    v36 = (char *)v11 + v34;
    v37 = type metadata accessor for Genre(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = sub_100007E8C(&qword_10119ED08);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v40 = v109[9];
    v41 = (char *)v10 + v40;
    v42 = (char *)v11 + v40;
    v43 = type metadata accessor for Playlist(0);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    v46 = v109[10];
    v47 = (char *)v10 + v46;
    v48 = (char *)v11 + v46;
    v49 = type metadata accessor for TVShow(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v52 = v109[11];
    v53 = (char *)v10 + v52;
    v54 = (char *)v11 + v52;
    v55 = type metadata accessor for TVSeason(0);
    v56 = *(_QWORD *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      v57 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    *((_BYTE *)v10 + v109[12]) = *((_BYTE *)v11 + v109[12]);
    *((_BYTE *)v10 + v109[13]) = *((_BYTE *)v11 + v109[13]);
    *((_BYTE *)v10 + v109[14]) = *((_BYTE *)v11 + v109[14]);
    v58 = v109[15];
    v59 = (_QWORD *)((char *)v10 + v58);
    v60 = (_QWORD *)((char *)v11 + v58);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    *(_QWORD *)((char *)v10 + v109[16]) = *(_QWORD *)((char *)v11 + v109[16]);
    *((_BYTE *)v10 + v109[17]) = *((_BYTE *)v11 + v109[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = 1;
  }
  else
  {
    swift_retain();
    v21 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v21);
  v62 = a3[7];
  v63 = a3[8];
  v64 = (_QWORD *)(a1 + v62);
  v65 = (uint64_t *)(a2 + v62);
  v66 = *v65;
  v67 = v65[1];
  *v64 = v66;
  v64[1] = v67;
  v68 = (_QWORD *)(a1 + v63);
  v69 = (uint64_t *)(a2 + v63);
  v71 = *v69;
  v70 = v69[1];
  *v68 = v71;
  v68[1] = v70;
  v72 = a3[9];
  v73 = a1 + v72;
  v74 = a2 + v72;
  v75 = *(_QWORD *)v74;
  v76 = *(_QWORD *)(v74 + 8);
  v77 = *(_BYTE *)(v74 + 16);
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v75, v76);
  *(_QWORD *)v73 = v75;
  *(_QWORD *)(v73 + 8) = v76;
  *(_BYTE *)(v73 + 16) = v77;
  v78 = a3[10];
  v79 = a3[11];
  v80 = (_QWORD *)(a1 + v78);
  v81 = (uint64_t *)(a2 + v78);
  v82 = *v81;
  v83 = v81[1];
  *v80 = v82;
  v80[1] = v83;
  v84 = (_QWORD *)(a1 + v79);
  v85 = (uint64_t *)(a2 + v79);
  v87 = *v85;
  v86 = v85[1];
  *v84 = v87;
  v84[1] = v86;
  v88 = a3[12];
  v89 = a3[13];
  v90 = (_QWORD *)(a1 + v88);
  v91 = (uint64_t *)(a2 + v88);
  v93 = *v91;
  v92 = v91[1];
  *v90 = v93;
  v90[1] = v92;
  v94 = a1 + v89;
  v95 = *(_QWORD *)(a2 + v89);
  v96 = *(_QWORD *)(a2 + v89 + 8);
  LOBYTE(v73) = *(_BYTE *)(a2 + v89 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v95, v96, v73);
  *(_QWORD *)v94 = v95;
  *(_QWORD *)(v94 + 8) = v96;
  *(_BYTE *)(v94 + 16) = v73;
  v97 = a3[14];
  v98 = a1 + v97;
  v99 = a2 + v97;
  v100 = *(_QWORD *)v99;
  v101 = *(_QWORD *)(v99 + 8);
  LOBYTE(v95) = *(_BYTE *)(v99 + 16);
  sub_1000A411C(*(_QWORD *)v99, v101, v95);
  *(_QWORD *)v98 = v100;
  *(_QWORD *)(v98 + 8) = v101;
  *(_BYTE *)(v98 + 16) = v95;
  v102 = a3[15];
  v103 = a1 + v102;
  v104 = a2 + v102;
  v105 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v103, v104, v105);
  return a1;
}

uint64_t sub_1008362E4(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  char v7;
  void *v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *__dst;
  uint64_t v106;
  int *v107;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v6 = *(void **)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1000A4100(v6, v7);
  v8 = *(void **)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1000A4224(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[6];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_10004FF60(a1 + v10, &qword_10119F030);
    v13 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
    *v11 = *v12;
    if (EnumCaseMultiPayload == 1)
    {
      v106 = v13;
      v107 = (int *)type metadata accessor for Library.Context(0);
      v15 = v107[5];
      __dst = (char *)v11 + v15;
      v16 = (char *)v12 + v15;
      v17 = type metadata accessor for Album(0);
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
      v20 = swift_retain();
      if (v19(v16, 1, v17, v20))
      {
        v21 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
      }
      v23 = v107[6];
      v24 = (char *)v11 + v23;
      v25 = (char *)v12 + v23;
      v26 = type metadata accessor for Artist(0);
      v27 = *(_QWORD *)(v26 - 8);
      v13 = v106;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v29 = v107[7];
      v30 = (char *)v11 + v29;
      v31 = (char *)v12 + v29;
      v32 = type metadata accessor for Composer(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v35 = v107[8];
      v36 = (char *)v11 + v35;
      v37 = (char *)v12 + v35;
      v38 = type metadata accessor for Genre(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = sub_100007E8C(&qword_10119ED08);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      v41 = v107[9];
      v42 = (char *)v11 + v41;
      v43 = (char *)v12 + v41;
      v44 = type metadata accessor for Playlist(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        v46 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v47 = v107[10];
      v48 = (char *)v11 + v47;
      v49 = (char *)v12 + v47;
      v50 = type metadata accessor for TVShow(0);
      v51 = *(_QWORD *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      v53 = v107[11];
      v54 = (char *)v11 + v53;
      v55 = (char *)v12 + v53;
      v56 = type metadata accessor for TVSeason(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      *((_BYTE *)v11 + v107[12]) = *((_BYTE *)v12 + v107[12]);
      *((_BYTE *)v11 + v107[13]) = *((_BYTE *)v12 + v107[13]);
      *((_BYTE *)v11 + v107[14]) = *((_BYTE *)v12 + v107[14]);
      v59 = v107[15];
      v60 = (_QWORD *)((char *)v11 + v59);
      v61 = (_QWORD *)((char *)v12 + v59);
      *v60 = *v61;
      v60[1] = v61[1];
      *(_QWORD *)((char *)v11 + v107[16]) = *(_QWORD *)((char *)v12 + v107[16]);
      *((_BYTE *)v11 + v107[17]) = *((_BYTE *)v12 + v107[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = 1;
    }
    else
    {
      swift_retain();
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v22);
  }
  v62 = a3[7];
  v63 = a1 + v62;
  v64 = a2 + v62;
  *(_QWORD *)(a1 + v62) = *(_QWORD *)(a2 + v62);
  swift_retain();
  swift_release();
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(v64 + 8);
  v65 = a3[8];
  v66 = a1 + v65;
  v67 = a2 + v65;
  *(_QWORD *)(a1 + v65) = *(_QWORD *)(a2 + v65);
  swift_retain();
  swift_release();
  *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
  v68 = a3[9];
  v69 = a1 + v68;
  v70 = a2 + v68;
  v71 = *(_QWORD *)v70;
  v72 = *(_QWORD *)(v70 + 8);
  LOBYTE(v67) = *(_BYTE *)(v70 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v70, v72);
  v73 = *(_QWORD *)v69;
  v74 = *(_QWORD *)(v69 + 8);
  *(_QWORD *)v69 = v71;
  *(_QWORD *)(v69 + 8) = v72;
  *(_BYTE *)(v69 + 16) = v67;
  sub_1000A6174(v73, v74);
  v75 = a3[10];
  v76 = a1 + v75;
  v77 = a2 + v75;
  *(_QWORD *)(a1 + v75) = *(_QWORD *)(a2 + v75);
  swift_retain();
  swift_release();
  *(_QWORD *)(v76 + 8) = *(_QWORD *)(v77 + 8);
  v78 = a3[11];
  v79 = a1 + v78;
  v80 = a2 + v78;
  *(_QWORD *)(a1 + v78) = *(_QWORD *)(a2 + v78);
  swift_retain();
  swift_release();
  *(_QWORD *)(v79 + 8) = *(_QWORD *)(v80 + 8);
  v81 = a3[12];
  v82 = a1 + v81;
  v83 = a2 + v81;
  *(_QWORD *)(a1 + v81) = *(_QWORD *)(a2 + v81);
  swift_retain();
  swift_release();
  *(_QWORD *)(v82 + 8) = *(_QWORD *)(v83 + 8);
  v84 = a3[13];
  v85 = a1 + v84;
  v86 = a2 + v84;
  v87 = *(_QWORD *)v86;
  v88 = *(_QWORD *)(v86 + 8);
  LOBYTE(v83) = *(_BYTE *)(v86 + 16);
  sub_1000A410C(*(_QWORD *)v86, v88, v83);
  v89 = *(_QWORD *)v85;
  v90 = *(_QWORD *)(v85 + 8);
  v91 = *(_BYTE *)(v85 + 16);
  *(_QWORD *)v85 = v87;
  *(_QWORD *)(v85 + 8) = v88;
  *(_BYTE *)(v85 + 16) = v83;
  sub_1000A4230(v89, v90, v91);
  v92 = a3[14];
  v93 = a1 + v92;
  v94 = a2 + v92;
  v95 = *(_QWORD *)v94;
  v96 = *(_QWORD *)(v94 + 8);
  LOBYTE(v83) = *(_BYTE *)(v94 + 16);
  sub_1000A411C(*(_QWORD *)v94, v96, v83);
  v97 = *(_QWORD *)v93;
  v98 = *(_QWORD *)(v93 + 8);
  v99 = *(_BYTE *)(v93 + 16);
  *(_QWORD *)v93 = v95;
  *(_QWORD *)(v93 + 8) = v96;
  *(_BYTE *)(v93 + 16) = v83;
  sub_1000A4240(v97, v98, v99);
  v100 = a3[15];
  v101 = a1 + v100;
  v102 = a2 + v100;
  v103 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 24))(v101, v102, v103);
  return a1;
}

uint64_t sub_1008369E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v71 = v9;
    *v7 = *v8;
    v10 = (int *)type metadata accessor for Library.Context(0);
    v11 = v10[5];
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = type metadata accessor for Album(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = v10[6];
    v18 = (char *)v7 + v17;
    v19 = (char *)v8 + v17;
    v20 = type metadata accessor for Artist(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = v10[7];
    v24 = (char *)v7 + v23;
    v25 = (char *)v8 + v23;
    v26 = type metadata accessor for Composer(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = v10[8];
    v30 = (char *)v7 + v29;
    v31 = (char *)v8 + v29;
    v32 = type metadata accessor for Genre(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C(&qword_10119ED08);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v10[9];
    v36 = (char *)v7 + v35;
    v37 = (char *)v8 + v35;
    v38 = type metadata accessor for Playlist(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v10[10];
    v42 = (char *)v7 + v41;
    v43 = (char *)v8 + v41;
    v44 = type metadata accessor for TVShow(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v10[11];
    v48 = (char *)v7 + v47;
    v49 = (char *)v8 + v47;
    v50 = type metadata accessor for TVSeason(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    *((_BYTE *)v7 + v10[12]) = *((_BYTE *)v8 + v10[12]);
    *((_BYTE *)v7 + v10[13]) = *((_BYTE *)v8 + v10[13]);
    *((_BYTE *)v7 + v10[14]) = *((_BYTE *)v8 + v10[14]);
    *(_OWORD *)((char *)v7 + v10[15]) = *(_OWORD *)((char *)v8 + v10[15]);
    *(_QWORD *)((char *)v7 + v10[16]) = *(_QWORD *)((char *)v8 + v10[16]);
    *((_BYTE *)v7 + v10[17]) = *((_BYTE *)v8 + v10[17]);
    swift_storeEnumTagMultiPayload(v7, v71, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v53 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v53) = *(_OWORD *)(a2 + v53);
  v54 = a3[9];
  v55 = a3[10];
  v56 = a1 + v54;
  v57 = a2 + v54;
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *(_BYTE *)(v56 + 16) = *(_BYTE *)(v57 + 16);
  *(_OWORD *)(a1 + v55) = *(_OWORD *)(a2 + v55);
  v58 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v58) = *(_OWORD *)(a2 + v58);
  v59 = a3[13];
  v60 = a3[14];
  v61 = a1 + v59;
  v62 = a2 + v59;
  *(_BYTE *)(v61 + 16) = *(_BYTE *)(v62 + 16);
  *(_OWORD *)v61 = *(_OWORD *)v62;
  v63 = a1 + v60;
  v64 = (__int128 *)(a2 + v60);
  *(_BYTE *)(v63 + 16) = *((_BYTE *)v64 + 16);
  v65 = *v64;
  v66 = a3[15];
  v67 = a1 + v66;
  v68 = a2 + v66;
  *(_OWORD *)v63 = v65;
  v69 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
  return a1;
}

uint64_t sub_100836F4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  void *v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v97;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *(void **)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v7;
  sub_1000A4224(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[6];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_10004FF60(a1 + v10, &qword_10119F030);
    v13 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v97 = v13;
      *v11 = *v12;
      v14 = (int *)type metadata accessor for Library.Context(0);
      v15 = v14[5];
      v16 = (char *)v11 + v15;
      v17 = (char *)v12 + v15;
      v18 = type metadata accessor for Album(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v21 = v14[6];
      v22 = (char *)v11 + v21;
      v23 = (char *)v12 + v21;
      v24 = type metadata accessor for Artist(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      v27 = v14[7];
      v28 = (char *)v11 + v27;
      v29 = (char *)v12 + v27;
      v30 = type metadata accessor for Composer(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v33 = v14[8];
      v34 = (char *)v11 + v33;
      v35 = (char *)v12 + v33;
      v36 = type metadata accessor for Genre(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C(&qword_10119ED08);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v14[9];
      v40 = (char *)v11 + v39;
      v41 = (char *)v12 + v39;
      v42 = type metadata accessor for Playlist(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = v14[10];
      v46 = (char *)v11 + v45;
      v47 = (char *)v12 + v45;
      v48 = type metadata accessor for TVShow(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      v51 = v14[11];
      v52 = (char *)v11 + v51;
      v53 = (char *)v12 + v51;
      v54 = type metadata accessor for TVSeason(0);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        v56 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      *((_BYTE *)v11 + v14[12]) = *((_BYTE *)v12 + v14[12]);
      *((_BYTE *)v11 + v14[13]) = *((_BYTE *)v12 + v14[13]);
      *((_BYTE *)v11 + v14[14]) = *((_BYTE *)v12 + v14[14]);
      *(_OWORD *)((char *)v11 + v14[15]) = *(_OWORD *)((char *)v12 + v14[15]);
      *(_QWORD *)((char *)v11 + v14[16]) = *(_QWORD *)((char *)v12 + v14[16]);
      *((_BYTE *)v11 + v14[17]) = *((_BYTE *)v12 + v14[17]);
      swift_storeEnumTagMultiPayload(v11, v97, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v57 = a3[7];
  v58 = a1 + v57;
  v59 = a2 + v57;
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);
  swift_release();
  *(_QWORD *)(v58 + 8) = *(_QWORD *)(v59 + 8);
  v60 = a3[8];
  v61 = a1 + v60;
  v62 = a2 + v60;
  *(_QWORD *)(a1 + v60) = *(_QWORD *)(a2 + v60);
  swift_release();
  *(_QWORD *)(v61 + 8) = *(_QWORD *)(v62 + 8);
  v63 = a3[9];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = *(_BYTE *)(v65 + 16);
  v67 = *(_QWORD *)v64;
  v68 = *(_QWORD *)(v64 + 8);
  *(_OWORD *)v64 = *(_OWORD *)v65;
  *(_BYTE *)(v64 + 16) = v66;
  sub_1000A6174(v67, v68);
  v69 = a3[10];
  v70 = a1 + v69;
  v71 = a2 + v69;
  *(_QWORD *)(a1 + v69) = *(_QWORD *)(a2 + v69);
  swift_release();
  *(_QWORD *)(v70 + 8) = *(_QWORD *)(v71 + 8);
  v72 = a3[11];
  v73 = a1 + v72;
  v74 = a2 + v72;
  *(_QWORD *)(a1 + v72) = *(_QWORD *)(a2 + v72);
  swift_release();
  *(_QWORD *)(v73 + 8) = *(_QWORD *)(v74 + 8);
  v75 = a3[12];
  v76 = a1 + v75;
  v77 = a2 + v75;
  *(_QWORD *)(a1 + v75) = *(_QWORD *)(a2 + v75);
  swift_release();
  *(_QWORD *)(v76 + 8) = *(_QWORD *)(v77 + 8);
  v78 = a3[13];
  v79 = a1 + v78;
  v80 = a2 + v78;
  v81 = *(_BYTE *)(v80 + 16);
  v82 = *(_QWORD *)v79;
  v83 = *(_QWORD *)(v79 + 8);
  v84 = *(_BYTE *)(v79 + 16);
  *(_OWORD *)v79 = *(_OWORD *)v80;
  *(_BYTE *)(v79 + 16) = v81;
  sub_1000A4230(v82, v83, v84);
  v85 = a3[14];
  v86 = a1 + v85;
  v87 = a2 + v85;
  v88 = *(_BYTE *)(v87 + 16);
  v89 = *(_QWORD *)v86;
  v90 = *(_QWORD *)(v86 + 8);
  v91 = *(_BYTE *)(v86 + 16);
  *(_OWORD *)v86 = *(_OWORD *)v87;
  *(_BYTE *)(v86 + 16) = v88;
  sub_1000A4240(v89, v90, v91);
  v92 = a3[15];
  v93 = a1 + v92;
  v94 = a2 + v92;
  v95 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 40))(v93, v94, v95);
  return a1;
}

uint64_t sub_100837590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10083759C);
}

uint64_t sub_10083759C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_10119EE98);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_100007E8C(qword_1011C9550);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100837644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100837650);
}

uint64_t sub_100837650(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_10119EE98);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_100007E8C(qword_1011C9550);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t _s15PlaylistSectionV12PlaylistCellVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CBA20, (uint64_t)&_s15PlaylistSectionV12PlaylistCellVMn);
}

void sub_100837708(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  v6[0] = &unk_100ED21A8;
  v6[1] = "\t";
  sub_1000E3A44(319, (unint64_t *)&qword_10119F6B0, type metadata accessor for Library.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v6[3] = &unk_100ED2230;
    v6[4] = &unk_100ED2230;
    v6[5] = &unk_100ED2218;
    v6[6] = &unk_100ED2230;
    v6[7] = &unk_100ED2230;
    v6[8] = &unk_100ED2230;
    v6[9] = &unk_100ED2218;
    v6[10] = &unk_100ED2218;
    sub_1000F6458(319);
    if (v5 <= 0x3F)
    {
      v6[11] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 12, v6, a1 + 16);
    }
  }
}

uint64_t sub_1008377D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE714, 1);
}

uint64_t sub_1008377E8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE6EC, 1);
}

uint64_t sub_1008377FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for MenuDataSource(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_100837838()
{
  return sub_100048748(&qword_1011CBA80, _s15PlaylistSectionV12PlaylistCellV9ViewModelCMa, (uint64_t)&unk_100ED23E8);
}

uint64_t sub_100837864(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
}

uint64_t sub_10083788C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for Optional(0, *(_QWORD *)(a4 + a3 - 16));
  __chkstk_darwin(v6);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v11 - v7, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 168))(v8);
}

uint64_t sub_100837918@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001EDF8C(a1, (uint64_t)&unk_100ED2530, (uint64_t)&unk_100ED2558, a2);
}

uint64_t sub_10083792C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001EDF8C(a1, (uint64_t)&unk_100ED2530, (uint64_t)&unk_100ED2558, a2);
}

uint64_t sub_100837950(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v16;

  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v16 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v16 - v9, a1, v4);
  v12 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED2530);
  v14 = swift_getKeyPath(&unk_100ED2558);
  v11(v8, (uint64_t)v10, v4);
  swift_retain(v12);
  static Published.subscript.setter(v8, v12, KeyPath, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

double sub_100837A58@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED2780);
  v5 = swift_getKeyPath(&unk_100ED27A8);
  static Published.subscript.getter(v9, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)v9;
  v7 = v9[1];
  v8 = v9[2];
  *a2 = v9[0];
  a2[1] = v7;
  a2[2] = v8;
  return result;
}

double sub_100837ADC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  _QWORD v12[6];

  v2 = *a1;
  v3 = (void *)a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED2780);
  v10 = swift_getKeyPath(&unk_100ED27A8);
  v12[0] = v2;
  v12[1] = v3;
  v12[2] = v4;
  v12[3] = v5;
  v12[4] = v6;
  v12[5] = v7;
  sub_1005CB9F0(v2, v3, v4, v5, v6, v7);
  swift_retain();
  static Published.subscript.setter(v12, v8, KeyPath, v10);
  return sub_100831208();
}

uint64_t sub_100837B98@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED25F0);
  v5 = swift_getKeyPath(&unk_100ED2618);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100837C14(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_10069D640(*a1);
  return sub_100831A3C(v1);
}

uint64_t sub_100837C44()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100837C64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ControlSize(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.controlSize.setter(v4);
}

uint64_t sub_100837CE4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_100837D88(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100837E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((a1 & 0x8000000000000000) == 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
    {
      v4 = Library.Menu.Identifier.rawValue.getter(a1);
      v6 = v5;
      v8 = Library.Menu.Identifier.rawValue.getter(a2);
      if (v4 != v8 || v6 != v7)
      {
        v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v8, v7, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10 & 1;
      }
      swift_bridgeObjectRelease_n(v6, 2);
      return 1;
    }
    return 0;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return 0;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 24);
  if (v11 != v13 || v12 != v14)
    return _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v13, v14, 0);
  return 1;
}

uint64_t sub_100837F44@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004FDFF4(a1, (uint64_t)&unk_100ED2578, (uint64_t)&unk_100ED25A0, a2);
}

uint64_t sub_100837F68(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1004FE080(a1, a2, a3, a4, (uint64_t)&unk_100ED2578, (uint64_t)&unk_100ED25A0);
}

uint64_t sub_100837F8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10082E3B4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100837F94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBAF0;
  if (!qword_1011CBAF0)
  {
    v1 = sub_100044B54(&qword_1011CBA90);
    sub_100838018();
    sub_100049F28(&qword_1011C9778, &qword_1011C9760, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBAF0);
  }
  return result;
}

unint64_t sub_100838018()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBAF8;
  if (!qword_1011CBAF8)
  {
    v1 = sub_100044B54(&qword_1011CBA98);
    sub_100049F28(&qword_1011CBAE8, &qword_1011CBAE0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBAF8);
  }
  return result;
}

uint64_t sub_1008380A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v1 = _s15PlaylistSectionVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v28 = *(_QWORD *)(v2 + 64);
  swift_release();
  v4 = v0 + v3 + *(int *)(v1 + 20);
  swift_release();
  v5 = (int *)type metadata accessor for Library.Context(0);
  v6 = v4 + v5[5];
  v7 = type metadata accessor for Album(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v4 + v5[6];
  v10 = type metadata accessor for Artist(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v4 + v5[7];
  v13 = type metadata accessor for Composer(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v12, v13);
  v15 = v4 + v5[8];
  v16 = type metadata accessor for Genre(0);
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v15, v16);
  v18 = v4 + v5[9];
  v19 = type metadata accessor for Playlist(0);
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v18, v19);
  v21 = v4 + v5[10];
  v22 = type metadata accessor for TVShow(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v21, v22);
  v24 = v4 + v5[11];
  v25 = type metadata accessor for TVSeason(0);
  v26 = *(_QWORD *)(v25 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    (*(void (**)(unint64_t, uint64_t))(v26 + 8))(v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000A6174(*(_QWORD *)(v0 + v3 + *(int *)(v1 + 24)), *(_QWORD *)(v0 + v3 + *(int *)(v1 + 24) + 8));
  swift_release();
  return swift_deallocObject(v0, v3 + v28);
}

uint64_t sub_10083834C(uint64_t a1, uint64_t a2)
{
  return sub_10083BCC4(a1, a2, _s15PlaylistSectionVMa, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10082ED20);
}

unint64_t sub_100838360()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBB08;
  if (!qword_1011CBB08)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011CB450);
    sub_100048748(&qword_1011CBA80, _s15PlaylistSectionV12PlaylistCellV9ViewModelCMa, (uint64_t)&unk_100ED23E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011CBB08);
  }
  return result;
}

uint64_t sub_1008383DC()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100838400()
{
  return sub_10005B654(&qword_1011CBB10, &qword_1011CBAD0, (void (*)(void))sub_10083841C);
}

unint64_t sub_10083841C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBB18;
  if (!qword_1011CBB18)
  {
    v1 = sub_100044B54(&qword_1011CBAC8);
    sub_100049F28(&qword_1011C9778, &qword_1011C9760, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBB18);
  }
  return result;
}

unint64_t sub_1008384A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011CBB20;
  if (!qword_1011CBB20)
  {
    v1 = sub_100044B54(&qword_1011CBAB0);
    v2[0] = sub_100044B54(&qword_1011CBAA0);
    v2[1] = sub_100044B54((uint64_t *)&unk_1011CB450);
    v2[2] = sub_10015FD08(&qword_1011CBB00, &qword_1011CBAA0, (void (*)(void))sub_100837F94, (void (*)(void))sub_100838018);
    v2[3] = sub_100838360();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBB20);
  }
  return result;
}

uint64_t sub_100838594(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_10069D640(*a1);
  return sub_100831A3C(v1);
}

uint64_t sub_1008385C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v6)
  {
    v7 = 4;
    while (1)
    {
      v8 = v7 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1);
      v10 = v7 - 3;
      if (__OFADD__(v8, 1))
        goto LABEL_17;
LABEL_9:
      v11 = MusicLibrary.id.getter();
      v13 = v12;
      if (v11 == a2 && v12 == a3)
      {
        swift_bridgeObjectRelease(a1);
LABEL_16:
        swift_bridgeObjectRelease(a3);
        return v9;
      }
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a2, a3, 0);
      swift_bridgeObjectRelease(v13);
      if ((v14 & 1) != 0)
      {
        a3 = a1;
        goto LABEL_16;
      }
      swift_release(v9);
      ++v7;
      if (v10 == v6)
        goto LABEL_22;
    }
    v9 = *(_QWORD *)(a1 + 8 * v7);
    swift_retain(v9);
    v10 = v7 - 3;
    if (!__OFADD__(v8, 1))
      goto LABEL_9;
LABEL_17:
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v15);
  }
LABEL_22:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_10083873C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v5 = *(_QWORD *)(a2 + 16);
    a2 = *(_QWORD *)(a2 + 24);
    v6 = 4;
    while (1)
    {
      v7 = v6 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
      v9 = __OFADD__(v7, 1);
      v10 = v6 - 3;
      if (v9)
        goto LABEL_18;
LABEL_9:
      v11 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      v13 = v11 == v5 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v5, a2, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v8;
      }
      swift_release(v8);
      ++v6;
      if (v10 == v4)
        goto LABEL_15;
    }
    v8 = *(_QWORD *)(a1 + 8 * v6);
    swift_retain(v8);
    v9 = __OFADD__(v7, 1);
    v10 = v6 - 3;
    if (!v9)
      goto LABEL_9;
LABEL_18:
    __break(1u);
LABEL_19:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v15);
  }
LABEL_15:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_100838864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  BOOL v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v31 = a2;
  v5 = type metadata accessor for Playlist(0);
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((unint64_t)a1 >> 62)
    goto LABEL_19;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v8)
  {
    v26[1] = v3;
    v27 = a1;
    v28 = a1 & 0xC000000000000001;
    v9 = 4;
    while (1)
    {
      v3 = v9 - 4;
      if (!v28)
        break;
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a1);
      v11 = v9 - 3;
      if (__OFADD__(v3, 1))
        goto LABEL_18;
LABEL_9:
      v12 = v8;
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      KeyPath = swift_getKeyPath(&unk_100ED2530);
      v16 = swift_getKeyPath(&unk_100ED2558);
      static Published.subscript.getter(v7, v31, KeyPath, v16);
      swift_release(KeyPath);
      v17 = swift_release(v16);
      v18 = Playlist.id.getter(v17);
      v20 = v19;
      (*(void (**)(_QWORD *, uint64_t))(v29 + 8))(v7, v30);
      if (v14 == v18 && v13 == v20)
      {
        swift_bridgeObjectRelease(v27);
        swift_release(v10);
        v24 = v13;
LABEL_17:
        swift_bridgeObjectRelease(v24);
        return 1;
      }
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v13, v18, v20, 0);
      swift_release(v10);
      swift_bridgeObjectRelease(v20);
      if ((v21 & 1) != 0)
      {
        v24 = v27;
        goto LABEL_17;
      }
      ++v9;
      v8 = v12;
      v22 = v11 == v12;
      a1 = v27;
      if (v22)
      {
        swift_bridgeObjectRelease(v27);
        return 0;
      }
    }
    v10 = *(_QWORD *)(a1 + 8 * v9);
    swift_retain(v10);
    v11 = v9 - 3;
    if (!__OFADD__(v3, 1))
      goto LABEL_9;
LABEL_18:
    __break(1u);
LABEL_19:
    if (a1 < 0)
      v25 = a1;
    else
      v25 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v25);
  }
  swift_bridgeObjectRelease(a1);
  return 0;
}

unint64_t sub_100838A84(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AB360, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xD)
    return 13;
  else
    return v3;
}

uint64_t sub_100838ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v26 = a2;
  v5 = type metadata accessor for Playlist(0);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    v9 = 0;
    v22 = v3;
    v23 = a1 & 0xC000000000000001;
    while (1)
    {
      if (v23)
      {
        v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      }
      else
      {
        v3 = *(_QWORD *)(a1 + 8 * v9 + 32);
        swift_retain(v3);
      }
      v11 = *(_QWORD *)(v3 + 16);
      v10 = *(_QWORD *)(v3 + 24);
      KeyPath = swift_getKeyPath(&unk_100ED2530);
      v13 = swift_getKeyPath(&unk_100ED2558);
      static Published.subscript.getter(v7, v26, KeyPath, v13);
      swift_release(KeyPath);
      v14 = swift_release(v13);
      v15 = Playlist.id.getter(v14);
      v17 = v16;
      (*(void (**)(_QWORD *, uint64_t))(v24 + 8))(v7, v25);
      if (v11 == v15 && v10 == v17)
      {
        swift_release(v3);
        swift_bridgeObjectRelease(v10);
        return v9;
      }
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v10, v15, v17, 0);
      swift_release(v3);
      swift_bridgeObjectRelease(v17);
      if ((v18 & 1) != 0)
        return v9;
      v19 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      ++v9;
      if (v19 == v8)
        return 0;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(a1);
  }
  return 0;
}

unint64_t sub_100838CC0()
{
  unint64_t result;

  result = qword_1011CBB50;
  if (!qword_1011CBB50)
  {
    result = swift_getWitnessTable(&unk_100EC00C4, &type metadata for MusicSidebarStyle);
    atomic_store(result, (unint64_t *)&qword_1011CBB50);
  }
  return result;
}

unint64_t sub_100838D04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBB58;
  if (!qword_1011CBB58)
  {
    v1 = sub_100044B54(&qword_1011CBB40);
    sub_100838D88();
    sub_100049F28(&qword_1011CBB78, &qword_1011CBB80, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBB58);
  }
  return result;
}

unint64_t sub_100838D88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011CBB60;
  if (!qword_1011CBB60)
  {
    v1 = sub_100044B54(&qword_1011CBB30);
    v2[0] = sub_100044B54(&qword_1011A2A80);
    v2[1] = &type metadata for MusicSidebarStyle;
    v2[2] = sub_100049F28(&qword_1011A2BF8, &qword_1011A2A80, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    v2[3] = sub_100838CC0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011CBB68, &qword_1011CBB70, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBB60);
  }
  return result;
}

_QWORD *sub_100838E68@<X0>(_QWORD *a1@<X8>)
{
  return EnvironmentValues.libraryContext.getter(a1);
}

uint64_t sub_100838EA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1008300E8(a1);
}

uint64_t sub_100838EAC@<X0>(uint64_t a1@<X8>)
{
  return sub_100830200(a1);
}

uint64_t sub_100838EB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
}

uint64_t sub_100838EE0()
{
  return 16;
}

__n128 sub_100838EEC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100838EF8@<X0>(uint64_t a1@<X8>)
{
  return sub_100830690(a1);
}

unint64_t sub_100838F00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBBF0;
  if (!qword_1011CBBF0)
  {
    v1 = sub_100044B54(&qword_1011CBBD8);
    sub_100838F84();
    sub_100049F28(&qword_1011CBB78, &qword_1011CBB80, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBBF0);
  }
  return result;
}

unint64_t sub_100838F84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  ValueMetadata *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  result = qword_1011CBBF8;
  if (!qword_1011CBBF8)
  {
    v1 = sub_100044B54(&qword_1011CBBB0);
    v2 = sub_100044B54(&qword_1011CBBC8);
    v3 = sub_100044B54(&qword_1011CBBC0);
    v4 = type metadata accessor for ContextualPreview(255);
    v9 = sub_100044B54(&qword_1011CBBB8);
    v10 = &type metadata for MusicSidebarStyle;
    v11 = sub_100049F28(&qword_1011CBBE8, &qword_1011CBBB8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    v12 = sub_100838CC0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
    v6 = sub_1000E3EE4();
    v7 = sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
    v9 = v3;
    v10 = &type metadata for ActionType;
    v11 = v4;
    v12 = OpaqueTypeConformance2;
    v13 = v6;
    v14 = v7;
    v8 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v9 = v2;
    v10 = (ValueMetadata *)v8;
    swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    sub_100049F28(&qword_1011CBB68, &qword_1011CBB70, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBBF8);
  }
  return result;
}

uint64_t sub_10083910C(uint64_t a1)
{
  sub_10006B610(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

uint64_t sub_100839140@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001EDF8C(a1, (uint64_t)&unk_100ED2738, (uint64_t)&unk_100ED2760, a2);
}

uint64_t sub_100839170@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004FDFF4(a1, (uint64_t)&unk_100ED27C8, (uint64_t)&unk_100ED27F0, a2);
}

uint64_t sub_100839194(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1004FE080(a1, a2, a3, a4, (uint64_t)&unk_100ED27C8, (uint64_t)&unk_100ED27F0);
}

void sub_1008391B8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v4;

  sub_100832B08(a1, a4, a2, a3, v4);
}

uint64_t sub_1008391C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004FDFF4(a1, (uint64_t)&unk_100ED2810, (uint64_t)&unk_100ED2838, a2);
}

uint64_t sub_1008391E4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1004FE080(a1, a2, a3, a4, (uint64_t)&unk_100ED2810, (uint64_t)&unk_100ED2838);
}

double sub_100839208(uint64_t a1)
{
  uint64_t v1;

  return sub_1008310BC(a1, v1);
}

uint64_t sub_100839210()
{
  return sub_10015FD08(&qword_1011CBC50, &qword_1011CBC58, (void (*)(void))sub_100838400, (void (*)(void))sub_1008384A0);
}

unint64_t sub_100839248()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBC60;
  if (!qword_1011CBC60)
  {
    v1 = sub_100044B54(&qword_1011CBBE0);
    sub_100838F00();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBC60);
  }
  return result;
}

uint64_t _s8MenuViewVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011CBCC0, (uint64_t)&_s8MenuViewVMn);
}

_QWORD *sub_1008392E8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v87;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    v23 = (_QWORD *)(v22 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a3[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = *(_QWORD *)((char *)a2 + v6 + 8);
    *v7 = *(_QWORD *)((char *)a2 + v6);
    v7[1] = v9;
    swift_retain();
    swift_retain();
    swift_retain();
    v10 = *(int *)(sub_100007E8C(&qword_1011C2BB8) + 32);
    v11 = (char *)v7 + v10;
    v12 = &v8[v10];
    *(_QWORD *)((char *)v7 + v10) = *(_QWORD *)&v8[v10];
    v13 = (int *)type metadata accessor for Library.Context(0);
    v14 = v13[5];
    v15 = &v11[v14];
    v16 = &v12[v14];
    v17 = type metadata accessor for Album(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
    v20 = swift_retain();
    if (v19(v16, 1, v17, v20))
    {
      v21 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v24 = v13[6];
    v25 = &v11[v24];
    v26 = &v12[v24];
    v27 = type metadata accessor for Artist(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v30 = v13[7];
    v31 = &v11[v30];
    v32 = &v12[v30];
    v33 = type metadata accessor for Composer(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v36 = v13[8];
    v37 = &v11[v36];
    v38 = &v12[v36];
    v39 = type metadata accessor for Genre(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_100007E8C(&qword_10119ED08);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v42 = v13[9];
    v43 = &v11[v42];
    v44 = &v12[v42];
    v45 = type metadata accessor for Playlist(0);
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      v47 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    v48 = v13[10];
    v49 = &v11[v48];
    v50 = &v12[v48];
    v51 = type metadata accessor for TVShow(0);
    v52 = *(_QWORD *)(v51 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      v53 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    v54 = v13[11];
    v55 = &v11[v54];
    v56 = &v12[v54];
    v57 = type metadata accessor for TVSeason(0);
    v58 = *(_QWORD *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      v59 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    v11[v13[12]] = v12[v13[12]];
    v11[v13[13]] = v12[v13[13]];
    v11[v13[14]] = v12[v13[14]];
    v60 = v13[15];
    v61 = &v11[v60];
    v62 = &v12[v60];
    v63 = *((_QWORD *)v62 + 1);
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *((_QWORD *)v61 + 1) = v63;
    *(_QWORD *)&v11[v13[16]] = *(_QWORD *)&v12[v13[16]];
    v11[v13[17]] = v12[v13[17]];
    v64 = a3[6];
    v65 = a3[7];
    v66 = (char *)a1 + v64;
    v23 = a1;
    v67 = (char *)a2 + v64;
    *v66 = *v67;
    *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
    v68 = (char *)a1 + v65;
    v69 = *(_QWORD *)((char *)a2 + v65);
    v70 = *(_QWORD *)((char *)a2 + v65 + 8);
    v71 = *(_QWORD *)((char *)a2 + v65 + 24);
    v87 = *(_QWORD *)((char *)a2 + v65 + 16);
    v72 = *((_BYTE *)a2 + v65 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100154A5C(v69, v70, v87, v71, v72);
    *(_QWORD *)v68 = v69;
    *((_QWORD *)v68 + 1) = v70;
    *((_QWORD *)v68 + 2) = v87;
    *((_QWORD *)v68 + 3) = v71;
    v68[32] = v72;
    v73 = a3[8];
    v74 = (char *)a1 + v73;
    v75 = (char *)a2 + v73;
    v76 = *(_QWORD *)v75;
    v77 = *((_QWORD *)v75 + 1);
    LOBYTE(v69) = v75[16];
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v75, v77);
    *(_QWORD *)v74 = v76;
    *((_QWORD *)v74 + 1) = v77;
    v74[16] = v69;
    v78 = a3[9];
    v79 = a3[10];
    v80 = (_QWORD *)((char *)a1 + v78);
    v81 = (_QWORD *)((char *)a2 + v78);
    v82 = v81[1];
    *v80 = *v81;
    v80[1] = v82;
    v83 = (_QWORD *)((char *)a1 + v79);
    v84 = (_QWORD *)((char *)a2 + v79);
    v85 = v84[1];
    *v83 = *v84;
    v83[1] = v85;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v23;
}

double sub_10083988C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;

  swift_release();
  v4 = a1 + a2[5];
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(sub_100007E8C(&qword_1011C2BB8) + 32);
  swift_release();
  v6 = (int *)type metadata accessor for Library.Context(0);
  v7 = v5 + v6[5];
  v8 = type metadata accessor for Album(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = v5 + v6[6];
  v11 = type metadata accessor for Artist(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = v5 + v6[7];
  v14 = type metadata accessor for Composer(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16 = v5 + v6[8];
  v17 = type metadata accessor for Genre(0);
  v18 = *(_QWORD *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  v19 = v5 + v6[9];
  v20 = type metadata accessor for Playlist(0);
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  v22 = v5 + v6[10];
  v23 = type metadata accessor for TVShow(0);
  v24 = *(_QWORD *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  v25 = v5 + v6[11];
  v26 = type metadata accessor for TVSeason(0);
  v27 = *(_QWORD *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v28 = a1 + a2[7];
  sub_1002BD420(*(_QWORD *)v28, *(_QWORD *)(v28 + 8), *(_QWORD *)(v28 + 16), *(_QWORD *)(v28 + 24), *(_BYTE *)(v28 + 32));
  sub_1000A6174(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8));
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_100839B48(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v84;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a3[5];
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = *(_QWORD *)((char *)a2 + v5 + 8);
  *v6 = *(_QWORD *)((char *)a2 + v5);
  v6[1] = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  v9 = *(int *)(sub_100007E8C(&qword_1011C2BB8) + 32);
  v10 = (char *)v6 + v9;
  v11 = &v7[v9];
  *(_QWORD *)((char *)v6 + v9) = *(_QWORD *)&v7[v9];
  v12 = (int *)type metadata accessor for Library.Context(0);
  v13 = v12[5];
  v14 = &v10[v13];
  v15 = &v11[v13];
  v16 = type metadata accessor for Album(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48);
  v19 = swift_retain();
  if (v18(v15, 1, v16, v19))
  {
    v20 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v21 = v12[6];
  v22 = &v10[v21];
  v23 = &v11[v21];
  v24 = type metadata accessor for Artist(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v27 = v12[7];
  v28 = &v10[v27];
  v29 = &v11[v27];
  v30 = type metadata accessor for Composer(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v33 = v12[8];
  v34 = &v10[v33];
  v35 = &v11[v33];
  v36 = type metadata accessor for Genre(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_100007E8C(&qword_10119ED08);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  v39 = v12[9];
  v40 = &v10[v39];
  v41 = &v11[v39];
  v42 = type metadata accessor for Playlist(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v45 = v12[10];
  v46 = &v10[v45];
  v47 = &v11[v45];
  v48 = type metadata accessor for TVShow(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  v51 = v12[11];
  v52 = &v10[v51];
  v53 = &v11[v51];
  v54 = type metadata accessor for TVSeason(0);
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    v56 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  v10[v12[12]] = v11[v12[12]];
  v10[v12[13]] = v11[v12[13]];
  v10[v12[14]] = v11[v12[14]];
  v57 = v12[15];
  v58 = &v10[v57];
  v59 = &v11[v57];
  v60 = *((_QWORD *)v59 + 1);
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *((_QWORD *)v58 + 1) = v60;
  *(_QWORD *)&v10[v12[16]] = *(_QWORD *)&v11[v12[16]];
  v10[v12[17]] = v11[v12[17]];
  v61 = a3[6];
  v62 = a3[7];
  v63 = (char *)a1 + v61;
  v64 = (char *)a2 + v61;
  *v63 = *v64;
  *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
  v65 = (char *)a1 + v62;
  v66 = *(_QWORD *)((char *)a2 + v62);
  v67 = *(_QWORD *)((char *)a2 + v62 + 8);
  v68 = *(_QWORD *)((char *)a2 + v62 + 24);
  v84 = *(_QWORD *)((char *)a2 + v62 + 16);
  v69 = *((_BYTE *)a2 + v62 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100154A5C(v66, v67, v84, v68, v69);
  *(_QWORD *)v65 = v66;
  *((_QWORD *)v65 + 1) = v67;
  *((_QWORD *)v65 + 2) = v84;
  *((_QWORD *)v65 + 3) = v68;
  v65[32] = v69;
  v70 = a3[8];
  v71 = (char *)a1 + v70;
  v72 = (char *)a2 + v70;
  v73 = *(_QWORD *)v72;
  v74 = *((_QWORD *)v72 + 1);
  LOBYTE(v66) = v72[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v72, v74);
  *(_QWORD *)v71 = v73;
  *((_QWORD *)v71 + 1) = v74;
  v71[16] = v66;
  v75 = a3[9];
  v76 = a3[10];
  v77 = (_QWORD *)((char *)a1 + v75);
  v78 = (_QWORD *)((char *)a2 + v75);
  v79 = v78[1];
  *v77 = *v78;
  v77[1] = v79;
  v80 = (_QWORD *)((char *)a1 + v76);
  v81 = (_QWORD *)((char *)a2 + v76);
  v82 = v81[1];
  *v80 = *v81;
  v80[1] = v82;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_10083A0C4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(char *, uint64_t, uint64_t);
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  int *v109;
  _QWORD *v110;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v109 = a3;
  v110 = a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_retain();
  swift_release();
  v9 = *(int *)(sub_100007E8C(&qword_1011C2BB8) + 32);
  v10 = &v7[v9];
  v11 = &v8[v9];
  *(_QWORD *)&v7[v9] = *(_QWORD *)&v8[v9];
  swift_retain();
  swift_release();
  v12 = (int *)type metadata accessor for Library.Context(0);
  v13 = v12[5];
  v14 = &v10[v13];
  v15 = &v11[v13];
  v16 = type metadata accessor for Album(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    v21 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  v22 = v12[6];
  v23 = &v10[v22];
  v24 = &v11[v22];
  v25 = type metadata accessor for Artist(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
LABEL_12:
    v30 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
LABEL_13:
  v31 = v12[7];
  v32 = &v10[v31];
  v33 = &v11[v31];
  v34 = type metadata accessor for Composer(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
LABEL_18:
    v39 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v32, v33, v34);
LABEL_19:
  v40 = v12[8];
  v41 = &v10[v40];
  v42 = &v11[v40];
  v43 = type metadata accessor for Genre(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45(v42, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
LABEL_24:
    v48 = sub_100007E8C(&qword_10119ED08);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 24))(v41, v42, v43);
LABEL_25:
  v49 = v12[9];
  v50 = &v10[v49];
  v51 = &v11[v49];
  v52 = type metadata accessor for Playlist(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v52);
LABEL_30:
    v57 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 24))(v50, v51, v52);
LABEL_31:
  v58 = v12[10];
  v59 = &v10[v58];
  v60 = &v11[v58];
  v61 = type metadata accessor for TVShow(0);
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
  v64 = v63(v59, 1, v61);
  v65 = v63(v60, 1, v61);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
LABEL_36:
    v66 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v59, v60, v61);
LABEL_37:
  v67 = v12[11];
  v68 = &v10[v67];
  v69 = &v11[v67];
  v70 = type metadata accessor for TVSeason(0);
  v71 = *(_QWORD *)(v70 - 8);
  v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48);
  v73 = v72(v68, 1, v70);
  v74 = v72(v69, 1, v70);
  if (!v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 24))(v68, v69, v70);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v70);
    goto LABEL_42;
  }
  if (v74)
  {
LABEL_42:
    v75 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
LABEL_43:
  v10[v12[12]] = v11[v12[12]];
  v10[v12[13]] = v11[v12[13]];
  v10[v12[14]] = v11[v12[14]];
  v76 = v12[15];
  v77 = &v10[v76];
  v78 = &v11[v76];
  *(_QWORD *)v77 = *(_QWORD *)v78;
  *((_QWORD *)v77 + 1) = *((_QWORD *)v78 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[v12[16]] = *(_QWORD *)&v11[v12[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[v12[17]] = v11[v12[17]];
  v79 = v109[6];
  v80 = (char *)a1 + v79;
  v81 = (char *)v110 + v79;
  *v80 = *v81;
  *((_QWORD *)v80 + 1) = *((_QWORD *)v81 + 1);
  swift_retain();
  swift_release();
  v82 = v109[7];
  v83 = (char *)a1 + v82;
  v84 = (char *)v110 + v82;
  v85 = *(_QWORD *)v84;
  v86 = *((_QWORD *)v84 + 1);
  v87 = *((_QWORD *)v84 + 2);
  v88 = *((_QWORD *)v84 + 3);
  v89 = v84[32];
  sub_100154A5C(*(_QWORD *)v84, v86, v87, v88, v89);
  v90 = *(_QWORD *)v83;
  v91 = *((_QWORD *)v83 + 1);
  v92 = *((_QWORD *)v83 + 2);
  v93 = *((_QWORD *)v83 + 3);
  v94 = v83[32];
  *(_QWORD *)v83 = v85;
  *((_QWORD *)v83 + 1) = v86;
  *((_QWORD *)v83 + 2) = v87;
  *((_QWORD *)v83 + 3) = v88;
  v83[32] = v89;
  sub_1002BD420(v90, v91, v92, v93, v94);
  v95 = v109[8];
  v96 = (char *)a1 + v95;
  v97 = (char *)v110 + v95;
  v98 = *(_QWORD *)v97;
  v99 = *((_QWORD *)v97 + 1);
  LOBYTE(v87) = v97[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v97, v99);
  v100 = *(_QWORD *)v96;
  v101 = *((_QWORD *)v96 + 1);
  *(_QWORD *)v96 = v98;
  *((_QWORD *)v96 + 1) = v99;
  v96[16] = v87;
  sub_1000A6174(v100, v101);
  v102 = v109[9];
  v103 = (char *)a1 + v102;
  v104 = (char *)v110 + v102;
  *(_QWORD *)((char *)a1 + v102) = *(_QWORD *)((char *)v110 + v102);
  swift_retain();
  swift_release();
  *((_QWORD *)v103 + 1) = *((_QWORD *)v104 + 1);
  swift_retain();
  swift_release();
  v105 = v109[10];
  v106 = (_QWORD *)((char *)a1 + v105);
  v107 = (_QWORD *)((char *)v110 + v105);
  *v106 = *v107;
  v106[1] = v107[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10083A8BC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(sub_100007E8C(&qword_1011C2BB8) + 32);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  *(_QWORD *)((char *)v7 + v10) = *(_QWORD *)&v8[v10];
  v13 = (int *)type metadata accessor for Library.Context(0);
  v14 = v13[5];
  v15 = &v11[v14];
  v16 = &v12[v14];
  v17 = type metadata accessor for Album(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = v13[6];
  v21 = &v11[v20];
  v22 = &v12[v20];
  v23 = type metadata accessor for Artist(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v26 = v13[7];
  v27 = &v11[v26];
  v28 = &v12[v26];
  v29 = type metadata accessor for Composer(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v32 = v13[8];
  v33 = &v11[v32];
  v34 = &v12[v32];
  v35 = type metadata accessor for Genre(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = sub_100007E8C(&qword_10119ED08);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v38 = v13[9];
  v39 = &v11[v38];
  v40 = &v12[v38];
  v41 = type metadata accessor for Playlist(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v44 = v13[10];
  v45 = &v11[v44];
  v46 = &v12[v44];
  v47 = type metadata accessor for TVShow(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v50 = v13[11];
  v51 = &v11[v50];
  v52 = &v12[v50];
  v53 = type metadata accessor for TVSeason(0);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    v55 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  v11[v13[12]] = v12[v13[12]];
  v11[v13[13]] = v12[v13[13]];
  v11[v13[14]] = v12[v13[14]];
  *(_OWORD *)&v11[v13[15]] = *(_OWORD *)&v12[v13[15]];
  *(_QWORD *)&v11[v13[16]] = *(_QWORD *)&v12[v13[16]];
  v11[v13[17]] = v12[v13[17]];
  v56 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = *((_OWORD *)v58 + 1);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *((_OWORD *)v57 + 1) = v59;
  v57[32] = v58[32];
  v60 = a3[8];
  v61 = a3[9];
  v62 = (char *)a1 + v60;
  v63 = (char *)a2 + v60;
  *(_OWORD *)v62 = *(_OWORD *)v63;
  v62[16] = v63[16];
  *(_OWORD *)((char *)a1 + v61) = *(_OWORD *)((char *)a2 + v61);
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  return a1;
}

_QWORD *sub_10083AD84(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(char *, uint64_t, uint64_t);
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  int *v110;
  _QWORD *v111;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v110 = a3;
  v111 = a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  swift_release();
  *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
  swift_release();
  v10 = *(int *)(sub_100007E8C(&qword_1011C2BB8) + 32);
  v11 = &v8[v10];
  v12 = &v9[v10];
  *(_QWORD *)&v8[v10] = *(_QWORD *)&v9[v10];
  swift_release();
  v13 = (int *)type metadata accessor for Library.Context(0);
  v14 = v13[5];
  v15 = &v11[v14];
  v16 = &v12[v14];
  v17 = type metadata accessor for Album(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    v22 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_7:
  v23 = v13[6];
  v24 = &v11[v23];
  v25 = &v12[v23];
  v26 = type metadata accessor for Artist(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
LABEL_12:
    v31 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v24, v25, v26);
LABEL_13:
  v32 = v13[7];
  v33 = &v11[v32];
  v34 = &v12[v32];
  v35 = type metadata accessor for Composer(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37(v34, 1, v35);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v35);
LABEL_18:
    v40 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v33, v34, v35);
LABEL_19:
  v41 = v13[8];
  v42 = &v11[v41];
  v43 = &v12[v41];
  v44 = type metadata accessor for Genre(0);
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v47 = v46(v42, 1, v44);
  v48 = v46(v43, 1, v44);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
LABEL_24:
    v49 = sub_100007E8C(&qword_10119ED08);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v42, v43, v44);
LABEL_25:
  v50 = v13[9];
  v51 = &v11[v50];
  v52 = &v12[v50];
  v53 = type metadata accessor for Playlist(0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 1, v53);
  v57 = v55(v52, 1, v53);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v53);
LABEL_30:
    v58 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v54 + 40))(v51, v52, v53);
LABEL_31:
  v59 = v13[10];
  v60 = &v11[v59];
  v61 = &v12[v59];
  v62 = type metadata accessor for TVShow(0);
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
  v65 = v64(v60, 1, v62);
  v66 = v64(v61, 1, v62);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v62);
LABEL_36:
    v67 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v63 + 40))(v60, v61, v62);
LABEL_37:
  v68 = v13[11];
  v69 = &v11[v68];
  v70 = &v12[v68];
  v71 = type metadata accessor for TVSeason(0);
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48);
  v74 = v73(v69, 1, v71);
  v75 = v73(v70, 1, v71);
  if (!v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 40))(v69, v70, v71);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v72 + 8))(v69, v71);
    goto LABEL_42;
  }
  if (v75)
  {
LABEL_42:
    v76 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v69, v70, v71);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
LABEL_43:
  v11[v13[12]] = v12[v13[12]];
  v11[v13[13]] = v12[v13[13]];
  v11[v13[14]] = v12[v13[14]];
  v77 = v13[15];
  v78 = &v11[v77];
  v79 = &v12[v77];
  v81 = *(_QWORD *)v79;
  v80 = *((_QWORD *)v79 + 1);
  *(_QWORD *)v78 = v81;
  *((_QWORD *)v78 + 1) = v80;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v11[v13[16]] = *(_QWORD *)&v12[v13[16]];
  swift_bridgeObjectRelease();
  v11[v13[17]] = v12[v13[17]];
  v82 = v110[6];
  v83 = (char *)a1 + v82;
  v84 = (char *)v111 + v82;
  *v83 = *v84;
  *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
  swift_release();
  v85 = v110[7];
  v86 = (char *)a1 + v85;
  v87 = (char *)v111 + v85;
  v88 = v87[32];
  v89 = *(_QWORD *)v86;
  v90 = *((_QWORD *)v86 + 1);
  v91 = *((_QWORD *)v86 + 2);
  v92 = *((_QWORD *)v86 + 3);
  v93 = v86[32];
  v94 = *((_OWORD *)v87 + 1);
  *(_OWORD *)v86 = *(_OWORD *)v87;
  *((_OWORD *)v86 + 1) = v94;
  v86[32] = v88;
  sub_1002BD420(v89, v90, v91, v92, v93);
  v95 = v110[8];
  v96 = (char *)a1 + v95;
  v97 = (char *)v111 + v95;
  v98 = v97[16];
  v99 = *(_QWORD *)v96;
  v100 = *((_QWORD *)v96 + 1);
  *(_OWORD *)v96 = *(_OWORD *)v97;
  v96[16] = v98;
  sub_1000A6174(v99, v100);
  v101 = v110[9];
  v102 = (char *)a1 + v101;
  v103 = (char *)v111 + v101;
  *(_QWORD *)((char *)a1 + v101) = *(_QWORD *)((char *)v111 + v101);
  swift_release();
  *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
  swift_release();
  v104 = v110[10];
  v105 = (_QWORD *)((char *)a1 + v104);
  v106 = (_QWORD *)((char *)v111 + v104);
  v108 = *v106;
  v107 = v106[1];
  *v105 = v108;
  v105[1] = v107;
  swift_release();
  return a1;
}

uint64_t sub_10083B4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10083B4F0);
}

uint64_t sub_10083B4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C2BB8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_10083B570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10083B57C);
}

uint64_t sub_10083B57C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C2BB8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_10083B5F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_100ED21A8;
  sub_1000E3A44(319, (unint64_t *)&unk_1011CBCD0, type metadata accessor for Library.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100ED2230;
    v4[3] = "!";
    v4[4] = &unk_100ED2218;
    v4[5] = &unk_100ED21A8;
    v4[6] = &unk_100ED21A8;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

uint64_t sub_10083B6A0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE7DC, 1);
}

void *sub_10083B6B0@<X0>(_QWORD *a1@<X8>, __n128 a2@<Q0>)
{
  void *result;

  result = sub_100831B2C(a2);
  *a1 = result;
  return result;
}

uint64_t sub_10083B6D8()
{
  uint64_t v0;
  __n128 v1;

  v0 = swift_bridgeObjectRetain();
  return sub_100831CF8(v0, v1);
}

uint64_t sub_10083B700@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100826AEC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10083B708()
{
  return EnvironmentValues.editMode.getter();
}

unint64_t sub_10083B72C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011CBD90;
  if (!qword_1011CBD90)
  {
    v1 = sub_100044B54(&qword_1011CBD30);
    v2[0] = sub_100044B54(&qword_1011CBD20);
    v2[1] = sub_100049F28(&qword_1011CBD78, &qword_1011CBD20, (uint64_t)&protocol conformance descriptor for List<A, B>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
    sub_100049F28(&qword_1011CBD98, &qword_1011CBD88, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBD90);
  }
  return result;
}

void sub_10083B7F8(double *a1@<X8>)
{
  *a1 = EnvironmentValues.defaultMinListRowHeight.getter();
}

uint64_t sub_10083B820(double *a1)
{
  return EnvironmentValues.defaultMinListRowHeight.setter(*a1);
}

uint64_t sub_10083B844@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100827D64(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10083B84C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  void *v8;

  result = qword_1011CBDA8;
  if (!qword_1011CBDA8)
  {
    v1 = sub_100044B54(&qword_1011CBD48);
    v2 = sub_100044B54(&qword_1011CBD38);
    v5 = sub_100044B54(&qword_1011CBD30);
    v6 = (_QWORD *)type metadata accessor for SidebarListStyle(255);
    v7 = sub_10083B72C();
    v8 = &protocol witness table for SidebarListStyle;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
    v4 = sub_100055B68();
    v5 = v2;
    v6 = &type metadata for String;
    v7 = OpaqueTypeConformance2;
    v8 = (void *)v4;
    swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011CBDB0, &qword_1011CBDB8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBDA8);
  }
  return result;
}

double sub_10083B958(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s8MenuViewVMa(0) - 8) + 80);
  return sub_1008287F4(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_10083B9A8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v1 = (int *)_s8MenuViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v31 = *(_QWORD *)(v2 + 64);
  v4 = v0 + v3;
  swift_release();
  v5 = v0 + v3 + v1[5];
  swift_release();
  swift_release();
  v6 = v5 + *(int *)(sub_100007E8C(&qword_1011C2BB8) + 32);
  swift_release();
  v7 = (int *)type metadata accessor for Library.Context(0);
  v8 = v6 + v7[5];
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v6 + v7[6];
  v12 = type metadata accessor for Artist(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v11, v12);
  v14 = v6 + v7[7];
  v15 = type metadata accessor for Composer(0);
  v16 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v14, v15);
  v17 = v6 + v7[8];
  v18 = type metadata accessor for Genre(0);
  v19 = *(_QWORD *)(v18 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v17, v18);
  v20 = v6 + v7[9];
  v21 = type metadata accessor for Playlist(0);
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v20, v21);
  v23 = v6 + v7[10];
  v24 = type metadata accessor for TVShow(0);
  v25 = *(_QWORD *)(v24 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v23, v24);
  v26 = v6 + v7[11];
  v27 = type metadata accessor for TVSeason(0);
  v28 = *(_QWORD *)(v27 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v29 = v4 + v1[7];
  sub_1002BD420(*(_QWORD *)v29, *(_QWORD *)(v29 + 8), *(_QWORD *)(v29 + 16), *(_QWORD *)(v29 + 24), *(_BYTE *)(v29 + 32));
  sub_1000A6174(*(_QWORD *)(v4 + v1[8]), *(_QWORD *)(v4 + v1[8] + 8));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v3 + v31);
}

uint64_t sub_10083BCB0(uint64_t a1, uint64_t a2)
{
  return sub_10083BCC4(a1, a2, _s8MenuViewVMa, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1008288CC);
}

uint64_t sub_10083BCC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return a4(a1, a2, v4 + ((v7 + 16) & ~v7));
}

uint64_t sub_10083BD24(uint64_t a1, uint64_t a2)
{
  return sub_10083BCC4(a1, a2, _s8MenuViewVMa, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100828F88);
}

unint64_t sub_10083BD38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBDD8;
  if (!qword_1011CBDD8)
  {
    v1 = sub_100044B54(&qword_1011B3990);
    sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, &qword_1011CBDD8);
  }
  return result;
}

uint64_t sub_10083BDB4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v1 = (int *)_s8MenuViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v31 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  v4 = v0 + v3;
  swift_release();
  v5 = v0 + v3 + v1[5];
  swift_release();
  swift_release();
  v6 = v5 + *(int *)(sub_100007E8C(&qword_1011C2BB8) + 32);
  swift_release();
  v7 = (int *)type metadata accessor for Library.Context(0);
  v8 = v6 + v7[5];
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v6 + v7[6];
  v12 = type metadata accessor for Artist(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v11, v12);
  v14 = v6 + v7[7];
  v15 = type metadata accessor for Composer(0);
  v16 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v14, v15);
  v17 = v6 + v7[8];
  v18 = type metadata accessor for Genre(0);
  v19 = *(_QWORD *)(v18 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v17, v18);
  v20 = v6 + v7[9];
  v21 = type metadata accessor for Playlist(0);
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v20, v21);
  v23 = v6 + v7[10];
  v24 = type metadata accessor for TVShow(0);
  v25 = *(_QWORD *)(v24 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v23, v24);
  v26 = v6 + v7[11];
  v27 = type metadata accessor for TVSeason(0);
  v28 = *(_QWORD *)(v27 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v29 = v4 + v1[7];
  sub_1002BD420(*(_QWORD *)v29, *(_QWORD *)(v29 + 8), *(_QWORD *)(v29 + 16), *(_QWORD *)(v29 + 24), *(_BYTE *)(v29 + 32));
  sub_1000A6174(*(_QWORD *)(v4 + v1[8]), *(_QWORD *)(v4 + v1[8] + 8));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v3 + v31);
}

uint64_t sub_10083C0CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s8MenuViewVMa(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1011CBDE4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10005AEE4;
  return sub_100828B28(a1, v5, v6, v7, v8);
}

unint64_t sub_10083C160()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = qword_1011CBE30;
  if (!qword_1011CBE30)
  {
    v1 = sub_100044B54(&qword_1011CBE28);
    v4 = sub_100044B54(&qword_1011CBE18);
    v5 = sub_100049F28(&qword_1011CBE38, &qword_1011CBE18, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v2 = sub_100044B54(&qword_1011CBE08);
    v3 = sub_100049F28(&qword_1011CBE40, &qword_1011CBE08, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    v4 = v2;
    v5 = v3;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBE30);
  }
  return result;
}

double sub_10083C25C@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1008285C0(*(uint64_t **)(v1 + 16), a1);
}

uint64_t _s8MenuViewV8MoreMenuVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011CBFB0, (uint64_t)&_s8MenuViewV8MoreMenuVMn);
}

uint64_t sub_10083C278@<X0>(uint64_t *a1@<X8>)
{
  return sub_100828540(a1);
}

unint64_t sub_10083C280()
{
  unint64_t result;

  result = qword_1011CBE50;
  if (!qword_1011CBE50)
  {
    result = swift_getWitnessTable(&unk_100ED2AFC, &_s8MenuViewV23CloudLibraryLoadingViewVN);
    atomic_store(result, (unint64_t *)&qword_1011CBE50);
  }
  return result;
}

uint64_t sub_10083C2C4@<X0>(uint64_t a1@<X8>)
{
  return sub_100828488(a1);
}

unint64_t sub_10083C2CC()
{
  unint64_t result;

  result = qword_1011CBE58;
  if (!qword_1011CBE58)
  {
    result = swift_getWitnessTable(&unk_100ED2AAC, &_s8MenuViewV24EnableCloudLibraryButtonVN);
    atomic_store(result, (unint64_t *)&qword_1011CBE58);
  }
  return result;
}

uint64_t sub_10083C31C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s8MenuViewVMa(0) - 8) + 80);
  return sub_1008277A0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_10083C368()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBEA0;
  if (!qword_1011CBEA0)
  {
    v1 = sub_100044B54(&qword_1011CBE90);
    sub_10083C3CC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBEA0);
  }
  return result;
}

unint64_t sub_10083C3CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBEA8;
  if (!qword_1011CBEA8)
  {
    v1 = sub_100044B54(&qword_1011CBB48);
    sub_100838D04();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBEA8);
  }
  return result;
}

uint64_t sub_10083C450()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10083C474(uint64_t a1)
{
  uint64_t v1;

  return sub_10082CD18(a1, v1);
}

unint64_t sub_10083C47C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBED8;
  if (!qword_1011CBED8)
  {
    v1 = sub_100044B54(&qword_1011CBED0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBED8);
  }
  return result;
}

unint64_t sub_10083C4D8(unint64_t result)
{
  if (result >= 2)
    return swift_release(result);
  return result;
}

unint64_t sub_10083C4E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBF28;
  if (!qword_1011CBF28)
  {
    v1 = sub_100044B54(&qword_1011CBF10);
    sub_10083C554();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBF28);
  }
  return result;
}

unint64_t sub_10083C554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBF30;
  if (!qword_1011CBF30)
  {
    v1 = sub_100044B54(&qword_1011CBEF8);
    sub_10083C5C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBF30);
  }
  return result;
}

unint64_t sub_10083C5C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBF38;
  if (!qword_1011CBF38)
  {
    v1 = sub_100044B54(&qword_1011CBEF0);
    sub_10083C644();
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBF38);
  }
  return result;
}

unint64_t sub_10083C644()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CBF40;
  if (!qword_1011CBF40)
  {
    v1 = sub_100044B54(&qword_1011CBEE8);
    sub_100048748((unint64_t *)&qword_1011CAA18, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressView, (uint64_t)&protocol conformance descriptor for CircularProgressView);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CBF40);
  }
  return result;
}

uint64_t sub_10083C6E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accentColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10083C710(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.accentColor.setter(v1);
}

uint64_t *sub_10083C738(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(sub_100007E8C(&qword_1011CBD80) + 32);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v12 = type metadata accessor for EditMode(0, v11);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = a3[5];
    v14 = a3[6];
    v15 = (uint64_t *)((char *)v7 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v15[2] = v16[2];
    v18 = (char *)v7 + v14;
    v19 = (char *)a2 + v14;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v18[16] = v19[16];
    v21 = a3[7];
    v22 = a3[8];
    v23 = (uint64_t *)((char *)v7 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (uint64_t *)((char *)v7 + v22);
    v27 = (uint64_t *)((char *)a2 + v22);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v26[2] = v27[2];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v7;
}

double sub_10083C88C(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  double result;

  swift_release();
  swift_release();
  v2 = a1 + *(int *)(sub_100007E8C(&qword_1011CBD80) + 32);
  v4 = type metadata accessor for EditMode(0, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_10083C950(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(sub_100007E8C(&qword_1011CBD80) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v11 = type metadata accessor for EditMode(0, v10);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
  v12 = a3[5];
  v13 = a3[6];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v14[2] = v15[2];
  v17 = (char *)a1 + v13;
  v18 = (char *)a2 + v13;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v17[16] = v18[16];
  v20 = a3[7];
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v20);
  v23 = (_QWORD *)((char *)a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)((char *)a1 + v21);
  v26 = (_QWORD *)((char *)a2 + v21);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_10083CA78(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(sub_100007E8C(&qword_1011CBD80) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v10 = type metadata accessor for EditMode(0, v9);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v7, v8, v10);
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_retain();
  swift_release();
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  swift_retain();
  swift_release();
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  swift_retain();
  swift_release();
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_retain();
  swift_release();
  v15[16] = v16[16];
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_retain();
  swift_release();
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (char *)a2 + v20;
  *v21 = *(_QWORD *)((char *)a2 + v20);
  v21[1] = *(_QWORD *)((char *)a2 + v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[2] = *((_QWORD *)v22 + 2);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_10083CC20(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(sub_100007E8C(&qword_1011CBD80) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v11 = type metadata accessor for EditMode(0, v10);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
  v12 = a3[5];
  v13 = a3[6];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  v16 = *(_OWORD *)v15;
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  *(_OWORD *)v14 = v16;
  v17 = (char *)a1 + v13;
  v18 = (char *)a2 + v13;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  v19 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  return a1;
}

_QWORD *sub_10083CCF0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = *(int *)(sub_100007E8C(&qword_1011CBD80) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v10 = type metadata accessor for EditMode(0, v9);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v7, v8, v10);
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  swift_release();
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_release();
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  swift_release();
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  swift_release();
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_release();
  v15[16] = v16[16];
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_release();
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v23[2] = v24[2];
  swift_release();
  return a1;
}

uint64_t sub_10083CE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10083CE44);
}

uint64_t sub_10083CE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100007E8C(&qword_1011CBD80);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10083CEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10083CED4);
}

uint64_t sub_10083CED4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C(&qword_1011CBD80);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_10083CF54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_1000E3A44(319, (unint64_t *)&unk_1011CBFC0, (uint64_t (*)(uint64_t))&type metadata accessor for EditMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100ED2A40;
    v4[2] = &unk_100ED2A58;
    v4[3] = &unk_100ED21A8;
    v4[4] = &unk_100ED2A40;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

ValueMetadata *_s8MenuViewV23CloudLibraryLoadingViewVMa()
{
  return &_s8MenuViewV23CloudLibraryLoadingViewVN;
}

uint64_t _s8MenuViewV24EnableCloudLibraryButtonVwxx(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t _s8MenuViewV24EnableCloudLibraryButtonVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t _s8MenuViewV24EnableCloudLibraryButtonVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v6);
  return a1;
}

uint64_t _s8MenuViewV24EnableCloudLibraryButtonVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v6);
  return a1;
}

ValueMetadata *_s8MenuViewV24EnableCloudLibraryButtonVMa()
{
  return &_s8MenuViewV24EnableCloudLibraryButtonVN;
}

uint64_t sub_10083D138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  void *v14;

  v0 = sub_100044B54(&qword_1011CBD60);
  v1 = sub_100044B54(&qword_1011B3990);
  v2 = sub_100044B54(&qword_1011CBD58);
  v3 = type metadata accessor for MusicLibrary(255);
  v4 = sub_100044B54(&qword_1011CBD50);
  v11 = sub_100044B54(&qword_1011CBD48);
  v12 = (void *)sub_100044B54(&qword_1011CBDA0);
  v13 = sub_10083B84C();
  v14 = (void *)sub_100049F28(&qword_1011CBDC0, &qword_1011CBDA0, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v11 = v4;
  v12 = &type metadata for Bool;
  v13 = OpaqueTypeConformance2;
  v14 = &protocol witness table for Bool;
  v6 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v7 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  v11 = v2;
  v12 = (void *)v3;
  v13 = v6;
  v14 = (void *)v7;
  v8 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v9 = sub_10083BD38();
  v11 = v0;
  v12 = (void *)v1;
  v13 = v8;
  v14 = (void *)v9;
  return swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_10083D2B0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE854, 1);
}

uint64_t sub_10083D2C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE82C, 1);
}

uint64_t sub_10083D2D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE804, 1);
}

uint64_t sub_10083D2E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100829E60(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10083D2F4(uint64_t a1, uint64_t a2)
{
  return sub_10083BCC4(a1, a2, _s8MenuViewV8MoreMenuVMa, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10082AB40);
}

unint64_t sub_10083D308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC060;
  if (!qword_1011CC060)
  {
    v1 = sub_100044B54(&qword_1011CC020);
    sub_10083D38C();
    sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC060);
  }
  return result;
}

unint64_t sub_10083D38C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = qword_1011CC068;
  if (!qword_1011CC068)
  {
    v1 = sub_100044B54(&qword_1011CC008);
    v2 = sub_100044B54(&qword_1011CC018);
    v3 = type metadata accessor for BorderedButtonStyle(255);
    v6 = sub_100044B54(&qword_1011CC010);
    v7 = type metadata accessor for ButtonMenuStyle(255);
    v8 = sub_100049F28(&qword_1011CC050, &qword_1011CC010, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    v9 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v5 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
    v6 = v2;
    v7 = v3;
    v8 = OpaqueTypeConformance2;
    v9 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC068);
  }
  return result;
}

uint64_t sub_10083D4FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;

  v1 = *(_QWORD *)(_s8MenuViewV8MoreMenuVMa(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = v0 + v2;
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(sub_100007E8C(&qword_1011CBD80) + 32);
  v7 = type metadata accessor for EditMode(0, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject(v0, v3);
}

uint64_t sub_10083D5FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s8MenuViewV8MoreMenuVMa(0) - 8) + 80);
  return sub_10082AC3C(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_10083D64C()
{
  return sub_10083D690((uint64_t)sub_10083D658);
}

uint64_t sub_10083D658(__n128 a1)
{
  uint64_t v1;

  return sub_10082AA54(a1, *(_QWORD *)(v1 + 16), (unsigned int *)&enum case for EditMode.inactive(_:));
}

uint64_t sub_10083D678@<X0>(uint64_t a1@<X8>)
{
  return sub_10082A510(a1);
}

uint64_t sub_10083D684()
{
  return sub_10083D690((uint64_t)sub_10083D6D0);
}

uint64_t sub_10083D690(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(_s8MenuViewV8MoreMenuVMa(0) - 8) + 80);
  return sub_10082A9F8(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_10083D6D0(__n128 a1)
{
  uint64_t v1;

  return sub_10082AA54(a1, *(_QWORD *)(v1 + 16), &enum case for EditMode.active(_:));
}

unint64_t sub_10083D6F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC0D8;
  if (!qword_1011CC0D8)
  {
    v1 = sub_100044B54(&qword_1011CC0C8);
    sub_10083D774();
    sub_100049F28(&qword_1011CC100, &qword_1011CC108, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC0D8);
  }
  return result;
}

unint64_t sub_10083D774()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC0E0;
  if (!qword_1011CC0E0)
  {
    v1 = sub_100044B54(&qword_1011CC0E8);
    sub_100049F28(&qword_1011CC0F0, &qword_1011CC0F8, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC0E0);
  }
  return result;
}

uint64_t sub_10083D7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[9];
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 40);
  v4[1] = *(_BYTE *)(v0 + 32);
  v5 = v1;
  v4[0] = 1;
  v2 = sub_100007E8C(&qword_1011C4DD0);
  return State.wrappedValue.setter(v4, v2);
}

uint64_t sub_10083D850@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_10082C05C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

unint64_t sub_10083D860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC140;
  if (!qword_1011CC140)
  {
    v1 = sub_100044B54(&qword_1011CC130);
    sub_10083D8E4();
    sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC140);
  }
  return result;
}

unint64_t sub_10083D8E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011CC148;
  if (!qword_1011CC148)
  {
    v1 = sub_100044B54(&qword_1011CC128);
    v2[0] = sub_100044B54(&qword_1011CA7A0);
    v2[1] = type metadata accessor for BorderedButtonStyle(255);
    v2[2] = sub_100049F28(&qword_1011CA7B8, &qword_1011CA7A0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC148);
  }
  return result;
}

uint64_t sub_10083D9F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10083DA1C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)v1 + 216);
  swift_retain(v1);
  v2(0, 0);
  return swift_release(v1);
}

unint64_t sub_10083DA5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  void *v7;

  result = qword_1011CC168;
  if (!qword_1011CC168)
  {
    v1 = sub_100044B54(&qword_1011CC170);
    sub_100049F28(&qword_1011C5140, &qword_10119DFD8, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2 = sub_100044B54(&qword_1011CC028);
    v4 = sub_100044B54(&qword_1011CC020);
    v5 = (_QWORD *)type metadata accessor for MusicLibrary(255);
    v6 = sub_10083D308();
    v7 = (void *)sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v4 = v2;
    v5 = &type metadata for String;
    v6 = OpaqueTypeConformance2;
    v7 = &protocol witness table for String;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC168);
  }
  return result;
}

uint64_t sub_10083DB94()
{
  _QWORD v1[8];

  v1[0] = sub_100044B54(&qword_1011CC130);
  v1[1] = &type metadata for String;
  v1[2] = sub_100044B54(&qword_1011CC138);
  v1[3] = &type metadata for Text;
  v1[4] = sub_10083D860();
  v1[5] = sub_100055B68();
  v1[6] = sub_100049F28(&qword_1011CC150, &qword_1011CC138, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v1[7] = &protocol witness table for Text;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.alert<A, B, C>(_:isPresented:actions:message:)>>, 1);
}

uint64_t sub_10083DC58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;

  v20 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v21 = (int *)_s16ArtistDetailViewVMa(0);
  *(_QWORD *)(a9 + v21[5]) = a2;
  sub_100065228(a3, a9 + v21[6], &qword_10119EE98);
  v22 = a9 + v21[7];
  *(_QWORD *)v22 = a4;
  *(_QWORD *)(v22 + 8) = a5;
  *(_BYTE *)(v22 + 16) = 0;
  v23 = a9 + v21[8];
  *(_QWORD *)v23 = a6;
  *(_QWORD *)(v23 + 8) = a7;
  *(_BYTE *)(v23 + 16) = 0;
  sub_100065228(a8, a9 + v21[9], (uint64_t *)&unk_1011C72A0);
  v24 = a9 + v21[10];
  *(_QWORD *)v24 = swift_getKeyPath(&unk_100ED2BD0);
  *(_QWORD *)(v24 + 8) = 0;
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_BYTE *)(v24 + 32) = 0;
  v25 = (_QWORD *)(a9 + v21[11]);
  *v25 = a10;
  v25[1] = a11;
  v26 = a9 + v21[12];
  *(_QWORD *)v26 = swift_getKeyPath(&unk_100ED2BF8);
  *(_BYTE *)(v26 + 8) = 0;
  v27 = (_QWORD *)(a9 + v21[13]);
  v28 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v29 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v27 = EnvironmentObject.init()(v28, v29);
  v27[1] = v30;
  v31 = (_QWORD *)(a9 + v21[14]);
  v32 = type metadata accessor for NoticePresenter(0);
  v33 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v31 = EnvironmentObject.init()(v32, v33);
  v31[1] = v34;
  v35 = a9 + v21[15];
  *(_QWORD *)v35 = sub_1008419B0;
  *(_QWORD *)(v35 + 8) = 0;
  *(_BYTE *)(v35 + 16) = 0;
  v36 = (_QWORD *)(a9 + v21[16]);
  v37 = type metadata accessor for NavigationPusher();
  v38 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v36 = EnvironmentObject.init()(v37, v38);
  v36[1] = v39;
  v40 = (_QWORD *)(a9 + v21[17]);
  v41 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v42 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v40 = EnvironmentObject.init()(v41, v42);
  v40[1] = v43;
  v44 = (_QWORD *)(a9 + v21[18]);
  v45 = type metadata accessor for TabSelectionManager(0);
  v46 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v44 = EnvironmentObject.init()(v45, v46);
  v44[1] = v47;
  v48 = a9 + v21[19];
  *(_QWORD *)v48 = swift_getKeyPath(&unk_100ED2C20);
  *(_QWORD *)(v48 + 8) = 0;
  *(_BYTE *)(v48 + 16) = 0;
  v49 = a9 + v21[20];
  result = swift_getKeyPath(&unk_100ED2C48);
  *(_QWORD *)v49 = result;
  *(_QWORD *)(v49 + 8) = 0;
  *(_BYTE *)(v49 + 16) = 0;
  return result;
}

uint64_t _s16ArtistDetailViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CC1D0, (uint64_t)&_s16ArtistDetailViewVMn);
}

uint64_t sub_10083DF44@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t (*a8)(_QWORD, _QWORD)@<X7>, uint64_t a9@<X8>)
{
  char v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t result;

  *(_QWORD *)(a9 + 8) = 0;
  *(_QWORD *)(a9 + 16) = 0;
  v14 = a1 & 1;
  v15 = (int *)sub_100007E8C(a5);
  v16 = a9 + v15[10];
  v17 = sub_100007E8C(a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = (_QWORD *)(a9 + v15[11]);
  v19 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v20 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v18 = EnvironmentObject.init()(v19, v20);
  v18[1] = v21;
  v22 = (_QWORD *)(a9 + v15[12]);
  v23 = type metadata accessor for TabSelectionManager(0);
  v24 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v22 = EnvironmentObject.init()(v23, v24);
  v22[1] = v25;
  v26 = (_QWORD *)(a9 + v15[13]);
  v27 = sub_100007E8C(&qword_10119CBF8);
  v28 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v26 = EnvironmentObject.init()(v27, v28);
  v26[1] = v29;
  v30 = a9 + v15[14];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100ED2BF8);
  *(_BYTE *)(v30 + 8) = 0;
  v31 = (_QWORD *)(a9 + v15[15]);
  v32 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v33 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v31 = EnvironmentObject.init()(v32, v33);
  v31[1] = v34;
  v35 = a9 + v15[16];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100ED2C20);
  *(_QWORD *)(v35 + 8) = 0;
  *(_BYTE *)(v35 + 16) = 0;
  v36 = a9 + v15[17];
  *(_QWORD *)v36 = swift_getKeyPath(&unk_100ED2C48);
  *(_QWORD *)(v36 + 8) = 0;
  *(_BYTE *)(v36 + 16) = 0;
  v37 = (_QWORD *)(a9 + v15[18]);
  *v37 = swift_getKeyPath(&unk_100ED2DF0);
  v38 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  swift_storeEnumTagMultiPayload(v37, v38, 0);
  sub_1000A5508(a2, v16, a7);
  *(_BYTE *)a9 = v14;
  result = a8(*(_QWORD *)(a9 + 8), *(_QWORD *)(a9 + 16));
  *(_QWORD *)(a9 + 8) = a3;
  *(_QWORD *)(a9 + 16) = a4;
  return result;
}

uint64_t sub_10083E198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v8 = &qword_1011C09B0;
  v9 = sub_100007E8C(&qword_1011C09B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v19 - v13;
  sub_10004A160(a1, (uint64_t)v11, &qword_1011C09B0);
  v15 = sub_100007E8C(&qword_1011B4D20);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) != 1)
  {
    v8 = &qword_1011B4D20;
    sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011B4D20);
    v17 = 0;
    v14[*(int *)(v15 + 40)] = 0;
  }
  sub_10004FF60((uint64_t)v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, v17, 1, v15);
  sub_100048AAC(a2, a3);
  return sub_10083DF44(0, (uint64_t)v14, a2, a3, &qword_1011C0BE8, &qword_1011B4D20, &qword_1011C09B0, sub_10004BA30, a4);
}

uint64_t sub_10083E30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v8 = &qword_1011CC348;
  v9 = sub_100007E8C(&qword_1011CC348);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v19 - v13;
  sub_10004A160(a1, (uint64_t)v11, &qword_1011CC348);
  v15 = sub_100007E8C((uint64_t *)&unk_1011C82D0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) != 1)
  {
    v8 = (uint64_t *)&unk_1011C82D0;
    sub_10004A160((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_1011C82D0);
    v17 = 0;
    v14[*(int *)(v15 + 40)] = 0;
  }
  sub_10004FF60((uint64_t)v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, v17, 1, v15);
  sub_100048AAC(a2, a3);
  return sub_10083DF44(0, (uint64_t)v14, a2, a3, &qword_1011CC3E0, (uint64_t *)&unk_1011C82D0, &qword_1011CC348, sub_10004BA54, a4);
}

uint64_t sub_10083E480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v8 = &qword_1011CC348;
  v9 = sub_100007E8C(&qword_1011CC348);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v19 - v13;
  sub_10004A160(a1, (uint64_t)v11, &qword_1011CC348);
  v15 = sub_100007E8C((uint64_t *)&unk_1011C82D0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) != 1)
  {
    v8 = (uint64_t *)&unk_1011C82D0;
    sub_10004A160((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_1011C82D0);
    v14[*(int *)(v15 + 40)] = 1;
    v17 = 0;
  }
  sub_10004FF60((uint64_t)v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, v17, 1, v15);
  sub_100048AAC(a2, a3);
  return sub_10083DF44(1, (uint64_t)v14, a2, a3, &qword_1011CC3E0, (uint64_t *)&unk_1011C82D0, &qword_1011CC348, sub_10004BA54, a4);
}

double sub_10083E5F4@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;
  _OWORD v5[2];

  v2 = sub_1006DD910();
  EnvironmentValues.subscript.getter(v5, &_s29EnvironmentContainerInsetsKeyVN, &_s29EnvironmentContainerInsetsKeyVN, v2);
  result = *(double *)v5;
  v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
  return result;
}

uint64_t sub_10083E644(_OWORD *a1)
{
  __int128 v1;
  unint64_t v2;
  _OWORD v4[2];

  v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  v2 = sub_1006DD910();
  return EnvironmentValues.subscript.setter(v4, &_s29EnvironmentContainerInsetsKeyVN, &_s29EnvironmentContainerInsetsKeyVN, v2);
}

uint64_t sub_10083E698@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v16[3];
  char v17;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v2);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v16 - v6;
  *a1 = swift_getKeyPath(&unk_100ED2E18);
  v8 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(a1, v8, 0);
  v9 = (int *)_s11ArtistsViewVMa(0);
  v10 = (char *)a1 + v9[5];
  *(_QWORD *)v10 = sub_10083E854;
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 0;
  v11 = (char *)a1 + v9[6];
  *(_QWORD *)v11 = swift_getKeyPath(&unk_100ED2BD0);
  *((_QWORD *)v11 + 1) = 0;
  *((_QWORD *)v11 + 2) = 0;
  *((_QWORD *)v11 + 3) = 0;
  v11[32] = 0;
  v12 = v9[7];
  v17 = 0;
  v16[1] = 0;
  v16[2] = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  v13 = sub_1000A3BD4();
  *(_QWORD *)((char *)a1 + v12) = AppStorage.init<A>(wrappedValue:_:store:)(&v17, 0xD000000000000026, 0x8000000100E34F20, 0, &type metadata for Library.ContentFilterOption, v13);
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  sub_10004A160((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1011A3FB0);
  State.init(wrappedValue:)(v4, v2);
  return sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A3FB0);
}

uint64_t sub_10083E854()
{
  return sub_1008431CC(&qword_1011A3B20, (uint64_t (*)(_QWORD))&type metadata accessor for Artist, (uint64_t)&protocol witness table for Artist, &qword_1011A3B28);
}

uint64_t sub_10083E878@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double (**v27)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v32 = a1;
  v3 = _s11ArtistsViewVMa(0);
  v29 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v29 + 64);
  __chkstk_darwin(v3);
  v5 = sub_100007E8C(&qword_1011A3B10);
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011CC758);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = static VerticalAlignment.center.getter(v11);
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 0;
  v12 = sub_100007E8C(&qword_1011CC760);
  sub_10083EAC8(v2, (uint64_t)&v10[*(int *)(v12 + 44)]);
  v13 = v2 + *(int *)(v3 + 20);
  v14 = *(_QWORD *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v16 = *(unsigned __int8 *)(v13 + 16);
  v17 = sub_100007E8C(&qword_1011CC768);
  v18 = sub_100049F28(&qword_1011CC770, &qword_1011CC768, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  StateObject.wrappedValue.getter(v14, v15, v16, v17, v18);
  dispatch thunk of MusicAutoupdatingResponse.$response.getter(v19);
  swift_release();
  sub_10005B704(v2, (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), _s11ArtistsViewVMa);
  v20 = *(unsigned __int8 *)(v29 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_1010DE768, v21 + v4, v20 | 7);
  sub_10005B6C0((uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, _s11ArtistsViewVMa);
  v23 = v32;
  sub_10004A160((uint64_t)v10, v32, &qword_1011CC758);
  v24 = sub_100007E8C(&qword_1011CC778);
  v26 = v30;
  v25 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v23 + *(int *)(v24 + 52), v7, v31);
  v27 = (double (**)(uint64_t))(v23 + *(int *)(v24 + 56));
  *v27 = sub_100853AF8;
  v27[1] = (double (*)(uint64_t))v22;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v25);
  return sub_10004FF60((uint64_t)v10, &qword_1011CC758);
}

uint64_t sub_10083EAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t OpaqueTypeConformance2;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _OWORD *v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __n128 v151;
  _QWORD *v152;
  __int128 v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t KeyPath;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _OWORD *v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  void (*v191)(char *, char *, uint64_t);
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void (*v197)(char *, uint64_t);
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int v204;
  int v205;
  uint64_t v206;
  char *v207;
  uint64_t *v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  int v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  _QWORD *v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD v268[4];
  _OWORD v269[7];
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  _OWORD v277[2];
  char v278;
  _BYTE v279[48];

  v261 = a2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
  __chkstk_darwin(v3);
  v210 = (uint64_t *)((char *)&v206 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v5);
  v208 = (uint64_t *)((char *)&v206 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = _s16ArtistDetailViewVMa(0);
  __chkstk_darwin(v7);
  v213 = (uint64_t)&v206 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_100007E8C(&qword_1011CC790);
  __chkstk_darwin(v209);
  v218 = (uint64_t)&v206 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v211 = (uint64_t)&v206 - v11;
  __chkstk_darwin(v12);
  v215 = (uint64_t)&v206 - v13;
  v217 = type metadata accessor for Divider(0);
  v214 = *(_QWORD *)(v217 - 8);
  __chkstk_darwin(v217);
  v216 = (char *)&v206 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v212 = (char *)&v206 - v16;
  v266 = type metadata accessor for Artist(0);
  v262 = *(_QWORD *)(v266 - 8);
  __chkstk_darwin(v266);
  v207 = (char *)&v206 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v258 = (char *)&v206 - v19;
  v20 = sub_100007E8C(&qword_1011CC798);
  __chkstk_darwin(v20);
  v259 = (char *)&v206 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v260 = (uint64_t)&v206 - v23;
  v24 = type metadata accessor for ToolbarItemPlacement(0);
  v255 = *(_QWORD *)(v24 - 8);
  v256 = v24;
  __chkstk_darwin(v24);
  v254 = (char *)&v206 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v252 = sub_100007E8C(&qword_1011CC7A0);
  __chkstk_darwin(v252);
  v251 = (uint64_t)&v206 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = sub_100007E8C(&qword_1011CC7A8);
  __chkstk_darwin(v250);
  v249 = (char *)&v206 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v28);
  v253 = (char *)&v206 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v244 = (uint64_t *)((char *)&v206 - v31);
  v248 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v248);
  v240 = (uint64_t)&v206 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v241 = (uint64_t)&v206 - v34;
  v35 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v236 = *(_QWORD *)(v35 - 8);
  v237 = v35;
  v36 = __chkstk_darwin(v35);
  v235 = (char *)&v206 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = type metadata accessor for ContentMarginPlacement(0, v36);
  v38 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v40 = (char *)&v206 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_1011CC7B0);
  v263 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v43 = (char *)&v206 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = sub_100007E8C(&qword_1011CC7B8);
  v264 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v220 = (char *)&v206 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = sub_100007E8C(&qword_1011CC7C0);
  v225 = *(_QWORD *)(v227 - 8);
  __chkstk_darwin(v227);
  v222 = (char *)&v206 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = sub_100007E8C(&qword_1011CC7C8);
  __chkstk_darwin(v226);
  v224 = (char *)&v206 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_1011CC7D0);
  v48 = *(_QWORD *)(v47 - 8);
  v230 = v47;
  v231 = v48;
  __chkstk_darwin(v47);
  v228 = (char *)&v206 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100007E8C(&qword_1011CC7D8);
  v51 = *(_QWORD *)(v50 - 8);
  v233 = v50;
  v234 = v51;
  __chkstk_darwin(v50);
  v229 = (char *)&v206 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = sub_100007E8C(&qword_1011CC7E0);
  __chkstk_darwin(v242);
  v232 = (char *)&v206 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100007E8C(&qword_1011CC7E8);
  __chkstk_darwin(v54);
  v238 = (char *)&v206 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  v239 = (uint64_t)&v206 - v57;
  v245 = sub_100007E8C(&qword_1011CC7F0);
  __chkstk_darwin(v245);
  v243 = (uint64_t)&v206 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = sub_100007E8C(&qword_1011CC7F8);
  __chkstk_darwin(v247);
  v257 = (uint64_t)&v206 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v246 = (char *)&v206 - v61;
  __chkstk_darwin(v62);
  v265 = (uint64_t)&v206 - v63;
  v268[2] = a1;
  v65 = static Axis.Set.vertical.getter(v64);
  v66 = sub_100007E8C(&qword_1011CC800);
  v67 = sub_10005610C(&qword_1011CC808, &qword_1011CC800, (void (*)(void))sub_100853F8C);
  v68 = ScrollView.init(_:showsIndicators:content:)(v65, 1, sub_100853F84, v268, v66, v67);
  v69 = static Edge.Set.top.getter(v68);
  static ContentMarginPlacement.scrollIndicators.getter(v69);
  v70 = sub_100049F28(&qword_1011CC830, &qword_1011CC7B0, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  View.contentMargins(_:_:for:)(v69, 0, 0, v40, v41, v70);
  v71 = *(void (**)(char *, uint64_t))(v38 + 8);
  v72 = v221;
  v71(v40, v221);
  v73 = (*(uint64_t (**)(char *, uint64_t))(v263 + 8))(v43, v41);
  v74 = static Edge.Set.bottom.getter(v73);
  v263 = _s11ArtistsViewVMa(0);
  v75 = a1 + *(int *)(v263 + 24);
  v76 = a1;
  v278 = *(_BYTE *)(v75 + 32);
  v77 = *(_OWORD *)(v75 + 16);
  v277[0] = *(_OWORD *)v75;
  v277[1] = v77;
  sub_100065228((uint64_t)v277, (uint64_t)v279, &qword_1011AA450);
  sub_10006FDA8((uint64_t)v279, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100154A5C);
  sub_100825088();
  v79 = v78;
  v80 = sub_10006FDA8((uint64_t)v277, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  static ContentMarginPlacement.scrollIndicators.getter(v80);
  *(_QWORD *)&v270 = v41;
  *((_QWORD *)&v270 + 1) = v70;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v270, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
  v83 = v222;
  v82 = v223;
  v84 = v220;
  View.contentMargins(_:_:for:)(v74, v79, 0, v40, v223, OpaqueTypeConformance2);
  v71(v40, v72);
  (*(void (**)(char *, uint64_t))(v264 + 8))(v84, v82);
  v85 = v263;
  v86 = *(int *)(v263 + 20);
  v267 = v76;
  v223 = v76 + v86;
  v87 = *(_QWORD *)(v76 + v86);
  v88 = *(_QWORD *)(v76 + v86 + 8);
  v89 = *(unsigned __int8 *)(v76 + v86 + 16);
  v90 = sub_100007E8C(&qword_1011CC768);
  v91 = sub_100049F28(&qword_1011CC770, &qword_1011CC768, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v220 = (char *)v91;
  v221 = v90;
  StateObject.wrappedValue.getter(v87, v88, v89, v90, v91);
  v264 = *(int *)(v85 + 28);
  AppStorage.projectedValue.getter(&v270, *(_QWORD *)(v76 + v264), &type metadata for Library.ContentFilterOption, v92);
  v93 = v270;
  v219 = v271;
  swift_retain();
  swift_retain();
  swift_retain();
  v95 = ObservedObject.init(wrappedValue:)(v94, v90, v91);
  v97 = v96;
  v98 = (uint64_t)v224;
  v99 = v225;
  v100 = v227;
  (*(void (**)(char *, char *, uint64_t))(v225 + 16))(v224, v83, v227);
  swift_release();
  swift_release();
  v101 = swift_release();
  v102 = v226;
  v103 = v98 + *(int *)(v226 + 36);
  *(_QWORD *)v103 = v95;
  *(_QWORD *)(v103 + 8) = v97;
  *(_OWORD *)(v103 + 16) = v93;
  *(_BYTE *)(v103 + 32) = v219;
  (*(void (**)(char *, uint64_t, __n128))(v99 + 8))(v83, v100, v101);
  v104 = LocalizedStringKey.init(stringLiteral:)(0x73747369747241, 0xE700000000000000);
  v105 = Text.init(_:tableName:bundle:comment:)(v104);
  v107 = v106;
  v109 = v108;
  v111 = v110 & 1;
  v112 = sub_100854010();
  v113 = v228;
  v114 = v102;
  View.navigationBarTitle(_:)(v105, v107, v111, v109, v102, v112);
  sub_100055BAC(v105, v107, v111);
  swift_bridgeObjectRelease();
  sub_10004FF60(v98, &qword_1011CC7C8);
  v115 = v235;
  v116 = v236;
  v117 = v237;
  (*(void (**)(char *, _QWORD, uint64_t))(v236 + 104))(v235, enum case for NavigationBarItem.TitleDisplayMode.large(_:), v237);
  *(_QWORD *)&v270 = v114;
  *((_QWORD *)&v270 + 1) = v112;
  v118 = swift_getOpaqueTypeConformance2(&v270, &opaque type descriptor for <<opaque return type of View.navigationBarTitle(_:)>>, 1);
  v119 = v229;
  v120 = v230;
  View.navigationBarTitleDisplayMode(_:)(v115, v230, v118);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v115, v117);
  v121 = v120;
  (*(void (**)(char *, uint64_t))(v231 + 8))(v113, v120);
  v122 = v240;
  v123 = v267;
  sub_10082460C(v240);
  v263 = v123 + *(int *)(v263 + 32);
  v237 = sub_100007E8C(&qword_1011CC688);
  v124 = v244;
  State.wrappedValue.getter(v244, v237);
  v125 = v241;
  Library.Context.with<A>(_:)((uint64_t)v124, v266, v241);
  sub_10004FF60((uint64_t)v124, (uint64_t *)&unk_1011A3FB0);
  sub_10005B748(v122, type metadata accessor for Library.Context);
  *(_QWORD *)&v270 = v121;
  *((_QWORD *)&v270 + 1) = v118;
  v126 = swift_getOpaqueTypeConformance2(&v270, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v128 = (uint64_t)v232;
  v127 = v233;
  View.libraryContext(_:)(v125, v233, v126);
  sub_10005B748(v125, type metadata accessor for Library.Context);
  (*(void (**)(char *, uint64_t))(v234 + 8))(v119, v127);
  v129 = v267;
  sub_10082460C(v122);
  AppStorage.wrappedValue.getter(&v270, *(_QWORD *)(v129 + v264), &type metadata for Library.ContentFilterOption);
  LOBYTE(v129) = v270;
  sub_10005B704(v122, v125, type metadata accessor for Library.Context);
  *(_BYTE *)(v125 + *(int *)(v248 + 56)) = v129;
  sub_10005B748(v122, type metadata accessor for Library.Context);
  v131 = v220;
  v130 = v221;
  StateObject.wrappedValue.getter(*(_QWORD *)v223, *(_QWORD *)(v223 + 8), *(unsigned __int8 *)(v223 + 16), v221, v220);
  v132 = (uint64_t)v249;
  v133 = v250;
  v134 = (uint64_t)&v249[*(int *)(v250 + 36)];
  sub_10005B704(v125, v134, type metadata accessor for Library.Context);
  v135 = (_QWORD *)(v134 + *(int *)(sub_100007E8C(&qword_1011CC850) + 36));
  swift_retain();
  *v135 = ObservedObject.init(wrappedValue:)(v136, v130, v131);
  v135[1] = v137;
  sub_10004A160(v128, v132, &qword_1011CC7E0);
  v138 = v251;
  sub_10004A160(v132, v251, &qword_1011CC7A8);
  swift_storeEnumTagMultiPayload(v138, v252, 0);
  v139 = sub_100854104();
  v140 = sub_100854188();
  v141 = (uint64_t)v238;
  _ConditionalContent<>.init(storage:)(v138, v133, v242, v139, v140);
  sub_10004FF60(v132, &qword_1011CC7A8);
  v142 = v239;
  sub_100065228(v141, v239, &qword_1011CC7E8);
  swift_release();
  sub_10005B748(v125, type metadata accessor for Library.Context);
  v143 = sub_10004FF60(v128, &qword_1011CC7E0);
  v144 = static Alignment.center.getter(v143);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v269, 0, 0, 0, 1, 0x407B400000000000, 0, 0, 1, 0, 1, 0, 1, v144, v145);
  v146 = v243;
  sub_10004A160(v142, v243, &qword_1011CC7E8);
  v147 = (_OWORD *)(v146 + *(int *)(v245 + 36));
  v148 = v269[5];
  v147[4] = v269[4];
  v147[5] = v148;
  v147[6] = v269[6];
  v149 = v269[1];
  *v147 = v269[0];
  v147[1] = v149;
  v150 = v269[3];
  v147[2] = v269[2];
  v147[3] = v150;
  sub_10004FF60(v142, &qword_1011CC7E8);
  v152 = AppStorage.projectedValue.getter(&v270, *(_QWORD *)(v267 + v264), &type metadata for Library.ContentFilterOption, v151);
  v153 = v270;
  LOBYTE(v138) = v271;
  v154 = v254;
  static ToolbarItemPlacement.navigationBarLeading.getter(v152);
  v155 = (uint64_t)v246;
  v156 = &v246[*(int *)(v247 + 36)];
  v157 = _s25SortFilterContentModifierVMa(0);
  v159 = v255;
  v158 = v256;
  (*(void (**)(char *, char *, uint64_t))(v255 + 16))(&v156[*(int *)(v157 + 24)], v154, v256);
  *v156 = 1;
  *(_OWORD *)(v156 + 8) = v153;
  v160 = v253;
  v156[24] = v138;
  sub_10004A160(v146, v155, &qword_1011CC7F0);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v154, v158);
  sub_10004FF60(v146, &qword_1011CC7F0);
  sub_100065228(v155, v265, &qword_1011CC7F8);
  State.wrappedValue.getter(v160, v237);
  v161 = v262;
  v162 = v266;
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v262 + 48))(v160, 1) == 1)
  {
    sub_10004FF60((uint64_t)v160, (uint64_t *)&unk_1011A3FB0);
    v163 = sub_100007E8C(&qword_1011CC870);
    v164 = v260;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v260, 1, 1, v163);
    v165 = (uint64_t)v259;
  }
  else
  {
    v166 = v258;
    v167 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v161 + 32))(v258, v160, v162);
    v168 = v212;
    Divider.init()(v167);
    v169 = (uint64_t)v207;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v207, v166, v162);
    KeyPath = swift_getKeyPath(&unk_100ED2E18);
    v171 = (uint64_t)v208;
    *v208 = KeyPath;
    v172 = sub_100007E8C(&qword_10119F030);
    swift_storeEnumTagMultiPayload(v171, v172, 0);
    v173 = swift_getKeyPath(&unk_100ED2DF0);
    v174 = (uint64_t)v210;
    *v210 = v173;
    v175 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    swift_storeEnumTagMultiPayload(v174, v175, 0);
    v176 = sub_100007E8C(&qword_10119F038);
    v177 = sub_100049F28(&qword_10119F040, &qword_10119F038, (uint64_t)&unk_100EC0A50);
    v178 = EnvironmentObject.init()(v176, v177);
    v179 = v213;
    v181 = sub_10083DC58(v169, 2, v171, (uint64_t)sub_1008431A8, 0, (uint64_t)sub_1008432B0, 0, v174, v213, v178, v180);
    v182 = static Alignment.center.getter(v181);
    LOBYTE(v205) = 1;
    LOBYTE(v204) = 1;
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v270, 0, 0, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v204, 0, v205, v182, v183);
    v184 = v211;
    sub_10005B704(v179, v211, _s16ArtistDetailViewVMa);
    v185 = (_OWORD *)(v184 + *(int *)(v209 + 36));
    v186 = v275;
    v185[4] = v274;
    v185[5] = v186;
    v185[6] = v276;
    v187 = v271;
    *v185 = v270;
    v185[1] = v187;
    v188 = v273;
    v185[2] = v272;
    v185[3] = v188;
    sub_10005B748(v179, _s16ArtistDetailViewVMa);
    v189 = v215;
    sub_100065228(v184, v215, &qword_1011CC790);
    v190 = v214;
    v191 = *(void (**)(char *, char *, uint64_t))(v214 + 16);
    v193 = v216;
    v192 = v217;
    v191(v216, v168, v217);
    v194 = v218;
    sub_10004A160(v189, v218, &qword_1011CC790);
    v195 = (uint64_t)v259;
    v191(v259, v193, v192);
    v196 = sub_100007E8C(&qword_1011CC880);
    sub_10004A160(v194, v195 + *(int *)(v196 + 48), &qword_1011CC790);
    sub_10004FF60(v189, &qword_1011CC790);
    v197 = *(void (**)(char *, uint64_t))(v190 + 8);
    v197(v168, v192);
    (*(void (**)(char *, uint64_t))(v262 + 8))(v258, v266);
    sub_10004FF60(v194, &qword_1011CC790);
    v197(v193, v192);
    v198 = sub_100007E8C(&qword_1011CC870);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v198 - 8) + 56))(v195, 0, 1, v198);
    v164 = v260;
    sub_100065228(v195, v260, &qword_1011CC798);
    v165 = v195;
  }
  v199 = v265;
  v200 = v257;
  sub_10004A160(v265, v257, &qword_1011CC7F8);
  sub_10004A160(v164, v165, &qword_1011CC798);
  v201 = v261;
  sub_10004A160(v200, v261, &qword_1011CC7F8);
  v202 = sub_100007E8C(&qword_1011CC878);
  sub_10004A160(v165, v201 + *(int *)(v202 + 48), &qword_1011CC798);
  sub_10004FF60(v164, &qword_1011CC798);
  sub_10004FF60(v199, &qword_1011CC7F8);
  sub_10004FF60(v165, &qword_1011CC798);
  return sub_10004FF60(v200, &qword_1011CC7F8);
}

uint64_t sub_10083FDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[16];
  uint64_t v43;
  _OWORD v44[2];
  char v45;
  _DWORD v46[12];

  v41 = a2;
  v3 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011CC828);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011CC818);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static HorizontalAlignment.leading.getter(v13);
  v43 = a1;
  v46[0] = 0;
  v15 = sub_100048748((unint64_t *)&qword_1011A0308, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(v46, v3, v15);
  v16 = sub_100007E8C(&qword_1011CC888);
  v17 = sub_10085426C(&qword_1011CC890, &qword_1011CC888, (void (*)(void))sub_1008542D0);
  v18 = LazyVStack.init(alignment:spacing:pinnedViews:content:)(v14, 0x4010000000000000, 0, v5, sub_100854264, v42, v16, v17);
  LOBYTE(v3) = static Edge.Set.horizontal.getter(v18);
  v19 = EdgeInsets.init(_all:)(*(double *)&qword_1011CCD38);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  v26 = &v12[*(int *)(v10 + 36)];
  *v26 = v3;
  *((double *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v27 = a1 + *(int *)(_s11ArtistsViewVMa(0) + 24);
  v45 = *(_BYTE *)(v27 + 32);
  v28 = *(_OWORD *)(v27 + 16);
  v44[0] = *(_OWORD *)v27;
  v44[1] = v28;
  sub_100065228((uint64_t)v44, (uint64_t)v46, &qword_1011AA450);
  sub_10006FDA8((uint64_t)v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100154A5C);
  v29 = sub_100825088();
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = sub_10006FDA8((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  LOBYTE(v3) = static Edge.Set.all.getter(v36);
  v37 = v41;
  sub_10004A160((uint64_t)v12, v41, &qword_1011CC818);
  v38 = v37 + *(int *)(sub_100007E8C(&qword_1011CC800) + 36);
  *(_BYTE *)v38 = v3;
  *(double *)(v38 + 8) = v29;
  *(_QWORD *)(v38 + 16) = v31;
  *(_QWORD *)(v38 + 24) = v33;
  *(_QWORD *)(v38 + 32) = v35;
  *(_BYTE *)(v38 + 40) = 0;
  return sub_10004FF60((uint64_t)v12, &qword_1011CC818);
}

uint64_t sub_1008400A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v35 = a2;
  v3 = _s11ArtistsViewVMa(0);
  v32 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v32 + 64);
  __chkstk_darwin(v3);
  v5 = sub_100007E8C(&qword_1011A3B48);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011CC888);
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1;
  v12 = a1 + *(int *)(v3 + 20);
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  v15 = *(unsigned __int8 *)(v12 + 16);
  v16 = sub_100007E8C(&qword_1011CC768);
  v17 = sub_100049F28(&qword_1011CC770, &qword_1011CC768, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  StateObject.wrappedValue.getter(v13, v14, v15, v16, v17);
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v18);
  swift_release();
  v19 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v19) == 1)
  {
    sub_10004FF60((uint64_t)v7, &qword_1011A3B48);
    v21 = _swiftEmptyArrayStorage;
  }
  else
  {
    v21 = (_QWORD *)MusicLibrarySectionedResponse.sections.getter(v19);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v19);
  }
  v36 = v21;
  sub_10005B704(v11, (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), _s11ArtistsViewVMa);
  v22 = *(unsigned __int8 *)(v32 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = swift_allocObject(&unk_1010DE7B8, v23 + v4, v22 | 7);
  sub_10005B6C0((uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23, _s11ArtistsViewVMa);
  v25 = sub_100007E8C(&qword_1011CC8D0);
  v26 = sub_100007E8C(&qword_1011CC8A0);
  v27 = sub_100049F28(&qword_1011CC8D8, &qword_1011CC8D0, (uint64_t)&protocol conformance descriptor for [A]);
  v28 = sub_1008542D0();
  v29 = sub_100049F28(&qword_1011CC8E0, (uint64_t *)&unk_1011A3B50, (uint64_t)&protocol conformance descriptor for MusicLibrarySection<A, B>);
  ForEach<>.init(_:content:)(&v36, sub_10085479C, v24, v25, &type metadata for MusicItemID, v26, v27, v28, v29);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 32))(v35, v10, v34);
}

uint64_t sub_100840378(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v10[4];
  uint64_t v11;

  KeyPath = swift_getKeyPath(&unk_100ED30C0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  MusicLibrarySection.subscript.getter(KeyPath, v5);
  swift_release();
  v10[2] = a1;
  v10[3] = a2;
  v6 = sub_100007E8C(&qword_1011CC8B0);
  v7 = sub_1000A8D68();
  v8 = sub_100854348();
  return Section<>.init(header:content:)(&v11, sub_1008547B4, v10, &_s6HeaderVN, v6, v7, v8);
}

uint64_t sub_100840434(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  _QWORD v21[2];

  v3 = _s11ArtistsViewVMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100007E8C((uint64_t *)&unk_1011B6950);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  MusicLibrarySection.items.getter(v9, v10);
  sub_10005B704(a2, (uint64_t)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s11ArtistsViewVMa);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010DE7E0, v12 + v5, v11 | 7);
  sub_10005B6C0((uint64_t)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, _s11ArtistsViewVMa);
  v14 = sub_100007E8C(&qword_1011CC8E8);
  v15 = sub_100049F28(&qword_1011CC8F0, (uint64_t *)&unk_1011B6950, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v16 = sub_100044B54(&qword_1011CC8B8);
  v17 = sub_1008543D4();
  v21[0] = v16;
  v21[1] = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v21, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v19 = sub_100048748(&qword_1011CC8F8, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  return ForEach<>.init(_:content:)(v8, sub_1008547C0, v13, v6, &type metadata for MusicItemID, v14, v15, OpaqueTypeConformance2, v19);
}

uint64_t sub_100840604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, __n128);
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v60 = a2;
  v55 = a1;
  v62 = a3;
  v4 = _s11ArtistsViewVMa(0);
  v59 = *(_QWORD *)(v4 - 8);
  v61 = *(_QWORD *)(v59 + 64);
  __chkstk_darwin(v4);
  v58 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  v57 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)_s11ArtistsViewV10ArtistCellVMa(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100007E8C(&qword_1011CC8B8);
  v16 = __chkstk_darwin(v53);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v54(v12, a1, v9, v16);
  *v8 = swift_getKeyPath(&unk_100ED2E18);
  v19 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v8, v19, 0);
  v56 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v56(v15, v12, v9);
  v20 = &v15[v13[5]];
  *(_QWORD *)v20 = swift_getKeyPath(&unk_100ED2BF8);
  v20[8] = 0;
  sub_100065228((uint64_t)v8, (uint64_t)&v15[v13[6]], &qword_10119EE98);
  v21 = &v15[v13[7]];
  v22 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v23 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v21 = EnvironmentObject.init()(v22, v23);
  *((_QWORD *)v21 + 1) = v24;
  v25 = &v15[v13[8]];
  v26 = type metadata accessor for NoticePresenter(0);
  v27 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *(_QWORD *)v25 = EnvironmentObject.init()(v26, v27);
  *((_QWORD *)v25 + 1) = v28;
  v29 = &v15[v13[9]];
  *(_QWORD *)v29 = sub_1008419B0;
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = 0;
  v30 = &v15[v13[10]];
  v31 = type metadata accessor for NavigationPusher();
  v32 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *(_QWORD *)v30 = EnvironmentObject.init()(v31, v32);
  *((_QWORD *)v30 + 1) = v33;
  v34 = &v15[v13[11]];
  v35 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v36 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v34 = EnvironmentObject.init()(v35, v36);
  *((_QWORD *)v34 + 1) = v37;
  v38 = &v15[v13[12]];
  v39 = type metadata accessor for TabSelectionManager(0);
  v40 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v38 = EnvironmentObject.init()(v39, v40);
  *((_QWORD *)v38 + 1) = v41;
  v42 = &v15[v13[13]];
  *(_QWORD *)v42 = swift_getKeyPath(&unk_100ED2C20);
  *((_QWORD *)v42 + 1) = 0;
  v42[16] = 0;
  v43 = &v15[v13[14]];
  *(_QWORD *)v43 = swift_getKeyPath(&unk_100ED2C48);
  *((_QWORD *)v43 + 1) = 0;
  v43[16] = 0;
  *(_QWORD *)&v15[v13[15]] = 0x4024000000000000;
  *(_QWORD *)&v15[v13[16]] = 0x4048000000000000;
  sub_10005B704((uint64_t)v15, (uint64_t)v18, _s11ArtistsViewV10ArtistCellVMa);
  v44 = v53;
  v18[*(int *)(v53 + 36)] = 0;
  sub_10005B748((uint64_t)v15, _s11ArtistsViewV10ArtistCellVMa);
  v45 = v58;
  sub_10005B704(v60, v58, _s11ArtistsViewVMa);
  ((void (*)(char *, uint64_t, uint64_t))v54)(v12, v55, v9);
  v46 = *(unsigned __int8 *)(v59 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = *(unsigned __int8 *)(v10 + 80);
  v49 = (v61 + v48 + v47) & ~v48;
  v50 = swift_allocObject(&unk_1010DE808, v49 + v57, v46 | v48 | 7);
  sub_10005B6C0(v45, v50 + v47, _s11ArtistsViewVMa);
  v56((char *)(v50 + v49), v12, v9);
  v51 = sub_1008543D4();
  View.onTapGesture(count:perform:)(1, sub_100854B24, v50, v44, v51);
  swift_release();
  return sub_10004FF60((uint64_t)v18, &qword_1011CC8B8);
}

uint64_t sub_100840AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - v7;
  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  _s11ArtistsViewVMa(0);
  sub_10004A160((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1011A3FB0);
  v11 = sub_100007E8C(&qword_1011CC688);
  State.wrappedValue.setter(v5, v11);
  return sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A3FB0);
}

double sub_100840BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;

  v4 = _s11ArtistsViewVMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A3B48);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_10004A160(a1, (uint64_t)v11, &qword_1011A3B48);
  sub_10005B704(a2, (uint64_t)v7, _s11ArtistsViewVMa);
  type metadata accessor for MainActor(0);
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = *(unsigned __int8 *)(v5 + 80);
  v21 = (v10 + v20 + v19) & ~v20;
  v22 = swift_allocObject(&unk_1010DE790, v21 + v6, v18 | v20 | 7);
  *(_QWORD *)(v22 + 16) = v17;
  *(_QWORD *)(v22 + 24) = &protocol witness table for MainActor;
  sub_100065228((uint64_t)v11, v22 + v19, &qword_1011A3B48);
  sub_10005B6C0((uint64_t)v7, v22 + v21, _s11ArtistsViewVMa);
  sub_100166D14((uint64_t)v14, (uint64_t)&unk_1011CC788, v22);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100840D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v5[4] = a4;
  v5[5] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v5[6] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[7] = v7;
  v5[8] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A3B20);
  v5[9] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[10] = v9;
  v5[11] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artist(0);
  v5[12] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[13] = v11;
  v5[14] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011B6950);
  v5[15] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[16] = v13;
  v5[17] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A3B48) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[18] = swift_task_alloc(v14);
  v5[19] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C99D8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[20] = swift_task_alloc(v15);
  v5[21] = swift_task_alloc(v15);
  v16 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3FB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[22] = swift_task_alloc(v16);
  v5[23] = swift_task_alloc(v16);
  v5[24] = swift_task_alloc(v16);
  v17 = type metadata accessor for MainActor(0);
  v5[25] = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  v5[26] = v19;
  v5[27] = v20;
  return swift_task_switch(sub_100840F5C, v19, v20);
}

uint64_t sub_100840F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 32), v1, &qword_1011A3B48);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 152);
  if (v4 == 1)
  {
    v6 = &qword_1011A3B48;
    v7 = *(_QWORD *)(v0 + 152);
LABEL_8:
    sub_10004FF60(v7, v6);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 56))(*(_QWORD *)(v0 + 192), 1, 1, *(_QWORD *)(v0 + 96));
    goto LABEL_10;
  }
  v8 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = MusicLibrarySectionedResponse.sections.getter(v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v5, v8);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  v13 = *(_QWORD *)(v12 - 8);
  if (v11)
  {
    (*(void (**)(_QWORD, unint64_t, uint64_t))(v13 + 16))(*(_QWORD *)(v0 + 168), v10 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v12);
    v14 = 0;
  }
  else
  {
    v14 = 1;
  }
  v15 = *(_QWORD *)(v0 + 168);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v15, v14, 1, v12);
  swift_bridgeObjectRelease();
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v7 = *(_QWORD *)(v0 + 168);
    v6 = (uint64_t *)&unk_1011C99D8;
    goto LABEL_8;
  }
  v19 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 168);
  v22 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 120);
  MusicLibrarySection.items.getter(v16, v18);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20, v16);
  sub_10031E1B8(v19);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
LABEL_10:
  v24 = *(_QWORD **)(v0 + 184);
  v25 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 104);
  _s11ArtistsViewVMa(0);
  v27 = sub_100007E8C(&qword_1011CC688);
  State.wrappedValue.getter(v24, v27);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    v28 = *(_QWORD *)(v0 + 184);
    swift_release();
    sub_10004FF60(v28, (uint64_t *)&unk_1011A3FB0);
    v30 = *(_QWORD *)(v0 + 184);
    v29 = *(_QWORD *)(v0 + 192);
    v32 = *(_QWORD *)(v0 + 168);
    v31 = *(_QWORD *)(v0 + 176);
    v34 = *(_QWORD *)(v0 + 152);
    v33 = *(_QWORD *)(v0 + 160);
    v36 = *(_QWORD *)(v0 + 136);
    v35 = *(_QWORD *)(v0 + 144);
    v44 = *(_QWORD *)(v0 + 112);
    v45 = *(_QWORD *)(v0 + 88);
    v46 = *(_QWORD *)(v0 + 64);
    sub_1008417BC(v29);
    sub_10004FF60(v29, (uint64_t *)&unk_1011A3FB0);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v38 = *(_QWORD *)(v0 + 96);
    v39 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 184), v38);
    v40 = type metadata accessor for TitledSection(0);
    MusicLibrarySectionedRequest.init()(v40, v38, &protocol witness table for TitledSection, &protocol witness table for Artist);
    KeyPath = swift_getKeyPath(&unk_100ED3098);
    *(_QWORD *)(v0 + 16) = Artist.id.getter(KeyPath);
    *(_QWORD *)(v0 + 24) = v42;
    MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(KeyPath, v0 + 16, v39, &protocol witness table for MusicItemID);
    swift_release();
    swift_bridgeObjectRelease();
    v43 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrarySectionedRequest.response()[1]);
    *(_QWORD *)(v0 + 224) = v43;
    *v43 = v0;
    v43[1] = sub_100841304;
    return MusicLibrarySectionedRequest.response()(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 72));
  }
}

uint64_t sub_100841304()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 224));
  if (v0)
  {
    swift_errorRelease(v0);
    v3 = *(_QWORD *)(v2 + 208);
    v4 = *(_QWORD *)(v2 + 216);
    v5 = sub_10084136C;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 208);
    v4 = *(_QWORD *)(v2 + 216);
    v5 = sub_1008414AC;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_10084136C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(v1, 1, 1, v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10004FF60(v1, &qword_1011A3B48);
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 168);
  v13 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 152);
  v15 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 136);
  v17 = *(_QWORD *)(v0 + 144);
  v19 = *(_QWORD *)(v0 + 112);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 64);
  sub_1008417BC(v12);
  sub_10004FF60(v12, (uint64_t *)&unk_1011A3FB0);
  swift_task_dealloc(v12);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008414AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = swift_release();
  v6 = 1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v3 + 56))(v1, 0, 1, v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v4);
  v7 = MusicLibrarySectionedResponse.sections.getter(v4);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  v10 = *(_QWORD *)(v9 - 8);
  if (v8)
  {
    (*(void (**)(_QWORD, unint64_t, uint64_t))(v10 + 16))(*(_QWORD *)(v0 + 160), v7 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9);
    v6 = 0;
  }
  v11 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, v6, 1, v9);
  swift_bridgeObjectRelease();
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 176);
  v18 = *(_QWORD *)(v0 + 160);
  if (v14 == 1)
  {
    v20 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 112);
    v22 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 72);
    v24 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    sub_10004FF60(v16, (uint64_t *)&unk_1011A3FB0);
    sub_10004FF60(v18, (uint64_t *)&unk_1011C99D8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v17, 1, 1, v21);
  }
  else
  {
    v48 = *(_QWORD *)(v0 + 192);
    v25 = *(_QWORD *)(v0 + 128);
    v26 = *(_QWORD *)(v0 + 136);
    v44 = *(_QWORD *)(v0 + 96);
    v46 = *(_QWORD *)(v0 + 112);
    v42 = *(_QWORD *)(v0 + 88);
    v43 = *(_QWORD *)(v0 + 104);
    v39 = *(_QWORD *)(v0 + 120);
    v40 = *(_QWORD *)(v0 + 80);
    v27 = *(_QWORD *)(v0 + 64);
    v41 = *(_QWORD *)(v0 + 72);
    v29 = *(_QWORD *)(v0 + 48);
    v28 = *(_QWORD *)(v0 + 56);
    MusicLibrarySection.items.getter(v12, v15);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v18, v12);
    sub_10031E1B8(v17);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v39);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v44);
    sub_10004FF60(v48, (uint64_t *)&unk_1011A3FB0);
  }
  sub_100065228(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 192), (uint64_t *)&unk_1011A3FB0);
  v31 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 192);
  v33 = *(_QWORD *)(v0 + 168);
  v32 = *(_QWORD *)(v0 + 176);
  v35 = *(_QWORD *)(v0 + 152);
  v34 = *(_QWORD *)(v0 + 160);
  v37 = *(_QWORD *)(v0 + 136);
  v36 = *(_QWORD *)(v0 + 144);
  v45 = *(_QWORD *)(v0 + 112);
  v47 = *(_QWORD *)(v0 + 88);
  v49 = *(_QWORD *)(v0 + 64);
  sub_1008417BC(v30);
  sub_10004FF60(v30, (uint64_t *)&unk_1011A3FB0);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008417BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - v6;
  v8 = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A19A0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 48))(a1, 1, v8, v13))
  {
    v16 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  }
  else
  {
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
    Artist.favoriteStatus.getter(v17);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v18 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 0, 1, v18);
  }
  sub_10004FF60((uint64_t)v15, &qword_1011A19A0);
  sub_10004A160(a1, (uint64_t)v7, (uint64_t *)&unk_1011A3FB0);
  _s11ArtistsViewVMa(0);
  sub_10004A160((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1011A3FB0);
  v19 = sub_100007E8C(&qword_1011CC688);
  State.wrappedValue.setter(v4, v19);
  return sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A3FB0);
}

uint64_t sub_1008419B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  int *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  id v33;
  id v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t OpaqueTypeConformance2;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t result;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  unint64_t *v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  _QWORD *v129[4];
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  _BYTE v158[32];
  uint64_t v159;
  _QWORD v160[5];
  _QWORD v161[5];
  _QWORD v162[7];
  __int128 v163;
  _QWORD v164[5];
  _QWORD v165[5];
  uint64_t v166[11];

  v2 = v1;
  v153 = a1;
  v157 = _s11ArtistsViewV10ArtistCellVMa(0);
  __chkstk_darwin(v157);
  v137 = (uint64_t)&v130 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v4);
  v156 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v6);
  v135 = (uint64_t *)((char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Artist(0);
  v154 = *(_QWORD *)(v8 - 8);
  v155 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011CC9C8);
  __chkstk_darwin(v11);
  v13 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011CC9D0);
  v141 = *(_QWORD *)(v14 - 8);
  v142 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011CC9D8);
  v145 = *(_QWORD *)(v17 - 8);
  v146 = v17;
  __chkstk_darwin(v17);
  v143 = (uint64_t)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_100007E8C(&qword_1011CC9E0);
  __chkstk_darwin(v147);
  v148 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011CC9E8);
  v151 = *(_QWORD *)(v20 - 8);
  v152 = v20;
  __chkstk_darwin(v20);
  v150 = (char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_100007E8C(&qword_1011CC9F0);
  __chkstk_darwin(v144);
  v149 = (char *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v23);
  *((_QWORD *)v13 + 1) = 0x4028000000000000;
  v13[16] = 0;
  v24 = sub_100007E8C(&qword_1011CC9F8);
  sub_10084257C(v2, &v13[*(int *)(v24 + 44)]);
  v25 = Corner.medium.unsafeMutableAddressor();
  v26 = *v25;
  v27 = v25[1];
  v28 = *((_BYTE *)v25 + 16);
  v29 = *HI.HoverOutset.list.unsafeMutableAddressor();
  v136 = sub_100049F28(&qword_1011CCA00, &qword_1011CC9C8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v139 = v11;
  v140 = v16;
  v30 = (int *)v157;
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v26, v27, v28, 1u, 0, 1, 1, v11, *(double *)&v29, v136);
  sub_10004FF60((uint64_t)v13, &qword_1011CC9C8);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 16);
  v138 = v10;
  v31(v10, v2, v155);
  v32 = v2 + v30[5];
  v33 = *(id *)v32;
  LOBYTE(v26) = *(_BYTE *)(v32 + 8);
  sub_1000A4100(*(id *)v32, v26);
  v34 = sub_100824044(v33, v26);
  sub_1000A4224(v33, v26);
  v35 = v135;
  sub_10082460C((uint64_t)v135);
  v36 = *v35;
  swift_retain();
  sub_10005B748((uint64_t)v35, type metadata accessor for Library.Context);
  v37 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v156, 1, 1, v37);
  v38 = (uint64_t *)(v2 + v30[7]);
  v39 = *v38;
  if (*v38)
  {
    v131 = v36;
    v132 = v34;
    v165[3] = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v165[4] = &protocol witness table for <A> PresentedViewState<A>;
    v165[0] = v39;
    v40 = (uint64_t *)(v2 + v30[8]);
    v41 = *v40;
    if (*v40)
    {
      v164[3] = type metadata accessor for NoticePresenter(0);
      v164[4] = &protocol witness table for NoticePresenter;
      v164[0] = v41;
      memset(v162, 0, sizeof(v162));
      v163 = xmmword_100EA93A0;
      v42 = v2 + v30[9];
      v43 = *(_QWORD *)v42;
      v44 = *(_QWORD *)(v42 + 8);
      v45 = *(unsigned __int8 *)(v42 + 16);
      swift_retain();
      swift_retain();
      v46 = sub_100007E8C(&qword_1011A03A8);
      v133 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v47 = StateObject.wrappedValue.getter(v43, v44, v45, v46, v133);
      v161[3] = v46;
      v161[4] = &protocol witness table for <A> PresentedViewState<A>;
      v161[0] = v47;
      v48 = (uint64_t *)(v2 + v30[10]);
      v49 = *v48;
      if (*v48)
      {
        v50 = type metadata accessor for NavigationPusher();
        v160[3] = v50;
        v160[4] = &off_1010D58B0;
        v160[0] = v49;
        v159 = 0;
        memset(v158, 0, sizeof(v158));
        v51 = (_QWORD *)(v2 + v30[11]);
        if (*v51)
        {
          v134 = v46;
          v135 = (uint64_t *)v42;
          v52 = (_QWORD *)(v2 + v30[12]);
          if (*v52)
          {
            __chkstk_darwin(v50);
            v53 = (_QWORD *)sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100ED2D38);
            __chkstk_darwin(KeyPath);
            v129[2] = &type metadata for TabIdentifier;
            v129[3] = v53;
            v55 = swift_getKeyPath(&unk_100ED2D70);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(v166, v56, KeyPath, v55);
            swift_release();
            swift_release();
            swift_release();
            v57 = v166[0];
            v58 = v157;
            v59 = v2 + *(int *)(v157 + 52);
            v60 = *(_QWORD *)v59;
            v61 = *(_QWORD *)(v59 + 8);
            LOBYTE(v55) = *(_BYTE *)(v59 + 16);
            sub_1000A410C(*(_QWORD *)v59, v61, v55);
            sub_100824224(v60, v61, v55);
            sub_1000A4230(v60, v61, v55);
            sub_10066D160(v57);
            v63 = v62;
            v65 = v64;
            swift_release();
            swift_bridgeObjectRelease();
            v66 = v2 + *(int *)(v58 + 56);
            v67 = *(_QWORD *)v66;
            v68 = *(_QWORD *)(v66 + 8);
            v69 = *(_BYTE *)(v66 + 16);
            sub_1000A411C(*(_QWORD *)v66, v68, v69);
            sub_100824400(v67, v68, v69, v166);
            sub_1000A4240(v67, v68, v69);
            v71 = v166[0];
            v70 = v166[1];
            v72 = v137;
            sub_10005B704(v2, v137, _s11ArtistsViewV10ArtistCellVMa);
            if (v70 >> 60 != 15)
            {
              v74 = v2;
              goto LABEL_10;
            }
            v73 = (_QWORD *)(v72 + *(int *)(v157 + 44));
            if (*v73)
            {
              v74 = v2;
              swift_retain();
              v71 = sub_10066D7A8();
              v70 = v75;
              swift_release();
LABEL_10:
              sub_10005B748(v72, _s11ArtistsViewV10ArtistCellVMa);
              v76 = v155;
              *((_QWORD *)&v128 + 1) = v65;
              *((_QWORD *)&v127 + 1) = v158;
              *(_QWORD *)&v128 = v63;
              *(_QWORD *)&v127 = v160;
              v77 = v132;
              v78 = (uint64_t)v156;
              v79 = v138;
              MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(0, v132, v131, (uint64_t)v165, (uint64_t)v164, (uint64_t)v162, (unint64_t)v161, (uint64_t)v166, v127, v128, v71, v70, v155, (uint64_t)&protocol witness table for Artist);
              sub_1000822B4(v71, v70);

              swift_release();
              swift_bridgeObjectRelease();
              sub_10004FF60((uint64_t)v158, &qword_1011A0558);
              sub_10004FF60((uint64_t)v162, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v78, (uint64_t *)&unk_1011A20C0);
              (*(void (**)(char *, uint64_t))(v154 + 8))(v79, v76);
              sub_10004FF60((uint64_t)v160, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v161);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v164);
              v80 = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v165);
              __chkstk_darwin(v80);
              v81 = (_QWORD *)type metadata accessor for ContextualPreview(0);
              v162[0] = v139;
              v162[1] = v136;
              OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v162, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
              v83 = sub_1000E3EE4();
              v84 = (_QWORD *)sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
              v129[0] = v81;
              v85 = v142;
              v86 = v143;
              v87 = v140;
              View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)v166, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100856FE8, (uint64_t)v129, (uint64_t)UIScreen.Dimensions.size.getter, 0, v143, v142, (uint64_t)&type metadata for ActionType, v129[0], OpaqueTypeConformance2, v83, v84);
              sub_1000E411C((uint64_t)v166);
              v88 = (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v87, v85);
              LOBYTE(v87) = static Edge.Set.vertical.getter(v88);
              v89 = EdgeInsets.init(_all:)(13.0);
              v91 = v90;
              v93 = v92;
              v95 = v94;
              v97 = v145;
              v96 = v146;
              v98 = (uint64_t)v148;
              (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v148, v86, v146);
              v99 = v147;
              v100 = v98 + *(int *)(v147 + 36);
              *(_BYTE *)v100 = (_BYTE)v87;
              *(double *)(v100 + 8) = v89;
              *(_QWORD *)(v100 + 16) = v91;
              *(_QWORD *)(v100 + 24) = v93;
              *(_QWORD *)(v100 + 32) = v95;
              *(_BYTE *)(v100 + 40) = 0;
              (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v86, v96);
              v101 = StateObject.wrappedValue.getter(*v135, v135[1], *((unsigned __int8 *)v135 + 16), v134, v133);
              v102 = sub_100856FF0();
              v103 = v150;
              View.shareSheetPresenting(_:)(v101, v99, v102);
              swift_release();
              v104 = sub_10004FF60(v98, &qword_1011CC9E0);
              v105 = static Alignment.leading.getter(v104);
              v107 = v106;
              v108 = (uint64_t)v149;
              v109 = (uint64_t)&v149[*(int *)(v144 + 36)];
              sub_100842C60(v74, v109);
              v110 = (uint64_t *)(v109 + *(int *)(sub_100007E8C(&qword_1011CCA10) + 36));
              *v110 = v105;
              v110[1] = v107;
              (*(void (**)(uint64_t, char *, uint64_t))(v151 + 32))(v108, v103, v152);
              return sub_100065228(v108, v153, &qword_1011CC9F0);
            }
          }
          else
          {
            v123 = v52[1];
            v124 = type metadata accessor for TabSelectionManager(0);
            v125 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain();
            swift_retain();
            EnvironmentObject.error()(0, v123, v124, v125);
            __break(1u);
          }
          v112 = v73[1];
          goto LABEL_17;
        }
LABEL_14:
        v112 = v51[1];
        swift_retain();
LABEL_17:
        v113 = (uint64_t *)&unk_10119CBE0;
        v114 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v115 = &qword_1011C5B90;
        v116 = &unk_100EC0A50;
        goto LABEL_18;
      }
    }
    else
    {
      v117 = v40[1];
      v118 = type metadata accessor for NoticePresenter(0);
      v119 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain();
      EnvironmentObject.error()(0, v117, v118, v119);
      __break(1u);
    }
    v120 = v48[1];
    v121 = type metadata accessor for NavigationPusher();
    v122 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v120, v121, v122);
    __break(1u);
    goto LABEL_14;
  }
  v112 = v38[1];
  v113 = (uint64_t *)&unk_1011B4E40;
  v114 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v115 = (unint64_t *)&unk_10119CC10;
  v116 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_18:
  v126 = sub_100049F28(v115, v113, (uint64_t)v116);
  result = EnvironmentObject.error()(0, v112, v114, v126);
  __break(1u);
  return result;
}

uint64_t sub_10084257C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  char *v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t KeyPath;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  void (*v68)(char *, uint64_t, __n128);
  __n128 v69;
  __n128 v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  _BYTE v82[56];

  v76 = a2;
  v3 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v10);
  v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v73 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v75 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v74 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v77 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v78 = (char *)&v72 - v21;
  v22 = type metadata accessor for Artist(0);
  v72 = a1;
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v22, (uint64_t)&protocol witness table for Artist, v12);
  v23 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 6, 10, v23);
  v24 = *(_QWORD *)(a1 + *(int *)(_s11ArtistsViewV10ArtistCellVMa(0) + 64));
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v24, 0, v24, 0, 0, 1, 2, (uint64_t)v82);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v3);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v12, (uint64_t)v9, (uint64_t)v82, (uint64_t)v6, (uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10005B748((uint64_t)v9, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A3E10);
  v25 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v26 = sub_1000E4264();
  v80 = v25;
  v81 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v80, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  View.corner(_:)(0, 0, 1, v13, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v15, v13);
  v28 = Border.artwork.unsafeMutableAddressor();
  v29 = *v28;
  v30 = *((double *)v28 + 1);
  LOBYTE(a1) = *((_BYTE *)v28 + 16);
  swift_retain();
  v80 = v13;
  v81 = OpaqueTypeConformance2;
  v31 = swift_getOpaqueTypeConformance2(&v80, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v32 = v77;
  View.border(_:corner:)(v29, a1, 0, 0, 1, v16, v31, v30);
  v33 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v75 + 8))(v18, v16, v33);
  v34 = v74;
  v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 32))(v78, v32, v79);
  v80 = Artist.name.getter(v35);
  v81 = v36;
  v37 = sub_100055B68();
  v38 = Text.init<A>(_:)(&v80, &type metadata for String, v37);
  v40 = v39;
  v42 = v41;
  v44 = v43 & 1;
  LODWORD(v80) = static HierarchicalShapeStyle.primary.getter(v45);
  v46 = Text.foregroundStyle<A>(_:)(&v80, v38, v40, v44, v42, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v48 = v47;
  v75 = v49;
  LOBYTE(v15) = v50 & 1;
  sub_100055BAC(v38, v40, v44);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100ED2FB0);
  LODWORD(v73) = static Edge.Set.leading.getter(KeyPath);
  v52 = EdgeInsets.init(_all:)(2.0);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v59 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v60 = v32;
  v61 = v32;
  v62 = v78;
  v63 = v79;
  v59(v61, v78, v79);
  v64 = v76;
  v59(v76, v60, v63);
  v65 = sub_100007E8C(&qword_1011CCA50);
  v66 = &v64[*(int *)(v65 + 48)];
  *(_QWORD *)v66 = v46;
  *((_QWORD *)v66 + 1) = v48;
  v66[16] = (char)v15;
  *((_QWORD *)v66 + 3) = v75;
  *((_QWORD *)v66 + 4) = KeyPath;
  *((_QWORD *)v66 + 5) = 2;
  v66[48] = 0;
  v66[56] = v73;
  *((double *)v66 + 8) = v52;
  *((_QWORD *)v66 + 9) = v54;
  *((_QWORD *)v66 + 10) = v56;
  *((_QWORD *)v66 + 11) = v58;
  v66[96] = 0;
  v67 = &v64[*(int *)(v65 + 64)];
  *(_QWORD *)v67 = 0;
  v67[8] = 1;
  sub_100055BBC(v46, v48, (char)v15);
  v68 = *(void (**)(char *, uint64_t, __n128))(v34 + 8);
  swift_bridgeObjectRetain();
  v69 = swift_retain();
  v68(v62, v63, v69);
  sub_100055BAC(v46, v48, (char)v15);
  swift_release();
  v70 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t, __n128))v68)(v77, v63, v70);
}

uint64_t sub_100842AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v23;

  v4 = (int *)type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artist(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v7, (uint64_t)&protocol witness table for Artist, v6);
  v12 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v13 = &v6[v12[5]];
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 6, 10, v14);
  *(_QWORD *)&v6[v12[6]] = 0x3FF0000000000000;
  v16 = &v6[v12[7]];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v17 = Artist.name.getter(v15);
  v18 = (uint64_t *)&v6[v4[5]];
  *v18 = v17;
  v18[1] = v19;
  v20 = &v6[v4[6]];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v21 = &v6[v4[7]];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v6[v4[8]] = 0;
  v6[v4[9]] = 1;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return sub_10005B6C0((uint64_t)v6, a2, type metadata accessor for ContextualPreview.Data);
}

uint64_t sub_100842C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v2 = a1;
  v57 = a1;
  v68 = a2;
  v3 = type metadata accessor for MusicFavoriteStatus(0);
  v66 = *(_QWORD *)(v3 - 8);
  v67 = v3;
  __chkstk_darwin(v3);
  v65 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v64 = (char *)&v57 - v6;
  v7 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BlendMode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v14);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011CCA18);
  __chkstk_darwin(v17);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100007E8C(&qword_1011CCA20);
  __chkstk_darwin(v60);
  v59 = (uint64_t)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011CCA28);
  __chkstk_darwin(v62);
  v61 = (uint64_t)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011CCA30);
  __chkstk_darwin(v22);
  v63 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
  v25 = _s11ArtistsViewV10ArtistCellVMa(0);
  v58 = *(int *)(v25 + 60);
  v26 = *(double *)(v2 + v58);
  v27 = static Font.Weight.semibold.getter(v25);
  v28 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v16, 1, 1, v28);
  v29 = static Font.system(size:weight:design:)(*(_QWORD *)&v27, 0, v16, v26);
  sub_10004FF60((uint64_t)v16, &qword_1011C4F30);
  KeyPath = swift_getKeyPath(&unk_100ED3148);
  LODWORD(v2) = static HierarchicalShapeStyle.secondary.getter(KeyPath);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for BlendMode.plusLighter(_:), v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v13, v10);
  sub_10005B704((uint64_t)v9, (uint64_t)&v19[*(int *)(v17 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *(_QWORD *)v19 = v24;
  *((_QWORD *)v19 + 1) = KeyPath;
  *((_QWORD *)v19 + 2) = v29;
  *((_DWORD *)v19 + 6) = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10005B748((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(KeyPath) = static Edge.Set.leading.getter(v31);
  v32 = EdgeInsets.init(_all:)(*(double *)&qword_1011CCD38 * -0.5 + *(double *)(v57 + v58) * -0.5);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v39 = v59;
  sub_10004A160((uint64_t)v19, v59, &qword_1011CCA18);
  v40 = v39 + *(int *)(v60 + 36);
  *(_BYTE *)v40 = KeyPath;
  *(double *)(v40 + 8) = v32;
  *(_QWORD *)(v40 + 16) = v34;
  *(_QWORD *)(v40 + 24) = v36;
  *(_QWORD *)(v40 + 32) = v38;
  *(_BYTE *)(v40 + 40) = 0;
  v41 = sub_10004FF60((uint64_t)v19, &qword_1011CCA18);
  v42 = v64;
  Artist.favoriteStatus.getter(v41);
  v43 = v65;
  v44 = v66;
  v45 = v67;
  (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v65, enum case for MusicFavoriteStatus.favorited(_:), v67);
  v46 = v43;
  LOBYTE(v43) = static MusicFavoriteStatus.== infix(_:_:)(v42, v43);
  v47 = *(void (**)(char *, uint64_t))(v44 + 8);
  v47(v46, v45);
  v47(v42, v45);
  if ((v43 & 1) != 0)
    v48 = 1.0;
  else
    v48 = 0.0;
  v49 = v61;
  sub_10004A160(v39, v61, &qword_1011CCA20);
  v50 = v62;
  *(double *)(v49 + *(int *)(v62 + 36)) = v48;
  sub_10004FF60(v39, &qword_1011CCA20);
  v51 = AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
  v52 = *v51;
  v53 = v51[1];
  v54 = sub_10005610C(&qword_1011CCA38, &qword_1011CCA28, (void (*)(void))sub_100857124);
  swift_bridgeObjectRetain();
  v55 = (uint64_t)v63;
  View.accessibilityLabel(_:)(v52, v53, v50, v54);
  swift_bridgeObjectRelease();
  sub_10004FF60(v49, &qword_1011CCA28);
  return sub_100065228(v55, v68, &qword_1011CCA30);
}

uint64_t sub_1008431A8()
{
  return sub_1008431CC(&qword_1011A38D8, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t)&protocol witness table for Album, &qword_1011A38E0);
}

uint64_t sub_1008431CC(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t a3, unint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v8 = sub_100007E8C(a1);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TitledSection(0);
  v13 = a2(0);
  MusicLibrarySectionedRequest.init()(v12, v13, &protocol witness table for TitledSection, a3);
  v14 = sub_100049F28(a4, a1, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v15 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v8, v14);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v15;
}

uint64_t sub_1008432B0()
{
  return sub_1008431CC((uint64_t *)&unk_1011A3840, (uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, (uint64_t)&protocol witness table for MusicVideo, &qword_10119F640);
}

char *sub_1008432E4(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  void (*v135)(char *, char *, uint64_t);
  int *v136;
  uint64_t v137;
  char *v138;
  char *__dst;
  uint64_t v140;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Artist(0);
    v140 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    if (EnumCaseMultiPayload == 1)
    {
      v135 = v8;
      v137 = v12;
      v136 = (int *)type metadata accessor for Library.Context(0);
      v14 = v136[5];
      v138 = v10;
      __dst = &v10[v14];
      v15 = &v11[v14];
      v16 = type metadata accessor for Album(0);
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48);
      v19 = swift_retain();
      if (v18(v15, 1, v16, v19))
      {
        v20 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      v23 = v136[6];
      v10 = (char *)v138;
      v24 = (char *)v138 + v23;
      v25 = &v11[v23];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(&v11[v23], 1, v7))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v135(v24, v25, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v24, 0, 1, v7);
      }
      v27 = v136[7];
      v28 = (char *)v138 + v27;
      v29 = &v11[v27];
      v30 = type metadata accessor for Composer(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v33 = v136[8];
      v34 = (char *)v138 + v33;
      v35 = &v11[v33];
      v36 = type metadata accessor for Genre(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C(&qword_10119ED08);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v136[9];
      v40 = (char *)v138 + v39;
      v41 = &v11[v39];
      v42 = type metadata accessor for Playlist(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = v136[10];
      v46 = (char *)v138 + v45;
      v47 = &v11[v45];
      v48 = type metadata accessor for TVShow(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      v51 = v136[11];
      v52 = (char *)v138 + v51;
      v53 = &v11[v51];
      v54 = type metadata accessor for TVSeason(0);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        v56 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      *((_BYTE *)v138 + v136[12]) = v11[v136[12]];
      *((_BYTE *)v138 + v136[13]) = v11[v136[13]];
      *((_BYTE *)v138 + v136[14]) = v11[v136[14]];
      v57 = v136[15];
      v58 = (_QWORD *)((char *)v138 + v57);
      v59 = &v11[v57];
      v60 = *((_QWORD *)v59 + 1);
      *v58 = *(_QWORD *)v59;
      v58[1] = v60;
      *(_QWORD *)((char *)v138 + v136[16]) = *(_QWORD *)&v11[v136[16]];
      *((_BYTE *)v138 + v136[17]) = v11[v136[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = 1;
      v12 = v137;
    }
    else
    {
      swift_retain();
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v22);
    v61 = a3[7];
    v62 = &a1[v61];
    v63 = &a2[v61];
    v64 = *(_QWORD *)v63;
    v65 = *((_QWORD *)v63 + 1);
    v66 = v63[16];
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v63, v65);
    *(_QWORD *)v62 = v64;
    *((_QWORD *)v62 + 1) = v65;
    v62[16] = v66;
    v67 = a3[8];
    v68 = &a1[v67];
    v69 = &a2[v67];
    v70 = *(_QWORD *)v69;
    v71 = *((_QWORD *)v69 + 1);
    v72 = v69[16];
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v69, v71);
    *(_QWORD *)v68 = v70;
    *((_QWORD *)v68 + 1) = v71;
    v68[16] = v72;
    v73 = a3[9];
    v74 = &a1[v73];
    v75 = &a2[v73];
    v76 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v75, v76) == 1)
    {
      v77 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v74, v75, v77);
      v78 = 1;
    }
    else
    {
      *(_QWORD *)v74 = *(_QWORD *)v75;
      swift_retain();
      v78 = 0;
    }
    swift_storeEnumTagMultiPayload(v74, v76, v78);
    v79 = a3[10];
    v80 = &a1[v79];
    v81 = &a2[v79];
    v82 = *(_QWORD *)v81;
    v83 = *((_QWORD *)v81 + 1);
    v84 = *((_QWORD *)v81 + 2);
    v85 = *((_QWORD *)v81 + 3);
    v86 = v81[32];
    sub_100154A5C(*(_QWORD *)v81, v83, v84, v85, v86);
    *(_QWORD *)v80 = v82;
    *((_QWORD *)v80 + 1) = v83;
    *((_QWORD *)v80 + 2) = v84;
    *((_QWORD *)v80 + 3) = v85;
    v80[32] = v86;
    v87 = a3[11];
    v88 = a3[12];
    v89 = &a1[v87];
    v90 = (uint64_t *)&a2[v87];
    v91 = *v90;
    v92 = v90[1];
    *(_QWORD *)v89 = v91;
    *((_QWORD *)v89 + 1) = v92;
    v93 = &a1[v88];
    v94 = *(void **)&a2[v88];
    LOBYTE(v83) = a2[v88 + 8];
    swift_retain();
    sub_1000A4100(v94, v83);
    *(_QWORD *)v93 = v94;
    v93[8] = v83;
    v95 = a3[13];
    v96 = a3[14];
    v97 = &a1[v95];
    v98 = (uint64_t *)&a2[v95];
    v99 = *v98;
    v100 = v98[1];
    *(_QWORD *)v97 = v99;
    *((_QWORD *)v97 + 1) = v100;
    v101 = &a1[v96];
    v102 = (uint64_t *)&a2[v96];
    v104 = *v102;
    v103 = v102[1];
    *(_QWORD *)v101 = v104;
    *((_QWORD *)v101 + 1) = v103;
    v105 = a3[15];
    v106 = &a1[v105];
    v107 = &a2[v105];
    v108 = *(_QWORD *)v107;
    v109 = *((_QWORD *)v107 + 1);
    LOBYTE(v85) = v107[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v108, v109);
    *(_QWORD *)v106 = v108;
    *((_QWORD *)v106 + 1) = v109;
    v106[16] = v85;
    v110 = a3[16];
    v111 = a3[17];
    v112 = &a1[v110];
    v113 = (uint64_t *)&a2[v110];
    v114 = *v113;
    v115 = v113[1];
    *(_QWORD *)v112 = v114;
    *((_QWORD *)v112 + 1) = v115;
    v116 = &a1[v111];
    v117 = (uint64_t *)&a2[v111];
    v119 = *v117;
    v118 = v117[1];
    *(_QWORD *)v116 = v119;
    *((_QWORD *)v116 + 1) = v118;
    v120 = a3[18];
    v121 = a3[19];
    v122 = &a1[v120];
    v123 = (uint64_t *)&a2[v120];
    v125 = *v123;
    v124 = v123[1];
    *(_QWORD *)v122 = v125;
    *((_QWORD *)v122 + 1) = v124;
    v126 = &a1[v121];
    v127 = *(_QWORD *)&a2[v121];
    v128 = *(_QWORD *)&a2[v121 + 8];
    LOBYTE(v106) = a2[v121 + 16];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v127, v128, (char)v106);
    *(_QWORD *)v126 = v127;
    *((_QWORD *)v126 + 1) = v128;
    v126[16] = (char)v106;
    v129 = a3[20];
    v130 = &a1[v129];
    v131 = &a2[v129];
    v132 = *(_QWORD *)v131;
    v133 = *((_QWORD *)v131 + 1);
    LOBYTE(v119) = v131[16];
    sub_1000A411C(*(_QWORD *)v131, v133, v119);
    *(_QWORD *)v130 = v132;
    *((_QWORD *)v130 + 1) = v133;
    v130[16] = v119;
  }
  return a1;
}

double sub_100843A44(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for Artist(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + a2[6];
  v8 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = (int *)type metadata accessor for Library.Context(0);
    v11 = v7 + v10[5];
    v12 = type metadata accessor for Album(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v7 + v10[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4))
      v6(v14, v4);
    v15 = v7 + v10[7];
    v16 = type metadata accessor for Composer(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v7 + v10[8];
    v19 = type metadata accessor for Genre(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v7 + v10[9];
    v22 = type metadata accessor for Playlist(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v7 + v10[10];
    v25 = type metadata accessor for TVShow(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v7 + v10[11];
    v28 = type metadata accessor for TVSeason(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000A6174(*(_QWORD *)(a1 + a2[7]), *(_QWORD *)(a1 + a2[7] + 8));
  sub_1000A6174(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8));
  v30 = a1 + a2[9];
  v31 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);
  }
  else
  {
    swift_release();
  }
  v33 = a1 + a2[10];
  sub_1002BD420(*(_QWORD *)v33, *(_QWORD *)(v33 + 8), *(_QWORD *)(v33 + 16), *(_QWORD *)(v33 + 24), *(_BYTE *)(v33 + 32));
  swift_release();
  sub_1000A4224(*(id *)(a1 + a2[12]), *(_BYTE *)(a1 + a2[12] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[15]), *(_QWORD *)(a1 + a2[15] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[19]), *(_QWORD *)(a1 + a2[19] + 8), *(_BYTE *)(a1 + a2[19] + 16));
  return sub_1000A4240(*(_QWORD *)(a1 + a2[20]), *(_QWORD *)(a1 + a2[20] + 8), *(_BYTE *)(a1 + a2[20] + 16));
}

uint64_t sub_100843DD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  void (*v134)(char *, char *, uint64_t);
  char *__dst;
  int *v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;

  v6 = type metadata accessor for Artist(0);
  v139 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
  *v9 = *(_QWORD *)v10;
  if (EnumCaseMultiPayload == 1)
  {
    v134 = (void (*)(char *, char *, uint64_t))v7;
    v137 = v11;
    v13 = type metadata accessor for Library.Context(0);
    v14 = *(int *)(v13 + 20);
    v138 = v9;
    __dst = (char *)v9 + v14;
    v136 = (int *)v13;
    v15 = &v10[v14];
    v16 = type metadata accessor for Album(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48);
    v19 = swift_retain();
    if (v18(v15, 1, v16, v19))
    {
      v20 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    v9 = v138;
    v22 = v136[6];
    v23 = (char *)v138 + v22;
    v24 = &v10[v22];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(&v10[v22], 1, v6))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v134(v23, v24, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v23, 0, 1, v6);
    }
    v26 = v136[7];
    v27 = (char *)v138 + v26;
    v28 = &v10[v26];
    v29 = type metadata accessor for Composer(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v32 = v136[8];
    v33 = (char *)v138 + v32;
    v34 = &v10[v32];
    v35 = type metadata accessor for Genre(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_100007E8C(&qword_10119ED08);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v38 = v136[9];
    v39 = (char *)v138 + v38;
    v40 = &v10[v38];
    v41 = type metadata accessor for Playlist(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v44 = v136[10];
    v45 = (char *)v138 + v44;
    v46 = &v10[v44];
    v47 = type metadata accessor for TVShow(0);
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    v50 = v136[11];
    v51 = (char *)v138 + v50;
    v52 = &v10[v50];
    v53 = type metadata accessor for TVSeason(0);
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    *((_BYTE *)v138 + v136[12]) = v10[v136[12]];
    *((_BYTE *)v138 + v136[13]) = v10[v136[13]];
    *((_BYTE *)v138 + v136[14]) = v10[v136[14]];
    v56 = v136[15];
    v57 = (_QWORD *)((char *)v138 + v56);
    v58 = &v10[v56];
    v59 = *((_QWORD *)v58 + 1);
    *v57 = *(_QWORD *)v58;
    v57[1] = v59;
    *(_QWORD *)((char *)v138 + v136[16]) = *(_QWORD *)&v10[v136[16]];
    *((_BYTE *)v138 + v136[17]) = v10[v136[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = 1;
    v11 = v137;
  }
  else
  {
    swift_retain();
    v21 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v21);
  v60 = a3[7];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v63 = *(_QWORD *)v62;
  v64 = *(_QWORD *)(v62 + 8);
  v65 = *(_BYTE *)(v62 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v62, v64);
  *(_QWORD *)v61 = v63;
  *(_QWORD *)(v61 + 8) = v64;
  *(_BYTE *)(v61 + 16) = v65;
  v66 = a3[8];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = *(_QWORD *)v68;
  v70 = *(_QWORD *)(v68 + 8);
  v71 = *(_BYTE *)(v68 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v68, v70);
  *(_QWORD *)v67 = v69;
  *(_QWORD *)(v67 + 8) = v70;
  *(_BYTE *)(v67 + 16) = v71;
  v72 = a3[9];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  v75 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v74, v75) == 1)
  {
    v76 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v73, v74, v76);
    v77 = 1;
  }
  else
  {
    *v73 = *v74;
    swift_retain();
    v77 = 0;
  }
  swift_storeEnumTagMultiPayload(v73, v75, v77);
  v78 = a3[10];
  v79 = a1 + v78;
  v80 = a2 + v78;
  v81 = *(_QWORD *)v80;
  v82 = *(_QWORD *)(v80 + 8);
  v83 = *(_QWORD *)(v80 + 16);
  v84 = *(_QWORD *)(v80 + 24);
  v85 = *(_BYTE *)(v80 + 32);
  sub_100154A5C(*(_QWORD *)v80, v82, v83, v84, v85);
  *(_QWORD *)v79 = v81;
  *(_QWORD *)(v79 + 8) = v82;
  *(_QWORD *)(v79 + 16) = v83;
  *(_QWORD *)(v79 + 24) = v84;
  *(_BYTE *)(v79 + 32) = v85;
  v86 = a3[11];
  v87 = a3[12];
  v88 = (_QWORD *)(a1 + v86);
  v89 = (uint64_t *)(a2 + v86);
  v90 = *v89;
  v91 = v89[1];
  *v88 = v90;
  v88[1] = v91;
  v92 = a1 + v87;
  v93 = *(void **)(a2 + v87);
  LOBYTE(v82) = *(_BYTE *)(a2 + v87 + 8);
  swift_retain();
  sub_1000A4100(v93, v82);
  *(_QWORD *)v92 = v93;
  *(_BYTE *)(v92 + 8) = v82;
  v94 = a3[13];
  v95 = a3[14];
  v96 = (_QWORD *)(a1 + v94);
  v97 = (uint64_t *)(a2 + v94);
  v98 = *v97;
  v99 = v97[1];
  *v96 = v98;
  v96[1] = v99;
  v100 = (_QWORD *)(a1 + v95);
  v101 = (uint64_t *)(a2 + v95);
  v103 = *v101;
  v102 = v101[1];
  *v100 = v103;
  v100[1] = v102;
  v104 = a3[15];
  v105 = a1 + v104;
  v106 = a2 + v104;
  v107 = *(_QWORD *)v106;
  v108 = *(_QWORD *)(v106 + 8);
  LOBYTE(v84) = *(_BYTE *)(v106 + 16);
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v107, v108);
  *(_QWORD *)v105 = v107;
  *(_QWORD *)(v105 + 8) = v108;
  *(_BYTE *)(v105 + 16) = v84;
  v109 = a3[16];
  v110 = a3[17];
  v111 = (_QWORD *)(a1 + v109);
  v112 = (uint64_t *)(a2 + v109);
  v113 = *v112;
  v114 = v112[1];
  *v111 = v113;
  v111[1] = v114;
  v115 = (_QWORD *)(a1 + v110);
  v116 = (uint64_t *)(a2 + v110);
  v118 = *v116;
  v117 = v116[1];
  *v115 = v118;
  v115[1] = v117;
  v119 = a3[18];
  v120 = a3[19];
  v121 = (_QWORD *)(a1 + v119);
  v122 = (uint64_t *)(a2 + v119);
  v124 = *v122;
  v123 = v122[1];
  *v121 = v124;
  v121[1] = v123;
  v125 = a1 + v120;
  v126 = *(_QWORD *)(a2 + v120);
  v127 = *(_QWORD *)(a2 + v120 + 8);
  LOBYTE(v105) = *(_BYTE *)(a2 + v120 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v126, v127, v105);
  *(_QWORD *)v125 = v126;
  *(_QWORD *)(v125 + 8) = v127;
  *(_BYTE *)(v125 + 16) = v105;
  v128 = a3[20];
  v129 = a1 + v128;
  v130 = a2 + v128;
  v131 = *(_QWORD *)v130;
  v132 = *(_QWORD *)(v130 + 8);
  LOBYTE(v118) = *(_BYTE *)(v130 + 16);
  sub_1000A411C(*(_QWORD *)v130, v132, v118);
  *(_QWORD *)v129 = v131;
  *(_QWORD *)(v129 + 8) = v132;
  *(_BYTE *)(v129 + 16) = v118;
  return a1;
}

uint64_t sub_100844500(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char *__dst;
  char *v142;
  uint64_t v143;
  _QWORD *v144;
  int *v145;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  if (a1 != a2)
  {
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    sub_10004FF60(a1 + v8, &qword_10119F030);
    v11 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    *v9 = *(_QWORD *)v10;
    if (EnumCaseMultiPayload == 1)
    {
      v143 = v11;
      v144 = v9;
      v145 = (int *)type metadata accessor for Library.Context(0);
      v13 = v145[5];
      __dst = (char *)v9 + v13;
      v142 = v10;
      v14 = &v10[v13];
      v15 = type metadata accessor for Album(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48);
      v18 = swift_retain();
      if (v17(v14, 1, v15, v18))
      {
        v19 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      v9 = v144;
      v21 = v145[6];
      v22 = (char *)v144 + v21;
      v23 = &v142[v21];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&v142[v21], 1, v6))
      {
        v24 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v22, v23, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
      }
      v25 = v145[7];
      v26 = (char *)v144 + v25;
      v27 = &v142[v25];
      v28 = type metadata accessor for Composer(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v31 = v145[8];
      v32 = (char *)v144 + v31;
      v33 = &v142[v31];
      v34 = type metadata accessor for Genre(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C(&qword_10119ED08);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = v145[9];
      v38 = (char *)v144 + v37;
      v39 = &v142[v37];
      v40 = type metadata accessor for Playlist(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v145[10];
      v44 = (char *)v144 + v43;
      v45 = &v142[v43];
      v46 = type metadata accessor for TVShow(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v49 = v145[11];
      v50 = (char *)v144 + v49;
      v51 = &v142[v49];
      v52 = type metadata accessor for TVSeason(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      *((_BYTE *)v144 + v145[12]) = v142[v145[12]];
      *((_BYTE *)v144 + v145[13]) = v142[v145[13]];
      *((_BYTE *)v144 + v145[14]) = v142[v145[14]];
      v55 = v145[15];
      v56 = (_QWORD *)((char *)v144 + v55);
      v57 = &v142[v55];
      *v56 = *(_QWORD *)v57;
      v56[1] = *((_QWORD *)v57 + 1);
      *(_QWORD *)((char *)v144 + v145[16]) = *(_QWORD *)&v142[v145[16]];
      *((_BYTE *)v144 + v145[17]) = v142[v145[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = 1;
      v11 = v143;
    }
    else
    {
      swift_retain();
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v20);
  }
  v58 = a3[7];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = *(_QWORD *)v60;
  v62 = *(_QWORD *)(v60 + 8);
  v63 = *(_BYTE *)(v60 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v60, v62);
  v64 = *(_QWORD *)v59;
  v65 = *(_QWORD *)(v59 + 8);
  *(_QWORD *)v59 = v61;
  *(_QWORD *)(v59 + 8) = v62;
  *(_BYTE *)(v59 + 16) = v63;
  sub_1000A6174(v64, v65);
  v66 = a3[8];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = *(_QWORD *)v68;
  v70 = *(_QWORD *)(v68 + 8);
  v71 = *(_BYTE *)(v68 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v68, v70);
  v72 = *(_QWORD *)v67;
  v73 = *(_QWORD *)(v67 + 8);
  *(_QWORD *)v67 = v69;
  *(_QWORD *)(v67 + 8) = v70;
  *(_BYTE *)(v67 + 16) = v71;
  sub_1000A6174(v72, v73);
  if (a1 != a2)
  {
    v74 = a3[9];
    v75 = (_QWORD *)(a1 + v74);
    v76 = (_QWORD *)(a2 + v74);
    sub_10004FF60(a1 + v74, (uint64_t *)&unk_1011C72D0);
    v77 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v76, v77) == 1)
    {
      v78 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v75, v76, v78);
      v79 = 1;
    }
    else
    {
      *v75 = *v76;
      swift_retain();
      v79 = 0;
    }
    swift_storeEnumTagMultiPayload(v75, v77, v79);
  }
  v80 = a3[10];
  v81 = a1 + v80;
  v82 = a2 + v80;
  v83 = *(_QWORD *)v82;
  v84 = *(_QWORD *)(v82 + 8);
  v85 = *(_QWORD *)(v82 + 16);
  v86 = *(_QWORD *)(v82 + 24);
  v87 = *(_BYTE *)(v82 + 32);
  sub_100154A5C(*(_QWORD *)v82, v84, v85, v86, v87);
  v88 = *(_QWORD *)v81;
  v89 = *(_QWORD *)(v81 + 8);
  v90 = *(_QWORD *)(v81 + 16);
  v91 = *(_QWORD *)(v81 + 24);
  v92 = *(_BYTE *)(v81 + 32);
  *(_QWORD *)v81 = v83;
  *(_QWORD *)(v81 + 8) = v84;
  *(_QWORD *)(v81 + 16) = v85;
  *(_QWORD *)(v81 + 24) = v86;
  *(_BYTE *)(v81 + 32) = v87;
  sub_1002BD420(v88, v89, v90, v91, v92);
  v93 = a3[11];
  v94 = a1 + v93;
  v95 = a2 + v93;
  *(_QWORD *)(a1 + v93) = *(_QWORD *)(a2 + v93);
  swift_retain();
  swift_release();
  *(_QWORD *)(v94 + 8) = *(_QWORD *)(v95 + 8);
  v96 = a3[12];
  v97 = a1 + v96;
  v98 = a2 + v96;
  v99 = *(id *)v98;
  LOBYTE(v94) = *(_BYTE *)(v98 + 8);
  sub_1000A4100(*(id *)v98, v94);
  v100 = *(void **)v97;
  v101 = *(_BYTE *)(v97 + 8);
  *(_QWORD *)v97 = v99;
  *(_BYTE *)(v97 + 8) = v94;
  sub_1000A4224(v100, v101);
  v102 = a3[13];
  v103 = a1 + v102;
  v104 = a2 + v102;
  *(_QWORD *)(a1 + v102) = *(_QWORD *)(a2 + v102);
  swift_retain();
  swift_release();
  *(_QWORD *)(v103 + 8) = *(_QWORD *)(v104 + 8);
  v105 = a3[14];
  v106 = a1 + v105;
  v107 = a2 + v105;
  *(_QWORD *)(a1 + v105) = *(_QWORD *)(a2 + v105);
  swift_retain();
  swift_release();
  *(_QWORD *)(v106 + 8) = *(_QWORD *)(v107 + 8);
  v108 = a3[15];
  v109 = a1 + v108;
  v110 = a2 + v108;
  v111 = *(_QWORD *)v110;
  v112 = *(_QWORD *)(v110 + 8);
  LOBYTE(v107) = *(_BYTE *)(v110 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v110, v112);
  v113 = *(_QWORD *)v109;
  v114 = *(_QWORD *)(v109 + 8);
  *(_QWORD *)v109 = v111;
  *(_QWORD *)(v109 + 8) = v112;
  *(_BYTE *)(v109 + 16) = v107;
  sub_1000A6174(v113, v114);
  v115 = a3[16];
  v116 = a1 + v115;
  v117 = a2 + v115;
  *(_QWORD *)(a1 + v115) = *(_QWORD *)(a2 + v115);
  swift_retain();
  swift_release();
  *(_QWORD *)(v116 + 8) = *(_QWORD *)(v117 + 8);
  v118 = a3[17];
  v119 = a1 + v118;
  v120 = a2 + v118;
  *(_QWORD *)(a1 + v118) = *(_QWORD *)(a2 + v118);
  swift_retain();
  swift_release();
  *(_QWORD *)(v119 + 8) = *(_QWORD *)(v120 + 8);
  v121 = a3[18];
  v122 = a1 + v121;
  v123 = a2 + v121;
  *(_QWORD *)(a1 + v121) = *(_QWORD *)(a2 + v121);
  swift_retain();
  swift_release();
  *(_QWORD *)(v122 + 8) = *(_QWORD *)(v123 + 8);
  v124 = a3[19];
  v125 = a1 + v124;
  v126 = a2 + v124;
  v127 = *(_QWORD *)v126;
  v128 = *(_QWORD *)(v126 + 8);
  LOBYTE(v123) = *(_BYTE *)(v126 + 16);
  sub_1000A410C(*(_QWORD *)v126, v128, v123);
  v129 = *(_QWORD *)v125;
  v130 = *(_QWORD *)(v125 + 8);
  v131 = *(_BYTE *)(v125 + 16);
  *(_QWORD *)v125 = v127;
  *(_QWORD *)(v125 + 8) = v128;
  *(_BYTE *)(v125 + 16) = v123;
  sub_1000A4230(v129, v130, v131);
  v132 = a3[20];
  v133 = a1 + v132;
  v134 = a2 + v132;
  v135 = *(_QWORD *)v134;
  v136 = *(_QWORD *)(v134 + 8);
  LOBYTE(v127) = *(_BYTE *)(v134 + 16);
  sub_1000A411C(*(_QWORD *)v134, v136, v127);
  v137 = *(_QWORD *)v133;
  v138 = *(_QWORD *)(v133 + 8);
  v139 = *(_BYTE *)(v133 + 16);
  *(_QWORD *)v133 = v135;
  *(_QWORD *)(v133 + 8) = v136;
  *(_BYTE *)(v133 + 16) = v127;
  sub_1000A4240(v137, v138, v139);
  return a1;
}

uint64_t sub_100844D3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 *v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v85)(char *, char *, uint64_t);
  int *v86;
  uint64_t v87;
  char *__dst;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v85 = (void (*)(char *, char *, uint64_t))v8;
    v87 = v12;
    *v10 = *(_QWORD *)v11;
    v86 = (int *)type metadata accessor for Library.Context(0);
    v13 = v86[5];
    __dst = (char *)v10 + v13;
    v14 = &v11[v13];
    v15 = type metadata accessor for Album(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    v18 = v86[6];
    v19 = (char *)v10 + v18;
    v20 = &v11[v18];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&v11[v18], 1, v6))
    {
      v21 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v85(v19, v20, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
    }
    v22 = v86[7];
    v23 = (char *)v10 + v22;
    v24 = &v11[v22];
    v25 = type metadata accessor for Composer(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v28 = v86[8];
    v29 = (char *)v10 + v28;
    v30 = &v11[v28];
    v31 = type metadata accessor for Genre(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100007E8C(&qword_10119ED08);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v34 = v86[9];
    v35 = (char *)v10 + v34;
    v36 = &v11[v34];
    v37 = type metadata accessor for Playlist(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v40 = v86[10];
    v41 = (char *)v10 + v40;
    v42 = &v11[v40];
    v43 = type metadata accessor for TVShow(0);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    v46 = v86[11];
    v47 = (char *)v10 + v46;
    v48 = &v11[v46];
    v49 = type metadata accessor for TVSeason(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    *((_BYTE *)v10 + v86[12]) = v11[v86[12]];
    *((_BYTE *)v10 + v86[13]) = v11[v86[13]];
    *((_BYTE *)v10 + v86[14]) = v11[v86[14]];
    *(_OWORD *)((char *)v10 + v86[15]) = *(_OWORD *)&v11[v86[15]];
    *(_QWORD *)((char *)v10 + v86[16]) = *(_QWORD *)&v11[v86[16]];
    *((_BYTE *)v10 + v86[17]) = v11[v86[17]];
    swift_storeEnumTagMultiPayload(v10, v87, 1);
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v52 = a3[7];
  v53 = a3[8];
  v54 = a1 + v52;
  v55 = (__int128 *)(a2 + v52);
  v56 = *v55;
  *(_BYTE *)(v54 + 16) = *((_BYTE *)v55 + 16);
  *(_OWORD *)v54 = v56;
  v57 = a1 + v53;
  v58 = a2 + v53;
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *(_BYTE *)(v57 + 16) = *(_BYTE *)(v58 + 16);
  v59 = a3[9];
  v60 = (void *)(a1 + v59);
  v61 = (const void *)(a2 + v59);
  v62 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v61, v62) == 1)
  {
    v63 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v60, v61, v63);
    swift_storeEnumTagMultiPayload(v60, v62, 1);
  }
  else
  {
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  v64 = a3[10];
  v65 = a3[11];
  v66 = a1 + v64;
  v67 = a2 + v64;
  v68 = *(_OWORD *)(v67 + 16);
  *(_OWORD *)v66 = *(_OWORD *)v67;
  *(_OWORD *)(v66 + 16) = v68;
  *(_BYTE *)(v66 + 32) = *(_BYTE *)(v67 + 32);
  *(_OWORD *)(a1 + v65) = *(_OWORD *)(a2 + v65);
  v69 = a3[12];
  v70 = a3[13];
  v71 = a1 + v69;
  v72 = a2 + v69;
  *(_QWORD *)v71 = *(_QWORD *)v72;
  *(_BYTE *)(v71 + 8) = *(_BYTE *)(v72 + 8);
  *(_OWORD *)(a1 + v70) = *(_OWORD *)(a2 + v70);
  v73 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  v74 = a1 + v73;
  v75 = (__int128 *)(a2 + v73);
  v76 = *v75;
  *(_BYTE *)(v74 + 16) = *((_BYTE *)v75 + 16);
  *(_OWORD *)v74 = v76;
  v77 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v77) = *(_OWORD *)(a2 + v77);
  v78 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  v79 = a1 + v78;
  v80 = a2 + v78;
  *(_BYTE *)(v79 + 16) = *(_BYTE *)(v80 + 16);
  *(_OWORD *)v79 = *(_OWORD *)v80;
  v81 = a3[20];
  v82 = a1 + v81;
  v83 = a2 + v81;
  *(_BYTE *)(v82 + 16) = *(_BYTE *)(v83 + 16);
  *(_OWORD *)v82 = *(_OWORD *)v83;
  return a1;
}

uint64_t sub_100845374(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  void *v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  int *v123;
  uint64_t v124;
  char *__dst;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  if (a1 != a2)
  {
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    sub_10004FF60(a1 + v8, &qword_10119F030);
    v11 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v124 = v11;
      *v9 = *(_QWORD *)v10;
      v123 = (int *)type metadata accessor for Library.Context(0);
      v12 = v123[5];
      __dst = (char *)v9 + v12;
      v13 = &v10[v12];
      v14 = type metadata accessor for Album(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
      }
      v17 = v123[6];
      v18 = (char *)v9 + v17;
      v19 = &v10[v17];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&v10[v17], 1, v6))
      {
        v20 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v18, v19, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
      }
      v21 = v123[7];
      v22 = (char *)v9 + v21;
      v23 = &v10[v21];
      v24 = type metadata accessor for Composer(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      v27 = v123[8];
      v28 = (char *)v9 + v27;
      v29 = &v10[v27];
      v30 = type metadata accessor for Genre(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C(&qword_10119ED08);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v33 = v123[9];
      v34 = (char *)v9 + v33;
      v35 = &v10[v33];
      v36 = type metadata accessor for Playlist(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v123[10];
      v40 = (char *)v9 + v39;
      v41 = &v10[v39];
      v42 = type metadata accessor for TVShow(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = v123[11];
      v46 = (char *)v9 + v45;
      v47 = &v10[v45];
      v48 = type metadata accessor for TVSeason(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      *((_BYTE *)v9 + v123[12]) = v10[v123[12]];
      *((_BYTE *)v9 + v123[13]) = v10[v123[13]];
      *((_BYTE *)v9 + v123[14]) = v10[v123[14]];
      *(_OWORD *)((char *)v9 + v123[15]) = *(_OWORD *)&v10[v123[15]];
      *(_QWORD *)((char *)v9 + v123[16]) = *(_QWORD *)&v10[v123[16]];
      *((_BYTE *)v9 + v123[17]) = v10[v123[17]];
      swift_storeEnumTagMultiPayload(v9, v124, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v51 = a3[7];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = *(_BYTE *)(v53 + 16);
  v55 = *(_QWORD *)v52;
  v56 = *(_QWORD *)(v52 + 8);
  *(_OWORD *)v52 = *(_OWORD *)v53;
  *(_BYTE *)(v52 + 16) = v54;
  sub_1000A6174(v55, v56);
  v57 = a3[8];
  v58 = a1 + v57;
  v59 = a2 + v57;
  v60 = *(_BYTE *)(v59 + 16);
  v61 = *(_QWORD *)v58;
  v62 = *(_QWORD *)(v58 + 8);
  *(_OWORD *)v58 = *(_OWORD *)v59;
  *(_BYTE *)(v58 + 16) = v60;
  sub_1000A6174(v61, v62);
  if (a1 != a2)
  {
    v63 = a3[9];
    v64 = (void *)(a1 + v63);
    v65 = (const void *)(a2 + v63);
    sub_10004FF60(a1 + v63, (uint64_t *)&unk_1011C72D0);
    v66 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v65, v66) == 1)
    {
      v67 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v64, v65, v67);
      swift_storeEnumTagMultiPayload(v64, v66, 1);
    }
    else
    {
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
  }
  v68 = a3[10];
  v69 = a1 + v68;
  v70 = a2 + v68;
  v71 = *(_BYTE *)(v70 + 32);
  v72 = *(_QWORD *)v69;
  v73 = *(_QWORD *)(v69 + 8);
  v74 = *(_QWORD *)(v69 + 16);
  v75 = *(_QWORD *)(v69 + 24);
  v76 = *(_BYTE *)(v69 + 32);
  v77 = *(_OWORD *)(v70 + 16);
  *(_OWORD *)v69 = *(_OWORD *)v70;
  *(_OWORD *)(v69 + 16) = v77;
  *(_BYTE *)(v69 + 32) = v71;
  sub_1002BD420(v72, v73, v74, v75, v76);
  v78 = a3[11];
  v79 = a1 + v78;
  v80 = a2 + v78;
  *(_QWORD *)(a1 + v78) = *(_QWORD *)(a2 + v78);
  swift_release();
  *(_QWORD *)(v79 + 8) = *(_QWORD *)(v80 + 8);
  v81 = a3[12];
  v82 = a1 + v81;
  v83 = (uint64_t *)(a2 + v81);
  v84 = *v83;
  LOBYTE(v83) = *((_BYTE *)v83 + 8);
  v85 = *(void **)v82;
  v86 = *(_BYTE *)(v82 + 8);
  *(_QWORD *)v82 = v84;
  *(_BYTE *)(v82 + 8) = (_BYTE)v83;
  sub_1000A4224(v85, v86);
  v87 = a3[13];
  v88 = a1 + v87;
  v89 = a2 + v87;
  *(_QWORD *)(a1 + v87) = *(_QWORD *)(a2 + v87);
  swift_release();
  *(_QWORD *)(v88 + 8) = *(_QWORD *)(v89 + 8);
  v90 = a3[14];
  v91 = a1 + v90;
  v92 = a2 + v90;
  *(_QWORD *)(a1 + v90) = *(_QWORD *)(a2 + v90);
  swift_release();
  *(_QWORD *)(v91 + 8) = *(_QWORD *)(v92 + 8);
  v93 = a3[15];
  v94 = a1 + v93;
  v95 = a2 + v93;
  v96 = *(_BYTE *)(v95 + 16);
  v97 = *(_QWORD *)v94;
  v98 = *(_QWORD *)(v94 + 8);
  *(_OWORD *)v94 = *(_OWORD *)v95;
  *(_BYTE *)(v94 + 16) = v96;
  sub_1000A6174(v97, v98);
  v99 = a3[16];
  v100 = a1 + v99;
  v101 = a2 + v99;
  *(_QWORD *)(a1 + v99) = *(_QWORD *)(a2 + v99);
  swift_release();
  *(_QWORD *)(v100 + 8) = *(_QWORD *)(v101 + 8);
  v102 = a3[17];
  v103 = a1 + v102;
  v104 = a2 + v102;
  *(_QWORD *)(a1 + v102) = *(_QWORD *)(a2 + v102);
  swift_release();
  *(_QWORD *)(v103 + 8) = *(_QWORD *)(v104 + 8);
  v105 = a3[18];
  v106 = a1 + v105;
  v107 = a2 + v105;
  *(_QWORD *)(a1 + v105) = *(_QWORD *)(a2 + v105);
  swift_release();
  *(_QWORD *)(v106 + 8) = *(_QWORD *)(v107 + 8);
  v108 = a3[19];
  v109 = a1 + v108;
  v110 = a2 + v108;
  v111 = *(_BYTE *)(v110 + 16);
  v112 = *(_QWORD *)v109;
  v113 = *(_QWORD *)(v109 + 8);
  v114 = *(_BYTE *)(v109 + 16);
  *(_OWORD *)v109 = *(_OWORD *)v110;
  *(_BYTE *)(v109 + 16) = v111;
  sub_1000A4230(v112, v113, v114);
  v115 = a3[20];
  v116 = a1 + v115;
  v117 = a2 + v115;
  v118 = *(_BYTE *)(v117 + 16);
  v119 = *(_QWORD *)v116;
  v120 = *(_QWORD *)(v116 + 8);
  v121 = *(_BYTE *)(v116 + 16);
  *(_OWORD *)v116 = *(_OWORD *)v117;
  *(_BYTE *)(v116 + 16) = v118;
  sub_1000A4240(v119, v120, v121);
  return a1;
}

uint64_t sub_100845ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100845AE8);
}

uint64_t sub_100845AE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  int v17;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100007E8C(&qword_10119EE98);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[6];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[9];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[11]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  v17 = v16 - 1;
  if (v17 < 0)
    v17 = -1;
  return (v17 + 1);
}

uint64_t sub_100845BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100845BD4);
}

uint64_t sub_100845BD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_100007E8C(&qword_10119EE98);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[6];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = sub_100007E8C((uint64_t *)&unk_1011C72A0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[9];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[11]) = a2;
  return result;
}

void sub_100845CA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[17];

  v2 = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_1000A79B0(319, (unint64_t *)&qword_10119F6B0, type metadata accessor for Library.Context);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v8[3] = &unk_100ED2C88;
      v8[4] = &unk_100ED2C88;
      sub_1000A79B0(319, (unint64_t *)&qword_10119F6B8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus);
      if (v7 <= 0x3F)
      {
        v8[5] = *(_QWORD *)(v6 - 8) + 64;
        v8[6] = &unk_100ED2CA0;
        v8[7] = &unk_100ED2CB8;
        v8[8] = &unk_100ED2CD0;
        v8[9] = &unk_100ED2CB8;
        v8[10] = &unk_100ED2CB8;
        v8[11] = &unk_100ED2C88;
        v8[12] = &unk_100ED2CB8;
        v8[13] = &unk_100ED2CB8;
        v8[14] = &unk_100ED2CB8;
        v8[15] = &unk_100ED2C88;
        v8[16] = &unk_100ED2C88;
        swift_initStructMetadata(a1, 256, 17, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_100845DA8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE92C, 1);
}

uint64_t sub_100845DB8@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t OpaqueTypeConformance2;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65[16];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v64 = a1;
  v3 = type metadata accessor for ContentMarginPlacement(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011CC248);
  v54 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011CC250);
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100007E8C(&qword_1011CC258);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v57 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011CC260);
  v61 = *(_QWORD *)(v14 - 8);
  v62 = v14;
  __chkstk_darwin(v14);
  v59 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v2;
  v66 = v2;
  v17 = static Axis.Set.vertical.getter(v16);
  v18 = sub_100007E8C(&qword_1011CC268);
  v19 = sub_10084D0E8();
  v20 = ScrollView.init(_:showsIndicators:content:)(v17, 1, sub_10084D0E0, v65, v18, v19);
  v21 = static Edge.Set.top.getter(v20);
  static ContentMarginPlacement.scrollIndicators.getter(v21);
  v22 = sub_100049F28(&qword_1011CC288, &qword_1011CC248, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  View.contentMargins(_:_:for:)(v21, 0, 0, v6, v7, v22);
  v23 = *(void (**)(char *, uint64_t))(v4 + 8);
  v24 = v3;
  v23(v6, v3);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v9, v7);
  v26 = static Edge.Set.bottom.getter(v25);
  v27 = v26;
  if (qword_10119C8B0 != -1)
    v26 = swift_once(&qword_10119C8B0, sub_10085F8B4);
  v28 = qword_10124DA28;
  static ContentMarginPlacement.scrollIndicators.getter(v26);
  v67 = v7;
  v68 = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v67, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
  v30 = v57;
  v31 = v28;
  v32 = v56;
  View.contentMargins(_:_:for:)(v27, v31, 0, v6, v56, OpaqueTypeConformance2);
  v23(v6, v24);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v12, v32);
  __chkstk_darwin(v33);
  v34 = v63;
  *(&v53 - 2) = v63;
  v35 = sub_100007E8C(&qword_1011CC290);
  v55 = v35;
  v67 = v32;
  v68 = OpaqueTypeConformance2;
  v36 = swift_getOpaqueTypeConformance2(&v67, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
  v37 = sub_100044B54(&qword_1011CC298);
  v38 = sub_100049F28(&qword_1011CC2A0, &qword_1011CC298, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
  v67 = v37;
  v68 = v38;
  v39 = swift_getOpaqueTypeConformance2(&v67, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v40 = v59;
  v41 = v60;
  View.toolbar<A>(content:)(sub_10084D9B8, &v53 - 4, v60, v35, v36, v39);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v41);
  v42 = (uint64_t *)(v34 + *(int *)(_s16ArtistDetailViewVMa(0) + 60));
  v43 = *v42;
  v44 = v42[1];
  v45 = *((unsigned __int8 *)v42 + 16);
  v46 = sub_100007E8C(&qword_1011A03A8);
  v47 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v48 = StateObject.wrappedValue.getter(v43, v44, v45, v46, v47);
  v67 = v41;
  v68 = v55;
  v69 = v36;
  v70 = v39;
  v49 = swift_getOpaqueTypeConformance2(&v67, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v50 = v62;
  View.shareSheetPresenting(_:)(v48, v62, v49);
  v51 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v61 + 8))(v40, v50, v51);
}

uint64_t sub_10084623C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v21[2];
  char v22;
  _BYTE v23[40];

  v4 = sub_100007E8C(&qword_1011CC280);
  __chkstk_darwin(v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v7);
  *((_QWORD *)v6 + 1) = 0x403C000000000000;
  v6[16] = 0;
  v8 = sub_100007E8C(&qword_1011CC2D0);
  sub_100846398(a1, (uint64_t)&v6[*(int *)(v8 + 44)]);
  v9 = a1 + *(int *)(_s16ArtistDetailViewVMa(0) + 40);
  v10 = *(_OWORD *)(v9 + 16);
  v21[0] = *(_OWORD *)v9;
  v21[1] = v10;
  v22 = *(_BYTE *)(v9 + 32);
  sub_100065228((uint64_t)v21, (uint64_t)v23, &qword_1011AA450);
  sub_10006FDA8((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100154A5C);
  v11 = sub_100825088();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = sub_10006FDA8((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  LOBYTE(a1) = static Edge.Set.all.getter(v18);
  sub_10004A160((uint64_t)v6, a2, &qword_1011CC280);
  v19 = a2 + *(int *)(sub_100007E8C(&qword_1011CC268) + 36);
  *(_BYTE *)v19 = a1;
  *(double *)(v19 + 8) = v11;
  *(_QWORD *)(v19 + 16) = v13;
  *(_QWORD *)(v19 + 24) = v15;
  *(_QWORD *)(v19 + 32) = v17;
  *(_BYTE *)(v19 + 40) = 0;
  return sub_10004FF60((uint64_t)v6, &qword_1011CC280);
}

uint64_t sub_100846398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t *v104;
  uint64_t *v105;
  char *v106;
  char *v107;
  uint64_t KeyPath;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  unint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  double v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __n128 v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int *v188;
  uint64_t v189;
  char v190;
  int *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t (**v195)(uint64_t);
  void (*v196)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t OpaqueTypeConformance2;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  __n128 v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int *v233;
  uint64_t v234;
  int *v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t (**v239)(uint64_t);
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  int *v272;
  uint64_t *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  uint64_t **v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  char *v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t **v338;
  char *v339;
  char *v340;
  uint64_t v341;
  char *v342;
  uint64_t v343;
  uint64_t v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  void (*v350)(char *, uint64_t);
  uint64_t v351;
  uint64_t v352;
  char v353;
  int *v354;
  uint64_t v355;
  char v356;

  v335 = a2;
  v331 = sub_100007E8C(&qword_1011CC2D8);
  __chkstk_darwin(v331);
  v333 = (uint64_t)&v274 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v332 = sub_100007E8C(&qword_1011CC2E0);
  __chkstk_darwin(v332);
  v330 = (char *)&v274 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3880);
  __chkstk_darwin(v5);
  v321 = (char *)&v274 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v325 = sub_100007E8C(&qword_1011CC2E8);
  __chkstk_darwin(v325);
  v322 = (char *)&v274 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v323 = (uint64_t)&v274 - v9;
  v328 = sub_100007E8C(&qword_1011CC2F0);
  v327 = *(_QWORD *)(v328 - 8);
  __chkstk_darwin(v328);
  v326 = (char *)&v274 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011CC2F8);
  __chkstk_darwin(v11);
  v324 = (char *)&v274 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v334 = (uint64_t)&v274 - v14;
  __chkstk_darwin(v15);
  v329 = (uint64_t)&v274 - v16;
  v317 = sub_100007E8C(&qword_1011CC300);
  __chkstk_darwin(v317);
  v320 = (uint64_t)&v274 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v319 = sub_100007E8C(&qword_1011CC308);
  __chkstk_darwin(v319);
  v318 = (char *)&v274 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v19);
  v345 = (char *)&v274 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v21);
  v344 = (uint64_t)&v274 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v352 = (uint64_t)&v274 - v25;
  v343 = type metadata accessor for ContentMarginPlacement(0, v24);
  v311 = *(_QWORD *)(v343 - 8);
  __chkstk_darwin(v343);
  v342 = (char *)&v274 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v349 = _s16ArtistDetailViewVMa(0);
  v307 = *(_QWORD *)(v349 - 8);
  __chkstk_darwin(v349);
  v308 = v27;
  v341 = (uint64_t)&v274 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C((uint64_t *)&unk_1011A3900);
  __chkstk_darwin(v28);
  v338 = (uint64_t **)((char *)&v274 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v313 = sub_100007E8C(&qword_1011CC310);
  __chkstk_darwin(v313);
  v309 = (char *)&v274 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v310 = (uint64_t **)((char *)&v274 - v32);
  v315 = sub_100007E8C(&qword_1011CC318);
  v314 = *(_QWORD *)(v315 - 8);
  __chkstk_darwin(v315);
  v339 = (char *)&v274 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007E8C(&qword_1011CC320);
  __chkstk_darwin(v34);
  v312 = (char *)&v274 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v347 = (uint64_t)&v274 - v37;
  __chkstk_darwin(v38);
  v346 = (uint64_t)&v274 - v39;
  v293 = type metadata accessor for ButtonBorderShape(0);
  v292 = *(_QWORD *)(v293 - 8);
  __chkstk_darwin(v293);
  v291 = (char *)&v274 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v289 = type metadata accessor for BorderedProminentButtonStyle(0);
  v288 = *(_QWORD *)(v289 - 8);
  __chkstk_darwin(v289);
  v286 = (char *)&v274 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v281 = type metadata accessor for ControlSize(0);
  v280 = *(_QWORD *)(v281 - 8);
  __chkstk_darwin(v281);
  v278 = (char *)&v274 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100007E8C(&qword_1011A2D40);
  __chkstk_darwin(v43);
  v274 = (uint64_t *)((char *)&v274 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = sub_100007E8C(&qword_1011A2D48);
  __chkstk_darwin(v45);
  v275 = (uint64_t)&v274 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v276 = sub_100007E8C(&qword_1011CC328);
  __chkstk_darwin(v276);
  v277 = (char *)&v274 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v285 = sub_100007E8C(&qword_1011CC330);
  v284 = *(_QWORD *)(v285 - 8);
  __chkstk_darwin(v285);
  v282 = (char *)&v274 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v279 = sub_100007E8C(&qword_1011CC338);
  __chkstk_darwin(v279);
  v287 = (char *)&v274 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v303 = sub_100007E8C(&qword_1011CC340);
  __chkstk_darwin(v303);
  v283 = (uint64_t)&v274 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v290 = (uint64_t)&v274 - v52;
  v296 = type metadata accessor for ArtistPlaybackSource(0);
  __chkstk_darwin(v296);
  v297 = (uint64_t)&v274 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100007E8C(&qword_1011CC348);
  __chkstk_darwin(v54);
  v299 = (uint64_t)&v274 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v295 = sub_100007E8C((uint64_t *)&unk_1011C82D0);
  v294 = *(_QWORD *)(v295 - 8);
  __chkstk_darwin(v295);
  v301 = (uint64_t)&v274 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v302 = sub_100007E8C(&qword_1011CC350);
  __chkstk_darwin(v302);
  v304 = (uint64_t)&v274 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = (int *)_s16ArtistDetailViewV13NoContentViewVMa(0);
  __chkstk_darwin(v58);
  v60 = (char *)&v274 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v305 = sub_100007E8C(&qword_1011CC358);
  __chkstk_darwin(v305);
  v298 = (uint64_t)&v274 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v62);
  v300 = (uint64_t)&v274 - v63;
  v64 = sub_100007E8C(&qword_1011CC360);
  __chkstk_darwin(v64);
  v336 = (uint64_t)&v274 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v66);
  v337 = (uint64_t)&v274 - v67;
  v68 = _s16ArtistDetailViewV10HeaderViewVMa(0);
  __chkstk_darwin(v68);
  v70 = (char *)&v274 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100007E8C(&qword_1011CC368);
  __chkstk_darwin(v71);
  v73 = (char *)&v274 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v74);
  v76 = (char *)&v274 - v75;
  v77 = type metadata accessor for Artist(0);
  v306 = *(_QWORD *)(v77 - 8);
  v350 = *(void (**)(char *, uint64_t))(v306 + 16);
  v351 = v77;
  v350(v70, a1);
  v78 = sub_100007E8C(&qword_10119F038);
  v79 = sub_100049F28(&qword_10119F040, &qword_10119F038, (uint64_t)&unk_100EC0A50);
  v80 = EnvironmentObject.init()(v78, v79);
  v81 = (uint64_t *)&v70[*(int *)(v68 + 20)];
  *v81 = v80;
  v81[1] = v82;
  LOBYTE(v78) = static Edge.Set.horizontal.getter(v80);
  v83 = EdgeInsets.init(_all:)(*(double *)&qword_1011CCD38);
  v85 = v84;
  v87 = v86;
  v89 = v88;
  sub_10005B704((uint64_t)v70, (uint64_t)v73, _s16ArtistDetailViewV10HeaderViewVMa);
  v90 = &v73[*(int *)(v71 + 36)];
  *v90 = v78;
  *((double *)v90 + 1) = v83;
  *((_QWORD *)v90 + 2) = v85;
  *((_QWORD *)v90 + 3) = v87;
  *((_QWORD *)v90 + 4) = v89;
  v90[40] = 0;
  v91 = (uint64_t)v70;
  v92 = a1;
  sub_10005B748(v91, _s16ArtistDetailViewV10HeaderViewVMa);
  v316 = v73;
  v340 = v76;
  sub_100065228((uint64_t)v73, (uint64_t)v76, &qword_1011CC368);
  if (sub_10084819C())
  {
    ((void (*)(char *, uint64_t, uint64_t))v350)(v60, a1, v351);
    v93 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v94 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    v95 = EnvironmentObject.init()(v93, v94);
    v97 = v96;
    v98 = type metadata accessor for TabSelectionManager(0);
    v99 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    v100 = EnvironmentObject.init()(v98, v99);
    v102 = v101;
    v103 = &v60[v58[5]];
    *(_QWORD *)v103 = swift_getKeyPath(&unk_100ED2BF8);
    v103[8] = 0;
    v104 = (uint64_t *)&v60[v58[6]];
    *v104 = v95;
    v104[1] = v97;
    v105 = (uint64_t *)&v60[v58[7]];
    *v105 = v100;
    v105[1] = v102;
    v106 = &v60[v58[8]];
    *(_QWORD *)v106 = swift_getKeyPath(&unk_100ED2C20);
    *((_QWORD *)v106 + 1) = 0;
    v106[16] = 0;
    v107 = &v60[v58[9]];
    KeyPath = swift_getKeyPath(&unk_100ED2C48);
    *(_QWORD *)v107 = KeyPath;
    *((_QWORD *)v107 + 1) = 0;
    v107[16] = 0;
    LOBYTE(v107) = static Edge.Set.horizontal.getter(KeyPath);
    v109 = v298;
    sub_10005B704((uint64_t)v60, v298, _s16ArtistDetailViewV13NoContentViewVMa);
    v110 = v305;
    v111 = v109 + *(int *)(v305 + 36);
    *(_BYTE *)v111 = (_BYTE)v107;
    *(_OWORD *)(v111 + 8) = 0u;
    *(_OWORD *)(v111 + 24) = 0u;
    *(_BYTE *)(v111 + 40) = 1;
    sub_10005B748((uint64_t)v60, _s16ArtistDetailViewV13NoContentViewVMa);
    v112 = v300;
    sub_100065228(v109, v300, &qword_1011CC358);
    v113 = v304;
    sub_10004A160(v112, v304, &qword_1011CC358);
    swift_storeEnumTagMultiPayload(v113, v302, 0);
    v114 = sub_10084E144();
    v115 = sub_10005610C(&qword_1011CC3D0, &qword_1011CC340, (void (*)(void))sub_10084E1C8);
    v116 = v336;
    _ConditionalContent<>.init(storage:)(v113, v110, v303, v114, v115);
    sub_10004FF60(v112, &qword_1011CC358);
    v117 = sub_100007E8C(&qword_1011CC370);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v116, 0, 1, v117);
    sub_100065228(v116, v337, &qword_1011CC360);
    v118 = v349;
  }
  else
  {
    v118 = v349;
    v119 = v297;
    sub_10082460C(v297);
    ((void (*)(uint64_t, uint64_t, uint64_t))v350)(v119 + *(int *)(v296 + 20), a1, v351);
    v120 = v299;
    sub_100848624(v299);
    sub_10005B748(v119, type metadata accessor for ArtistPlaybackSource);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v294 + 48))(v120, 1, v295) == 1)
    {
      sub_10004FF60(v120, &qword_1011CC348);
      v121 = sub_100007E8C(&qword_1011CC370);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v337, 1, 1, v121);
    }
    else
    {
      v122 = v120;
      v123 = v301;
      v124 = sub_100065228(v122, v301, (uint64_t *)&unk_1011C82D0);
      v125 = static VerticalAlignment.center.getter(v124);
      v126 = (uint64_t)v274;
      *v274 = v125;
      *(_QWORD *)(v126 + 8) = 0x403C000000000000;
      *(_BYTE *)(v126 + 16) = 0;
      v127 = sub_100007E8C(&qword_1011CC3A0);
      v128 = sub_10084888C(v123, v126 + *(int *)(v127 + 44));
      v129 = static Alignment.center.getter(v128);
      v130 = v275;
      sub_10014C460(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v275, 0.0, 1, 0.0, 1, v129, v131);
      sub_10004FF60(v126, &qword_1011A2D40);
      v132 = v280;
      v133 = v278;
      v134 = v281;
      (*(void (**)(char *, _QWORD, uint64_t))(v280 + 104))(v278, enum case for ControlSize.large(_:), v281);
      v135 = swift_getKeyPath(&unk_100ED2DC0);
      v136 = v276;
      v137 = (uint64_t)v277;
      v138 = (uint64_t *)&v277[*(int *)(v276 + 36)];
      v139 = sub_100007E8C(&qword_1011A0618);
      (*(void (**)(char *, char *, uint64_t))(v132 + 16))((char *)v138 + *(int *)(v139 + 28), v133, v134);
      *v138 = v135;
      sub_10004A160(v130, v137, &qword_1011A2D48);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v133, v134);
      v140 = sub_10004FF60(v130, &qword_1011A2D48);
      v141 = v286;
      BorderedProminentButtonStyle.init()(v140);
      v142 = sub_10084E03C();
      v143 = sub_100048748(&qword_1011A0D00, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
      v144 = v282;
      v145 = v289;
      View.buttonStyle<A>(_:)(v141, v136, v289, v142, v143);
      (*(void (**)(char *, uint64_t))(v288 + 8))(v141, v145);
      sub_10004FF60(v137, &qword_1011CC328);
      v146 = v337;
      if (qword_10119C8D0 != -1)
        swift_once(&qword_10119C8D0, sub_10085F9E0);
      v147 = v291;
      static ButtonBorderShape.roundedRectangle(radius:)(*(double *)&qword_10124DA48);
      v148 = swift_getKeyPath(&unk_100ED2D90);
      v149 = (uint64_t)v287;
      v150 = (uint64_t *)&v287[*(int *)(v279 + 36)];
      v151 = sub_100007E8C(&qword_1011A0610);
      v152 = v292;
      v153 = v293;
      (*(void (**)(char *, char *, uint64_t))(v292 + 16))((char *)v150 + *(int *)(v151 + 28), v147, v293);
      *v150 = v148;
      v154 = v284;
      v155 = v285;
      (*(void (**)(uint64_t, char *, uint64_t))(v284 + 16))(v149, v144, v285);
      (*(void (**)(char *, uint64_t))(v152 + 8))(v147, v153);
      v156 = (*(uint64_t (**)(char *, uint64_t))(v154 + 8))(v144, v155);
      LOBYTE(v155) = static Edge.Set.horizontal.getter(v156);
      v157 = EdgeInsets.init(_all:)(*(double *)&qword_1011CCD38);
      v159 = v158;
      v161 = v160;
      v163 = v162;
      v164 = v283;
      sub_10004A160(v149, v283, &qword_1011CC338);
      v165 = v303;
      v166 = v164 + *(int *)(v303 + 36);
      *(_BYTE *)v166 = v155;
      *(double *)(v166 + 8) = v157;
      *(_QWORD *)(v166 + 16) = v159;
      *(_QWORD *)(v166 + 24) = v161;
      *(_QWORD *)(v166 + 32) = v163;
      *(_BYTE *)(v166 + 40) = 0;
      sub_10004FF60(v149, &qword_1011CC338);
      v167 = v290;
      sub_100065228(v164, v290, &qword_1011CC340);
      v168 = v304;
      sub_10004A160(v167, v304, &qword_1011CC340);
      swift_storeEnumTagMultiPayload(v168, v302, 1);
      v169 = sub_10084E144();
      v170 = sub_10005610C(&qword_1011CC3D0, &qword_1011CC340, (void (*)(void))sub_10084E1C8);
      v171 = v336;
      _ConditionalContent<>.init(storage:)(v168, v305, v165, v169, v170);
      sub_10004FF60(v167, &qword_1011CC340);
      v172 = sub_100007E8C(&qword_1011CC370);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 56))(v171, 0, 1, v172);
      sub_100065228(v171, v146, &qword_1011CC360);
      sub_10004FF60(v301, (uint64_t *)&unk_1011C82D0);
    }
  }
  v173 = v92 + *(int *)(v118 + 28);
  v174 = *(_QWORD *)v173;
  v175 = *(_QWORD *)(v173 + 8);
  v176 = v118;
  v177 = *(unsigned __int8 *)(v173 + 16);
  v178 = sub_100007E8C(&qword_1011ABF28);
  v179 = sub_100049F28(&qword_1011ABF30, &qword_1011ABF28, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v303 = v178;
  v302 = v179;
  StateObject.wrappedValue.getter(v174, v175, v177, v178, v179);
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v180);
  swift_release();
  v181 = StateObject.wrappedValue.getter(v174, v175, v177, v178, v179);
  v182 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v181);
  swift_release();
  v305 = *(int *)(v176 + 20);
  v183 = *(_QWORD *)(v92 + v305);
  v184 = v341;
  sub_10005B704(v92, v341, _s16ArtistDetailViewVMa);
  v185 = *(unsigned __int8 *)(v307 + 80);
  v308 += (v185 + 16) & ~v185;
  v186 = (v185 + 16) & ~v185;
  v307 = v186;
  v304 = v185 | 7;
  v187 = swift_allocObject(&unk_1010DE600, v308, v185 | 7);
  sub_10005B6C0(v184, v187 + v186, _s16ArtistDetailViewVMa);
  v353 = 0;
  static Binding.constant(_:)(&v354, &v353, &type metadata for Library.ContentFilterOption);
  v348 = v92;
  v188 = v354;
  v189 = v355;
  v190 = v356;
  v191 = (int *)v313;
  v192 = (uint64_t)v309;
  v193 = &v309[*(int *)(v313 + 76)];
  *(_QWORD *)v193 = swift_getKeyPath(&unk_100ED2BD0);
  *((_QWORD *)v193 + 1) = 0;
  *((_QWORD *)v193 + 2) = 0;
  *((_QWORD *)v193 + 3) = 0;
  v193[32] = 0;
  sub_100065228((uint64_t)v338, v192, (uint64_t *)&unk_1011A3900);
  *(_BYTE *)(v192 + v191[13]) = v182 & 1;
  *(_BYTE *)(v192 + v191[14]) = 1;
  v194 = v192 + v191[15];
  *(_QWORD *)v194 = v188;
  *(_QWORD *)(v194 + 8) = v189;
  *(_BYTE *)(v194 + 16) = v190;
  *(_QWORD *)(v192 + v191[16]) = v183;
  *(_QWORD *)(v192 + v191[17]) = 0x403C000000000000;
  v195 = (uint64_t (**)(uint64_t))(v192 + v191[18]);
  *v195 = sub_10084DA38;
  v195[1] = (uint64_t (*)(uint64_t))v187;
  v196 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v310;
  v197 = sub_100065228(v192, (uint64_t)v310, &qword_1011CC310);
  v198 = static Edge.Set.bottom.getter(v197);
  v199 = v342;
  static ContentMarginPlacement.scrollIndicators.getter(v198);
  v309 = (char *)sub_100049F28(&qword_1011CC378, &qword_1011CC310, (uint64_t)&unk_100EC0C68);
  View.contentMargins(_:_:for:)(v198, 0, 0, v199, v191, v309);
  v338 = *(uint64_t ***)(v311 + 8);
  ((void (*)(char *, uint64_t))v338)(v199, v343);
  sub_10004FF60((uint64_t)v196, &qword_1011CC310);
  v200 = v348;
  v311 = v348 + *(int *)(v349 + 24);
  v201 = v344;
  sub_10082460C(v344);
  v202 = (uint64_t)v345;
  v203 = v351;
  ((void (*)(char *, uint64_t, uint64_t))v350)(v345, v200, v351);
  v310 = *(uint64_t ***)(v306 + 56);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v310)(v202, 0, 1, v203);
  v204 = v352;
  Library.Context.with<A>(_:)(v202, v203, v352);
  sub_10004FF60(v202, (uint64_t *)&unk_1011A3FB0);
  sub_10005B748(v201, type metadata accessor for Library.Context);
  v205 = v303;
  v206 = v302;
  StateObject.wrappedValue.getter(*(_QWORD *)v173, *(_QWORD *)(v173 + 8), *(unsigned __int8 *)(v173 + 16), v303, v302);
  v207 = v319;
  v208 = (uint64_t)v318;
  v209 = (uint64_t)&v318[*(int *)(v319 + 36)];
  sub_10005B704(v204, v209, type metadata accessor for Library.Context);
  v210 = (_QWORD *)(v209 + *(int *)(sub_100007E8C(&qword_1011ABF40) + 36));
  swift_retain();
  *v210 = ObservedObject.init(wrappedValue:)(v211, v205, v206);
  v210[1] = v212;
  v213 = v314;
  v214 = v339;
  v215 = v315;
  (*(void (**)(uint64_t, char *, uint64_t))(v314 + 16))(v208, v339, v315);
  v216 = v320;
  sub_10004A160(v208, v320, &qword_1011CC308);
  swift_storeEnumTagMultiPayload(v216, v317, 0);
  v217 = sub_10084DA4C();
  v354 = v191;
  v355 = (uint64_t)v309;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v354, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
  v219 = (uint64_t)v312;
  _ConditionalContent<>.init(storage:)(v216, v207, v215, v217, OpaqueTypeConformance2);
  sub_10004FF60(v208, &qword_1011CC308);
  v220 = v347;
  sub_100065228(v219, v347, &qword_1011CC320);
  swift_release();
  sub_10005B748(v204, type metadata accessor for Library.Context);
  (*(void (**)(char *, uint64_t))(v213 + 8))(v214, v215);
  sub_100065228(v220, v346, &qword_1011CC320);
  v221 = v348;
  v222 = v348 + *(int *)(v349 + 32);
  v224 = *(_QWORD *)v222;
  v223 = *(_QWORD *)(v222 + 8);
  v225 = *(unsigned __int8 *)(v222 + 16);
  v226 = sub_100007E8C(&qword_10119F720);
  v227 = sub_100049F28(&qword_10119F728, &qword_10119F720, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v349 = v226;
  v339 = (char *)v227;
  StateObject.wrappedValue.getter(v224, v223, v225, v226, v227);
  v228 = (uint64_t)v321;
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v229);
  swift_release();
  v230 = StateObject.wrappedValue.getter(v224, v223, v225, v226, v227);
  LOBYTE(v203) = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v230);
  swift_release();
  v320 = *(_QWORD *)(v221 + v305);
  v231 = v341;
  sub_10005B704(v221, v341, _s16ArtistDetailViewVMa);
  v232 = swift_allocObject(&unk_1010DE628, v308, v304);
  sub_10005B6C0(v231, v232 + v307, _s16ArtistDetailViewVMa);
  v353 = 0;
  static Binding.constant(_:)(&v354, &v353, &type metadata for Library.ContentFilterOption);
  v233 = v354;
  v234 = v355;
  LOBYTE(v226) = v356;
  v235 = (int *)v325;
  v236 = (uint64_t)v322;
  v237 = &v322[*(int *)(v325 + 76)];
  *(_QWORD *)v237 = swift_getKeyPath(&unk_100ED2BD0);
  *((_QWORD *)v237 + 1) = 0;
  *((_QWORD *)v237 + 2) = 0;
  *((_QWORD *)v237 + 3) = 0;
  v237[32] = 0;
  sub_100065228(v228, v236, (uint64_t *)&unk_1011A3880);
  *(_BYTE *)(v236 + v235[13]) = v203 & 1;
  *(_BYTE *)(v236 + v235[14]) = 1;
  v238 = v236 + v235[15];
  *(_QWORD *)v238 = v233;
  *(_QWORD *)(v238 + 8) = v234;
  *(_BYTE *)(v238 + 16) = v226;
  *(_QWORD *)(v236 + v235[16]) = v320;
  *(_QWORD *)(v236 + v235[17]) = 0x403C000000000000;
  v239 = (uint64_t (**)(uint64_t))(v236 + v235[18]);
  *v239 = sub_10084DF00;
  v239[1] = (uint64_t (*)(uint64_t))v232;
  v240 = v323;
  v241 = sub_100065228(v236, v323, &qword_1011CC2E8);
  v242 = static Edge.Set.bottom.getter(v241);
  v243 = v342;
  static ContentMarginPlacement.scrollIndicators.getter(v242);
  v341 = sub_100049F28(&qword_1011CC388, &qword_1011CC2E8, (uint64_t)&unk_100EC0C68);
  v244 = v326;
  View.contentMargins(_:_:for:)(v242, 0, 0, v243, v235, v341);
  ((void (*)(char *, uint64_t))v338)(v243, v343);
  sub_10004FF60(v240, &qword_1011CC2E8);
  v245 = v344;
  sub_10082460C(v344);
  v246 = (uint64_t)v345;
  v247 = v351;
  ((void (*)(char *, uint64_t, uint64_t))v350)(v345, v348, v351);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v310)(v246, 0, 1, v247);
  v248 = v352;
  Library.Context.with<A>(_:)(v246, v247, v352);
  sub_10004FF60(v246, (uint64_t *)&unk_1011A3FB0);
  sub_10005B748(v245, type metadata accessor for Library.Context);
  v249 = v349;
  v250 = v339;
  StateObject.wrappedValue.getter(*(_QWORD *)v222, *(_QWORD *)(v222 + 8), *(unsigned __int8 *)(v222 + 16), v349, v339);
  v251 = v332;
  v252 = (uint64_t)v330;
  v253 = (uint64_t)&v330[*(int *)(v332 + 36)];
  sub_10005B704(v248, v253, type metadata accessor for Library.Context);
  v254 = (_QWORD *)(v253 + *(int *)(sub_100007E8C(&qword_10119F730) + 36));
  swift_retain();
  *v254 = ObservedObject.init(wrappedValue:)(v255, v249, v250);
  v254[1] = v256;
  v257 = v327;
  v258 = v328;
  (*(void (**)(uint64_t, char *, uint64_t))(v327 + 16))(v252, v244, v328);
  v259 = v333;
  sub_10004A160(v252, v333, &qword_1011CC2E0);
  swift_storeEnumTagMultiPayload(v259, v331, 0);
  v260 = sub_10084DF70();
  v354 = v235;
  v355 = v341;
  v261 = swift_getOpaqueTypeConformance2(&v354, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
  v262 = v324;
  _ConditionalContent<>.init(storage:)(v259, v251, v258, v260, v261);
  sub_10004FF60(v252, &qword_1011CC2E0);
  v263 = (uint64_t)v262;
  v264 = v334;
  sub_100065228(v263, v334, &qword_1011CC2F8);
  swift_release();
  sub_10005B748(v352, type metadata accessor for Library.Context);
  (*(void (**)(char *, uint64_t))(v257 + 8))(v244, v258);
  v265 = v329;
  sub_100065228(v264, v329, &qword_1011CC2F8);
  v266 = (uint64_t)v316;
  sub_10004A160((uint64_t)v340, (uint64_t)v316, &qword_1011CC368);
  v267 = v337;
  v268 = v336;
  sub_10004A160(v337, v336, &qword_1011CC360);
  v269 = v346;
  v270 = v347;
  sub_10004A160(v346, v347, &qword_1011CC320);
  sub_10004A160(v265, v264, &qword_1011CC2F8);
  v271 = v335;
  sub_10004A160(v266, v335, &qword_1011CC368);
  v272 = (int *)sub_100007E8C(&qword_1011CC398);
  sub_10004A160(v268, v271 + v272[12], &qword_1011CC360);
  sub_10004A160(v270, v271 + v272[16], &qword_1011CC320);
  sub_10004A160(v264, v271 + v272[20], &qword_1011CC2F8);
  sub_10004FF60(v265, &qword_1011CC2F8);
  sub_10004FF60(v269, &qword_1011CC320);
  sub_10004FF60(v267, &qword_1011CC360);
  sub_10004FF60((uint64_t)v340, &qword_1011CC368);
  sub_10004FF60(v264, &qword_1011CC2F8);
  sub_10004FF60(v270, &qword_1011CC320);
  sub_10004FF60(v268, &qword_1011CC360);
  return sub_10004FF60(v266, &qword_1011CC368);
}

BOOL sub_10084819C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3880);
  __chkstk_darwin(v2);
  v51 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3900);
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s16ArtistDetailViewVMa(0);
  __chkstk_darwin(v7);
  v52 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - v13;
  v16 = v0 + *(int *)(v15 + 28);
  v17 = *(_QWORD *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v19 = *(unsigned __int8 *)(v16 + 16);
  v20 = sub_100007E8C(&qword_1011ABF28);
  v21 = sub_100049F28(&qword_1011ABF30, &qword_1011ABF28, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v22 = v18;
  v23 = v1;
  v24 = StateObject.wrappedValue.getter(v17, v22, v19, v20, v21);
  LOBYTE(v19) = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v24);
  swift_release();
  sub_10005B704(v1, (uint64_t)v14, _s16ArtistDetailViewVMa);
  if ((v19 & 1) == 0)
  {
    sub_10005B748((uint64_t)v14, _s16ArtistDetailViewVMa);
    sub_10005B704(v1, (uint64_t)v11, _s16ArtistDetailViewVMa);
    v28 = (uint64_t)v52;
    goto LABEL_6;
  }
  v50 = v7;
  StateObject.wrappedValue.getter(*(_QWORD *)&v14[*(int *)(v7 + 28)], *(_QWORD *)&v14[*(int *)(v7 + 28) + 8], v14[*(int *)(v7 + 28) + 16], v20, v21);
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v25);
  swift_release();
  v26 = sub_100007E8C(&qword_1011A3910);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v6, 1, v26) == 1)
  {
    sub_10005B748((uint64_t)v14, _s16ArtistDetailViewVMa);
    sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A3900);
    v23 = v1;
    sub_10005B704(v1, (uint64_t)v11, _s16ArtistDetailViewVMa);
    v28 = (uint64_t)v52;
    goto LABEL_9;
  }
  v29 = MusicLibrarySectionedResponse.totalItemCount.getter(v26);
  sub_10005B748((uint64_t)v14, _s16ArtistDetailViewVMa);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v26);
  v23 = v1;
  sub_10005B704(v1, (uint64_t)v11, _s16ArtistDetailViewVMa);
  v28 = (uint64_t)v52;
  if (v29)
  {
LABEL_6:
    sub_10005B748((uint64_t)v11, _s16ArtistDetailViewVMa);
    sub_10005B704(v23, v28, _s16ArtistDetailViewVMa);
LABEL_7:
    sub_10005B748(v28, _s16ArtistDetailViewVMa);
    return 0;
  }
LABEL_9:
  v31 = v50;
  v32 = &v11[*(int *)(v50 + 32)];
  v33 = *(_QWORD *)v32;
  v34 = *((_QWORD *)v32 + 1);
  v35 = v32[16];
  v36 = sub_100007E8C(&qword_10119F720);
  v37 = sub_100049F28(&qword_10119F728, &qword_10119F720, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v38 = StateObject.wrappedValue.getter(v33, v34, v35, v36, v37);
  LOBYTE(v33) = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v38);
  swift_release();
  sub_10005B748((uint64_t)v11, _s16ArtistDetailViewVMa);
  sub_10005B704(v23, v28, _s16ArtistDetailViewVMa);
  if ((v33 & 1) == 0)
    goto LABEL_7;
  v39 = v28 + *(int *)(v31 + 32);
  v40 = *(_QWORD *)v39;
  v41 = *(_QWORD *)(v39 + 8);
  v42 = *(unsigned __int8 *)(v39 + 16);
  v43 = sub_100007E8C(&qword_10119F720);
  StateObject.wrappedValue.getter(v40, v41, v42, v43, v37);
  v44 = (uint64_t)v51;
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v45);
  swift_release();
  v46 = sub_100007E8C(&qword_1011A3890);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v44, 1, v46) == 1)
  {
    sub_10005B748(v28, _s16ArtistDetailViewVMa);
    sub_10004FF60(v44, (uint64_t *)&unk_1011A3880);
    return 1;
  }
  else
  {
    v48 = MusicLibrarySectionedResponse.totalItemCount.getter(v46);
    sub_10005B748(v28, _s16ArtistDetailViewVMa);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v44, v46);
    return v48 == 0;
  }
}

uint64_t sub_100848624@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;

  v2 = v1;
  v4 = type metadata accessor for ArtistPlaybackSource(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011CC3F8);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - v12;
  sub_10005B704(v2, (uint64_t)&v21 - v12, type metadata accessor for ArtistPlaybackSource);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
  sub_10004A160((uint64_t)v13, (uint64_t)v10, &qword_1011CC3F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v10, &qword_1011CC3F8);
    v14 = sub_100007E8C((uint64_t *)&unk_1011C82D0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
  else
  {
    sub_10005B6C0((uint64_t)v10, (uint64_t)v7, type metadata accessor for ArtistPlaybackSource);
    sub_10005B704((uint64_t)v7, a1, type metadata accessor for ArtistPlaybackSource);
    v15 = sub_100007E8C((uint64_t *)&unk_1011C82D0);
    v16 = a1 + *(int *)(v15 + 36);
    v17 = type metadata accessor for GenericMusicItem(0);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
    v18(v16, 1, 1, v17);
    v19 = sub_100007E8C(&qword_10119F7C8);
    swift_storeEnumTagMultiPayload(v16, v19, 0);
    *(_BYTE *)(a1 + *(int *)(v15 + 40)) = 2;
    sub_10004FF60(v16, &qword_10119F7C8);
    v18(v16, 1, 1, v17);
    swift_storeEnumTagMultiPayload(v16, v19, 0);
    sub_10005B748((uint64_t)v7, type metadata accessor for ArtistPlaybackSource);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  return sub_10004FF60((uint64_t)v13, &qword_1011CC3F8);
}

uint64_t sub_10084888C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v3 = sub_100007E8C(&qword_1011CC348);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011CC3E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v23 - v16;
  sub_10004A160(a1, (uint64_t)v5, (uint64_t *)&unk_1011C82D0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011C82D0);
  v19 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v5, 0, 1, v18);
  sub_10083E30C((uint64_t)v5, 0, 0, (uint64_t)v14);
  sub_10004FF60((uint64_t)v5, &qword_1011CC348);
  sub_100065228((uint64_t)v14, (uint64_t)v17, &qword_1011CC3E0);
  sub_10004A160(a1, (uint64_t)v5, (uint64_t *)&unk_1011C82D0);
  v19(v5, 0, 1, v18);
  sub_10083E480((uint64_t)v5, 0, 0, (uint64_t)v11);
  sub_10004FF60((uint64_t)v5, &qword_1011CC348);
  sub_100065228((uint64_t)v11, (uint64_t)v14, &qword_1011CC3E0);
  sub_10004A160((uint64_t)v17, (uint64_t)v11, &qword_1011CC3E0);
  sub_10004A160((uint64_t)v14, (uint64_t)v8, &qword_1011CC3E0);
  v20 = v24;
  sub_10004A160((uint64_t)v11, v24, &qword_1011CC3E0);
  v21 = sub_100007E8C(&qword_1011CC3E8);
  sub_10004A160((uint64_t)v8, v20 + *(int *)(v21 + 48), &qword_1011CC3E0);
  sub_10004FF60((uint64_t)v14, &qword_1011CC3E0);
  sub_10004FF60((uint64_t)v17, &qword_1011CC3E0);
  sub_10004FF60((uint64_t)v8, &qword_1011CC3E0);
  return sub_10004FF60((uint64_t)v11, &qword_1011CC3E0);
}

uint64_t sub_100848AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _BYTE v30[16];
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  char v34;
  uint64_t v35;

  v31 = a1;
  v32 = a2;
  v2 = LocalizedStringKey.init(stringLiteral:)(0x736D75626C41, 0xE600000000000000);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  if (qword_10119C8B8 != -1)
    swift_once(&qword_10119C8B8, sub_10085F8C0);
  v10 = v7 & 1;
  swift_retain();
  v12 = Text.font(_:)(v11, v3, v5, v10, v9);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_release();
  sub_100055BAC(v3, v5, v10);
  v19 = swift_bridgeObjectRelease();
  LODWORD(v33[0]) = static HierarchicalShapeStyle.primary.getter(v19);
  v20 = Text.foregroundStyle<A>(_:)(v33, v12, v14, v16 & 1, v18, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_100055BAC(v12, v14, v16 & 1);
  swift_bridgeObjectRelease();
  v33[0] = v20;
  v33[1] = v22;
  v34 = v24 & 1;
  v35 = v26;
  v27 = sub_100007E8C(&qword_1011ABF70);
  v28 = sub_100305A48();
  return Section<>.init(header:content:)(v33, sub_10084E2E8, v30, &type metadata for Text, v27, &protocol witness table for Text, v28);
}

uint64_t sub_100848CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = _s16ArtistDetailViewVMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100007E8C(&qword_1011A3D80);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011ADFD0);
  MusicLibrarySection.items.getter(v9, v10);
  sub_10005B704(a2, (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s16ArtistDetailViewVMa);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010DE678, v12 + v5, v11 | 7);
  sub_10005B6C0((uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, _s16ArtistDetailViewVMa);
  v14 = _s9ContainerO4CellVMa(0);
  v15 = sub_100049F28(&qword_1011ABF88, &qword_1011A3D80, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v16 = sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
  v17 = sub_100048748(&qword_1011B6EC0, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
  return ForEach<>.init(_:content:)(v8, sub_10084E2F4, v13, v6, &type metadata for MusicItemID, v14, v15, v16, v17);
}

uint64_t sub_100848E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, _QWORD, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  int *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t KeyPath;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  _QWORD v100[2];

  v98 = a2;
  v5 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v5);
  v99 = (uint64_t *)((char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Date.FormatStyle.Symbol.Year(0);
  v86 = *(_QWORD *)(v7 - 8);
  v87 = v7;
  __chkstk_darwin(v7);
  v85 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for Date.FormatStyle(0);
  v84 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v10 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v84 - v12;
  v14 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v14);
  v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for GenericMusicItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)_s9ContainerO5ModelVMa(0);
  __chkstk_darwin(v21);
  v96 = (uint64_t)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v84 - v24;
  v26 = type metadata accessor for Album(0);
  v89 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v90 = v26;
  v89(v20, a1);
  v93 = v20;
  v94 = v18;
  v27 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v18 + 104);
  v95 = v17;
  v28 = v27(v20, enum case for GenericMusicItem.album(_:), v17);
  v29 = Album.title.getter(v28);
  v91 = v30;
  v92 = v29;
  v97 = a1;
  Album.releaseDate.getter(v29);
  v31 = type metadata accessor for Date(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v16, 1, v31);
  if ((_DWORD)v33 == 1)
  {
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A30A0);
    v34 = 0;
    v35 = 0;
  }
  else
  {
    v36 = static FormatStyle<>.dateTime.getter(v33);
    v37 = v85;
    static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v36);
    Date.FormatStyle.year(_:)(v37);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v37, v87);
    v38 = *(void (**)(char *, uint64_t))(v84 + 8);
    v39 = v10;
    v40 = v88;
    v38(v39, v88);
    v41 = sub_100048748((unint64_t *)&unk_1011ACB20, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
    Date.formatted<A>(_:)(v100, v13, v40, v41);
    v38(v13, v40);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v31);
    v34 = v100[0];
    v35 = v100[1];
  }
  v42 = &v25[v21[7]];
  v43 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 1, 10, v43);
  v44 = &v25[v21[9]];
  v45 = (int *)sub_100007E8C(&qword_1011C5BA0);
  v46 = (uint64_t)&v44[v45[12]];
  v47 = &v44[v45[16]];
  v48 = v45[20];
  ((void (*)(char *, uint64_t, uint64_t))v89)(v44, v97, v90);
  _s16ArtistDetailViewVMa(0);
  sub_10082460C(v46);
  v49 = type metadata accessor for Library.Context(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v46, 0, 1, v49);
  *(_QWORD *)v47 = 0;
  *((_QWORD *)v47 + 1) = 0;
  *(_OWORD *)&v44[v48] = xmmword_100EAE4D0;
  v50 = type metadata accessor for NavigationDestinationItem(0);
  swift_storeEnumTagMultiPayload(v44, v50, 1);
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v25, v93, v95);
  v51 = &v25[v21[5]];
  v52 = v91;
  *(_QWORD *)v51 = v92;
  *((_QWORD *)v51 + 1) = v52;
  v53 = &v25[v21[6]];
  *(_QWORD *)v53 = v34;
  *((_QWORD *)v53 + 1) = v35;
  *(_QWORD *)&v25[v21[8]] = 0x3FF0000000000000;
  v54 = v96;
  sub_10005B704((uint64_t)v25, v96, _s9ContainerO5ModelVMa);
  KeyPath = swift_getKeyPath(&unk_100ED2E18);
  v56 = (uint64_t)v99;
  *v99 = KeyPath;
  v57 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v56, v57, 0);
  sub_10005B6C0(v54, a3, _s9ContainerO5ModelVMa);
  v58 = (int *)_s9ContainerO4CellVMa(0);
  v59 = a3 + v58[5];
  *(_QWORD *)v59 = swift_getKeyPath(&unk_100ED2BF8);
  *(_BYTE *)(v59 + 8) = 0;
  sub_100065228(v56, a3 + v58[6], &qword_10119EE98);
  v60 = (_QWORD *)(a3 + v58[7]);
  v61 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v62 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v60 = EnvironmentObject.init()(v61, v62);
  v60[1] = v63;
  v64 = (_QWORD *)(a3 + v58[8]);
  v65 = type metadata accessor for NoticePresenter(0);
  v66 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v64 = EnvironmentObject.init()(v65, v66);
  v64[1] = v67;
  v68 = a3 + v58[9];
  *(_QWORD *)v68 = sub_1008419B0;
  *(_QWORD *)(v68 + 8) = 0;
  *(_BYTE *)(v68 + 16) = 0;
  v69 = (_QWORD *)(a3 + v58[10]);
  v70 = type metadata accessor for NavigationPusher();
  v71 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v69 = EnvironmentObject.init()(v70, v71);
  v69[1] = v72;
  v73 = (_QWORD *)(a3 + v58[11]);
  v74 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v75 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v73 = EnvironmentObject.init()(v74, v75);
  v73[1] = v76;
  v77 = (_QWORD *)(a3 + v58[12]);
  v78 = type metadata accessor for TabSelectionManager(0);
  v79 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v77 = EnvironmentObject.init()(v78, v79);
  v77[1] = v80;
  v81 = a3 + v58[13];
  *(_QWORD *)v81 = swift_getKeyPath(&unk_100ED2C20);
  *(_QWORD *)(v81 + 8) = 0;
  *(_BYTE *)(v81 + 16) = 0;
  v82 = a3 + v58[14];
  *(_QWORD *)v82 = swift_getKeyPath(&unk_100ED2C48);
  *(_QWORD *)(v82 + 8) = 0;
  *(_BYTE *)(v82 + 16) = 0;
  return sub_10005B748((uint64_t)v25, _s9ContainerO5ModelVMa);
}

uint64_t sub_1008494EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  _QWORD v49[2];
  char v50;
  uint64_t v51;
  uint64_t v52;

  v4 = sub_100007E8C((uint64_t *)&unk_1011CF3D0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011ADFC0);
  MusicLibrarySection.items.getter(v8, v9);
  v10 = sub_100049F28((unint64_t *)&unk_1011ACBA0, (uint64_t *)&unk_1011CF3D0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v4);
  dispatch thunk of Collection.endIndex.getter(&v52, v4, v10);
  v11 = v49[0];
  v12 = v52;
  v13 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v11 == v12)
  {
    v14 = sub_100007E8C(&qword_1011CC3F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  else
  {
    v48 = &v46;
    __chkstk_darwin(v13);
    v47 = &v46 - 4;
    v45 = a1;
    v16 = LocalizedStringKey.init(stringLiteral:)(0x695620636973754DLL, 0xEC000000736F6564);
    LOWORD(v45) = 2;
    v44 = 30;
    v17 = Text.init(_:tableName:bundle:comment:)(v16);
    v19 = v18;
    v21 = v20;
    v23 = v22;
    if (qword_10119C8B8 != -1)
      swift_once(&qword_10119C8B8, sub_10085F8C0);
    swift_retain();
    v24 = v21 & 1;
    v26 = Text.font(_:)(v25, v17, v19, v24, v23);
    v28 = v27;
    v30 = v29;
    v32 = v31;
    swift_release();
    sub_100055BAC(v17, v19, v24);
    v33 = swift_bridgeObjectRelease();
    LODWORD(v49[0]) = static HierarchicalShapeStyle.primary.getter(v33);
    v34 = Text.foregroundStyle<A>(_:)(v49, v26, v28, v30 & 1, v32, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v36 = v35;
    v38 = v37;
    v40 = v39;
    sub_100055BAC(v26, v28, v30 & 1);
    swift_bridgeObjectRelease();
    v49[0] = v34;
    v49[1] = v36;
    v50 = v38 & 1;
    v51 = v40;
    v41 = sub_100007E8C(&qword_10119F750);
    v42 = sub_10085426C((unint64_t *)&qword_10119F760, &qword_10119F750, (void (*)(void))sub_1000A8E10);
    Section<>.init(header:content:)(v49, sub_10084E2C0, v47, &type metadata for Text, v41, &protocol witness table for Text, v42);
    v43 = sub_100007E8C(&qword_1011CC3F0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a2, 0, 1, v43);
  }
}

uint64_t sub_10084981C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = _s16ArtistDetailViewVMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100007E8C((uint64_t *)&unk_1011CF3D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011ADFC0);
  MusicLibrarySection.items.getter(v9, v10);
  sub_10005B704(a2, (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s16ArtistDetailViewVMa);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010DE650, v12 + v5, v11 | 7);
  sub_10005B6C0((uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, _s16ArtistDetailViewVMa);
  v14 = sub_100007E8C(&qword_10119F770);
  v15 = sub_100049F28(&qword_10119F7A0, (uint64_t *)&unk_1011CF3D0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v16 = sub_1000A8E10();
  v17 = sub_100048748(&qword_10119F7A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
  return ForEach<>.init(_:content:)(v8, sub_10084E2CC, v13, v6, &type metadata for MusicItemID, v14, v15, v16, v17);
}

uint64_t sub_1008499C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v80 = a2;
  v84 = a3;
  v85 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v82 = (uint64_t)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119F7B0);
  __chkstk_darwin(v5);
  v79 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119F7B8);
  __chkstk_darwin(v7);
  v81 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v9);
  v77 = (uint64_t *)((char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (int *)_s5VideoO4CellVMa(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)_s5VideoO5ModelVMa(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v76 - v18;
  v20 = type metadata accessor for MusicVideo(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v78 = a1;
  v21(v19, a1, v20);
  v22 = enum case for GenericMusicItem.musicVideo(_:);
  v23 = type metadata accessor for GenericMusicItem(0);
  v24.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v19, v22, v23);
  v25 = MusicVideo.title.getter(v24);
  v27 = v26;
  v28 = sub_10031EBE8();
  v30 = v29;
  v31 = &v19[v14[7]];
  v32 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 4, 10, v32);
  v33 = (uint64_t *)&v19[v14[5]];
  *v33 = v25;
  v33[1] = v27;
  v34 = (uint64_t *)&v19[v14[6]];
  *v34 = v28;
  v34[1] = v30;
  *(_QWORD *)&v19[v14[8]] = 0x3FFC71C71C71C71CLL;
  v35 = (uint64_t)v19;
  sub_10005B704((uint64_t)v19, (uint64_t)v16, _s5VideoO5ModelVMa);
  KeyPath = swift_getKeyPath(&unk_100ED2E18);
  v37 = (uint64_t)v77;
  *v77 = KeyPath;
  v38 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v37, v38, 0);
  sub_10005B6C0((uint64_t)v16, (uint64_t)v13, _s5VideoO5ModelVMa);
  v39 = &v13[v11[5]];
  *(_QWORD *)v39 = swift_getKeyPath(&unk_100ED2BF8);
  v39[8] = 0;
  sub_100065228(v37, (uint64_t)&v13[v11[6]], &qword_10119EE98);
  v40 = &v13[v11[7]];
  v41 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v42 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v40 = EnvironmentObject.init()(v41, v42);
  *((_QWORD *)v40 + 1) = v43;
  v44 = &v13[v11[8]];
  v45 = type metadata accessor for NoticePresenter(0);
  v46 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *(_QWORD *)v44 = EnvironmentObject.init()(v45, v46);
  *((_QWORD *)v44 + 1) = v47;
  v48 = &v13[v11[9]];
  *(_QWORD *)v48 = sub_1008419B0;
  *((_QWORD *)v48 + 1) = 0;
  v48[16] = 0;
  v49 = &v13[v11[10]];
  v50 = type metadata accessor for NavigationPusher();
  v51 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *(_QWORD *)v49 = EnvironmentObject.init()(v50, v51);
  *((_QWORD *)v49 + 1) = v52;
  v53 = &v13[v11[11]];
  v54 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v55 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v53 = EnvironmentObject.init()(v54, v55);
  *((_QWORD *)v53 + 1) = v56;
  v57 = &v13[v11[12]];
  v58 = type metadata accessor for TabSelectionManager(0);
  v59 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v57 = EnvironmentObject.init()(v58, v59);
  *((_QWORD *)v57 + 1) = v60;
  v61 = &v13[v11[13]];
  *(_QWORD *)v61 = swift_getKeyPath(&unk_100ED2C20);
  *((_QWORD *)v61 + 1) = 0;
  v61[16] = 0;
  v62 = &v13[v11[14]];
  *(_QWORD *)v62 = swift_getKeyPath(&unk_100ED2C48);
  *((_QWORD *)v62 + 1) = 0;
  v62[16] = 0;
  v63 = (uint64_t *)(v80 + *(int *)(_s16ArtistDetailViewVMa(0) + 32));
  v64 = *v63;
  v65 = v63[1];
  v66 = *((unsigned __int8 *)v63 + 16);
  v67 = sub_100007E8C(&qword_10119F720);
  v68 = sub_100049F28(&qword_10119F728, &qword_10119F720, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  StateObject.wrappedValue.getter(v64, v65, v66, v67, v68);
  v69 = v79;
  dispatch thunk of MusicAutoupdatingResponse.request.getter(v70);
  swift_release();
  v71 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  v72 = (uint64_t)v69;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v69, 0, 1, v71);
  v86 = v78;
  v73 = v81;
  sub_100415C78(v72, (void (*)(uint64_t))sub_1000A92C0, v81);
  sub_10004FF60(v72, &qword_10119F7B0);
  v74 = v82;
  sub_100824838(v82);
  sub_1003D56C4(v73, v74, 0, 0, v84);
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v74, v85);
  sub_10004FF60(v73, &qword_10119F7B8);
  sub_10005B748((uint64_t)v13, _s5VideoO4CellVMa);
  return sub_10005B748(v35, _s5VideoO5ModelVMa);
}

uint64_t sub_100849FC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007E8C(&qword_1011CC298);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.navigationBarTrailing.getter(v9);
  v15 = a1;
  v10 = sub_100007E8C(&qword_1011CC2A8);
  v11 = sub_100049F28(&qword_1011CC2B0, &qword_1011CC2A8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  ToolbarItemGroup.init(placement:content:)(v4, sub_10084D9C0, v14, v10, v11);
  v12 = sub_100049F28(&qword_1011CC2A0, &qword_1011CC298, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v8, v5, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10084A110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t, __n128);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  id v60;
  char v61;
  char *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t KeyPath;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  uint64_t OpaqueTypeConformance2;
  uint64_t v115;
  ValueMetadata *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t result;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  int *v200;
  char *v201;
  ValueMetadata *v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  _BYTE v206[32];
  uint64_t v207;
  _QWORD v208[5];
  _QWORD v209[5];
  _BYTE v210[48];
  uint64_t v211;
  __int128 v212;
  _QWORD v213[5];
  _QWORD v214[5];
  _BYTE v215[80];
  _OWORD v216[5];
  _OWORD v217[6];

  v198 = a2;
  v3 = type metadata accessor for ControlSize(0);
  v181 = *(_QWORD *)(v3 - 8);
  v182 = v3;
  __chkstk_darwin(v3);
  v180 = (char *)&v162 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ButtonBorderShape(0);
  v175 = *(_QWORD *)(v5 - 8);
  v176 = v5;
  __chkstk_darwin(v5);
  v174 = (char *)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A0D30);
  v172 = *(_QWORD *)(v7 - 8);
  v173 = v7;
  __chkstk_darwin(v7);
  v171 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_100007E8C(&qword_1011A0D38);
  __chkstk_darwin(v170);
  v179 = (char *)&v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = type metadata accessor for BorderedButtonStyle(0);
  v178 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin(v191);
  v177 = (char *)&v162 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ButtonMenuStyle(0);
  v167 = *(_QWORD *)(v11 - 8);
  v168 = v11;
  __chkstk_darwin(v11);
  v166 = (char *)&v162 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s16ArtistDetailViewVMa(0);
  __chkstk_darwin(v13);
  v186 = (uint64_t)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v15);
  v201 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A05A8);
  v164 = *(_QWORD *)(v17 - 8);
  v165 = v17;
  __chkstk_darwin(v17);
  v163 = (char *)&v162 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = sub_100007E8C(&qword_1011A05B0);
  v169 = *(_QWORD *)(v190 - 8);
  __chkstk_darwin(v190);
  v189 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = sub_100007E8C(&qword_1011CC2B8);
  v194 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  v188 = (char *)&v162 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v187 = (uint64_t)&v162 - v22;
  v23 = sub_100007E8C(&qword_1011CC2C0);
  __chkstk_darwin(v23);
  v197 = (uint64_t)&v162 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v195 = (uint64_t)&v162 - v26;
  v27 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v27);
  v184 = (uint64_t *)((char *)&v162 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29);
  v31 = (uint64_t *)((char *)&v162 - v30);
  v32 = type metadata accessor for Artist(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v199 = (char *)&v162 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v37 = (char *)&v162 - v36;
  v38 = sub_100007E8C(&qword_1011C0850);
  __chkstk_darwin(v38);
  v193 = (uint64_t)&v162 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __chkstk_darwin(v40);
  v43 = (char *)&v162 - v42;
  v44 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v33 + 16);
  v44(v37, a1, v32, v41);
  v200 = (int *)v13;
  v183 = a1 + *(int *)(v13 + 24);
  sub_10082460C((uint64_t)v31);
  v45 = *v31;
  swift_retain();
  v46 = sub_10005B748((uint64_t)v31, type metadata accessor for Library.Context);
  BorderedButtonStyle.init()(v46);
  v185 = v33;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v43, v37, v32);
  *(_QWORD *)&v43[*(int *)(v38 + 52)] = v45;
  v47 = *(int *)(v38 + 60);
  v192 = v43;
  v48 = (uint64_t *)&v43[v47];
  v49 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v50 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v51 = EnvironmentObject.init()(v49, v50);
  *v48 = v51;
  v48[1] = v52;
  Artist.catalogID.getter(v51);
  v54 = v53;
  v55 = swift_bridgeObjectRelease();
  if (!v54)
  {
    v141 = 1;
    v142 = v195;
    v143 = v198;
LABEL_15:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v194 + 56))(v142, v141, 1, v196, v55);
    v146 = (uint64_t)v192;
    v147 = v193;
    sub_10004A160((uint64_t)v192, v193, &qword_1011C0850);
    v148 = v197;
    sub_10004A160(v142, v197, &qword_1011CC2C0);
    sub_10004A160(v147, v143, &qword_1011C0850);
    v149 = sub_100007E8C(&qword_1011CC2C8);
    sub_10004A160(v148, v143 + *(int *)(v149 + 48), &qword_1011CC2C0);
    sub_10004FF60(v142, &qword_1011CC2C0);
    sub_10004FF60(v146, &qword_1011C0850);
    sub_10004FF60(v148, &qword_1011CC2C0);
    return sub_10004FF60(v147, &qword_1011C0850);
  }
  v162 = v32;
  v56 = v32;
  v57 = a1;
  v44(v199, a1, v56, v55);
  v58 = v200;
  v59 = a1 + v200[12];
  v60 = *(id *)v59;
  v61 = *(_BYTE *)(v59 + 8);
  sub_1000A4100(*(id *)v59, v61);
  v62 = (char *)sub_100824044(v60, v61);
  sub_1000A4224(v60, v61);
  v63 = v184;
  sub_10082460C((uint64_t)v184);
  v64 = *v63;
  swift_retain();
  sub_10005B748((uint64_t)v63, type metadata accessor for Library.Context);
  v65 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v201, 1, 1, v65);
  v66 = (uint64_t *)(v57 + v58[13]);
  v67 = *v66;
  if (!*v66)
  {
    EnvironmentObject.error()(0, v66[1], v49, v50);
    __break(1u);
    goto LABEL_17;
  }
  v184 = (uint64_t *)v62;
  v214[4] = &protocol witness table for <A> PresentedViewState<A>;
  v214[3] = v49;
  v214[0] = v67;
  v68 = (uint64_t *)(v57 + v58[14]);
  v69 = *v68;
  if (!*v68)
  {
LABEL_17:
    v151 = v68[1];
    v152 = type metadata accessor for NoticePresenter(0);
    v153 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    goto LABEL_21;
  }
  v70 = type metadata accessor for NoticePresenter(0);
  v213[4] = &protocol witness table for NoticePresenter;
  v213[3] = v70;
  v213[0] = v69;
  v211 = 0;
  memset(v210, 0, sizeof(v210));
  v212 = xmmword_100EA93A0;
  v71 = v57 + v58[15];
  v72 = *(_QWORD *)v71;
  v73 = *(_QWORD *)(v71 + 8);
  v74 = *(unsigned __int8 *)(v71 + 16);
  swift_retain();
  swift_retain();
  v75 = sub_100007E8C(&qword_1011A03A8);
  v76 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v77 = StateObject.wrappedValue.getter(v72, v73, v74, v75, v76);
  v209[3] = v75;
  v209[4] = &protocol witness table for <A> PresentedViewState<A>;
  v209[0] = v77;
  v78 = (uint64_t *)(v57 + v58[16]);
  v79 = *v78;
  if (*v78)
  {
    v80 = type metadata accessor for NavigationPusher();
    v208[3] = v80;
    v208[4] = &off_1010D58B0;
    v208[0] = v79;
    v207 = 0;
    memset(v206, 0, sizeof(v206));
    v81 = (_QWORD *)(v57 + v58[17]);
    if (*v81)
    {
      v183 = v64;
      v82 = (_QWORD *)(v57 + v58[18]);
      if (*v82)
      {
        __chkstk_darwin(v80);
        sub_1000502A4();
        KeyPath = swift_getKeyPath(&unk_100ED2D38);
        __chkstk_darwin(KeyPath);
        v84 = swift_getKeyPath(&unk_100ED2D70);
        swift_retain();
        swift_retain();
        swift_retain();
        static Published.subscript.getter(v217, v85, KeyPath, v84);
        swift_release();
        swift_release();
        swift_release();
        LOBYTE(KeyPath) = v217[0];
        v86 = v200;
        v87 = v57 + v200[19];
        v88 = *(_QWORD *)v87;
        v89 = *(_QWORD *)(v87 + 8);
        LOBYTE(v84) = *(_BYTE *)(v87 + 16);
        sub_1000A410C(*(_QWORD *)v87, v89, v84);
        sub_100824224(v88, v89, v84);
        sub_1000A4230(v88, v89, v84);
        sub_10066D160(KeyPath);
        v91 = v90;
        v93 = v92;
        swift_release();
        swift_bridgeObjectRelease();
        v94 = v57 + v86[20];
        v95 = *(_QWORD *)v94;
        v96 = *(_QWORD *)(v94 + 8);
        LOBYTE(v84) = *(_BYTE *)(v94 + 16);
        sub_1000A411C(*(_QWORD *)v94, v96, v84);
        sub_100824400(v95, v96, v84, (uint64_t *)v217);
        sub_1000A4240(v95, v96, v84);
        v98 = *((_QWORD *)&v217[0] + 1);
        v97 = *(_QWORD *)&v217[0];
        v99 = v57;
        v100 = v186;
        sub_10005B704(v99, v186, _s16ArtistDetailViewVMa);
        if (v98 >> 60 != 15)
        {
LABEL_10:
          v103 = v162;
          sub_10005B748(v100, _s16ArtistDetailViewVMa);
          *(_QWORD *)&v161 = v91;
          *((_QWORD *)&v161 + 1) = v93;
          *(_QWORD *)&v160 = v208;
          *((_QWORD *)&v160 + 1) = v206;
          v104 = v184;
          v105 = (uint64_t)v201;
          v106 = v199;
          MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(0, v184, v183, (uint64_t)v214, (uint64_t)v213, (uint64_t)v210, (unint64_t)v209, (uint64_t)v215, v160, v161, v97, v98, v103, (uint64_t)&protocol witness table for Artist);
          sub_1000822B4(v97, v98);

          swift_release();
          swift_bridgeObjectRelease();
          sub_10004FF60((uint64_t)v206, &qword_1011A0558);
          sub_10004FF60((uint64_t)v210, (uint64_t *)&unk_1011A20F0);
          sub_10004FF60(v105, (uint64_t *)&unk_1011A20C0);
          (*(void (**)(char *, uint64_t))(v185 + 8))(v106, v103);
          sub_10004FF60((uint64_t)v208, &qword_1011A0560);
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(v209);
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(v213);
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(v214);
          sub_100065228((uint64_t)v215, (uint64_t)v216, (uint64_t *)&unk_1011A3DC0);
          if (*((_QWORD *)&v216[0] + 1))
          {
            v217[2] = v216[2];
            v217[3] = v216[3];
            v217[4] = v216[4];
            v217[0] = v216[0];
            v217[1] = v216[1];
            v107 = sub_100007E8C((uint64_t *)&unk_1011A20B0);
            v108 = sub_100007E8C(&qword_1011A05F8);
            v109 = sub_1000E41D0();
            v110 = v163;
            ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)(0, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100558D1C, 0, (uint64_t)UIScreen.Dimensions.size.getter, 0, v107, v163, v108, v109);
            v111 = sub_1000E411C((uint64_t)v215);
            v112 = v166;
            ButtonMenuStyle.init()(v111);
            v113 = sub_1000E3EE4();
            v202 = &type metadata for ActionType;
            v203 = v108;
            v204 = v113;
            v205 = v109;
            OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v202, &opaque type descriptor for <<opaque return type of ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)>>, 1);
            v115 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
            v116 = (ValueMetadata *)v165;
            v117 = v168;
            View.menuStyle<A>(_:)(v112, v165, v168, OpaqueTypeConformance2, v115);
            (*(void (**)(char *, uint64_t))(v167 + 8))(v112, v117);
            v118 = (*(uint64_t (**)(char *, ValueMetadata *))(v164 + 8))(v110, v116);
            v119 = v177;
            BorderedButtonStyle.init()(v118);
            v202 = v116;
            v203 = v117;
            v204 = OpaqueTypeConformance2;
            v205 = v115;
            v120 = swift_getOpaqueTypeConformance2(&v202, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
            v121 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
            v122 = v171;
            v123 = View.buttonStyle<A>(_:)(v119, v190, v191, v120, v121);
            v124 = v174;
            static ButtonBorderShape.circle.getter(v123);
            v125 = swift_getKeyPath(&unk_100ED2D90);
            v126 = (uint64_t)v179;
            v127 = (uint64_t *)&v179[*(int *)(v170 + 36)];
            v128 = sub_100007E8C(&qword_1011A0610);
            v130 = v175;
            v129 = v176;
            (*(void (**)(char *, char *, uint64_t))(v175 + 16))((char *)v127 + *(int *)(v128 + 28), v124, v176);
            *v127 = v125;
            v132 = v172;
            v131 = v173;
            (*(void (**)(uint64_t, char *, uint64_t))(v172 + 16))(v126, v122, v173);
            (*(void (**)(char *, uint64_t))(v130 + 8))(v124, v129);
            (*(void (**)(char *, uint64_t))(v132 + 8))(v122, v131);
            v134 = v180;
            v133 = v181;
            v135 = v182;
            (*(void (**)(char *, _QWORD, uint64_t))(v181 + 104))(v180, enum case for ControlSize.regular(_:), v182);
            v136 = swift_getKeyPath(&unk_100ED2DC0);
            v137 = sub_100007E8C(&qword_1011A0D40);
            v138 = (uint64_t)v188;
            v139 = (uint64_t *)&v188[*(int *)(v137 + 36)];
            v140 = sub_100007E8C(&qword_1011A0618);
            (*(void (**)(char *, char *, uint64_t))(v133 + 16))((char *)v139 + *(int *)(v140 + 28), v134, v135);
            *v139 = v136;
            sub_10004A160(v126, v138, &qword_1011A0D38);
            (*(void (**)(char *, uint64_t))(v133 + 8))(v134, v135);
            sub_10004FF60(v126, &qword_1011A0D38);
            (*(void (**)(char *, uint64_t))(v178 + 8))(v119, v191);
            (*(void (**)(char *, uint64_t))(v169 + 8))(v189, v190);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v138, 0, 1, v137);
          }
          else
          {
            v144 = sub_100007E8C(&qword_1011A0D40);
            v138 = (uint64_t)v188;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v188, 1, 1, v144);
          }
          v143 = v198;
          v145 = v187;
          sub_100065228(v138, v187, &qword_1011CC2B8);
          v142 = v195;
          sub_100065228(v145, v195, &qword_1011CC2B8);
          v141 = 0;
          goto LABEL_15;
        }
        v101 = (_QWORD *)(v100 + v86[17]);
        if (*v101)
        {
          swift_retain();
          v97 = sub_10066D7A8();
          v98 = v102;
          swift_release();
          goto LABEL_10;
        }
        goto LABEL_22;
      }
      v151 = v82[1];
      v152 = type metadata accessor for TabSelectionManager(0);
      v153 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
      swift_retain();
LABEL_21:
      swift_retain();
      EnvironmentObject.error()(0, v151, v152, v153);
      __break(1u);
LABEL_22:
      v157 = v101[1];
      goto LABEL_23;
    }
  }
  else
  {
    v154 = v78[1];
    v155 = type metadata accessor for NavigationPusher();
    v156 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v154, v155, v156);
    __break(1u);
  }
  v157 = v81[1];
  swift_retain();
LABEL_23:
  v158 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v159 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  result = EnvironmentObject.error()(0, v157, v158, v159);
  __break(1u);
  return result;
}

uint64_t sub_10084B0C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t OpaqueTypeConformance2;
  uint64_t *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  void (*v86)(uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t KeyPath;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160[8];
  _OWORD v161[3];

  v152 = a1;
  v146 = sub_100007E8C(&qword_1011CC658);
  __chkstk_darwin(v146);
  v151 = (uint64_t *)((char *)&v127 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v147 = type metadata accessor for BorderlessButtonStyle(0);
  v135 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v133 = (char *)&v127 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = _s16ArtistDetailViewV10HeaderViewVMa(0);
  v127 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v128 = v4;
  v129 = (uint64_t)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100007E8C(&qword_1011CC660);
  v132 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v131 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100007E8C(&qword_1011CC668);
  v136 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v130 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v134 = (char *)&v127 - v8;
  v9 = sub_100007E8C(&qword_1011CC670);
  __chkstk_darwin(v9);
  v150 = (uint64_t)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v149 = (char *)&v127 - v12;
  v138 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v13 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v15 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v19);
  v21 = (char *)&v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v139 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v153 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v26 = (char *)&v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v141 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v137 = (char *)&v127 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v140);
  v29 = (char *)&v127 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = (char *)sub_100007E8C(&qword_1011A0630);
  __chkstk_darwin(v144);
  v31 = (char *)&v127 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v155 = (uint64_t)&v127 - v33;
  v34 = type metadata accessor for Artist(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v34, (uint64_t)&protocol witness table for Artist, v21);
  v35 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v18, 6, 10, v35);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v160);
  v36 = v138;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v138);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v21, (uint64_t)v18, (uint64_t)v160, (uint64_t)v15, (uint64_t)v24);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v36);
  sub_10005B748((uint64_t)v18, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A3E10);
  v37 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v38 = sub_1000E4264();
  *(_QWORD *)&v161[0] = v37;
  *((_QWORD *)&v161[0] + 1) = v38;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v161, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  View.corner(_:)(0, 0, 1, v22, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v139 + 8))(v24, v22);
  v40 = Border.artwork.unsafeMutableAddressor();
  v41 = *v40;
  v42 = *((double *)v40 + 1);
  LOBYTE(v37) = *((_BYTE *)v40 + 16);
  swift_retain();
  *(_QWORD *)&v161[0] = v22;
  *((_QWORD *)&v161[0] + 1) = OpaqueTypeConformance2;
  v43 = swift_getOpaqueTypeConformance2(v161, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v44 = v137;
  v45 = v142;
  View.border(_:corner:)(v41, v37, 0, 0, 1, v142, v43, v42);
  v46 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v153 + 8))(v26, v45, v46);
  v47 = v141;
  v48 = v143;
  (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v29, v44, v143);
  v49 = &v29[*(int *)(v140 + 36)];
  *(_QWORD *)v49 = 0x3FF0000000000000;
  *((_WORD *)v49 + 4) = 0;
  v50 = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v44, v48);
  v51 = static Alignment.center.getter(v50);
  _FrameLayout.init(width:height:alignment:)(v161, 0x4064000000000000, 0, 0x4064000000000000, 0, v51, v52);
  sub_10004A160((uint64_t)v29, (uint64_t)v31, &qword_1011A0628);
  v53 = &v31[*((int *)v144 + 9)];
  v54 = v161[1];
  *(_OWORD *)v53 = v161[0];
  *((_OWORD *)v53 + 1) = v54;
  *((_OWORD *)v53 + 2) = v161[2];
  sub_10004FF60((uint64_t)v29, &qword_1011A0628);
  v144 = v31;
  v55 = sub_100065228((uint64_t)v31, v155, &qword_1011A0630);
  v56 = (uint64_t)v154;
  v156 = Artist.name.getter(v55);
  v157 = v57;
  v58 = sub_100055B68();
  v59 = Text.init<A>(_:)(&v156, &type metadata for String, v58);
  v61 = v60;
  v63 = v62;
  v65 = v64 & 1;
  LODWORD(v156) = static HierarchicalShapeStyle.primary.getter(v66);
  v67 = Text.foregroundStyle<A>(_:)(&v156, v59, v61, v65, v63, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v69 = v68;
  v71 = v70;
  v73 = v72 & 1;
  sub_100055BAC(v59, v61, v65);
  v74 = swift_bridgeObjectRelease();
  v75 = static Font.largeTitle.getter(v74);
  v76 = Text.font(_:)(v75, v67, v69, v73, v71);
  v78 = v77;
  LODWORD(v153) = v79;
  v81 = v80;
  v82 = v56;
  swift_release();
  sub_100055BAC(v67, v69, v73);
  swift_bridgeObjectRelease();
  v84 = Artist.catalogID.getter(v83);
  v143 = v81;
  if (v85 && (v86 = sub_100851278(v84, v85), v88 = v87, swift_bridgeObjectRelease(), v86))
  {
    v89 = v82;
    v90 = v129;
    sub_10005B704(v89, v129, _s16ArtistDetailViewV10HeaderViewVMa);
    v91 = *(unsigned __int8 *)(v127 + 80);
    v92 = (v91 + 32) & ~v91;
    v93 = swift_allocObject(&unk_1010DE6F0, v92 + v128, v91 | 7);
    *(_QWORD *)(v93 + 16) = v86;
    *(_QWORD *)(v93 + 24) = v88;
    v94 = sub_10005B6C0(v90, v93 + v92, _s16ArtistDetailViewV10HeaderViewVMa);
    __chkstk_darwin(v94);
    v154 = v86;
    *(&v127 - 4) = v76;
    *(&v127 - 3) = v78;
    v139 = v78;
    *((_BYTE *)&v127 - 16) = v153 & 1;
    *(&v127 - 1) = v81;
    swift_retain();
    v142 = v88;
    v95 = sub_100007E8C(&qword_1011A5388);
    v140 = v95;
    v141 = sub_1008511F8((unint64_t *)&qword_1011A5390, &qword_1011A5388, &qword_1011A0FA8, (uint64_t *)&unk_1011BF930);
    v96 = v131;
    v97 = Button.init(action:label:)(sub_100851598, v93, sub_1008515C8, &v127 - 6, v95, v141);
    v98 = v133;
    BorderlessButtonStyle.init()(v97);
    v99 = sub_100049F28(&qword_1011CC678, &qword_1011CC660, (uint64_t)&protocol conformance descriptor for Button<A>);
    v100 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v101 = v130;
    v102 = v76;
    v103 = v145;
    v104 = v147;
    View.buttonStyle<A>(_:)(v98, v145, v147, v99, v100);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v98, v104);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v96, v103);
    v105 = v136;
    v106 = v134;
    v107 = v101;
    v108 = v139;
    v109 = v148;
    (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v134, v107, v148);
    v110 = v151;
    (*(void (**)(uint64_t *, char *, uint64_t))(v105 + 16))(v151, v106, v109);
    swift_storeEnumTagMultiPayload(v110, v146, 0);
    v156 = v103;
    v157 = v104;
    v158 = v99;
    v159 = v100;
    v111 = v153;
    v112 = swift_getOpaqueTypeConformance2(&v156, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v113 = (uint64_t)v149;
    _ConditionalContent<>.init(storage:)(v110, v109, v140, v112, v141);
    sub_10004BA30((uint64_t)v154, v142);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v109);
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_100ED2FB0);
    v115 = v151;
    *v151 = v76;
    v115[1] = v78;
    v108 = v78;
    v111 = v153;
    *((_BYTE *)v115 + 16) = v153 & 1;
    v115[3] = v81;
    v115[4] = KeyPath;
    v115[5] = 2;
    *((_BYTE *)v115 + 48) = 0;
    swift_storeEnumTagMultiPayload(v115, v146, 1);
    sub_100055BBC(v76, v78, v111 & 1);
    swift_bridgeObjectRetain();
    v116 = sub_100007E8C(&qword_1011A5388);
    v117 = sub_100049F28(&qword_1011CC678, &qword_1011CC660, (uint64_t)&protocol conformance descriptor for Button<A>);
    v118 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v156 = v145;
    v157 = v147;
    v158 = v117;
    v159 = v118;
    v119 = swift_getOpaqueTypeConformance2(&v156, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v120 = sub_1008511F8((unint64_t *)&qword_1011A5390, &qword_1011A5388, &qword_1011A0FA8, (uint64_t *)&unk_1011BF930);
    v113 = (uint64_t)v149;
    _ConditionalContent<>.init(storage:)(v115, v148, v116, v119, v120);
    v102 = v76;
  }
  v121 = v155;
  v122 = (uint64_t)v144;
  sub_10004A160(v155, (uint64_t)v144, &qword_1011A0630);
  v123 = v150;
  sub_10004A160(v113, v150, &qword_1011CC670);
  v124 = v152;
  sub_10004A160(v122, v152, &qword_1011A0630);
  v125 = sub_100007E8C(&qword_1011CC680);
  sub_10004A160(v123, v124 + *(int *)(v125 + 48), &qword_1011CC670);
  sub_100055BAC(v102, v108, v111 & 1);
  swift_bridgeObjectRelease();
  sub_10004FF60(v113, &qword_1011CC670);
  sub_10004FF60(v121, &qword_1011A0630);
  sub_10004FF60(v123, &qword_1011CC670);
  return sub_10004FF60(v122, &qword_1011A0630);
}

void sub_10084BDC8(void (*a1)(__n128), uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (_QWORD *)(a3 + *(int *)(_s16ArtistDetailViewV10HeaderViewVMa(0) + 20));
  if (*v4)
  {
    v5 = swift_retain();
    a1(v5);
    swift_release();
  }
  else
  {
    v6 = v4[1];
    v7 = sub_100007E8C(&qword_10119F038);
    v8 = sub_100049F28(&qword_10119F040, &qword_10119F038, (uint64_t)&unk_100EC0A50);
    EnvironmentObject.error()(0, v6, v7, v8);
    __break(1u);
  }
}

uint64_t sub_10084BE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void *v10;
  id v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  int v18;
  _QWORD v19[2];
  char v20;
  uint64_t v21;

  sub_10023ACBC();
  v10 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleTitle1, UIFontWeightBold);
  v11 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v10, 1);

  v18 = static HierarchicalShapeStyle.secondary.getter(v12);
  Text.withChevron<A>(_:tintColor:)(v11, (uint64_t)&v18, a1, a2, a3 & 1, a4, (uint64_t)&type metadata for HierarchicalShapeStyle, (uint64_t)&protocol witness table for HierarchicalShapeStyle, (uint64_t)v19, v13);

  v14 = v19[0];
  v15 = v19[1];
  LOBYTE(a2) = v20;
  v16 = v21;
  result = swift_getKeyPath(&unk_100ED2FB0);
  *(_QWORD *)a5 = v14;
  *(_QWORD *)(a5 + 8) = v15;
  *(_BYTE *)(a5 + 16) = a2;
  *(_QWORD *)(a5 + 24) = v16;
  *(_QWORD *)(a5 + 32) = result;
  *(_QWORD *)(a5 + 40) = 2;
  *(_BYTE *)(a5 + 48) = 0;
  return result;
}

uint64_t sub_10084BF7C@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  char v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  Swift::String v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t KeyPath;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[9];
  uint64_t v61;
  _QWORD v62[16];

  v3 = v2;
  v59 = a1;
  v4 = type metadata accessor for LocalizedStringKey.StringInterpolation(0, a2);
  __chkstk_darwin(v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100007E8C(&qword_1011CC5E8);
  __chkstk_darwin(v58);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011CC5F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011CC5F8);
  __chkstk_darwin(v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v56 - v16;
  Artist.catalogID.getter(v18);
  v20 = v19;
  v22 = swift_bridgeObjectRelease();
  if (v20)
  {
    *(_QWORD *)v11 = static HorizontalAlignment.center.getter(v21);
    *((_QWORD *)v11 + 1) = 0x403C000000000000;
    v11[16] = 0;
    v23 = sub_100007E8C(&qword_1011CC610);
    sub_10084C3C0(v3, (uint64_t)&v11[*(int *)(v23 + 44)], v24);
    static ApplicationCapabilities.shared.getter((uint64_t)v62);
    sub_100065184(v62);
    v60[0] = BYTE1(v62[0]);
    State.init(wrappedValue:)(v60, &type metadata for Bool);
    v25 = v60[1];
    v26 = v61;
    sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011CC5F0);
    v27 = &v14[*(int *)(v12 + 36)];
    *v27 = 0;
    *((_QWORD *)v27 + 1) = sub_1005AF250;
    *((_QWORD *)v27 + 2) = 0;
    v27[24] = v25;
    *((_QWORD *)v27 + 4) = v26;
    sub_10004FF60((uint64_t)v11, &qword_1011CC5F0);
    sub_100065228((uint64_t)v14, (uint64_t)v17, &qword_1011CC5F8);
    sub_10004A160((uint64_t)v17, (uint64_t)v8, &qword_1011CC5F8);
    swift_storeEnumTagMultiPayload(v8, v58, 0);
    v28 = sub_100007E8C(&qword_10119E038);
    v29 = sub_100850E54();
    v30 = sub_1008511F8((unint64_t *)&qword_1011A9730, &qword_10119E038, (unint64_t *)&unk_1011A9740, &qword_1011BF940);
    _ConditionalContent<>.init(storage:)(v8, v12, v28, v29, v30);
    return sub_10004FF60((uint64_t)v17, &qword_1011CC5F8);
  }
  else
  {
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, v22);
    v32._countAndFlagsBits = 0x6973756D20646441;
    v32._object = (void *)0xED00002079622063;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v32);
    v34._countAndFlagsBits = Artist.name.getter(v33);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v34);
    swift_bridgeObjectRelease();
    v35._object = (void *)0x8000000100E468C0;
    v35._countAndFlagsBits = 0xD000000000000010;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v35);
    v36 = LocalizedStringKey.init(stringInterpolation:)(v6);
    v37 = Text.init(_:tableName:bundle:comment:)(v36);
    v39 = v38;
    v41 = v40;
    v43 = v42 & 1;
    v44 = static Color.secondary.getter(v37);
    v45 = Text.foregroundColor(_:)(v44, v37, v39, v43, v41);
    v47 = v46;
    v57 = v12;
    v49 = v48;
    v51 = v50;
    swift_release();
    sub_100055BAC(v37, v39, v43);
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath(&unk_100ED2F30);
    *(_QWORD *)v8 = v45;
    *((_QWORD *)v8 + 1) = v47;
    v8[16] = v49 & 1;
    *((_QWORD *)v8 + 3) = v51;
    *((_QWORD *)v8 + 4) = KeyPath;
    v8[40] = 1;
    swift_storeEnumTagMultiPayload(v8, v58, 1);
    v53 = sub_100007E8C(&qword_10119E038);
    v54 = sub_100850E54();
    v55 = sub_1008511F8((unint64_t *)&qword_1011A9730, &qword_10119E038, (unint64_t *)&unk_1011A9740, &qword_1011BF940);
    return _ConditionalContent<>.init(storage:)(v8, v57, v53, v54, v55);
  }
}

uint64_t sub_10084C3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  Swift::String v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v78 = a2;
  v4 = type metadata accessor for LocalizedStringKey.StringInterpolation(0, a3);
  __chkstk_darwin(v4);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ButtonBorderShape(0);
  v74 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  __chkstk_darwin(v7);
  v73 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BorderedProminentButtonStyle(0);
  v70 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s16ArtistDetailViewV13NoContentViewVMa(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011CC618);
  v69 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011CC620);
  v71 = *(_QWORD *)(v19 - 8);
  v72 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100007E8C(&qword_1011CC628);
  __chkstk_darwin(v68);
  v76 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v79 = (uint64_t)&v67 - v24;
  v77 = a1;
  sub_10005B704(a1, (uint64_t)v15, _s16ArtistDetailViewV13NoContentViewVMa);
  v25 = *(unsigned __int8 *)(v13 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = swift_allocObject(&unk_1010DE6A0, v26 + v14, v25 | 7);
  sub_10005B6C0((uint64_t)v15, v27 + v26, _s16ArtistDetailViewV13NoContentViewVMa);
  v28 = sub_100007E8C(&qword_1011A2E58);
  v29 = sub_100850FEC();
  v30 = Button.init(action:label:)(sub_100850FC0, v27, sub_10084CF14, 0, v28, v29);
  BorderedProminentButtonStyle.init()(v30);
  v31 = sub_100049F28(&qword_1011CC638, &qword_1011CC618, (uint64_t)&protocol conformance descriptor for Button<A>);
  v32 = sub_100048748(&qword_1011A0D00, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  View.buttonStyle<A>(_:)(v11, v16, v9, v31, v32);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v18, v16);
  if (qword_10119C8D0 != -1)
    swift_once(&qword_10119C8D0, sub_10085F9E0);
  v33 = v73;
  static ButtonBorderShape.roundedRectangle(radius:)(*(double *)&qword_10124DA48);
  KeyPath = swift_getKeyPath(&unk_100ED2D90);
  v35 = (uint64_t)v76;
  v36 = (uint64_t *)&v76[*(int *)(v68 + 36)];
  v37 = sub_100007E8C(&qword_1011A0610);
  v39 = v74;
  v38 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))((char *)v36 + *(int *)(v37 + 28), v33, v75);
  *v36 = KeyPath;
  v41 = v71;
  v40 = v72;
  (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v35, v21, v72);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v38);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v40);
  sub_100065228(v35, v79, &qword_1011CC628);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(56, 1, v42);
  v43._countAndFlagsBits = 0x6973756D20646441;
  v43._object = (void *)0xED00002079622063;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v43);
  v45._countAndFlagsBits = Artist.name.getter(v44);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v45);
  swift_bridgeObjectRelease();
  v46._object = (void *)0x8000000100E46910;
  v46._countAndFlagsBits = 0xD00000000000002BLL;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v46);
  v47 = LocalizedStringKey.init(stringInterpolation:)(v6);
  v48 = Text.init(_:tableName:bundle:comment:)(v47);
  v50 = v49;
  v52 = v51;
  v54 = v53 & 1;
  v55 = static Color.secondary.getter(v48);
  v56 = Text.foregroundColor(_:)(v55, v48, v50, v54, v52);
  v58 = v57;
  LOBYTE(v33) = v59;
  v61 = v60;
  swift_release();
  LOBYTE(v38) = v33 & 1;
  sub_100055BAC(v48, v50, v54);
  swift_bridgeObjectRelease();
  v62 = swift_getKeyPath(&unk_100ED2F30);
  v63 = v79;
  sub_10004A160(v79, v35, &qword_1011CC628);
  v64 = v78;
  sub_10004A160(v35, v78, &qword_1011CC628);
  v65 = v64 + *(int *)(sub_100007E8C(&qword_1011CC640) + 48);
  *(_QWORD *)v65 = v56;
  *(_QWORD *)(v65 + 8) = v58;
  *(_BYTE *)(v65 + 16) = v38;
  *(_QWORD *)(v65 + 24) = v61;
  *(_QWORD *)(v65 + 32) = v62;
  *(_BYTE *)(v65 + 40) = 1;
  sub_100055BBC(v56, v58, v38);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004FF60(v63, &qword_1011CC628);
  sub_100055BAC(v56, v58, v38);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10004FF60(v35, &qword_1011CC628);
}

uint64_t sub_10084C978(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  id v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69[2];

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v68 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011B4D20);
  v65 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v66 = v5;
  v67 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v61 - v7;
  v9 = type metadata accessor for GenericMusicItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)_s16ArtistDetailViewV13NoContentViewVMa(0);
  v14 = a1 + v13[5];
  v15 = *(id *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_1000A4100(*(id *)v14, v16);
  v64 = sub_100824044(v15, v16);
  sub_1000A4224(v15, v16);
  v17 = type metadata accessor for Artist(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v12, a1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for GenericMusicItem.artist(_:), v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
  v18 = &v8[*(int *)(v4 + 36)];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
  v19 = sub_100007E8C(&qword_10119F7C8);
  swift_storeEnumTagMultiPayload(v18, v19, 0);
  v8[*(int *)(v4 + 40)] = 2;
  v20 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v21 = (_QWORD *)(a1 + v13[6]);
  if (!*v21)
  {
    v55 = v21[1];
    v56 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v57 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    EnvironmentObject.error()(0, v55, v56, v57);
    __break(1u);
    goto LABEL_8;
  }
  v22 = (_QWORD *)(a1 + v13[7]);
  if (!*v22)
  {
LABEL_8:
    v58 = v22[1];
    v59 = type metadata accessor for TabSelectionManager(0);
    v60 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    swift_retain();
    result = EnvironmentObject.error()(0, v58, v59, v60);
    __break(1u);
    return result;
  }
  __chkstk_darwin(v20);
  *(&v61 - 2) = (uint64_t)&type metadata for TabIdentifier;
  v23 = sub_1000502A4();
  *(&v61 - 1) = v23;
  KeyPath = swift_getKeyPath(&unk_100ED2D38);
  __chkstk_darwin(KeyPath);
  *(&v61 - 2) = (uint64_t)&type metadata for TabIdentifier;
  *(&v61 - 1) = v23;
  v25 = swift_getKeyPath(&unk_100ED2D70);
  swift_retain();
  swift_retain();
  static Published.subscript.getter(v69, v26, KeyPath, v25);
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(KeyPath) = v69[0];
  v27 = a1 + v13[8];
  v28 = *(_QWORD *)v27;
  v29 = *(_QWORD *)(v27 + 8);
  v30 = *(_BYTE *)(v27 + 16);
  sub_1000A410C(*(_QWORD *)v27, v29, v30);
  sub_100824224(v28, v29, v30);
  sub_1000A4230(v28, v29, v30);
  v31 = a1 + v13[9];
  v32 = *(_QWORD *)v31;
  v33 = *(_QWORD *)(v31 + 8);
  v34 = *(_BYTE *)(v31 + 16);
  sub_1000A411C(*(_QWORD *)v31, v33, v34);
  sub_100824400(v32, v33, v34, v69);
  sub_1000A4240(v32, v33, v34);
  v35 = v69[0];
  v36 = v69[1];
  sub_10066D160(KeyPath);
  v63 = v37;
  v39 = v38;
  swift_bridgeObjectRelease();
  if (v36 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    v40 = sub_10066D7A8();
    v36 = v41;
    swift_bridgeObjectRelease();
    v42 = swift_release();
  }
  else
  {
    v42 = swift_release();
    v40 = v35;
  }
  v43 = (uint64_t)v68;
  static TaskPriority.userInitiated.getter(v42);
  v44 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v43, 0, 1, v44);
  v62 = v8;
  v45 = v67;
  sub_10004A160((uint64_t)v8, v67, &qword_1011B4D20);
  v46 = *(unsigned __int8 *)(v65 + 80);
  v47 = (v46 + 32) & ~v46;
  v48 = (v66 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  v49 = (v48 + 39) & 0xFFFFFFFFFFFFFFF8;
  v50 = swift_allocObject(&unk_1010DE6C8, v49 + 8, v46 | 7);
  *(_QWORD *)(v50 + 16) = 0;
  *(_QWORD *)(v50 + 24) = 0;
  sub_100065228(v45, v50 + v47, &qword_1011B4D20);
  v51 = (_QWORD *)(v50 + v48);
  v52 = v64;
  *v51 = v63;
  v51[1] = v39;
  v51[2] = v40;
  v51[3] = v36;
  *(_QWORD *)(v50 + v49) = v52;
  swift_bridgeObjectRetain();
  sub_1000A0168(v40, v36);
  v53 = v52;
  sub_1000E8908(v43, (uint64_t)&unk_1011B8AE0, v50);
  swift_release();
  sub_10004FF60(v43, (uint64_t *)&unk_1011A13B0);
  swift_bridgeObjectRelease();
  sub_1000822B4(v40, v36);

  return sub_10004FF60((uint64_t)v62, &qword_1011B4D20);
}

uint64_t sub_10084CF14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  double v19;
  _QWORD v22[3];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v22[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A2A80);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = String.LocalizationValue.init(stringLiteral:)(0x7453207472617453, 0xED00006E6F697461);
  static Locale.current.getter(v12);
  v22[0] = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Button title for starting artist station", 40, 2);
  v22[1] = v13;
  v14 = sub_100055B68();
  v15 = Label<>.init<A>(_:systemImage:)(v22, 0xD00000000000001DLL, 0x8000000100E3EB40, &type metadata for String, v14);
  v16 = static Alignment.center.getter(v15);
  v19 = sub_10014C4C4(0, 1, 0.0, 1, INFINITY, 0, 0, 1, a1, v18, 0.0, 1, 0.0, 1, v16, v17);
  return (*(uint64_t (**)(char *, uint64_t, double))(v9 + 8))(v11, v8, v19);
}

uint64_t sub_10084D0E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10084623C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10084D0E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC270;
  if (!qword_1011CC270)
  {
    v1 = sub_100044B54(&qword_1011CC268);
    sub_100049F28(&qword_1011CC278, &qword_1011CC280, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC270);
  }
  return result;
}

uint64_t sub_10084D16C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v2 = v1;
  v4 = sub_100007E8C(&qword_10119F7C8);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011CC648);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v2 + *(int *)(type metadata accessor for ArtistPlaybackSource(0) + 20);
  v15 = type metadata accessor for Artist(0);
  v16 = type metadata accessor for Track(0);
  MusicLibrarySectionedRequest.init()(v15, v16, &protocol witness table for Artist, &protocol witness table for Track);
  KeyPath = swift_getKeyPath(&unk_100ED2F60);
  MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v14, v10);
  swift_release();
  v18 = swift_getKeyPath(&unk_100ED2F88);
  MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v18, 1, v10);
  swift_release();
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v19, v10);
  sub_10004A160(a1, (uint64_t)v6, &qword_10119F7C8);
  if (swift_getEnumCaseMultiPayload(v6, v4) == 1)
  {
    v20 = type metadata accessor for GenericMusicItem(0);
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v9, v6, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v9, 0, 1, v20);
  }
  else
  {
    sub_100065228((uint64_t)v6, (uint64_t)v9, (uint64_t *)&unk_1011A20D0);
  }
  v22 = sub_100049F28(&qword_1011CC650, &qword_1011CC648, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v23 = MusicPlayableRequest.playbackIntent(withStartingItem:)(v9, v10, v22);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A20D0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v23;
}

void sub_10084D3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t (*)(uint64_t), uint64_t, __n128);
  _QWORD *v14;
  __n128 v15;
  uint64_t v16;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = (v6 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject(&unk_1010DE740, v11 + 8, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12 + v10, v7, v4);
  *(_QWORD *)(v12 + v11) = a1;
  v13 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, __n128))((swift_isaMask & *v8) + 0xD8);
  v14 = v8;
  v15 = swift_retain();
  v13(sub_1008516F0, v12, v15);
  swift_release();

}

uint64_t sub_10084D4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_retain();
  JSApplication.initiateOpenURL(_:sourceApplicationBundleIdentifier:referrerURL:completion:)(a2, 0, 0, (uint64_t)v7, (uint64_t)sub_100851740, a3);
  swift_release();
  return sub_10004FF60((uint64_t)v7, &qword_10119E460);
}

void sub_10084D5C4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  uint64_t v36;
  uint64_t v37;

  v4 = sub_100007E8C(&qword_1011A3CF0);
  __chkstk_darwin(v4);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v35[-v8 - 8];
  if (!a1 || (v10 = type metadata accessor for JSDeepLinkSegue(), (v11 = swift_dynamicCastClass(a1, v10)) == 0))
  {
LABEL_14:
    if (qword_10119B890 != -1)
      swift_once(&qword_10119B890, sub_100084544);
    v25 = type metadata accessor for Logger(0);
    sub_100048B14(v25, (uint64_t)qword_10124C748);
    v22 = a1;
    v26 = Logger.logObject.getter(v22);
    v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v36 = (uint64_t)a1;
      v37 = v29;
      *(_DWORD *)v28 = 136446210;
      v30 = v22;
      v31 = sub_100007E8C((uint64_t *)&unk_1011A36A0);
      v32 = String.init<A>(describing:)(&v36, v31);
      v36 = sub_100322200(v32, v33, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Could not unwrap pushable deep link from segue=%{public}s", v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);

      return;
    }

    goto LABEL_19;
  }
  v12 = (uint64_t *)(v11 + OBJC_IVAR____TtC11MusicJSCore15JSDeepLinkSegue_pushSegues);
  swift_beginAccess(v11 + OBJC_IVAR____TtC11MusicJSCore15JSDeepLinkSegue_pushSegues, v35, 0, 0);
  v13 = *v12;
  if (!((unint64_t)*v12 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = a1;
    swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v13 < 0)
    v23 = *v12;
  else
    v23 = v13 & 0xFFFFFFFFFFFFFF8;
  v24 = a1;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter(v23))
  {
LABEL_13:

    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_5:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v13 + 32);
LABEL_8:
    v17 = v16;
    swift_bridgeObjectRelease();
    *(_QWORD *)v9 = v17;
    v9[8] = 6;
    *((_OWORD *)v9 + 1) = xmmword_100EAE4D0;
    v18 = type metadata accessor for NavigationDestinationItem(0);
    swift_storeEnumTagMultiPayload(v9, v18, 7);
    v19 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 0, 1, v18);
    __chkstk_darwin(v19);
    *(&v34 - 2) = v4;
    KeyPath = swift_getKeyPath(&unk_100ED2FE0);
    __chkstk_darwin(KeyPath);
    *(&v34 - 2) = v4;
    v21 = swift_getKeyPath(&unk_100ED3018);
    sub_10004A160((uint64_t)v9, (uint64_t)v6, &qword_1011A3CF0);
    v22 = v17;
    swift_retain();
    static Published.subscript.setter(v6, a2, KeyPath, v21);
    sub_10004FF60((uint64_t)v9, &qword_1011A3CF0);

LABEL_19:
    return;
  }
  __break(1u);
}

uint64_t sub_10084D9B8()
{
  uint64_t v0;

  return sub_100849FC8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10084D9C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10084A110(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10084D9D0()
{
  return 16;
}

__n128 sub_10084D9DC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for ArtistPlaybackSource(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CC458, (uint64_t)&nominal type descriptor for ArtistPlaybackSource);
}

uint64_t _s16ArtistDetailViewV13NoContentViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CC4E8, (uint64_t)&_s16ArtistDetailViewV13NoContentViewVMn);
}

uint64_t _s16ArtistDetailViewV10HeaderViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CC588, (uint64_t)&_s16ArtistDetailViewV10HeaderViewVMn);
}

uint64_t sub_10084DA38(uint64_t a1)
{
  return sub_10084DF14(a1, _s16ArtistDetailViewVMa, sub_100848AEC);
}

unint64_t sub_10084DA4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011CC380;
  if (!qword_1011CC380)
  {
    v1 = sub_100044B54(&qword_1011CC308);
    v2[0] = sub_100044B54(&qword_1011CC310);
    v2[1] = sub_100049F28(&qword_1011CC378, &qword_1011CC310, (uint64_t)&unk_100EC0C68);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
    sub_100049F28(&qword_1011ABF58, &qword_1011ABF40, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC380);
  }
  return result;
}

uint64_t sub_10084DB1C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  v2 = (int *)_s16ArtistDetailViewVMa(0);
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v40 = *(_QWORD *)(v3 + 64);
  v6 = v0 + v5;
  v7 = type metadata accessor for Artist(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v10 = v6 + v2[6];
  v11 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v38 = (v4 + 16) & ~v4;
    v39 = v1;
    v13 = (int *)type metadata accessor for Library.Context(0);
    v14 = v10 + v13[5];
    v15 = type metadata accessor for Album(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = v10 + v13[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v17, 1, v7))
      v9(v17, v7);
    v18 = v10 + v13[7];
    v19 = type metadata accessor for Composer(0);
    v20 = *(_QWORD *)(v19 - 8);
    v5 = v38;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v10 + v13[8];
    v22 = type metadata accessor for Genre(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v10 + v13[9];
    v25 = type metadata accessor for Playlist(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v10 + v13[10];
    v28 = type metadata accessor for TVShow(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    v30 = v10 + v13[11];
    v31 = type metadata accessor for TVSeason(0);
    v32 = *(_QWORD *)(v31 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = v39;
  }
  sub_1000A6174(*(_QWORD *)(v6 + v2[7]), *(_QWORD *)(v6 + v2[7] + 8));
  sub_1000A6174(*(_QWORD *)(v6 + v2[8]), *(_QWORD *)(v6 + v2[8] + 8));
  v33 = v6 + v2[9];
  v34 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
  {
    v35 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v33, v35);
  }
  else
  {
    swift_release();
  }
  v36 = v6 + v2[10];
  sub_1002BD420(*(_QWORD *)v36, *(_QWORD *)(v36 + 8), *(_QWORD *)(v36 + 16), *(_QWORD *)(v36 + 24), *(_BYTE *)(v36 + 32));
  swift_release();
  sub_1000A4224(*(id *)(v6 + v2[12]), *(_BYTE *)(v6 + v2[12] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(v6 + v2[15]), *(_QWORD *)(v6 + v2[15] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(v6 + v2[19]), *(_QWORD *)(v6 + v2[19] + 8), *(_BYTE *)(v6 + v2[19] + 16));
  sub_1000A4240(*(_QWORD *)(v6 + v2[20]), *(_QWORD *)(v6 + v2[20] + 8), *(_BYTE *)(v6 + v2[20] + 16));
  return swift_deallocObject(v1, v5 + v40);
}

uint64_t sub_10084DF00(uint64_t a1)
{
  return sub_10084DF14(a1, _s16ArtistDetailViewVMa, (uint64_t (*)(uint64_t, uint64_t))sub_1008494EC);
}

uint64_t sub_10084DF14(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

unint64_t sub_10084DF70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011CC390;
  if (!qword_1011CC390)
  {
    v1 = sub_100044B54(&qword_1011CC2E0);
    v2[0] = sub_100044B54(&qword_1011CC2E8);
    v2[1] = sub_100049F28(&qword_1011CC388, &qword_1011CC2E8, (uint64_t)&unk_100EC0C68);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
    sub_100049F28(&qword_10119F748, &qword_10119F730, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC390);
  }
  return result;
}

unint64_t sub_10084E03C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC3A8;
  if (!qword_1011CC3A8)
  {
    v1 = sub_100044B54(&qword_1011CC328);
    sub_10084E0C0();
    sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC3A8);
  }
  return result;
}

unint64_t sub_10084E0C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC3B0;
  if (!qword_1011CC3B0)
  {
    v1 = sub_100044B54(&qword_1011A2D48);
    sub_100049F28(&qword_1011CC3B8, &qword_1011A2D40, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC3B0);
  }
  return result;
}

unint64_t sub_10084E144()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC3C0;
  if (!qword_1011CC3C0)
  {
    v1 = sub_100044B54(&qword_1011CC358);
    sub_100048748(&qword_1011CC3C8, _s16ArtistDetailViewV13NoContentViewVMa, (uint64_t)&unk_100ED2EE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC3C0);
  }
  return result;
}

unint64_t sub_10084E1C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011CC3D8;
  if (!qword_1011CC3D8)
  {
    v1 = sub_100044B54(&qword_1011CC338);
    v2[0] = sub_100044B54(&qword_1011CC328);
    v2[1] = type metadata accessor for BorderedProminentButtonStyle(255);
    v2[2] = sub_10084E03C();
    v2[3] = sub_100048748(&qword_1011A0D00, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC3D8);
  }
  return result;
}

uint64_t sub_10084E2C0()
{
  uint64_t v0;

  return sub_10084981C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10084E2CC(uint64_t a1)
{
  return sub_10084DF14(a1, _s16ArtistDetailViewVMa, (uint64_t (*)(uint64_t, uint64_t))sub_1008499C0);
}

uint64_t sub_10084E2E8()
{
  uint64_t v0;

  return sub_100848CB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10084E2F4(uint64_t a1)
{
  return sub_10084DF14(a1, _s16ArtistDetailViewVMa, (uint64_t (*)(uint64_t, uint64_t))sub_100848E70);
}

_QWORD *sub_10084E308(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = (int *)type metadata accessor for Library.Context(0);
    v9 = v8[5];
    v10 = (char *)v7 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Album(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48);
    v15 = swift_retain();
    if (v14(v11, 1, v12, v15))
    {
      v16 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = v8[6];
    v18 = (char *)v7 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for Artist(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = v8[7];
    v24 = (char *)v7 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for Composer(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = v8[8];
    v30 = (char *)v7 + v29;
    v31 = (char *)a2 + v29;
    v32 = type metadata accessor for Genre(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C(&qword_10119ED08);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v8[9];
    v36 = (char *)v7 + v35;
    v37 = (char *)a2 + v35;
    v38 = type metadata accessor for Playlist(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v8[10];
    v42 = (char *)v7 + v41;
    v43 = (char *)a2 + v41;
    v44 = type metadata accessor for TVShow(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v8[11];
    v48 = (char *)v7 + v47;
    v49 = (char *)a2 + v47;
    v50 = type metadata accessor for TVSeason(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    *((_BYTE *)v7 + v8[12]) = *((_BYTE *)a2 + v8[12]);
    *((_BYTE *)v7 + v8[13]) = *((_BYTE *)a2 + v8[13]);
    *((_BYTE *)v7 + v8[14]) = *((_BYTE *)a2 + v8[14]);
    v53 = v8[15];
    v54 = (_QWORD *)((char *)v7 + v53);
    v55 = (_QWORD *)((char *)a2 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    *(_QWORD *)((char *)v7 + v8[16]) = *(_QWORD *)((char *)a2 + v8[16]);
    *((_BYTE *)v7 + v8[17]) = *((_BYTE *)a2 + v8[17]);
    v57 = *(int *)(a3 + 20);
    v58 = (char *)v7 + v57;
    v59 = (char *)a2 + v57;
    v60 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60(v58, v59, v20);
  }
  return v7;
}

uint64_t sub_10084E7AC(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;

  swift_release();
  v4 = (int *)type metadata accessor for Library.Context(0);
  v5 = a1 + v4[5];
  v6 = type metadata accessor for Album(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = a1 + v4[6];
  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = a1 + v4[7];
  v12 = type metadata accessor for Composer(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  v14 = a1 + v4[8];
  v15 = type metadata accessor for Genre(0);
  v16 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  v17 = a1 + v4[9];
  v18 = type metadata accessor for Playlist(0);
  v19 = *(_QWORD *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  v20 = a1 + v4[10];
  v21 = type metadata accessor for TVShow(0);
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  v23 = a1 + v4[11];
  v24 = type metadata accessor for TVSeason(0);
  v25 = *(_QWORD *)(v24 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  swift_bridgeObjectRelease();
  v26 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 8))(a1 + *(int *)(a2 + 20), v9, v26);
}

_QWORD *sub_10084E9E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = (int *)type metadata accessor for Library.Context(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Album(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
  v13 = swift_retain();
  if (v12(v9, 1, v10, v13))
  {
    v14 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = v6[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Artist(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = v6[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for Composer(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v27 = v6[8];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = type metadata accessor for Genre(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_100007E8C(&qword_10119ED08);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v33 = v6[9];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = type metadata accessor for Playlist(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  v39 = v6[10];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = type metadata accessor for TVShow(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v45 = v6[11];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = type metadata accessor for TVSeason(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
  *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
  *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
  v51 = v6[15];
  v52 = (_QWORD *)((char *)a1 + v51);
  v53 = (_QWORD *)((char *)a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  *(_QWORD *)((char *)a1 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  v55 = *(int *)(a3 + 20);
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  v58 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58(v56, v57, v18);
  return a1;
}

_QWORD *sub_10084EE60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  __n128 v72;
  uint64_t v74;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v5 = (int *)type metadata accessor for Library.Context(0);
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Artist(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  v74 = v19;
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  v24 = v5[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for Composer(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_18:
    v32 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_19:
  v33 = v5[8];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = type metadata accessor for Genre(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
LABEL_24:
    v41 = sub_100007E8C(&qword_10119ED08);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v34, v35, v36);
LABEL_25:
  v42 = v5[9];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for Playlist(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
LABEL_30:
    v50 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 24))(v43, v44, v45);
LABEL_31:
  v51 = v5[10];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for TVShow(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_36:
    v59 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 24))(v52, v53, v54);
LABEL_37:
  v60 = v5[11];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = type metadata accessor for TVSeason(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65(v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v61, v62, v63);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
    goto LABEL_42;
  }
  if (v67)
  {
LABEL_42:
    v68 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_43:
  *((_BYTE *)a1 + v5[12]) = *((_BYTE *)a2 + v5[12]);
  *((_BYTE *)a1 + v5[13]) = *((_BYTE *)a2 + v5[13]);
  *((_BYTE *)a1 + v5[14]) = *((_BYTE *)a2 + v5[14]);
  v69 = v5[15];
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)a2 + v69);
  *v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[16]) = *(_QWORD *)((char *)a2 + v5[16]);
  swift_bridgeObjectRetain();
  v72 = swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v5[17]) = *((_BYTE *)a2 + v5[17]);
  (*(void (**)(char *, char *, uint64_t, __n128))(v74 + 24))((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), v18, v72);
  return a1;
}

_QWORD *sub_10084F4E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for Library.Context(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Album(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = v6[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = v6[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for Composer(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = v6[8];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = type metadata accessor for Genre(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100007E8C(&qword_10119ED08);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v31 = v6[9];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = type metadata accessor for Playlist(0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v37 = v6[10];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = type metadata accessor for TVShow(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  v43 = v6[11];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = type metadata accessor for TVSeason(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    v48 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
  *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
  *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
  *(_OWORD *)((char *)a1 + v6[15]) = *(_OWORD *)((char *)a2 + v6[15]);
  *(_QWORD *)((char *)a1 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), v16);
  return a1;
}

_QWORD *sub_10084F940(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v76;

  *a1 = *a2;
  swift_release();
  v5 = (int *)type metadata accessor for Library.Context(0);
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Artist(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  v76 = v19;
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_13:
  v24 = v5[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for Composer(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_18:
    v32 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
LABEL_19:
  v33 = v5[8];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = type metadata accessor for Genre(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
LABEL_24:
    v41 = sub_100007E8C(&qword_10119ED08);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v34, v35, v36);
LABEL_25:
  v42 = v5[9];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for Playlist(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
LABEL_30:
    v50 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v43, v44, v45);
LABEL_31:
  v51 = v5[10];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for TVShow(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_36:
    v59 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
LABEL_37:
  v60 = v5[11];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = type metadata accessor for TVSeason(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65(v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v61, v62, v63);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
    goto LABEL_42;
  }
  if (v67)
  {
LABEL_42:
    v68 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_43:
  *((_BYTE *)a1 + v5[12]) = *((_BYTE *)a2 + v5[12]);
  *((_BYTE *)a1 + v5[13]) = *((_BYTE *)a2 + v5[13]);
  *((_BYTE *)a1 + v5[14]) = *((_BYTE *)a2 + v5[14]);
  v69 = v5[15];
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)a2 + v69);
  v73 = *v71;
  v72 = v71[1];
  *v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[16]) = *(_QWORD *)((char *)a2 + v5[16]);
  v74 = swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v5[17]) = *((_BYTE *)a2 + v5[17]);
  (*(void (**)(char *, char *, uint64_t, __n128))(v76 + 40))((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), v18, v74);
  return a1;
}

uint64_t sub_10084FFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10084FFB4);
}

uint64_t sub_10084FFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Library.Context(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for Artist(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100850028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100850034);
}

uint64_t sub_100850034(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Library.Context(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for Artist(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1008500B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Library.Context(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Artist(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100850134(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(id *)v10;
    v12 = v10[8];
    sub_1000A4100(*(id *)v10, v12);
    *(_QWORD *)v9 = v11;
    v9[8] = v12;
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = *v16;
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
    v19 = (uint64_t *)((char *)a1 + v14);
    v20 = (uint64_t *)((char *)a2 + v14);
    v22 = *v20;
    v21 = v20[1];
    *v19 = v22;
    v19[1] = v21;
    v23 = a3[8];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *(_QWORD *)v25;
    v27 = *((_QWORD *)v25 + 1);
    v28 = v25[16];
    swift_retain();
    swift_retain();
    sub_1000A410C(v26, v27, v28);
    *(_QWORD *)v24 = v26;
    *((_QWORD *)v24 + 1) = v27;
    v24[16] = v28;
    v29 = a3[9];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = *(_QWORD *)v31;
    v33 = *((_QWORD *)v31 + 1);
    LOBYTE(v22) = v31[16];
    sub_1000A411C(*(_QWORD *)v31, v33, v22);
    *(_QWORD *)v30 = v32;
    *((_QWORD *)v30 + 1) = v33;
    v30[16] = v22;
  }
  return a1;
}

double sub_100850270(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1000A4224(*(id *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8), *(_BYTE *)(a1 + a2[8] + 16));
  return sub_1000A4240(*(_QWORD *)(a1 + a2[9]), *(_QWORD *)(a1 + a2[9] + 8), *(_BYTE *)(a1 + a2[9] + 16));
}

uint64_t sub_1008502FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(id *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_1000A4100(*(id *)v9, v11);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = v11;
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (uint64_t *)(a2 + v12);
  v16 = *v15;
  v17 = v15[1];
  *v14 = v16;
  v14[1] = v17;
  v18 = (_QWORD *)(a1 + v13);
  v19 = (uint64_t *)(a2 + v13);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v27 = *(_BYTE *)(v24 + 16);
  swift_retain();
  swift_retain();
  sub_1000A410C(v25, v26, v27);
  *(_QWORD *)v23 = v25;
  *(_QWORD *)(v23 + 8) = v26;
  *(_BYTE *)(v23 + 16) = v27;
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_QWORD *)v30;
  v32 = *(_QWORD *)(v30 + 8);
  LOBYTE(v21) = *(_BYTE *)(v30 + 16);
  sub_1000A411C(*(_QWORD *)v30, v32, v21);
  *(_QWORD *)v29 = v31;
  *(_QWORD *)(v29 + 8) = v32;
  *(_BYTE *)(v29 + 16) = v21;
  return a1;
}

uint64_t sub_10085040C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(id *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_1000A4100(*(id *)v9, v11);
  v12 = *(void **)v8;
  v13 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = v11;
  sub_1000A4224(v12, v13);
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  swift_retain();
  swift_release();
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  swift_retain();
  swift_release();
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  LOBYTE(v19) = *(_BYTE *)(v22 + 16);
  sub_1000A410C(*(_QWORD *)v22, v24, v19);
  v25 = *(_QWORD *)v21;
  v26 = *(_QWORD *)(v21 + 8);
  v27 = *(_BYTE *)(v21 + 16);
  *(_QWORD *)v21 = v23;
  *(_QWORD *)(v21 + 8) = v24;
  *(_BYTE *)(v21 + 16) = v19;
  sub_1000A4230(v25, v26, v27);
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_QWORD *)v30;
  v32 = *(_QWORD *)(v30 + 8);
  LOBYTE(v23) = *(_BYTE *)(v30 + 16);
  sub_1000A411C(*(_QWORD *)v30, v32, v23);
  v33 = *(_QWORD *)v29;
  v34 = *(_QWORD *)(v29 + 8);
  v35 = *(_BYTE *)(v29 + 16);
  *(_QWORD *)v29 = v31;
  *(_QWORD *)(v29 + 8) = v32;
  *(_BYTE *)(v29 + 16) = v23;
  sub_1000A4240(v33, v34, v35);
  return a1;
}

uint64_t sub_100850568(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v14 = a3[9];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  return a1;
}

uint64_t sub_10085061C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  LOBYTE(v9) = *((_BYTE *)v9 + 8);
  v11 = *(void **)v8;
  v12 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = (_BYTE)v9;
  sub_1000A4224(v11, v12);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_release();
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_release();
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 16);
  v23 = *(_QWORD *)v20;
  v24 = *(_QWORD *)(v20 + 8);
  v25 = *(_BYTE *)(v20 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_BYTE *)(v20 + 16) = v22;
  sub_1000A4230(v23, v24, v25);
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_BYTE *)(v28 + 16);
  v30 = *(_QWORD *)v27;
  v31 = *(_QWORD *)(v27 + 8);
  v32 = *(_BYTE *)(v27 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_BYTE *)(v27 + 16) = v29;
  sub_1000A4240(v30, v31, v32);
  return a1;
}

uint64_t sub_100850734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100850740);
}

uint64_t sub_100850740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1008507C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008507D4);
}

uint64_t sub_1008507D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t sub_10085084C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100ED2CD0;
    v4[2] = &unk_100ED2CB8;
    v4[3] = &unk_100ED2CB8;
    v4[4] = &unk_100ED2C88;
    v4[5] = &unk_100ED2C88;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1008508D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = *v10;
    v12 = v10[1];
    *v9 = v11;
    v9[1] = v12;
  }
  swift_retain(v11);
  return a1;
}

uint64_t sub_100850964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
}

uint64_t sub_1008509A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  *v8 = v10;
  v8[1] = v11;
  swift_retain(v10);
  return a1;
}

uint64_t sub_100850A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7);
  v11 = *v9;
  *(_QWORD *)(a1 + v7) = *v9;
  swift_retain(v11);
  swift_release(v10);
  *(_QWORD *)(v8 + 8) = v9[1];
  return a1;
}

uint64_t sub_100850A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100850AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *v9;
  swift_release(v10);
  *(_QWORD *)(v8 + 8) = v9[1];
  return a1;
}

uint64_t sub_100850B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100850B68);
}

uint64_t sub_100850B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_100850BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100850BFC);
}

uint64_t sub_100850BFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_100850C74(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100ED2CB8;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100850CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v0 = sub_100044B54(&qword_1011CC260);
  v1 = sub_100044B54(&qword_1011CC258);
  v2 = sub_100044B54(&qword_1011CC290);
  v3 = sub_100044B54(&qword_1011CC250);
  v11 = sub_100044B54(&qword_1011CC248);
  v12 = sub_100049F28(&qword_1011CC288, &qword_1011CC248, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
  v11 = v3;
  v12 = OpaqueTypeConformance2;
  v5 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
  v6 = sub_100044B54(&qword_1011CC298);
  v7 = sub_100049F28(&qword_1011CC2A0, &qword_1011CC298, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
  v11 = v6;
  v12 = v7;
  v8 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v11 = v1;
  v12 = v2;
  v13 = v5;
  v14 = v8;
  v9 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v11 = v0;
  v12 = v9;
  return swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
}

uint64_t sub_100850E2C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE9A4, 1);
}

uint64_t sub_100850E3C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE97C, 1);
}

unint64_t sub_100850E54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC600;
  if (!qword_1011CC600)
  {
    v1 = sub_100044B54(&qword_1011CC5F8);
    sub_100049F28(&qword_1011CC608, &qword_1011CC5F0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28(&qword_1011A7AF0, &qword_1011A7AF8, (uint64_t)&unk_100EC8CF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC600);
  }
  return result;
}

uint64_t sub_100850EF0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (int *)_s16ArtistDetailViewV13NoContentViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  sub_1000A4224(*(id *)(v5 + v1[5]), *(_BYTE *)(v5 + v1[5] + 8));
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(v5 + v1[8]), *(_QWORD *)(v5 + v1[8] + 8), *(_BYTE *)(v5 + v1[8] + 16));
  sub_1000A4240(*(_QWORD *)(v5 + v1[9]), *(_QWORD *)(v5 + v1[9] + 8), *(_BYTE *)(v5 + v1[9] + 16));
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100850FC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s16ArtistDetailViewV13NoContentViewVMa(0) - 8) + 80);
  return sub_10084C978(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_100850FEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC630;
  if (!qword_1011CC630)
  {
    v1 = sub_100044B54(&qword_1011A2E58);
    sub_100049F28(&qword_1011A2BF8, &qword_1011A2A80, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC630);
  }
  return result;
}

uint64_t sub_100851070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v1 = sub_100007E8C(&qword_1011B4D20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = v0 + v3;
  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v9 = v5 + *(int *)(v1 + 36);
  v10 = sub_100007E8C(&qword_10119F7C8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1
    || !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
  {
    v8(v9, v6);
  }
  v11 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 8))
  {
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 24);
    if (v12 >> 60 != 15)
      sub_1000652DC(*(_QWORD *)(v11 + 16), v12);
  }
  v13 = (v4 + 39) & 0xFFFFFFFFFFFFFFF8;
  v14 = v13 + 8;

  return swift_deallocObject(v0, v14);
}

uint64_t _s11ArtistsViewVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011CC6E8, (uint64_t)&_s11ArtistsViewVMn);
}

uint64_t sub_1008511AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryTrackSortProperties.albumTitle.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1008511F8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    sub_100049F28(a3, a4, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

void (*sub_100851278(uint64_t a1, void *a2))(uint64_t a1)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  NSString v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  __n128 v23;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v4 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - v12;
  BagProvider.shared.unsafeMutableAddressor();
  swift_retain();
  v14 = (void *)BagProvider.bag.getter();
  swift_release();
  if (!v14)
    return 0;
  v30 = a1;
  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyCountryCode);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v14, "stringForBagKey:", v15, swift_bridgeObjectRelease().n128_f64[0]);

  if (!v16)
    return 0;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v29 = a2;
  v19 = v18;

  v31 = 0;
  v32 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  v31 = 0xD000000000000018;
  v32 = 0x8000000100E340A0;
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0x2F7473697472612FLL;
  v21._object = (void *)0xE800000000000000;
  String.append(_:)(v21);
  v22._object = v29;
  v22._countAndFlagsBits = v30;
  String.append(_:)(v22);
  URL.init(string:)(v31, v32);
  v23 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v23) == 1)
  {
    sub_10004FF60((uint64_t)v6, &qword_10119E460);
    return 0;
  }
  v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v25(v13, v6, v7);
  v25(v10, v13, v7);
  v26 = *(unsigned __int8 *)(v8 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = swift_allocObject(&unk_1010DE718, v27 + v9, v26 | 7);
  v25((char *)(v28 + v27), v10, v7);
  return sub_100851640;
}

uint64_t sub_100851508()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(_s16ArtistDetailViewV10HeaderViewVMa(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  swift_release();
  v4 = type metadata accessor for Artist(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  swift_release();
  return swift_deallocObject(v0, v3);
}

void sub_100851598()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s16ArtistDetailViewV10HeaderViewVMa(0) - 8) + 80);
  sub_10084BDC8(*(void (**)(__n128))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_1008515C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10084BE64(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_1008515E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100851640(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_10084D3D0(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_10085167C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1008516F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10084D4EC(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_100851740(void *a1)
{
  uint64_t v1;

  sub_10084D5C4(a1, v1);
}

uint64_t sub_100851750()
{
  return 8;
}

_QWORD *sub_10085175C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_100851768(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t, __n128);
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v7);
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v84 = v7;
      v9 = (int *)type metadata accessor for Library.Context(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for Album(0);
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48);
      v16 = swift_retain();
      if (v15(v12, 1, v13, v16))
      {
        v17 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v20 = v9[6];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for Artist(0);
      v24 = *(_QWORD *)(v23 - 8);
      v7 = v84;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v26 = v9[7];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = type metadata accessor for Composer(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v9[8];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = type metadata accessor for Genre(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C(&qword_10119ED08);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v9[9];
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      v41 = type metadata accessor for Playlist(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v9[10];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      v47 = type metadata accessor for TVShow(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v9[11];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      v53 = type metadata accessor for TVSeason(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      *((_BYTE *)a1 + v9[12]) = *((_BYTE *)a2 + v9[12]);
      *((_BYTE *)a1 + v9[13]) = *((_BYTE *)a2 + v9[13]);
      *((_BYTE *)a1 + v9[14]) = *((_BYTE *)a2 + v9[14]);
      v56 = v9[15];
      v57 = (_QWORD *)((char *)a1 + v56);
      v58 = (_QWORD *)((char *)a2 + v56);
      v59 = v58[1];
      *v57 = *v58;
      v57[1] = v59;
      *(_QWORD *)((char *)a1 + v9[16]) = *(_QWORD *)((char *)a2 + v9[16]);
      *((_BYTE *)a1 + v9[17]) = *((_BYTE *)a2 + v9[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = 1;
    }
    else
    {
      swift_retain();
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v19);
    v60 = a3[5];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    v63 = *(_QWORD *)v62;
    v64 = *((_QWORD *)v62 + 1);
    v65 = v62[16];
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v62, v64);
    *(_QWORD *)v61 = v63;
    *((_QWORD *)v61 + 1) = v64;
    v61[16] = v65;
    v66 = a3[6];
    v67 = (char *)a1 + v66;
    v68 = (char *)a2 + v66;
    v69 = *(_QWORD *)v68;
    v70 = *((_QWORD *)v68 + 1);
    v71 = *((_QWORD *)v68 + 2);
    v72 = *((_QWORD *)v68 + 3);
    v73 = v68[32];
    sub_100154A5C(*(_QWORD *)v68, v70, v71, v72, v73);
    *(_QWORD *)v67 = v69;
    *((_QWORD *)v67 + 1) = v70;
    *((_QWORD *)v67 + 2) = v71;
    *((_QWORD *)v67 + 3) = v72;
    v67[32] = v73;
    v74 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v75 = (char *)a1 + v74;
    v76 = (char *)a2 + v74;
    v77 = type metadata accessor for Artist(0);
    v78 = *(_QWORD *)(v77 - 8);
    v79 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v78 + 48);
    v80 = swift_retain();
    if (v79(v76, 1, v77, v80))
    {
      v81 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
    }
    v82 = sub_100007E8C(&qword_1011CC688);
    *(_QWORD *)&v75[*(int *)(v82 + 28)] = *(_QWORD *)&v76[*(int *)(v82 + 28)];
  }
  swift_retain();
  return a1;
}

double sub_100851D58(uint64_t a1, int *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double result;

  v4 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v6 = (int *)type metadata accessor for Library.Context(0);
    v7 = a1 + v6[5];
    v8 = type metadata accessor for Album(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v10 = a1 + v6[6];
    v11 = type metadata accessor for Artist(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    v13 = a1 + v6[7];
    v14 = type metadata accessor for Composer(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    v16 = a1 + v6[8];
    v17 = type metadata accessor for Genre(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    v19 = a1 + v6[9];
    v20 = type metadata accessor for Playlist(0);
    v21 = *(_QWORD *)(v20 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    v22 = a1 + v6[10];
    v23 = type metadata accessor for TVShow(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    v25 = a1 + v6[11];
    v26 = type metadata accessor for TVSeason(0);
    v27 = *(_QWORD *)(v26 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000A6174(*(_QWORD *)(a1 + a2[5]), *(_QWORD *)(a1 + a2[5] + 8));
  v28 = a1 + a2[6];
  sub_1002BD420(*(_QWORD *)v28, *(_QWORD *)(v28 + 8), *(_QWORD *)(v28 + 16), *(_QWORD *)(v28 + 24), *(_BYTE *)(v28 + 32));
  swift_release();
  v29 = a1 + a2[8];
  v30 = type metadata accessor for Artist(0);
  v31 = *(_QWORD *)(v30 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
  sub_100007E8C(&qword_1011CC688);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_100852028(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t, __n128);
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;

  v6 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v82 = v6;
    v8 = (int *)type metadata accessor for Library.Context(0);
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Album(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48);
    v15 = swift_retain();
    if (v14(v11, 1, v12, v15))
    {
      v16 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v18 = v8[6];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for Artist(0);
    v22 = *(_QWORD *)(v21 - 8);
    v6 = v82;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v24 = v8[7];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = type metadata accessor for Composer(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v30 = v8[8];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = type metadata accessor for Genre(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C(&qword_10119ED08);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v36 = v8[9];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = type metadata accessor for Playlist(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v42 = v8[10];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    v45 = type metadata accessor for TVShow(0);
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      v47 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    v48 = v8[11];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    v51 = type metadata accessor for TVSeason(0);
    v52 = *(_QWORD *)(v51 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      v53 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    *((_BYTE *)a1 + v8[12]) = *((_BYTE *)a2 + v8[12]);
    *((_BYTE *)a1 + v8[13]) = *((_BYTE *)a2 + v8[13]);
    *((_BYTE *)a1 + v8[14]) = *((_BYTE *)a2 + v8[14]);
    v54 = v8[15];
    v55 = (_QWORD *)((char *)a1 + v54);
    v56 = (_QWORD *)((char *)a2 + v54);
    v57 = v56[1];
    *v55 = *v56;
    v55[1] = v57;
    *(_QWORD *)((char *)a1 + v8[16]) = *(_QWORD *)((char *)a2 + v8[16]);
    *((_BYTE *)a1 + v8[17]) = *((_BYTE *)a2 + v8[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = 1;
  }
  else
  {
    swift_retain();
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v17);
  v58 = a3[5];
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  v61 = *(_QWORD *)v60;
  v62 = *((_QWORD *)v60 + 1);
  v63 = v60[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v60, v62);
  *(_QWORD *)v59 = v61;
  *((_QWORD *)v59 + 1) = v62;
  v59[16] = v63;
  v64 = a3[6];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  v67 = *(_QWORD *)v66;
  v68 = *((_QWORD *)v66 + 1);
  v69 = *((_QWORD *)v66 + 2);
  v70 = *((_QWORD *)v66 + 3);
  v71 = v66[32];
  sub_100154A5C(*(_QWORD *)v66, v68, v69, v70, v71);
  *(_QWORD *)v65 = v67;
  *((_QWORD *)v65 + 1) = v68;
  *((_QWORD *)v65 + 2) = v69;
  *((_QWORD *)v65 + 3) = v70;
  v65[32] = v71;
  v72 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v73 = (char *)a1 + v72;
  v74 = (char *)a2 + v72;
  v75 = type metadata accessor for Artist(0);
  v76 = *(_QWORD *)(v75 - 8);
  v77 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v76 + 48);
  v78 = swift_retain();
  if (v77(v74, 1, v75, v78))
  {
    v79 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  v80 = sub_100007E8C(&qword_1011CC688);
  *(_QWORD *)&v73[*(int *)(v80 + 28)] = *(_QWORD *)&v74[*(int *)(v80 + 28)];
  swift_retain();
  return a1;
}

_QWORD *sub_1008525F0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(char *, uint64_t, uint64_t);
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;

  if (a1 != a2)
  {
    sub_10004FF60((uint64_t)a1, &qword_10119F030);
    v6 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v88 = v6;
      v8 = (int *)type metadata accessor for Library.Context(0);
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for Album(0);
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48);
      v15 = swift_retain();
      if (v14(v11, 1, v12, v15))
      {
        v16 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v18 = v8[6];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = type metadata accessor for Artist(0);
      v22 = *(_QWORD *)(v21 - 8);
      v6 = v88;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      v24 = v8[7];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = type metadata accessor for Composer(0);
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      v30 = v8[8];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = type metadata accessor for Genre(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = sub_100007E8C(&qword_10119ED08);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      v36 = v8[9];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = type metadata accessor for Playlist(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
      {
        v41 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      }
      v42 = v8[10];
      v43 = (char *)a1 + v42;
      v44 = (char *)a2 + v42;
      v45 = type metadata accessor for TVShow(0);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        v47 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      v48 = v8[11];
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      v51 = type metadata accessor for TVSeason(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      *((_BYTE *)a1 + v8[12]) = *((_BYTE *)a2 + v8[12]);
      *((_BYTE *)a1 + v8[13]) = *((_BYTE *)a2 + v8[13]);
      *((_BYTE *)a1 + v8[14]) = *((_BYTE *)a2 + v8[14]);
      v54 = v8[15];
      v55 = (_QWORD *)((char *)a1 + v54);
      v56 = (_QWORD *)((char *)a2 + v54);
      *v55 = *v56;
      v55[1] = v56[1];
      *(_QWORD *)((char *)a1 + v8[16]) = *(_QWORD *)((char *)a2 + v8[16]);
      *((_BYTE *)a1 + v8[17]) = *((_BYTE *)a2 + v8[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = 1;
    }
    else
    {
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v17);
  }
  v57 = a3[5];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  v60 = *(_QWORD *)v59;
  v61 = *((_QWORD *)v59 + 1);
  v62 = v59[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v59, v61);
  v63 = *(_QWORD *)v58;
  v64 = *((_QWORD *)v58 + 1);
  *(_QWORD *)v58 = v60;
  *((_QWORD *)v58 + 1) = v61;
  v58[16] = v62;
  sub_1000A6174(v63, v64);
  v65 = a3[6];
  v66 = (char *)a1 + v65;
  v67 = (char *)a2 + v65;
  v68 = *(_QWORD *)v67;
  v69 = *((_QWORD *)v67 + 1);
  v70 = *((_QWORD *)v67 + 2);
  v71 = *((_QWORD *)v67 + 3);
  v72 = v67[32];
  sub_100154A5C(*(_QWORD *)v67, v69, v70, v71, v72);
  v73 = *(_QWORD *)v66;
  v74 = *((_QWORD *)v66 + 1);
  v75 = *((_QWORD *)v66 + 2);
  v76 = *((_QWORD *)v66 + 3);
  v77 = v66[32];
  *(_QWORD *)v66 = v68;
  *((_QWORD *)v66 + 1) = v69;
  *((_QWORD *)v66 + 2) = v70;
  *((_QWORD *)v66 + 3) = v71;
  v66[32] = v72;
  sub_1002BD420(v73, v74, v75, v76, v77);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  v78 = a3[8];
  v79 = (char *)a1 + v78;
  v80 = (char *)a2 + v78;
  v81 = type metadata accessor for Artist(0);
  v82 = *(_QWORD *)(v81 - 8);
  v83 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
  LODWORD(v69) = v83(v79, 1, v81);
  v84 = v83(v80, 1, v81);
  if (!(_DWORD)v69)
  {
    if (!v84)
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 24))(v79, v80, v81);
      goto LABEL_33;
    }
    (*(void (**)(char *, uint64_t))(v82 + 8))(v79, v81);
    goto LABEL_32;
  }
  if (v84)
  {
LABEL_32:
    v85 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v79, v80, v81);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
LABEL_33:
  v86 = sub_100007E8C(&qword_1011CC688);
  *(_QWORD *)&v79[*(int *)(v86 + 28)] = *(_QWORD *)&v80[*(int *)(v86 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_100852C50(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v6 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    *a1 = *a2;
    v7 = (int *)type metadata accessor for Library.Context(0);
    v8 = v7[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Album(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = v7[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = v7[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for Composer(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v26 = v7[8];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = type metadata accessor for Genre(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = sub_100007E8C(&qword_10119ED08);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v32 = v7[9];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v35 = type metadata accessor for Playlist(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v38 = v7[10];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = type metadata accessor for TVShow(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v44 = v7[11];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    v47 = type metadata accessor for TVSeason(0);
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    *((_BYTE *)a1 + v7[12]) = *((_BYTE *)a2 + v7[12]);
    *((_BYTE *)a1 + v7[13]) = *((_BYTE *)a2 + v7[13]);
    *((_BYTE *)a1 + v7[14]) = *((_BYTE *)a2 + v7[14]);
    *(_OWORD *)((char *)a1 + v7[15]) = *(_OWORD *)((char *)a2 + v7[15]);
    *(_QWORD *)((char *)a1 + v7[16]) = *(_QWORD *)((char *)a2 + v7[16]);
    *((_BYTE *)a1 + v7[17]) = *((_BYTE *)a2 + v7[17]);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v50 = a3[5];
  v51 = a3[6];
  v52 = (char *)a1 + v50;
  v53 = (char *)a2 + v50;
  v54 = *(_OWORD *)v53;
  v52[16] = v53[16];
  *(_OWORD *)v52 = v54;
  v55 = (char *)a1 + v51;
  v56 = (char *)a2 + v51;
  v57 = *((_OWORD *)v56 + 1);
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *((_OWORD *)v55 + 1) = v57;
  v55[32] = v56[32];
  v58 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  v61 = type metadata accessor for Artist(0);
  v62 = *(_QWORD *)(v61 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
  {
    v63 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  }
  v64 = sub_100007E8C(&qword_1011CC688);
  *(_QWORD *)&v59[*(int *)(v64 + 28)] = *(_QWORD *)&v60[*(int *)(v64 + 28)];
  return a1;
}

_QWORD *sub_1008531B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(char *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;

  if (a1 != a2)
  {
    sub_10004FF60((uint64_t)a1, &qword_10119F030);
    v6 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      *a1 = *a2;
      v7 = (int *)type metadata accessor for Library.Context(0);
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for Album(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v14 = v7[6];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for Artist(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v20 = v7[7];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for Composer(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v26 = v7[8];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = type metadata accessor for Genre(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C(&qword_10119ED08);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v7[9];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = type metadata accessor for Playlist(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v7[10];
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      v41 = type metadata accessor for TVShow(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v7[11];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      v47 = type metadata accessor for TVSeason(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      *((_BYTE *)a1 + v7[12]) = *((_BYTE *)a2 + v7[12]);
      *((_BYTE *)a1 + v7[13]) = *((_BYTE *)a2 + v7[13]);
      *((_BYTE *)a1 + v7[14]) = *((_BYTE *)a2 + v7[14]);
      *(_OWORD *)((char *)a1 + v7[15]) = *(_OWORD *)((char *)a2 + v7[15]);
      *(_QWORD *)((char *)a1 + v7[16]) = *(_QWORD *)((char *)a2 + v7[16]);
      *((_BYTE *)a1 + v7[17]) = *((_BYTE *)a2 + v7[17]);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v50 = a3[5];
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  v53 = v52[16];
  v54 = *(_QWORD *)v51;
  v55 = *((_QWORD *)v51 + 1);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  v51[16] = v53;
  sub_1000A6174(v54, v55);
  v56 = a3[6];
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = v58[32];
  v60 = *(_QWORD *)v57;
  v61 = *((_QWORD *)v57 + 1);
  v62 = *((_QWORD *)v57 + 2);
  v63 = *((_QWORD *)v57 + 3);
  v64 = v57[32];
  v65 = *((_OWORD *)v58 + 1);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *((_OWORD *)v57 + 1) = v65;
  v57[32] = v59;
  sub_1002BD420(v60, v61, v62, v63, v64);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_release();
  v66 = a3[8];
  v67 = (char *)a1 + v66;
  v68 = (char *)a2 + v66;
  v69 = type metadata accessor for Artist(0);
  v70 = *(_QWORD *)(v69 - 8);
  v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
  v72 = v71(v67, 1, v69);
  v73 = v71(v68, 1, v69);
  if (!v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 40))(v67, v68, v69);
      goto LABEL_32;
    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v69);
    goto LABEL_31;
  }
  if (v73)
  {
LABEL_31:
    v74 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v67, v68, v69);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
LABEL_32:
  v75 = sub_100007E8C(&qword_1011CC688);
  *(_QWORD *)&v67[*(int *)(v75 + 28)] = *(_QWORD *)&v68[*(int *)(v75 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_1008537A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008537B4);
}

uint64_t sub_1008537B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_100007E8C(&qword_10119EE98);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_100007E8C(&qword_1011CC688);
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_100853864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100853870);
}

uint64_t sub_100853870(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_100007E8C(&qword_10119EE98);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    v10 = sub_100007E8C(&qword_1011CC688);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10085391C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_1000A79B0(319, (unint64_t *)&qword_10119F6B0, type metadata accessor for Library.Context);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100ED2C88;
    v6[2] = &unk_100ED2CA0;
    v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_1008539D0(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

void sub_1008539D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011CC6F8)
  {
    v2 = sub_100044B54((uint64_t *)&unk_1011A3FB0);
    v3 = type metadata accessor for State(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011CC6F8);
  }
}

unint64_t sub_100853A2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC738;
  if (!qword_1011CC738)
  {
    v1 = sub_100044B54(&qword_1011CC740);
    sub_100850E54();
    sub_1008511F8((unint64_t *)&qword_1011A9730, &qword_10119E038, (unint64_t *)&unk_1011A9740, &qword_1011BF940);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC738);
  }
  return result;
}

uint64_t sub_100853AB8()
{
  return sub_100049F28(&qword_1011CC748, &qword_1011CC750, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

uint64_t sub_100853AE4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE9FC, 1);
}

double sub_100853AF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(_s11ArtistsViewVMa(0) - 8) + 80);
  return sub_100840BD4(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_100853B34()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011A3B48) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = (int *)_s11ArtistsViewVMa(0);
  v5 = *((_QWORD *)v4 - 1);
  v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v2;
  v9 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v0 + v6;
  v12 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v6, v12);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v41 = v7;
    v14 = (int *)type metadata accessor for Library.Context(0);
    v15 = v11 + v14[5];
    v16 = type metadata accessor for Album(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v11 + v14[6];
    v19 = type metadata accessor for Artist(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v11 + v14[7];
    v22 = type metadata accessor for Composer(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v11 + v14[8];
    v25 = type metadata accessor for Genre(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v11 + v14[9];
    v28 = type metadata accessor for Playlist(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    v30 = v11 + v14[10];
    v31 = type metadata accessor for TVShow(0);
    v32 = *(_QWORD *)(v31 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    v33 = v11 + v14[11];
    v34 = type metadata accessor for TVSeason(0);
    v35 = *(_QWORD *)(v34 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v41;
  }
  sub_1000A6174(*(_QWORD *)(v11 + v4[5]), *(_QWORD *)(v11 + v4[5] + 8));
  v36 = v11 + v4[6];
  sub_1002BD420(*(_QWORD *)v36, *(_QWORD *)(v36 + 8), *(_QWORD *)(v36 + 16), *(_QWORD *)(v36 + 24), *(_BYTE *)(v36 + 32));
  swift_release();
  v37 = v11 + v4[8];
  v38 = type metadata accessor for Artist(0);
  v39 = *(_QWORD *)(v38 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
  sub_100007E8C(&qword_1011CC688);
  swift_release();
  return swift_deallocObject(v0, v6 + v7);
}

uint64_t sub_100853EC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011A3B48) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(_s11ArtistsViewVMa(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc(dword_1011CC784);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10006AEE4;
  return sub_100840D9C(a1, v9, v10, v11, v12);
}

uint64_t sub_100853F84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10083FDE0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100853F8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC810;
  if (!qword_1011CC810)
  {
    v1 = sub_100044B54(&qword_1011CC818);
    sub_100049F28(&qword_1011CC820, &qword_1011CC828, (uint64_t)&protocol conformance descriptor for LazyVStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC810);
  }
  return result;
}

unint64_t sub_100854010()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;

  result = qword_1011CC838;
  if (!qword_1011CC838)
  {
    v1 = sub_100044B54(&qword_1011CC7C8);
    v2 = sub_100044B54(&qword_1011CC7B8);
    v4 = sub_100044B54(&qword_1011CC7B0);
    v5 = sub_100049F28(&qword_1011CC830, &qword_1011CC7B0, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
    sub_100049F28(&qword_1011CC840, &qword_1011CC848, (uint64_t)&unk_100EC0B30);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC838);
  }
  return result;
}

unint64_t sub_100854104()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC858;
  if (!qword_1011CC858)
  {
    v1 = sub_100044B54(&qword_1011CC7A8);
    sub_100854188();
    sub_100049F28(&qword_1011CC868, &qword_1011CC850, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC858);
  }
  return result;
}

unint64_t sub_100854188()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_1011CC860;
  if (!qword_1011CC860)
  {
    v1 = sub_100044B54(&qword_1011CC7E0);
    v2 = sub_100044B54(&qword_1011CC7D0);
    v4 = sub_100044B54(&qword_1011CC7C8);
    v5 = sub_100854010();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.navigationBarTitle(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
    sub_100049F28(&qword_10119EF58, &qword_10119EF60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC860);
  }
  return result;
}

uint64_t sub_100854264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1008400A4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10085426C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008542D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC898;
  if (!qword_1011CC898)
  {
    v1 = sub_100044B54(&qword_1011CC8A0);
    sub_1000A8D68();
    sub_100854348();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC898);
  }
  return result;
}

unint64_t sub_100854348()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011CC8A8;
  if (!qword_1011CC8A8)
  {
    v1 = sub_100044B54(&qword_1011CC8B0);
    v2[0] = sub_100044B54(&qword_1011CC8B8);
    v2[1] = sub_1008543D4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC8A8);
  }
  return result;
}

unint64_t sub_1008543D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CC8C0;
  if (!qword_1011CC8C0)
  {
    v1 = sub_100044B54(&qword_1011CC8B8);
    sub_100048748(&qword_1011CC8C8, _s11ArtistsViewV10ArtistCellVMa, (uint64_t)&unk_100ED30F8);
    sub_100049F28(&qword_1011BDA18, &qword_1011BDA20, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CC8C0);
  }
  return result;
}

uint64_t _s11ArtistsViewV10ArtistCellVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CC958, (uint64_t)&_s11ArtistsViewV10ArtistCellVMn);
}

uint64_t sub_100854488()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = (int *)_s11ArtistsViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  v6 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v3, v6);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = (int *)type metadata accessor for Library.Context(0);
    v9 = v5 + v8[5];
    v10 = type metadata accessor for Album(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    v12 = v5 + v8[6];
    v13 = type metadata accessor for Artist(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    v15 = v5 + v8[7];
    v16 = type metadata accessor for Composer(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v5 + v8[8];
    v19 = type metadata accessor for Genre(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v5 + v8[9];
    v22 = type metadata accessor for Playlist(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v5 + v8[10];
    v25 = type metadata accessor for TVShow(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v5 + v8[11];
    v28 = type metadata accessor for TVSeason(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000A6174(*(_QWORD *)(v5 + v1[5]), *(_QWORD *)(v5 + v1[5] + 8));
  v30 = v5 + v1[6];
  sub_1002BD420(*(_QWORD *)v30, *(_QWORD *)(v30 + 8), *(_QWORD *)(v30 + 16), *(_QWORD *)(v30 + 24), *(_BYTE *)(v30 + 32));
  swift_release();
  v31 = v5 + v1[8];
  v32 = type metadata accessor for Artist(0);
  v33 = *(_QWORD *)(v32 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
  sub_100007E8C(&qword_1011CC688);
  swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_10085479C(uint64_t a1)
{
  return sub_10084DF14(a1, _s11ArtistsViewVMa, sub_100840378);
}

uint64_t sub_1008547B4()
{
  uint64_t v0;

  return sub_100840434(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1008547C0(uint64_t a1)
{
  return sub_10084DF14(a1, _s11ArtistsViewVMa, (uint64_t (*)(uint64_t, uint64_t))sub_100840604);
}

uint64_t sub_1008547D4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = (int *)_s11ArtistsViewVMa(0);
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = type metadata accessor for Artist(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v41 = *(_QWORD *)(v8 + 64);
  v10 = v1 + v5;
  v11 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1 + v5, v11);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v39 = v6;
    v40 = v1;
    v13 = (int *)type metadata accessor for Library.Context(0);
    v14 = v10 + v13[5];
    v15 = type metadata accessor for Album(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = v10 + v13[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v17, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v17, v7);
    v18 = v10 + v13[7];
    v19 = type metadata accessor for Composer(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v10 + v13[8];
    v22 = type metadata accessor for Genre(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v10 + v13[9];
    v25 = type metadata accessor for Playlist(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v10 + v13[10];
    v28 = type metadata accessor for TVShow(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    v30 = v10 + v13[11];
    v31 = type metadata accessor for TVSeason(0);
    v32 = *(_QWORD *)(v31 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = (v4 + 16) & ~v4;
    v1 = v40;
    v6 = v39;
  }
  sub_1000A6174(*(_QWORD *)(v10 + v2[5]), *(_QWORD *)(v10 + v2[5] + 8));
  v33 = v10 + v2[6];
  sub_1002BD420(*(_QWORD *)v33, *(_QWORD *)(v33 + 8), *(_QWORD *)(v33 + 16), *(_QWORD *)(v33 + 24), *(_BYTE *)(v33 + 32));
  v34 = swift_release();
  v35 = v10 + v2[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v35, 1, v7, v34))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v35, v7);
  v36 = (v5 + v6 + v9) & ~v9;
  sub_100007E8C(&qword_1011CC688);
  v37 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v1 + v36, v7, v37);
  return swift_deallocObject(v1, v36 + v41);
}

uint64_t sub_100854B24()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(_s11ArtistsViewVMa(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Artist(0) - 8) + 80);
  return sub_100840AC0(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

char *sub_100854B84(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  void (*v108)(char *, char *, uint64_t);
  int *v109;
  uint64_t v110;
  char *v111;
  char *__dst;
  uint64_t v113;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Artist(0);
    v113 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *(id *)v11;
    v13 = v11[8];
    sub_1000A4100(*(id *)v11, v13);
    *(_QWORD *)v10 = v12;
    v10[8] = v13;
    v14 = a3[6];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    if (EnumCaseMultiPayload == 1)
    {
      v108 = v8;
      v110 = v17;
      v109 = (int *)type metadata accessor for Library.Context(0);
      v19 = v109[5];
      v111 = v15;
      __dst = &v15[v19];
      v20 = &v16[v19];
      v21 = type metadata accessor for Album(0);
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v22 + 48);
      v24 = swift_retain();
      if (v23(v20, 1, v21, v24))
      {
        v25 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      v28 = v109[6];
      v15 = (char *)v111;
      v29 = (char *)v111 + v28;
      v30 = &v16[v28];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(&v16[v28], 1, v7))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        v108(v29, v30, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v29, 0, 1, v7);
      }
      v32 = v109[7];
      v33 = (char *)v111 + v32;
      v34 = &v16[v32];
      v35 = type metadata accessor for Composer(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v109[8];
      v39 = (char *)v111 + v38;
      v40 = &v16[v38];
      v41 = type metadata accessor for Genre(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_10119ED08);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v109[9];
      v45 = (char *)v111 + v44;
      v46 = &v16[v44];
      v47 = type metadata accessor for Playlist(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v109[10];
      v51 = (char *)v111 + v50;
      v52 = &v16[v50];
      v53 = type metadata accessor for TVShow(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v56 = v109[11];
      v57 = (char *)v111 + v56;
      v58 = &v16[v56];
      v59 = type metadata accessor for TVSeason(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        v61 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      *((_BYTE *)v111 + v109[12]) = v16[v109[12]];
      *((_BYTE *)v111 + v109[13]) = v16[v109[13]];
      *((_BYTE *)v111 + v109[14]) = v16[v109[14]];
      v62 = v109[15];
      v63 = (_QWORD *)((char *)v111 + v62);
      v64 = &v16[v62];
      v65 = *((_QWORD *)v64 + 1);
      *v63 = *(_QWORD *)v64;
      v63[1] = v65;
      *(_QWORD *)((char *)v111 + v109[16]) = *(_QWORD *)&v16[v109[16]];
      *((_BYTE *)v111 + v109[17]) = v16[v109[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = 1;
      v17 = v110;
    }
    else
    {
      swift_retain();
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v27);
    v66 = a3[7];
    v67 = a3[8];
    v68 = &a1[v66];
    v69 = (uint64_t *)&a2[v66];
    v70 = *v69;
    v71 = v69[1];
    *(_QWORD *)v68 = v70;
    *((_QWORD *)v68 + 1) = v71;
    v72 = &a1[v67];
    v73 = (uint64_t *)&a2[v67];
    v75 = *v73;
    v74 = v73[1];
    *(_QWORD *)v72 = v75;
    *((_QWORD *)v72 + 1) = v74;
    v76 = a3[9];
    v77 = &a1[v76];
    v78 = &a2[v76];
    v79 = *(_QWORD *)v78;
    v80 = *((_QWORD *)v78 + 1);
    v81 = v78[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v79, v80);
    *(_QWORD *)v77 = v79;
    *((_QWORD *)v77 + 1) = v80;
    v77[16] = v81;
    v82 = a3[10];
    v83 = a3[11];
    v84 = &a1[v82];
    v85 = (uint64_t *)&a2[v82];
    v86 = *v85;
    v87 = v85[1];
    *(_QWORD *)v84 = v86;
    *((_QWORD *)v84 + 1) = v87;
    v88 = &a1[v83];
    v89 = (uint64_t *)&a2[v83];
    v91 = *v89;
    v90 = v89[1];
    *(_QWORD *)v88 = v91;
    *((_QWORD *)v88 + 1) = v90;
    v92 = a3[12];
    v93 = a3[13];
    v94 = &a1[v92];
    v95 = (uint64_t *)&a2[v92];
    v97 = *v95;
    v96 = v95[1];
    *(_QWORD *)v94 = v97;
    *((_QWORD *)v94 + 1) = v96;
    v98 = &a1[v93];
    v99 = *(_QWORD *)&a2[v93];
    v100 = *(_QWORD *)&a2[v93 + 8];
    LOBYTE(v77) = a2[v93 + 16];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v99, v100, (char)v77);
    *(_QWORD *)v98 = v99;
    *((_QWORD *)v98 + 1) = v100;
    v98[16] = (char)v77;
    v101 = a3[14];
    v102 = &a1[v101];
    v103 = &a2[v101];
    v104 = *(_QWORD *)v103;
    v105 = *((_QWORD *)v103 + 1);
    LOBYTE(v99) = v103[16];
    sub_1000A411C(*(_QWORD *)v103, v105, v99);
    *(_QWORD *)v102 = v104;
    *((_QWORD *)v102 + 1) = v105;
    v102[16] = v99;
    v106 = a3[16];
    *(_QWORD *)&a1[a3[15]] = *(_QWORD *)&a2[a3[15]];
    *(_QWORD *)&a1[v106] = *(_QWORD *)&a2[v106];
  }
  return a1;
}

double sub_1008551D4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = type metadata accessor for Artist(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  sub_1000A4224(*(id *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  v7 = a1 + a2[6];
  v8 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = (int *)type metadata accessor for Library.Context(0);
    v11 = v7 + v10[5];
    v12 = type metadata accessor for Album(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v7 + v10[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4))
      v6(v14, v4);
    v15 = v7 + v10[7];
    v16 = type metadata accessor for Composer(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v7 + v10[8];
    v19 = type metadata accessor for Genre(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v7 + v10[9];
    v22 = type metadata accessor for Playlist(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v7 + v10[10];
    v25 = type metadata accessor for TVShow(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v7 + v10[11];
    v28 = type metadata accessor for TVSeason(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[9]), *(_QWORD *)(a1 + a2[9] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 16));
  return sub_1000A4240(*(_QWORD *)(a1 + a2[14]), *(_QWORD *)(a1 + a2[14] + 8), *(_BYTE *)(a1 + a2[14] + 16));
}

uint64_t sub_1008554C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  void (*v107)(char *, char *, uint64_t);
  char *__dst;
  int *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;

  v6 = type metadata accessor for Artist(0);
  v112 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(id *)v10;
  v12 = *(_BYTE *)(v10 + 8);
  sub_1000A4100(*(id *)v10, v12);
  *(_QWORD *)v9 = v11;
  *(_BYTE *)(v9 + 8) = v12;
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v16);
  *v14 = *(_QWORD *)v15;
  if (EnumCaseMultiPayload == 1)
  {
    v107 = (void (*)(char *, char *, uint64_t))v7;
    v110 = v16;
    v18 = type metadata accessor for Library.Context(0);
    v19 = *(int *)(v18 + 20);
    v111 = v14;
    __dst = (char *)v14 + v19;
    v109 = (int *)v18;
    v20 = &v15[v19];
    v21 = type metadata accessor for Album(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v22 + 48);
    v24 = swift_retain();
    if (v23(v20, 1, v21, v24))
    {
      v25 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    v14 = v111;
    v27 = v109[6];
    v28 = (char *)v111 + v27;
    v29 = &v15[v27];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(&v15[v27], 1, v6))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v107(v28, v29, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v28, 0, 1, v6);
    }
    v31 = v109[7];
    v32 = (char *)v111 + v31;
    v33 = &v15[v31];
    v34 = type metadata accessor for Composer(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v37 = v109[8];
    v38 = (char *)v111 + v37;
    v39 = &v15[v37];
    v40 = type metadata accessor for Genre(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_100007E8C(&qword_10119ED08);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v43 = v109[9];
    v44 = (char *)v111 + v43;
    v45 = &v15[v43];
    v46 = type metadata accessor for Playlist(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v49 = v109[10];
    v50 = (char *)v111 + v49;
    v51 = &v15[v49];
    v52 = type metadata accessor for TVShow(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v55 = v109[11];
    v56 = (char *)v111 + v55;
    v57 = &v15[v55];
    v58 = type metadata accessor for TVSeason(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    *((_BYTE *)v111 + v109[12]) = v15[v109[12]];
    *((_BYTE *)v111 + v109[13]) = v15[v109[13]];
    *((_BYTE *)v111 + v109[14]) = v15[v109[14]];
    v61 = v109[15];
    v62 = (_QWORD *)((char *)v111 + v61);
    v63 = &v15[v61];
    v64 = *((_QWORD *)v63 + 1);
    *v62 = *(_QWORD *)v63;
    v62[1] = v64;
    *(_QWORD *)((char *)v111 + v109[16]) = *(_QWORD *)&v15[v109[16]];
    *((_BYTE *)v111 + v109[17]) = v15[v109[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = 1;
    v16 = v110;
  }
  else
  {
    swift_retain();
    v26 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v16, v26);
  v65 = a3[7];
  v66 = a3[8];
  v67 = (_QWORD *)(a1 + v65);
  v68 = (uint64_t *)(a2 + v65);
  v69 = *v68;
  v70 = v68[1];
  *v67 = v69;
  v67[1] = v70;
  v71 = (_QWORD *)(a1 + v66);
  v72 = (uint64_t *)(a2 + v66);
  v74 = *v72;
  v73 = v72[1];
  *v71 = v74;
  v71[1] = v73;
  v75 = a3[9];
  v76 = a1 + v75;
  v77 = a2 + v75;
  v78 = *(_QWORD *)v77;
  v79 = *(_QWORD *)(v77 + 8);
  v80 = *(_BYTE *)(v77 + 16);
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v78, v79);
  *(_QWORD *)v76 = v78;
  *(_QWORD *)(v76 + 8) = v79;
  *(_BYTE *)(v76 + 16) = v80;
  v81 = a3[10];
  v82 = a3[11];
  v83 = (_QWORD *)(a1 + v81);
  v84 = (uint64_t *)(a2 + v81);
  v85 = *v84;
  v86 = v84[1];
  *v83 = v85;
  v83[1] = v86;
  v87 = (_QWORD *)(a1 + v82);
  v88 = (uint64_t *)(a2 + v82);
  v90 = *v88;
  v89 = v88[1];
  *v87 = v90;
  v87[1] = v89;
  v91 = a3[12];
  v92 = a3[13];
  v93 = (_QWORD *)(a1 + v91);
  v94 = (uint64_t *)(a2 + v91);
  v96 = *v94;
  v95 = v94[1];
  *v93 = v96;
  v93[1] = v95;
  v97 = a1 + v92;
  v98 = *(_QWORD *)(a2 + v92);
  v99 = *(_QWORD *)(a2 + v92 + 8);
  LOBYTE(v76) = *(_BYTE *)(a2 + v92 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v98, v99, v76);
  *(_QWORD *)v97 = v98;
  *(_QWORD *)(v97 + 8) = v99;
  *(_BYTE *)(v97 + 16) = v76;
  v100 = a3[14];
  v101 = a1 + v100;
  v102 = a2 + v100;
  v103 = *(_QWORD *)v102;
  v104 = *(_QWORD *)(v102 + 8);
  LOBYTE(v98) = *(_BYTE *)(v102 + 16);
  sub_1000A411C(*(_QWORD *)v102, v104, v98);
  *(_QWORD *)v101 = v103;
  *(_QWORD *)(v101 + 8) = v104;
  *(_BYTE *)(v101 + 16) = v98;
  v105 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v105) = *(_QWORD *)(a2 + v105);
  return a1;
}

uint64_t sub_100855AE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  void *v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char *__dst;
  char *v105;
  uint64_t v106;
  _QWORD *v107;
  int *v108;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(id *)v10;
  v12 = *(_BYTE *)(v10 + 8);
  sub_1000A4100(*(id *)v10, v12);
  v13 = *(void **)v9;
  v14 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v9 = v11;
  *(_BYTE *)(v9 + 8) = v12;
  sub_1000A4224(v13, v14);
  if (a1 != a2)
  {
    v15 = a3[6];
    v16 = (_QWORD *)(a1 + v15);
    v17 = (char *)(a2 + v15);
    sub_10004FF60(a1 + v15, &qword_10119F030);
    v18 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v18);
    *v16 = *(_QWORD *)v17;
    if (EnumCaseMultiPayload == 1)
    {
      v106 = v18;
      v107 = v16;
      v108 = (int *)type metadata accessor for Library.Context(0);
      v20 = v108[5];
      __dst = (char *)v16 + v20;
      v105 = v17;
      v21 = &v17[v20];
      v22 = type metadata accessor for Album(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v23 + 48);
      v25 = swift_retain();
      if (v24(v21, 1, v22, v25))
      {
        v26 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      }
      v16 = v107;
      v28 = v108[6];
      v29 = (char *)v107 + v28;
      v30 = &v105[v28];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&v105[v28], 1, v6))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
      }
      v32 = v108[7];
      v33 = (char *)v107 + v32;
      v34 = &v105[v32];
      v35 = type metadata accessor for Composer(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v108[8];
      v39 = (char *)v107 + v38;
      v40 = &v105[v38];
      v41 = type metadata accessor for Genre(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_10119ED08);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v108[9];
      v45 = (char *)v107 + v44;
      v46 = &v105[v44];
      v47 = type metadata accessor for Playlist(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v108[10];
      v51 = (char *)v107 + v50;
      v52 = &v105[v50];
      v53 = type metadata accessor for TVShow(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v56 = v108[11];
      v57 = (char *)v107 + v56;
      v58 = &v105[v56];
      v59 = type metadata accessor for TVSeason(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        v61 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      *((_BYTE *)v107 + v108[12]) = v105[v108[12]];
      *((_BYTE *)v107 + v108[13]) = v105[v108[13]];
      *((_BYTE *)v107 + v108[14]) = v105[v108[14]];
      v62 = v108[15];
      v63 = (_QWORD *)((char *)v107 + v62);
      v64 = &v105[v62];
      *v63 = *(_QWORD *)v64;
      v63[1] = *((_QWORD *)v64 + 1);
      *(_QWORD *)((char *)v107 + v108[16]) = *(_QWORD *)&v105[v108[16]];
      *((_BYTE *)v107 + v108[17]) = v105[v108[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = 1;
      v18 = v106;
    }
    else
    {
      swift_retain();
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v18, v27);
  }
  v65 = a3[7];
  v66 = a1 + v65;
  v67 = a2 + v65;
  *(_QWORD *)(a1 + v65) = *(_QWORD *)(a2 + v65);
  swift_retain();
  swift_release();
  *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
  v68 = a3[8];
  v69 = a1 + v68;
  v70 = a2 + v68;
  *(_QWORD *)(a1 + v68) = *(_QWORD *)(a2 + v68);
  swift_retain();
  swift_release();
  *(_QWORD *)(v69 + 8) = *(_QWORD *)(v70 + 8);
  v71 = a3[9];
  v72 = a1 + v71;
  v73 = a2 + v71;
  v74 = *(_QWORD *)v73;
  v75 = *(_QWORD *)(v73 + 8);
  LOBYTE(v70) = *(_BYTE *)(v73 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v73, v75);
  v76 = *(_QWORD *)v72;
  v77 = *(_QWORD *)(v72 + 8);
  *(_QWORD *)v72 = v74;
  *(_QWORD *)(v72 + 8) = v75;
  *(_BYTE *)(v72 + 16) = v70;
  sub_1000A6174(v76, v77);
  v78 = a3[10];
  v79 = a1 + v78;
  v80 = a2 + v78;
  *(_QWORD *)(a1 + v78) = *(_QWORD *)(a2 + v78);
  swift_retain();
  swift_release();
  *(_QWORD *)(v79 + 8) = *(_QWORD *)(v80 + 8);
  v81 = a3[11];
  v82 = a1 + v81;
  v83 = a2 + v81;
  *(_QWORD *)(a1 + v81) = *(_QWORD *)(a2 + v81);
  swift_retain();
  swift_release();
  *(_QWORD *)(v82 + 8) = *(_QWORD *)(v83 + 8);
  v84 = a3[12];
  v85 = a1 + v84;
  v86 = a2 + v84;
  *(_QWORD *)(a1 + v84) = *(_QWORD *)(a2 + v84);
  swift_retain();
  swift_release();
  *(_QWORD *)(v85 + 8) = *(_QWORD *)(v86 + 8);
  v87 = a3[13];
  v88 = a1 + v87;
  v89 = a2 + v87;
  v90 = *(_QWORD *)v89;
  v91 = *(_QWORD *)(v89 + 8);
  LOBYTE(v86) = *(_BYTE *)(v89 + 16);
  sub_1000A410C(*(_QWORD *)v89, v91, v86);
  v92 = *(_QWORD *)v88;
  v93 = *(_QWORD *)(v88 + 8);
  v94 = *(_BYTE *)(v88 + 16);
  *(_QWORD *)v88 = v90;
  *(_QWORD *)(v88 + 8) = v91;
  *(_BYTE *)(v88 + 16) = v86;
  sub_1000A4230(v92, v93, v94);
  v95 = a3[14];
  v96 = a1 + v95;
  v97 = a2 + v95;
  v98 = *(_QWORD *)v97;
  v99 = *(_QWORD *)(v97 + 8);
  LOBYTE(v86) = *(_BYTE *)(v97 + 16);
  sub_1000A411C(*(_QWORD *)v97, v99, v86);
  v100 = *(_QWORD *)v96;
  v101 = *(_QWORD *)(v96 + 8);
  v102 = *(_BYTE *)(v96 + 16);
  *(_QWORD *)v96 = v98;
  *(_QWORD *)(v96 + 8) = v99;
  *(_BYTE *)(v96 + 16) = v86;
  sub_1000A4240(v100, v101, v102);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_1008561B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v69)(char *, char *, uint64_t);
  int *v70;
  uint64_t v71;
  char *__dst;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a3[6];
  v11 = a1 + v9;
  v12 = a2 + v9;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = (_QWORD *)(a1 + v10);
  v14 = (char *)(a2 + v10);
  v15 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v69 = (void (*)(char *, char *, uint64_t))v8;
    v71 = v15;
    *v13 = *(_QWORD *)v14;
    v70 = (int *)type metadata accessor for Library.Context(0);
    v16 = v70[5];
    __dst = (char *)v13 + v16;
    v17 = &v14[v16];
    v18 = type metadata accessor for Album(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    v21 = v70[6];
    v22 = (char *)v13 + v21;
    v23 = &v14[v21];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&v14[v21], 1, v6))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v69(v22, v23, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
    }
    v25 = v70[7];
    v26 = (char *)v13 + v25;
    v27 = &v14[v25];
    v28 = type metadata accessor for Composer(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v31 = v70[8];
    v32 = (char *)v13 + v31;
    v33 = &v14[v31];
    v34 = type metadata accessor for Genre(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = sub_100007E8C(&qword_10119ED08);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v37 = v70[9];
    v38 = (char *)v13 + v37;
    v39 = &v14[v37];
    v40 = type metadata accessor for Playlist(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v43 = v70[10];
    v44 = (char *)v13 + v43;
    v45 = &v14[v43];
    v46 = type metadata accessor for TVShow(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v49 = v70[11];
    v50 = (char *)v13 + v49;
    v51 = &v14[v49];
    v52 = type metadata accessor for TVSeason(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    *((_BYTE *)v13 + v70[12]) = v14[v70[12]];
    *((_BYTE *)v13 + v70[13]) = v14[v70[13]];
    *((_BYTE *)v13 + v70[14]) = v14[v70[14]];
    *(_OWORD *)((char *)v13 + v70[15]) = *(_OWORD *)&v14[v70[15]];
    *(_QWORD *)((char *)v13 + v70[16]) = *(_QWORD *)&v14[v70[16]];
    *((_BYTE *)v13 + v70[17]) = v14[v70[17]];
    swift_storeEnumTagMultiPayload(v13, v71, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v55 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v55) = *(_OWORD *)(a2 + v55);
  v56 = a3[9];
  v57 = a3[10];
  v58 = a1 + v56;
  v59 = a2 + v56;
  *(_OWORD *)v58 = *(_OWORD *)v59;
  *(_BYTE *)(v58 + 16) = *(_BYTE *)(v59 + 16);
  *(_OWORD *)(a1 + v57) = *(_OWORD *)(a2 + v57);
  v60 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v60) = *(_OWORD *)(a2 + v60);
  v61 = a3[13];
  v62 = a3[14];
  v63 = a1 + v61;
  v64 = a2 + v61;
  *(_BYTE *)(v63 + 16) = *(_BYTE *)(v64 + 16);
  *(_OWORD *)v63 = *(_OWORD *)v64;
  v65 = a1 + v62;
  v66 = a2 + v62;
  *(_BYTE *)(v65 + 16) = *(_BYTE *)(v66 + 16);
  *(_OWORD *)v65 = *(_OWORD *)v66;
  v67 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v67) = *(_QWORD *)(a2 + v67);
  return a1;
}

uint64_t sub_100856728(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  int *v94;
  uint64_t v95;
  char *__dst;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = (uint64_t *)(a2 + v8);
  v11 = *v10;
  LOBYTE(v10) = *((_BYTE *)v10 + 8);
  v12 = *(void **)v9;
  v13 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v9 = v11;
  *(_BYTE *)(v9 + 8) = (_BYTE)v10;
  sub_1000A4224(v12, v13);
  if (a1 != a2)
  {
    v14 = a3[6];
    v15 = (_QWORD *)(a1 + v14);
    v16 = (char *)(a2 + v14);
    sub_10004FF60(a1 + v14, &qword_10119F030);
    v17 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v95 = v17;
      *v15 = *(_QWORD *)v16;
      v94 = (int *)type metadata accessor for Library.Context(0);
      v18 = v94[5];
      __dst = (char *)v15 + v18;
      v19 = &v16[v18];
      v20 = type metadata accessor for Album(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      v23 = v94[6];
      v24 = (char *)v15 + v23;
      v25 = &v16[v23];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&v16[v23], 1, v6))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v24, v25, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v24, 0, 1, v6);
      }
      v27 = v94[7];
      v28 = (char *)v15 + v27;
      v29 = &v16[v27];
      v30 = type metadata accessor for Composer(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v33 = v94[8];
      v34 = (char *)v15 + v33;
      v35 = &v16[v33];
      v36 = type metadata accessor for Genre(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C(&qword_10119ED08);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v94[9];
      v40 = (char *)v15 + v39;
      v41 = &v16[v39];
      v42 = type metadata accessor for Playlist(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = v94[10];
      v46 = (char *)v15 + v45;
      v47 = &v16[v45];
      v48 = type metadata accessor for TVShow(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      v51 = v94[11];
      v52 = (char *)v15 + v51;
      v53 = &v16[v51];
      v54 = type metadata accessor for TVSeason(0);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        v56 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      *((_BYTE *)v15 + v94[12]) = v16[v94[12]];
      *((_BYTE *)v15 + v94[13]) = v16[v94[13]];
      *((_BYTE *)v15 + v94[14]) = v16[v94[14]];
      *(_OWORD *)((char *)v15 + v94[15]) = *(_OWORD *)&v16[v94[15]];
      *(_QWORD *)((char *)v15 + v94[16]) = *(_QWORD *)&v16[v94[16]];
      *((_BYTE *)v15 + v94[17]) = v16[v94[17]];
      swift_storeEnumTagMultiPayload(v15, v95, 1);
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
  }
  v57 = a3[7];
  v58 = a1 + v57;
  v59 = a2 + v57;
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);
  swift_release();
  *(_QWORD *)(v58 + 8) = *(_QWORD *)(v59 + 8);
  v60 = a3[8];
  v61 = a1 + v60;
  v62 = a2 + v60;
  *(_QWORD *)(a1 + v60) = *(_QWORD *)(a2 + v60);
  swift_release();
  *(_QWORD *)(v61 + 8) = *(_QWORD *)(v62 + 8);
  v63 = a3[9];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = *(_BYTE *)(v65 + 16);
  v67 = *(_QWORD *)v64;
  v68 = *(_QWORD *)(v64 + 8);
  *(_OWORD *)v64 = *(_OWORD *)v65;
  *(_BYTE *)(v64 + 16) = v66;
  sub_1000A6174(v67, v68);
  v69 = a3[10];
  v70 = a1 + v69;
  v71 = a2 + v69;
  *(_QWORD *)(a1 + v69) = *(_QWORD *)(a2 + v69);
  swift_release();
  *(_QWORD *)(v70 + 8) = *(_QWORD *)(v71 + 8);
  v72 = a3[11];
  v73 = a1 + v72;
  v74 = a2 + v72;
  *(_QWORD *)(a1 + v72) = *(_QWORD *)(a2 + v72);
  swift_release();
  *(_QWORD *)(v73 + 8) = *(_QWORD *)(v74 + 8);
  v75 = a3[12];
  v76 = a1 + v75;
  v77 = a2 + v75;
  *(_QWORD *)(a1 + v75) = *(_QWORD *)(a2 + v75);
  swift_release();
  *(_QWORD *)(v76 + 8) = *(_QWORD *)(v77 + 8);
  v78 = a3[13];
  v79 = a1 + v78;
  v80 = a2 + v78;
  v81 = *(_BYTE *)(v80 + 16);
  v82 = *(_QWORD *)v79;
  v83 = *(_QWORD *)(v79 + 8);
  v84 = *(_BYTE *)(v79 + 16);
  *(_OWORD *)v79 = *(_OWORD *)v80;
  *(_BYTE *)(v79 + 16) = v81;
  sub_1000A4230(v82, v83, v84);
  v85 = a3[14];
  v86 = a1 + v85;
  v87 = a2 + v85;
  v88 = *(_BYTE *)(v87 + 16);
  v89 = *(_QWORD *)v86;
  v90 = *(_QWORD *)(v86 + 8);
  v91 = *(_BYTE *)(v86 + 16);
  *(_OWORD *)v86 = *(_OWORD *)v87;
  *(_BYTE *)(v86 + 16) = v88;
  sub_1000A4240(v89, v90, v91);
  v92 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v92) = *(_QWORD *)(a2 + v92);
  return a1;
}

uint64_t sub_100856D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100856D74);
}

uint64_t sub_100856D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100007E8C(&qword_10119EE98);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_100856E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100856E38);
}

uint64_t sub_100856E38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_100007E8C(&qword_10119EE98);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = a2;
  return result;
}

void sub_100856EE0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[13];

  v2 = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100ED2CD0;
    sub_1000A79B0(319, (unint64_t *)&qword_10119F6B0, type metadata accessor for Library.Context);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = &unk_100ED2CB8;
      v6[4] = &unk_100ED2CB8;
      v6[5] = &unk_100ED2C88;
      v6[6] = &unk_100ED2CB8;
      v6[7] = &unk_100ED2CB8;
      v6[8] = &unk_100ED2CB8;
      v6[9] = &unk_100ED2C88;
      v6[10] = &unk_100ED2C88;
      v6[11] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[12] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initStructMetadata(a1, 256, 13, v6, a1 + 16);
    }
  }
}

uint64_t sub_100856FAC()
{
  return sub_100049F28(&qword_1011CC9C0, &qword_1011CC778, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
}

uint64_t sub_100856FD8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAEA24, 1);
}

uint64_t sub_100856FE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100842AC8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100856FF0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  ValueMetadata *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  result = qword_1011CCA08;
  if (!qword_1011CCA08)
  {
    v1 = sub_100044B54(&qword_1011CC9E0);
    v2 = sub_100044B54(&qword_1011CC9D0);
    v3 = type metadata accessor for ContextualPreview(255);
    v7 = sub_100044B54(&qword_1011CC9C8);
    v8 = (ValueMetadata *)sub_100049F28(&qword_1011CCA00, &qword_1011CC9C8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    v5 = sub_1000E3EE4();
    v6 = sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
    v7 = v2;
    v8 = &type metadata for ActionType;
    v9 = v3;
    v10 = OpaqueTypeConformance2;
    v11 = v5;
    v12 = v6;
    swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CCA08);
  }
  return result;
}

uint64_t sub_100857124()
{
  return sub_10005610C(&qword_1011CCA40, &qword_1011CCA20, (void (*)(void))sub_100857148);
}

uint64_t sub_100857148()
{
  return sub_10005610C(&qword_1011CCA48, &qword_1011CCA18, (void (*)(void))sub_1003AB478);
}

unint64_t sub_100857170()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011CCA58;
  if (!qword_1011CCA58)
  {
    v1 = sub_100044B54(&qword_1011CC9F0);
    v2[0] = sub_100044B54(&qword_1011CC9E0);
    v2[1] = sub_100856FF0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    sub_100049F28(&qword_1011CCA60, &qword_1011CCA10, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CCA58);
  }
  return result;
}

uint64_t sub_10085721C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100007E8C((uint64_t *)&unk_1011A3A60);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TitledSection(0);
  v5 = type metadata accessor for TVShow(0);
  v6 = sub_100048748(&qword_10119FE58, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  MusicLibrarySectionedRequest.init()(v4, v5, &protocol witness table for TitledSection, v6);
  v7 = sub_100049F28(&qword_1011A3A70, (uint64_t *)&unk_1011A3A60, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v8 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v0, v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v8;
}

uint64_t sub_100857318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100007E8C(&qword_10119D2D0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TitledSection(0);
  v5 = type metadata accessor for MusicMovie(0);
  v6 = sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  MusicLibrarySectionedRequest.init()(v4, v5, &protocol witness table for TitledSection, v6);
  v7 = sub_100049F28(&qword_1011A3AC8, &qword_10119D2D0, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v8 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v0, v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v8;
}

unint64_t sub_100857414(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v78;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_BYTE *)(a2 + 40);
    KeyValueObservationTrigger.keyPath.getter(v10, v11);
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_BYTE *)(a1 + 40) = v12;
    v13 = *(int *)(a3 + 24);
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    v16 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = 1;
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v18);
    v20 = *(int *)(a3 + 28);
    v21 = (_QWORD *)(a1 + v20);
    v22 = (_QWORD *)(a2 + v20);
    v23 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v23);
    *v21 = *v22;
    if (EnumCaseMultiPayload == 1)
    {
      v78 = v23;
      v25 = (int *)type metadata accessor for Library.Context(0);
      v26 = v25[5];
      v27 = (char *)v21 + v26;
      v28 = (char *)v22 + v26;
      v29 = type metadata accessor for Album(0);
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v30 + 48);
      v32 = swift_retain();
      if (v31(v28, 1, v29, v32))
      {
        v33 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v37 = v25[6];
      v38 = (char *)v21 + v37;
      v39 = (char *)v22 + v37;
      v40 = type metadata accessor for Artist(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v25[7];
      v44 = (char *)v21 + v43;
      v45 = (char *)v22 + v43;
      v46 = type metadata accessor for Composer(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v49 = v25[8];
      v50 = (char *)v21 + v49;
      v51 = (char *)v22 + v49;
      v52 = type metadata accessor for Genre(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_100007E8C(&qword_10119ED08);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      v55 = v25[9];
      v56 = (char *)v21 + v55;
      v57 = (char *)v22 + v55;
      v58 = type metadata accessor for Playlist(0);
      v59 = *(_QWORD *)(v58 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        v60 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      v61 = v25[10];
      v62 = (char *)v21 + v61;
      v63 = (char *)v22 + v61;
      v64 = type metadata accessor for TVShow(0);
      v65 = *(_QWORD *)(v64 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
      {
        v66 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      v67 = v25[11];
      v68 = (char *)v21 + v67;
      v69 = (char *)v22 + v67;
      v70 = type metadata accessor for TVSeason(0);
      v71 = *(_QWORD *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
      {
        v72 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      }
      *((_BYTE *)v21 + v25[12]) = *((_BYTE *)v22 + v25[12]);
      *((_BYTE *)v21 + v25[13]) = *((_BYTE *)v22 + v25[13]);
      *((_BYTE *)v21 + v25[14]) = *((_BYTE *)v22 + v25[14]);
      v73 = v25[15];
      v74 = (_QWORD *)((char *)v21 + v73);
      v75 = (_QWORD *)((char *)v22 + v73);
      v76 = v75[1];
      *v74 = *v75;
      v74[1] = v76;
      *(_QWORD *)((char *)v21 + v25[16]) = *(_QWORD *)((char *)v22 + v25[16]);
      *((_BYTE *)v21 + v25[17]) = *((_BYTE *)v22 + v25[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34 = v21;
      v35 = v78;
      v36 = 1;
    }
    else
    {
      swift_retain();
      v34 = v21;
      v35 = v23;
      v36 = 0;
    }
    swift_storeEnumTagMultiPayload(v34, v35, v36);
  }
  return a1;
}

double sub_1008579B8(uint64_t *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  double result;
  int *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  sub_1000A6174(*a1, a1[1]);
  sub_1000A6174(a1[3], a1[4]);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v7 = (char *)a1 + *(int *)(a2 + 28);
  v8 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if (EnumCaseMultiPayload == 1)
  {
    v11 = (int *)type metadata accessor for Library.Context(0);
    v12 = &v7[v11[5]];
    v13 = type metadata accessor for Album(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    v15 = &v7[v11[6]];
    v16 = type metadata accessor for Artist(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
    v18 = &v7[v11[7]];
    v19 = type metadata accessor for Composer(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
    v21 = &v7[v11[8]];
    v22 = type metadata accessor for Genre(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    v24 = &v7[v11[9]];
    v25 = type metadata accessor for Playlist(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
    v27 = &v7[v11[10]];
    v28 = type metadata accessor for TVShow(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
    v30 = &v7[v11[11]];
    v31 = type metadata accessor for TVSeason(0);
    v32 = *(_QWORD *)(v31 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_100857C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v74;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a2 + 40);
  KeyValueObservationTrigger.keyPath.getter(v9, v10);
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 40) = v11;
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = 1;
  }
  else
  {
    *v13 = *v14;
    swift_retain();
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v17);
  v18 = *(int *)(a3 + 28);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v21);
  *v19 = *v20;
  if (EnumCaseMultiPayload == 1)
  {
    v74 = v21;
    v23 = (int *)type metadata accessor for Library.Context(0);
    v24 = v23[5];
    v25 = (char *)v19 + v24;
    v26 = (char *)v20 + v24;
    v27 = type metadata accessor for Album(0);
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v28 + 48);
    v30 = swift_retain();
    if (v29(v26, 1, v27, v30))
    {
      v31 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v33 = v23[6];
    v34 = (char *)v19 + v33;
    v35 = (char *)v20 + v33;
    v36 = type metadata accessor for Artist(0);
    v37 = *(_QWORD *)(v36 - 8);
    v21 = v74;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    v39 = v23[7];
    v40 = (char *)v19 + v39;
    v41 = (char *)v20 + v39;
    v42 = type metadata accessor for Composer(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    v45 = v23[8];
    v46 = (char *)v19 + v45;
    v47 = (char *)v20 + v45;
    v48 = type metadata accessor for Genre(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = sub_100007E8C(&qword_10119ED08);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    v51 = v23[9];
    v52 = (char *)v19 + v51;
    v53 = (char *)v20 + v51;
    v54 = type metadata accessor for Playlist(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      v56 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    v57 = v23[10];
    v58 = (char *)v19 + v57;
    v59 = (char *)v20 + v57;
    v60 = type metadata accessor for TVShow(0);
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      v62 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    v63 = v23[11];
    v64 = (char *)v19 + v63;
    v65 = (char *)v20 + v63;
    v66 = type metadata accessor for TVSeason(0);
    v67 = *(_QWORD *)(v66 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
    {
      v68 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
    }
    *((_BYTE *)v19 + v23[12]) = *((_BYTE *)v20 + v23[12]);
    *((_BYTE *)v19 + v23[13]) = *((_BYTE *)v20 + v23[13]);
    *((_BYTE *)v19 + v23[14]) = *((_BYTE *)v20 + v23[14]);
    v69 = v23[15];
    v70 = (_QWORD *)((char *)v19 + v69);
    v71 = (_QWORD *)((char *)v20 + v69);
    v72 = v71[1];
    *v70 = *v71;
    v70[1] = v72;
    *(_QWORD *)((char *)v19 + v23[16]) = *(_QWORD *)((char *)v20 + v23[16]);
    *((_BYTE *)v19 + v23[17]) = *((_BYTE *)v20 + v23[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = 1;
  }
  else
  {
    swift_retain();
    v32 = 0;
  }
  swift_storeEnumTagMultiPayload(v19, v21, v32);
  return a1;
}

uint64_t sub_1008581F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v77;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_1000A6174(v9, v10);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_BYTE *)(a2 + 40);
  KeyValueObservationTrigger.keyPath.getter(v11, v12);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 40) = v13;
  sub_1000A6174(v14, v15);
  if (a1 != a2)
  {
    v16 = *(int *)(a3 + 24);
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    sub_10004FF60(a1 + v16, (uint64_t *)&unk_1011C72D0);
    v19 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = 1;
    }
    else
    {
      *v17 = *v18;
      swift_retain();
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v21);
    v22 = *(int *)(a3 + 28);
    v23 = (_QWORD *)(a1 + v22);
    v24 = (_QWORD *)(a2 + v22);
    sub_10004FF60(a1 + v22, &qword_10119F030);
    v25 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v24, v25);
    *v23 = *v24;
    if (EnumCaseMultiPayload == 1)
    {
      v77 = v25;
      v27 = (int *)type metadata accessor for Library.Context(0);
      v28 = v27[5];
      v29 = (char *)v23 + v28;
      v30 = (char *)v24 + v28;
      v31 = type metadata accessor for Album(0);
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v32 + 48);
      v34 = swift_retain();
      if (v33(v30, 1, v31, v34))
      {
        v35 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      v37 = v27[6];
      v38 = (char *)v23 + v37;
      v39 = (char *)v24 + v37;
      v40 = type metadata accessor for Artist(0);
      v41 = *(_QWORD *)(v40 - 8);
      v25 = v77;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v27[7];
      v44 = (char *)v23 + v43;
      v45 = (char *)v24 + v43;
      v46 = type metadata accessor for Composer(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v49 = v27[8];
      v50 = (char *)v23 + v49;
      v51 = (char *)v24 + v49;
      v52 = type metadata accessor for Genre(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_100007E8C(&qword_10119ED08);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      v55 = v27[9];
      v56 = (char *)v23 + v55;
      v57 = (char *)v24 + v55;
      v58 = type metadata accessor for Playlist(0);
      v59 = *(_QWORD *)(v58 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        v60 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      v61 = v27[10];
      v62 = (char *)v23 + v61;
      v63 = (char *)v24 + v61;
      v64 = type metadata accessor for TVShow(0);
      v65 = *(_QWORD *)(v64 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
      {
        v66 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      v67 = v27[11];
      v68 = (char *)v23 + v67;
      v69 = (char *)v24 + v67;
      v70 = type metadata accessor for TVSeason(0);
      v71 = *(_QWORD *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
      {
        v72 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      }
      *((_BYTE *)v23 + v27[12]) = *((_BYTE *)v24 + v27[12]);
      *((_BYTE *)v23 + v27[13]) = *((_BYTE *)v24 + v27[13]);
      *((_BYTE *)v23 + v27[14]) = *((_BYTE *)v24 + v27[14]);
      v73 = v27[15];
      v74 = (_QWORD *)((char *)v23 + v73);
      v75 = (_QWORD *)((char *)v24 + v73);
      *v74 = *v75;
      v74[1] = v75[1];
      *(_QWORD *)((char *)v23 + v27[16]) = *(_QWORD *)((char *)v24 + v27[16]);
      *((_BYTE *)v23 + v27[17]) = *((_BYTE *)v24 + v27[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = 1;
    }
    else
    {
      swift_retain();
      v36 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v25, v36);
  }
  return a1;
}

uint64_t sub_1008587A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 28);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    *v12 = *v13;
    v15 = (int *)type metadata accessor for Library.Context(0);
    v16 = v15[5];
    v17 = (char *)v12 + v16;
    v18 = (char *)v13 + v16;
    v19 = type metadata accessor for Album(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v22 = v15[6];
    v23 = (char *)v12 + v22;
    v24 = (char *)v13 + v22;
    v25 = type metadata accessor for Artist(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v28 = v15[7];
    v29 = (char *)v12 + v28;
    v30 = (char *)v13 + v28;
    v31 = type metadata accessor for Composer(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v34 = v15[8];
    v35 = (char *)v12 + v34;
    v36 = (char *)v13 + v34;
    v37 = type metadata accessor for Genre(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = sub_100007E8C(&qword_10119ED08);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v40 = v15[9];
    v41 = (char *)v12 + v40;
    v42 = (char *)v13 + v40;
    v43 = type metadata accessor for Playlist(0);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    v46 = v15[10];
    v47 = (char *)v12 + v46;
    v48 = (char *)v13 + v46;
    v49 = type metadata accessor for TVShow(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v52 = v15[11];
    v53 = (char *)v12 + v52;
    v54 = (char *)v13 + v52;
    v55 = type metadata accessor for TVSeason(0);
    v56 = *(_QWORD *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      v57 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    *((_BYTE *)v12 + v15[12]) = *((_BYTE *)v13 + v15[12]);
    *((_BYTE *)v12 + v15[13]) = *((_BYTE *)v13 + v15[13]);
    *((_BYTE *)v12 + v15[14]) = *((_BYTE *)v13 + v15[14]);
    *(_OWORD *)((char *)v12 + v15[15]) = *(_OWORD *)((char *)v13 + v15[15]);
    *(_QWORD *)((char *)v12 + v15[16]) = *(_QWORD *)((char *)v13 + v15[16]);
    *((_BYTE *)v12 + v15[17]) = *((_BYTE *)v13 + v15[17]);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100858CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1000A6174(v7, v8);
  v9 = *(_BYTE *)(a2 + 40);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v9;
  sub_1000A6174(v10, v11);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 24);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_10004FF60(a1 + v12, (uint64_t *)&unk_1011C72D0);
    v15 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v17 = *(int *)(a3 + 28);
    v18 = (_QWORD *)(a1 + v17);
    v19 = (_QWORD *)(a2 + v17);
    sub_10004FF60(a1 + v17, &qword_10119F030);
    v20 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      *v18 = *v19;
      v21 = (int *)type metadata accessor for Library.Context(0);
      v22 = v21[5];
      v23 = (char *)v18 + v22;
      v24 = (char *)v19 + v22;
      v25 = type metadata accessor for Album(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v28 = v21[6];
      v29 = (char *)v18 + v28;
      v30 = (char *)v19 + v28;
      v31 = type metadata accessor for Artist(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      v34 = v21[7];
      v35 = (char *)v18 + v34;
      v36 = (char *)v19 + v34;
      v37 = type metadata accessor for Composer(0);
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      {
        v39 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      v40 = v21[8];
      v41 = (char *)v18 + v40;
      v42 = (char *)v19 + v40;
      v43 = type metadata accessor for Genre(0);
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        v45 = sub_100007E8C(&qword_10119ED08);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      v46 = v21[9];
      v47 = (char *)v18 + v46;
      v48 = (char *)v19 + v46;
      v49 = type metadata accessor for Playlist(0);
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        v51 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      }
      v52 = v21[10];
      v53 = (char *)v18 + v52;
      v54 = (char *)v19 + v52;
      v55 = type metadata accessor for TVShow(0);
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      }
      v58 = v21[11];
      v59 = (char *)v18 + v58;
      v60 = (char *)v19 + v58;
      v61 = type metadata accessor for TVSeason(0);
      v62 = *(_QWORD *)(v61 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
      {
        v63 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      }
      *((_BYTE *)v18 + v21[12]) = *((_BYTE *)v19 + v21[12]);
      *((_BYTE *)v18 + v21[13]) = *((_BYTE *)v19 + v21[13]);
      *((_BYTE *)v18 + v21[14]) = *((_BYTE *)v19 + v21[14]);
      *(_OWORD *)((char *)v18 + v21[15]) = *(_OWORD *)((char *)v19 + v21[15]);
      *(_QWORD *)((char *)v18 + v21[16]) = *(_QWORD *)((char *)v19 + v21[16]);
      *((_BYTE *)v18 + v21[17]) = *((_BYTE *)v19 + v21[17]);
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10085924C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100859258);
}

uint64_t sub_100859258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_100007E8C(&qword_10119EE98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1008592F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100859304);
}

uint64_t sub_100859304(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_100007E8C(&qword_10119EE98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t _s9ShowsViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CCAC0, (uint64_t)&_s9ShowsViewVMn);
}

void sub_1008593B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_100ED3188;
  v6[1] = &unk_100ED3188;
  sub_1000A79B0(319, (unint64_t *)&qword_10119F6B8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000A79B0(319, (unint64_t *)&qword_10119F6B0, type metadata accessor for Library.Context);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t sub_100859468(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAEAA4, 1);
}

uint64_t sub_100859478@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char v113;
  _QWORD v114[2];
  char v115;

  v2 = (uint64_t)v1;
  v112 = a1;
  v110 = _s30SubscriptionBasedNoContentViewVMa(0);
  __chkstk_darwin(v110);
  v106 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100007E8C(&qword_1011CCB00);
  __chkstk_darwin(v108);
  v5 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011CCB08);
  v102 = *(_QWORD *)(v6 - 8);
  v103 = v6;
  __chkstk_darwin(v6);
  v101 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100007E8C(&qword_1011CCB10);
  __chkstk_darwin(v109);
  v100 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v104 = (uint64_t)&v99 - v10;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3AE0);
  __chkstk_darwin(v11);
  v105 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3A90);
  __chkstk_darwin(v13);
  v15 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s9ShowsViewVMa(0);
  __chkstk_darwin(v16);
  v107 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v99 - v19;
  v21 = *v1;
  v22 = *(_QWORD *)(v2 + 8);
  v23 = *(unsigned __int8 *)(v2 + 16);
  v24 = sub_100007E8C(&qword_1011CCB18);
  v25 = sub_100049F28(&qword_1011CCB20, &qword_1011CCB18, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v26 = StateObject.wrappedValue.getter(v21, v22, v23, v24, v25);
  LOBYTE(v22) = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v26);
  swift_release();
  sub_10005B704(v2, (uint64_t)v20, _s9ShowsViewVMa);
  v111 = v5;
  if ((v22 & 1) != 0)
  {
    v27 = *((_QWORD *)v20 + 3);
    v28 = *((_QWORD *)v20 + 4);
    v29 = v20[40];
    v30 = sub_100007E8C(&qword_1011CCB28);
    v31 = sub_100049F28(&qword_1011CCB30, &qword_1011CCB28, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
    v32 = StateObject.wrappedValue.getter(v27, v28, v29, v30, v31);
    v33 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v32);
    swift_release();
  }
  else
  {
    v33 = 0;
  }
  v34 = (uint64_t)v107;
  sub_10005B748((uint64_t)v20, _s9ShowsViewVMa);
  StateObject.wrappedValue.getter(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(unsigned __int8 *)(v2 + 16), v24, v25);
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v35);
  swift_release();
  v36 = sub_100007E8C(&qword_1011A3AA0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v15, 1, v36) == 1)
  {
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A3A90);
    sub_10005B704(v2, v34, _s9ShowsViewVMa);
    v38 = v108;
    v39 = v109;
  }
  else
  {
    v40 = MusicLibrarySectionedResponse.totalItemCount.getter(v36);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v36);
    sub_10005B704(v2, v34, _s9ShowsViewVMa);
    v38 = v108;
    v39 = v109;
    if (v40 >= 1)
    {
      v41 = sub_10005B748(v34, _s9ShowsViewVMa);
      if ((v33 & 1) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
  }
  v42 = v33;
  v43 = *(_QWORD *)(v34 + 24);
  v44 = *(_QWORD *)(v34 + 32);
  v45 = *(unsigned __int8 *)(v34 + 40);
  v46 = sub_100007E8C(&qword_1011CCB28);
  v47 = sub_100049F28(&qword_1011CCB30, &qword_1011CCB28, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  StateObject.wrappedValue.getter(v43, v44, v45, v46, v47);
  v48 = (uint64_t)v105;
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v49);
  swift_release();
  v50 = sub_100007E8C(&qword_1011A3AF0);
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v48, 1, v50) != 1)
  {
    v52 = MusicLibrarySectionedResponse.totalItemCount.getter(v50);
    sub_10005B748(v34, _s9ShowsViewVMa);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v48, v50);
    if ((v42 & (v52 > 0)) == 0)
      goto LABEL_13;
LABEL_12:
    __chkstk_darwin(v41);
    *(&v99 - 2) = v2;
    v54 = static Axis.Set.vertical.getter(v53);
    v55 = sub_100007E8C(&qword_1011CCB48);
    v56 = sub_100049F28(&qword_1011CCB50, &qword_1011CCB48, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v57 = v101;
    v58 = ScrollView.init(_:showsIndicators:content:)(v54, 1, sub_10085B960, &v99 - 4, v55, v56);
    v59 = static Edge.Set.horizontal.getter(v58);
    v61 = v102;
    v60 = v103;
    v62 = (uint64_t)v100;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v100, v57, v103);
    v63 = v62 + *(int *)(v39 + 36);
    *(_BYTE *)v63 = v59;
    *(_OWORD *)(v63 + 8) = 0u;
    *(_OWORD *)(v63 + 24) = 0u;
    *(_BYTE *)(v63 + 40) = 1;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v57, v60);
    v64 = v104;
    sub_100065228(v62, v104, &qword_1011CCB10);
    v65 = (uint64_t)v111;
    sub_10004A160(v64, (uint64_t)v111, &qword_1011CCB10);
    swift_storeEnumTagMultiPayload(v65, v38, 0);
    v66 = sub_10085B8DC();
    v67 = sub_100048748(&qword_1011B9928, _s30SubscriptionBasedNoContentViewVMa, (uint64_t)&unk_100EC0CB8);
    _ConditionalContent<>.init(storage:)(v65, v39, v110, v66, v67);
    return sub_10004FF60(v64, &qword_1011CCB10);
  }
  sub_10005B748(v34, _s9ShowsViewVMa);
  sub_10004FF60(v48, (uint64_t *)&unk_1011A3AE0);
LABEL_13:
  v113 = 0;
  static Binding.constant(_:)(v114, &v113, &type metadata for Library.ContentFilterOption);
  v69 = v114[1];
  v109 = v114[0];
  v70 = v115;
  v71 = type metadata accessor for TabSelectionManager(0);
  v72 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v73 = EnvironmentObject.init()(v71, v72);
  v74 = (uint64_t)v106;
  *((_QWORD *)v106 + 3) = v73;
  *(_QWORD *)(v74 + 32) = v75;
  v76 = (int *)v110;
  v77 = (_QWORD *)(v74 + *(int *)(v110 + 24));
  *v77 = swift_getKeyPath(&unk_100ED31F0);
  v78 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v77, v78, 0);
  v79 = v39;
  v80 = v38;
  v81 = (_QWORD *)(v74 + v76[7]);
  ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  v82 = type metadata accessor for ApplicationCapabilities.Controller(0);
  v83 = sub_100048748(&qword_1011B9938, type metadata accessor for ApplicationCapabilities.Controller, (uint64_t)&protocol conformance descriptor for ApplicationCapabilities.Controller);
  swift_retain();
  *v81 = ObservedObject.init(wrappedValue:)(v84, v82, v83);
  v81[1] = v85;
  v86 = (_QWORD *)(v74 + v76[8]);
  CloudLibrary.StatusObserver.shared.unsafeMutableAddressor();
  v87 = type metadata accessor for CloudLibrary.StatusObserver(0);
  v88 = sub_100048748(&qword_1011B9940, type metadata accessor for CloudLibrary.StatusObserver, (uint64_t)&protocol conformance descriptor for CloudLibrary.StatusObserver);
  swift_retain();
  *v86 = ObservedObject.init(wrappedValue:)(v89, v87, v88);
  v86[1] = v90;
  v91 = (_QWORD *)(v74 + v76[9]);
  v92 = sub_100007E8C(&qword_10119CBF8);
  v93 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v91 = EnvironmentObject.init()(v92, v93);
  v91[1] = v94;
  v95 = (_QWORD *)(v74 + v76[10]);
  *v95 = 0x636973756DLL;
  v95[1] = 0xE500000000000000;
  *(_QWORD *)v74 = v109;
  *(_QWORD *)(v74 + 8) = v69;
  *(_BYTE *)(v74 + 16) = v70;
  v96 = (uint64_t)v111;
  sub_10005B704(v74, (uint64_t)v111, _s30SubscriptionBasedNoContentViewVMa);
  swift_storeEnumTagMultiPayload(v96, v80, 1);
  v97 = sub_10085B8DC();
  v98 = sub_100048748(&qword_1011B9928, _s30SubscriptionBasedNoContentViewVMa, (uint64_t)&unk_100EC0CB8);
  _ConditionalContent<>.init(storage:)(v96, v79, v76, v97, v98);
  return sub_10005B748(v74, _s30SubscriptionBasedNoContentViewVMa);
}

uint64_t sub_100859D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t (**v50)(uint64_t);
  _BYTE *v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t (**v82)(uint64_t);
  _BYTE *v83;
  uint64_t v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  double *v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  _BYTE *v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE v118[4];
  int v119;
  _BYTE *v120;
  _BYTE *v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  uint64_t v130;
  _BYTE *v131;
  _BYTE *v132;
  uint64_t v133;
  _BYTE *v134;
  _BYTE *v135;
  uint64_t v136;
  _BYTE *v137;
  _BYTE *v138;
  _BYTE *v139;
  _BYTE *v140;
  uint64_t v141;
  _BYTE *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  _BYTE *v147;
  _BYTE *v148;
  _BYTE *v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  char v153;

  v144 = a2;
  v143 = sub_100007E8C(&qword_1011CCB58);
  __chkstk_darwin(v143);
  v142 = &v118[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v141 = sub_100007E8C(&qword_1011CCB60);
  __chkstk_darwin(v141);
  v139 = &v118[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3AE0);
  __chkstk_darwin(v5);
  v131 = &v118[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v133 = sub_100007E8C(&qword_1011CCB68);
  __chkstk_darwin(v133);
  v132 = &v118[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v134 = &v118[-v9];
  v136 = sub_100007E8C(&qword_1011CCB70);
  __chkstk_darwin(v136);
  v135 = &v118[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_100007E8C(&qword_1011CCB78);
  __chkstk_darwin(v11);
  v137 = &v118[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v138 = &v118[-v14];
  __chkstk_darwin(v15);
  v140 = &v118[-v16];
  v130 = sub_100007E8C(&qword_1011CCB80);
  __chkstk_darwin(v130);
  v129 = &v118[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v128 = sub_100007E8C(&qword_1011CCB88);
  __chkstk_darwin(v128);
  v126 = &v118[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v19);
  v149 = &v118[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v127 = _s9ShowsViewVMa(0);
  v125 = *(_QWORD *)(v127 - 8);
  v124 = *(_QWORD *)(v125 + 64);
  __chkstk_darwin(v127);
  v146 = &v118[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = sub_100007E8C((uint64_t *)&unk_1011A3A90);
  __chkstk_darwin(v22);
  v120 = &v118[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = (int *)sub_100007E8C(&qword_1011CCB90);
  __chkstk_darwin(v24);
  v26 = &v118[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  v121 = &v118[-v28];
  v29 = sub_100007E8C(&qword_1011CCB98);
  __chkstk_darwin(v29);
  v122 = &v118[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v31);
  v147 = &v118[-v32];
  __chkstk_darwin(v33);
  v148 = &v118[-v34];
  v36 = *(_QWORD *)a1;
  v35 = *(_QWORD *)(a1 + 8);
  v37 = *(unsigned __int8 *)(a1 + 16);
  v145 = a1;
  v38 = sub_100007E8C(&qword_1011CCB18);
  v39 = sub_100049F28(&qword_1011CCB20, &qword_1011CCB18, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  StateObject.wrappedValue.getter(v36, v35, v37, v38, v39);
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v40);
  swift_release();
  v41 = StateObject.wrappedValue.getter(v36, v35, v37, v38, v39);
  v119 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v41);
  swift_release();
  v42 = v146;
  sub_10005B704(a1, (uint64_t)v146, _s9ShowsViewVMa);
  v43 = *(unsigned __int8 *)(v125 + 80);
  v124 += (v43 + 16) & ~v43;
  v44 = (v43 + 16) & ~v43;
  v125 = v44;
  v123 = v43 | 7;
  v45 = swift_allocObject(&unk_1010DE8A8, v124, v43 | 7);
  sub_10005B6C0((uint64_t)v42, v45 + v44, _s9ShowsViewVMa);
  v150 = 0;
  static Binding.constant(_:)(&v151, &v150, &type metadata for Library.ContentFilterOption);
  v46 = v151;
  v47 = v152;
  LOBYTE(v36) = v153;
  v48 = &v26[v24[19]];
  *(_QWORD *)v48 = swift_getKeyPath(&unk_100ED3220);
  *((_QWORD *)v48 + 1) = 0;
  *((_QWORD *)v48 + 2) = 0;
  *((_QWORD *)v48 + 3) = 0;
  v48[32] = 0;
  sub_100065228((uint64_t)v120, (uint64_t)v26, (uint64_t *)&unk_1011A3A90);
  v26[v24[13]] = v119 & 1;
  v26[v24[14]] = 1;
  v49 = &v26[v24[15]];
  *(_QWORD *)v49 = v46;
  *((_QWORD *)v49 + 1) = v47;
  v49[16] = v36;
  *(_QWORD *)&v26[v24[16]] = 4;
  *(_QWORD *)&v26[v24[17]] = 0x403E000000000000;
  v50 = (uint64_t (**)(uint64_t))&v26[v24[18]];
  *v50 = sub_10085B96C;
  v50[1] = (uint64_t (*)(uint64_t))v45;
  v51 = v121;
  sub_100065228((uint64_t)v26, (uint64_t)v121, &qword_1011CCB90);
  v52 = v145;
  v127 = v145 + *(int *)(v127 + 28);
  v53 = v149;
  sub_10082460C((uint64_t)v149);
  StateObject.wrappedValue.getter(*(_QWORD *)v52, *(_QWORD *)(v52 + 8), *(unsigned __int8 *)(v52 + 16), v38, v39);
  v54 = v128;
  v55 = (uint64_t)v126;
  v56 = (uint64_t)&v126[*(int *)(v128 + 36)];
  sub_10005B704((uint64_t)v53, v56, type metadata accessor for Library.Context);
  v57 = (_QWORD *)(v56 + *(int *)(sub_100007E8C(&qword_1011CCBA0) + 36));
  swift_retain();
  *v57 = ObservedObject.init(wrappedValue:)(v58, v38, v39);
  v57[1] = v59;
  sub_10004A160((uint64_t)v51, v55, &qword_1011CCB90);
  v60 = v129;
  sub_10004A160(v55, (uint64_t)v129, &qword_1011CCB88);
  swift_storeEnumTagMultiPayload(v60, v130, 0);
  v61 = sub_10085B980();
  v62 = sub_100049F28(&qword_1011CCBB0, &qword_1011CCB90, (uint64_t)&unk_100EC0C68);
  v63 = (uint64_t)v122;
  _ConditionalContent<>.init(storage:)(v60, v54, v24, v61, v62);
  sub_10004FF60(v55, &qword_1011CCB88);
  v64 = v147;
  sub_100065228(v63, (uint64_t)v147, &qword_1011CCB98);
  swift_release();
  sub_10005B748((uint64_t)v149, type metadata accessor for Library.Context);
  sub_10004FF60((uint64_t)v51, &qword_1011CCB90);
  sub_100065228((uint64_t)v64, (uint64_t)v148, &qword_1011CCB98);
  v65 = v145;
  v66 = *(_QWORD *)(v145 + 24);
  v67 = *(_QWORD *)(v145 + 32);
  v68 = *(unsigned __int8 *)(v145 + 40);
  v69 = sub_100007E8C(&qword_1011CCB28);
  v70 = (_BYTE *)sub_100049F28(&qword_1011CCB30, &qword_1011CCB28, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v130 = v69;
  v129 = v70;
  StateObject.wrappedValue.getter(v66, v67, v68, v69, v70);
  v71 = (uint64_t)v131;
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v72);
  swift_release();
  v73 = StateObject.wrappedValue.getter(v66, v67, v68, v69, v70);
  LOBYTE(v66) = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v73);
  swift_release();
  v74 = v146;
  sub_10005B704(v65, (uint64_t)v146, _s9ShowsViewVMa);
  v75 = swift_allocObject(&unk_1010DE8D0, v124, v123);
  sub_10005B6C0((uint64_t)v74, v75 + v125, _s9ShowsViewVMa);
  v150 = 0;
  static Binding.constant(_:)(&v151, &v150, &type metadata for Library.ContentFilterOption);
  v76 = v151;
  v77 = v152;
  LOBYTE(v54) = v153;
  v78 = (int *)v133;
  v79 = (uint64_t)v132;
  v80 = &v132[*(int *)(v133 + 76)];
  *(_QWORD *)v80 = swift_getKeyPath(&unk_100ED3220);
  *((_QWORD *)v80 + 1) = 0;
  *((_QWORD *)v80 + 2) = 0;
  *((_QWORD *)v80 + 3) = 0;
  v80[32] = 0;
  sub_100065228(v71, v79, (uint64_t *)&unk_1011A3AE0);
  *(_BYTE *)(v79 + v78[13]) = v66 & 1;
  *(_BYTE *)(v79 + v78[14]) = 1;
  v81 = v79 + v78[15];
  *(_QWORD *)v81 = v76;
  *(_QWORD *)(v81 + 8) = v77;
  *(_BYTE *)(v81 + 16) = v54;
  *(_QWORD *)(v79 + v78[16]) = 4;
  *(_QWORD *)(v79 + v78[17]) = 0x403E000000000000;
  v82 = (uint64_t (**)(uint64_t))(v79 + v78[18]);
  *v82 = sub_10085BD0C;
  v82[1] = (uint64_t (*)(uint64_t))v75;
  v83 = v134;
  v84 = sub_100065228(v79, (uint64_t)v134, &qword_1011CCB68);
  LOBYTE(v75) = static Edge.Set.top.getter(v84);
  v85 = EdgeInsets.init(_all:)(25.0);
  v87 = v86;
  v89 = v88;
  v91 = v90;
  v92 = v135;
  sub_10004A160((uint64_t)v83, (uint64_t)v135, &qword_1011CCB68);
  v93 = v136;
  v94 = (double *)&v92[*(int *)(v136 + 36)];
  *(_BYTE *)v94 = v75;
  v94[1] = v85;
  *((_QWORD *)v94 + 2) = v87;
  *((_QWORD *)v94 + 3) = v89;
  *((_QWORD *)v94 + 4) = v91;
  *((_BYTE *)v94 + 40) = 0;
  sub_10004FF60((uint64_t)v83, &qword_1011CCB68);
  v95 = v149;
  sub_10082460C((uint64_t)v149);
  v96 = *(_QWORD *)(v65 + 24);
  v97 = *(_QWORD *)(v65 + 32);
  v98 = *(unsigned __int8 *)(v65 + 40);
  v99 = v130;
  v100 = v129;
  StateObject.wrappedValue.getter(v96, v97, v98, v130, v129);
  v101 = v141;
  v102 = (uint64_t)v139;
  v103 = (uint64_t)&v139[*(int *)(v141 + 36)];
  sub_10005B704((uint64_t)v95, v103, type metadata accessor for Library.Context);
  v104 = (_QWORD *)(v103 + *(int *)(sub_100007E8C(&qword_1011CCBC0) + 36));
  swift_retain();
  *v104 = ObservedObject.init(wrappedValue:)(v105, v99, v100);
  v104[1] = v106;
  sub_10004A160((uint64_t)v92, v102, &qword_1011CCB70);
  v107 = v142;
  sub_10004A160(v102, (uint64_t)v142, &qword_1011CCB60);
  swift_storeEnumTagMultiPayload(v107, v143, 0);
  v108 = sub_10085BD18();
  v109 = sub_10085BD9C();
  v110 = (uint64_t)v137;
  _ConditionalContent<>.init(storage:)(v107, v101, v93, v108, v109);
  sub_10004FF60(v102, &qword_1011CCB60);
  v111 = v138;
  sub_100065228(v110, (uint64_t)v138, &qword_1011CCB78);
  swift_release();
  sub_10005B748((uint64_t)v149, type metadata accessor for Library.Context);
  sub_10004FF60((uint64_t)v92, &qword_1011CCB70);
  v112 = v140;
  sub_100065228((uint64_t)v111, (uint64_t)v140, &qword_1011CCB78);
  v113 = v147;
  v114 = v148;
  sub_10004A160((uint64_t)v148, (uint64_t)v147, &qword_1011CCB98);
  sub_10004A160((uint64_t)v112, (uint64_t)v111, &qword_1011CCB78);
  v115 = v144;
  sub_10004A160((uint64_t)v113, v144, &qword_1011CCB98);
  v116 = sub_100007E8C(&qword_1011CCBE8);
  sub_10004A160((uint64_t)v111, v115 + *(int *)(v116 + 48), &qword_1011CCB78);
  sub_10004FF60((uint64_t)v112, &qword_1011CCB78);
  sub_10004FF60((uint64_t)v114, &qword_1011CCB98);
  sub_10004FF60((uint64_t)v111, &qword_1011CCB78);
  return sub_10004FF60((uint64_t)v113, &qword_1011CCB98);
}

uint64_t sub_10085A928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = String.LocalizationValue.init(stringLiteral:)(0x73776F6853205654, 0xE800000000000000);
  static Locale.current.getter(v10);
  v19[0] = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, "Section title for TV Shows", 26, 2);
  v19[1] = v11;
  v17 = a1;
  v18 = a2;
  v12 = sub_100007E8C(&qword_1011CCC18);
  v13 = sub_1000A8D68();
  v14 = sub_10085D234();
  return Section<>.init(header:content:)(v19, sub_10085D22C, v16, &_s6HeaderVN, v12, v13, v14);
}

uint64_t sub_10085AA68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = _s9ShowsViewVMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100007E8C(&qword_10119FD50);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011AE0A0);
  MusicLibrarySection.items.getter(v9, v10);
  sub_10005B704(a2, (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s9ShowsViewVMa);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010DE920, v12 + v5, v11 | 7);
  sub_10005B6C0((uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, _s9ShowsViewVMa);
  v14 = _s9ShowsViewV10TVShowCellVMa(0);
  v15 = sub_100049F28(&qword_1011CCC30, &qword_10119FD50, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v16 = sub_100048748(&qword_1011CCC28, _s9ShowsViewV10TVShowCellVMa, (uint64_t)&unk_100ED3320);
  v17 = sub_100048748(&qword_1011CCC38, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  return ForEach<>.init(_:content:)(v8, sub_10085D2C8, v13, v6, &type metadata for MusicItemID, v14, v15, v16, v17);
}

uint64_t sub_10085AC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t KeyPath;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;

  v4 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for TVShow(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  _s9ShowsViewVMa(0);
  sub_10082460C((uint64_t)v6);
  v12 = *v6;
  swift_retain();
  sub_10005B748((uint64_t)v6, type metadata accessor for Library.Context);
  KeyPath = swift_getKeyPath(&unk_100ED31F0);
  v14 = (int *)_s9ShowsViewV10TVShowCellVMa(0);
  v15 = (uint64_t *)(a2 + v14[6]);
  *v15 = KeyPath;
  v16 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v11, v7);
  *(_QWORD *)(a2 + v14[5]) = v12;
  v17 = a2 + v14[7];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_100ED3248);
  *(_BYTE *)(v17 + 8) = 0;
  v18 = (_QWORD *)(a2 + v14[8]);
  v19 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v20 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v18 = EnvironmentObject.init()(v19, v20);
  v18[1] = v21;
  v22 = (_QWORD *)(a2 + v14[9]);
  v23 = type metadata accessor for NoticePresenter(0);
  v24 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v22 = EnvironmentObject.init()(v23, v24);
  v22[1] = v25;
  v26 = a2 + v14[10];
  *(_QWORD *)v26 = sub_1000DEC04;
  *(_QWORD *)(v26 + 8) = 0;
  *(_BYTE *)(v26 + 16) = 0;
  v27 = (_QWORD *)(a2 + v14[11]);
  v28 = type metadata accessor for NavigationPusher();
  v29 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v27 = EnvironmentObject.init()(v28, v29);
  v27[1] = v30;
  v31 = (_QWORD *)(a2 + v14[12]);
  v32 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v33 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v31 = EnvironmentObject.init()(v32, v33);
  v31[1] = v34;
  v35 = (_QWORD *)(a2 + v14[13]);
  v36 = type metadata accessor for TabSelectionManager(0);
  v37 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v35 = EnvironmentObject.init()(v36, v37);
  v35[1] = v38;
  v39 = a2 + v14[14];
  *(_QWORD *)v39 = swift_getKeyPath(&unk_100ED3270);
  *(_QWORD *)(v39 + 8) = 0;
  *(_BYTE *)(v39 + 16) = 0;
  v40 = a2 + v14[15];
  result = swift_getKeyPath(&unk_100ED3298);
  *(_QWORD *)v40 = result;
  *(_QWORD *)(v40 + 8) = 0;
  *(_BYTE *)(v40 + 16) = 0;
  return result;
}

uint64_t sub_10085AF30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = String.LocalizationValue.init(stringLiteral:)(0x736569766F4DLL, 0xE600000000000000);
  static Locale.current.getter(v10);
  v19[0] = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, "Section title for Music Movies", 30, 2);
  v19[1] = v11;
  v17 = a1;
  v18 = a2;
  v12 = sub_100007E8C(&qword_1011CCBF0);
  v13 = sub_1000A8D68();
  v14 = sub_10085BE28();
  return Section<>.init(header:content:)(v19, sub_10085BE20, v16, &_s6HeaderVN, v12, v13, v14);
}

uint64_t sub_10085B06C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = _s9ShowsViewVMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100007E8C((uint64_t *)&unk_1011CEA10);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011AE0B0);
  MusicLibrarySection.items.getter(v9, v10);
  sub_10005B704(a2, (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s9ShowsViewVMa);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010DE8F8, v12 + v5, v11 | 7);
  sub_10005B6C0((uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, _s9ShowsViewVMa);
  v14 = sub_100007E8C(&qword_1011B4D30);
  v15 = sub_100049F28(&qword_1011CCC10, (uint64_t *)&unk_1011CEA10, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v16 = sub_10085BE8C();
  v17 = sub_100048748(&qword_1011A0DD8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  return ForEach<>.init(_:content:)(v8, sub_10085BF2C, v13, v6, &type metadata for MusicItemID, v14, v15, v16, v17);
}

uint64_t sub_10085B210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[2];

  v78 = a2;
  v84 = a3;
  v85 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v82 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100007E8C(&qword_1011A7880);
  __chkstk_darwin(v81);
  v80 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v77);
  v75 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100007E8C(&qword_10119D2D0);
  v79 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (int *)_s5VideoO4CellVMa(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)_s5VideoO5ModelVMa(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v70 - v19;
  v71 = type metadata accessor for MusicMovie(0);
  v72 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v20, a1, v71);
  v21 = enum case for GenericMusicItem.musicMovie(_:);
  v22 = type metadata accessor for GenericMusicItem(0);
  v73 = *(_QWORD *)(v22 - 8);
  v74 = v22;
  v23.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v73 + 104))(v20, v21, v22);
  v24 = MusicMovie.title.getter(v23);
  v26 = v25;
  v27 = &v20[v15[7]];
  v28 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 5, 10, v28);
  v29 = (uint64_t *)&v20[v15[5]];
  *v29 = v24;
  v29[1] = v26;
  v30 = &v20[v15[6]];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  *(_QWORD *)&v20[v15[8]] = 0x3FE5555555555555;
  sub_10005B704((uint64_t)v20, (uint64_t)v17, _s5VideoO5ModelVMa);
  *v11 = swift_getKeyPath(&unk_100ED31F0);
  v31 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v11, v31, 0);
  sub_10005B6C0((uint64_t)v17, (uint64_t)v14, _s5VideoO5ModelVMa);
  v32 = &v14[v12[5]];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100ED3248);
  v32[8] = 0;
  sub_100065228((uint64_t)v11, (uint64_t)&v14[v12[6]], &qword_10119EE98);
  v33 = &v14[v12[7]];
  v34 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v35 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v33 = EnvironmentObject.init()(v34, v35);
  *((_QWORD *)v33 + 1) = v36;
  v37 = &v14[v12[8]];
  v38 = type metadata accessor for NoticePresenter(0);
  v39 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *(_QWORD *)v37 = EnvironmentObject.init()(v38, v39);
  *((_QWORD *)v37 + 1) = v40;
  v41 = &v14[v12[9]];
  *(_QWORD *)v41 = sub_1008419B0;
  *((_QWORD *)v41 + 1) = 0;
  v41[16] = 0;
  v42 = &v14[v12[10]];
  v43 = type metadata accessor for NavigationPusher();
  v44 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *(_QWORD *)v42 = EnvironmentObject.init()(v43, v44);
  *((_QWORD *)v42 + 1) = v45;
  v46 = &v14[v12[11]];
  v47 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v48 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v46 = EnvironmentObject.init()(v47, v48);
  *((_QWORD *)v46 + 1) = v49;
  v50 = &v14[v12[12]];
  v51 = type metadata accessor for TabSelectionManager(0);
  v52 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v50 = EnvironmentObject.init()(v51, v52);
  *((_QWORD *)v50 + 1) = v53;
  v54 = &v14[v12[13]];
  *(_QWORD *)v54 = swift_getKeyPath(&unk_100ED3270);
  *((_QWORD *)v54 + 1) = 0;
  v54[16] = 0;
  v55 = &v14[v12[14]];
  *(_QWORD *)v55 = swift_getKeyPath(&unk_100ED3298);
  *((_QWORD *)v55 + 1) = 0;
  v55[16] = 0;
  _s9ShowsViewVMa(0);
  v56 = v75;
  sub_10082460C(v75);
  v57 = type metadata accessor for TitledSection(0);
  v58 = sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  MusicLibrarySectionedRequest.init()(v57, v71, &protocol witness table for TitledSection, v58);
  swift_retain();
  v59 = v76;
  MusicLibrarySectionedRequest.library.setter(v60, v76);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*(unsigned __int8 *)(v56 + *(int *)(v77 + 48)), v59);
  KeyPath = swift_getKeyPath(&unk_100ED32C0);
  v86[0] = MusicMovie.id.getter(KeyPath);
  v86[1] = v62;
  MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(KeyPath, v86, v59, &protocol witness table for MusicItemID);
  swift_bridgeObjectRelease();
  swift_release();
  sub_10005B748(v56, type metadata accessor for Library.Context);
  v64 = v79;
  v63 = (uint64_t)v80;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v80, v8, v59);
  v65 = v81;
  v66 = v63 + *(int *)(v81 + 36);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v66, 1, 1, v74);
  v67 = sub_100007E8C(&qword_10119F7C8);
  swift_storeEnumTagMultiPayload(v66, v67, 0);
  *(_BYTE *)(v63 + *(int *)(v65 + 40)) = 2;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v8, v59);
  v68 = v82;
  sub_100824838(v82);
  sub_10045B648(v63, v68, 0, 0, v84);
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v68, v85);
  sub_10004FF60(v63, &qword_1011A7880);
  sub_10005B748((uint64_t)v14, _s5VideoO4CellVMa);
  return sub_10005B748((uint64_t)v20, _s5VideoO5ModelVMa);
}

unint64_t sub_10085B8DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CCB38;
  if (!qword_1011CCB38)
  {
    v1 = sub_100044B54(&qword_1011CCB10);
    sub_100049F28(&qword_1011CCB40, &qword_1011CCB08, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CCB38);
  }
  return result;
}

uint64_t sub_10085B960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100859D10(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10085B96C(uint64_t a1)
{
  return sub_10085D2D4(a1, sub_10085A928);
}

unint64_t sub_10085B980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CCBA8;
  if (!qword_1011CCBA8)
  {
    v1 = sub_100044B54(&qword_1011CCB88);
    sub_100049F28(&qword_1011CCBB0, &qword_1011CCB90, (uint64_t)&unk_100EC0C68);
    sub_100049F28(&qword_1011CCBB8, &qword_1011CCBA0, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CCBA8);
  }
  return result;
}

uint64_t sub_10085BA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = _s9ShowsViewVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  sub_1000A6174(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8));
  sub_1000A6174(*(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32));
  v6 = v0 + v3 + *(int *)(v1 + 24);
  v7 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v5 + *(int *)(v1 + 28);
  v10 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v12 = (int *)type metadata accessor for Library.Context(0);
    v13 = v9 + v12[5];
    v14 = type metadata accessor for Album(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    v16 = v9 + v12[6];
    v17 = type metadata accessor for Artist(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    v19 = v9 + v12[7];
    v20 = type metadata accessor for Composer(0);
    v21 = *(_QWORD *)(v20 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    v22 = v9 + v12[8];
    v23 = type metadata accessor for Genre(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    v25 = v9 + v12[9];
    v26 = type metadata accessor for Playlist(0);
    v27 = *(_QWORD *)(v26 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    v28 = v9 + v12[10];
    v29 = type metadata accessor for TVShow(0);
    v30 = *(_QWORD *)(v29 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    v31 = v9 + v12[11];
    v32 = type metadata accessor for TVSeason(0);
    v33 = *(_QWORD *)(v32 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_10085BD0C(uint64_t a1)
{
  return sub_10085D2D4(a1, sub_10085AF30);
}

unint64_t sub_10085BD18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CCBC8;
  if (!qword_1011CCBC8)
  {
    v1 = sub_100044B54(&qword_1011CCB60);
    sub_10085BD9C();
    sub_100049F28(&qword_1011CCBE0, &qword_1011CCBC0, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CCBC8);
  }
  return result;
}

unint64_t sub_10085BD9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CCBD0;
  if (!qword_1011CCBD0)
  {
    v1 = sub_100044B54(&qword_1011CCB70);
    sub_100049F28(&qword_1011CCBD8, &qword_1011CCB68, (uint64_t)&unk_100EC0C68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CCBD0);
  }
  return result;
}

uint64_t sub_10085BE20()
{
  uint64_t v0;

  return sub_10085B06C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_10085BE28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CCBF8;
  if (!qword_1011CCBF8)
  {
    v1 = sub_100044B54(&qword_1011CCBF0);
    sub_10085BE8C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CCBF8);
  }
  return result;
}

unint64_t sub_10085BE8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CCC00;
  if (!qword_1011CCC00)
  {
    v1 = sub_100044B54(&qword_1011B4D30);
    sub_100048748(&qword_10119F788, _s5VideoO4CellVMa, (uint64_t)&unk_100ED6F8C);
    sub_100049F28(&qword_1011CCC08, &qword_1011B4D28, (uint64_t)&protocol conformance descriptor for PlaybackSelection<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CCC00);
  }
  return result;
}

uint64_t sub_10085BF2C(uint64_t a1)
{
  return sub_10085D2D4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10085B210);
}

uint64_t sub_10085BF40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38[16];
  uint64_t v39;
  uint64_t v40;
  ValueMetadata *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;

  v37 = a1;
  v2 = type metadata accessor for PlainButtonStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  v36 = v3;
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A3CF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011CCD08);
  v10 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  v34 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(int *)(sub_100007E8C(&qword_10119ED38) + 48);
  v14 = type metadata accessor for TVShow(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v1, v14);
  v15 = _s14TVEpisodesViewV10DataSourceOMa(0);
  swift_storeEnumTagMultiPayload(v8, v15, 0);
  *(_OWORD *)&v8[v13] = xmmword_100EAE4D0;
  v16 = type metadata accessor for NavigationDestinationItem(0);
  swift_storeEnumTagMultiPayload(v8, v16, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  v39 = v1;
  v32 = sub_100007E8C(&qword_1011C3318);
  v17 = sub_100044B54(&qword_1011C33F8);
  v18 = sub_100044B54(&qword_1011C3400);
  v19 = type metadata accessor for ContextualPreview(255);
  v20 = sub_100049F28(&qword_1011C3408, &qword_1011C3400, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v21 = sub_1000E3EE4();
  v22 = sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
  v40 = v18;
  v41 = &type metadata for ActionType;
  v42 = v19;
  v43 = v20;
  v44 = v21;
  v45 = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  v40 = v17;
  v41 = (ValueMetadata *)OpaqueTypeConformance2;
  v24 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
  v25 = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
  v26 = NavigationLink<>.init<A>(value:label:)(v8, sub_10085F7D4, v38, v32, v16, v24, v25);
  PlainButtonStyle.init()(v26);
  v27 = sub_100049F28(&qword_1011CCD10, &qword_1011CCD08, (uint64_t)&protocol conformance descriptor for NavigationLink<A, B>);
  v28 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v29 = v33;
  v30 = v35;
  View.buttonStyle<A>(_:)(v5, v33, v35, v27, v28);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v12, v29);
}

uint64_t sub_10085C260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  void *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t OpaqueTypeConformance2;
  char *v84;
  uint64_t v85;
  __n128 v86;
  uint64_t result;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  unint64_t *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  _QWORD v105[4];
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE v126[32];
  uint64_t v127;
  _QWORD v128[5];
  _QWORD v129[5];
  __int128 v130;
  __int128 v131;
  __int128 v132;
  uint64_t v133;
  __int128 v134;
  _QWORD v135[5];
  _QWORD v136[5];
  uint64_t v137[11];

  v124 = a2;
  v3 = (int *)_s9ShowsViewV10TVShowCellVMa(0);
  __chkstk_darwin(v3);
  v111 = (uint64_t)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for TVShow(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100007E8C(&qword_1011C3400);
  __chkstk_darwin(v119);
  v16 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011C33F8);
  v122 = *(_QWORD *)(v17 - 8);
  v123 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_100007E8C(&qword_1011C3318);
  v118 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v117 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v16 = static HorizontalAlignment.center.getter(v21);
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v22 = *(int *)(sub_100007E8C(&qword_1011CCD18) + 44);
  v116 = v16;
  sub_10085CC68(&v16[v22]);
  v112 = v14;
  v113 = v12;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v114 = v11;
  v23(v14, a1, v11);
  v24 = a1 + v3[7];
  v25 = *(id *)v24;
  LOBYTE(v11) = *(_BYTE *)(v24 + 8);
  sub_1000A4100(*(id *)v24, v11);
  v26 = sub_100824044(v25, v11);
  sub_1000A4224(v25, v11);
  sub_10082460C((uint64_t)v10);
  v27 = *v10;
  swift_retain();
  sub_10005B748((uint64_t)v10, type metadata accessor for Library.Context);
  v28 = type metadata accessor for PlaylistContext(0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v115 = v7;
  v29(v7, 1, 1, v28);
  v30 = (uint64_t *)(a1 + v3[8]);
  v31 = *v30;
  if (*v30)
  {
    v106 = v27;
    v107 = v26;
    v121 = v19;
    v136[3] = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v136[4] = &protocol witness table for <A> PresentedViewState<A>;
    v136[0] = v31;
    v32 = (uint64_t *)(a1 + v3[9]);
    v33 = *v32;
    if (*v32)
    {
      v135[3] = type metadata accessor for NoticePresenter(0);
      v135[4] = &protocol witness table for NoticePresenter;
      v135[0] = v33;
      v133 = 0;
      v131 = 0u;
      v132 = 0u;
      v130 = 0u;
      v134 = xmmword_100EA93A0;
      v34 = (uint64_t *)(a1 + v3[10]);
      v125 = a1;
      v35 = *v34;
      v36 = v34[1];
      v37 = *((unsigned __int8 *)v34 + 16);
      swift_retain();
      swift_retain();
      v38 = sub_100007E8C(&qword_1011A03A8);
      v39 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v40 = v35;
      v41 = v125;
      v42 = StateObject.wrappedValue.getter(v40, v36, v37, v38, v39);
      v129[3] = v38;
      v129[4] = &protocol witness table for <A> PresentedViewState<A>;
      v129[0] = v42;
      v43 = (uint64_t *)(v41 + v3[11]);
      v44 = *v43;
      if (*v43)
      {
        v45 = type metadata accessor for NavigationPusher();
        v128[3] = v45;
        v128[4] = &off_1010D58B0;
        v128[0] = v44;
        v127 = 0;
        memset(v126, 0, sizeof(v126));
        v46 = (_QWORD *)(v41 + v3[12]);
        if (*v46)
        {
          v108 = v39;
          v109 = v38;
          v110 = v34;
          v47 = (_QWORD *)(v41 + v3[13]);
          if (*v47)
          {
            __chkstk_darwin(v45);
            v48 = sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100ED3370);
            __chkstk_darwin(KeyPath);
            v105[2] = &type metadata for TabIdentifier;
            v105[3] = v48;
            v50 = swift_getKeyPath(&unk_100ED33A8);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(v137, v51, KeyPath, v50);
            swift_release();
            swift_release();
            swift_release();
            v52 = v137[0];
            v53 = v125;
            v54 = v125 + v3[14];
            v55 = *(_QWORD *)v54;
            v56 = *(_QWORD *)(v54 + 8);
            LOBYTE(v50) = *(_BYTE *)(v54 + 16);
            sub_1000A410C(*(_QWORD *)v54, v56, v50);
            sub_100824224(v55, v56, v50);
            sub_1000A4230(v55, v56, v50);
            sub_10066D160(v52);
            v58 = v57;
            v60 = v59;
            swift_release();
            swift_bridgeObjectRelease();
            v61 = v53 + v3[15];
            v62 = *(_QWORD *)v61;
            v63 = *(_QWORD *)(v61 + 8);
            LOBYTE(v50) = *(_BYTE *)(v61 + 16);
            sub_1000A411C(*(_QWORD *)v61, v63, v50);
            sub_100824400(v62, v63, v50, v137);
            sub_1000A4240(v62, v63, v50);
            v65 = v137[0];
            v64 = v137[1];
            v66 = v111;
            sub_10005B704(v53, v111, _s9ShowsViewV10TVShowCellVMa);
            if (v64 >> 60 != 15)
            {
              v68 = v107;
              goto LABEL_10;
            }
            v67 = (_QWORD *)(v66 + v3[12]);
            v68 = v107;
            if (*v67)
            {
              swift_retain();
              v65 = sub_10066D7A8();
              v64 = v69;
              swift_release();
LABEL_10:
              sub_10005B748(v66, _s9ShowsViewV10TVShowCellVMa);
              v70 = sub_100048748((unint64_t *)&unk_1011CEA20, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
              v71 = v114;
              *((_QWORD *)&v104 + 1) = v60;
              *((_QWORD *)&v103 + 1) = v126;
              *(_QWORD *)&v104 = v58;
              *(_QWORD *)&v103 = v128;
              v72 = (uint64_t)v115;
              v73 = v112;
              MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(0, v68, v106, (uint64_t)v136, (uint64_t)v135, (uint64_t)&v130, (unint64_t)v129, (uint64_t)v137, v103, v104, v65, v64, v114, v70);
              sub_1000822B4(v65, v64);

              swift_release();
              swift_bridgeObjectRelease();
              sub_10004FF60((uint64_t)v126, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v130, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v72, (uint64_t *)&unk_1011A20C0);
              (*(void (**)(char *, uint64_t))(v113 + 8))(v73, v71);
              sub_10004FF60((uint64_t)v128, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v129);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v135);
              v74 = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v136);
              __chkstk_darwin(v74);
              v75 = (_QWORD *)type metadata accessor for ContextualPreview(0);
              v76 = sub_100049F28(&qword_1011C3408, &qword_1011C3400, (uint64_t)&protocol conformance descriptor for VStack<A>);
              v77 = sub_1000E3EE4();
              v78 = (_QWORD *)sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
              v79 = v119;
              v80 = (uint64_t)v121;
              v81 = (uint64_t)v116;
              View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)v137, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_10085F7FC, (uint64_t)v105, (uint64_t)UIScreen.Dimensions.size.getter, 0, (uint64_t)v121, v119, (uint64_t)&type metadata for ActionType, v75, v76, v77, v78);
              sub_1000E411C((uint64_t)v137);
              sub_10004FF60(v81, &qword_1011C3400);
              v82 = StateObject.wrappedValue.getter(*v110, v110[1], *((unsigned __int8 *)v110 + 16), v109, v108);
              *(_QWORD *)&v130 = v79;
              *((_QWORD *)&v130 + 1) = &type metadata for ActionType;
              *(_QWORD *)&v131 = v75;
              *((_QWORD *)&v131 + 1) = v76;
              *(_QWORD *)&v132 = v77;
              *((_QWORD *)&v132 + 1) = v78;
              OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v130, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
              v84 = v117;
              v85 = v123;
              View.shareSheetPresenting(_:)(v82, v123, OpaqueTypeConformance2);
              v86 = swift_release();
              (*(void (**)(uint64_t, uint64_t, __n128))(v122 + 8))(v80, v85, v86);
              return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v118 + 32))(v124, v84, v120);
            }
          }
          else
          {
            v99 = v47[1];
            v100 = type metadata accessor for TabSelectionManager(0);
            v101 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain();
            swift_retain();
            EnvironmentObject.error()(0, v99, v100, v101);
            __break(1u);
          }
          v88 = v67[1];
          goto LABEL_17;
        }
LABEL_14:
        v88 = v46[1];
        swift_retain();
LABEL_17:
        v89 = (uint64_t *)&unk_10119CBE0;
        v90 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v91 = &qword_1011C5B90;
        v92 = &unk_100EC0A50;
        goto LABEL_18;
      }
    }
    else
    {
      v93 = v32[1];
      v94 = type metadata accessor for NoticePresenter(0);
      v95 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain();
      EnvironmentObject.error()(0, v93, v94, v95);
      __break(1u);
    }
    v96 = v43[1];
    v97 = type metadata accessor for NavigationPusher();
    v98 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v96, v97, v98);
    __break(1u);
    goto LABEL_14;
  }
  v88 = v30[1];
  v89 = (uint64_t *)&unk_1011B4E40;
  v90 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v91 = (unint64_t *)&unk_10119CC10;
  v92 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_18:
  v102 = sub_100049F28(v91, v89, (uint64_t)v92);
  result = EnvironmentObject.error()(0, v88, v90, v102);
  __break(1u);
  return result;
}

uint64_t sub_10085CC68@<X0>(char *a1@<X8>)
{
  int *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  char *v41;

  v41 = a1;
  v1 = (int *)type metadata accessor for VerticalLockupGridCell(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011CCD20);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - v9;
  v11 = type metadata accessor for TVShow(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v11, (uint64_t)&protocol witness table for TVShow, v3);
  v12 = &v3[v1[5]];
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 5, 10, v13);
  v15 = TVShow.name.getter(v14);
  v17 = v16;
  v18 = (uint64_t *)&v3[v1[12]];
  *v18 = sub_10085CFC0();
  v18[1] = v19;
  v20 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  swift_storeEnumTagMultiPayload(v18, v20, 0);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v18, 0, 1, v20);
  v21 = &v3[v1[14]];
  v22 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(_QWORD *)&v3[v1[6]] = 0x3FF0000000000000;
  v23 = &v3[v1[7]];
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  v24 = &v3[v1[8]];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = -1;
  v25 = (uint64_t *)&v3[v1[9]];
  *v25 = v15;
  v25[1] = v17;
  v3[v1[10]] = 2;
  v3[v1[11]] = 2;
  v26 = &v3[v1[13]];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  *(_QWORD *)&v3[v1[15]] = 0;
  v27 = &v3[v1[16]];
  *(_QWORD *)v27 = swift_getKeyPath(&unk_100ED33C8);
  v28 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v27, v28, 0);
  v29 = &v3[v1[17]];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_100ED33F8);
  *((_QWORD *)v29 + 1) = 0;
  *((_QWORD *)v29 + 2) = 0;
  *((_QWORD *)v29 + 3) = 0;
  v29[32] = 0;
  v30 = Corner.large.unsafeMutableAddressor();
  v31 = *v30;
  v32 = v30[1];
  LOBYTE(v15) = *((_BYTE *)v30 + 16);
  v33 = *HI.HoverOutset.grid.unsafeMutableAddressor();
  v34 = sub_100048748(&qword_1011CCD28, type metadata accessor for VerticalLockupGridCell, (uint64_t)&unk_100EAEC8C);
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v31, v32, v15, 1u, 0, 1, 1, (uint64_t)v1, *(double *)&v33, v34);
  sub_10005B748((uint64_t)v3, type metadata accessor for VerticalLockupGridCell);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
  v35 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v35(v7, v10, v4);
  v36 = v41;
  v35(v41, v7, v4);
  v37 = &v36[*(int *)(sub_100007E8C(&qword_1011CCD30) + 48)];
  *(_QWORD *)v37 = 0;
  v37[8] = 1;
  v38 = *(void (**)(char *, uint64_t))(v5 + 8);
  v38(v10, v4);
  return ((uint64_t (*)(char *, uint64_t))v38)(v7, v4);
}

uint64_t sub_10085CFC0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v15[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = String.LocalizationValue.init(stringLiteral:)(0x6F73697045206425, 0xED00002973286564);
  static Locale.current.getter(v6);
  v7 = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, "Numbers of episodes", 19, 2);
  v9 = v8;
  v10 = sub_100007E8C(&qword_1011E7E30);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA7AA0;
  v12 = TVShow.episodeCount.getter();
  *(_QWORD *)(v11 + 56) = &type metadata for Int;
  *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 32) = v12;
  v13 = static String.localizedStringWithFormat(_:_:)(v7, v9, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10085D128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVShow(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  sub_1001D1AD4(v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return sub_10005B6C0((uint64_t)v6, a2, type metadata accessor for ContextualPreview.Data);
}

uint64_t sub_10085D22C()
{
  uint64_t v0;

  return sub_10085AA68(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_10085D234()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CCC20;
  if (!qword_1011CCC20)
  {
    v1 = sub_100044B54(&qword_1011CCC18);
    sub_100048748(&qword_1011CCC28, _s9ShowsViewV10TVShowCellVMa, (uint64_t)&unk_100ED3320);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CCC20);
  }
  return result;
}

uint64_t _s9ShowsViewV10TVShowCellVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CCC98, (uint64_t)&_s9ShowsViewV10TVShowCellVMn);
}

uint64_t sub_10085D2C8(uint64_t a1)
{
  return sub_10085D2D4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10085AC24);
}

uint64_t sub_10085D2D4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s9ShowsViewVMa(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

char *sub_10085D330(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  id v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *__dst;
  int *v114;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TVShow(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
    v11 = &a1[v10];
    v12 = &a2[v10];
    swift_retain();
    v13 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    if (EnumCaseMultiPayload == 1)
    {
      v109 = v9;
      v110 = v8;
      v111 = v7;
      v112 = v13;
      v15 = type metadata accessor for Library.Context(0);
      v16 = *(int *)(v15 + 20);
      __dst = &v11[v16];
      v114 = (int *)v15;
      v17 = &v12[v16];
      v18 = type metadata accessor for Album(0);
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v19 + 48);
      v21 = swift_retain();
      if (v20(v17, 1, v18, v21))
      {
        v22 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      v25 = v114[6];
      v26 = &v11[v25];
      v27 = &v12[v25];
      v28 = type metadata accessor for Artist(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v31 = v114[7];
      v32 = &v11[v31];
      v33 = &v12[v31];
      v34 = type metadata accessor for Composer(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = v114[8];
      v38 = &v11[v37];
      v39 = &v12[v37];
      v40 = type metadata accessor for Genre(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C(&qword_10119ED08);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v114[9];
      v44 = &v11[v43];
      v45 = &v12[v43];
      v46 = type metadata accessor for Playlist(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v49 = v114[10];
      v50 = &v11[v49];
      v51 = &v12[v49];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(&v12[v49], 1, v111))
      {
        v52 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        v109(v50, v51, v111);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v50, 0, 1, v111);
      }
      v53 = v114[11];
      v54 = &v11[v53];
      v55 = &v12[v53];
      v56 = type metadata accessor for TVSeason(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      v11[v114[12]] = v12[v114[12]];
      v11[v114[13]] = v12[v114[13]];
      v11[v114[14]] = v12[v114[14]];
      v59 = v114[15];
      v60 = &v11[v59];
      v61 = &v12[v59];
      v62 = *((_QWORD *)v61 + 1);
      *v60 = *(_QWORD *)v61;
      v60[1] = v62;
      *(_QWORD *)&v11[v114[16]] = *(_QWORD *)&v12[v114[16]];
      v11[v114[17]] = v12[v114[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = 1;
      v13 = v112;
    }
    else
    {
      swift_retain();
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v24);
    v63 = a3[7];
    v64 = &a1[v63];
    v65 = &a2[v63];
    v66 = *(id *)v65;
    v67 = v65[8];
    sub_1000A4100(*(id *)v65, v67);
    *(_QWORD *)v64 = v66;
    v64[8] = v67;
    v68 = a3[8];
    v69 = a3[9];
    v70 = &a1[v68];
    v71 = (uint64_t *)&a2[v68];
    v72 = *v71;
    v73 = v71[1];
    *(_QWORD *)v70 = v72;
    *((_QWORD *)v70 + 1) = v73;
    v74 = &a1[v69];
    v75 = (uint64_t *)&a2[v69];
    v77 = *v75;
    v76 = v75[1];
    *(_QWORD *)v74 = v77;
    *((_QWORD *)v74 + 1) = v76;
    v78 = a3[10];
    v79 = &a1[v78];
    v80 = &a2[v78];
    v81 = *(_QWORD *)v80;
    v82 = *((_QWORD *)v80 + 1);
    v83 = v80[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v81, v82);
    *(_QWORD *)v79 = v81;
    *((_QWORD *)v79 + 1) = v82;
    v79[16] = v83;
    v84 = a3[11];
    v85 = a3[12];
    v86 = &a1[v84];
    v87 = (uint64_t *)&a2[v84];
    v88 = *v87;
    v89 = v87[1];
    *(_QWORD *)v86 = v88;
    *((_QWORD *)v86 + 1) = v89;
    v90 = &a1[v85];
    v91 = (uint64_t *)&a2[v85];
    v93 = *v91;
    v92 = v91[1];
    *(_QWORD *)v90 = v93;
    *((_QWORD *)v90 + 1) = v92;
    v94 = a3[13];
    v95 = a3[14];
    v96 = &a1[v94];
    v97 = (uint64_t *)&a2[v94];
    v99 = *v97;
    v98 = v97[1];
    *(_QWORD *)v96 = v99;
    *((_QWORD *)v96 + 1) = v98;
    v100 = &a1[v95];
    v101 = *(_QWORD *)&a2[v95];
    v102 = *(_QWORD *)&a2[v95 + 8];
    LOBYTE(v79) = a2[v95 + 16];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v101, v102, (char)v79);
    *(_QWORD *)v100 = v101;
    *((_QWORD *)v100 + 1) = v102;
    v100[16] = (char)v79;
    v103 = a3[15];
    v104 = &a1[v103];
    v105 = &a2[v103];
    v106 = *(_QWORD *)v105;
    v107 = *((_QWORD *)v105 + 1);
    LOBYTE(v93) = v105[16];
    sub_1000A411C(*(_QWORD *)v105, v107, v93);
    *(_QWORD *)v104 = v106;
    *((_QWORD *)v104 + 1) = v107;
    v104[16] = v93;
  }
  return a1;
}

double sub_10085D970(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = type metadata accessor for TVShow(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_release();
  v7 = a1 + a2[6];
  v8 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = (int *)type metadata accessor for Library.Context(0);
    v11 = v7 + v10[5];
    v12 = type metadata accessor for Album(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v7 + v10[6];
    v15 = type metadata accessor for Artist(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = v7 + v10[7];
    v18 = type metadata accessor for Composer(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    v20 = v7 + v10[8];
    v21 = type metadata accessor for Genre(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    v23 = v7 + v10[9];
    v24 = type metadata accessor for Playlist(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    v26 = v7 + v10[10];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v26, 1, v4))
      v6(v26, v4);
    v27 = v7 + v10[11];
    v28 = type metadata accessor for TVSeason(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000A4224(*(id *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[10]), *(_QWORD *)(a1 + a2[10] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[14]), *(_QWORD *)(a1 + a2[14] + 8), *(_BYTE *)(a1 + a2[14] + 16));
  return sub_1000A4240(*(_QWORD *)(a1 + a2[15]), *(_QWORD *)(a1 + a2[15] + 8), *(_BYTE *)(a1 + a2[15] + 16));
}

uint64_t sub_10085DC6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  void (*v106)(char *, char *, uint64_t);
  char *__dst;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;

  v6 = type metadata accessor for TVShow(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  swift_retain();
  v12 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  *v10 = *(_QWORD *)v11;
  if (EnumCaseMultiPayload == 1)
  {
    v106 = (void (*)(char *, char *, uint64_t))v8;
    v108 = v7;
    v109 = v6;
    v110 = v12;
    v111 = (int *)type metadata accessor for Library.Context(0);
    v14 = v111[5];
    __dst = (char *)v10 + v14;
    v15 = &v11[v14];
    v16 = type metadata accessor for Album(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48);
    v19 = swift_retain();
    if (v18(v15, 1, v16, v19))
    {
      v20 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    v22 = v111[6];
    v23 = (char *)v10 + v22;
    v24 = &v11[v22];
    v25 = type metadata accessor for Artist(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v28 = v111[7];
    v29 = (char *)v10 + v28;
    v30 = &v11[v28];
    v31 = type metadata accessor for Composer(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v34 = v111[8];
    v35 = (char *)v10 + v34;
    v36 = &v11[v34];
    v37 = type metadata accessor for Genre(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = sub_100007E8C(&qword_10119ED08);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v40 = v111[9];
    v41 = (char *)v10 + v40;
    v42 = &v11[v40];
    v43 = type metadata accessor for Playlist(0);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    v46 = v111[10];
    v47 = (char *)v10 + v46;
    v48 = &v11[v46];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(&v11[v46], 1, v109))
    {
      v49 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v106(v47, v48, v109);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v47, 0, 1, v109);
    }
    v50 = v111[11];
    v51 = (char *)v10 + v50;
    v52 = &v11[v50];
    v53 = type metadata accessor for TVSeason(0);
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    *((_BYTE *)v10 + v111[12]) = v11[v111[12]];
    *((_BYTE *)v10 + v111[13]) = v11[v111[13]];
    *((_BYTE *)v10 + v111[14]) = v11[v111[14]];
    v56 = v111[15];
    v57 = (_QWORD *)((char *)v10 + v56);
    v58 = &v11[v56];
    v59 = *((_QWORD *)v58 + 1);
    *v57 = *(_QWORD *)v58;
    v57[1] = v59;
    *(_QWORD *)((char *)v10 + v111[16]) = *(_QWORD *)&v11[v111[16]];
    *((_BYTE *)v10 + v111[17]) = v11[v111[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = 1;
    v12 = v110;
  }
  else
  {
    swift_retain();
    v21 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v21);
  v60 = a3[7];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v63 = *(id *)v62;
  v64 = *(_BYTE *)(v62 + 8);
  sub_1000A4100(*(id *)v62, v64);
  *(_QWORD *)v61 = v63;
  *(_BYTE *)(v61 + 8) = v64;
  v65 = a3[8];
  v66 = a3[9];
  v67 = (_QWORD *)(a1 + v65);
  v68 = (uint64_t *)(a2 + v65);
  v69 = *v68;
  v70 = v68[1];
  *v67 = v69;
  v67[1] = v70;
  v71 = (_QWORD *)(a1 + v66);
  v72 = (uint64_t *)(a2 + v66);
  v74 = *v72;
  v73 = v72[1];
  *v71 = v74;
  v71[1] = v73;
  v75 = a3[10];
  v76 = a1 + v75;
  v77 = a2 + v75;
  v78 = *(_QWORD *)v77;
  v79 = *(_QWORD *)(v77 + 8);
  v80 = *(_BYTE *)(v77 + 16);
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v78, v79);
  *(_QWORD *)v76 = v78;
  *(_QWORD *)(v76 + 8) = v79;
  *(_BYTE *)(v76 + 16) = v80;
  v81 = a3[11];
  v82 = a3[12];
  v83 = (_QWORD *)(a1 + v81);
  v84 = (uint64_t *)(a2 + v81);
  v85 = *v84;
  v86 = v84[1];
  *v83 = v85;
  v83[1] = v86;
  v87 = (_QWORD *)(a1 + v82);
  v88 = (uint64_t *)(a2 + v82);
  v90 = *v88;
  v89 = v88[1];
  *v87 = v90;
  v87[1] = v89;
  v91 = a3[13];
  v92 = a3[14];
  v93 = (_QWORD *)(a1 + v91);
  v94 = (uint64_t *)(a2 + v91);
  v96 = *v94;
  v95 = v94[1];
  *v93 = v96;
  v93[1] = v95;
  v97 = a1 + v92;
  v98 = *(_QWORD *)(a2 + v92);
  v99 = *(_QWORD *)(a2 + v92 + 8);
  LOBYTE(v76) = *(_BYTE *)(a2 + v92 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v98, v99, v76);
  *(_QWORD *)v97 = v98;
  *(_QWORD *)(v97 + 8) = v99;
  *(_BYTE *)(v97 + 16) = v76;
  v100 = a3[15];
  v101 = a1 + v100;
  v102 = a2 + v100;
  v103 = *(_QWORD *)v102;
  v104 = *(_QWORD *)(v102 + 8);
  LOBYTE(v90) = *(_BYTE *)(v102 + 16);
  sub_1000A411C(*(_QWORD *)v102, v104, v90);
  *(_QWORD *)v101 = v103;
  *(_QWORD *)(v101 + 8) = v104;
  *(_BYTE *)(v101 + 16) = v90;
  return a1;
}

uint64_t sub_10085E288(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  char v62;
  void *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char *__dst;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int *v108;

  v6 = type metadata accessor for TVShow(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    sub_10004FF60(a1 + v8, &qword_10119F030);
    v11 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    *v9 = *(_QWORD *)v10;
    if (EnumCaseMultiPayload == 1)
    {
      v105 = v7;
      v106 = v6;
      v107 = v11;
      v108 = (int *)type metadata accessor for Library.Context(0);
      v13 = v108[5];
      __dst = (char *)v9 + v13;
      v14 = &v10[v13];
      v15 = type metadata accessor for Album(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48);
      v18 = swift_retain();
      if (v17(v14, 1, v15, v18))
      {
        v19 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      v21 = v108[6];
      v22 = (char *)v9 + v21;
      v23 = &v10[v21];
      v24 = type metadata accessor for Artist(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      v27 = v108[7];
      v28 = (char *)v9 + v27;
      v29 = &v10[v27];
      v30 = type metadata accessor for Composer(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v33 = v108[8];
      v34 = (char *)v9 + v33;
      v35 = &v10[v33];
      v36 = type metadata accessor for Genre(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C(&qword_10119ED08);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v108[9];
      v40 = (char *)v9 + v39;
      v41 = &v10[v39];
      v42 = type metadata accessor for Playlist(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = v108[10];
      v46 = (char *)v9 + v45;
      v47 = &v10[v45];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(&v10[v45], 1, v106))
      {
        v48 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v46, v47, v106);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v46, 0, 1, v106);
      }
      v49 = v108[11];
      v50 = (char *)v9 + v49;
      v51 = &v10[v49];
      v52 = type metadata accessor for TVSeason(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      *((_BYTE *)v9 + v108[12]) = v10[v108[12]];
      *((_BYTE *)v9 + v108[13]) = v10[v108[13]];
      *((_BYTE *)v9 + v108[14]) = v10[v108[14]];
      v55 = v108[15];
      v56 = (_QWORD *)((char *)v9 + v55);
      v57 = &v10[v55];
      *v56 = *(_QWORD *)v57;
      v56[1] = *((_QWORD *)v57 + 1);
      *(_QWORD *)((char *)v9 + v108[16]) = *(_QWORD *)&v10[v108[16]];
      *((_BYTE *)v9 + v108[17]) = v10[v108[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = 1;
      v11 = v107;
    }
    else
    {
      swift_retain();
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v20);
  }
  v58 = a3[7];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = *(id *)v60;
  v62 = *(_BYTE *)(v60 + 8);
  sub_1000A4100(*(id *)v60, v62);
  v63 = *(void **)v59;
  v64 = *(_BYTE *)(v59 + 8);
  *(_QWORD *)v59 = v61;
  *(_BYTE *)(v59 + 8) = v62;
  sub_1000A4224(v63, v64);
  v65 = a3[8];
  v66 = a1 + v65;
  v67 = a2 + v65;
  *(_QWORD *)(a1 + v65) = *(_QWORD *)(a2 + v65);
  swift_retain();
  swift_release();
  *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
  v68 = a3[9];
  v69 = a1 + v68;
  v70 = a2 + v68;
  *(_QWORD *)(a1 + v68) = *(_QWORD *)(a2 + v68);
  swift_retain();
  swift_release();
  *(_QWORD *)(v69 + 8) = *(_QWORD *)(v70 + 8);
  v71 = a3[10];
  v72 = a1 + v71;
  v73 = a2 + v71;
  v74 = *(_QWORD *)v73;
  v75 = *(_QWORD *)(v73 + 8);
  LOBYTE(v70) = *(_BYTE *)(v73 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v73, v75);
  v76 = *(_QWORD *)v72;
  v77 = *(_QWORD *)(v72 + 8);
  *(_QWORD *)v72 = v74;
  *(_QWORD *)(v72 + 8) = v75;
  *(_BYTE *)(v72 + 16) = v70;
  sub_1000A6174(v76, v77);
  v78 = a3[11];
  v79 = a1 + v78;
  v80 = a2 + v78;
  *(_QWORD *)(a1 + v78) = *(_QWORD *)(a2 + v78);
  swift_retain();
  swift_release();
  *(_QWORD *)(v79 + 8) = *(_QWORD *)(v80 + 8);
  v81 = a3[12];
  v82 = a1 + v81;
  v83 = a2 + v81;
  *(_QWORD *)(a1 + v81) = *(_QWORD *)(a2 + v81);
  swift_retain();
  swift_release();
  *(_QWORD *)(v82 + 8) = *(_QWORD *)(v83 + 8);
  v84 = a3[13];
  v85 = a1 + v84;
  v86 = a2 + v84;
  *(_QWORD *)(a1 + v84) = *(_QWORD *)(a2 + v84);
  swift_retain();
  swift_release();
  *(_QWORD *)(v85 + 8) = *(_QWORD *)(v86 + 8);
  v87 = a3[14];
  v88 = a1 + v87;
  v89 = a2 + v87;
  v90 = *(_QWORD *)v89;
  v91 = *(_QWORD *)(v89 + 8);
  LOBYTE(v86) = *(_BYTE *)(v89 + 16);
  sub_1000A410C(*(_QWORD *)v89, v91, v86);
  v92 = *(_QWORD *)v88;
  v93 = *(_QWORD *)(v88 + 8);
  v94 = *(_BYTE *)(v88 + 16);
  *(_QWORD *)v88 = v90;
  *(_QWORD *)(v88 + 8) = v91;
  *(_BYTE *)(v88 + 16) = v86;
  sub_1000A4230(v92, v93, v94);
  v95 = a3[15];
  v96 = a1 + v95;
  v97 = a2 + v95;
  v98 = *(_QWORD *)v97;
  v99 = *(_QWORD *)(v97 + 8);
  LOBYTE(v90) = *(_BYTE *)(v97 + 16);
  sub_1000A411C(*(_QWORD *)v97, v99, v90);
  v100 = *(_QWORD *)v96;
  v101 = *(_QWORD *)(v96 + 8);
  v102 = *(_BYTE *)(v96 + 16);
  *(_QWORD *)v96 = v98;
  *(_QWORD *)(v96 + 8) = v99;
  *(_BYTE *)(v96 + 16) = v90;
  sub_1000A4240(v100, v101, v102);
  return a1;
}

uint64_t sub_10085E964(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v6 = type metadata accessor for TVShow(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v69 = (void (*)(char *, char *, uint64_t))v8;
    v70 = v7;
    v71 = v6;
    v72 = v12;
    *v10 = *(_QWORD *)v11;
    v13 = (int *)type metadata accessor for Library.Context(0);
    v14 = v13[5];
    v15 = (char *)v10 + v14;
    v16 = &v11[v14];
    v17 = type metadata accessor for Album(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = v13[6];
    v21 = (char *)v10 + v20;
    v22 = &v11[v20];
    v23 = type metadata accessor for Artist(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v26 = v13[7];
    v27 = (char *)v10 + v26;
    v28 = &v11[v26];
    v29 = type metadata accessor for Composer(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v32 = v13[8];
    v33 = (char *)v10 + v32;
    v34 = &v11[v32];
    v35 = type metadata accessor for Genre(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_100007E8C(&qword_10119ED08);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v38 = v13[9];
    v39 = (char *)v10 + v38;
    v40 = &v11[v38];
    v41 = type metadata accessor for Playlist(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v44 = v13[10];
    v45 = (char *)v10 + v44;
    v46 = &v11[v44];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(&v11[v44], 1, v71))
    {
      v47 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v69(v45, v46, v71);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v45, 0, 1, v71);
    }
    v48 = v13[11];
    v49 = (char *)v10 + v48;
    v50 = &v11[v48];
    v51 = type metadata accessor for TVSeason(0);
    v52 = *(_QWORD *)(v51 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      v53 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    *((_BYTE *)v10 + v13[12]) = v11[v13[12]];
    *((_BYTE *)v10 + v13[13]) = v11[v13[13]];
    *((_BYTE *)v10 + v13[14]) = v11[v13[14]];
    *(_OWORD *)((char *)v10 + v13[15]) = *(_OWORD *)&v11[v13[15]];
    *(_QWORD *)((char *)v10 + v13[16]) = *(_QWORD *)&v11[v13[16]];
    *((_BYTE *)v10 + v13[17]) = v11[v13[17]];
    swift_storeEnumTagMultiPayload(v10, v72, 1);
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v54 = a3[7];
  v55 = a3[8];
  v56 = a1 + v54;
  v57 = a2 + v54;
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_BYTE *)(v56 + 8) = *(_BYTE *)(v57 + 8);
  *(_OWORD *)(a1 + v55) = *(_OWORD *)(a2 + v55);
  v58 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v59 = a1 + v58;
  v60 = a2 + v58;
  *(_OWORD *)v59 = *(_OWORD *)v60;
  *(_BYTE *)(v59 + 16) = *(_BYTE *)(v60 + 16);
  v61 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v61) = *(_OWORD *)(a2 + v61);
  v62 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  v63 = a1 + v62;
  v64 = a2 + v62;
  *(_BYTE *)(v63 + 16) = *(_BYTE *)(v64 + 16);
  *(_OWORD *)v63 = *(_OWORD *)v64;
  v65 = a3[15];
  v66 = a1 + v65;
  v67 = a2 + v65;
  *(_BYTE *)(v66 + 16) = *(_BYTE *)(v67 + 16);
  *(_OWORD *)v66 = *(_OWORD *)v67;
  return a1;
}

uint64_t sub_10085EEC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  void *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v6 = type metadata accessor for TVShow(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  if (a1 != a2)
  {
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    sub_10004FF60(a1 + v8, &qword_10119F030);
    v11 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v95 = v7;
      v96 = v6;
      v97 = v11;
      *v9 = *(_QWORD *)v10;
      v12 = (int *)type metadata accessor for Library.Context(0);
      v13 = v12[5];
      v14 = (char *)v9 + v13;
      v15 = &v10[v13];
      v16 = type metadata accessor for Album(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v19 = v12[6];
      v20 = (char *)v9 + v19;
      v21 = &v10[v19];
      v22 = type metadata accessor for Artist(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v25 = v12[7];
      v26 = (char *)v9 + v25;
      v27 = &v10[v25];
      v28 = type metadata accessor for Composer(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v31 = v12[8];
      v32 = (char *)v9 + v31;
      v33 = &v10[v31];
      v34 = type metadata accessor for Genre(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C(&qword_10119ED08);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = v12[9];
      v38 = (char *)v9 + v37;
      v39 = &v10[v37];
      v40 = type metadata accessor for Playlist(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v12[10];
      v44 = (char *)v9 + v43;
      v45 = &v10[v43];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(&v10[v43], 1, v96))
      {
        v46 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v44, v45, v96);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v44, 0, 1, v96);
      }
      v47 = v12[11];
      v48 = (char *)v9 + v47;
      v49 = &v10[v47];
      v50 = type metadata accessor for TVSeason(0);
      v51 = *(_QWORD *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      *((_BYTE *)v9 + v12[12]) = v10[v12[12]];
      *((_BYTE *)v9 + v12[13]) = v10[v12[13]];
      *((_BYTE *)v9 + v12[14]) = v10[v12[14]];
      *(_OWORD *)((char *)v9 + v12[15]) = *(_OWORD *)&v10[v12[15]];
      *(_QWORD *)((char *)v9 + v12[16]) = *(_QWORD *)&v10[v12[16]];
      *((_BYTE *)v9 + v12[17]) = v10[v12[17]];
      swift_storeEnumTagMultiPayload(v9, v97, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v53 = a3[7];
  v54 = a1 + v53;
  v55 = (uint64_t *)(a2 + v53);
  v56 = *v55;
  LOBYTE(v55) = *((_BYTE *)v55 + 8);
  v57 = *(void **)v54;
  v58 = *(_BYTE *)(v54 + 8);
  *(_QWORD *)v54 = v56;
  *(_BYTE *)(v54 + 8) = (_BYTE)v55;
  sub_1000A4224(v57, v58);
  v59 = a3[8];
  v60 = a1 + v59;
  v61 = a2 + v59;
  *(_QWORD *)(a1 + v59) = *(_QWORD *)(a2 + v59);
  swift_release();
  *(_QWORD *)(v60 + 8) = *(_QWORD *)(v61 + 8);
  v62 = a3[9];
  v63 = a1 + v62;
  v64 = a2 + v62;
  *(_QWORD *)(a1 + v62) = *(_QWORD *)(a2 + v62);
  swift_release();
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(v64 + 8);
  v65 = a3[10];
  v66 = a1 + v65;
  v67 = a2 + v65;
  v68 = *(_BYTE *)(v67 + 16);
  v69 = *(_QWORD *)v66;
  v70 = *(_QWORD *)(v66 + 8);
  *(_OWORD *)v66 = *(_OWORD *)v67;
  *(_BYTE *)(v66 + 16) = v68;
  sub_1000A6174(v69, v70);
  v71 = a3[11];
  v72 = a1 + v71;
  v73 = a2 + v71;
  *(_QWORD *)(a1 + v71) = *(_QWORD *)(a2 + v71);
  swift_release();
  *(_QWORD *)(v72 + 8) = *(_QWORD *)(v73 + 8);
  v74 = a3[12];
  v75 = a1 + v74;
  v76 = a2 + v74;
  *(_QWORD *)(a1 + v74) = *(_QWORD *)(a2 + v74);
  swift_release();
  *(_QWORD *)(v75 + 8) = *(_QWORD *)(v76 + 8);
  v77 = a3[13];
  v78 = a1 + v77;
  v79 = a2 + v77;
  *(_QWORD *)(a1 + v77) = *(_QWORD *)(a2 + v77);
  swift_release();
  *(_QWORD *)(v78 + 8) = *(_QWORD *)(v79 + 8);
  v80 = a3[14];
  v81 = a1 + v80;
  v82 = a2 + v80;
  v83 = *(_BYTE *)(v82 + 16);
  v84 = *(_QWORD *)v81;
  v85 = *(_QWORD *)(v81 + 8);
  v86 = *(_BYTE *)(v81 + 16);
  *(_OWORD *)v81 = *(_OWORD *)v82;
  *(_BYTE *)(v81 + 16) = v83;
  sub_1000A4230(v84, v85, v86);
  v87 = a3[15];
  v88 = a1 + v87;
  v89 = a2 + v87;
  v90 = *(_BYTE *)(v89 + 16);
  v91 = *(_QWORD *)v88;
  v92 = *(_QWORD *)(v88 + 8);
  v93 = *(_BYTE *)(v88 + 16);
  *(_OWORD *)v88 = *(_OWORD *)v89;
  *(_BYTE *)(v88 + 16) = v90;
  sub_1000A4240(v91, v92, v93);
  return a1;
}

uint64_t sub_10085F508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10085F514);
}

uint64_t sub_10085F514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for TVShow(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_100007E8C(&qword_10119EE98);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10085F5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10085F5CC);
}

uint64_t sub_10085F5CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for TVShow(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_100007E8C(&qword_10119EE98);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10085F674(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  v2 = type metadata accessor for TVShow(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_1000A79B0(319, (unint64_t *)&qword_10119F6B0, type metadata accessor for Library.Context);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = "\t";
      v6[4] = &unk_100ED3308;
      v6[5] = &unk_100ED3308;
      v6[6] = &unk_100ED3188;
      v6[7] = &unk_100ED3308;
      v6[8] = &unk_100ED3308;
      v6[9] = &unk_100ED3308;
      v6[10] = &unk_100ED3188;
      v6[11] = &unk_100ED3188;
      swift_initStructMetadata(a1, 256, 12, v6, a1 + 16);
    }
  }
}

unint64_t sub_10085F740()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CCCF8;
  if (!qword_1011CCCF8)
  {
    v1 = sub_100044B54(&qword_1011CCD00);
    sub_10085B8DC();
    sub_100048748(&qword_1011B9928, _s30SubscriptionBasedNoContentViewVMa, (uint64_t)&unk_100EC0CB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CCCF8);
  }
  return result;
}

uint64_t sub_10085F7C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAEACC, 1);
}

uint64_t sub_10085F7D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10085C260(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10085F7E4()
{
  return 16;
}

__n128 sub_10085F7F0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10085F7FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10085D128(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10085F814()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_1011CCD08);
  v1[1] = type metadata accessor for PlainButtonStyle(255);
  v1[2] = sub_100049F28(&qword_1011CCD10, &qword_1011CCD08, (uint64_t)&protocol conformance descriptor for NavigationLink<A, B>);
  v1[3] = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
}

void sub_10085F8B4()
{
  qword_10124DA28 = 0;
}

uint64_t sub_10085F8C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v0 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIListContentConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = static UIListContentConfiguration.plainHeader()(v6);
  UIListContentConfiguration.textProperties.getter(v9);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v11 = UIListContentConfiguration.TextProperties.font.getter(v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  result = Font.init(_:)(v11);
  qword_10124DA30 = result;
  return result;
}

uint64_t sub_10085F9A8(uint64_t a1)
{
  uint64_t result;

  result = static Font.body.getter(a1);
  qword_10124DA38 = result;
  return result;
}

uint64_t sub_10085F9C4(uint64_t a1)
{
  uint64_t result;

  result = static Font.footnote.getter(a1);
  qword_10124DA40 = result;
  return result;
}

void sub_10085F9E0()
{
  qword_10124DA48 = Int.seconds.getter(16);
}

void sub_10085FA00()
{
  qword_10124DA50 = Int.seconds.getter(10);
}

void sub_10085FA20()
{
  qword_10124DA58 = Int.seconds.getter(16);
}

uint64_t _s8GridSizeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10085FA8C + 4 * byte_100ED3425[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10085FAC0 + 4 * byte_100ED3420[v4]))();
}

uint64_t sub_10085FAC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10085FAC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10085FAD0);
  return result;
}

uint64_t sub_10085FADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10085FAE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10085FAE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10085FAF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8GridSizeOMa()
{
  return &_s8GridSizeON;
}

unint64_t sub_10085FB10()
{
  unint64_t result;

  result = qword_1011CCD40;
  if (!qword_1011CCD40)
  {
    result = swift_getWitnessTable(&unk_100ED3478, &_s8GridSizeON);
    atomic_store(result, (unint64_t *)&qword_1011CCD40);
  }
  return result;
}

void sub_10085FB54()
{
  qword_10124DA60 = 0x404A000000000000;
}

void sub_10085FB64()
{
  qword_10124DA68 = 0x4030000000000000;
}

void sub_10085FB74()
{
  qword_10124DA70 = 0x4030000000000000;
}

void sub_10085FB84()
{
  qword_10124DA78 = 0x406F400000000000;
}

id sub_10085FB98(uint64_t a1)
{
  return sub_100053344(a1, (SEL *)&selRef_whiteColor, &qword_10124DA80);
}

void sub_10085FBAC()
{
  qword_10124DA88 = 0x4028000000000000;
}

double sub_10085FBBC()
{
  double result;

  result = 0.0;
  xmmword_10124DA90 = xmmword_100ED34A0;
  return result;
}

void sub_10085FBD0()
{
  qword_10124DAA0 = 0x4020000000000000;
}

void sub_10085FBE0(uint64_t a1)
{
  sub_10066E478(0.1, a1, &qword_10124DAA8);
}

int64x2_t sub_10085FBF4()
{
  int64x2_t result;

  result = vdupq_n_s64(0x406B400000000000uLL);
  xmmword_10124DAB0 = (__int128)result;
  return result;
}

void sub_10085FC0C()
{
  qword_10124DAC0 = 0x4018000000000000;
}

double sub_10085FC1C()
{
  double result;

  result = 0.0;
  xmmword_10124DAD0 = xmmword_100EC87E0;
  return result;
}

void sub_10085FC30()
{
  qword_10124DAE0 = 0x4034000000000000;
}

void sub_10085FC40(uint64_t a1)
{
  sub_10066E478(0.3, a1, &qword_10124DAE8);
}

id sub_10085FC58(uint64_t a1)
{
  return sub_100053344(a1, (SEL *)&selRef_blackColor, &qword_10124DAF0);
}

uint64_t sub_10085FC6C()
{
  uint64_t result;

  sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  result = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleBody, UIFontWeightBold);
  qword_10124DAF8 = result;
  return result;
}

void sub_10085FCC4()
{
  qword_10124DB00 = 0x4024000000000000;
}

id sub_10085FCD4()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  qword_10124DB08 = (uint64_t)result;
  return result;
}

void sub_10085FD18()
{
  qword_10124DB10 = 0;
}

void sub_10085FD24()
{
  qword_10124DB18 = 0x4018000000000000;
}

double sub_10085FD34()
{
  double result;

  result = 52.0;
  xmmword_10124DB20 = xmmword_100ED34B0;
  return result;
}

id sub_10085FD48()
{
  id result;

  sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
  result = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(60, 60, 67, 0.3);
  qword_10124DB30 = (uint64_t)result;
  return result;
}

uint64_t sub_10085FDA0(void *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  CGFloat v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  NSString *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString *v17;
  id v18;
  NSString *v19;
  void *v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  NSString *v27;
  id v28;
  NSString *v29;
  NSString *v30;
  void *v31;
  id v32;
  unint64_t v33;
  double v34;
  double v35;
  char **v36;
  id v37;
  uint64_t *v38;
  Class isa;
  double v40;
  double v41;
  id v42;
  id v43;
  Class v44;
  double v45;
  CGFloat v46;
  double v47;
  double v48;
  CGFloat v49;
  CGFloat MinX;
  double MaxY;
  CGFloat v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  CGFloat v56;
  double v57;
  double v58;
  __int128 v59;
  CGFloat v60;
  double v61;
  CGFloat v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  char **v68;
  id v69;
  id v70;
  uint64_t result;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  double v79;
  uint64_t v80;
  double v81;
  id v82;
  char **v83;
  CGFloat rect;
  CGFloat v86;
  CGFloat v87;
  id v88;
  _QWORD aBlock[6];
  id v90[3];
  double height;
  _BYTE v92[152];
  _BYTE v93[160];
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;

  v88 = String._bridgeToObjectiveC()();
  v80 = v1;
  v83 = (char **)String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(NSParagraphStyle), "defaultParagraphStyle");
  v6 = objc_msgSend(v5, "mutableCopy");

  _bridgeAnyObjectToAny(_:)(aBlock, v6);
  swift_unknownObjectRelease(v6);
  v7 = sub_10004A07C(0, &qword_1011BA1D0, NSMutableParagraphStyle_ptr);
  swift_dynamicCast(v90, aBlock, (char *)&type metadata for Any + 8, v7, 7);
  v8 = v90[0];
  objc_msgSend(v90[0], "setAlignment:", 0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A21B0);
  inited = swift_initStackObject(v9, v93);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v11 = qword_10119C958;
  v12 = NSForegroundColorAttributeName;
  if (v11 != -1)
    swift_once(&qword_10119C958, sub_10085FC58);
  v13 = (void *)qword_10124DAF0;
  v14 = sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v13;
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 72) = NSParagraphStyleAttributeName;
  *(_QWORD *)(inited + 80) = v8;
  *(_QWORD *)(inited + 104) = v7;
  *(_QWORD *)(inited + 112) = NSFontAttributeName;
  v15 = qword_10119C960;
  v16 = v13;
  v17 = NSParagraphStyleAttributeName;
  v18 = v8;
  v19 = NSFontAttributeName;
  if (v15 != -1)
    swift_once(&qword_10119C960, sub_10085FC6C);
  v20 = (void *)qword_10124DAF8;
  v21 = sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  *(_QWORD *)(inited + 144) = v21;
  *(_QWORD *)(inited + 120) = v20;
  v22 = v20;
  v23 = sub_100041C10(inited);
  v24 = swift_initStackObject(v9, v92);
  *(_OWORD *)(v24 + 16) = xmmword_100EA7AC0;
  v25 = (void *)qword_10124DAF0;
  *(_QWORD *)(v24 + 32) = v12;
  *(_QWORD *)(v24 + 40) = v25;
  *(_QWORD *)(v24 + 64) = v14;
  *(_QWORD *)(v24 + 72) = v17;
  *(_QWORD *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 104) = v7;
  *(_QWORD *)(v24 + 112) = v19;
  v26 = qword_10119C970;
  v82 = v18;
  v27 = v12;
  v28 = v25;
  v29 = v17;
  v30 = v19;
  if (v26 != -1)
    swift_once(&qword_10119C970, sub_10085FCD4);
  v31 = (void *)qword_10124DB08;
  *(_QWORD *)(v24 + 144) = v21;
  *(_QWORD *)(v24 + 120) = v31;
  v32 = v31;
  v33 = sub_100041C10(v24);
  if (qword_10119C900 != -1)
    swift_once(&qword_10119C900, sub_10085FB84);
  v34 = *(double *)&qword_10124DA78;
  if (qword_10119C8F8 != -1)
    swift_once(&qword_10119C8F8, sub_10085FB74);
  v35 = v34 - (*(double *)&qword_10124DA70 + *(double *)&qword_10124DA70);
  v36 = &selRef_videoOutput_willEndFullScreenPresentationWithAnimationCoordinator_;
  v37 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
  objc_msgSend(v37, "setWantsNumberOfLineFragments:", 1);
  v38 = (uint64_t *)&selRef_itemWithLayoutSize_;
  objc_msgSend(v37, "setMaximumNumberOfLines:", 3);
  type metadata accessor for Key(0);
  sub_100556620();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v40 = INFINITY;
  objc_msgSend(v88, "boundingRectWithSize:options:attributes:context:", 1, isa, v37, v35, INFINITY);
  v87 = v41;

  v42 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
  objc_msgSend(v42, "setWantsNumberOfLineFragments:", 1);
  v43 = objc_msgSend(v37, "numberOfLineFragments");
  if (__OFSUB__(4, v43))
  {
    __break(1u);
LABEL_28:
    swift_once(&qword_10119C930, sub_10085FBF4);
    goto LABEL_17;
  }
  if (4 - (_QWORD)v43 < 0)
    goto LABEL_30;
  objc_msgSend(v42, "setMaximumNumberOfLines:");
  v44 = Dictionary._bridgeToObjectiveC()().super.isa;
  v36 = v83;
  v86 = v35;
  objc_msgSend(v83, "boundingRectWithSize:options:attributes:context:", 1, v44, v42, v35, INFINITY);
  rect = v45;

  if (*(_BYTE *)(v80 + 16) == 1)
    v3 = 348.0;
  else
    v3 = 280.0;
  v35 = *(double *)&qword_10124DA78;
  v40 = 0.5;
  v2 = (v3 - *(double *)&qword_10124DA78) * 0.5;
  v38 = &qword_10124D000;
  v4 = *(double *)&qword_10124DA70;
  *(double *)v90 = v2;
  v90[1] = (id)qword_10124DA70;
  v90[2] = (id)qword_10124DA78;
  height = 0.0;
  if (qword_10119C930 != -1)
    goto LABEL_28;
LABEL_17:
  v46 = *(double *)&xmmword_10124DAB0;
  v79 = v3;
  v47 = (v3 - *(double *)&xmmword_10124DAB0) * v40;
  v94.size.height = 0.0;
  v77 = v2;
  v94.origin.x = v2;
  v76 = v4;
  v94.origin.y = v4;
  v94.size.width = v35;
  v48 = CGRectGetMinY(v94) + *((double *)v38 + 334);
  v49 = *((double *)&xmmword_10124DAB0 + 1);
  v95.origin.x = v47;
  v95.origin.y = v48;
  v95.size.width = v46;
  v95.size.height = *((CGFloat *)&xmmword_10124DAB0 + 1);
  MinX = CGRectGetMinX(v95);
  v96.origin.x = v47;
  v96.origin.y = v48;
  v96.size.width = v46;
  v96.size.height = v49;
  MaxY = CGRectGetMaxY(v96);
  if (qword_10119C968 != -1)
    swift_once(&qword_10119C968, sub_10085FCC4);
  v52 = MaxY + *(double *)&qword_10124DB00;
  v97.origin.x = v47;
  v97.origin.y = v48;
  v97.size.width = v46;
  v97.size.height = v49;
  v53 = CGRectGetMinX(v97);
  v75 = v52;
  v98.origin.x = MinX;
  v98.origin.y = v52;
  v98.size.height = v87;
  v98.size.width = v86;
  v54 = CGRectGetMaxY(v98);
  if (qword_10119C978 != -1)
    swift_once(&qword_10119C978, sub_10085FD18);
  v55 = v54 + *(double *)&qword_10124DB10;
  v99.origin.x = v47;
  v99.origin.y = v48;
  v99.size.width = v46;
  v78 = v49;
  v99.size.height = v49;
  v56 = CGRectGetMinX(v99);
  v100.origin.x = v53;
  v73 = v55;
  v100.origin.y = v55;
  v100.size.width = v86;
  v100.size.height = rect;
  v57 = CGRectGetMaxY(v100);
  if (qword_10119C980 != -1)
    swift_once(&qword_10119C980, sub_10085FD24);
  v74 = v53;
  v81 = v47;
  v58 = v57 + *(double *)&qword_10124DB18;
  if (qword_10119C988 != -1)
    swift_once(&qword_10119C988, sub_10085FD34);
  v59 = xmmword_10124DB20;
  v101.origin.x = v56;
  v101.origin.y = v58;
  v101.size = (CGSize)xmmword_10124DB20;
  v60 = CGRectGetMaxY(v101);
  v72 = v56;
  v61 = *((double *)v38 + 334);
  v62 = v60 + v61;
  v102.size.height = 0.0;
  v102.origin.x = v77;
  v102.origin.y = v76;
  v102.size.width = v35;
  v103.size.height = v62 - CGRectGetMinY(v102);
  height = v103.size.height;
  v103.origin.x = v77;
  v103.origin.y = v76;
  v103.size.width = v35;
  v63 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", v79, v61 + CGRectGetMaxY(v103));
  v64 = swift_allocObject(&unk_1010DEA78, 192, 7);
  *(_QWORD *)(v64 + 16) = v90;
  *(_QWORD *)(v64 + 24) = v88;
  *(CGFloat *)(v64 + 32) = MinX;
  *(CGFloat *)(v64 + 40) = v75;
  *(CGFloat *)(v64 + 48) = v86;
  *(CGFloat *)(v64 + 56) = v87;
  *(_QWORD *)(v64 + 64) = v23;
  *(_QWORD *)(v64 + 72) = v36;
  *(CGFloat *)(v64 + 80) = v74;
  *(CGFloat *)(v64 + 88) = v73;
  *(CGFloat *)(v64 + 96) = v86;
  *(CGFloat *)(v64 + 104) = rect;
  *(_QWORD *)(v64 + 112) = v33;
  *(CGFloat *)(v64 + 120) = v72;
  *(double *)(v64 + 128) = v58;
  *(_OWORD *)(v64 + 136) = v59;
  *(double *)(v64 + 152) = v81;
  *(double *)(v64 + 160) = v48;
  *(CGFloat *)(v64 + 168) = v46;
  *(CGFloat *)(v64 + 176) = v78;
  *(_QWORD *)(v64 + 184) = a1;
  v65 = swift_allocObject(&unk_1010DEAA0, 32, 7);
  *(_QWORD *)(v65 + 16) = sub_100860F30;
  *(_QWORD *)(v65 + 24) = v64;
  aBlock[4] = sub_100229354;
  aBlock[5] = v65;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004BF88;
  aBlock[3] = &unk_1010DEAB8;
  v66 = _Block_copy(aBlock);
  v67 = v88;
  v68 = v36;
  v69 = a1;
  swift_retain();
  v70 = objc_msgSend(v63, "imageWithActions:", v66, swift_release().n128_f64[0]);

  _Block_release(v66);
  LOBYTE(v66) = swift_isEscapingClosureAtFileLocation(v65, "", 111, 125, 31, 1);
  swift_release();
  swift_release();
  if ((v66 & 1) == 0)
    return (uint64_t)v70;
  __break(1u);
LABEL_30:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  __break(1u);
  return result;
}

void sub_1008606C8(void *a1, double *a2, void *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, uint64_t a12, void *a13, uint64_t a14, void *a15, double a16, double a17, double a18, double a19, double a20,double a21,double a22,double a23)
{
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  CGContext *v36;
  CGSize v37;
  CGFloat v38;
  CGColor *v39;
  void *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  void *v46;
  CGContext *v47;
  const CGPath *v48;
  CGContext *v49;
  CGColor *v50;
  id v51;
  void (*v52)(_QWORD);
  CGContext *v53;
  Class isa;
  Class v55;
  void *v56;
  NSString v57;
  id v58;
  id v59;
  CGContext *v60;
  CGSize v61;
  CGFloat v62;
  CGColor *v63;
  double x;
  double y;
  double width;
  double height;
  id v68;
  void *v69;
  CGContext *v70;
  const CGPath *v71;
  id v72;
  id v73;
  void *v74;
  uint64_t v75;
  id v76;
  id v77;
  void (*v78)(char *, uint64_t);
  unsigned int v79;
  void (*v80)(char *, _QWORD, uint64_t);
  id v81;
  uint64_t v82;
  double v83;
  id v84;
  double v85;
  double v86;
  double v87;
  CGSize v88;
  CGRect v89;
  CGRect v90;

  v81 = a3;
  v82 = a14;
  v84 = a13;
  v86 = a10;
  v87 = a11;
  v85 = a9;
  v83 = a8;
  v31 = type metadata accessor for CGPathFillRule(0);
  v32 = *(_QWORD *)(v31 - 8);
  *(_QWORD *)&v33 = __chkstk_darwin(v31).n128_u64[0];
  v35 = (char *)&v75 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = (CGContext *)objc_msgSend(a1, "CGContext", v33);
  if (qword_10119C918 != -1)
    swift_once(&qword_10119C918, sub_10085FBBC);
  v37 = (CGSize)xmmword_10124DA90;
  if (qword_10119C920 != -1)
    swift_once(&qword_10119C920, sub_10085FBD0);
  v38 = *(double *)&qword_10124DAA0;
  if (qword_10119C928 != -1)
    swift_once(&qword_10119C928, sub_10085FBE0);
  v39 = (CGColor *)objc_msgSend((id)qword_10124DAA8, "CGColor");
  CGContextSetShadowWithColor(v36, v37, v38, v39);

  v40 = (void *)objc_opt_self(UIBezierPath);
  v41 = *a2;
  v42 = a2[1];
  v43 = a2[2];
  v44 = a2[3];
  if (qword_10119C910 != -1)
    swift_once(&qword_10119C910, sub_10085FBAC);
  v45 = objc_msgSend(v40, "_bezierPathWithPillRect:cornerRadius:", v41, v42, v43, v44, *(double *)&qword_10124DA88);
  if (!v45)
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v46 = v45;
  v77 = a15;
  v47 = (CGContext *)objc_msgSend(a1, "CGContext");
  v48 = (const CGPath *)objc_msgSend(v46, "CGPath");
  CGContextAddPath(v47, v48);

  v49 = (CGContext *)objc_msgSend(a1, "CGContext");
  if (qword_10119C908 != -1)
    swift_once(&qword_10119C908, sub_10085FB98);
  v50 = (CGColor *)objc_msgSend((id)qword_10124DA80, "CGColor");
  CGContextSetFillColorWithColor(v49, v50);

  v51 = objc_msgSend(a1, "CGContext");
  v52 = *(void (**)(_QWORD))(v32 + 104);
  v79 = enum case for CGPathFillRule.winding(_:);
  v80 = (void (*)(char *, _QWORD, uint64_t))v52;
  v52(v35);
  CGContextRef.fillPath(using:)(v35);

  v78 = *(void (**)(char *, uint64_t))(v32 + 8);
  v78(v35, v31);
  v76 = v46;
  objc_msgSend(v46, "addClip");
  v53 = (CGContext *)objc_msgSend(a1, "CGContext");
  v88.width = 0.0;
  v88.height = 0.0;
  CGContextSetShadowWithColor(v53, v88, 0.0, 0);

  type metadata accessor for Key(0);
  sub_100556620();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v81, "drawWithRect:options:attributes:context:", 33, isa, 0, a4, a5, a6, a7);

  v55 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v84, "drawWithRect:options:attributes:context:", 33, v55, 0, v83, v85, v86, v87);

  v56 = (void *)objc_opt_self(UIImage);
  v57 = String._bridgeToObjectiveC()();
  if (qword_10119C1E0 != -1)
    swift_once(&qword_10119C1E0, sub_100565C7C);
  v58 = objc_msgSend(v56, "imageNamed:inBundle:compatibleWithTraitCollection:", v57, qword_10124D260, 0);

  if (!v58)
    goto LABEL_29;
  if (qword_10119C990 != -1)
    swift_once(&qword_10119C990, sub_10085FD48);
  v59 = objc_msgSend(v58, "flattenedImageWithColor:", qword_10124DB30);

  objc_msgSend(v59, "drawInRect:", a16, a17, a18, a19);
  v60 = (CGContext *)objc_msgSend(a1, "CGContext");
  if (qword_10119C940 != -1)
    swift_once(&qword_10119C940, sub_10085FC1C);
  v61 = (CGSize)xmmword_10124DAD0;
  if (qword_10119C948 != -1)
    swift_once(&qword_10119C948, sub_10085FC30);
  v62 = *(double *)&qword_10124DAE0;
  if (qword_10119C950 != -1)
    swift_once(&qword_10119C950, sub_10085FC40);
  v63 = (CGColor *)objc_msgSend((id)qword_10124DAE8, "CGColor");
  CGContextSetShadowWithColor(v60, v61, v62, v63);

  v89.origin.x = a20;
  v89.origin.y = a21;
  v89.size.width = a22;
  v89.size.height = a23;
  v90 = CGRectInset(v89, 1.0, 1.0);
  x = v90.origin.x;
  y = v90.origin.y;
  width = v90.size.width;
  height = v90.size.height;
  if (qword_10119C938 != -1)
    swift_once(&qword_10119C938, sub_10085FC0C);
  v68 = objc_msgSend(v40, "_bezierPathWithPillRect:cornerRadius:", x, y, width, height, *(double *)&qword_10124DAC0);
  if (!v68)
    goto LABEL_30;
  v69 = v68;
  v70 = (CGContext *)objc_msgSend(a1, "CGContext");
  v71 = (const CGPath *)objc_msgSend(v69, "CGPath");
  CGContextAddPath(v70, v71);

  v72 = objc_msgSend(a1, "CGContext");
  v80(v35, v79, v31);
  CGContextRef.fillPath(using:)(v35);

  v78(v35, v31);
  v73 = objc_msgSend(v40, "_bezierPathWithPillRect:cornerRadius:", a20, a21, a22, a23, *(double *)&qword_10124DAC0);
  if (v73)
  {
    v74 = v73;
    objc_msgSend(v73, "addClip");
    objc_msgSend(v77, "drawInRect:", a20, a21, a22, a23);

    return;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_100860E9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for ShareModelStoryRenderer()
{
  return objc_opt_self(_TtC5Music23ShareModelStoryRenderer);
}

uint64_t sub_100860EEC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));

  return swift_deallocObject(v0, 192, 7);
}

void sub_100860F30(void *a1)
{
  uint64_t v1;

  sub_1008606C8(a1, *(double **)(v1 + 16), *(void **)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 80), *(double *)(v1 + 88), *(double *)(v1 + 96), *(double *)(v1 + 104), *(_QWORD *)(v1 + 64), *(void **)(v1 + 72), *(_QWORD *)(v1 + 112), *(void **)(v1 + 184), *(double *)(v1 + 120), *(double *)(v1 + 128), *(double *)(v1 + 136), *(double *)(v1 + 144),
    *(double *)(v1 + 152),
    *(double *)(v1 + 160),
    *(double *)(v1 + 168),
    *(double *)(v1 + 176));
}

uint64_t sub_100860F88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100860F98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100860FA8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100860FB0(char a1, char a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;

  v5 = objc_msgSend(v2, "viewControllers");
  v6 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v15 = v7;
    else
      v15 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for NavigationController();
  v9 = objc_msgSendSuper2(&v18, "popToRootViewControllerAnimated:", a1 & 1);
  if (v9)
  {
    v10 = v9;
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v6);

    if (v8 != 1)
      return;
  }
  else if (v8 != 1)
  {
    return;
  }
  if ((a2 & 1) != 0)
  {
    v11 = objc_msgSend(v2, "viewControllers");
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v6);

    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0)
        v16 = v12;
      else
        v16 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v17 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_10:
        if ((v12 & 0xC000000000000001) != 0)
        {
          v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v12);
        }
        else
        {
          if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v13 = *(id *)(v12 + 32);
        }
        v14 = v13;
        swift_bridgeObjectRelease();
        UIViewController.scrollToTopIfPossible()();
        UIViewController.focusOnSearchBarIfPossible()();

        return;
      }
    }
    else if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
}

double sub_100861198(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  double result;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_backgroundView);
  objc_opt_self(UIVisualEffectView);
  v3 = swift_dynamicCastObjCClass(v2);
  if (v3)
  {
    v5 = (void *)v3;
    v12 = v2;
    v6 = objc_msgSend(v1, "navigationBar");
    v7 = objc_msgSend(v6, "_backdropViewLayerGroupName");

    objc_msgSend(v5, "_setGroupName:", v7);
    v8 = OBJC_IVAR____TtC5Music20NavigationController_statusBarEffectViewAnimationCoordinator;
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC5Music20NavigationController_statusBarEffectViewAnimationCoordinator])
    {

    }
    else
    {
      v9 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
      v10 = type metadata accessor for StatusBarVisualEffectAnimationCoordinator();
      v11 = swift_allocObject(v10, 33, 7);
      *(_BYTE *)(v11 + 32) = 0;
      *(_QWORD *)(v11 + 16) = v5;
      *(_QWORD *)(v11 + 24) = v9;
      *(_QWORD *)&v1[v8] = v11;
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

char *sub_1008612D0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  id v5;
  char *result;
  char *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  objc_class *v12;
  char *v13;
  char *v14;
  id v15;
  char *v16;
  char *v17;
  void *v18;
  id v19;
  objc_super v20;
  _QWORD v21[5];
  _BYTE v22[40];

  v1 = OBJC_IVAR____TtC5Music20NavigationController____lazy_storage___statusBarEffectView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Music20NavigationController____lazy_storage___statusBarEffectView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC5Music20NavigationController____lazy_storage___statusBarEffectView];
LABEL_7:
    v19 = v2;
    return v3;
  }
  v4 = v0;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", 0);
  objc_msgSend(v5, "setUserInteractionEnabled:", 0);
  result = (char *)objc_msgSend(v0, "view");
  if (result)
  {
    v7 = result;
    UIView.statusBarFrame.getter((uint64_t)v21);
    v8 = *(double *)v21;
    v9 = *(double *)&v21[1];
    v10 = *(double *)&v21[2];
    v11 = *(double *)&v21[3];

    sub_100065228((uint64_t)v21, (uint64_t)v22, &qword_1011A22F0);
    if ((v22[32] & 1) != 0)
    {
      v10 = 0.0;
      v11 = 0.0;
      v8 = 0.0;
      v9 = 0.0;
    }
    v12 = (objc_class *)type metadata accessor for NavigationBarBackgroundContainerView();
    v13 = (char *)objc_allocWithZone(v12);
    v14 = &v13[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom];
    *(_QWORD *)v14 = 0;
    v14[8] = 1;
    *(_QWORD *)&v13[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_backgroundView] = v5;
    v20.receiver = v13;
    v20.super_class = v12;
    v15 = v5;
    v16 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", v8, v9, v10, v11);
    objc_msgSend(v16, "addSubview:", *(_QWORD *)&v16[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_backgroundView], v20.receiver, v20.super_class);
    v17 = v16;
    objc_msgSend(v17, "setAutoresizingMask:", 2);

    v18 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v17;
    v3 = v17;

    v2 = 0;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_10086147C(void *a1, char a2)
{
  void *v2;
  void *v3;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  UITraitCollection v15;
  Class isa;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  v3 = v2;
  v24 = objc_msgSend(v2, "overrideTraitCollectionForChildViewController:", a1);
  if (!v24)
    v24 = objc_msgSend(objc_allocWithZone((Class)UITraitCollection), "init");
  v6 = objc_msgSend(v2, "navigationBar", v24);
  v7 = objc_msgSend(v6, "_backdropViewLayerGroupName");

  if (v7)
  {
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    v11 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v12 = swift_allocObject(v11, 48, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100EA7DB0;
    *(_QWORD *)(v12 + 32) = v25;
    sub_10004A07C(0, &qword_1011A22E8, UITraitCollection_ptr);
    v13 = v25;
    v14._countAndFlagsBits = v8;
    v14._object = v10;
    v15.super.isa = UITraitCollection.init(navigationBarBackdropGroupName:)(v14).super.isa;
    *(UITraitCollection *)(v12 + 40) = v15;
    specialized Array._endMutation()(v15.super.isa);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v12);
    v25 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithTraitsFromCollections:", isa);

  }
  v17 = objc_msgSend(a1, "navigationItem", v25);
  v18 = sub_1008EBAC8() & 1;

  if ((_DWORD)v18 != objc_msgSend(v3, "isNavigationBarHidden"))
    objc_msgSend(v3, "setNavigationBarHidden:animated:", v18, a2 & 1);
  objc_msgSend(v3, "setOverrideTraitCollection:forChildViewController:", v26, a1);
  v19 = objc_msgSend(a1, "navigationItem");
  v20 = objc_msgSend(a1, "parentViewController");
  if (v20)
  {
    v21 = v20;
    while (1)
    {
      objc_opt_self(UINavigationController);
      if (swift_dynamicCastObjCClass(v21))
        break;
      v22 = v21;
      v23 = objc_msgSend(v22, "navigationItem");

      v21 = objc_msgSend(v22, "parentViewController");
      v19 = v23;
      if (!v21)
        goto LABEL_14;
    }

  }
  v23 = v19;
LABEL_14:
  sub_100865A88(v23, (char **)a1, 0);

}

void sub_100861754()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  Swift::Bool v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;

  v1 = v0;
  v2 = objc_msgSend(v0, "presentingViewController");

  if (v2)
    return;
  v3 = objc_msgSend(v1, "viewControllers");
  v4 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_26:
    swift_bridgeObjectRelease(v5);
    return;
  }
  if (v5 < 0)
    v22 = v5;
  else
    v22 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v23 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v5);
  if (!v23)
    goto LABEL_26;
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v6 = *(id *)(v5 + 32);
  }
  v24 = v6;
  v7 = objc_msgSend(v6, "navigationItem", swift_bridgeObjectRelease(v5).n128_f64[0]);
  v8 = objc_msgSend(v7, "largeTitleDisplayMode");

  if (v8 == (id)2)
  {

    return;
  }
  v9 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v9) & 1) == 0)
  {
    v14 = 0;
    goto LABEL_18;
  }
  v10 = objc_msgSend(v1, "splitViewController");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "viewControllerForColumn:", 3);
    if (v12)
    {
      v13 = v12;
      v14 = UIViewController.isDescendant(of:)((UIViewController)v12);

      goto LABEL_18;
    }

  }
  v15 = objc_msgSend(v1, "traitCollection", v24);
  v16 = objc_msgSend(v15, "userInterfaceIdiom");

  if (v16)
  {
    v17 = objc_msgSend(v1, "traitCollection");
    v18 = objc_msgSend(v17, "horizontalSizeClass");

    v14 = v18 == (id)1;
  }
  else
  {
    v14 = 1;
  }
LABEL_18:
  v19 = objc_msgSend(v24, "navigationItem", v24);
  v20 = v19;
  if (v14)
    v21 = 3;
  else
    v21 = 1;
  objc_msgSend(v19, "setLargeTitleDisplayMode:", v21);

}

id sub_100861AAC(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t ObjCClassFromMetadata;
  objc_super v8;

  v3 = a2;
  v4 = &v2[OBJC_IVAR____TtC5Music20NavigationController_onWillShowViewController];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v2[OBJC_IVAR____TtC5Music20NavigationController_onDidShowViewController];
  *v5 = 0;
  v5[1] = 0;
  v2[OBJC_IVAR____TtC5Music20NavigationController_isPoppingViewController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music20NavigationController_overrideNavigationBarPropertiesTopViewController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music20NavigationController_existingTopPalette] = 0;
  v2[OBJC_IVAR____TtC5Music20NavigationController_isHandlingNavigationTransition] = 0;
  v2[OBJC_IVAR____TtC5Music20NavigationController_isHostingExtaStatusBar] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music20NavigationController_statusBarEffectViewAnimationCoordinator] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music20NavigationController____lazy_storage___statusBarEffectView] = 0;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      goto LABEL_4;
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata();
LABEL_4:
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for NavigationController();
  return objc_msgSendSuper2(&v8, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
}

id sub_100861C18()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = v0;
  v2 = objc_msgSend(v0, "bottomViewController");
  if (!v2
    || (v9 = v2,
        v3 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr),
        v4 = sub_100007E8C(&qword_1011CD198),
        (swift_dynamicCast(&v10, &v9, v3, v4, 6) & 1) == 0))
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    goto LABEL_7;
  }
  v5 = *((_QWORD *)&v11 + 1);
  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_7:
    sub_10004FF60((uint64_t)&v10, &qword_1011CD190);
    return objc_msgSend(v1, "navigationBar");
  }
  v6 = v12;
  sub_100007E68(&v10, *((uint64_t *)&v11 + 1));
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v10);
  if (!v7)
    return objc_msgSend(v1, "navigationBar");
  return (id)v7;
}

void sub_100861DBC()
{
  void *v0;
  void *v1;
  id v2;
  char *v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  objc_super v32;
  _QWORD v33[5];
  _BYTE v34[32];
  char v35;

  v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)type metadata accessor for NavigationController();
  objc_msgSendSuper2(&v32, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "navigationBar");
  objc_msgSend(v2, "_setHidesShadow:", 1);

  v3 = sub_1008612D0();
  v4 = objc_msgSend(v1, "view");
  if (v4)
  {
    v5 = v4;
    UIView.statusBarFrame.getter((uint64_t)v33);
    v6 = *(double *)v33;
    v7 = *(double *)&v33[1];
    v8 = *(double *)&v33[2];
    v9 = *(double *)&v33[3];

    sub_100065228((uint64_t)v33, (uint64_t)v34, &qword_1011A22F0);
    v10 = 0.0;
    if ((v35 & 1) != 0)
      v11 = 0.0;
    else
      v11 = v8;
    if ((v35 & 1) != 0)
      v12 = 0.0;
    else
      v12 = v9;
    if ((v35 & 1) != 0)
      v13 = 0.0;
    else
      v13 = v6;
    if ((v35 & 1) == 0)
      v10 = v7;
    objc_msgSend(v3, "setFrame:", v13, v10, v11, v12);

    v14 = objc_msgSend(v1, "navigationBar");
    v15 = objc_msgSend(v14, "subviews");

    v16 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

    if ((unint64_t)v17 >> 62)
    {
LABEL_25:
      if (v17 < 0)
        v31 = v17;
      else
        v31 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v18 = _CocoaArrayWrapper.endIndex.getter(v31);
      swift_bridgeObjectRelease();
      if (v18)
        goto LABEL_15;
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v18)
      {
LABEL_15:
        v19 = 4;
        do
        {
          if ((v17 & 0xC000000000000001) != 0)
            v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 - 4, v17);
          else
            v20 = *(id *)(v17 + 8 * v19);
          v21 = v20;
          v22 = v19 - 3;
          if (__OFADD__(v19 - 4, 1))
          {
            __break(1u);
            goto LABEL_25;
          }
          objc_opt_self(_UINavigationBarPalette);
          v23 = swift_dynamicCastObjCClass(v21);
          if (v23)
          {
            v24 = (void *)v23;
            v25 = v21;
            v26 = v1;
            v27 = objc_msgSend(v1, "view");
            if (!v27)
            {
              __break(1u);
              goto LABEL_31;
            }
            v28 = v27;
            objc_msgSend(v27, "bounds");

            objc_msgSend(v24, "bounds");
            v29 = v25;
            objc_msgSend(v24, "frame");
            objc_msgSend(v24, "setFrame:");

            v30 = objc_msgSend(v24, "contentView");
            objc_msgSend(v30, "frame");
            objc_msgSend(v30, "setFrame:");

            objc_msgSend(v24, "setNeedsLayout");
            v1 = v26;
          }

          ++v19;
        }
        while (v22 != v18);
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_31:
    __break(1u);
  }
}

void sub_100862114()
{
  void *v0;
  uint64_t ObjectType;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  ObjectType = swift_getObjectType();
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for NavigationController();
  objc_msgSendSuper2(&v8, "viewDidLoad");
  objc_msgSend(v0, "setDelegate:", v0);
  v2 = objc_msgSend(v0, "navigationBar");
  objc_msgSend(v2, "setPrefersLargeTitles:", 1);

  v3 = objc_msgSend(v0, "view");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setClipsToBounds:", 1);

    v5 = sub_100007E8C(&qword_1011A1750);
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v6 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v6 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    v7 = UIViewController.registerForTraitChanges<A>(_:handler:)(v6, sub_1008653F0, 0, ObjectType);
    swift_unknownObjectRelease(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

id sub_100862548(id result, char a2)
{
  void *v2;
  void *v3;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  objc_class *v19;
  _BYTE *v20;
  id v21;
  unsigned __int8 *v22;
  Class isa;
  int v24;
  id v25;
  NSString v26;
  objc_class *v27;
  objc_super v28;
  uint64_t v29;
  objc_super v30;

  if (result)
  {
    v3 = v2;
    v5 = result;
    if (objc_msgSend(result, "boundaryEdge") == (id)2)
    {
      v6 = objc_msgSend(v2, "topViewController");
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(v6, "navigationItem");
        v9 = objc_msgSend(v7, "parentViewController");
        if (v9)
        {
          v10 = v9;
          while (1)
          {
            objc_opt_self(UINavigationController);
            if (swift_dynamicCastObjCClass(v10))
              break;
            v11 = v10;
            v12 = objc_msgSend(v11, "navigationItem");

            v10 = objc_msgSend(v11, "parentViewController");
            v8 = v12;
            if (!v10)
            {
              v10 = v7;
              v8 = v12;
              goto LABEL_11;
            }
          }

        }
        else
        {
          v10 = v7;
        }
LABEL_11:

        v13 = objc_msgSend(v8, "searchController");
        if (v13)
        {

          v14 = objc_msgSend(v3, "existingPaletteForEdge:", 2);
          if (v14)
          {
            v15 = v14;
            if (objc_msgSend(v14, "isPinned"))
              objc_msgSend(v3, "detachPalette:", v15);

          }
          v16 = sub_100007E8C((uint64_t *)&unk_1011A1470);
          v17 = swift_allocObject(v16, 40, 7);
          *(_OWORD *)(v17 + 16) = xmmword_100EA7A90;
          v18 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
          *(_QWORD *)(v17 + 32) = v18;
          v29 = v17;
          specialized Array._endMutation()(v18);
          v19 = (objc_class *)type metadata accessor for NavigationBarBackgroundView();
          v20 = objc_allocWithZone(v19);
          v20[OBJC_IVAR____TtC5Music27NavigationBarBackgroundView_shouldUseTraitCollectionGroupName] = 1;
          v28.receiver = v20;
          v28.super_class = v19;
          v21 = objc_msgSendSuper2(&v28, "initWithEffect:", 0);
          sub_10004A07C(0, (unint64_t *)&unk_1011A8E70, UIVisualEffect_ptr);
          v22 = (unsigned __int8 *)v21;
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v22, "setBackgroundEffects:", isa, swift_bridgeObjectRelease().n128_f64[0]);

          objc_msgSend(v22, "setUserInteractionEnabled:", 0);
          v24 = v22[OBJC_IVAR____TtC5Music27NavigationBarBackgroundView_shouldUseTraitCollectionGroupName];
          v22[OBJC_IVAR____TtC5Music27NavigationBarBackgroundView_shouldUseTraitCollectionGroupName] = 1;
          if (v24 != 1)
          {
            v25 = objc_msgSend(v22, "traitCollection");
            UITraitCollection.navigationBarBackdropGroupName.getter();

            v26 = String._bridgeToObjectiveC()();
            objc_msgSend(v22, "_setGroupName:", v26, swift_bridgeObjectRelease().n128_f64[0]);

          }
          objc_msgSend(v5, "_setBackgroundView:", v22);

        }
      }
    }
    v27 = (objc_class *)type metadata accessor for NavigationController();
    v30.receiver = v3;
    v30.super_class = v27;
    return objc_msgSendSuper2(&v30, "attachPalette:isPinned:", v5, a2 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100862918(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t j;
  id v26;
  void *v27;
  uint64_t v28;
  __objc2_prot *v29;
  uint64_t v30;
  objc_super v31;

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Music20NavigationController_existingTopPalette;
  v5 = *(void **)&v1[OBJC_IVAR____TtC5Music20NavigationController_existingTopPalette];
  if (!a1)
  {
    if (v5)
      goto LABEL_8;
    v9 = 0;
    goto LABEL_7;
  }
  if (v5)
  {
    sub_10004A07C(0, (unint64_t *)&unk_1011CD180, _UINavigationControllerPalette_ptr);
    v6 = v5;
    v7 = a1;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) != 0)
    {
      v9 = *(void **)&v2[v4];
LABEL_7:
      *(_QWORD *)&v2[v4] = 0;

    }
  }
LABEL_8:
  v31.receiver = v2;
  v31.super_class = (Class)type metadata accessor for NavigationController();
  objc_msgSendSuper2(&v31, "detachPalette:", a1);
  v30 = (uint64_t)_swiftEmptyArrayStorage;
  v10 = objc_msgSend(v2, "navigationBar");
  v11 = objc_msgSend(v10, "subviews");

  v12 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v22 = v13;
    else
      v22 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v14 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease();
    if (!v14)
      goto LABEL_26;
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v14)
      goto LABEL_26;
  }
  if (v14 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  for (i = 0; i != v14; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
    else
      v20 = *(id *)(v13 + 8 * i + 32);
    v21 = v20;
    v29 = &OBJC_PROTOCOL____UINavigationPalette;
    if (swift_dynamicCastObjCProtocolConditional(v20, 1, &v29)
      || (objc_opt_self(_UINavigationBarPalette), swift_dynamicCastObjCClass(v21)))
    {
      v16 = v21;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v18 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v17 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v18 >= v17 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
      v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
      specialized Array._endMutation()(v19);
    }

  }
LABEL_26:
  swift_bridgeObjectRelease();
  v23 = v30;
  if (!((unint64_t)v30 >> 62))
  {
    v24 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v30, 2);
    if (v24)
      goto LABEL_28;
LABEL_38:
    swift_bridgeObjectRelease_n(v23, 3);
    return;
  }
  if (v30 < 0)
    v28 = v30;
  else
    v28 = v30 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v30, 2);
  v24 = _CocoaArrayWrapper.endIndex.getter(v28);
  if (!v24)
    goto LABEL_38;
LABEL_28:
  if (v24 >= 1)
  {
    for (j = 0; j != v24; ++j)
    {
      if ((v23 & 0xC000000000000001) != 0)
        v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v23);
      else
        v26 = *(id *)(v23 + 8 * j + 32);
      v27 = v26;
      objc_msgSend(v26, "removeFromSuperview");

    }
    goto LABEL_38;
  }
LABEL_40:
  __break(1u);
}

id sub_100862D04(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[6];
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for NavigationController();
  v3 = objc_msgSendSuper2(&v10, "popViewControllerAnimated:", a1 & 1);
  *((_BYTE *)v1 + OBJC_IVAR____TtC5Music20NavigationController_isPoppingViewController) = 1;
  v4 = objc_msgSend(v1, "transitionCoordinator");
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject(&unk_1010DEBE8, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16);
    v9[4] = sub_100866D94;
    v9[5] = v6;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_1005CE710;
    v9[3] = &unk_1010DEDE0;
    v7 = _Block_copy(v9);
    objc_msgSend(v5, "notifyWhenInteractionChangesUsingBlock:", v7, swift_release().n128_f64[0]);
    swift_unknownObjectRelease(v5);
    _Block_release(v7);
  }
  return v3;
}

void sub_100862E20(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  _BYTE *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    if (objc_msgSend(a1, "isCancelled"))
      v5[OBJC_IVAR____TtC5Music20NavigationController_isPoppingViewController] = 0;

  }
}

void sub_100863070(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  char v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _BYTE v22[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (char *)Strong;
    if (objc_msgSend(a1, "isCancelled"))
    {
      v8 = objc_msgSend(a3, "viewControllerForKey:", UITransitionContextToViewControllerKey);
      if (v8)
      {
        v9 = v8;
        v10 = OBJC_IVAR____TtC5Music20NavigationController_overrideNavigationBarPropertiesTopViewController;
        v11 = *(void **)&v7[OBJC_IVAR____TtC5Music20NavigationController_overrideNavigationBarPropertiesTopViewController];
        if (v11)
        {
          sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
          v9 = v9;
          v12 = v11;
          v13 = static NSObject.== infix(_:_:)(v9, v12);

          if ((v13 & 1) != 0)
          {
            v14 = *(void **)&v7[v10];
            *(_QWORD *)&v7[v10] = 0;

            v9 = v14;
          }
        }

      }
      v15 = objc_msgSend(a3, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
      if (v15)
      {
        v16 = v15;
        v17 = objc_msgSend(v15, "navigationItem");
        v18 = objc_msgSend(v16, "parentViewController");
        if (v18)
        {
          v19 = v18;
          while (1)
          {
            objc_opt_self(UINavigationController);
            if (swift_dynamicCastObjCClass(v19))
              break;
            v20 = v19;
            v21 = objc_msgSend(v20, "navigationItem");

            v19 = objc_msgSend(v20, "parentViewController");
            v17 = v21;
            if (!v19)
              goto LABEL_16;
          }

        }
        v21 = v17;
LABEL_16:
        sub_100865A88(v21, 0, 1);

      }
    }

  }
}

void sub_10086327C(uint64_t a1, void *a2, void *a3, void *a4, char *a5, uint64_t a6)
{
  void *v10;
  id v11;
  id v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)();
  void *v17;
  id v18;
  char *v19;
  void *v20;
  id v21;
  _QWORD v22[6];

  if (!a2)
  {
    if (!a3)
      return;
LABEL_6:
    if (a4)
    {
      v13 = (void *)objc_opt_self(UIView);
      v14 = (_QWORD *)swift_allocObject(&unk_1010DED00, 40, 7);
      v14[2] = a5;
      v14[3] = a4;
      v14[4] = a6 + 16;
      v15 = swift_allocObject(&unk_1010DED28, 32, 7);
      v16 = sub_1008669A8;
      *(_QWORD *)(v15 + 16) = sub_1008669A8;
      *(_QWORD *)(v15 + 24) = v14;
      v22[4] = sub_10010942C;
      v22[5] = v15;
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 1107296256;
      v22[2] = sub_10046D7B4;
      v22[3] = &unk_1010DED40;
      v17 = _Block_copy(v22);
      v18 = a4;
      v19 = a5;
      swift_retain();
      objc_msgSend(v13, "performWithoutAnimation:", v17, swift_release().n128_f64[0]);

      _Block_release(v17);
      LOBYTE(v18) = swift_isEscapingClosureAtFileLocation(v15, "", 93, 304, 60, 1);
      swift_release();
      if ((v18 & 1) == 0)
      {
LABEL_10:
        v20 = *(void **)&a5[OBJC_IVAR____TtC5Music13NavigationBar_musicTintColor];
        *(_QWORD *)&a5[OBJC_IVAR____TtC5Music13NavigationBar_musicTintColor] = a3;
        v21 = a3;

        objc_msgSend(a5, "setTintColor:", v21);
        sub_10004BA30((uint64_t)v16, (uint64_t)v14);
        return;
      }
      __break(1u);
    }
    v16 = 0;
    v14 = 0;
    goto LABEL_10;
  }
  if (!a3)
    goto LABEL_6;
  v10 = a2;
  sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
  v11 = a3;
  v12 = v10;
  LOBYTE(v10) = static NSObject.== infix(_:_:)(v12, v11);

  if ((v10 & 1) == 0)
    goto LABEL_6;
}

void sub_100863484(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  _OWORD v15[2];
  _BYTE v16[24];
  uint64_t v17;

  v5 = objc_msgSend(a1, "tintColor");
  v6 = objc_msgSend(a2, "existingBackButtonView");
  if (v6)
  {
    v7 = v6;
    _bridgeAnyObjectToAny(_:)(v15, v6);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_100065228((uint64_t)v15, (uint64_t)v16, &qword_10119DCC0);
  if (v17)
  {
    v8 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
    if ((swift_dynamicCast(&v14, v16, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
    {
      v9 = v14;
      objc_msgSend(v14, "setTintColor:", v5);
      swift_beginAccess(a3, v16, 33, 0);
      v10 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v11 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= v11 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
      v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized Array._endMutation()(v13);
      swift_endAccess(v16);

    }
    else
    {

    }
  }
  else
  {

    sub_10004FF60((uint64_t)v16, &qword_10119DCC0);
  }
}

void sub_100863604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *Strong;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  _BYTE v24[24];

  swift_beginAccess(a2 + 16, v24, 0, 0);
  v5 = *(_QWORD *)(a2 + 16);
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (!v6)
      goto LABEL_13;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6)
      goto LABEL_13;
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
    else
      v8 = *(id *)(v5 + 8 * i + 32);
    v9 = v8;
    objc_msgSend(v8, "setTintColor:", 0);

  }
LABEL_13:
  v11 = a3 + 16;
  swift_bridgeObjectRelease(v5);
  swift_beginAccess(v11, &v23, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v11);
  if (!Strong)
    return;
  v13 = Strong;
  Strong[OBJC_IVAR____TtC5Music20NavigationController_isHandlingNavigationTransition] = 0;
  v14 = *(void **)&Strong[OBJC_IVAR____TtC5Music20NavigationController_overrideNavigationBarPropertiesTopViewController];
  if (v14)
  {
    v15 = *(void **)&Strong[OBJC_IVAR____TtC5Music20NavigationController_overrideNavigationBarPropertiesTopViewController];
LABEL_18:
    v17 = v14;
    v18 = objc_msgSend(v15, "navigationItem");
    v19 = objc_msgSend(v15, "parentViewController");
    if (v19)
    {
      v20 = v19;
      while (1)
      {
        objc_opt_self(UINavigationController);
        if (swift_dynamicCastObjCClass(v20))
          break;
        v21 = v20;
        v22 = objc_msgSend(v21, "navigationItem");

        v20 = objc_msgSend(v21, "parentViewController");
        v18 = v22;
        if (!v20)
        {
          v20 = v15;
          v18 = v22;
          goto LABEL_25;
        }
      }

    }
    else
    {
      v20 = v15;
    }
LABEL_25:

    goto LABEL_26;
  }
  v16 = objc_msgSend(Strong, "topViewController");
  if (v16)
  {
    v15 = v16;
    v14 = 0;
    goto LABEL_18;
  }
  v18 = 0;
LABEL_26:
  sub_100865A88(v18, 0, 0);

}

UITraitCollection __swiftcall UITraitCollection.init(navigationBarBackdropGroupName:)(Swift::String navigationBarBackdropGroupName)
{
  void *object;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSString v5;
  NSString v6;
  id v7;
  UITraitCollection result;
  void *ObjCClassFromMetadata;
  Class isa;
  id v11;

  object = navigationBarBackdropGroupName._object;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7A90;
  v4 = (void *)objc_opt_self(UITraitCollection);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v4, "_traitCollectionWithValue:forTraitNamed:", v5, v6);

  if (v7)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    *(_QWORD *)(v3 + 32) = v7;
    specialized Array._endMutation()(ObjCClassFromMetadata);
    sub_10004A07C(0, &qword_1011A22E8, UITraitCollection_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v11 = objc_msgSend(ObjCClassFromMetadata, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

    return (UITraitCollection)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1008639DC()
{
  uint64_t v0;

  sub_10004BA30(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music20NavigationController_onWillShowViewController), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music20NavigationController_onWillShowViewController + 8));
  sub_10004BA30(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music20NavigationController_onDidShowViewController), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music20NavigationController_onDidShowViewController + 8));

  swift_release();
}

id sub_100863A50()
{
  return sub_1001EB7B8(type metadata accessor for NavigationController);
}

_QWORD *sub_100863ADC()
{
  void *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v26 = type metadata accessor for MusicPlayActivityFields(0);
  v1 = *(_QWORD *)(v26 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v26).n128_u64[0];
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, "viewControllers", v2);
  v6 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  if (v7 < 0)
    v23 = v7;
  else
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v8 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_16;
LABEL_3:
  v27 = _swiftEmptyArrayStorage;
  result = (_QWORD *)sub_10035C97C(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v10 = 0;
    v11 = v27;
    v25 = v7 & 0xC000000000000001;
    v12 = v7;
    do
    {
      if (v25)
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
      else
        v13 = *(id *)(v7 + 8 * v10 + 32);
      v14 = v13;
      v15 = objc_msgSend(v13, "playActivityFeatureName");
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      v19 = UIViewController.playActivityForwardedRecommendationData.getter();
      MusicPlayActivityFields.init(featureName:recommendationData:)(v16, v18, v19, v20);

      v27 = v11;
      v22 = v11[2];
      v21 = v11[3];
      if (v22 >= v21 >> 1)
      {
        sub_10035C97C(v21 > 1, v22 + 1, 1);
        v11 = v27;
      }
      ++v10;
      v11[2] = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))((unint64_t)v11+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v22, v4, v26);
      v7 = v12;
    }
    while (v8 != v10);
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void sub_100863D20()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_super v5;

  v1 = objc_msgSend(v0, "viewControllers");
  v2 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v4 = v3;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for NavigationController();

}

uint64_t sub_100863DF0()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "viewControllers");
  v2 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  return v3;
}

id sub_100863E54(void *a1)
{
  void *v1;
  NSString v3;
  uint64_t v4;
  unint64_t v5;

  MusicPlayActivityFields.featureName.getter();
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setPlayActivityFeatureName:", v3, swift_bridgeObjectRelease().n128_f64[0]);

  v4 = MusicPlayActivityFields.recommendationData.getter();
  UIViewController.playActivityForwardedRecommendationData.setter(v4, v5);
  return objc_msgSend(v1, "pushViewController:animated:", a1, 1);
}

void sub_100863EE8()
{
  void *v0;

}

_QWORD *sub_100863F18()
{
  return sub_100863ADC();
}

id sub_100863F38(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  objc_super v11;

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music13NavigationBar_musicTintColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music13NavigationBar_musicPartialBackgroundView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music13NavigationBar_topItemPreferredNavigationBarTintColorObserver] = 0;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for NavigationBar();
  v9 = objc_msgSendSuper2(&v11, "initWithFrame:", a1, a2, a3, a4);

  if (qword_10119C998 != -1)
    swift_once(&qword_10119C998, sub_10086467C);
  objc_msgSend(v9, "setStandardAppearance:", qword_10124DB38);
  if (qword_10119C9A0 != -1)
    swift_once(&qword_10119C9A0, sub_1008648E0);
  objc_msgSend(v9, "setScrollEdgeAppearance:", qword_10124DB40);

  return v9;
}

void sub_1008640F4()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for NavigationBar();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = objc_msgSend(v0, "_backgroundView");
  if (v1)
  {
    v2 = v1;
    v3 = *(void **)&v0[OBJC_IVAR____TtC5Music13NavigationBar_musicPartialBackgroundView];
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v2, "bounds");
      objc_msgSend(v2, "convertRect:toCoordinateSpace:", v0);
      objc_msgSend(v4, "setFrame:");
      objc_msgSend(v0, "sendSubviewToBack:", v4);

      v2 = v4;
    }

  }
}

void sub_100864430(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  char v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;

  v2 = v1;
  v3 = OBJC_IVAR____TtC5Music13NavigationBar_musicPartialBackgroundView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC5Music13NavigationBar_musicPartialBackgroundView];
  if (!a1)
  {
    if (!v4)
      return;
    goto LABEL_7;
  }
  v5 = a1;
  if (!v4
    || (type metadata accessor for NavigationBarBackgroundContainerView(),
        v6 = v4,
        v5 = v5,
        v7 = static NSObject.== infix(_:_:)(v5, v6),
        v5,
        v6,
        (v7 & 1) == 0))
  {
    v8 = v5;
    if (objc_msgSend(v8, "isDescendantOfView:", v2))
      objc_msgSend(v8, "removeFromSuperview");

    v4 = *(void **)&v2[v3];
    if (v4)
    {
LABEL_7:
      v19 = v4;
      v9 = objc_msgSend(v2, "_backgroundView");
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, "bounds");
        v12 = v11;
        v14 = v13;
        v16 = v15;
        v18 = v17;

        objc_msgSend(v19, "setFrame:", v12, v14, v16, v18);
        objc_msgSend(v2, "insertSubview:atIndex:", v19, 0);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

double sub_1008645AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  double result;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  _BYTE v13[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v13, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "delegate");
    if (v7)
    {
      v8 = v7;
      v9 = type metadata accessor for NavigationController();
      v10 = (void *)swift_dynamicCastClass(v8, v9);
      if (v10 && (v11 = objc_msgSend(v10, "topViewController")) != 0)
      {
        v12 = v11;
        sub_10086147C(v11, 1);

        swift_unknownObjectRelease(v8);
      }
      else
      {

        *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
      }
    }
    else
    {

    }
  }
  return result;
}

id sub_10086467C()
{
  id result;

  result = sub_100864698();
  qword_10124DB38 = (uint64_t)result;
  return result;
}

id sub_100864698()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t inited;
  void *v6;
  NSString *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  Class isa;
  uint64_t v12;
  NSString *v13;
  id v14;
  unint64_t v15;
  Class v16;
  _BYTE v18[72];
  _BYTE v19[80];

  v0 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
  v1 = (void *)objc_opt_self(UIBlurEffect);
  v2 = v0;
  v3 = objc_msgSend(v1, "effectWithStyle:", 10);
  objc_msgSend(v2, "setBackgroundEffect:", v3);

  v4 = sub_100007E8C((uint64_t *)&unk_1011A21B0);
  inited = swift_initStackObject(v4, v19);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v6 = (void *)objc_opt_self(UIColor);
  v7 = NSForegroundColorAttributeName;
  v8 = objc_msgSend(v6, "labelColor");
  v9 = sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 40) = v8;
  v10 = sub_100041C10(inited);
  type metadata accessor for Key(0);
  sub_1001EBD80((unint64_t *)&qword_10119D8C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EA7920);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setTitleTextAttributes:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v12 = swift_initStackObject(v4, v18);
  *(_OWORD *)(v12 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v12 + 32) = v7;
  v13 = v7;
  v14 = objc_msgSend(v6, "labelColor");
  *(_QWORD *)(v12 + 64) = v9;
  *(_QWORD *)(v12 + 40) = v14;
  v15 = sub_100041C10(v12);
  v16 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setLargeTitleTextAttributes:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  return v2;
}

id sub_1008648E0()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
  result = objc_msgSend(v0, "configureWithTransparentBackground");
  qword_10124DB40 = (uint64_t)v0;
  return result;
}

id sub_100864928()
{
  return sub_1001EB7B8(type metadata accessor for NavigationBar);
}

char *sub_10086497C(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  NSString v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR____TtC5Music43NavigationBarBottomPromptPaletteContentView_textLabel;
  v6 = v2;
  *(_QWORD *)&v2[v5] = sub_100864BAC();

  v13.receiver = v6;
  v13.super_class = ObjectType;
  v7 = (char *)objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC5Music43NavigationBarBottomPromptPaletteContentView_textLabel;
  v9 = *(void **)&v7[OBJC_IVAR____TtC5Music43NavigationBarBottomPromptPaletteContentView_textLabel];
  v10 = v7;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v11, swift_bridgeObjectRelease(a2).n128_f64[0]);

  objc_msgSend(v10, "addSubview:", *(_QWORD *)&v7[v8]);
  return v10;
}

id sub_100864BAC()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTextAlignment:", 1);
  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "secondaryLabelColor");
  objc_msgSend(v0, "setTextColor:", v2);

  v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v0, "setFont:", v3);

  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 0);
  v4 = v0;
  v5 = objc_msgSend(v1, "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  return v4;
}

id sub_100864D78()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGFloat MinX;
  double v11;
  double v12;
  CGFloat Width;
  double Height;
  objc_super v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v5 = v1;
  v6 = v2;
  v7 = v3;
  v8 = v4;
  if ((v0[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom + 8] & 1) == 0)
  {
    v9 = *(double *)&v0[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom];
    MinX = CGRectGetMinX(*(CGRect *)&v1);
    v17.origin.x = v5;
    v17.origin.y = v6;
    v17.size.width = v7;
    v17.size.height = v8;
    v11 = CGRectGetMaxY(v17) - v9;
    if (v11 > 0.0)
      v12 = v11;
    else
      v12 = 0.0;
    v18.origin.x = v5;
    v18.origin.y = v6;
    v18.size.width = v7;
    v18.size.height = v8;
    Width = CGRectGetWidth(v18);
    v19.origin.x = v5;
    v19.origin.y = v6;
    v19.size.width = v7;
    v19.size.height = v8;
    Height = CGRectGetHeight(v19);
    if (Height >= v9)
      v8 = v9;
    else
      v8 = Height;
    v7 = Width;
    v5 = MinX;
    v6 = v12;
  }
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_backgroundView], "setFrame:", v5, v6, v7, v8);
}

uint64_t UITraitCollection.navigationBarBackdropGroupName.getter()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "_valueForTraitNamed:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100065228((uint64_t)v5, (uint64_t)v6, &qword_10119DCC0);
  if (v7)
  {
    if ((swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      return v4;
  }
  else
  {
    sub_10004FF60((uint64_t)v6, &qword_10119DCC0);
  }
  return 0;
}

uint64_t type metadata accessor for NavigationController()
{
  return objc_opt_self(_TtC5Music20NavigationController);
}

uint64_t type metadata accessor for NavigationBar()
{
  return objc_opt_self(_TtC5Music13NavigationBar);
}

uint64_t type metadata accessor for NavigationBarBottomPromptPaletteContentView()
{
  return objc_opt_self(_TtC5Music43NavigationBarBottomPromptPaletteContentView);
}

uint64_t type metadata accessor for NavigationBarBackgroundContainerView()
{
  return objc_opt_self(_TtC5Music36NavigationBarBackgroundContainerView);
}

uint64_t type metadata accessor for NavigationBarBackgroundView()
{
  return objc_opt_self(_TtC5Music27NavigationBarBackgroundView);
}

uint64_t sub_100865234()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 33, 7);
}

uint64_t type metadata accessor for StatusBarVisualEffectAnimationCoordinator()
{
  return objc_opt_self(_TtC5MusicP33_5F12772E46B6F4A5BA52DC8B7884FA6041StatusBarVisualEffectAnimationCoordinator);
}

uint64_t storeEnumTagSinglePayload for StatusBarVisualEffectAnimationCoordinator.AppearanceState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1008652CC + 4 * byte_100ED3515[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100865300 + 4 * byte_100ED3510[v4]))();
}

uint64_t sub_100865300(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100865308(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100865310);
  return result;
}

uint64_t sub_10086531C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100865324);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100865328(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100865330(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StatusBarVisualEffectAnimationCoordinator.AppearanceState()
{
  return &type metadata for StatusBarVisualEffectAnimationCoordinator.AppearanceState;
}

unint64_t sub_100865350()
{
  unint64_t result;

  result = qword_1011CD080;
  if (!qword_1011CD080)
  {
    result = swift_getWitnessTable(&unk_100ED36BC, &type metadata for StatusBarVisualEffectAnimationCoordinator.AppearanceState);
    atomic_store(result, (unint64_t *)&qword_1011CD080);
  }
  return result;
}

uint64_t sub_100865394(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1001EBD80(&qword_1011CD088, a2, (uint64_t (*)(uint64_t))type metadata accessor for NavigationController, (uint64_t)&unk_100ED36F4);
  result = sub_1001EBD80((unint64_t *)&unk_1011CD090, v3, (uint64_t (*)(uint64_t))type metadata accessor for NavigationController, (uint64_t)&unk_100ED371C);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void sub_1008653F0(void *a1, id a2)
{
  id v3;
  id v4;
  id v5;

  v3 = objc_msgSend(a2, "horizontalSizeClass");
  v4 = objc_msgSend(a1, "traitCollection");
  v5 = objc_msgSend(v4, "horizontalSizeClass");

  if (v3 != v5)
    sub_100861754();
}

void sub_100865464(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  char *v18;
  id v19;
  double v20;
  double v21;
  id v22;
  id v23;
  char *v24;
  void *v25;
  void *v26;
  char *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  void *v35;
  NSString v36;
  id v37;
  id v38;
  id v39;
  _QWORD aBlock[6];

  v2 = v1;
  v39 = objc_msgSend(v2, "navigationBar");
  v4 = type metadata accessor for NavigationBar();
  if (!swift_dynamicCastClass(v39, v4))
    goto LABEL_15;
  v5 = objc_msgSend(v2, "existingPaletteForEdge:", 2);
  if (v5)
  {
    v6 = v5;
    if (a1)
      goto LABEL_4;
LABEL_8:
    if (v6)
      goto LABEL_9;
    goto LABEL_15;
  }
  v6 = *(id *)&v2[OBJC_IVAR____TtC5Music20NavigationController_existingTopPalette];
  v11 = v6;
  if (!a1)
    goto LABEL_8;
LABEL_4:
  v8 = sub_1008EBD9C();
  v9 = v7;
  if (!v6)
  {
    if (v7)
    {
      v17 = objc_allocWithZone((Class)type metadata accessor for NavigationBarBottomPromptPaletteContentView());
      swift_bridgeObjectRetain_n(v9, 2);
      v18 = sub_10086497C(v8, v9);
      v19 = objc_msgSend(v2, "navigationBar");
      objc_msgSend(v19, "bounds");
      v21 = v20;

      v22 = objc_msgSend(v2, "paletteForEdge:size:", 2, v21, 28.0);
      v37 = v22;
      if (v22)
      {
        v23 = v22;
        v24 = v18;
        sub_1008EBE84();
        v26 = v25;
        objc_msgSend(v25, "removeFromSuperview");

        v27 = v24;
        objc_msgSend(v27, "setTag:", 7453282);
        objc_msgSend(v23, "bounds");
        objc_msgSend(v27, "setFrame:");
        objc_msgSend(v27, "setAutoresizingMask:", 18);
        objc_msgSend(v23, "addSubview:", v27);

        v22 = v37;
      }
      objc_msgSend(v2, "attachPalette:isPinned:", v22, 1, v37);

      swift_bridgeObjectRelease_n(v9, 2);
      v28 = v38;
      goto LABEL_16;
    }
LABEL_15:
    v28 = v39;
LABEL_16:

    return;
  }
  if (v7)
  {
    v10 = 0;
    goto LABEL_19;
  }
LABEL_9:
  v6 = v6;
  objc_msgSend(v6, "setPinned:", 0);
  v12 = objc_msgSend(v2, "transitionCoordinator");
  if (v12)
  {
    v13 = v12;
    v14 = swift_allocObject(&unk_1010DED78, 32, 7);
    *(_QWORD *)(v14 + 16) = v2;
    *(_QWORD *)(v14 + 24) = v6;
    aBlock[4] = sub_1008669F0;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1005CE710;
    aBlock[3] = &unk_1010DED90;
    v15 = _Block_copy(aBlock);
    v6 = v6;
    v16 = v2;
    objc_msgSend(v13, "animateAlongsideTransition:completion:", 0, v15, swift_release().n128_f64[0]);

    _Block_release(v15);
    swift_unknownObjectRelease(v13);
  }
  else
  {
    objc_msgSend(v2, "detachPalette:", v6);

  }
  v9 = 0;
  v10 = 1;
LABEL_19:
  v29 = v6;
  sub_1008EBE84();
  v31 = v30;

  if (!v31)
  {
LABEL_24:

    swift_bridgeObjectRelease(v9);
    return;
  }
  v32 = type metadata accessor for NavigationBarBottomPromptPaletteContentView();
  v33 = swift_dynamicCastClass(v31, v32);
  if (!v33)
  {

    goto LABEL_24;
  }
  v35 = *(void **)(v33 + OBJC_IVAR____TtC5Music43NavigationBarBottomPromptPaletteContentView_textLabel);
  if ((v10 & 1) != 0)
  {
    v36 = 0;
  }
  else
  {
    v36 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v34 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }
  objc_msgSend(v35, "setText:", v36, v34);

}

char *sub_100865860(void *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  objc_class *v8;
  _BYTE *v9;
  id v10;
  id v11;
  Class isa;
  objc_class *v13;
  char *v14;
  char *v15;
  id v16;
  char *v17;
  objc_super v19;
  objc_super v20;
  uint64_t v21;

  v2 = sub_1008EBCB8();
  if (v2)
    return (char *)v2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA7A90;
  v6 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
  *(_QWORD *)(v5 + 32) = v6;
  v21 = v5;
  specialized Array._endMutation()(v6);
  v7 = v5;
  v8 = (objc_class *)type metadata accessor for NavigationBarBackgroundView();
  v9 = objc_allocWithZone(v8);
  v9[OBJC_IVAR____TtC5Music27NavigationBarBackgroundView_shouldUseTraitCollectionGroupName] = 1;
  v20.receiver = v9;
  v20.super_class = v8;
  v10 = objc_msgSendSuper2(&v20, "initWithEffect:", 0);
  sub_10004A07C(0, (unint64_t *)&unk_1011A8E70, UIVisualEffect_ptr);
  v11 = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v11, "setBackgroundEffects:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  objc_msgSend(v11, "setUserInteractionEnabled:", 0);
  v13 = (objc_class *)type metadata accessor for NavigationBarBackgroundContainerView();
  v14 = (char *)objc_allocWithZone(v13);
  v15 = &v14[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_backgroundView] = v11;
  v19.receiver = v14;
  v19.super_class = v13;
  v16 = v11;
  v17 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v17, "addSubview:", *(_QWORD *)&v17[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_backgroundView]);
  v3 = v17;
  objc_msgSend(v3, "setUserInteractionEnabled:", 0);
  if (qword_10119C9F8 != -1)
    swift_once(&qword_10119C9F8, sub_1008EC8AC);
  objc_setAssociatedObject(a1, (const void *)qword_1011CF420, v3, (void *)1);

  return v3;
}

void sub_100865A88(void *a1, char **a2, char a3)
{
  void *v3;
  char **v4;
  void *v5;
  id v9;
  void *v10;
  unsigned int v11;
  id v12;
  SEL *v13;
  uint64_t v14;
  uint64_t v15;
  char **v16;
  char **v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  SEL *v21;
  id v22;
  void *v23;
  char **v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  char v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  char **v38;
  id v39;
  id i;
  id v41;
  id v42;
  void *v43;
  id v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  char **v57;
  char **v58;
  char **v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  char **v64;
  id v65;
  id v66;
  char v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  _QWORD *v79;
  void *v80;
  char **v81;
  id v82;
  id v83;
  char **v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  double v88;
  char **v89;
  char **v90;
  char v91;
  void *v92;
  char **v93;
  id v94;
  id v95;
  uint64_t v96;
  void *v97;
  id v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  char v106;
  char *v107;
  char *v108;
  double v109;
  char v110;
  void *v111;
  char *v112;
  id v113;
  void *v114;
  char *v115;
  char *v116;
  char *v117;
  double v118;
  char *v119;
  uint64_t v120;
  char v121;
  char *v122;
  char v123;
  char **v124;
  char *v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  void *v130;
  void **v131;
  char v132;
  void *v133;
  void *v134;
  char **v135;
  SEL *v136;
  char v137;
  id v138;
  id v139;
  void *v140;
  void **aBlock;
  uint64_t v142;
  double (*v143)(uint64_t, uint64_t);
  void *v144;
  void *v145;
  _QWORD *v146;
  uint64_t v147;

  v5 = v3;
  if (objc_msgSend(v3, "isViewLoaded"))
  {
    v9 = objc_msgSend(v3, "view");
    if (!v9)
      goto LABEL_133;
    v10 = v9;
    v11 = objc_msgSend(v9, "_isInAWindow");

    if (!v11)
      return;
    v137 = a3;
    v4 = &selRef_referralObject;
    v12 = objc_msgSend(v5, "viewControllers");
    v13 = (SEL *)sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

    v15 = (uint64_t)&selRef_configuration;
    v140 = a1;
    v136 = v13;
    if (a2)
    {
      v16 = a2;
      swift_bridgeObjectRelease(v14);
      v17 = v16;
      goto LABEL_37;
    }
    aBlock = (void **)_swiftEmptyArrayStorage;
    if ((unint64_t)v14 >> 62)
      goto LABEL_25;
    v18 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    v19 = a1;
    if (!v18)
    {
LABEL_29:
      v33 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_30:
      swift_bridgeObjectRelease(v14);

      if (v33 < 0 || (v33 & 0x4000000000000000) != 0)
        goto LABEL_119;
      if (!*(_QWORD *)(v33 + 16))
        goto LABEL_120;
LABEL_33:
      if ((v33 & 0xC000000000000001) != 0)
      {
        v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
      }
      else
      {
        if (!*(_QWORD *)(v33 + 16))
        {
          __break(1u);
          goto LABEL_123;
        }
        v36 = *(id *)(v33 + 32);
      }
      v37 = v36;
      swift_release();
      v17 = v37;
      v16 = a2;
      a2 = (char **)v37;
LABEL_37:
      v38 = v16;

      v39 = objc_msgSend(v17, *(SEL *)(v15 + 3032));
      v15 = sub_1008EBAC8();

      for (i = objc_msgSend(v17, "traitCollection"); ; i = 0)
      {
        sub_100865464((uint64_t)a1);

        v14 = a2;
        v41 = objc_msgSend(v5, v4[487]);
        v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v41, v13);

        if ((unint64_t)v33 >> 62)
        {
          if (v33 < 0)
            v47 = v33;
          else
            v47 = v33 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v48 = _CocoaArrayWrapper.endIndex.getter(v47);
          swift_bridgeObjectRelease(v33);
          a1 = v140;
          if (!v48)
          {
LABEL_53:
            swift_bridgeObjectRelease(v33);
            if (a2)
              goto LABEL_54;
            goto LABEL_55;
          }
        }
        else
        {
          a1 = v140;
          if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_53;
        }
        if ((v33 & 0xC000000000000001) != 0)
          break;
        if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v42 = *(id *)(v33 + 32);
          goto LABEL_43;
        }
        __break(1u);
LABEL_119:
        if (_CocoaArrayWrapper.endIndex.getter(v33))
          goto LABEL_33;
LABEL_120:
        swift_release();
        v15 = 0;
        a2 = 0;
      }
      v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
LABEL_43:
      v43 = v42;
      swift_bridgeObjectRelease(v33);
      if (!a2)
      {
        if (v43)
        {

          v46 = 1;
          goto LABEL_57;
        }
LABEL_55:
        v46 = 1;
        goto LABEL_56;
      }
      if (!v43)
      {
LABEL_54:

        v46 = 0;
        goto LABEL_57;
      }
      v44 = (id)v14;
      v45 = static NSObject.== infix(_:_:)(v44, v43);

      a1 = v140;
      v46 = 0;
      if ((v45 & 1) == 0)
        goto LABEL_57;
LABEL_56:
      sub_100861754();
LABEL_57:
      v139 = objc_msgSend(v5, "navigationBar");
      v49 = type metadata accessor for NavigationBar();
      v50 = swift_dynamicCastClass(v139, v49);
      if (!v50
        || (v51 = (char *)v50,
            v52 = OBJC_IVAR____TtC5Music20NavigationController_isHandlingNavigationTransition,
            *((_BYTE *)v5 + OBJC_IVAR____TtC5Music20NavigationController_isHandlingNavigationTransition) == 1)
        && (v137 & 1) == 0)
      {

        return;
      }
      if (v15 & 1 | (a1 == 0))
      {
        v53 = 0;
        v54 = 1;
      }
      else
      {
        v53 = sub_1008EBBA4();
        v54 = v55 & 1;
      }
      v132 = v54;
      v131 = (void **)v53;
      v56 = OBJC_IVAR____TtC5Music13NavigationBar_musicTintColor;
      v4 = *(char ***)&v51[OBJC_IVAR____TtC5Music13NavigationBar_musicTintColor];
      if ((v15 & 1) != 0)
      {
        v57 = v4;
        v58 = v4;
      }
      else
      {
        v59 = v4;
        v58 = (char **)objc_msgSend(a1, "preferredNavigationBarTintColor");
      }
      v135 = v58;
      if ((v137 & 1) == 0)
      {
        v60 = objc_msgSend(v5, "transitionCoordinator");
        if (v60)
        {
          v134 = v5;
          v138 = v60;
          v61 = objc_msgSend(v60, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
          if (v61)
          {
            v62 = v61;
            v63 = objc_msgSend(v61, "navigationController");

            if (v63)
            {
              sub_10004A07C(0, (unint64_t *)&unk_1011AE1D0, UINavigationController_ptr);
              v64 = v4;
              v65 = v134;
              v66 = v63;
              v67 = static NSObject.== infix(_:_:)(v66, v65);

              v130 = v65;
              v4 = v64;
              if ((v67 & 1) != 0)
              {
                v68 = objc_msgSend(v138, "viewControllerForKey:", UITransitionContextToViewControllerKey);
                if (v68)
                {
                  v69 = v68;
                  v70 = objc_msgSend(v68, "navigationController");

                  if (v70)
                  {
                    v71 = v130;
                    v72 = v70;
                    v73 = static NSObject.== infix(_:_:)(v72, v71);

                    if ((v73 & 1) != 0)
                    {
                      *((_BYTE *)v134 + v52) = 1;
                      v74 = swift_allocObject(&unk_1010DEBC0, 24, 7);
                      *(_QWORD *)(v74 + 16) = _swiftEmptyArrayStorage;
                      v75 = swift_allocObject(&unk_1010DEBE8, 24, 7);
                      swift_unknownObjectWeakInit(v75 + 16, v71);
                      v76 = swift_allocObject(&unk_1010DEC10, 32, 7);
                      *(_QWORD *)(v76 + 16) = v75;
                      *(_QWORD *)(v76 + 24) = v138;
                      v145 = sub_1008668BC;
                      v146 = (_QWORD *)v76;
                      aBlock = _NSConcreteStackBlock;
                      v142 = 1107296256;
                      v143 = sub_1005CE710;
                      v144 = &unk_1010DEC28;
                      v77 = _Block_copy(&aBlock);
                      swift_unknownObjectRetain(v138, v78);
                      objc_msgSend(v138, "notifyWhenInteractionChangesUsingBlock:", v77, swift_release().n128_f64[0]);
                      _Block_release(v77);
                      v79 = (_QWORD *)swift_allocObject(&unk_1010DEC60, 56, 7);
                      v79[2] = v64;
                      v79[3] = v135;
                      v79[4] = v140;
                      v79[5] = v51;
                      v79[6] = v74;
                      v145 = sub_100866920;
                      v146 = v79;
                      aBlock = _NSConcreteStackBlock;
                      v142 = 1107296256;
                      v143 = sub_1005CE710;
                      v144 = &unk_1010DEC78;
                      v80 = _Block_copy(&aBlock);
                      v81 = v135;
                      v82 = v139;
                      swift_retain();
                      v83 = v140;
                      v84 = v64;
                      swift_release();
                      v85 = swift_allocObject(&unk_1010DEBE8, 24, 7);
                      swift_unknownObjectWeakInit(v85 + 16, v71);
                      v86 = swift_allocObject(&unk_1010DECB0, 32, 7);
                      *(_QWORD *)(v86 + 16) = v74;
                      *(_QWORD *)(v86 + 24) = v85;
                      v145 = sub_100866974;
                      v146 = (_QWORD *)v86;
                      aBlock = _NSConcreteStackBlock;
                      v5 = v134;
                      v142 = 1107296256;
                      v143 = sub_1005CE710;
                      v144 = &unk_1010DECC8;
                      v87 = _Block_copy(&aBlock);
                      swift_retain();
                      objc_msgSend(v138, "animateAlongsideTransition:completion:", v80, v87, swift_release().n128_f64[0]);
                      _Block_release(v87);
                      _Block_release(v80);
                      swift_unknownObjectRelease(v138);
                      *(_QWORD *)&v88 = swift_release().n128_u64[0];
                      v13 = (SEL *)&selRef_referralObject;
                      if ((v46 & 1) != 0)
                        goto LABEL_128;
                      goto LABEL_92;
                    }
                  }
                }
              }
            }
          }
          swift_unknownObjectRelease(v138);
          v5 = v134;
          v58 = v135;
        }
      }
      if (v4)
      {
        if (v58)
        {
          sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
          v89 = v4;
          v90 = v58;
          v91 = static NSObject.== infix(_:_:)(v89, v90);

          if ((v91 & 1) != 0)
            goto LABEL_84;
        }
      }
      else if (!v58)
      {
        goto LABEL_84;
      }
      v92 = *(void **)&v51[v56];
      *(_QWORD *)&v51[v56] = v58;
      v93 = v58;

      objc_msgSend(v51, "setTintColor:", v93);
LABEL_84:
      v94 = objc_msgSend(v51, "_backgroundView", v130);

      v13 = (SEL *)&selRef_referralObject;
      if (v94 && v140 && (v132 & 1) == 0)
      {
        aBlock = v131;
        v147 = 0;
        sub_1002A5BAC();
        v95 = v140;
        if ((static ApproximatelyComparable<>.<=~ infix(_:_:)(&aBlock, &v147) & 1) == 0)
        {
          v107 = sub_100865860(v95);
          v108 = &v107[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom];
          v109 = *(double *)&v107[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom];
          v110 = v107[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom + 8];
          *(_QWORD *)v108 = v131;
          v108[8] = 0;
          if ((v110 & 1) != 0
            || (aBlock = *(void ***)&v109,
                v147 = (uint64_t)v131,
                (static ApproximatelyEquatable.!=~ infix(_:_:)(&aBlock, &v147, &type metadata for CGFloat) & 1) != 0))
          {
            objc_msgSend(v107, "setNeedsLayout", v109);
          }
          v111 = *(void **)&v51[OBJC_IVAR____TtC5Music13NavigationBar_musicPartialBackgroundView];
          *(_QWORD *)&v51[OBJC_IVAR____TtC5Music13NavigationBar_musicPartialBackgroundView] = v107;
          v112 = v107;
          sub_100864430(v111);

          v13 = (SEL *)&selRef_referralObject;
          if ((v46 & 1) != 0)
            goto LABEL_128;
          goto LABEL_92;
        }

      }
      v96 = OBJC_IVAR____TtC5Music13NavigationBar_musicPartialBackgroundView;
      v97 = *(void **)&v51[OBJC_IVAR____TtC5Music13NavigationBar_musicPartialBackgroundView];
      if (v97)
      {
        v98 = v97;
        objc_msgSend(v98, "removeFromSuperview");
        v99 = *(void **)&v51[v96];
        *(_QWORD *)&v51[v96] = 0;
        sub_100864430(v99);

      }
      if ((v46 & 1) != 0)
        goto LABEL_128;
LABEL_92:
      v100 = objc_msgSend((id)v14, "navigationController", v88, v130);
      if (!v100)
      {
LABEL_128:
        v129 = sub_1008612D0();
        objc_msgSend(v129, v13[9]);

        *((_BYTE *)v5 + OBJC_IVAR____TtC5Music20NavigationController_isHostingExtaStatusBar) = 0;
        goto LABEL_129;
      }
      v101 = v100;
      v102 = objc_msgSend(v100, "viewControllers");

      v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v102, v136);
      if (!((unint64_t)v33 >> 62))
      {
        if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_95:
          if ((v33 & 0xC000000000000001) != 0)
          {
            v103 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
            goto LABEL_98;
          }
          if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v103 = *(id *)(v33 + 32);
LABEL_98:
            v104 = v103;
            v105 = objc_msgSend(v103, "navigationItem", swift_bridgeObjectRelease(v33).n128_f64[0]);
            v106 = sub_1008EBAC8();

            if ((v106 & 1) == 0 || (objc_msgSend(v5, "_isInPopoverPresentation") & 1) != 0)
            {

              goto LABEL_128;
            }
            v113 = objc_msgSend(v104, "view");
            if (v113)
            {
              v114 = v113;
              v115 = sub_1008612D0();
              objc_msgSend(v114, "addSubview:", v115);

              v116 = sub_1008612D0();
              sub_100861198((uint64_t)v116);

              v117 = sub_1008612D0();
              v119 = v117;
              if (v140)
              {
                v120 = sub_1008EBBC0();
                v122 = &v119[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom];
                v118 = *(double *)&v119[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom];
                v123 = v119[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom + 8];
                *(_QWORD *)v122 = v120;
                v122[8] = v121 & 1;
                v124 = v135;
                if ((v123 & 1) != 0)
                {
                  if ((v121 & 1) != 0)
                    goto LABEL_116;
                }
                else if ((v121 & 1) == 0)
                {
                  aBlock = *(void ***)&v118;
                  v147 = v120;
                  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&aBlock, &v147, &type metadata for CGFloat) & 1) == 0)
                    goto LABEL_116;
                }
              }
              else
              {
                v125 = &v117[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom];
                v126 = v117[OBJC_IVAR____TtC5Music36NavigationBarBackgroundContainerView_visibleBackgroundBottom + 8];
                *(_QWORD *)v125 = 0;
                v125[8] = 1;
                v124 = v135;
                if ((v126 & 1) != 0)
                  goto LABEL_116;
              }
              objc_msgSend(v119, "setNeedsLayout", v118);
LABEL_116:

              *((_BYTE *)v5 + OBJC_IVAR____TtC5Music20NavigationController_isHostingExtaStatusBar) = 1;
LABEL_129:

              return;
            }
LABEL_134:

            __break(1u);
            return;
          }
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
LABEL_127:
        swift_bridgeObjectRelease(v33);
        goto LABEL_128;
      }
LABEL_123:
      if (v33 < 0)
        v127 = v33;
      else
        v127 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v128 = _CocoaArrayWrapper.endIndex.getter(v127);
      swift_bridgeObjectRelease(v33);
      if (v128)
        goto LABEL_95;
      goto LABEL_127;
    }
LABEL_8:
    v133 = v5;
    v135 = a2;
    v20 = 0;
    v5 = (void *)(v14 & 0xC000000000000001);
    v4 = (char **)(v14 & 0xFFFFFFFFFFFFFF8);
    v139 = (id)v14;
    while (1)
    {
      if (v5)
      {
        v21 = (SEL *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v14);
      }
      else
      {
        if (v20 >= (unint64_t)v4[2])
          goto LABEL_24;
        v21 = (SEL *)*(id *)(v14 + 8 * v20 + 32);
      }
      v13 = v21;
      a2 = (char **)(v20 + 1);
      if (__OFADD__(v20, 1))
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        if (v14 < 0)
          v34 = v14;
        else
          v34 = v14 & 0xFFFFFFFFFFFFFF8;
        v35 = a1;
        v18 = _CocoaArrayWrapper.endIndex.getter(v34);
        if (!v18)
          goto LABEL_29;
        goto LABEL_8;
      }
      v22 = objc_msgSend(v21, *(SEL *)(v15 + 3032));
      if (v22)
      {
        v23 = v22;
        if (!a1)
        {

          goto LABEL_11;
        }
        sub_10004A07C(0, (unint64_t *)&unk_1011CD110, UINavigationItem_ptr);
        v24 = v4;
        v25 = v5;
        v26 = v18;
        v27 = a1;
        v28 = v23;
        v15 = 0x101167000;
        v29 = static NSObject.== infix(_:_:)(v28, v27);

        a1 = v140;
        v18 = v26;
        v5 = v25;
        v4 = v24;
        v14 = (uint64_t)v139;
        if ((v29 & 1) != 0)
        {
LABEL_19:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v22);
          v30 = aBlock[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v30);
          v31 = v30;
          a1 = v140;
          v32 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v13);
          specialized ContiguousArray._endMutation()(v32);
          goto LABEL_11;
        }
      }
      else if (!a1)
      {
        goto LABEL_19;
      }

LABEL_11:
      ++v20;
      if (a2 == (char **)v18)
      {
        v33 = (uint64_t)aBlock;
        v5 = v133;
        a2 = v135;
        v4 = &selRef_referralObject;
        v13 = v136;
        goto LABEL_30;
      }
    }
  }
}

uint64_t sub_100866868()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10086688C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_1008668B0()
{
  return sub_10086693C((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

void sub_1008668BC(void *a1)
{
  uint64_t v1;

  sub_100863070(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1008668C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1008668D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1008668DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100866920(uint64_t a1)
{
  uint64_t v1;

  sub_10086327C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(char **)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100866930()
{
  return sub_10086693C((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10086693C(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

void sub_100866974(uint64_t a1)
{
  uint64_t v1;

  sub_100863604(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10086697C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1008669A8()
{
  uint64_t v0;

  sub_100863484(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_1008669B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008669C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1008669F0(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  const char *v4;
  void *v5;
  uint64_t v6;

  v3 = *(void **)(v1 + 16);
  v2 = *(void **)(v1 + 24);
  if ((objc_msgSend(a1, "isCancelled") & 1) != 0)
  {
    v4 = "setPinned:";
    v5 = v2;
    v6 = 1;
  }
  else
  {
    v4 = "detachPalette:";
    v5 = v3;
    v6 = (uint64_t)v2;
  }
  return objc_msgSend(v5, v4, v6);
}

void sub_100866A54(void *a1, char a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  void (*v6)(id, __n128);
  uint64_t v7;
  __n128 v8;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC5Music20NavigationController_overrideNavigationBarPropertiesTopViewController);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music20NavigationController_overrideNavigationBarPropertiesTopViewController) = a1;
  v5 = a1;

  sub_10086147C(v5, a2);
  v6 = *(void (**)(id, __n128))(v2 + OBJC_IVAR____TtC5Music20NavigationController_onWillShowViewController);
  if (v6)
  {
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music20NavigationController_onWillShowViewController + 8);
    v8 = swift_retain();
    v6(v5, v8);
    sub_10004BA30((uint64_t)v6, v7);
  }
}

void sub_100866AE0(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  id v10;
  void *v11;
  char *v12;
  void (*v13)(void *, __n128);
  uint64_t v14;
  __n128 v15;

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Music20NavigationController_overrideNavigationBarPropertiesTopViewController;
  v5 = *(void **)&v1[OBJC_IVAR____TtC5Music20NavigationController_overrideNavigationBarPropertiesTopViewController];
  if (v5)
  {
    sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v6 = a1;
    v7 = v5;
    v8 = static NSObject.== infix(_:_:)(v6, v7);

    if ((v8 & 1) != 0)
    {
      v9 = *(void **)&v2[v4];
      *(_QWORD *)&v2[v4] = 0;

    }
  }
  v10 = objc_msgSend(v2, "existingPaletteForEdge:", 2);
  v11 = *(void **)&v2[OBJC_IVAR____TtC5Music20NavigationController_existingTopPalette];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music20NavigationController_existingTopPalette] = v10;

  v2[OBJC_IVAR____TtC5Music20NavigationController_isPoppingViewController] = 0;
  v12 = &v2[OBJC_IVAR____TtC5Music20NavigationController_onDidShowViewController];
  v13 = *(void (**)(void *, __n128))&v2[OBJC_IVAR____TtC5Music20NavigationController_onDidShowViewController];
  if (v13)
  {
    v14 = *((_QWORD *)v12 + 1);
    v15 = swift_retain();
    v13(a1, v15);
    sub_10004BA30((uint64_t)v13, v14);
  }
}

void sub_100866BF4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v4 = type metadata accessor for NavigationBar();
  v5 = swift_dynamicCastClass(a1, v4);
  if (v5)
  {
    v6 = (char *)v5;
    v7 = a1;
    v8 = objc_msgSend(v6, "topItem");
    if (v8)
    {
      v9 = v8;
      KeyPath = swift_getKeyPath(&unk_100ED37A0);
      v11 = swift_allocObject(&unk_1010DEDC8, 24, 7);
      swift_unknownObjectWeakInit(v11 + 16);
      v12 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, a2, v11, &protocol witness table for NSObject);
      swift_release();
      swift_release();
      v13 = *(void **)&v6[OBJC_IVAR____TtC5Music13NavigationBar_topItemPreferredNavigationBarTintColorObserver];
      *(_QWORD *)&v6[OBJC_IVAR____TtC5Music13NavigationBar_topItemPreferredNavigationBarTintColorObserver] = v12;

    }
    else
    {
      v14 = *(id *)&v6[OBJC_IVAR____TtC5Music13NavigationBar_topItemPreferredNavigationBarTintColorObserver];
      *(_QWORD *)&v6[OBJC_IVAR____TtC5Music13NavigationBar_topItemPreferredNavigationBarTintColorObserver] = 0;

    }
  }
}

const char *sub_100866D34()
{
  return "preferredNavigationBarTintColor";
}

id sub_100866D40@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "preferredNavigationBarTintColor");
  *a2 = result;
  return result;
}

id sub_100866D78(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setPreferredNavigationBarTintColor:", *a1);
}

double sub_100866D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1008645AC(a1, a2, v2);
}

void sub_100866D94(void *a1)
{
  uint64_t v1;

  sub_100862E20(a1, v1);
}

void sub_100866D9C()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = &v0[OBJC_IVAR____TtC5Music20NavigationController_onWillShowViewController];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC5Music20NavigationController_onDidShowViewController];
  *v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR____TtC5Music20NavigationController_isPoppingViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20NavigationController_overrideNavigationBarPropertiesTopViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20NavigationController_existingTopPalette] = 0;
  v0[OBJC_IVAR____TtC5Music20NavigationController_isHandlingNavigationTransition] = 0;
  v0[OBJC_IVAR____TtC5Music20NavigationController_isHostingExtaStatusBar] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20NavigationController_statusBarEffectViewAnimationCoordinator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20NavigationController____lazy_storage___statusBarEffectView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/NavigationController.swift", 32, 2, 32, 0);
  __break(1u);
}

_QWORD *sub_100866E98(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  __n128 v60;
  void (*v61)(char *, uint64_t, __n128);
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82[2];

  v2 = v1;
  v80 = a1;
  v3 = type metadata accessor for TVSeason(0);
  v65 = *(_QWORD *)(v3 - 8);
  v66 = v3;
  __chkstk_darwin(v3);
  v64 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TVEpisode(0);
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  __chkstk_darwin(v5);
  v67 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicVideo(0);
  v76 = *(_QWORD *)(v7 - 8);
  v77 = v7;
  __chkstk_darwin(v7);
  v75 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicMovie(0);
  v78 = *(_QWORD *)(v9 - 8);
  v79 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Song(0);
  v71 = *(_QWORD *)(v12 - 8);
  v72 = v12;
  __chkstk_darwin(v12);
  v70 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Playlist(0);
  v73 = *(_QWORD *)(v14 - 8);
  v74 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Album(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for GenericMusicItem(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v62 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v62 - v26;
  v28 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16);
  v63 = v2;
  v28((char *)&v62 - v26, v2, v21, v25);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v27, v21);
  if ((_DWORD)v29 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v27, v21);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v27, v17);
    v30 = sub_100868984(v80);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    return (_QWORD *)v30;
  }
  v31 = v29;
  v32 = v80;
  if ((_DWORD)v29 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v27, v21);
    v34 = v78;
    v33 = v79;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v11, v27, v79);
    v30 = sub_100869764(v32, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (unsigned int *)&enum case for GenericMusicItem.musicMovie(_:), &qword_10119D3A8, (uint64_t)&protocol conformance descriptor for MusicMovie);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v33);
    return (_QWORD *)v30;
  }
  if ((_DWORD)v29 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v27, v21);
    v35 = v75;
    v36 = v76;
    v37 = v77;
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v27, v77);
    v38 = sub_100868D08(v32);
LABEL_13:
    v30 = v38;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
    return (_QWORD *)v30;
  }
  if ((_DWORD)v29 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v27, v21);
    v40 = v73;
    v39 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v16, v27, v74);
    v30 = sub_100869080(v32);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v39);
    return (_QWORD *)v30;
  }
  if ((_DWORD)v29 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v27, v21);
    v35 = v70;
    v36 = v71;
    v37 = v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v27, v72);
    v38 = sub_1008693E0(v32);
    goto LABEL_13;
  }
  v41 = v21;
  if ((_DWORD)v29 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v27, v21);
    v35 = v67;
    v36 = v68;
    v37 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v67, v27, v69);
    v38 = sub_100869764(v32, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (unsigned int *)&enum case for GenericMusicItem.tvEpisode(_:), &qword_1011A0388, (uint64_t)&protocol conformance descriptor for TVEpisode);
    goto LABEL_13;
  }
  if ((_DWORD)v29 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v27, v21);
    v44 = v64;
    v43 = v65;
    v45 = v66;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v64, v27, v66);
    v46 = sub_100007E8C(&qword_1011AE068);
    v30 = swift_allocObject(v46, 72, 7);
    *(_OWORD *)(v30 + 16) = xmmword_100EA7AA0;
    v47 = type metadata accessor for DragDropToLibrary(0);
    *(_QWORD *)(v30 + 56) = v47;
    *(_QWORD *)(v30 + 64) = sub_100048748(&qword_1011BEFC8, type metadata accessor for DragDropToLibrary, (uint64_t)&unk_100EC6070);
    v48 = sub_100049F68((_QWORD *)(v30 + 32));
    (*(void (**)(_QWORD *, char *, uint64_t))(v43 + 16))(v48, v44, v45);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v22 + 104))(v48, v31, v41);
    *((_BYTE *)v48 + *(int *)(v47 + 20)) = 0;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  }
  else
  {
    if (qword_10119B910 != -1)
      swift_once(&qword_10119B910, sub_1000FC88C);
    v49 = type metadata accessor for Logger(0);
    sub_100048B14(v49, (uint64_t)qword_10124C858);
    v50 = v62;
    v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v62, v63, v21);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.default.getter(v52);
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc(12, -1);
      v55 = swift_slowAlloc(32, -1);
      v82[0] = v55;
      *(_DWORD *)v54 = 136446210;
      v80 = v54 + 4;
      v56 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
      v57 = dispatch thunk of CustomStringConvertible.description.getter(v41, v56);
      v59 = v58;
      v81 = sub_100322200(v57, v58, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82);
      v60 = swift_bridgeObjectRelease(v59);
      v61 = *(void (**)(char *, uint64_t, __n128))(v22 + 8);
      v61(v50, v41, v60);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "No drop intents provided for GenericMusicItem: %{public}s", v54, 0xCu);
      swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);
    }
    else
    {
      v61 = *(void (**)(char *, uint64_t, __n128))(v22 + 8);
      ((void (*)(char *, uint64_t))v61)(v50, v41);
    }

    ((void (*)(char *, uint64_t))v61)(v27, v41);
    return _swiftEmptyArrayStorage;
  }
  return (_QWORD *)v30;
}

uint64_t sub_1008675C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;

  v4 = v3;
  v45 = a3;
  v7 = type metadata accessor for MusicVideo(0);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Track(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v18, v4, v14, v16);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v18, v14);
  if (v19 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v18, v14);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v18, v10);
    v20 = sub_1008693E0(a1);
    swift_bridgeObjectRetain();
    v21 = sub_100869D18(v20, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = sub_10047D540((uint64_t)v21);
    swift_bridgeObjectRelease();
    v23 = type metadata accessor for DragItem(0);
    v24 = v45;
    v25 = (char *)v45 + *(int *)(v23 + 20);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v13, v10);
    v26 = enum case for GenericMusicItem.song(_:);
    v27 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
    v28 = type metadata accessor for DragItem.Source(0);
    swift_storeEnumTagMultiPayload(v25, v28, 1);
    *v24 = v22;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v24, 0, 1, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v30 = v45;
    if (v19 == enum case for Track.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v15 + 96))(v18, v14);
      v31 = v43;
      v14 = v44;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v9, v18, v44);
      v32 = sub_100868D08(a1);
      swift_bridgeObjectRetain();
      v33 = sub_100869D18(v32, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = sub_10047D540((uint64_t)v33);
      swift_bridgeObjectRelease();
      v35 = type metadata accessor for DragItem(0);
      v36 = (char *)v30 + *(int *)(v35 + 20);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v36, v9, v14);
      v37 = enum case for GenericMusicItem.musicVideo(_:);
      v38 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
      v39 = type metadata accessor for DragItem.Source(0);
      swift_storeEnumTagMultiPayload(v36, v39, 1);
      *v30 = v34;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v30, 0, 1, v35);
      v40 = *(uint64_t (**)(char *, uint64_t))(v31 + 8);
      v41 = v9;
    }
    else
    {
      v42 = type metadata accessor for DragItem(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v30, 1, 1, v42);
      v40 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
      v41 = v18;
    }
    return v40(v41, v14);
  }
}

uint64_t sub_100867964@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  int v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t);
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  unsigned int *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;

  v4 = v3;
  v83 = a1;
  v7 = type metadata accessor for UploadedVideo(0);
  v73 = *(_QWORD *)(v7 - 8);
  v74 = v7;
  __chkstk_darwin(v7);
  v72 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicMovie(0);
  v81 = *(_QWORD *)(v9 - 8);
  v82 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicVideo(0);
  v79 = *(_QWORD *)(v12 - 8);
  v80 = v12;
  __chkstk_darwin(v12);
  v78 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Playlist(0);
  v76 = *(_QWORD *)(v14 - 8);
  v77 = v14;
  __chkstk_darwin(v14);
  v75 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Album(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for RecentlyAddedMusicItem(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v21 + 16))(v24, v4, v20, v22);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v24, v20);
  if (v25 == enum case for RecentlyAddedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v24, v16);
    v26 = sub_100868984(v83);
    swift_bridgeObjectRetain();
    v27 = sub_100869D18(v26, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = sub_10047D540((uint64_t)v27);
    swift_bridgeObjectRelease();
    v29 = type metadata accessor for DragItem(0);
    v30 = (char *)a3 + *(int *)(v29 + 20);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v30, v19, v16);
    v31 = enum case for GenericMusicItem.album(_:);
    v32 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v30, v31, v32);
    v33 = type metadata accessor for DragItem.Source(0);
    swift_storeEnumTagMultiPayload(v30, v33, 1);
    *a3 = v28;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a3, 0, 1, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  v35 = v83;
  if (v25 != enum case for RecentlyAddedMusicItem.musicMovie(_:))
  {
    v48 = a3;
    if (v25 == enum case for RecentlyAddedMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
      v50 = v78;
      v49 = v79;
      v36 = v80;
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v24, v80);
      v51 = sub_100868D08(v35);
      swift_bridgeObjectRetain();
      v52 = sub_100869D18(v51, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v53 = sub_10047D540((uint64_t)v52);
      swift_bridgeObjectRelease();
      v54 = type metadata accessor for DragItem(0);
      v55 = (char *)v48 + *(int *)(v54 + 20);
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v55, v50, v36);
      v56 = (unsigned int *)&enum case for GenericMusicItem.musicVideo(_:);
    }
    else
    {
      if (v25 != enum case for RecentlyAddedMusicItem.playlist(_:))
      {
        if (v25 == enum case for RecentlyAddedMusicItem.tvSeason(_:)
          || v25 != enum case for RecentlyAddedMusicItem.uploadedVideo(_:))
        {
          v70 = type metadata accessor for DragItem(0);
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(a3, 1, 1, v70);
          return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v20);
        }
        (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
        v50 = v72;
        v49 = v73;
        v36 = v74;
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v72, v24, v74);
        v62 = sub_100869A70(v35, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (unsigned int *)&enum case for GenericMusicItem.uploadedVideo(_:), &qword_10119E0A0, (uint64_t)&protocol conformance descriptor for UploadedVideo);
        swift_bridgeObjectRetain();
        v63 = sub_100869D18(v62, a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v64 = sub_10047D540((uint64_t)v63);
        swift_bridgeObjectRelease();
        v65 = type metadata accessor for DragItem(0);
        v66 = (char *)v48 + *(int *)(v65 + 20);
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v66, v50, v36);
        v67 = enum case for GenericMusicItem.uploadedVideo(_:);
        v68 = type metadata accessor for GenericMusicItem(0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 104))(v66, v67, v68);
        v69 = type metadata accessor for DragItem.Source(0);
        swift_storeEnumTagMultiPayload(v66, v69, 1);
        *v48 = v64;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v48, 0, 1, v65);
        goto LABEL_10;
      }
      (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
      v50 = v75;
      v49 = v76;
      v36 = v77;
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v24, v77);
      v57 = sub_100869080(v35);
      swift_bridgeObjectRetain();
      v58 = sub_100869D18(v57, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v53 = sub_10047D540((uint64_t)v58);
      swift_bridgeObjectRelease();
      v54 = type metadata accessor for DragItem(0);
      v55 = (char *)v48 + *(int *)(v54 + 20);
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v55, v50, v36);
      v56 = (unsigned int *)&enum case for GenericMusicItem.playlist(_:);
    }
    v59 = *v56;
    v60 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 104))(v55, v59, v60);
    v61 = type metadata accessor for DragItem.Source(0);
    swift_storeEnumTagMultiPayload(v55, v61, 1);
    *v48 = v53;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v48, 0, 1, v54);
LABEL_10:
    v46 = *(uint64_t (**)(char *, uint64_t))(v49 + 8);
    v47 = v50;
    return v46(v47, v36);
  }
  (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
  v37 = v81;
  v36 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v11, v24, v82);
  v38 = sub_100869764(v35, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (unsigned int *)&enum case for GenericMusicItem.musicMovie(_:), &qword_10119D3A8, (uint64_t)&protocol conformance descriptor for MusicMovie);
  swift_bridgeObjectRetain();
  v39 = sub_100869D18(v38, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = sub_10047D540((uint64_t)v39);
  swift_bridgeObjectRelease();
  v41 = type metadata accessor for DragItem(0);
  v42 = (char *)a3 + *(int *)(v41 + 20);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v42, v11, v36);
  v43 = enum case for GenericMusicItem.musicMovie(_:);
  v44 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v42, v43, v44);
  v45 = type metadata accessor for DragItem.Source(0);
  swift_storeEnumTagMultiPayload(v42, v45, 1);
  *a3 = v40;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(a3, 0, 1, v41);
  v46 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
  v47 = v11;
  return v46(v47, v36);
}

uint64_t sub_10086810C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unsigned int *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  _QWORD *v91;

  v90 = a1;
  v91 = a3;
  v4 = type metadata accessor for UploadedVideo(0);
  v81 = *(_QWORD *)(v4 - 8);
  v82 = v4;
  __chkstk_darwin(v4);
  v80 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TVEpisode(0);
  v84 = *(_QWORD *)(v6 - 8);
  v85 = v6;
  __chkstk_darwin(v6);
  v83 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicMovie(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for MusicVideo(0);
  v12 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Song(0);
  v87 = *(_QWORD *)(v15 - 8);
  v88 = v15;
  __chkstk_darwin(v15);
  v86 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.Entry.internalItem.getter(v21);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v22 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v20, v8);
    v23 = sub_100869764(v90, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (unsigned int *)&enum case for GenericMusicItem.musicMovie(_:), &qword_10119D3A8, (uint64_t)&protocol conformance descriptor for MusicMovie);
    swift_bridgeObjectRetain();
    v24 = sub_100869D18(v23, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = sub_10047D540((uint64_t)v24);
    swift_bridgeObjectRelease();
    v26 = type metadata accessor for DragItem(0);
    v27 = v91;
    v28 = (char *)v91 + *(int *)(v26 + 20);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v28, v11, v8);
    v29 = enum case for GenericMusicItem.musicMovie(_:);
    v30 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v28, v29, v30);
    v31 = type metadata accessor for DragItem.Source(0);
    swift_storeEnumTagMultiPayload(v28, v31, 1);
    *v27 = v25;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v27, 0, 1, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v34 = v90;
  v33 = v91;
  if (v22 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    v35 = v89;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v20, v89);
    v36 = sub_100868D08(v34);
    swift_bridgeObjectRetain();
    v37 = sub_100869D18(v36, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = sub_10047D540((uint64_t)v37);
    swift_bridgeObjectRelease();
    v39 = type metadata accessor for DragItem(0);
    v40 = (char *)v33 + *(int *)(v39 + 20);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v40, v14, v35);
    v41 = enum case for GenericMusicItem.musicVideo(_:);
    v42 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v40, v41, v42);
    v43 = type metadata accessor for DragItem.Source(0);
    swift_storeEnumTagMultiPayload(v40, v43, 1);
    *v33 = v38;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v33, 0, 1, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v35);
  }
  v44 = a2;
  if (v22 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    v46 = v86;
    v45 = v87;
    v47 = v88;
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v20, v88);
    v48 = sub_1008693E0(v34);
    swift_bridgeObjectRetain();
    v49 = sub_100869D18(v48, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v50 = sub_10047D540((uint64_t)v49);
    swift_bridgeObjectRelease();
    v51 = type metadata accessor for DragItem(0);
    v52 = (char *)v33 + *(int *)(v51 + 20);
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v52, v46, v47);
    v53 = enum case for GenericMusicItem.song(_:);
    v54 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v52, v53, v54);
    v55 = type metadata accessor for DragItem.Source(0);
    swift_storeEnumTagMultiPayload(v52, v55, 1);
    *v33 = v50;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v33, 0, 1, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  }
  if (v22 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    v57 = v83;
    v56 = v84;
    v58 = v85;
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v83, v20, v85);
    v59 = (unsigned int *)&enum case for GenericMusicItem.tvEpisode(_:);
    v60 = sub_100869764(v34, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (unsigned int *)&enum case for GenericMusicItem.tvEpisode(_:), &qword_1011A0388, (uint64_t)&protocol conformance descriptor for TVEpisode);
  }
  else
  {
    if (v22 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
    {
      (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
      v61 = type metadata accessor for DragItem(0);
      v62 = (char *)v33 + *(int *)(v61 + 20);
      v63 = type metadata accessor for UploadedAudio(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v62, v20, v63);
      v64 = sub_100869A70(v34, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (unsigned int *)&enum case for GenericMusicItem.uploadedAudio(_:), &qword_1011B9600, (uint64_t)&protocol conformance descriptor for UploadedAudio);
      swift_bridgeObjectRetain();
      v65 = sub_100869D18(v64, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v66 = sub_10047D540((uint64_t)v65);
      swift_bridgeObjectRelease();
      v67 = enum case for GenericMusicItem.uploadedAudio(_:);
      v68 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 104))(v62, v67, v68);
      v69 = type metadata accessor for DragItem.Source(0);
      swift_storeEnumTagMultiPayload(v62, v69, 1);
      *v33 = v66;
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v33, 0, 1, v61);
    }
    if (v22 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
    {
      v78 = type metadata accessor for DragItem(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v33, 1, 1, v78);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    v57 = v80;
    v56 = v81;
    v58 = v82;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, v20, v82);
    v59 = (unsigned int *)&enum case for GenericMusicItem.uploadedVideo(_:);
    v60 = sub_100869A70(v34, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (unsigned int *)&enum case for GenericMusicItem.uploadedVideo(_:), &qword_10119E0A0, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  }
  v70 = v60;
  swift_bridgeObjectRetain();
  v71 = sub_100869D18(v70, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v72 = sub_10047D540((uint64_t)v71);
  swift_bridgeObjectRelease();
  v73 = type metadata accessor for DragItem(0);
  v74 = (char *)v33 + *(int *)(v73 + 20);
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v74, v57, v58);
  v75 = *v59;
  v76 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 104))(v74, v75, v76);
  v77 = type metadata accessor for DragItem.Source(0);
  swift_storeEnumTagMultiPayload(v74, v77, 1);
  *v33 = v72;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v33, 0, 1, v73);
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v57, v58);
}

uint64_t sub_100868984(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v33 = a1;
  v3 = type metadata accessor for Album(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v32 = (char *)&v29 - v7;
  v31 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  __chkstk_darwin(v31);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for DragDropToQueue.Origin(0);
  __chkstk_darwin(v34);
  v36 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011AE068);
  v12 = swift_allocObject(v11, 152, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EA7AC0;
  v13 = type metadata accessor for DragDropToLibrary(0);
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = sub_100048748(&qword_1011BEFC8, type metadata accessor for DragDropToLibrary, (uint64_t)&unk_100EC6070);
  v14 = (char *)sub_100049F68((_QWORD *)(v12 + 32));
  v35 = v4;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v15(v14, v1, v3);
  v16 = enum case for GenericMusicItem.album(_:);
  v17 = type metadata accessor for GenericMusicItem(0);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104);
  v18(v14, v16, v17);
  v14[*(int *)(v13 + 20)] = 0;
  *(_QWORD *)(v12 + 96) = &type metadata for DragDropToPlaylist;
  *(_QWORD *)(v12 + 104) = sub_1007E4FAC();
  v19 = swift_allocObject(&unk_1010DEF18, 65, 7);
  *(_QWORD *)(v12 + 72) = v19;
  *(_QWORD *)(v19 + 40) = v3;
  *(_QWORD *)(v19 + 48) = &protocol witness table for Album;
  *(_QWORD *)(v19 + 56) = &protocol witness table for Album;
  v20 = (char *)sub_100049F68((_QWORD *)(v19 + 16));
  v15(v20, v2, v3);
  *(_BYTE *)(v19 + 64) = 1;
  v15(v9, v2, v3);
  v18(v9, v16, v17);
  v21 = v32;
  swift_storeEnumTagMultiPayload(v9, v31, 1);
  v15(v21, v2, v3);
  if (v33)
  {
    v22 = *(void (**)(char *, uint64_t))(v35 + 8);
    v23 = v33;
  }
  else
  {
    sub_1000E3E80();
    v24 = v30;
    v15(v30, (uint64_t)v21, v3);
    v23 = (id)MPCPlaybackIntent.init<A>(_:)(v24, v3, &protocol witness table for Album);
    v22 = *(void (**)(char *, uint64_t))(v35 + 8);
  }
  v22(v21, v3);
  v25 = v36;
  sub_10005B6C0((uint64_t)v9, v36, type metadata accessor for DragDropToQueue.Origin.Item);
  *(_QWORD *)(v25 + *(int *)(v34 + 20)) = v23;
  v26 = type metadata accessor for DragDropToQueue(0);
  *(_QWORD *)(v12 + 136) = v26;
  *(_QWORD *)(v12 + 144) = sub_100048748(&qword_1011CB328, type metadata accessor for DragDropToQueue, (uint64_t)&unk_100ED2094);
  v27 = sub_100049F68((_QWORD *)(v12 + 112));
  sub_10005B6C0(v25, (uint64_t)v27, type metadata accessor for DragDropToQueue.Origin);
  *((_BYTE *)v27 + *(int *)(v26 + 20)) = 2;
  return v12;
}

uint64_t sub_100868CE4(void *a1)
{
  return sub_100869764(a1, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (unsigned int *)&enum case for GenericMusicItem.musicMovie(_:), &qword_10119D3A8, (uint64_t)&protocol conformance descriptor for MusicMovie);
}

uint64_t sub_100868D08(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v34 = a1;
  v3 = type metadata accessor for MusicVideo(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v33 = (char *)&v30 - v7;
  v32 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  __chkstk_darwin(v32);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for DragDropToQueue.Origin(0);
  __chkstk_darwin(v35);
  v37 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011AE068);
  v12 = swift_allocObject(v11, 152, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EA7AC0;
  v13 = type metadata accessor for DragDropToLibrary(0);
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = sub_100048748(&qword_1011BEFC8, type metadata accessor for DragDropToLibrary, (uint64_t)&unk_100EC6070);
  v14 = (char *)sub_100049F68((_QWORD *)(v12 + 32));
  v36 = v4;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v15(v14, v2, v3);
  v16 = enum case for GenericMusicItem.musicVideo(_:);
  v17 = type metadata accessor for GenericMusicItem(0);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104);
  v18(v14, v16, v17);
  v14[*(int *)(v13 + 20)] = 0;
  *(_QWORD *)(v12 + 96) = &type metadata for DragDropToPlaylist;
  *(_QWORD *)(v12 + 104) = sub_1007E4FAC();
  v19 = swift_allocObject(&unk_1010DEF18, 65, 7);
  *(_QWORD *)(v12 + 72) = v19;
  *(_QWORD *)(v19 + 40) = v3;
  *(_QWORD *)(v19 + 48) = &protocol witness table for MusicVideo;
  *(_QWORD *)(v19 + 56) = &protocol witness table for MusicVideo;
  v20 = (char *)sub_100049F68((_QWORD *)(v19 + 16));
  v15(v20, v2, v3);
  *(_BYTE *)(v19 + 64) = 1;
  v15(v9, v2, v3);
  v18(v9, v16, v17);
  v21 = v33;
  swift_storeEnumTagMultiPayload(v9, v32, 1);
  v15(v21, v2, v3);
  if (v34)
  {
    v22 = *(void (**)(char *, uint64_t))(v36 + 8);
    v23 = v34;
  }
  else
  {
    sub_1000E3E80();
    v24 = v31;
    v15(v31, (uint64_t)v21, v3);
    v25 = sub_100048748((unint64_t *)&unk_1011B8C10, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
    v23 = (id)MPCPlaybackIntent.init<A>(_:)(v24, v3, v25);
    v22 = *(void (**)(char *, uint64_t))(v36 + 8);
  }
  v22(v21, v3);
  v26 = v37;
  sub_10005B6C0((uint64_t)v9, v37, type metadata accessor for DragDropToQueue.Origin.Item);
  *(_QWORD *)(v26 + *(int *)(v35 + 20)) = v23;
  v27 = type metadata accessor for DragDropToQueue(0);
  *(_QWORD *)(v12 + 136) = v27;
  *(_QWORD *)(v12 + 144) = sub_100048748(&qword_1011CB328, type metadata accessor for DragDropToQueue, (uint64_t)&unk_100ED2094);
  v28 = sub_100049F68((_QWORD *)(v12 + 112));
  sub_10005B6C0(v26, (uint64_t)v28, type metadata accessor for DragDropToQueue.Origin);
  *((_BYTE *)v28 + *(int *)(v27 + 20)) = 2;
  return v12;
}

uint64_t sub_100869080(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v33 = a1;
  v3 = type metadata accessor for Playlist(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v32 = (char *)&v29 - v7;
  v31 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  __chkstk_darwin(v31);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for DragDropToQueue.Origin(0);
  __chkstk_darwin(v34);
  v36 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011AE068);
  v12 = swift_allocObject(v11, 152, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EA7AC0;
  v13 = type metadata accessor for DragDropToLibrary(0);
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = sub_100048748(&qword_1011BEFC8, type metadata accessor for DragDropToLibrary, (uint64_t)&unk_100EC6070);
  v14 = (char *)sub_100049F68((_QWORD *)(v12 + 32));
  v35 = v4;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v15(v14, v1, v3);
  v16 = enum case for GenericMusicItem.playlist(_:);
  v17 = type metadata accessor for GenericMusicItem(0);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104);
  v18(v14, v16, v17);
  v14[*(int *)(v13 + 20)] = 0;
  *(_QWORD *)(v12 + 96) = &type metadata for DragDropToPlaylist;
  *(_QWORD *)(v12 + 104) = sub_1007E4FAC();
  v19 = swift_allocObject(&unk_1010DEF18, 65, 7);
  *(_QWORD *)(v12 + 72) = v19;
  *(_QWORD *)(v19 + 40) = v3;
  *(_QWORD *)(v19 + 48) = &protocol witness table for Playlist;
  *(_QWORD *)(v19 + 56) = &protocol witness table for Playlist;
  v20 = (char *)sub_100049F68((_QWORD *)(v19 + 16));
  v15(v20, v2, v3);
  *(_BYTE *)(v19 + 64) = 1;
  v15(v9, v2, v3);
  v18(v9, v16, v17);
  v21 = v32;
  swift_storeEnumTagMultiPayload(v9, v31, 1);
  v15(v21, v2, v3);
  if (v33)
  {
    v22 = *(void (**)(char *, uint64_t))(v35 + 8);
    v23 = v33;
  }
  else
  {
    sub_1000E3E80();
    v24 = v30;
    v15(v30, (uint64_t)v21, v3);
    v23 = (id)MPCPlaybackIntent.init<A>(_:)(v24, v3, &protocol witness table for Playlist);
    v22 = *(void (**)(char *, uint64_t))(v35 + 8);
  }
  v22(v21, v3);
  v25 = v36;
  sub_10005B6C0((uint64_t)v9, v36, type metadata accessor for DragDropToQueue.Origin.Item);
  *(_QWORD *)(v25 + *(int *)(v34 + 20)) = v23;
  v26 = type metadata accessor for DragDropToQueue(0);
  *(_QWORD *)(v12 + 136) = v26;
  *(_QWORD *)(v12 + 144) = sub_100048748(&qword_1011CB328, type metadata accessor for DragDropToQueue, (uint64_t)&unk_100ED2094);
  v27 = sub_100049F68((_QWORD *)(v12 + 112));
  sub_10005B6C0(v25, (uint64_t)v27, type metadata accessor for DragDropToQueue.Origin);
  *((_BYTE *)v27 + *(int *)(v26 + 20)) = 2;
  return v12;
}

uint64_t sub_1008693E0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v33 = a1;
  v3 = type metadata accessor for Song(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v32 = (char *)&v29 - v7;
  v31 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  __chkstk_darwin(v31);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for DragDropToQueue.Origin(0);
  __chkstk_darwin(v34);
  v36 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011AE068);
  v12 = swift_allocObject(v11, 152, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EA7AC0;
  v13 = type metadata accessor for DragDropToLibrary(0);
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = sub_100048748(&qword_1011BEFC8, type metadata accessor for DragDropToLibrary, (uint64_t)&unk_100EC6070);
  v14 = (char *)sub_100049F68((_QWORD *)(v12 + 32));
  v35 = v4;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v15(v14, v1, v3);
  v16 = enum case for GenericMusicItem.song(_:);
  v17 = type metadata accessor for GenericMusicItem(0);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104);
  v18(v14, v16, v17);
  v14[*(int *)(v13 + 20)] = 0;
  *(_QWORD *)(v12 + 96) = &type metadata for DragDropToPlaylist;
  *(_QWORD *)(v12 + 104) = sub_1007E4FAC();
  v19 = swift_allocObject(&unk_1010DEF18, 65, 7);
  *(_QWORD *)(v12 + 72) = v19;
  *(_QWORD *)(v19 + 40) = v3;
  *(_QWORD *)(v19 + 48) = &protocol witness table for Song;
  *(_QWORD *)(v19 + 56) = &protocol witness table for Song;
  v20 = (char *)sub_100049F68((_QWORD *)(v19 + 16));
  v15(v20, v2, v3);
  *(_BYTE *)(v19 + 64) = 1;
  v15(v9, v2, v3);
  v18(v9, v16, v17);
  v21 = v32;
  swift_storeEnumTagMultiPayload(v9, v31, 1);
  v15(v21, v2, v3);
  if (v33)
  {
    v22 = *(void (**)(char *, uint64_t))(v35 + 8);
    v23 = v33;
  }
  else
  {
    sub_1000E3E80();
    v24 = v30;
    v15(v30, (uint64_t)v21, v3);
    v23 = (id)MPCPlaybackIntent.init<A>(_:)(v24, v3, &protocol witness table for Song);
    v22 = *(void (**)(char *, uint64_t))(v35 + 8);
  }
  v22(v21, v3);
  v25 = v36;
  sub_10005B6C0((uint64_t)v9, v36, type metadata accessor for DragDropToQueue.Origin.Item);
  *(_QWORD *)(v25 + *(int *)(v34 + 20)) = v23;
  v26 = type metadata accessor for DragDropToQueue(0);
  *(_QWORD *)(v12 + 136) = v26;
  *(_QWORD *)(v12 + 144) = sub_100048748(&qword_1011CB328, type metadata accessor for DragDropToQueue, (uint64_t)&unk_100ED2094);
  v27 = sub_100049F68((_QWORD *)(v12 + 112));
  sub_10005B6C0(v25, (uint64_t)v27, type metadata accessor for DragDropToQueue.Origin);
  *((_BYTE *)v27 + *(int *)(v26 + 20)) = 2;
  return v12;
}

uint64_t sub_100869740(void *a1)
{
  return sub_100869764(a1, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (unsigned int *)&enum case for GenericMusicItem.tvEpisode(_:), &qword_1011A0388, (uint64_t)&protocol conformance descriptor for TVEpisode);
}

uint64_t sub_100869764(void *a1, uint64_t (*a2)(uint64_t), unsigned int *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v34;
  uint64_t (*v35)(uint64_t);
  unint64_t *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;

  v36 = a4;
  v37 = a5;
  v41 = a1;
  v35 = a2;
  v7 = a2(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v34 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v38 = (char *)&v34 - v11;
  v39 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  __chkstk_darwin(v39);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for DragDropToQueue.Origin(0);
  __chkstk_darwin(v42);
  v40 = (uint64_t)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011AE068);
  v16 = swift_allocObject(v15, 112, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EA7A80;
  v17 = type metadata accessor for DragDropToLibrary(0);
  *(_QWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 64) = sub_100048748(&qword_1011BEFC8, type metadata accessor for DragDropToLibrary, (uint64_t)&unk_100EC6070);
  v18 = (char *)sub_100049F68((_QWORD *)(v16 + 32));
  v43 = v8;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v20 = v5;
  v19(v18, v5, v7);
  v21 = *a3;
  v22 = type metadata accessor for GenericMusicItem(0);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104);
  v23(v18, v21, v22);
  v24 = *(int *)(v17 + 20);
  v25 = v38;
  v18[v24] = 0;
  v19(v13, v20, v7);
  v23(v13, v21, v22);
  swift_storeEnumTagMultiPayload(v13, v39, 1);
  v19(v25, v20, v7);
  if (v41)
  {
    v26 = *(void (**)(char *, uint64_t))(v43 + 8);
    v27 = v41;
  }
  else
  {
    sub_1000E3E80();
    v28 = v34;
    v19(v34, (uint64_t)v25, v7);
    v29 = sub_100048748(v36, v35, v37);
    v27 = (id)MPCPlaybackIntent.init<A>(_:)(v28, v7, v29);
    v26 = *(void (**)(char *, uint64_t))(v43 + 8);
  }
  v26(v25, v7);
  v30 = v40;
  sub_10005B6C0((uint64_t)v13, v40, type metadata accessor for DragDropToQueue.Origin.Item);
  *(_QWORD *)(v30 + *(int *)(v42 + 20)) = v27;
  v31 = type metadata accessor for DragDropToQueue(0);
  *(_QWORD *)(v16 + 96) = v31;
  *(_QWORD *)(v16 + 104) = sub_100048748(&qword_1011CB328, type metadata accessor for DragDropToQueue, (uint64_t)&unk_100ED2094);
  v32 = sub_100049F68((_QWORD *)(v16 + 72));
  sub_10005B6C0(v30, (uint64_t)v32, type metadata accessor for DragDropToQueue.Origin);
  *((_BYTE *)v32 + *(int *)(v31 + 20)) = 2;
  return v16;
}

uint64_t sub_100869A70(void *a1, uint64_t (*a2)(uint64_t), unsigned int *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v30;
  uint64_t (*v31)(uint64_t);
  unint64_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;

  v32 = a4;
  v33 = a5;
  v34 = a1;
  v31 = a2;
  v7 = a2(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v30 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  v13 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for DragDropToQueue.Origin(0);
  __chkstk_darwin(v35);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011AE068);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EA7AA0;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v20(v15, v5, v7);
  v21 = *a3;
  v22 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v15, v21, v22);
  swift_storeEnumTagMultiPayload(v15, v13, 1);
  v20(v12, v5, v7);
  if (v34)
  {
    v23 = *(void (**)(char *, uint64_t))(v8 + 8);
    v24 = v34;
  }
  else
  {
    sub_1000E3E80();
    v25 = v30;
    v20(v30, (uint64_t)v12, v7);
    v26 = sub_100048748(v32, v31, v33);
    v24 = (id)MPCPlaybackIntent.init<A>(_:)(v25, v7, v26);
    v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  }
  v23(v12, v7);
  sub_10005B6C0((uint64_t)v15, (uint64_t)v17, type metadata accessor for DragDropToQueue.Origin.Item);
  *(_QWORD *)&v17[*(int *)(v35 + 20)] = v24;
  v27 = type metadata accessor for DragDropToQueue(0);
  *(_QWORD *)(v19 + 56) = v27;
  *(_QWORD *)(v19 + 64) = sub_100048748(&qword_1011CB328, type metadata accessor for DragDropToQueue, (uint64_t)&unk_100ED2094);
  v28 = sub_100049F68((_QWORD *)(v19 + 32));
  sub_10005B6C0((uint64_t)v17, (uint64_t)v28, type metadata accessor for DragDropToQueue.Origin);
  *((_BYTE *)v28 + *(int *)(v27 + 20)) = 2;
  return v19;
}

uint64_t sub_100869CF4()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 65);
}

_QWORD *sub_100869D18(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16[2];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  result = _swiftEmptyArrayStorage;
  v20 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return result;
  v6 = 0;
  v7 = a1 + 32;
  v8 = _swiftEmptyArrayStorage;
  while (1)
  {
    sub_100064C78(v7 + 40 * v6, (uint64_t)&v17);
    v9 = v18;
    v10 = v19;
    sub_100007E68(&v17, v18);
    result = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 56))(v9, v10);
    v11 = *(_QWORD *)(a2 + 16);
    if (!v11)
      goto LABEL_12;
    if (*(unsigned __int8 *)(a2 + 32) != result)
      break;
LABEL_3:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v17);
LABEL_4:
    if (++v6 == v4)
      return v20;
  }
  if (v11 == 1)
  {
LABEL_12:
    sub_100064C48(&v17, (uint64_t)v16);
    if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
      sub_10035C778(0, v8[2] + 1, 1);
    v8 = v20;
    v15 = v20[2];
    v14 = v20[3];
    if (v15 >= v14 >> 1)
    {
      sub_10035C778(v14 > 1, v15 + 1, 1);
      v8 = v20;
    }
    v8[2] = v15 + 1;
    sub_100064C48(v16, (uint64_t)&v8[5 * v15 + 4]);
    goto LABEL_4;
  }
  v12 = 33;
  while (1)
  {
    v13 = v12 - 31;
    if (__OFADD__(v12 - 32, 1))
      break;
    if (*(unsigned __int8 *)(a2 + v12) == result)
      goto LABEL_3;
    ++v12;
    if (v13 == v11)
      goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t *sub_100869EA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for UserInterfaceSizeClass(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        v15 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v9, v10, v12);
        v15 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v15);
    v16 = *(int *)(a3 + 24);
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = sub_100007E8C(&qword_1011D13C0);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = v17;
      v22 = v19;
      v23 = 1;
    }
    else
    {
      *v17 = *v18;
      swift_retain();
      v21 = v17;
      v22 = v19;
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v22, v23);
  }
  return a1;
}

double sub_10086A060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_100007E8C(&qword_1011D13C0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_10086A15C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  swift_retain();
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v13 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
      v13 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v13);
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = sub_100007E8C(&qword_1011D13C0);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    v19 = 1;
  }
  else
  {
    *v15 = *v16;
    swift_retain();
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v17, v19);
  return a1;
}

_QWORD *sub_10086A2F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_10004FF60((uint64_t)a1 + v6, (uint64_t *)&unk_1011A3ED0);
    v9 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
        v13 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v13);
    v14 = *(int *)(a3 + 24);
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    sub_10004FF60((uint64_t)a1 + v14, &qword_1011D13C0);
    v17 = sub_100007E8C(&qword_1011D13C0);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      *v15 = *v16;
      swift_retain();
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
  }
  return a1;
}

_QWORD *sub_10086A4B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_100007E8C(&qword_1011D13C0);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_10086A648(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_10004FF60((uint64_t)a1 + v6, (uint64_t *)&unk_1011A3ED0);
    v9 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    v13 = *(int *)(a3 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    sub_10004FF60((uint64_t)a1 + v13, &qword_1011D13C0);
    v16 = sub_100007E8C(&qword_1011D13C0);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10086A808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10086A814);
}

uint64_t sub_10086A814(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A48A0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011CD200);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_10086A8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10086A8C8);
}

char *sub_10086A8C8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A48A0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011CD200);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for Header(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011CD260, (uint64_t)&nominal type descriptor for Header);
}

void sub_10086A980(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1001C17C8(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, (unint64_t *)&unk_1011CD270, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_10086AA2C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAF07C, 1);
}

uint64_t sub_10086AA3C()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_10086AA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086DA64(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

void sub_10086AA70(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED39B0);
  v6 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release();
  *a2 = *(_BYTE *)(v3 + 16);
}

double sub_10086AAFC(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED39B0);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1004CB6FC, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10086ABA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10086B354(a1, (uint64_t)&unk_100ED3BF0, &OBJC_IVAR____TtCV5Music6Header13Configuration__artworkInfo, (uint64_t *)&unk_1011C6790, a2);
}

uint64_t sub_10086ABC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10004A160(a1, (uint64_t)v6, (uint64_t *)&unk_1011C6790);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED3BF0);
  v12 = v7;
  v13 = v6;
  v14 = v7;
  v9 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_10087491C, v11, (char *)&type metadata for () + 8, v9);
  swift_release();
  return sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011C6790);
}

uint64_t sub_10086ACC8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10086B6B8(a1, (uint64_t)&unk_100ED3C18, &OBJC_IVAR____TtCV5Music6Header13Configuration__videoArtworks, a2);
}

double sub_10086ACDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED3C18);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1004CB6E4, v7, (char *)&type metadata for () + 8, v5);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10086AD94@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED3B70);
  v8 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release();
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__title + 8);
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__title);
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

double sub_10086AE30(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[7];
  uint64_t v9;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED3B70);
  v8[2] = v4;
  v8[3] = v3;
  v8[4] = v2;
  v9 = v4;
  v6 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100874894, v8, (char *)&type metadata for () + 8, v6);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10086AEEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10086B354(a1, (uint64_t)&unk_100ED3B98, &OBJC_IVAR____TtCV5Music6Header13Configuration__favoriteStatus, &qword_1011A19A0, a2);
}

uint64_t sub_10086AF08(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10004A160(a1, (uint64_t)v6, &qword_1011A19A0);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED3B98);
  v12 = v7;
  v13 = v6;
  v14 = v7;
  v9 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_10087487C, v11, (char *)&type metadata for () + 8, v9);
  swift_release();
  return sub_10004FF60((uint64_t)v6, &qword_1011A19A0);
}

uint64_t sub_10086B010@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v11;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED3B20);
  v11 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v5);
  swift_release();
  v6 = v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__attribution;
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__attribution);
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__attribution + 8);
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v8;
  v9 = *(_BYTE *)(v6 + 16);
  *(_BYTE *)(a2 + 16) = v9;
  return sub_1005FFDCC(v7, v8, v9);
}

double sub_10086B0B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t KeyPath;
  uint64_t v7;
  double result;
  _QWORD v9[5];
  unsigned __int8 v10;
  uint64_t v11;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a2;
  v5 = *(_BYTE *)(a1 + 16);
  KeyPath = swift_getKeyPath(&unk_100ED3B20);
  v9[2] = v4;
  v9[3] = v2;
  v9[4] = v3;
  v10 = v5;
  v11 = v4;
  sub_1005FFDCC(v2, v3, v5);
  v7 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, KeyPath, sub_1008747E0, v9, (char *)&type metadata for () + 8, v7);
  sub_1005FFDF0(v2, v3, v5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10086B18C@<D0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED3B48);
  v10 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v5);
  swift_release();
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__attributionAction);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__attributionAction + 8);
  v8 = swift_allocObject(&unk_1010DEFB8, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  *a2 = sub_10010942C;
  a2[1] = (uint64_t (*)())v8;
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

double sub_10086B24C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  _QWORD v10[7];
  uint64_t v11;

  v3 = *a1;
  v4 = a1[1];
  v5 = swift_allocObject(&unk_1010DEF90, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED3B48);
  v10[2] = v6;
  v10[3] = sub_10010942C;
  v10[4] = v5;
  v11 = v6;
  v8 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  swift_retain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, KeyPath, sub_1008747C4, v10, (char *)&type metadata for () + 8, v8);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10086B338@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10086B354(a1, (uint64_t)&unk_100ED3AF8, &OBJC_IVAR____TtCV5Music6Header13Configuration__metadata, &qword_1011BD7F8, a2);
}

uint64_t sub_10086B354@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X4>, uint64_t *a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];

  v8 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v13[0] = v8;
  v10 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v13, KeyPath, v10);
  swift_release();
  v11 = v8 + *a3;
  swift_beginAccess(v11, v13, 0, 0);
  return sub_10004A160(v11, a5, a4);
}

uint64_t sub_10086B410(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = sub_100007E8C(&qword_1011BD7F8);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10004A160(a1, (uint64_t)v6, &qword_1011BD7F8);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED3AF8);
  v12 = v7;
  v13 = v6;
  v14 = v7;
  v9 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_100874778, v11, (char *)&type metadata for () + 8, v9);
  swift_release();
  return sub_10004FF60((uint64_t)v6, &qword_1011BD7F8);
}

uint64_t sub_10086B518@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED3AD0);
  v11 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v5);
  swift_release();
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__description);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__description + 8);
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__description + 16);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__description + 24);
  *a2 = v6;
  a2[1] = v7;
  a2[2] = v8;
  a2[3] = v9;
  return sub_100445F28(v6, v7, v8, v9);
}

double sub_10086B5BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  _QWORD v10[9];
  uint64_t v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED3AD0);
  v10[2] = v6;
  v10[3] = v2;
  v10[4] = v3;
  v10[5] = v4;
  v10[6] = v5;
  v11 = v6;
  sub_100445F28(v2, v3, v4, v5);
  v8 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, KeyPath, sub_1006063F8, v10, (char *)&type metadata for () + 8, v8);
  sub_10044603C(v2, v3, v4, v5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10086B6A4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10086B6B8(a1, (uint64_t)&unk_100ED3A78, &OBJC_IVAR____TtCV5Music6Header13Configuration__playIntentButtonIntents, a2);
}

uint64_t sub_10086B6B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v10 = v6;
  v8 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v8);
  swift_release();
  *a4 = *(_QWORD *)(v6 + *a3);
  return swift_bridgeObjectRetain();
}

double sub_10086B754(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED3A78);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1008746F0, v7, (char *)&type metadata for () + 8, v5);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10086B80C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED3A50);
  v10 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v5);
  swift_release();
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__playbackIntentProvider);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__playbackIntentProvider + 8);
  if (v6)
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__playbackIntentProvider + 8);
  else
    v8 = 0;
  *a2 = v6;
  a2[1] = v8;
  return sub_100048AAC(v6, v7);
}

double sub_10086B8B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  double result;
  _QWORD v9[7];
  uint64_t v10;

  v2 = *a1;
  v3 = a1[1];
  if (*a1)
    v4 = a1[1];
  else
    v4 = 0;
  v5 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED3A50);
  v9[2] = v5;
  v9[3] = v2;
  v9[4] = v4;
  v10 = v5;
  sub_100048AAC(v2, v3);
  v7 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_100874708, v9, (char *)&type metadata for () + 8, v7);
  sub_10004BA30(v2, v3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10086B980(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED3A28);
  v6 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release();
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__hidePlaybackControls);
}

double sub_10086BA14(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED3A28);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100874724, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10086BABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int *v67;
  char *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[2];

  v88 = a1;
  v2 = type metadata accessor for ColorScheme(0);
  v86 = *(_QWORD *)(v2 - 8);
  v87 = v2;
  __chkstk_darwin(v2);
  v84 = (uint64_t)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v85 = (char *)&v73 - v5;
  v73 = type metadata accessor for Header(0);
  v6 = *(_QWORD *)(v73 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v73);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100007E8C(&qword_1011CD2A8);
  __chkstk_darwin(v74);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v76 = (uint64_t)&v73 - v12;
  v75 = sub_100007E8C(&qword_1011A2C20);
  __chkstk_darwin(v75);
  v78 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A2C28);
  __chkstk_darwin(v14);
  v80 = (uint64_t)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100007E8C(&qword_1011CD2B0);
  __chkstk_darwin(v79);
  v83 = (uint64_t)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100007E8C(&qword_1011CD2B8);
  __chkstk_darwin(v81);
  v82 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v1;
  v19 = *v1;
  KeyPath = swift_getKeyPath(&unk_100ED3930);
  v89[0] = v19;
  v77 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v89, KeyPath, v77);
  swift_release();
  v21 = 0;
  v22 = (unint64_t)*(unsigned __int8 *)(v19 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics + 26) << 16;
  if (v22 != 0x20000)
    v21 = *(_QWORD *)(v19 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics + 16);
  v23 = v22 == 0x20000;
  sub_10005B704((uint64_t)v1, (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Header);
  v24 = *(unsigned __int8 *)(v6 + 80);
  v25 = (v24 + 16) & ~v24;
  v26 = v25 + v7;
  v27 = v24 | 7;
  v28 = swift_allocObject(&unk_1010DEF40, v26, v24 | 7);
  sub_10005B6C0((uint64_t)v8, v28 + v25, type metadata accessor for Header);
  sub_10005B704((uint64_t)v18, (uint64_t)v8, type metadata accessor for Header);
  v29 = swift_allocObject(&unk_1010DEF68, v26, v27);
  sub_10005B6C0((uint64_t)v8, v29 + v25, type metadata accessor for Header);
  v30 = v74;
  v31 = &v10[*(int *)(v74 + 60)];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100ED3958);
  v32 = sub_100007E8C(&qword_1011D13C0);
  swift_storeEnumTagMultiPayload(v31, v32, 0);
  v33 = &v10[*(int *)(v30 + 64)];
  *(_QWORD *)v33 = swift_getKeyPath(&unk_100ED3988);
  v33[8] = 0;
  *(_QWORD *)v10 = v21;
  v10[8] = v23;
  *((_QWORD *)v10 + 2) = sub_1008744A8;
  *((_QWORD *)v10 + 3) = v28;
  *((_QWORD *)v10 + 4) = sub_1008745E4;
  *((_QWORD *)v10 + 5) = v29;
  v34 = v76;
  v35 = sub_100065228((uint64_t)v10, v76, &qword_1011CD2A8);
  v36 = static Edge.Set.horizontal.getter(v35);
  v37 = *v18;
  v38 = swift_getKeyPath(&unk_100ED3930);
  v89[0] = v37;
  v39 = v77;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v89, v38, v77);
  swift_release();
  v40 = (unint64_t)*(unsigned __int8 *)(v37 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics + 26) << 16;
  v41 = 0.0;
  v42 = 0;
  v43 = 0;
  v44 = 0;
  if (v40 != 0x20000)
  {
    v41 = EdgeInsets.init(_all:)(*(double *)(v37 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics + 16));
    v42 = v45;
    v43 = v46;
    v44 = v47;
  }
  v48 = v78;
  sub_10004A160(v34, v78, &qword_1011CD2A8);
  v49 = v48 + *(int *)(v75 + 36);
  *(_BYTE *)v49 = v36;
  *(double *)(v49 + 8) = v41;
  *(_QWORD *)(v49 + 16) = v42;
  *(_QWORD *)(v49 + 24) = v43;
  *(_QWORD *)(v49 + 32) = v44;
  *(_BYTE *)(v49 + 40) = v40 == 0x20000;
  v50 = sub_10004FF60(v34, &qword_1011CD2A8);
  v51 = static Alignment.bottom.getter(v50);
  v52 = v80;
  sub_10014C6F8(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v80, 0.0, 1, INFINITY, 0, v51, v53);
  sub_10004FF60(v48, &qword_1011A2C20);
  v54 = swift_getKeyPath(&unk_100ED3988);
  v55 = *v18;
  v56 = swift_getKeyPath(&unk_100ED39B0);
  v89[0] = v55;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v89, v56, v39);
  swift_release();
  LOBYTE(v48) = *(_BYTE *)(v55 + 16);
  v57 = v83;
  sub_10004A160(v52, v83, &qword_1011A2C28);
  v58 = v57 + *(int *)(v79 + 36);
  *(_QWORD *)v58 = v54;
  *(_BYTE *)(v58 + 8) = v48;
  sub_10004FF60(v52, &qword_1011A2C28);
  v59 = swift_getKeyPath(&unk_100ED3958);
  v60 = *v18;
  v61 = swift_getKeyPath(&unk_100ED39B0);
  v89[0] = v60;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v89, v61, v39);
  v62 = swift_release();
  v63 = *(unsigned __int8 *)(v60 + 16);
  v64 = v84;
  if (v63 == 2)
  {
    sub_100825844(v84);
    v66 = v86;
    v65 = v87;
  }
  else
  {
    v66 = v86;
    v65 = v87;
    if ((v63 & 1) != 0)
      v67 = (unsigned int *)&enum case for ColorScheme.light(_:);
    else
      v67 = (unsigned int *)&enum case for ColorScheme.dark(_:);
    (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v86 + 104))(v84, *v67, v87, v62);
  }
  v68 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v85, v64, v65);
  v69 = (uint64_t)v82;
  v70 = (uint64_t *)&v82[*(int *)(v81 + 36)];
  v71 = sub_100007E8C(&qword_1011CD2C0);
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))((char *)v70 + *(int *)(v71 + 28), v68, v65);
  *v70 = v59;
  sub_10004A160(v57, v69, &qword_1011CD2B0);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v65);
  sub_10004FF60(v57, &qword_1011CD2B0);
  return sub_100065228(v69, v88, &qword_1011CD2B8);
}

uint64_t sub_10086C1A0@<X0>(char a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v6 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED39D8);
  v12 = v6;
  v8 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v12, KeyPath, v8);
  swift_release();
  if ((*(_BYTE *)(v6 + OBJC_IVAR____TtCV5Music6Header13Configuration__shouldIncludeFloatingArtwork) & 1) != 0)
  {
    v9 = sub_100007E8C(&qword_1011CD2C8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 1, 1, v9);
  }
  else
  {
    sub_10086C2A0(a2, a1 & 1, a3);
    v11 = sub_100007E8C(&qword_1011CD2C8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 0, 1, v11);
  }
}

uint64_t sub_10086C2A0@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  unint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, _QWORD, uint64_t, uint64_t);
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  __int128 v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102[24];
  _BYTE v103[16];
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  char v112;
  __int128 v113;
  char v114;
  char v115;
  char v116;
  char v117[8];
  double v118;
  char v119;

  v101 = a3;
  v99 = sub_100007E8C(&qword_1011CD2D0);
  __chkstk_darwin(v99);
  v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011BCC50);
  __chkstk_darwin(v7);
  *(_QWORD *)&v93 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  *(_QWORD *)&v96 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for Header.AdaptativeArtwork(0);
  __chkstk_darwin(v100);
  v90 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v95 = (uint64_t)&v89 - v12;
  v13 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v13);
  v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ArtworkImage.Info(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v97 = (uint64_t)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v98 = (uint64_t)&v89 - v20;
  *(_QWORD *)&v94 = a1;
  v21 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED39B0);
  v109 = v21;
  v23 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v109, KeyPath, v23);
  swift_release();
  if (*(_BYTE *)(v21 + 16) == 2)
  {
    v25 = swift_getKeyPath(&unk_100ED3BF0);
    v109 = v21;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v109, v25, v23);
    swift_release();
    v26 = v21 + OBJC_IVAR____TtCV5Music6Header13Configuration__artworkInfo;
    swift_beginAccess(v21 + OBJC_IVAR____TtCV5Music6Header13Configuration__artworkInfo, v102, 0, 0);
    sub_10004A160(v26, (uint64_t)v15, (uint64_t *)&unk_1011C6790);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
    {
      v37 = v98;
      sub_10005B6C0((uint64_t)v15, v98, type metadata accessor for ArtworkImage.Info);
      v38 = sub_10005B704(v37, v97, type metadata accessor for ArtworkImage.Info);
      v39 = v96;
      static EditorialVideoArtworkFlavor.motionDetailSquare.getter(v38);
      v40 = swift_getKeyPath(&unk_100ED3C18);
      v109 = v21;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v109, v40, v23);
      swift_release();
      v41 = *(_QWORD *)(v21 + OBJC_IVAR____TtCV5Music6Header13Configuration__videoArtworks);
      if (*(_QWORD *)(v41 + 16))
      {
        swift_bridgeObjectRetain();
        v42 = sub_10079C3DC(v39);
        v43 = (uint64_t *)v94;
        v44 = (uint64_t)v90;
        if ((v45 & 1) != 0)
        {
          v46 = v42;
          v47 = *(_QWORD *)(v41 + 56);
          v48 = (uint64_t *)v94;
          v49 = type metadata accessor for VideoArtwork(0);
          v50 = *(_QWORD *)(v49 - 8);
          v51 = v47 + *(_QWORD *)(v50 + 72) * v46;
          v39 = v96;
          v52 = v93;
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v50 + 16))(v93, v51, v49);
          v53 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56);
          v43 = v48;
          v53(v52, 0, 1, v49);
        }
        else
        {
          v71 = type metadata accessor for VideoArtwork(0);
          v52 = v93;
          (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v93, 1, 1, v71);
        }
        v54 = swift_bridgeObjectRelease();
        v55 = v92;
        v56 = v91;
      }
      else
      {
        v70 = type metadata accessor for VideoArtwork(0);
        v52 = v93;
        (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v93, 1, 1, v70);
        v43 = (uint64_t *)v94;
        v55 = v92;
        v56 = v91;
        v44 = (uint64_t)v90;
      }
      (*(void (**)(uint64_t, uint64_t, __n128))(v56 + 8))(v39, v55, v54);
      v72 = *v43;
      v73 = swift_getKeyPath(&unk_100ED3930);
      v109 = v72;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v109, v73, v23);
      swift_release();
      v74 = v72 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics;
      v96 = *(_OWORD *)(v72 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics);
      v94 = *(_OWORD *)(v72 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics + 16);
      v93 = *(_OWORD *)(v72 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics + 32);
      v75 = *(_QWORD *)(v72 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics + 48);
      v76 = *(_BYTE *)(v74 + 56);
      v77 = sub_10086CBA0();
      v79 = v78;
      sub_10005B6C0(v97, v44, type metadata accessor for ArtworkImage.Info);
      v80 = (int *)v100;
      sub_100065228(v52, v44 + *(int *)(v100 + 20), &qword_1011BCC50);
      v81 = v44 + v80[6];
      v82 = v94;
      *(_OWORD *)v81 = v96;
      *(_OWORD *)(v81 + 16) = v82;
      *(_OWORD *)(v81 + 32) = v93;
      *(_QWORD *)(v81 + 48) = v75;
      *(_BYTE *)(v81 + 56) = v76;
      v83 = (uint64_t *)(v44 + v80[7]);
      *v83 = v77;
      v83[1] = v79;
      v84 = v44 + v80[8];
      *(_QWORD *)v84 = swift_getKeyPath(&unk_100ED3A00);
      *(_BYTE *)(v84 + 8) = 0;
      v85 = v95;
      sub_10005B6C0(v44, v95, type metadata accessor for Header.AdaptativeArtwork);
      sub_10005B704(v85, (uint64_t)v6, type metadata accessor for Header.AdaptativeArtwork);
      swift_storeEnumTagMultiPayload(v6, v99, 0);
      v86 = sub_100007E8C(&qword_1011BA6C8);
      v87 = sub_100048748(qword_1011CD2D8, type metadata accessor for Header.AdaptativeArtwork, (uint64_t)&unk_100ED3DA8);
      v88 = sub_1004D9D80((unint64_t *)&qword_1011BA6D0, &qword_1011BA6C8);
      _ConditionalContent<>.init(storage:)(v6, v80, v86, v87, v88);
      sub_10005B748(v85, type metadata accessor for Header.AdaptativeArtwork);
      return sub_10005B748(v98, type metadata accessor for ArtworkImage.Info);
    }
    v24 = sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011C6790);
  }
  v27 = static Color.clear.getter(v24);
  v28 = swift_getKeyPath(&unk_100ED3930);
  v109 = v21;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v109, v28, v23);
  swift_release();
  if ((a2 & 1) != 0)
  {
    v34 = &v114;
    v32 = (unsigned __int8 *)&v116;
    v33 = (uint64_t *)&v115;
    v35 = 0x4072C00000000000;
    v36 = 0x4072C00000000000;
LABEL_16:
    v31 = ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v35, 0, v36, 0, 0, 1, 2, (uint64_t)v34);
    goto LABEL_17;
  }
  v29 = *(double *)(v21 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics);
  v30 = (unint64_t)*(unsigned __int8 *)(v21 + OBJC_IVAR____TtCV5Music6Header13Configuration__metrics + 26) << 16;
  v31 = ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0x4073100000000000, 0, 0x4073100000000000, 0, 0, 1, 2, (uint64_t)v103);
  if (v30 == 0x20000)
  {
    v32 = (unsigned __int8 *)&v105;
    v33 = &v104;
LABEL_17:
    v59 = *v33;
    v60 = *v32;
    v61 = static Alignment.center.getter(v31);
    _FrameLayout.init(width:height:alignment:)(&v109, 0, 1, v59, v60, v61, v62);
    v63 = v109;
    v64 = v110;
    v65 = v111;
    v66 = v112;
    *(_QWORD *)v6 = v27;
    *((_QWORD *)v6 + 1) = v63;
    v6[16] = v64;
    *((_QWORD *)v6 + 3) = v65;
    v6[32] = v66;
    *(_OWORD *)(v6 + 40) = v113;
    swift_storeEnumTagMultiPayload(v6, v99, 1);
    v67 = sub_100007E8C(&qword_1011BA6C8);
    v68 = sub_100048748(qword_1011CD2D8, type metadata accessor for Header.AdaptativeArtwork, (uint64_t)&unk_100ED3DA8);
    v69 = sub_1004D9D80((unint64_t *)&qword_1011BA6D0, &qword_1011BA6C8);
    return _ConditionalContent<>.init(storage:)(v6, v100, v67, v68, v69);
  }
  sub_100065228((uint64_t)v103, (uint64_t)v117, &qword_1011AD450);
  result = sub_100065228((uint64_t)v117, (uint64_t)&v118, &qword_1011AD450);
  if ((v119 & 1) == 0)
  {
    v32 = (unsigned __int8 *)&v108;
    v33 = &v107;
    v58 = v118;
    if (v118 >= v29 + -144.0)
      v58 = v29 + -144.0;
    v35 = *(_QWORD *)&v58;
    v34 = &v106;
    v36 = *(_QWORD *)&v58;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_10086CBA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD v16[3];

  v1 = sub_100007E8C(&qword_1011BD7F8);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)&v16[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  v6 = (char *)&v16[-1] - v5;
  v7 = *v0;
  KeyPath = swift_getKeyPath(&unk_100ED3AF8);
  v16[0] = v7;
  v9 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v16, KeyPath, v9);
  swift_release();
  v10 = v7 + OBJC_IVAR____TtCV5Music6Header13Configuration__metadata;
  swift_beginAccess(v7 + OBJC_IVAR____TtCV5Music6Header13Configuration__metadata, v16, 0, 0);
  sub_10004A160(v10, (uint64_t)v6, &qword_1011BD7F8);
  v11 = _s8MetadataV13ConfigurationOMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11) == 1)
    goto LABEL_4;
  sub_10004A160((uint64_t)v6, (uint64_t)v3, &qword_1011BD7F8);
  if (swift_getEnumCaseMultiPayload(v3, v11) == 1)
  {
    sub_10005B748((uint64_t)v3, _s8MetadataV13ConfigurationOMa);
LABEL_4:
    if (qword_10119BE40 != -1)
      swift_once(&qword_10119BE40, sub_1002F3F20);
    v12 = &qword_10124CD30;
    goto LABEL_10;
  }
  sub_10060F838(*v3, v3[1], v3[2], v3[3]);
  swift_bridgeObjectRelease();
  if (qword_10119BE38 != -1)
    swift_once(&qword_10119BE38, sub_1002F3E74);
  v12 = &qword_10124CD20;
LABEL_10:
  v13 = *v12;
  swift_bridgeObjectRetain();
  sub_10004FF60((uint64_t)v6, &qword_1011BD7F8);
  return v13;
}

uint64_t sub_10086CDB4@<X0>(char a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v25 = a3;
  v5 = (int *)sub_100007E8C(&qword_1011A2C30);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - v9;
  v11 = sub_100007E8C(&qword_1011A2C38);
  __chkstk_darwin(v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    v15 = static HorizontalAlignment.leading.getter(v12);
  else
    v15 = static HorizontalAlignment.center.getter(v12);
  v16 = v15;
  v17 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED39D8);
  v26 = v17;
  v19 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v26, KeyPath, v19);
  swift_release();
  LOBYTE(v17) = *(_BYTE *)(v17 + OBJC_IVAR____TtCV5Music6Header13Configuration__shouldIncludeFloatingArtwork);
  v20 = &v7[v5[31]];
  *(_QWORD *)v20 = swift_getKeyPath(&unk_100ED3A00);
  v20[8] = 0;
  *(_QWORD *)v7 = v16;
  v7[8] = v17;
  sub_10086D010(a2, (uint64_t)&v7[v5[26]]);
  sub_10086D2A8(a2, (uint64_t *)&v7[v5[27]]);
  sub_10086D404(a2, (uint64_t)&v7[v5[28]]);
  sub_10086D6A0(a2, (uint64_t)&v7[v5[29]]);
  sub_10086D7F8(a2, (uint64_t)&v7[v5[30]]);
  v21 = sub_100065228((uint64_t)v7, (uint64_t)v10, &qword_1011A2C30);
  if ((a1 & 1) != 0)
    v22 = static Alignment.leading.getter(v21);
  else
    v22 = static Alignment.center.getter(v21);
  sub_10014C75C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v22, v23);
  sub_10004FF60((uint64_t)v10, &qword_1011A2C30);
  return sub_100065228((uint64_t)v14, v25, &qword_1011A2C38);
}

uint64_t sub_10086D010@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];

  v28 = a2;
  v3 = (int *)_s5TitleVMa(0);
  v4 = *((_QWORD *)v3 - 1);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED3B70);
  v29[0] = v10;
  v12 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v29, KeyPath, v12);
  swift_release();
  v13 = *(_QWORD *)(v10 + OBJC_IVAR____TtCV5Music6Header13Configuration__title + 8);
  if ((v13 & 0x2000000000000000) != 0)
    v14 = HIBYTE(v13) & 0xF;
  else
    v14 = *(_QWORD *)(v10 + OBJC_IVAR____TtCV5Music6Header13Configuration__title) & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    v15 = swift_getKeyPath(&unk_100ED3B70);
    v29[0] = v10;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v29, v15, v12);
    swift_release();
    v16 = *(_QWORD *)(v10 + OBJC_IVAR____TtCV5Music6Header13Configuration__title + 8);
    v27 = *(_QWORD *)(v10 + OBJC_IVAR____TtCV5Music6Header13Configuration__title);
    v17 = swift_getKeyPath(&unk_100ED3B98);
    v29[0] = v10;
    swift_bridgeObjectRetain();
    ObservationRegistrar.access<A, B>(_:keyPath:)(v29, v17, v12);
    swift_release();
    v18 = v10 + OBJC_IVAR____TtCV5Music6Header13Configuration__favoriteStatus;
    swift_beginAccess(v10 + OBJC_IVAR____TtCV5Music6Header13Configuration__favoriteStatus, v29, 0, 0);
    sub_10004A160(v18, (uint64_t)v9, &qword_1011A19A0);
    v19 = (char *)v6 + v3[6];
    *(_QWORD *)v19 = swift_getKeyPath(&unk_100ED3A00);
    v19[8] = 0;
    v20 = (_QWORD *)((char *)v6 + v3[7]);
    *v20 = swift_getKeyPath(&unk_100ED3BC0);
    v21 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    swift_storeEnumTagMultiPayload(v20, v21, 0);
    *v6 = v27;
    v6[1] = v16;
    sub_100065228((uint64_t)v9, (uint64_t)v6 + v3[5], &qword_1011A19A0);
    v22 = v28;
    sub_10005B6C0((uint64_t)v6, v28, _s5TitleVMa);
    v23 = 0;
    v24 = v22;
  }
  else
  {
    v23 = 1;
    v24 = v28;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v4 + 56))(v24, v23, 1, v3);
}

void sub_10086D2A8(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED3B20);
  v15 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, KeyPath, v5);
  swift_release();
  v6 = (uint64_t *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__attribution);
  v7 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__attribution + 16);
  if (v7 == 255)
    goto LABEL_8;
  v8 = *v6;
  v9 = v6[1];
  v10 = v7 & 1;
  if ((v7 & 1) != 0)
  {
    v11 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v11 = v8 & 0xFFFFFFFFFFFFLL;
    if (v11)
      goto LABEL_6;
LABEL_8:
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v13 = 0;
    v14 = 0;
    goto LABEL_9;
  }
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_8;
LABEL_6:
  v12 = swift_getKeyPath(&unk_100ED3B48);
  v15 = v3;
  sub_1005FFDE4(v8, v9, v10);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, v12, v5);
  swift_release();
  v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__attributionAction);
  swift_retain();
LABEL_9:
  *a2 = v8;
  a2[1] = v9;
  a2[2] = v10;
  a2[3] = v13;
  a2[4] = v14;
}

uint64_t sub_10086D404@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];

  v27 = a2;
  v3 = _s8MetadataVMa(0);
  v26 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011BD7F8);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s8MetadataV13ConfigurationOMa(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - v14;
  v16 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED3AF8);
  v28[0] = v16;
  v18 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v28, KeyPath, v18);
  swift_release();
  v19 = v16 + OBJC_IVAR____TtCV5Music6Header13Configuration__metadata;
  swift_beginAccess(v16 + OBJC_IVAR____TtCV5Music6Header13Configuration__metadata, v28, 0, 0);
  sub_10004A160(v19, (uint64_t)v8, &qword_1011BD7F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, &qword_1011BD7F8);
LABEL_6:
    v23 = 1;
    v22 = v27;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v22, v23, 1, v3);
  }
  sub_10005B6C0((uint64_t)v8, (uint64_t)v15, _s8MetadataV13ConfigurationOMa);
  if ((sub_10060F148() & 1) == 0)
  {
    sub_10005B748((uint64_t)v15, _s8MetadataV13ConfigurationOMa);
    goto LABEL_6;
  }
  sub_10005B6C0((uint64_t)v15, (uint64_t)v12, _s8MetadataV13ConfigurationOMa);
  v20 = &v5[*(int *)(v3 + 20)];
  *(_QWORD *)v20 = swift_getKeyPath(&unk_100ED3A00);
  v20[8] = 0;
  v21 = &v5[*(int *)(v3 + 24)];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_100ED3988);
  v21[8] = 0;
  sub_10005B6C0((uint64_t)v12, (uint64_t)v5, _s8MetadataV13ConfigurationOMa);
  v22 = v27;
  sub_10005B6C0((uint64_t)v5, v27, _s8MetadataVMa);
  v23 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v22, v23, 1, v3);
}

void sub_10086D6A0(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED3AD0);
  v14 = v3;
  v5 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v14, KeyPath, v5);
  swift_release();
  v6 = (uint64_t *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__description);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music6Header13Configuration__description + 8);
  if (!v7)
  {
    v8 = 0;
LABEL_8:
    v9 = 0;
    v10 = 0;
    v12 = 0;
    v13 = 0;
    goto LABEL_9;
  }
  v8 = *v6;
  v9 = v6[2];
  v10 = v6[3];
  v11 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRetain();
    sub_100048AAC(v9, v10);
    swift_bridgeObjectRelease();
    sub_10004BA30(v9, v10);
    v8 = 0;
    v7 = 0;
    goto LABEL_8;
  }
  v12 = swift_getKeyPath(&unk_100ED3A00);
  v13 = swift_getKeyPath(&unk_100ED3988);
  swift_bridgeObjectRetain();
  sub_100048AAC(v9, v10);
LABEL_9:
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v13;
  *(_BYTE *)(a2 + 56) = 0;
}

uint64_t sub_10086D7F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = _s16PlaybackControlsVMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED3A28);
  v22 = v8;
  v10 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v22, KeyPath, v10);
  v11 = swift_release();
  if ((*(_BYTE *)(v8 + OBJC_IVAR____TtCV5Music6Header13Configuration__hidePlaybackControls) & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(a2, 1, 1, v4, v11);
  v13 = swift_getKeyPath(&unk_100ED3A50);
  v22 = v8;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v22, v13, v10);
  swift_release();
  v21 = a2;
  v14 = *(_QWORD *)(v8 + OBJC_IVAR____TtCV5Music6Header13Configuration__playbackIntentProvider);
  v15 = *(_QWORD *)(v8 + OBJC_IVAR____TtCV5Music6Header13Configuration__playbackIntentProvider + 8);
  v16 = swift_getKeyPath(&unk_100ED3A78);
  v22 = v8;
  sub_100048AAC(v14, v15);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v22, v16, v10);
  swift_release();
  v17 = *(_QWORD *)(v8 + OBJC_IVAR____TtCV5Music6Header13Configuration__playIntentButtonIntents);
  *((_QWORD *)v7 + 3) = swift_getKeyPath(&unk_100ED3988);
  v7[32] = 0;
  *((_QWORD *)v7 + 5) = swift_getKeyPath(&unk_100ED3A00);
  v7[48] = 0;
  v18 = &v7[*(int *)(v4 + 32)];
  *(_QWORD *)v18 = swift_getKeyPath(&unk_100ED3AA0);
  v19 = sub_100007E8C(&qword_1011AED10);
  swift_storeEnumTagMultiPayload(v18, v19, 0);
  *(_QWORD *)v7 = v14;
  *((_QWORD *)v7 + 1) = v15;
  *((_QWORD *)v7 + 2) = v17;
  v20 = v21;
  sub_10005B6C0((uint64_t)v7, v21, _s16PlaybackControlsVMa);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v20, 0, 1, v4);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10086DA30(uint64_t a1)
{
  return EnvironmentValues.colorScheme.getter(a1);
}

uint64_t sub_10086DA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086DA64(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_10086DA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_10086DAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;

  v38 = a2;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(a1);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(v6 + 16);
  v7 = v36;
  v8 = sub_100044B54(&qword_1011CD4D8);
  v9 = type metadata accessor for ModifiedContent(255, v7, v8);
  v35 = *(_QWORD *)(a1 + 24);
  v10 = type metadata accessor for ModifiedContent(255, v35, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v9, v10, 0, 0);
  v12 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v12);
  v15 = type metadata accessor for AdaptativeContainerStack(255, v12, WitnessTable, v14);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _PaddingLayout);
  v17 = type metadata accessor for ModifiedContent(255, v16, &type metadata for _PaddingLayout);
  v41 = swift_getWitnessTable(&unk_100EC9838, v15);
  v42 = &protocol witness table for _PaddingLayout;
  v39 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v40 = &protocol witness table for _PaddingLayout;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v20 = type metadata accessor for AdaptativeContainer(0, v17, v18, v19);
  v34 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v33 - v25;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, v37, a1, v24);
  v27 = *(unsigned __int8 *)(v3 + 80);
  v28 = (v27 + 48) & ~v27;
  v29 = swift_allocObject(&unk_1010DF090, v28 + v4, v27 | 7);
  v30 = v35;
  *(_QWORD *)(v29 + 16) = v36;
  *(_QWORD *)(v29 + 24) = v30;
  *(_OWORD *)(v29 + 32) = *(_OWORD *)(a1 + 32);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v29 + v28, v5, a1);
  sub_1007442C4((uint64_t)sub_100878A94, v29, v17, v18, v22);
  swift_getWitnessTable(&unk_100ECDD38, v20);
  sub_10081EB14((uint64_t)v22, v20, (uint64_t)v26);
  v31 = *(uint64_t (**)(char *, uint64_t))(v34 + 8);
  v31(v22, v20);
  sub_1000EA744((uint64_t)v26, v20, v38);
  return v31(v26, v20);
}

uint64_t sub_10086DD94@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t WitnessTable;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _BYTE *v57;
  uint64_t (*v58)(_BYTE *, uint64_t);
  _BYTE v60[4];
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  _QWORD v84[5];

  v78 = a6;
  v79 = a7;
  v84[0] = a3;
  v84[1] = a4;
  v11 = a1 & 1;
  v76 = a5;
  v84[2] = a5;
  v84[3] = a6;
  v12 = type metadata accessor for Header.Content(0, (uint64_t)v84);
  v13 = *(_QWORD *)(v12 - 8);
  v68 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = &v60[-v14];
  v16 = sub_100044B54(&qword_1011CD4D8);
  v74 = a3;
  v17 = type metadata accessor for ModifiedContent(255, a3, v16);
  v75 = a4;
  v18 = type metadata accessor for ModifiedContent(255, a4, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v17, v18, 0, 0);
  v20 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v20);
  v64 = v20;
  v63 = WitnessTable;
  v23 = type metadata accessor for AdaptativeContainerStack(0, v20, WitnessTable, v22);
  v66 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v65 = &v60[-v24];
  v25 = type metadata accessor for ModifiedContent(0, v23, &type metadata for _PaddingLayout);
  v71 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v67 = &v60[-v26];
  v73 = v27;
  v28 = type metadata accessor for ModifiedContent(0, v27, &type metadata for _PaddingLayout);
  v72 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v69 = &v60[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v30);
  v70 = &v60[-v31];
  v77 = v11;
  v33 = sub_10086E218(v11, v12);
  v35 = v34;
  if ((a1 & 1) != 0)
  {
    v62 = *(_QWORD *)a2;
    v61 = *(unsigned __int8 *)(a2 + 8);
  }
  else
  {
    v62 = 0;
    v61 = 0;
  }
  v36 = static Alignment.bottom.getter(v32);
  v38 = v37;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  v39 = *(unsigned __int8 *)(v13 + 80);
  v40 = v13;
  v41 = (v39 + 48) & ~v39;
  v42 = v12;
  v43 = v41 + v68;
  v44 = (char *)swift_allocObject(&unk_1010DF0B8, v41 + v68 + 1, v39 | 7);
  v45 = v75;
  *((_QWORD *)v44 + 2) = v74;
  *((_QWORD *)v44 + 3) = v45;
  v46 = v78;
  *((_QWORD *)v44 + 4) = v76;
  *((_QWORD *)v44 + 5) = v46;
  (*(void (**)(char *, _BYTE *, uint64_t))(v40 + 32))(&v44[v41], v15, v42);
  v44[v43] = v77;
  v47 = v65;
  v48 = sub_10068BD4C(v36, v38, v62, v61, (uint64_t)sub_100878C14, (uint64_t)v44, v64, v63, (uint64_t)v65);
  v49 = static Edge.Set.top.getter(v48);
  v50 = swift_getWitnessTable(&unk_100EC9838, v23);
  v51 = v67;
  View.padding(_:_:)(v67, v49, *(_QWORD *)&v33, 0, v23, v50);
  v52 = (*(uint64_t (**)(_BYTE *, uint64_t))(v66 + 8))(v47, v23);
  v53 = static Edge.Set.bottom.getter(v52);
  v82 = v50;
  v83 = &protocol witness table for _PaddingLayout;
  v54 = v73;
  v55 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v73);
  v56 = v69;
  View.padding(_:_:)(v69, v53, v35, 0, v54, v55);
  (*(void (**)(_QWORD *, uint64_t))(v71 + 8))(v51, v54);
  v80 = v55;
  v81 = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
  v57 = v70;
  sub_10081EB14((uint64_t)v56, v28, (uint64_t)v70);
  v58 = *(uint64_t (**)(_BYTE *, uint64_t))(v72 + 8);
  v58(v56, v28);
  sub_1000EA744((uint64_t)v57, v28, v79);
  return v58(v57, v28);
}

double sub_10086E218(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  if ((a1 & 1) == 0)
  {
    v3 = v2 + *(int *)(a2 + 64);
    v4 = *(_QWORD *)v3;
    v5 = *(_BYTE *)(v3 + 8);
    sub_10006B3F8(*(_QWORD *)v3, v5);
    v6 = sub_100824E5C(v4, v5);
    sub_10006B604(v4, v5);
    if ((v6 & 0xFE) != 2 && qword_10119BFF0 != -1)
      swift_once(&qword_10119BFF0, sub_10042BF20);
  }
  return 7.0;
}

uint64_t sub_10086E2D4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  char *v43;
  char *v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t WitnessTable;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  uint64_t v63[7];

  v59 = a7;
  v10 = a2 & 1;
  v11 = *(_QWORD *)(a4 - 8);
  v56 = a6;
  v57 = v11;
  v54 = a4;
  __chkstk_darwin(a1);
  v53 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for ModifiedContent(0, v13, &type metadata for _FlexFrameLayout);
  v58 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v52 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v55 = (uint64_t)&v47 - v16;
  v17 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100044B54(&qword_1011CD4D8);
  v22 = type metadata accessor for ModifiedContent(0, a3, v21);
  v47 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v47 - v27;
  v48 = (char *)&v47 - v27;
  (*(void (**)(uint64_t, __n128))(a1 + 16))(v10, v26);
  sub_10067EADC(a3, a5);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, a3);
  v29 = sub_100049F28(qword_1011CD4E0, &qword_1011CD4D8, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  v63[4] = a5;
  v63[5] = v29;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  sub_10081EB14((uint64_t)v24, v22, (uint64_t)v28);
  v30 = v47;
  v50 = *(void (**)(char *, uint64_t))(v47 + 8);
  v50(v24, v22);
  v31 = v53;
  v32 = (*(uint64_t (**)(uint64_t))(a1 + 32))(v10);
  v33 = static Alignment.bottomLeading.getter(v32);
  v34 = v56;
  v35 = v54;
  v36 = (uint64_t)v52;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0x7FF0000000000000, 0, v33, v37, v54, v56);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v35);
  v63[2] = v34;
  v63[3] = (uint64_t)&protocol witness table for _FlexFrameLayout;
  v38 = v51;
  v39 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v51);
  v40 = v55;
  sub_10081EB14(v36, v38, v55);
  v41 = v58;
  v42 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  v42(v36, v38);
  v43 = v48;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v24, v48, v22);
  v63[0] = (uint64_t)v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v36, v40, v38);
  v63[1] = v36;
  v62[0] = v22;
  v62[1] = v38;
  v60 = WitnessTable;
  v61 = v39;
  sub_1004D49B8(v63, 2uLL, (uint64_t)v62);
  v42(v40, v38);
  v44 = v43;
  v45 = (uint64_t (*)(char *, uint64_t))v50;
  v50(v44, v22);
  v42(v36, v38);
  return v45(v24, v22);
}

uint64_t sub_10086E684@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  char *v59;
  uint64_t *v60;
  _QWORD *v61;
  char *v62;
  char *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  _QWORD v102[2];
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t WitnessTable;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;

  v126 = a1;
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v123 = a2;
  v124 = v4;
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  v9 = a1[9];
  v10 = a1[11];
  v133 = a1[10];
  v156 = v2;
  v157 = v3;
  v135 = v2;
  v158 = v4;
  v159 = v5;
  v129 = v5;
  v160 = v6;
  v161 = v7;
  v11 = v6;
  v12 = v7;
  v162 = v8;
  v163 = v9;
  v13 = v8;
  v14 = v9;
  v164 = v133;
  v165 = v10;
  v151 = type metadata accessor for Header.TextVStack.TitleAttributionStack(255, (uint64_t)&v156);
  v156 = v2;
  v157 = v3;
  v130 = v3;
  v15 = v124;
  v158 = v124;
  v159 = v5;
  v160 = v11;
  v161 = v12;
  v162 = v13;
  v163 = v14;
  v164 = v133;
  v165 = v10;
  v152 = type metadata accessor for Header.TextVStack.MetadataContainer(255, (uint64_t)&v156);
  v156 = v135;
  v157 = v3;
  v16 = v5;
  v158 = v124;
  v159 = v5;
  v160 = v11;
  v161 = v12;
  v131 = v12;
  v132 = v10;
  v134 = v13;
  v162 = v13;
  v163 = v14;
  v136 = v14;
  v164 = v133;
  v165 = v10;
  v153 = type metadata accessor for Header.TextVStack.PlaybackControlContainer(255, (uint64_t)&v156);
  v156 = v135;
  v17 = v130;
  v157 = v130;
  v158 = v124;
  v159 = v5;
  v160 = v11;
  v161 = v12;
  v162 = v13;
  v163 = v14;
  v164 = v133;
  v165 = v10;
  v154 = type metadata accessor for Header.TextVStack.DescriptionContainer(255, (uint64_t)&v156);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 4);
  v19 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v19);
  v107 = v19;
  v128 = type metadata accessor for VStack(0, v19);
  v108 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v110 = (char *)v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v109 = (uint64_t)v102 - v22;
  v24 = v134;
  v23 = v135;
  v156 = v135;
  v157 = v17;
  v158 = v15;
  v159 = v16;
  v25 = v11;
  v26 = v131;
  v160 = v11;
  v161 = v131;
  v27 = v136;
  v162 = v134;
  v163 = v136;
  v28 = v133;
  v164 = v133;
  v165 = v132;
  v151 = type metadata accessor for Header.TextVStack.TitleAttributionStack(255, (uint64_t)&v156);
  v156 = v23;
  v157 = v17;
  v158 = v15;
  v159 = v16;
  v160 = v25;
  v161 = v26;
  v162 = v24;
  v163 = v27;
  v29 = v132;
  v164 = v28;
  v165 = v132;
  v152 = type metadata accessor for Header.TextVStack.MetadataContainer(255, (uint64_t)&v156);
  v153 = sub_100044B54(&qword_1011B7070);
  v30 = v135;
  v156 = v135;
  v157 = v17;
  v158 = v15;
  v159 = v16;
  v125 = v25;
  v160 = v25;
  v161 = v26;
  v162 = v24;
  v31 = v136;
  v163 = v136;
  v164 = v28;
  v165 = v29;
  v154 = type metadata accessor for Header.TextVStack.DescriptionContainer(255, (uint64_t)&v156);
  v156 = v30;
  v157 = v17;
  v158 = v15;
  v159 = v16;
  v32 = v15;
  v160 = v25;
  v161 = v26;
  v162 = v134;
  v163 = v31;
  v164 = v28;
  v165 = v29;
  v33 = v29;
  v155 = type metadata accessor for Header.TextVStack.PlaybackControlContainer(255, (uint64_t)&v156);
  v34 = swift_getTupleTypeMetadata(255, 5);
  v35 = type metadata accessor for TupleView(255, v34);
  v102[0] = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v35);
  v102[1] = v35;
  v36 = type metadata accessor for VStack(0, v35);
  v103 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v105 = (char *)v102 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v104 = (uint64_t)v102 - v39;
  v122 = v40;
  v41 = type metadata accessor for _ConditionalContent(0, v128, v40);
  v120 = *(_QWORD *)(v41 - 8);
  v121 = v41;
  __chkstk_darwin(v41);
  v119 = (char *)v102 - v42;
  v43 = v16;
  v44 = type metadata accessor for Optional(0, v16);
  v115 = *(_QWORD *)(v44 - 8);
  v116 = v44;
  __chkstk_darwin(v44);
  v46 = (char *)v102 - v45;
  v47 = v130;
  v48 = type metadata accessor for Optional(0, v130);
  v113 = *(_QWORD *)(v48 - 8);
  v114 = v48;
  __chkstk_darwin(v48);
  v112 = (char *)v102 - v49;
  v50 = v135;
  v51 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v52);
  v54 = (uint64_t)v102 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = v54;
  v156 = v50;
  v157 = v47;
  v158 = v32;
  v159 = v43;
  v160 = v125;
  v161 = v131;
  v55 = v133;
  v162 = v134;
  v163 = v136;
  v164 = v133;
  v165 = v33;
  v56 = type metadata accessor for Header.TextVStack.TitleAttributionStack(0, (uint64_t)&v156);
  v117 = *(_QWORD *)(v56 - 8);
  v118 = v56;
  v57 = __chkstk_darwin(v56);
  v59 = (char *)v102 - v58;
  v61 = v126;
  v60 = v127;
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v51 + 16))(v54, (char *)v127 + *((int *)v126 + 26), v50, v57);
  v62 = v112;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v112, (char *)v60 + *((int *)v61 + 27), v114);
  v63 = (char *)v60 + *((int *)v61 + 29);
  v64 = v60;
  v66 = v115;
  v65 = v116;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v46, v63, v116);
  v67 = v129;
  LOBYTE(v54) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 48))(v46, 1, v129) != 1;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v65);
  v68 = *v64;
  v69 = v64;
  v101 = v55;
  *((_QWORD *)&v100 + 1) = v136;
  *(_QWORD *)&v100 = v134;
  v70 = v131;
  *((_QWORD *)&v99 + 1) = v131;
  v71 = v125;
  *(_QWORD *)&v99 = v125;
  v72 = (uint64_t)v59;
  v73 = (uint64_t)v62;
  v74 = v59;
  v116 = v68;
  v75 = v135;
  v76 = v130;
  v77 = v124;
  sub_10086EEA4(v111, v73, v54, v68, v135, v130, v124, v67, v72, v99, v100, v101, v132);
  v78 = (char *)v69 + *((int *)v126 + 31);
  v79 = *(_QWORD *)v78;
  LOBYTE(v67) = v78[8];
  sub_10006B3F8(*(_QWORD *)v78, v67);
  LOBYTE(v54) = sub_100824E38(v79, v67);
  sub_10006B604(v79, v67);
  v137 = v75;
  v138 = v76;
  v139 = v77;
  v140 = v129;
  v141 = v71;
  v142 = v70;
  v143 = v134;
  v144 = v136;
  v145 = v133;
  v146 = v132;
  v80 = v74;
  v147 = v74;
  v148 = v127;
  if ((v54 & 1) != 0)
  {
    v91 = (uint64_t)v105;
    VStack.init(alignment:spacing:content:)(v116, 0, 0, sub_1008788F8);
    v86 = v122;
    v92 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v122);
    v93 = v104;
    sub_10081EB14(v91, v86, v104);
    v85 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v85(v91, v86);
    sub_1000EA744(v93, v86, v91);
    v82 = v128;
    v94 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v128);
    v88 = (uint64_t)v119;
    sub_1008171F4(v91, v82, v86, v94, v92);
    v85(v91, v86);
    v89 = v93;
    v90 = v86;
  }
  else
  {
    v81 = (uint64_t)v110;
    VStack.init(alignment:spacing:content:)(v116, 0, 1, sub_1008788EC);
    v82 = v128;
    v83 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v128);
    v84 = v109;
    sub_10081EB14(v81, v82, v109);
    v85 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
    v85(v81, v82);
    sub_1000EA744(v84, v82, v81);
    v86 = v122;
    v87 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v122);
    v88 = (uint64_t)v119;
    sub_100817130(v81, v82, v86, v83, v87);
    v85(v81, v82);
    v89 = v84;
    v90 = v82;
  }
  v85(v89, v90);
  v95 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v82);
  v96 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v86);
  v149 = v95;
  v150 = v96;
  v97 = v121;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v121);
  sub_1000EA744(v88, v97, v123);
  (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v88, v97);
  return (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v80, v118);
}

uint64_t sub_10086EEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, uint64_t a12, uint64_t a13)
{
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  _QWORD v26[4];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a9, a1, a5);
  v26[0] = a5;
  v26[1] = a6;
  v26[2] = a7;
  v26[3] = a8;
  v27 = a10;
  v28 = a11;
  v29 = a12;
  v30 = a13;
  v21 = (int *)type metadata accessor for Header.TextVStack.TitleAttributionStack(0, (uint64_t)v26);
  v22 = a9 + v21[25];
  v23 = type metadata accessor for Optional(0, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a2, v23);
  *(_BYTE *)(a9 + v21[26]) = a3;
  *(_QWORD *)(a9 + v21[27]) = a4;
  v24 = a9 + v21[28];
  result = swift_getKeyPath(&unk_100ED3A00);
  *(_QWORD *)v24 = result;
  *(_BYTE *)(v24 + 8) = 0;
  return result;
}

uint64_t sub_10086EFB0@<X0>(void (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  char *v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t);
  void (*v114)(uint64_t, uint64_t);
  void (*v115)(char *, uint64_t);
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(char *);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  void (*v136)(uint64_t, uint64_t);
  uint64_t v137;
  uint64_t WitnessTable;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD v171[5];
  uint64_t v172;
  char v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;

  v154 = a2;
  v136 = a1;
  v147 = a7;
  v165 = a11;
  v161 = a9;
  v142 = *(_QWORD *)(a6 - 8);
  __chkstk_darwin(a1);
  v141 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = v15;
  v176 = v16;
  v17 = v15;
  v149 = v15;
  v177 = v18;
  v178 = v19;
  v179 = v20;
  v180 = v21;
  v22 = v20;
  v23 = v21;
  v128 = v21;
  v181 = v25;
  v182 = v24;
  v26 = v25;
  v183 = v28;
  v184 = v27;
  v29 = v28;
  v144 = type metadata accessor for Header.TextVStack.PlaybackControlContainer(0, (uint64_t)&v175);
  v145 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v146 = (char *)&v121 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v140 = (uint64_t)&v121 - v32;
  __chkstk_darwin(v33);
  v143 = (uint64_t)&v121 - v34;
  v137 = type metadata accessor for Optional(0, a5);
  v157 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v139 = (char *)&v121 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v135 = (char *)&v121 - v37;
  v175 = v17;
  v176 = a3;
  v177 = (uint64_t *)a4;
  v178 = a5;
  v38 = a5;
  v39 = v22;
  v148 = v22;
  v179 = v22;
  v180 = v23;
  v40 = v26;
  v41 = v161;
  v181 = v26;
  v182 = v161;
  v42 = v165;
  v183 = v29;
  v184 = v165;
  v153 = type metadata accessor for Header.TextVStack.DescriptionContainer(0, (uint64_t)&v175);
  v160 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v163 = (uint64_t)&v121 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v159 = (uint64_t)&v121 - v45;
  v133 = type metadata accessor for Optional(0, a4);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v131 = (char *)&v121 - v46;
  v47 = v149;
  v175 = v149;
  v176 = a3;
  v48 = a3;
  v177 = (uint64_t *)a4;
  v178 = v38;
  v49 = v128;
  v179 = v39;
  v180 = v128;
  v181 = v40;
  v182 = v41;
  v50 = v40;
  v183 = v29;
  v184 = v42;
  v51 = v42;
  v151 = type metadata accessor for Header.TextVStack.MetadataContainer(0, (uint64_t)&v175);
  v155 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v162 = (uint64_t)&v121 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53);
  v164 = (uint64_t)&v121 - v54;
  v175 = v47;
  v176 = v48;
  v55 = v48;
  v177 = (uint64_t *)a4;
  v178 = v38;
  v123 = v38;
  v56 = v148;
  v179 = v148;
  v180 = v49;
  v122 = v50;
  v181 = v50;
  v182 = v41;
  v57 = v29;
  v183 = v29;
  v184 = v51;
  v58 = type metadata accessor for Header.TextVStack.TitleAttributionStack(0, (uint64_t)&v175);
  v158 = *(_QWORD *)(v58 - 8);
  v134 = v58;
  __chkstk_darwin(v58);
  v152 = (char *)&v121 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v62 = (char *)&v121 - v61;
  v156 = (char *)&v121 - v61;
  WitnessTable = swift_getWitnessTable(&unk_100ED3FA8, v58);
  sub_10081EB14((uint64_t)v136, v58, (uint64_t)v62);
  v175 = v47;
  v176 = v55;
  v124 = a4;
  v177 = (uint64_t *)a4;
  v178 = v38;
  v63 = v56;
  v179 = v56;
  v180 = v49;
  v64 = v49;
  v65 = v161;
  v181 = v50;
  v182 = v161;
  v183 = v57;
  v66 = v57;
  v150 = v57;
  v67 = v165;
  v184 = v165;
  v125 = type metadata accessor for Header.TextVStack(0, (uint64_t)&v175);
  v68 = v154;
  v69 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v131, v154 + *(int *)(v125 + 112), v133);
  *((_QWORD *)&v117 + 1) = v66;
  v120 = v67;
  *(_QWORD *)&v117 = v65;
  v70 = v162;
  v71 = (uint64_t)v69;
  v72 = v47;
  v73 = v47;
  v74 = v55;
  v129 = v55;
  v75 = a4;
  v76 = v123;
  v77 = v63;
  v78 = v64;
  v79 = v122;
  sub_10086F9AC(v71, v72, v55, v75, v123, v77, v64, v122, v162, v117, v120);
  v80 = v151;
  v133 = swift_getWitnessTable(&unk_100ED3F58, v151);
  sub_10081EB14(v70, v80, v164);
  v136 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
  v136(v70, v80);
  LODWORD(v131) = *(unsigned __int8 *)(v68 + 8);
  v130 = v131 ^ 1;
  v81 = v125;
  v127 = v68 + *(int *)(v125 + 116);
  v126 = *(void (**)(char *))(v157 + 16);
  v82 = v135;
  v83 = v137;
  v126(v135);
  *(_QWORD *)&v118 = v65;
  *((_QWORD *)&v118 + 1) = v150;
  v84 = v163;
  v85 = (uint64_t)v82;
  v86 = v73;
  v87 = v74;
  v88 = v124;
  v89 = v76;
  v90 = v148;
  v91 = v79;
  sub_10086FA4C(v85, v86, v87, v124, v76, v148, v78, v79, v163, v118, v165);
  v92 = v153;
  v132 = swift_getWitnessTable(&unk_100ED3F08, v153);
  sub_10081EB14(v84, v92, v159);
  v135 = *(char **)(v160 + 8);
  ((void (*)(uint64_t, uint64_t))v135)(v84, v92);
  v93 = (uint64_t)v141;
  v94 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v141, v154 + *(int *)(v81 + 120), v90);
  v95 = v139;
  ((void (*)(char *, uint64_t, uint64_t))v126)(v139, v127, v83);
  LOBYTE(v90) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v95, 1, v89) != 1;
  (*(void (**)(char *, uint64_t))(v157 + 8))(v95, v83);
  *(_QWORD *)&v119 = v91;
  *((_QWORD *)&v119 + 1) = v161;
  v96 = v140;
  sub_10086FAEC(v93, v90, v149, v129, v88, v89, v94, v78, v140, v119, v150, v165);
  v97 = v144;
  v98 = swift_getWitnessTable(&unk_100ED3EB8, v144);
  v99 = v143;
  v100 = v96;
  sub_10081EB14(v96, v97, v143);
  v101 = v145;
  v102 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
  v102(v100, v97);
  v103 = (uint64_t)v152;
  v104 = v134;
  (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v152, v156, v134);
  v175 = v103;
  v105 = v162;
  v106 = v151;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v155 + 16))(v162, v164, v151);
  v172 = 0;
  v173 = v130;
  v174 = (char)v131;
  v176 = v105;
  v177 = &v172;
  v107 = v163;
  v108 = v159;
  v109 = v153;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 16))(v163, v159, v153);
  v178 = v107;
  v110 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 16);
  v111 = v146;
  v110(v146, v99, v97);
  v179 = (uint64_t)v111;
  v171[0] = v104;
  v171[1] = v106;
  v171[2] = sub_100007E8C(&qword_1011B7070);
  v171[3] = v109;
  v171[4] = v97;
  v166 = WitnessTable;
  v167 = v133;
  v168 = sub_100878944();
  v169 = v132;
  v170 = v98;
  sub_1004D49B8(&v175, 5uLL, (uint64_t)v171);
  v102(v99, v97);
  v112 = v108;
  v113 = (void (*)(uint64_t, uint64_t))v135;
  ((void (*)(uint64_t, uint64_t))v135)(v112, v109);
  v114 = v136;
  v136(v164, v106);
  v115 = *(void (**)(char *, uint64_t))(v158 + 8);
  v115(v156, v104);
  v102((uint64_t)v111, v97);
  v113(v163, v109);
  v114(v162, v106);
  return ((uint64_t (*)(char *, uint64_t))v115)(v152, v104);
}

uint64_t sub_10086F9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[7];
  __int128 v18;
  uint64_t v19;

  v17[0] = a2;
  v17[1] = a3;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a8;
  v18 = a10;
  v19 = a11;
  v14 = a9 + *(int *)(type metadata accessor for Header.TextVStack.MetadataContainer(0, (uint64_t)v17) + 100);
  *(_QWORD *)v14 = swift_getKeyPath(&unk_100ED3A00);
  *(_BYTE *)(v14 + 8) = 0;
  v15 = type metadata accessor for Optional(0, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a9, a1, v15);
}

uint64_t sub_10086FA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[7];
  __int128 v18;
  uint64_t v19;

  v17[0] = a2;
  v17[1] = a3;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a8;
  v18 = a10;
  v19 = a11;
  v14 = a9 + *(int *)(type metadata accessor for Header.TextVStack.DescriptionContainer(0, (uint64_t)v17) + 100);
  *(_QWORD *)v14 = swift_getKeyPath(&unk_100ED3A00);
  *(_BYTE *)(v14 + 8) = 0;
  v15 = type metadata accessor for Optional(0, a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a9, a1, v15);
}

uint64_t sub_10086FAEC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[6];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v19[0] = a3;
  v19[1] = a4;
  v19[2] = a5;
  v19[3] = a6;
  v19[4] = a7;
  v19[5] = a8;
  v20 = a10;
  v21 = a11;
  v22 = a12;
  v16 = type metadata accessor for Header.TextVStack.PlaybackControlContainer(0, (uint64_t)v19);
  v17 = a9 + *(int *)(v16 + 104);
  *(_QWORD *)v17 = swift_getKeyPath(&unk_100ED3A00);
  *(_BYTE *)(v17 + 8) = 0;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(a9, a1, a7);
  *(_BYTE *)(a9 + *(int *)(v16 + 100)) = a2;
  return result;
}

uint64_t sub_10086FB94@<X0>(void (*a1)(uint64_t, uint64_t)@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void (*a12)(_QWORD, _QWORD), uint64_t a13)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD, _QWORD);
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  void (*v91)(char *, uint64_t);
  void (*v92)(uint64_t, uint64_t);
  void (*v93)(char *, uint64_t);
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  uint64_t WitnessTable;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(_QWORD, _QWORD);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD v143[4];
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(_QWORD, _QWORD);
  uint64_t v153;

  v127 = a2;
  v108 = a1;
  v118 = a9;
  v135 = a13;
  v138 = a12;
  v144 = a3;
  v145 = a4;
  v146 = a5;
  v147 = a6;
  v148 = a7;
  v149 = a8;
  v122 = a8;
  v150 = a10;
  v151 = a11;
  v152 = a12;
  v153 = a13;
  v116 = type metadata accessor for Header.TextVStack.DescriptionContainer(0, (uint64_t)&v144);
  v117 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (uint64_t)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v115 = (uint64_t)&v98 - v21;
  v129 = type metadata accessor for Optional(0, a6);
  v112 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v113 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v111 = (char *)&v98 - v24;
  v110 = *(char **)(a7 - 8);
  __chkstk_darwin(v25);
  v106 = (char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = a3;
  v145 = a4;
  v146 = a5;
  v147 = a6;
  v148 = a7;
  v149 = a8;
  v150 = a10;
  v151 = a11;
  v120 = a11;
  v27 = v138;
  v28 = v135;
  v152 = v138;
  v153 = v135;
  v128 = type metadata accessor for Header.TextVStack.PlaybackControlContainer(0, (uint64_t)&v144);
  v132 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v134 = (char *)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v107 = (uint64_t)&v98 - v31;
  __chkstk_darwin(v32);
  v137 = (uint64_t)&v98 - v33;
  v104 = type metadata accessor for Optional(0, a5);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v102 = (char *)&v98 - v34;
  v144 = a3;
  v145 = a4;
  v121 = a3;
  v146 = a5;
  v147 = a6;
  v35 = a5;
  v123 = a6;
  v36 = a7;
  v148 = a7;
  v37 = v122;
  v149 = v122;
  v150 = a10;
  v151 = a11;
  v152 = v27;
  v153 = v28;
  v124 = type metadata accessor for Header.TextVStack.MetadataContainer(0, (uint64_t)&v144);
  v130 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v136 = (uint64_t)&v98 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v125 = (uint64_t)&v98 - v40;
  v144 = a3;
  v145 = a4;
  v146 = v35;
  v147 = a6;
  v148 = v36;
  v149 = v37;
  v119 = v36;
  v41 = v37;
  v150 = a10;
  v42 = v120;
  v151 = v120;
  v152 = v27;
  v153 = v28;
  v43 = type metadata accessor for Header.TextVStack.TitleAttributionStack(0, (uint64_t)&v144);
  v133 = *(_QWORD *)(v43 - 8);
  v105 = v43;
  __chkstk_darwin(v43);
  v126 = (char *)&v98 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v47 = (char *)&v98 - v46;
  v131 = (char *)&v98 - v46;
  WitnessTable = swift_getWitnessTable(&unk_100ED3FA8, v43);
  sub_10081EB14((uint64_t)v108, v43, (uint64_t)v47);
  v48 = v121;
  v144 = v121;
  v145 = a4;
  v100 = a4;
  v101 = v35;
  v146 = v35;
  v147 = v123;
  v148 = v36;
  v149 = v41;
  v49 = v41;
  v150 = a10;
  v151 = v42;
  v50 = v42;
  v51 = v138;
  v52 = v135;
  v152 = v138;
  v153 = v135;
  v53 = (int *)type metadata accessor for Header.TextVStack(0, (uint64_t)&v144);
  v54 = (uint64_t)v102;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v102, &v127[v53[28]], v104);
  *((_QWORD *)&v95 + 1) = v51;
  *(_QWORD *)&v95 = v50;
  v55 = v136;
  v56 = v48;
  v57 = v123;
  v58 = v119;
  v99 = a10;
  sub_10086F9AC(v54, v56, a4, v35, v123, v119, v49, a10, v136, v95, v52);
  v59 = v124;
  v104 = swift_getWitnessTable(&unk_100ED3F58, v124);
  sub_10081EB14(v55, v59, v125);
  v108 = *(void (**)(uint64_t, uint64_t))(v130 + 8);
  v108(v55, v59);
  v60 = v127;
  v61 = (uint64_t)v106;
  v62 = v58;
  (*((void (**)(char *, char *, uint64_t))v110 + 2))(v106, &v127[v53[30]], v58);
  v110 = &v60[v53[29]];
  v63 = v112;
  v103 = *(_QWORD *)(v112 + 16);
  v64 = v111;
  v65 = v129;
  ((void (*)(char *))v103)(v111);
  v66 = v57;
  LOBYTE(v58) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v64, 1, v57) != 1;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  v67 = v135;
  v68 = v120;
  *(_QWORD *)&v96 = a10;
  *((_QWORD *)&v96 + 1) = v120;
  v69 = v107;
  v70 = v58;
  v71 = v121;
  v72 = v100;
  v73 = v101;
  v74 = v122;
  sub_10086FAEC(v61, v70, v121, v100, v101, v66, v62, v122, v107, v96, (uint64_t)v138, v135);
  v75 = v128;
  v112 = swift_getWitnessTable(&unk_100ED3EB8, v128);
  sub_10081EB14(v69, v75, v137);
  v127 = *(char **)(v132 + 8);
  ((void (*)(uint64_t, uint64_t))v127)(v69, v75);
  v76 = (uint64_t)v113;
  ((void (*)(char *, char *, uint64_t))v103)(v113, v110, v129);
  *(_QWORD *)&v97 = v68;
  *((_QWORD *)&v97 + 1) = v138;
  v77 = v114;
  sub_10086FA4C(v76, v71, v72, v73, v66, v119, v74, v99, v114, v97, v67);
  v78 = v116;
  v79 = swift_getWitnessTable(&unk_100ED3F08, v116);
  v80 = v115;
  sub_10081EB14(v77, v78, v115);
  v81 = v117;
  v138 = *(void (**)(_QWORD, _QWORD))(v117 + 8);
  v138(v77, v78);
  v82 = (uint64_t)v126;
  v83 = v105;
  (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v126, v131, v105);
  v144 = v82;
  v84 = v136;
  v85 = v125;
  v86 = v124;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16))(v136, v125, v124);
  v145 = v84;
  v87 = v134;
  v88 = v128;
  (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v134, v137, v128);
  v146 = (uint64_t)v87;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v77, v80, v78);
  v147 = v77;
  v143[0] = v83;
  v143[1] = v86;
  v143[2] = v88;
  v143[3] = v78;
  v89 = v88;
  v139 = WitnessTable;
  v140 = v104;
  v141 = v112;
  v142 = v79;
  sub_1004D49B8(&v144, 4uLL, (uint64_t)v143);
  v90 = v138;
  v138(v80, v78);
  v91 = (void (*)(char *, uint64_t))v127;
  ((void (*)(uint64_t, uint64_t))v127)(v137, v88);
  v92 = v108;
  v108(v85, v86);
  v93 = *(void (**)(char *, uint64_t))(v133 + 8);
  v93(v131, v83);
  v90(v77, v78);
  v91(v134, v89);
  v92(v136, v86);
  return ((uint64_t (*)(char *, uint64_t))v93)(v126, v83);
}

uint64_t sub_1008704F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata3;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t KeyPath;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  void (*v78)(char *, uint64_t);
  uint64_t (*v79)(uint64_t, uint64_t);
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t WitnessTable;
  uint64_t v145;

  v99 = a2;
  v4 = a1[2];
  v5 = type metadata accessor for BaselineSpacer(255);
  v6 = a1[3];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v5, v6, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v9 = type metadata accessor for Optional(255, v8);
  v10 = swift_getTupleTypeMetadata2(255, v4, v9, 0, 0);
  v11 = type metadata accessor for TupleView(255, v10);
  v12 = sub_100044B54(&qword_1011BE8B0);
  v13 = type metadata accessor for ModifiedContent(255, v4, v12);
  v14 = sub_100044B54(&qword_1011B7088);
  v15 = v6;
  v105 = v6;
  v16 = type metadata accessor for Optional(255, v6);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v13, v14, v16, 0, 0);
  v18 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v19 = type metadata accessor for _ConditionalContent(255, v11, v18);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v11);
  v145 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v18);
  v93 = v19;
  v92 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v19);
  v20 = type metadata accessor for VStack(0, v19);
  v21 = *(_QWORD *)(v20 - 8);
  v90 = v20;
  v95 = v21;
  __chkstk_darwin(v20);
  v89 = (char *)&v83 - v22;
  v96 = type metadata accessor for ModifiedContent(0, v23, v12);
  v98 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v109 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v94 = (uint64_t)&v83 - v26;
  v27 = type metadata accessor for Font.TextStyle(0);
  __chkstk_darwin(v27);
  v29 = (char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1[4];
  v103 = a1[5];
  v104 = (uint64_t *)v30;
  v31 = a1[6];
  v32 = a1[7];
  v33 = a1[9];
  v101 = a1[8];
  v102 = v31;
  v34 = a1[11];
  v100 = a1[10];
  v35 = a1;
  v85 = v34;
  v86 = a1;
  v134 = v4;
  v135 = v15;
  v136 = (uint64_t *)v30;
  v137 = v103;
  v138 = v31;
  v139 = v32;
  v140 = v101;
  v141 = v33;
  v36 = v33;
  v83 = v33;
  v142 = v100;
  v143 = v34;
  v37 = v34;
  v107 = type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.Before(0, (uint64_t)&v134);
  v110 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v39 = (char *)&v83 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __chkstk_darwin(v40);
  v108 = (uint64_t)&v83 - v42;
  v43 = *((int *)v35 + 26);
  v84 = v2;
  LOBYTE(v35) = *(_BYTE *)(v2 + v43);
  v44 = v32;
  v45 = *(void (**)(uint64_t, uint64_t, __n128))(v32 + 16);
  v46 = v4;
  v106 = v44;
  v45(v4, v44, v41);
  v82 = v37;
  v47 = v100;
  *((_QWORD *)&v81 + 1) = v36;
  v48 = v101;
  *(_QWORD *)&v81 = v101;
  v49 = (uint64_t)v39;
  v87 = v46;
  v88 = v39;
  v50 = v39;
  v51 = (char)v35;
  v52 = (uint64_t)v29;
  v53 = (uint64_t)v104;
  v54 = v105;
  v55 = v102;
  v56 = v103;
  sub_100870B2C(v51, v52, v46, v105, (uint64_t)v104, v103, v102, v44, v50, v81, v100, v82);
  v57 = v107;
  v91 = swift_getWitnessTable(&unk_100ED4260, v107);
  sub_10081EB14(v49, v57, v108);
  v97 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
  v97(v49, v57);
  v58 = v85;
  v59 = v83;
  v60 = *(_QWORD *)(v84 + *((int *)v86 + 27));
  v111 = v46;
  v112 = v54;
  v113 = v53;
  v114 = v56;
  v115 = v55;
  v116 = v106;
  v117 = v48;
  v118 = v83;
  v119 = v47;
  v120 = v85;
  v121 = v84;
  v61 = v89;
  VStack.init(alignment:spacing:content:)(v60, 0, 1, sub_10087B5B4);
  v62 = v90;
  v63 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v90);
  v64 = (uint64_t)v109;
  View.layoutPriority(_:)(v62, v63, 3.0);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v61, v62);
  v65 = sub_100049F28(&qword_1011BE8A8, &qword_1011BE8B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  v132 = v63;
  v133 = v65;
  v66 = v96;
  v93 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v96);
  v67 = v94;
  v68 = v64;
  sub_10081EB14(v64, v66, v94);
  v69 = v98;
  v95 = *(_QWORD *)(v98 + 8);
  ((void (*)(uint64_t, uint64_t))v95)(v68, v66);
  KeyPath = swift_getKeyPath(&unk_100ED3A00);
  v125 = KeyPath;
  LOBYTE(v126) = 0;
  v134 = v87;
  v135 = v105;
  v136 = v104;
  v137 = v103;
  v138 = v102;
  v139 = v106;
  v140 = v101;
  v141 = v59;
  v142 = v100;
  v143 = v58;
  v71 = type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.After(0, (uint64_t)&v134);
  v72 = swift_getWitnessTable(&unk_100ED4210, v71);
  sub_10081EB14((uint64_t)&v125, v71, (uint64_t)&v130);
  sub_10006B604(KeyPath, 0);
  v73 = (uint64_t)v88;
  v75 = v107;
  v74 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v88, v108, v107);
  v134 = v73;
  v76 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
  v77 = v109;
  v76(v109, v67, v66);
  v128 = v130;
  v129 = v131;
  v135 = (uint64_t)v77;
  v136 = &v128;
  sub_10006B3F8(v130, v131);
  v125 = v75;
  v126 = v66;
  v127 = v71;
  v122 = v91;
  v123 = v93;
  v124 = v72;
  sub_1004D49B8(&v134, 3uLL, (uint64_t)&v125);
  sub_10006B604(v130, v131);
  v78 = (void (*)(char *, uint64_t))v95;
  ((void (*)(uint64_t, uint64_t))v95)(v67, v66);
  v79 = (uint64_t (*)(uint64_t, uint64_t))v97;
  v97(v74, v75);
  sub_10006B604(v128, v129);
  v78(v77, v66);
  return v79(v73, v75);
}

uint64_t sub_100870B2C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12)
{
  int *v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v21[6];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  *a9 = a1;
  v21[0] = a3;
  v21[1] = a4;
  v21[2] = a5;
  v21[3] = a6;
  v21[4] = a7;
  v21[5] = a8;
  v22 = a10;
  v23 = a11;
  v24 = a12;
  v14 = (int *)type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.Before(0, (uint64_t)v21);
  v15 = &a9[v14[25]];
  v16 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a2, v16);
  v17 = &a9[v14[26]];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_100ED3A00);
  v17[8] = 0;
  v18 = &a9[v14[27]];
  *v18 = swift_getKeyPath(&unk_100ED3BC0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  return swift_storeEnumTagMultiPayload(v18, v19, 0);
}

uint64_t sub_100870C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD, _QWORD)@<X3>, uint64_t a5@<X4>, char *a6@<X5>, _QWORD *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t TupleTypeMetadata3;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unsigned int (**v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (**v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t WitnessTable;
  void (*v88)(_QWORD, _QWORD);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  unsigned int (**v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unsigned int (*v111)(char *, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int (**v119)(char *, uint64_t, uint64_t);
  void (*v120)(uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int (*v129)(char *, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t);
  void (*v137)(char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  __int128 v168;
  void (*v169)(_QWORD, _QWORD);
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unsigned int (**v177)(char *, uint64_t, uint64_t);
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD v189[3];
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void (*v200)(_QWORD, _QWORD);
  uint64_t v201;
  uint64_t v202;
  void (*v203)(_QWORD, _QWORD);
  char *v204;
  __int128 v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unsigned __int8 v210;
  char *v211;
  uint64_t v212;

  v167 = a7;
  v172 = a6;
  v171 = a5;
  v169 = a4;
  v184 = a9;
  v170 = a11;
  v168 = a10;
  v15 = type metadata accessor for BaselineSpacer(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v15, a3, 0, 0);
  v162 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v17 = type metadata accessor for Optional(255, v162);
  v18 = swift_getTupleTypeMetadata2(255, a2, v17, 0, 0);
  v19 = type metadata accessor for TupleView(0, v18);
  v164 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v163 = (char *)&v144 - v20;
  v149 = v15;
  __chkstk_darwin(v21);
  v148 = (uint64_t)&v144 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v147 = (char *)&v144 - v24;
  v165 = v17;
  v158 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v25);
  v161 = (char *)&v144 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v178 = (char *)&v144 - v28;
  v160 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v29);
  v159 = (char *)&v144 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v166 = (uint64_t)&v144 - v32;
  v33 = sub_100044B54(&qword_1011BE8B0);
  v34 = type metadata accessor for ModifiedContent(255, a2, v33);
  v35 = sub_100044B54(&qword_1011B7088);
  v36 = type metadata accessor for Optional(255, a3);
  v155 = v35;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v34, v35, v36, 0, 0);
  v38 = type metadata accessor for TupleView(0, TupleTypeMetadata3);
  v157 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v156 = (char *)&v144 - v39;
  v177 = *(unsigned int (***)(char *, uint64_t, uint64_t))(a3 - 8);
  __chkstk_darwin(v40);
  v146 = (char *)&v144 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v145 = (char *)&v144 - v43;
  __chkstk_darwin(v44);
  v154 = (uint64_t)&v144 - v45;
  __chkstk_darwin(v46);
  v144 = (char *)&v144 - v47;
  v174 = v36;
  v173 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v48);
  v150 = (char *)&v144 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v153 = (uint64_t)&v144 - v51;
  __chkstk_darwin(v52);
  v151 = (char *)&v144 - v53;
  __chkstk_darwin(v54);
  v175 = (uint64_t)&v144 - v55;
  v152 = v34;
  v56 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v57);
  v59 = (char *)&v144 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v62 = (char *)&v144 - v61;
  v183 = v19;
  v182 = v63;
  v181 = type metadata accessor for _ConditionalContent(0, v19, v63);
  v180 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v179 = (char *)&v144 - v64;
  v65 = a2;
  v198 = a2;
  v199 = a3;
  v176 = a3;
  v200 = v169;
  v201 = v171;
  v66 = v167;
  v202 = (uint64_t)v172;
  v203 = (void (*)(_QWORD, _QWORD))v167;
  v172 = a8;
  v204 = a8;
  v205 = v168;
  v206 = v170;
  v67 = type metadata accessor for Header.TextVStack.TitleAttributionStack(0, (uint64_t)&v198);
  v68 = a1;
  v69 = a1 + *(int *)(v67 + 112);
  v70 = *(_QWORD *)v69;
  LOBYTE(a8) = *(_BYTE *)(v69 + 8);
  sub_10006B3F8(*(_QWORD *)v69, (char)a8);
  LOBYTE(v19) = sub_100824E38(v70, (char)a8);
  sub_10006B604(v70, (char)a8);
  v71 = v66[1];
  if ((v19 & 1) != 0)
  {
    View.layoutPriority(_:)(v65, v66[1], 1.0);
    v85 = sub_100049F28(&qword_1011BE8A8, &qword_1011BE8B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    v193 = v71;
    v194 = v85;
    v86 = v152;
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v152);
    v178 = v62;
    *(_QWORD *)&v168 = WitnessTable;
    sub_10081EB14((uint64_t)v59, v86, (uint64_t)v62);
    v170 = v56;
    v88 = *(void (**)(_QWORD, _QWORD))(v56 + 8);
    v171 = (uint64_t)v59;
    v169 = v88;
    v89 = ((uint64_t (*)(char *, uint64_t))v88)(v59, v86);
    v90 = static Alignment.center.getter(v89);
    _FrameLayout.init(width:height:alignment:)(&v207, 0, 1, 0, 0, v90, v91);
    v167 = (_QWORD *)v207;
    LODWORD(v166) = v208;
    v165 = v209;
    LODWORD(v164) = v210;
    v163 = v211;
    v162 = v212;
    v92 = v173;
    v93 = *(void (**)(char *, uint64_t, uint64_t))(v173 + 16);
    v94 = v151;
    v95 = v174;
    v93(v151, v68 + *(int *)(v67 + 100), v174);
    v96 = v177;
    v97 = v176;
    if (v177[6](v94, 1, v176) == 1)
    {
      v98 = *(void (**)(char *, uint64_t))(v92 + 8);
      v98(v94, v95);
      v99 = v153;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v96[7])(v153, 1, 1, v97);
      v100 = *((_QWORD *)v172 + 1);
      v101 = v175;
      sub_1004D497C(v99, v97, v175);
    }
    else
    {
      v127 = (uint64_t)v144;
      v96[4](v144, (uint64_t)v94, v97);
      v100 = *((_QWORD *)v172 + 1);
      v128 = v154;
      sub_10081EB14(v127, v97, v154);
      v129 = v96[1];
      ((void (*)(uint64_t, uint64_t))v129)(v127, v97);
      v130 = v153;
      sub_1000EA744(v128, v97, v153);
      v131 = v128;
      v99 = v130;
      ((void (*)(uint64_t, uint64_t))v129)(v131, v97);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v96[7])(v130, 0, 1, v97);
      v101 = v175;
      sub_1004D497C(v130, v97, v175);
      v98 = *(void (**)(char *, uint64_t))(v92 + 8);
    }
    v126 = (uint64_t)v179;
    v98((char *)v99, v95);
    v132 = v171;
    v133 = v86;
    (*(void (**)(uint64_t, char *, uint64_t))(v170 + 16))(v171, v178, v86);
    v198 = 0;
    LOBYTE(v199) = 1;
    v200 = (void (*)(_QWORD, _QWORD))v167;
    LOBYTE(v201) = v166;
    v202 = v165;
    LOBYTE(v203) = v164;
    v204 = v163;
    *(_QWORD *)&v205 = v162;
    v190 = v132;
    v191 = &v198;
    v93((char *)v99, v101, v95);
    v192 = v99;
    v189[0] = v86;
    v189[1] = v155;
    v189[2] = v95;
    v186 = v168;
    v187 = sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
    v185 = v100;
    v188 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v95);
    v134 = (uint64_t)v156;
    sub_1004D49B8(&v190, 3uLL, (uint64_t)v189);
    v98((char *)v99, v95);
    v135 = v86;
    v136 = (void (*)(uint64_t, uint64_t))v98;
    v137 = (void (*)(char *, uint64_t))v169;
    v169(v132, v135);
    v113 = v183;
    v138 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v183);
    v122 = v182;
    v139 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v182);
    sub_1008171F4(v134, v113, v122, v138, v139);
    (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v134, v122);
    v136(v175, v95);
    v137(v178, v133);
  }
  else
  {
    v171 = v66[1];
    sub_10081EB14(v68, v65, v166);
    v72 = v68 + *(int *)(v67 + 100);
    v73 = v173;
    v74 = v150;
    v75 = v174;
    (*(void (**)(char *, uint64_t, uint64_t))(v173 + 16))(v150, v72, v174);
    v76 = v177;
    v77 = v176;
    v78 = v177[6](v74, 1, v176);
    v175 = v65;
    if (v78 == 1)
    {
      (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
      v79 = v162;
      v80 = (uint64_t)v161;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 56))(v161, 1, 1, v162);
      swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v79);
      v81 = (uint64_t)v178;
      sub_1004D497C(v80, v79, (uint64_t)v178);
      v82 = v158;
      v83 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v158 + 8);
      v84 = v80;
    }
    else
    {
      v102 = (uint64_t)v145;
      v76[4](v145, (uint64_t)v74, v77);
      v103 = v172;
      v104 = (uint64_t)v147;
      (*((void (**)(uint64_t, char *))v172 + 2))(v77, v172);
      v105 = sub_100007E8C(&qword_1011A5368);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v104, 0, 1, v105);
      *(_QWORD *)(v104 + *(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)) = 0x403A000000000000;
      v106 = (uint64_t *)*((_QWORD *)v103 + 1);
      v107 = v154;
      sub_10081EB14(v102, v77, v154);
      v108 = v148;
      sub_10005B704(v104, v148, type metadata accessor for BaselineSpacer);
      v198 = v108;
      v109 = v146;
      v76[2](v146, v107, v77);
      v199 = (uint64_t)v109;
      v207 = v149;
      v208 = v77;
      v190 = sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
      v191 = v106;
      v110 = (uint64_t)v161;
      sub_1004D49B8(&v198, 2uLL, (uint64_t)&v207);
      v111 = v76[1];
      ((void (*)(uint64_t, uint64_t))v111)(v107, v77);
      sub_10005B748(v104, type metadata accessor for BaselineSpacer);
      ((void (*)(uint64_t, uint64_t))v111)(v102, v77);
      v80 = v110;
      ((void (*)(char *, uint64_t))v111)(v109, v77);
      sub_10005B748(v108, type metadata accessor for BaselineSpacer);
      v79 = v162;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 56))(v110, 0, 1, v162);
      swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v79);
      v81 = (uint64_t)v178;
      sub_1004D497C(v110, v79, (uint64_t)v178);
      v82 = v158;
      v83 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v158 + 8);
      v84 = v110;
    }
    v112 = v165;
    v177 = v83;
    ((void (*)(uint64_t, uint64_t))v83)(v84, v165);
    v113 = v183;
    v114 = v160;
    v115 = (uint64_t)v159;
    v116 = v166;
    v117 = v175;
    (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v159, v166, v175);
    v198 = v115;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v80, v81, v112);
    v199 = v80;
    v207 = v117;
    v208 = v112;
    v190 = v171;
    v197 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v79);
    v191 = (uint64_t *)swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v112);
    v118 = (uint64_t)v163;
    sub_1004D49B8(&v198, 2uLL, (uint64_t)&v207);
    v119 = v177;
    ((void (*)(uint64_t, uint64_t))v177)(v80, v112);
    v120 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
    v120(v115, v117);
    v121 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v113);
    v122 = v182;
    v123 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v182);
    v124 = v179;
    sub_100817130(v118, v113, v122, v121, v123);
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v118, v113);
    ((void (*)(char *, uint64_t))v119)(v178, v112);
    v125 = v117;
    v126 = (uint64_t)v124;
    v120(v116, v125);
  }
  v140 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v113);
  v141 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v122);
  v195 = v140;
  v196 = v141;
  v142 = v181;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v181);
  sub_1000EA744(v126, v142, v184);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v180 + 8))(v126, v142);
}

uint64_t sub_100871B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  char v13;
  char v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[18];
  _BYTE v43[152];

  v40 = a2;
  v39 = type metadata accessor for BaselineSpacer(0);
  __chkstk_darwin(v39);
  v38 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_1011CDB80);
  __chkstk_darwin(v41);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicTypeSize(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v2[*(int *)(a1 + 104)];
  v12 = *(_QWORD *)v11;
  v13 = v11[8];
  sub_10006B3F8(*(_QWORD *)v11, v13);
  v14 = sub_100824E38(v12, v13);
  sub_10006B604(v12, v13);
  if ((v14 & 1) != 0)
  {
    v23 = (uint64_t)v6;
    v24 = v39;
    v25 = v2;
    v26 = sub_1008237B8((uint64_t)v10);
    v27 = DynamicTypeSize.isAccessibilitySize.getter(v26);
    v28 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if ((v27 & 1) != 0)
    {
      sub_10087CC14((uint64_t)v42);
    }
    else
    {
      if (*v25)
        v29 = 40.0;
      else
        v29 = 78.0;
      v30 = static Alignment.center.getter(v28);
      sub_10014C7C0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v42, v29, 0, v29, 0, v30, v31, 0, 1);
      v42[16] = 0;
      sub_10087CC0C((uint64_t)v42);
    }
    sub_100065228((uint64_t)v42, (uint64_t)v43, &qword_1011CDB88);
    v32 = v24;
    v33 = v41;
    sub_100065228((uint64_t)v43, v23, &qword_1011CDB88);
    swift_storeEnumTagMultiPayload(v23, v33, 1);
    v34 = sub_100007E8C(&qword_1011CDB88);
    v35 = sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
    v36 = sub_10087CB04();
    return _ConditionalContent<>.init(storage:)(v23, v32, v34, v35, v36);
  }
  else
  {
    v15 = &v2[*(int *)(a1 + 100)];
    v16 = type metadata accessor for Font.TextStyle(0);
    v17 = (uint64_t)v38;
    (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v38, v15, v16);
    v18 = sub_100007E8C(&qword_1011A5368);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
    *(_QWORD *)(v17 + *(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)) = 0x4042800000000000;
    sub_10005B704(v17, (uint64_t)v6, type metadata accessor for BaselineSpacer);
    swift_storeEnumTagMultiPayload(v6, v41, 0);
    v19 = sub_100007E8C(&qword_1011CDB88);
    v20 = sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
    v21 = sub_10087CB04();
    _ConditionalContent<>.init(storage:)(v6, v39, v19, v20, v21);
    return sub_10005B748(v17, type metadata accessor for BaselineSpacer);
  }
}

double sub_100871E98@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  unsigned __int8 v30;
  __int128 v31;

  v5 = a2 & 1;
  sub_10006B3F8(a1, a2 & 1);
  v6 = sub_100824E38(a1, v5);
  v7 = sub_10006B604(a1, v5);
  if ((v6 & 1) != 0)
  {
    v8 = static Alignment.center.getter(v7);
    _FrameLayout.init(width:height:alignment:)(&v27, 0, 1, 0x4008000000000000, 0, v8, v9);
    v17 = xmmword_100EA85A0;
    *(_QWORD *)&v18 = v27;
    *((_QWORD *)&v18 + 1) = v28;
    *(_QWORD *)&v19 = v29;
    *((_QWORD *)&v19 + 1) = v30;
    v20 = v31;
    v21 = 1;
  }
  else
  {
    v21 = 0;
    v19 = 0u;
    v20 = 0u;
    v17 = 0u;
    v18 = 0u;
  }
  v10 = sub_100007E8C(&qword_1011B7088);
  v11 = sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
  _ConditionalContent<>.init(storage:)(&v17, &type metadata for EmptyView, v10, &protocol witness table for EmptyView, v11);
  result = *(double *)&v22;
  v13 = v23;
  v14 = v24;
  v15 = v25;
  v16 = v26;
  *(_OWORD *)a3 = v22;
  *(_OWORD *)(a3 + 16) = v13;
  *(_OWORD *)(a3 + 32) = v14;
  *(_OWORD *)(a3 + 48) = v15;
  *(_BYTE *)(a3 + 64) = v16;
  return result;
}

uint64_t sub_100871FD8(_QWORD *a1, uint64_t a2)
{
  return sub_100873EF0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100871E98);
}

uint64_t sub_100871FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t WitnessTable;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[2];
  uint64_t v113[13];

  v102 = a2;
  v3 = type metadata accessor for BaselineSpacer(255);
  v97 = a1;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = sub_100044B54(&qword_1011BE8B0);
  v6 = type metadata accessor for ModifiedContent(255, v4, v5);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v3, v6, 0, 0);
  v8 = type metadata accessor for TupleView(0, TupleTypeMetadata2);
  v90 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v89 = (char *)&v82 - v9;
  v87 = v3;
  __chkstk_darwin(v10);
  v86 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v88 = (char *)&v82 - v13;
  v91 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v14);
  v92 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v93 = (uint64_t)&v82 - v17;
  v96 = v18;
  v19 = type metadata accessor for _ConditionalContent(0, v18, v6);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v94 = (char *)&v82 - v21;
  v22 = type metadata accessor for Optional(0, v4);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v82 - v24;
  v26 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v27);
  v103 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for Optional(0, v19);
  v99 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v30 = (char *)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v31);
  v100 = (uint64_t)&v82 - v33;
  v34 = v95;
  (*(void (**)(char *, __n128))(v23 + 16))(v25, v32);
  v98 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v25, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v30, 1, 1, v19);
    v35 = v96;
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v96);
    v37 = *(_QWORD *)(*(_QWORD *)(v97 + 72) + 8);
    v38 = sub_100049F28(&qword_1011BE8A8, &qword_1011BE8B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    v113[11] = v37;
    v113[12] = v38;
    v39 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    v113[9] = WitnessTable;
    v113[10] = v39;
    swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v19);
    v40 = (uint64_t)v30;
    v41 = v6;
  }
  else
  {
    v83 = v19;
    v85 = v20;
    v84 = v30;
    v35 = v96;
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v103, v25, v4);
    v42 = v97;
    v43 = v34 + *(int *)(v97 + 100);
    v44 = *(_QWORD *)v43;
    v45 = *(_BYTE *)(v43 + 8);
    sub_10006B3F8(*(_QWORD *)v43, v45);
    v46 = sub_100824E38(v44, v45);
    sub_10006B604(v44, v45);
    v47 = *(_QWORD *)(v42 + 72);
    if ((v46 & 1) != 0)
    {
      v61 = *(_QWORD *)(v47 + 8);
      v62 = (uint64_t)v92;
      v63 = v103;
      View.layoutPriority(_:)(v4, v61, 2.0);
      v64 = sub_100049F28(&qword_1011BE8A8, &qword_1011BE8B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
      v97 = v61;
      v104 = v61;
      v105 = v64;
      v65 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
      v66 = v93;
      sub_10081EB14(v62, v6, v93);
      v67 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
      v67(v62, v6);
      sub_1000EA744(v66, v6, v62);
      v68 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v35);
      v60 = (uint64_t)v94;
      sub_1008171F4(v62, v35, v6, v68, v65);
      v67(v62, v6);
      v67(v66, v6);
      v69 = v4;
      v41 = v6;
      (*(void (**)(char *, uint64_t))(v98 + 8))(v63, v69);
    }
    else
    {
      v48 = (uint64_t)v88;
      (*(void (**)(uint64_t, _QWORD))(v47 + 16))(v4, *(_QWORD *)(v42 + 72));
      v49 = sub_100007E8C(&qword_1011A5368);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
      *(_QWORD *)(v48 + *(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)) = 0x4034000000000000;
      v50 = *(_QWORD *)(v47 + 8);
      v82 = v4;
      v51 = (uint64_t)v92;
      View.layoutPriority(_:)(v4, v50, 2.0);
      v52 = sub_100049F28(&qword_1011BE8A8, &qword_1011BE8B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
      v97 = v50;
      v113[2] = v50;
      v113[3] = v52;
      v41 = v6;
      v53 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
      v54 = v93;
      sub_10081EB14(v51, v6, v93);
      v55 = v91;
      v56 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
      v56(v51, v41);
      v57 = v86;
      sub_10005B704(v48, v86, type metadata accessor for BaselineSpacer);
      v113[0] = v57;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v51, v54, v41);
      v113[1] = v51;
      v112[0] = v87;
      v112[1] = v41;
      v110 = sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
      v111 = v53;
      v58 = (uint64_t)v89;
      sub_1004D49B8(v113, 2uLL, (uint64_t)v112);
      v56(v51, v41);
      sub_10005B748(v57, type metadata accessor for BaselineSpacer);
      v59 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v35);
      v60 = (uint64_t)v94;
      sub_100817130(v58, v35, v41, v59, v53);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v58, v35);
      v56(v54, v41);
      sub_10005B748(v48, type metadata accessor for BaselineSpacer);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v103, v82);
    }
    v19 = v83;
    v70 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v35);
    v71 = sub_100049F28(&qword_1011BE8A8, &qword_1011BE8B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    v37 = v97;
    v108 = v97;
    v109 = v71;
    v72 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v41);
    v106 = v70;
    v107 = v72;
    swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v19);
    v40 = (uint64_t)v84;
    sub_1000EA744(v60, v19, (uint64_t)v84);
    v73 = v85;
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v60, v19);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56))(v40, 0, 1, v19);
  }
  v74 = v100;
  sub_1004D497C(v40, v19, v100);
  v75 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
  v76 = v40;
  v77 = v101;
  v75(v76, v101);
  v78 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v35);
  v79 = sub_100049F28(&qword_1011BE8A8, &qword_1011BE8B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  v113[7] = v37;
  v113[8] = v79;
  v80 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v41);
  v113[5] = v78;
  v113[6] = v80;
  v113[4] = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v19);
  swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v77);
  sub_1000EA744(v74, v77, v102);
  return ((uint64_t (*)(uint64_t, uint64_t))v75)(v74, v77);
}

uint64_t sub_100872914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t TupleTypeMetadata3;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  double v61;
  void (*v62)(_QWORD, _QWORD);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  void (*v84)(uint64_t, uint64_t);
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t WitnessTable;
  uint64_t (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v98)(_QWORD, _QWORD);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD v129[8];
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v119 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  v124 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  v125 = *(_QWORD *)(a1 + 88);
  v130 = v3;
  v131 = v4;
  v132 = v6;
  v133 = v5;
  v134 = v7;
  v135 = v8;
  v136 = v9;
  v137 = v124;
  v138 = v10;
  v139 = v125;
  v123 = type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.After(0, (uint64_t)&v130);
  v103 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v104 = (uint64_t)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v105 = (uint64_t)&v88 - v13;
  v14 = type metadata accessor for ModifiedContent(0, v5, &type metadata for _FlexFrameLayout);
  v97 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v95 = (char *)&v88 - v15;
  v16 = sub_100044B54(&qword_1011BE8B0);
  v98 = (void (*)(_QWORD, _QWORD))v14;
  v17 = type metadata accessor for ModifiedContent(0, v14, v16);
  v100 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v102 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v96 = (char *)&v88 - v20;
  __chkstk_darwin(v21);
  v111 = (uint64_t)&v88 - v22;
  v23 = type metadata accessor for Font.TextStyle(0);
  __chkstk_darwin(v23);
  v106 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = v3;
  v130 = v3;
  v131 = v4;
  v116 = v4;
  v118 = v6;
  v132 = v6;
  v133 = v5;
  v117 = v7;
  v134 = v7;
  v135 = v8;
  v113 = v8;
  v114 = v9;
  v136 = v9;
  v137 = v124;
  v99 = v10;
  v138 = v10;
  v139 = v125;
  v25 = type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.Before(0, (uint64_t)&v130);
  v107 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v122 = (uint64_t)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v121 = (uint64_t)&v88 - v28;
  v29 = type metadata accessor for Optional(0, v5);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v88 - v31;
  v33 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v34);
  v36 = (char *)&v88 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = v25;
  v101 = v17;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v25, v17, v123, 0, 0);
  v38 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v39 = type metadata accessor for Optional(0, v38);
  v110 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v109 = (char *)&v88 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __chkstk_darwin(v41);
  v112 = (uint64_t)&v88 - v43;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v30 + 16))(v32, v120, v29, v42);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v32, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    v44 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v109, 1, 1, v38);
    swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v38);
    v45 = v112;
    sub_1004D497C(v44, v38, v112);
    v46 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v46(v44, v39);
  }
  else
  {
    v93 = v33;
    v47 = v36;
    v48 = v5;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v36, v32, v5);
    v49 = v99;
    v90 = *(void (**)(uint64_t, uint64_t))(v99 + 16);
    v50 = (uint64_t)v106;
    v90(v5, v99);
    *((_QWORD *)&v86 + 1) = v49;
    *(_QWORD *)&v86 = v124;
    v51 = v122;
    v94 = v48;
    sub_1008733AC(v50, v115, v116, v118, v48, v117, v113, v114, v122, v86, v125, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.Before);
    v52 = v108;
    WitnessTable = swift_getWitnessTable(&unk_100ED41C0, v108);
    sub_10081EB14(v51, v52, v121);
    v92 = *(uint64_t (**)(uint64_t, uint64_t))(v107 + 8);
    v53 = v92(v51, v52);
    v54 = static Alignment.leading.getter(v53);
    v55 = *(_QWORD *)(v49 + 8);
    v56 = v95;
    v89 = v47;
    View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v54, v57, v48, v55);
    v58 = v120 + *(int *)(a1 + 100);
    v59 = *(_QWORD *)v58;
    LOBYTE(v48) = *(_BYTE *)(v58 + 8);
    sub_10006B3F8(*(_QWORD *)v58, v48);
    v60 = sub_100824E38(v59, v48);
    sub_10006B604(v59, v48);
    if ((v60 & 1) != 0)
      v61 = 1.0;
    else
      v61 = 0.0;
    v129[5] = v55;
    v129[6] = &protocol witness table for _FlexFrameLayout;
    v62 = v98;
    v63 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v98);
    v64 = (uint64_t)v96;
    View.layoutPriority(_:)(v62, v63, v61);
    (*(void (**)(char *, _QWORD))(v97 + 8))(v56, v62);
    v65 = sub_100049F28(&qword_1011BE8A8, &qword_1011BE8B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    v129[3] = v63;
    v129[4] = v65;
    v66 = v101;
    v97 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v101);
    v120 = v38;
    sub_10081EB14(v64, v66, v111);
    v67 = v100;
    v98 = *(void (**)(_QWORD, _QWORD))(v100 + 8);
    v98(v64, v66);
    v68 = (uint64_t)v106;
    v69 = v94;
    v90(v94, v49);
    *((_QWORD *)&v87 + 1) = v49;
    *(_QWORD *)&v87 = v124;
    v70 = v104;
    sub_1008733AC(v68, v115, v116, v118, v69, v117, v113, v114, v104, v87, v125, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.After);
    v71 = v123;
    v72 = swift_getWitnessTable(&unk_100ED4170, v123);
    v125 = v39;
    v73 = v105;
    sub_10081EB14(v70, v71, v105);
    v74 = v103;
    v75 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v75(v70, v71);
    v76 = v122;
    v77 = v108;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16))(v122, v121, v108);
    v130 = v76;
    v78 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    v79 = v102;
    v80 = v111;
    v78(v102, v111, v66);
    v131 = (uint64_t)v79;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v70, v73, v71);
    v132 = v70;
    v129[0] = v77;
    v129[1] = v66;
    v129[2] = v71;
    v126 = WitnessTable;
    v127 = v97;
    v128 = v72;
    v81 = (uint64_t)v109;
    sub_1004D49B8(&v130, 3uLL, (uint64_t)v129);
    v75(v73, v71);
    v82 = v80;
    v38 = v120;
    v83 = (void (*)(char *, uint64_t))v98;
    v98(v82, v66);
    v84 = (void (*)(uint64_t, uint64_t))v92;
    v92(v121, v77);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v89, v94);
    v75(v70, v71);
    v83(v79, v66);
    v84(v122, v77);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v81, 0, 1, v38);
    swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v38);
    v45 = v112;
    sub_1004D497C(v81, v38, v112);
    v46 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v39 = v125;
    v46(v81, v125);
  }
  v129[7] = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v38);
  swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v39);
  sub_1000EA744(v45, v39, v119);
  return ((uint64_t (*)(uint64_t, uint64_t))v46)(v45, v39);
}

uint64_t sub_1008733AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t (*a12)(_QWORD, _QWORD *))
{
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD v24[7];
  __int128 v25;
  uint64_t v26;

  v20 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v24[0] = a2;
  v24[1] = a3;
  v24[2] = a4;
  v24[3] = a5;
  v24[4] = a6;
  v24[5] = a7;
  v24[6] = a8;
  v25 = a10;
  v26 = a11;
  v21 = a9 + *(int *)(a12(0, v24) + 100);
  result = swift_getKeyPath(&unk_100ED3A00);
  *(_QWORD *)v21 = result;
  *(_BYTE *)(v21 + 8) = 0;
  return result;
}

uint64_t sub_100873484(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for BaselineSpacer(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011CDBB8);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + *(int *)(a1 + 100);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_10006B3F8(*(_QWORD *)v9, v11);
  v12 = sub_100824E38(v10, v11);
  sub_10006B604(v10, v11);
  if ((v12 & 1) != 0)
  {
    swift_storeEnumTagMultiPayload(v8, v6, 1);
    v17 = sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
    return _ConditionalContent<>.init(storage:)(v8, v3, &type metadata for EmptyView, v17, &protocol witness table for EmptyView);
  }
  else
  {
    v13 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v5, v1, v13);
    v14 = sub_100007E8C(&qword_1011A5368);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 0, 1, v14);
    *(_QWORD *)&v5[*(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)] = 0x403E000000000000;
    sub_10005B704((uint64_t)v5, (uint64_t)v8, type metadata accessor for BaselineSpacer);
    swift_storeEnumTagMultiPayload(v8, v6, 0);
    v15 = sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
    _ConditionalContent<>.init(storage:)(v8, v3, &type metadata for EmptyView, v15, &protocol witness table for EmptyView);
    return sub_10005B748((uint64_t)v5, type metadata accessor for BaselineSpacer);
  }
}

uint64_t sub_10087369C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  __int128 v33;

  v3 = type metadata accessor for BaselineSpacer(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011CDBC0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + *(int *)(a1 + 100);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_10006B3F8(*(_QWORD *)v9, v11);
  v12 = sub_100824E38(v10, v11);
  v13 = sub_10006B604(v10, v11);
  if ((v12 & 1) != 0)
  {
    v20 = static Alignment.center.getter(v13);
    _FrameLayout.init(width:height:alignment:)(&v29, 0, 1, 0x403C000000000000, 0, v20, v21);
    v22 = v29;
    v23 = v30;
    v24 = v31;
    v25 = v32;
    *(_QWORD *)v8 = 0;
    v8[8] = 1;
    *((_QWORD *)v8 + 2) = v22;
    v8[24] = v23;
    *((_QWORD *)v8 + 4) = v24;
    v8[40] = v25;
    *((_OWORD *)v8 + 3) = v33;
    swift_storeEnumTagMultiPayload(v8, v6, 1);
    v26 = sub_100007E8C(&qword_1011B7088);
    v27 = sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
    v28 = sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
    return _ConditionalContent<>.init(storage:)(v8, v3, v26, v27, v28);
  }
  else
  {
    v14 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v5, v1, v14);
    v15 = sub_100007E8C(&qword_1011A5368);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v5, 0, 1, v15);
    *(_QWORD *)&v5[*(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)] = 0x4036000000000000;
    sub_10005B704((uint64_t)v5, (uint64_t)v8, type metadata accessor for BaselineSpacer);
    swift_storeEnumTagMultiPayload(v8, v6, 0);
    v16 = sub_100007E8C(&qword_1011B7088);
    v17 = sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
    v18 = sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
    _ConditionalContent<>.init(storage:)(v8, v3, v16, v17, v18);
    return sub_10005B748((uint64_t)v5, type metadata accessor for BaselineSpacer);
  }
}

uint64_t sub_100873974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t WitnessTable;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  char v54[8];
  uint64_t v55;
  char v56;
  uint64_t *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;

  v2 = a1;
  v41 = a2;
  v32 = *(_QWORD *)(a1 + 48);
  v40 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(a1);
  v39 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v42 = (uint64_t)&v30 - v5;
  v8 = v6[2];
  v7 = (char *)v6[3];
  v10 = v6[5];
  v33 = (char *)v6[4];
  v9 = v33;
  v35 = v10;
  v12 = v6[8];
  v34 = v6[7];
  v11 = v34;
  v13 = v6[9];
  v14 = v6[10];
  v15 = v6[11];
  KeyPath = swift_getKeyPath(&unk_100ED3A00);
  v46 = KeyPath;
  LOBYTE(v47) = 0;
  v57 = (uint64_t *)v8;
  v58 = v7;
  v59 = v9;
  v60 = v10;
  v16 = v32;
  v61 = v32;
  v62 = v11;
  v63 = v12;
  v64 = v13;
  v65 = v14;
  v66 = v15;
  v17 = type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.Before(0, (uint64_t)&v57);
  v37 = v17;
  WitnessTable = swift_getWitnessTable(&unk_100ED4120, v17);
  sub_10081EB14((uint64_t)&v46, v17, (uint64_t)&v67);
  sub_10006B604(KeyPath, 0);
  v18 = v42;
  v19 = v36;
  sub_10081EB14(v36, v16, v42);
  LOBYTE(v2) = *(_BYTE *)(v19 + *(int *)(v2 + 100));
  v20 = swift_getKeyPath(&unk_100ED3A00);
  LOBYTE(v46) = v2;
  v47 = v20;
  LOBYTE(v48) = 0;
  v57 = (uint64_t *)v8;
  v58 = v7;
  v59 = v33;
  v60 = v35;
  v61 = v16;
  v62 = v34;
  v63 = v12;
  v64 = v13;
  v65 = v14;
  v66 = v15;
  v21 = v15;
  v22 = type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.After(0, (uint64_t)&v57);
  v23 = swift_getWitnessTable(&unk_100ED40D0, v22);
  sub_10081EB14((uint64_t)&v46, v22, (uint64_t)v54);
  sub_10006B604(v20, 0);
  v24 = v67;
  LOBYTE(v8) = v68;
  v52 = v67;
  v53 = v68;
  v57 = &v52;
  v25 = v40;
  v26 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v18, v16);
  v27 = v55;
  LOBYTE(v13) = v56;
  v49 = v54[0];
  v50 = v55;
  v51 = v56;
  v58 = v26;
  v59 = &v49;
  sub_10006B3F8(v24, v8);
  sub_10006B3F8(v27, v13);
  v46 = v37;
  v47 = v16;
  v48 = v22;
  v43 = WitnessTable;
  v44 = v21;
  v45 = v23;
  sub_1004D49B8((uint64_t *)&v57, 3uLL, (uint64_t)&v46);
  sub_10006B604(v55, v56);
  v28 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v28(v42, v16);
  sub_10006B604(v67, v68);
  sub_10006B604(v50, v51);
  v28((uint64_t)v26, v16);
  return sub_10006B604(v52, v53);
}

uint64_t sub_100873CD4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for BaselineSpacer(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011CDBB8);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 &= 1u;
  sub_10006B3F8(a1, a2);
  v10 = sub_100824E38(a1, a2);
  sub_10006B604(a1, a2);
  if ((v10 & 1) != 0)
  {
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v16 = sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
    return _ConditionalContent<>.init(storage:)(v9, v4, &type metadata for EmptyView, v16, &protocol witness table for EmptyView);
  }
  else
  {
    v11 = enum case for Font.TextStyle.body(_:);
    v12 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v6, v11, v12);
    v13 = sub_100007E8C(&qword_1011A5368);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
    *(_QWORD *)&v6[*(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)] = 0x4033000000000000;
    sub_10005B704((uint64_t)v6, (uint64_t)v9, type metadata accessor for BaselineSpacer);
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    v14 = sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
    _ConditionalContent<>.init(storage:)(v9, v4, &type metadata for EmptyView, v14, &protocol witness table for EmptyView);
    return sub_10005B748((uint64_t)v6, type metadata accessor for BaselineSpacer);
  }
}

uint64_t sub_100873EE4(_QWORD *a1, uint64_t a2)
{
  return sub_100873EF0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100873CD4);
}

uint64_t sub_100873EF0(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v3;

  return a3(*(_QWORD *)v3, *(unsigned __int8 *)(v3 + 8), a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
}

double sub_100873F38@<D0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  double result;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int16 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;
  char v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  unsigned __int8 v40;
  __int128 v41;

  v7 = a3 & 1;
  sub_10006B3F8(a2, a3 & 1);
  v8 = sub_100824E38(a2, v7);
  v9 = sub_10006B604(a2, v7);
  if ((v8 & 1) != 0)
  {
    v28 = 0u;
    v29 = 0u;
    v26 = 0u;
    v27 = 0u;
    v30 = 256;
  }
  else
  {
    if ((a1 & 1) != 0)
    {
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0uLL;
    }
    else
    {
      v16 = static Alignment.center.getter(v9);
      v10 = 1;
      _FrameLayout.init(width:height:alignment:)(&v37, 0, 1, 0x403A000000000000, 0, v16, v17);
      v11 = v37;
      v12 = v38;
      v13 = v39;
      v14 = v40;
      v15 = v41;
    }
    *(_QWORD *)&v26 = 0;
    *((_QWORD *)&v26 + 1) = v10;
    *(_QWORD *)&v27 = v11;
    *((_QWORD *)&v27 + 1) = v12;
    *(_QWORD *)&v28 = v13;
    *((_QWORD *)&v28 + 1) = v14;
    v29 = v15;
    v30 = a1 & 1;
  }
  v18 = sub_100007E8C(&qword_1011C3A18);
  v19 = sub_1006D0764();
  _ConditionalContent<>.init(storage:)(&v26, v18, &type metadata for EmptyView, v19, &protocol witness table for EmptyView);
  result = *(double *)&v31;
  v21 = v32;
  v22 = v33;
  v23 = v34;
  v24 = v35;
  v25 = v36;
  *(_OWORD *)a4 = v31;
  *(_OWORD *)(a4 + 16) = v21;
  *(_OWORD *)(a4 + 32) = v22;
  *(_OWORD *)(a4 + 48) = v23;
  *(_BYTE *)(a4 + 64) = v24;
  *(_BYTE *)(a4 + 65) = v25;
  return result;
}

double sub_10087408C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100873F38(*(_BYTE *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_1008740E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[48];
  uint64_t v51;
  unsigned __int8 v52;
  _QWORD v53[3];
  unsigned __int8 v54;
  _OWORD v55[3];
  __int128 v56[8];
  _OWORD v57[8];
  _BYTE v58[72];

  v2 = v1;
  v49 = a1;
  v3 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s7ArtworkVMa(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100007E8C(&qword_1011CD4C0);
  __chkstk_darwin(v48);
  v47 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(v2, (uint64_t)v8, (uint64_t *)&unk_1011A3E10);
  v13 = type metadata accessor for ArtworkImage.Info(0);
  sub_10005B704(v2 + *(int *)(v13 + 20), (uint64_t)v5, type metadata accessor for ArtworkImage.Placeholder);
  v14 = (int *)type metadata accessor for Header.AdaptativeArtwork(0);
  v15 = v2 + v14[8];
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_10006B3F8(*(_QWORD *)v15, v17);
  v18 = sub_100824E38(v16, v17);
  sub_10006B604(v16, v17);
  sub_100065228(v2 + v14[6], (uint64_t)v58, &qword_1011B4788);
  sub_100878670(v18, (uint64_t)v58, (uint64_t)v50);
  v19 = v2 + *(int *)(v13 + 32);
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v8, (uint64_t)v46, 0, 1, (uint64_t)v50, *(_QWORD *)v19, *(_QWORD *)(v19 + 8), *(_BYTE *)(v19 + 16), (uint64_t)v11);
  sub_10004A160(v2 + v14[5], (uint64_t)&v11[*(int *)(v9 + 20)], &qword_1011BCC50);
  v20 = (uint64_t *)(v2 + v14[7]);
  v21 = *v20;
  v22 = v20[1];
  v23 = &v11[*(int *)(v9 + 24)];
  *(_QWORD *)v23 = v21;
  *((_QWORD *)v23 + 1) = v22;
  sub_10006B3F8(v16, v17);
  swift_bridgeObjectRetain();
  LOBYTE(v22) = sub_100824E38(v16, v17);
  sub_10006B604(v16, v17);
  sub_100878670(v22, (uint64_t)v58, (uint64_t)&v51);
  v24 = v51;
  v25 = v52;
  sub_10006B3F8(v16, v17);
  LOBYTE(v14) = sub_100824E38(v16, v17);
  sub_10006B604(v16, v17);
  v26 = sub_100878670((char)v14, (uint64_t)v58, (uint64_t)v53);
  v27 = v53[2];
  v28 = v54;
  v29 = static Alignment.center.getter(v26);
  _FrameLayout.init(width:height:alignment:)(v55, v24, v25, v27, v28, v29, v30);
  v31 = v47;
  sub_10005B704((uint64_t)v11, v47, _s7ArtworkVMa);
  v32 = v48;
  v33 = (_OWORD *)(v31 + *(int *)(v48 + 36));
  v34 = v55[1];
  *v33 = v55[0];
  v33[1] = v34;
  v33[2] = v55[2];
  sub_10005B748((uint64_t)v11, _s7ArtworkVMa);
  v35 = Radiosity.Specs.containerDetailHeaderArtwork.unsafeMutableAddressor();
  v36 = v35[3];
  v38 = *v35;
  v37 = v35[1];
  v57[2] = v35[2];
  v57[3] = v36;
  v57[0] = v38;
  v57[1] = v37;
  v39 = v35[7];
  v41 = v35[4];
  v40 = v35[5];
  v57[6] = v35[6];
  v57[7] = v39;
  v57[4] = v41;
  v57[5] = v40;
  v42 = *(_QWORD *)v19;
  v43 = *(_QWORD *)(v19 + 8);
  LOBYTE(v25) = *(_BYTE *)(v19 + 16);
  sub_1005779B8((uint64_t)v57);
  Radiosity.Specs.pathShadow(for:)(v42, v43, v25, (uint64_t)v56);
  sub_100577A18((uint64_t)v57);
  v44 = sub_100878838();
  View.radiosity(specs:)(v56, v32, v44);
  sub_100577A18((uint64_t)v56);
  return sub_10004FF60(v31, &qword_1011CD4C0);
}

uint64_t sub_1008744A8(char a1)
{
  return sub_1008745F0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10086C1A0);
}

uint64_t sub_1008744B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Header(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  v5 = v0 + v3 + *(int *)(v1 + 20);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v5, v7);
  }
  else
  {
    swift_release();
  }
  v9 = v0 + v3 + *(int *)(v1 + 24);
  v10 = sub_100007E8C(&qword_1011D13C0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1008745E4(char a1)
{
  return sub_1008745F0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10086CDB4);
}

uint64_t sub_1008745F0(char a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = a1 & 1;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Header(0) - 8) + 80);
  return a2(v3, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_10087464C(uint64_t a1)
{
  return EnvironmentValues.colorScheme.getter(a1);
}

uint64_t sub_10087466C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086DA64(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_1008746C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10086B6B8(a1, (uint64_t)&unk_100ED3A78, &OBJC_IVAR____TtCV5Music6Header13Configuration__playIntentButtonIntents, a2);
}

uint64_t sub_1008746F0()
{
  uint64_t v0;

  return sub_1005FF62C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100874708()
{
  uint64_t *v0;

  return sub_1005FF728(v0[2], v0[3], v0[4]);
}

uint64_t sub_100874724()
{
  uint64_t v0;

  return sub_1005FF928(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100874748@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10086B354(a1, (uint64_t)&unk_100ED3AF8, &OBJC_IVAR____TtCV5Music6Header13Configuration__metadata, &qword_1011BD7F8, a2);
}

uint64_t sub_100874778()
{
  uint64_t v0;

  return sub_1005FF440(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1008747A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008747C4()
{
  uint64_t *v0;

  return sub_1005FF3E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1008747E0()
{
  uint64_t v0;

  return sub_1005FF2DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_100874808@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10086B354(a1, (uint64_t)&unk_100ED3B98, &OBJC_IVAR____TtCV5Music6Header13Configuration__favoriteStatus, &qword_1011A19A0, a2);
}

uint64_t sub_100874838()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100874858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086DA64(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_10087487C()
{
  uint64_t v0;

  return sub_1005FF208(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100874894()
{
  uint64_t *v0;

  return sub_1005FF1A8(v0[2], v0[3], v0[4]);
}

uint64_t type metadata accessor for Header.AdaptativeArtwork(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CD3B8, (uint64_t)&nominal type descriptor for Header.AdaptativeArtwork);
}

uint64_t sub_1008748C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10086B354(a1, (uint64_t)&unk_100ED3BF0, &OBJC_IVAR____TtCV5Music6Header13Configuration__artworkInfo, (uint64_t *)&unk_1011C6790, a2);
}

uint64_t sub_1008748F4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10086B6B8(a1, (uint64_t)&unk_100ED3C18, &OBJC_IVAR____TtCV5Music6Header13Configuration__videoArtworks, a2);
}

uint64_t sub_10087491C()
{
  uint64_t v0;

  return sub_1005FEDB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100874934(_QWORD *a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v8[8];

  v8[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v8[1] = &unk_100ED3C50;
  result = swift_checkMetadataState(319, a1[2]);
  if (v3 <= 0x3F)
  {
    v8[2] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Optional(319, a1[3]);
    if (v4 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for Optional(319, a1[4]);
      if (v5 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(result - 8) + 64;
        result = type metadata accessor for Optional(319, a1[5]);
        if (v6 <= 0x3F)
        {
          v8[5] = *(_QWORD *)(result - 8) + 64;
          result = swift_checkMetadataState(319, a1[6]);
          if (v7 <= 0x3F)
          {
            v8[6] = *(_QWORD *)(result - 8) + 64;
            v8[7] = &unk_100ED3C68;
            swift_initStructMetadata(a1, 0, 8, v8, a1 + 12);
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100874A40(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  size_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  char *v34;
  size_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  const void *v39;
  size_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v47;
  size_t v48;
  uint64_t v49;
  uint64_t v50;
  size_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  size_t __n;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v56 = a3[3];
  v7 = *(_QWORD *)(v56 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v6 + v8;
  if (*(_DWORD *)(v7 + 84))
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  v11 = *(_QWORD *)(a3[4] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  __n = v10;
  if (*(_DWORD *)(v11 + 84))
    v13 = *(_QWORD *)(v11 + 64);
  else
    v13 = *(_QWORD *)(v11 + 64) + 1;
  v14 = *(_QWORD *)(a3[5] - 8);
  v15 = *(_DWORD *)(v14 + 80);
  if (*(_DWORD *)(v14 + 84))
    v16 = *(_QWORD *)(v14 + 64);
  else
    v16 = *(_QWORD *)(v14 + 64) + 1;
  v17 = a3[6];
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 80);
  v20 = v8 | v5 | v12 | v15 | v19;
  if (v20 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v11 + 80) | *(_DWORD *)(v14 + 80) | *(_DWORD *)(v18 + 80)) & 0x100000) != 0
    || ((*(_QWORD *)(v18 + 64)
       + 7
       + ((v16 + v19 + ((v13 + v15 + ((v10 + v12 + ((v6 + v8 + ((v5 + 9) & ~v5)) & ~v8)) & ~v12)) & ~v15)) & ~v19)) & 0xFFFFFFFFFFFFFFF8)
     + 9 > 0x18)
  {
    v23 = *a2;
    *(_QWORD *)a1 = *a2;
    v24 = v23 + ((v20 & 0xF8 ^ 0x1F8) & (v20 + 16));
    swift_retain();
  }
  else
  {
    v48 = v13;
    v49 = a3[4];
    v50 = a3[5];
    v51 = v16;
    v52 = *(_QWORD *)(v18 + 64) + 7;
    v53 = *(_QWORD *)(v17 - 8);
    v54 = a3[6];
    v25 = ~v8;
    v47 = ~v12;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v26 = (a1 + v5 + 9) & ~v5;
    v27 = ((unint64_t)a2 + v5 + 9) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v26, v27);
    v28 = (void *)((v26 + v9) & v25);
    v29 = (char *)((v27 + v9) & v25);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v29, 1, v56))
    {
      v30 = __n;
      memcpy(v28, v29, __n);
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v7 + 16))(v28, v29, v56);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v28, 0, 1, v56);
      v30 = __n;
    }
    v31 = ~v15;
    v32 = &v29[v30];
    v33 = (void *)(((unint64_t)v28 + v30 + v12) & v47);
    v34 = (char *)((unint64_t)&v32[v12] & v47);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v34, 1, v49))
    {
      v35 = v48;
      memcpy(v33, v34, v48);
      v24 = a1;
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v33, v34, v49);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v33, 0, 1, v49);
      v24 = a1;
      v35 = v48;
    }
    v36 = ~v19;
    v37 = &v34[v35];
    v38 = (void *)(((unint64_t)v33 + v35 + v15) & v31);
    v39 = (const void *)((unint64_t)&v37[v15] & v31);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v39, 1, v50))
    {
      v40 = v51;
      memcpy(v38, v39, v51);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v38, v39, v50);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v50);
      v40 = v51;
    }
    v41 = ((unint64_t)v38 + v40 + v19) & v36;
    v42 = ((unint64_t)v39 + v40 + v19) & v36;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v53 + 16))(v41, v42, v54);
    v43 = (v52 + v41) & 0xFFFFFFFFFFFFFFF8;
    v44 = (v52 + v42) & 0xFFFFFFFFFFFFFFF8;
    v45 = *(_QWORD *)v44;
    LOBYTE(v41) = *(_BYTE *)(v44 + 8);
    sub_10006B3F8(*(_QWORD *)v44, v41);
    *(_QWORD *)v43 = v45;
    *(_BYTE *)(v43 + 8) = v41;
  }
  return v24;
}

uint64_t sub_100874DE0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v3 = *(_QWORD *)(a2[2] - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v4);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = a2[3];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_DWORD *)(v7 + 84) == 0;
  v11 = a2[4];
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v9 + v8;
  if (v10)
    ++v13;
  v14 = (v13 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, _QWORD))(v12 + 48))(v14, 1, a2[4]))
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v14, v11);
  v15 = *(_QWORD *)(v12 + 64);
  v10 = *(_DWORD *)(v12 + 84) == 0;
  v16 = a2[5];
  v17 = *(_QWORD *)(v16 - 8);
  v18 = v15 + v14;
  if (v10)
    ++v18;
  v19 = (v18 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, _QWORD))(v17 + 48))(v19, 1, a2[5]))
    (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v19, v16);
  v20 = *(_QWORD *)(a2[6] - 8);
  v21 = *(_QWORD *)(v17 + 64) + v19;
  if (!*(_DWORD *)(v17 + 84))
    ++v21;
  v22 = (v21 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  (*(void (**)(unint64_t))(v20 + 8))(v22);
  v23 = (*(_QWORD *)(v20 + 64) + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10006B604(*(_QWORD *)v23, *(_BYTE *)(v23 + 8));
}

uint64_t sub_100874F58(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  int v16;
  size_t v17;
  size_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  int v26;
  size_t v27;
  size_t v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  int v36;
  size_t v37;
  size_t v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)((v13 + v7) & ~v12);
  v15 = (const void *)((v13 + v8) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
    if (v16)
      v18 = v17;
    else
      v18 = v17 + 1;
    memcpy(v14, v15, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
  }
  if (v16)
    v19 = v17;
  else
    v19 = v17 + 1;
  v20 = a3[4];
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = v19 + v22;
  v24 = (void *)(((unint64_t)v14 + v23) & ~v22);
  v25 = (const void *)(((unint64_t)v15 + v23) & ~v22);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v25, 1, v20))
  {
    v26 = *(_DWORD *)(v21 + 84);
    v27 = *(_QWORD *)(v21 + 64);
    if (v26)
      v28 = v27;
    else
      v28 = v27 + 1;
    memcpy(v24, v25, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v24, v25, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
    v26 = *(_DWORD *)(v21 + 84);
    v27 = *(_QWORD *)(v21 + 64);
  }
  if (v26)
    v29 = v27;
  else
    v29 = v27 + 1;
  v30 = a3[5];
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v29 + v32;
  v34 = (void *)(((unint64_t)v24 + v33) & ~v32);
  v35 = (const void *)(((unint64_t)v25 + v33) & ~v32);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v35, 1, v30))
  {
    v36 = *(_DWORD *)(v31 + 84);
    v37 = *(_QWORD *)(v31 + 64);
    if (v36)
      v38 = v37;
    else
      v38 = v37 + 1;
    memcpy(v34, v35, v38);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v34, v35, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
    v36 = *(_DWORD *)(v31 + 84);
    v37 = *(_QWORD *)(v31 + 64);
  }
  if (v36)
    v39 = v37;
  else
    v39 = v37 + 1;
  v40 = *(_QWORD *)(a3[6] - 8);
  v41 = *(unsigned __int8 *)(v40 + 80);
  v42 = v39 + v41;
  v43 = ((unint64_t)v34 + v42) & ~v41;
  v44 = ((unint64_t)v35 + v42) & ~v41;
  (*(void (**)(unint64_t, unint64_t))(v40 + 16))(v43, v44);
  v45 = *(_QWORD *)(v40 + 64) + 7;
  v46 = (v45 + v43) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v45 + v44) & 0xFFFFFFFFFFFFFFF8;
  v48 = *(_QWORD *)v47;
  LOBYTE(v44) = *(_BYTE *)(v47 + 8);
  sub_10006B3F8(*(_QWORD *)v47, v44);
  *(_QWORD *)v46 = v48;
  *(_BYTE *)(v46 + 8) = v44;
  return a1;
}

uint64_t sub_1008751F0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  int v40;
  size_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)((v13 + v7) & ~v12);
  v15 = (void *)((v13 + v8) & ~v12);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(v14, 1, v10);
  v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v14, v15, v10);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v19 = *(_QWORD *)(v11 + 64);
  else
    v19 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_10:
  if (*(_DWORD *)(v11 + 84))
    v20 = *(_QWORD *)(v11 + 64);
  else
    v20 = *(_QWORD *)(v11 + 64) + 1;
  v21 = a3[4];
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = v20 + v23;
  v25 = (void *)(((unint64_t)v14 + v24) & ~v23);
  v26 = (void *)(((unint64_t)v15 + v24) & ~v23);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v28 = v27(v25, 1, v21);
  v29 = v27(v26, 1, v21);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v25, v26, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v25, v26, v21);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v25, v21);
  }
  if (*(_DWORD *)(v22 + 84))
    v30 = *(_QWORD *)(v22 + 64);
  else
    v30 = *(_QWORD *)(v22 + 64) + 1;
  memcpy(v25, v26, v30);
LABEL_22:
  if (*(_DWORD *)(v22 + 84))
    v31 = *(_QWORD *)(v22 + 64);
  else
    v31 = *(_QWORD *)(v22 + 64) + 1;
  v32 = a3[5];
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v35 = v31 + v34;
  v36 = (void *)(((unint64_t)v25 + v35) & ~v34);
  v37 = (void *)(((unint64_t)v26 + v35) & ~v34);
  v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v39 = v38(v36, 1, v32);
  v40 = v38(v37, 1, v32);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v36, v37, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v32);
      goto LABEL_34;
    }
  }
  else
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v36, v37, v32);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v36, v32);
  }
  if (*(_DWORD *)(v33 + 84))
    v41 = *(_QWORD *)(v33 + 64);
  else
    v41 = *(_QWORD *)(v33 + 64) + 1;
  memcpy(v36, v37, v41);
LABEL_34:
  if (*(_DWORD *)(v33 + 84))
    v42 = *(_QWORD *)(v33 + 64);
  else
    v42 = *(_QWORD *)(v33 + 64) + 1;
  v43 = *(_QWORD *)(a3[6] - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v42 + v44;
  v46 = ((unint64_t)v36 + v45) & ~v44;
  v47 = ((unint64_t)v37 + v45) & ~v44;
  (*(void (**)(unint64_t, unint64_t))(v43 + 24))(v46, v47);
  v48 = *(_QWORD *)(v43 + 64) + 7;
  v49 = (v48 + v46) & 0xFFFFFFFFFFFFFFF8;
  v50 = (v48 + v47) & 0xFFFFFFFFFFFFFFF8;
  v51 = *(_QWORD *)v50;
  LOBYTE(v47) = *(_BYTE *)(v50 + 8);
  sub_10006B3F8(*(_QWORD *)v50, v47);
  v52 = *(_QWORD *)v49;
  v53 = *(_BYTE *)(v49 + 8);
  *(_QWORD *)v49 = v51;
  *(_BYTE *)(v49 + 8) = v47;
  sub_10006B604(v52, v53);
  return a1;
}

uint64_t sub_100875568(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  int v16;
  size_t v17;
  size_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  int v26;
  size_t v27;
  size_t v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  int v36;
  size_t v37;
  size_t v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char v48;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)((v13 + v7) & ~v12);
  v15 = (const void *)((v13 + v8) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
    if (v16)
      v18 = v17;
    else
      v18 = v17 + 1;
    memcpy(v14, v15, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
  }
  if (v16)
    v19 = v17;
  else
    v19 = v17 + 1;
  v20 = a3[4];
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = v19 + v22;
  v24 = (void *)(((unint64_t)v14 + v23) & ~v22);
  v25 = (const void *)(((unint64_t)v15 + v23) & ~v22);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v25, 1, v20))
  {
    v26 = *(_DWORD *)(v21 + 84);
    v27 = *(_QWORD *)(v21 + 64);
    if (v26)
      v28 = v27;
    else
      v28 = v27 + 1;
    memcpy(v24, v25, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v24, v25, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
    v26 = *(_DWORD *)(v21 + 84);
    v27 = *(_QWORD *)(v21 + 64);
  }
  if (v26)
    v29 = v27;
  else
    v29 = v27 + 1;
  v30 = a3[5];
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v29 + v32;
  v34 = (void *)(((unint64_t)v24 + v33) & ~v32);
  v35 = (const void *)(((unint64_t)v25 + v33) & ~v32);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v35, 1, v30))
  {
    v36 = *(_DWORD *)(v31 + 84);
    v37 = *(_QWORD *)(v31 + 64);
    if (v36)
      v38 = v37;
    else
      v38 = v37 + 1;
    memcpy(v34, v35, v38);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v34, v35, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
    v36 = *(_DWORD *)(v31 + 84);
    v37 = *(_QWORD *)(v31 + 64);
  }
  if (v36)
    v39 = v37;
  else
    v39 = v37 + 1;
  v40 = *(_QWORD *)(a3[6] - 8);
  v41 = *(unsigned __int8 *)(v40 + 80);
  v42 = v39 + v41;
  v43 = ((unint64_t)v34 + v42) & ~v41;
  v44 = ((unint64_t)v35 + v42) & ~v41;
  (*(void (**)(unint64_t, unint64_t))(v40 + 32))(v43, v44);
  v45 = *(_QWORD *)(v40 + 64) + 7;
  v46 = (v45 + v43) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v45 + v44) & 0xFFFFFFFFFFFFFFF8;
  v48 = *(_BYTE *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = v48;
  return a1;
}

uint64_t sub_1008757F4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  int v40;
  size_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)((v13 + v7) & ~v12);
  v15 = (void *)((v13 + v8) & ~v12);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(v14, 1, v10);
  v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v14, v15, v10);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v19 = *(_QWORD *)(v11 + 64);
  else
    v19 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_10:
  if (*(_DWORD *)(v11 + 84))
    v20 = *(_QWORD *)(v11 + 64);
  else
    v20 = *(_QWORD *)(v11 + 64) + 1;
  v21 = a3[4];
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = v20 + v23;
  v25 = (void *)(((unint64_t)v14 + v24) & ~v23);
  v26 = (void *)(((unint64_t)v15 + v24) & ~v23);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v28 = v27(v25, 1, v21);
  v29 = v27(v26, 1, v21);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v25, v26, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v25, v26, v21);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v25, v21);
  }
  if (*(_DWORD *)(v22 + 84))
    v30 = *(_QWORD *)(v22 + 64);
  else
    v30 = *(_QWORD *)(v22 + 64) + 1;
  memcpy(v25, v26, v30);
LABEL_22:
  if (*(_DWORD *)(v22 + 84))
    v31 = *(_QWORD *)(v22 + 64);
  else
    v31 = *(_QWORD *)(v22 + 64) + 1;
  v32 = a3[5];
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v35 = v31 + v34;
  v36 = (void *)(((unint64_t)v25 + v35) & ~v34);
  v37 = (void *)(((unint64_t)v26 + v35) & ~v34);
  v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v39 = v38(v36, 1, v32);
  v40 = v38(v37, 1, v32);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v36, v37, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v32);
      goto LABEL_34;
    }
  }
  else
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v36, v37, v32);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v36, v32);
  }
  if (*(_DWORD *)(v33 + 84))
    v41 = *(_QWORD *)(v33 + 64);
  else
    v41 = *(_QWORD *)(v33 + 64) + 1;
  memcpy(v36, v37, v41);
LABEL_34:
  if (*(_DWORD *)(v33 + 84))
    v42 = *(_QWORD *)(v33 + 64);
  else
    v42 = *(_QWORD *)(v33 + 64) + 1;
  v43 = *(_QWORD *)(a3[6] - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v42 + v44;
  v46 = ((unint64_t)v36 + v45) & ~v44;
  v47 = ((unint64_t)v37 + v45) & ~v44;
  (*(void (**)(unint64_t, unint64_t))(v43 + 40))(v46, v47);
  v48 = *(_QWORD *)(v43 + 64) + 7;
  v49 = (v48 + v46) & 0xFFFFFFFFFFFFFFF8;
  v50 = (v48 + v47) & 0xFFFFFFFFFFFFFFF8;
  v51 = *(_QWORD *)v50;
  LOBYTE(v50) = *(_BYTE *)(v50 + 8);
  v52 = *(_QWORD *)v49;
  v53 = *(_BYTE *)(v49 + 8);
  *(_QWORD *)v49 = v51;
  *(_BYTE *)(v49 + 8) = v50;
  sub_10006B604(v52, v53);
  return a1;
}

uint64_t sub_100875B60(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  if (v5 <= v8)
    v9 = v8;
  else
    v9 = *(_DWORD *)(v4 + 84);
  v10 = a3[4];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if ((_DWORD)v12)
    v13 = v12 - 1;
  else
    v13 = 0;
  if (v9 <= v13)
    v14 = v13;
  else
    v14 = v9;
  v15 = *(_QWORD *)(a3[5] - 8);
  v16 = *(_DWORD *)(v15 + 84);
  if (v16)
    v17 = v16 - 1;
  else
    v17 = 0;
  if (v14 <= v17)
    v18 = v17;
  else
    v18 = v14;
  v19 = *(_QWORD *)(a3[6] - 8);
  if (v18 <= *(_DWORD *)(v19 + 84))
    v20 = *(_DWORD *)(v19 + 84);
  else
    v20 = v18;
  if (v20 <= 0xFE)
    v21 = 254;
  else
    v21 = v20;
  v22 = *(_QWORD *)(v6 + 64);
  if (!v7)
    ++v22;
  v23 = *(_QWORD *)(v11 + 64);
  if (!(_DWORD)v12)
    ++v23;
  if (v16)
    v24 = *(_QWORD *)(v15 + 64);
  else
    v24 = *(_QWORD *)(v15 + 64) + 1;
  if (!a2)
    return 0;
  v25 = *(unsigned __int8 *)(v4 + 80);
  v47 = *(_QWORD *)(v4 + 64);
  v26 = *(unsigned __int8 *)(v6 + 80);
  v27 = *(unsigned __int8 *)(v11 + 80);
  v46 = v22 + v27;
  v28 = *(unsigned __int8 *)(v15 + 80);
  v45 = v23 + v28;
  v29 = *(unsigned __int8 *)(v19 + 80);
  if (v21 < a2)
  {
    v30 = ((*(_QWORD *)(v19 + 64)
          + ((v24 + v29 + ((v45 + ((v46 + ((v47 + v26 + ((v25 + 9) & ~v25)) & ~v26)) & ~v27)) & ~v28)) & ~v29)
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 9;
    v31 = (a2 - v21 + 255) >> (8 * v30);
    if (v30 < 4)
      v32 = v31 + 1;
    else
      v32 = 2;
    if (v32 >= 0x10000)
      v33 = 4;
    else
      v33 = 2;
    if (v32 < 0x100)
      v33 = 1;
    if (v32 >= 2)
      v34 = v33;
    else
      v34 = 0;
    __asm { BR              X23 }
  }
  if (v20 > 0xFE)
  {
    v37 = (a1 + v25 + 9) & ~v25;
    if (v5 == v21)
    {
      v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
      v39 = *(unsigned int *)(v4 + 84);
      v40 = a3[2];
      return v38(v37, v39, v40);
    }
    v41 = (v37 + v47 + v26) & ~v26;
    if (v8 == v21)
    {
      if (v7 < 2)
        return 0;
      v42 = (*(uint64_t (**)(uint64_t))(v6 + 48))(v41);
    }
    else
    {
      v43 = (v46 + v41) & ~v27;
      if (v13 == v21)
      {
        if (v12 < 2)
          return 0;
        v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v43, v12, v10);
      }
      else
      {
        v44 = (v45 + v43) & ~v28;
        if (v17 != v21)
        {
          v37 = (v24 + v29 + v44) & ~v29;
          v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
          v39 = *(unsigned int *)(v19 + 84);
          v40 = a3[6];
          return v38(v37, v39, v40);
        }
        if (v16 < 2)
          return 0;
        v42 = (*(uint64_t (**)(uint64_t))(v15 + 48))(v44);
      }
    }
    if (v42 >= 2)
      return v42 - 1;
    else
      return 0;
  }
  v35 = *(unsigned __int8 *)(a1 + 8);
  if (v35 < 2)
    return 0;
  return ((v35 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_100875EB8(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  size_t v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;

  v5 = 0;
  v6 = *(_QWORD *)(a4[2] - 8);
  v7 = *(_QWORD *)(a4[3] - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (*(_DWORD *)(v6 + 84) <= v9)
    v10 = v9;
  else
    v10 = *(_DWORD *)(v6 + 84);
  v11 = *(_QWORD *)(a4[4] - 8);
  v12 = *(_DWORD *)(v11 + 84);
  if (v12)
    v13 = v12 - 1;
  else
    v13 = 0;
  if (v10 <= v13)
    v10 = v13;
  v14 = *(_QWORD *)(a4[5] - 8);
  v15 = *(_DWORD *)(v14 + 84);
  if (v15)
    v16 = v15 - 1;
  else
    v16 = 0;
  if (v10 <= v16)
    v10 = v16;
  v17 = *(_QWORD *)(a4[6] - 8);
  if (v10 <= *(_DWORD *)(v17 + 84))
    v18 = *(_DWORD *)(v17 + 84);
  else
    v18 = v10;
  if (v18 <= 0xFE)
    v19 = 254;
  else
    v19 = v18;
  v20 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v20;
  if (v12)
    v21 = *(_QWORD *)(v11 + 64);
  else
    v21 = *(_QWORD *)(v11 + 64) + 1;
  v22 = (v21
       + *(unsigned __int8 *)(v14 + 80)
       + ((v20
         + *(unsigned __int8 *)(v11 + 80)
         + ((*(_QWORD *)(v6 + 64)
           + *(unsigned __int8 *)(v7 + 80)
           + ((*(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v23 = *(_QWORD *)(v14 + 64);
  if (!v15)
    ++v23;
  v24 = ((*(_QWORD *)(v17 + 64)
        + ((v23 + *(unsigned __int8 *)(v17 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (v19 < a3)
  {
    v25 = (a3 - v19 + 255) >> (8 * v24);
    if (v24 <= 3)
      v26 = v25 + 1;
    else
      v26 = 2;
    if (v26 >= 0x10000)
      v27 = 4;
    else
      v27 = 2;
    if (v26 < 0x100)
      v27 = 1;
    if (v26 >= 2)
      v5 = v27;
    else
      v5 = 0;
  }
  if (v19 < a2)
  {
    if (v24 >= 4)
      v28 = ~v19 + a2;
    else
      v28 = (~(_BYTE)v19 + a2);
    bzero(a1, v24);
    if ((_DWORD)v24 == 1)
      *a1 = v28;
    else
      *(_DWORD *)a1 = v28;
    __asm { BR              X10 }
  }
  __asm { BR              X28 }
}

void sub_1008760F0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v1) = v0;
  JUMPOUT(0x1008761FCLL);
}

void sub_1008760F8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;

  *(_DWORD *)(a18 + v18) = 0;
  if (a2)
    JUMPOUT(0x100876108);
  JUMPOUT(0x1008761FCLL);
}

void sub_100876160()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v2 + v1) = v0;
  JUMPOUT(0x1008761FCLL);
}

void sub_100876168()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 + v1) = v0;
  JUMPOUT(0x1008761FCLL);
}

uint64_t sub_100876170(unsigned int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;

  *(_WORD *)(a18 + v22) = 0;
  if (!a2)
LABEL_6:
    JUMPOUT(0x1008761FCLL);
  if (a1 <= 0xFE)
  {
    *(_BYTE *)(a18 + 8) = a2 + 1;
    goto LABEL_6;
  }
  if (v20 != v23)
    JUMPOUT(0x100876184);
  return (*(uint64_t (**)(uint64_t))(a7 + 56))((a18 + v19 + 9) & v21);
}

uint64_t type metadata accessor for Header.TextVStack(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack);
}

uint64_t *sub_10087625C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  _OWORD *v47;
  __int128 v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ArtworkImage.Info(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    v28 = v18[6];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v18[7];
    v32 = (_OWORD *)((char *)a1 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    *(_OWORD *)((char *)v32 + 26) = *(_OWORD *)((char *)v33 + 26);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v18[8];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v36[16] = v37[16];
    v38 = a3[5];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = type metadata accessor for VideoArtwork(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = sub_100007E8C(&qword_1011BCC50);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v44 = a3[6];
    v45 = a3[7];
    v46 = (_OWORD *)((char *)a1 + v44);
    v47 = (_OWORD *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v46[2] = v47[2];
    *(_OWORD *)((char *)v46 + 41) = *(_OWORD *)((char *)v47 + 41);
    v49 = (uint64_t *)((char *)a1 + v45);
    v50 = (uint64_t *)((char *)a2 + v45);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = a3[8];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    v55 = *(_QWORD *)v54;
    v56 = v54[8];
    swift_bridgeObjectRetain();
    sub_10006B3F8(v55, v56);
    *(_QWORD *)v53 = v55;
    v53[8] = v56;
  }
  return a1;
}

uint64_t sub_100876604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 20);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  v13 = a1 + *(int *)(a2 + 20);
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  swift_bridgeObjectRelease();
  return sub_10006B604(*(_QWORD *)(a1 + *(int *)(a2 + 32)), *(_BYTE *)(a1 + *(int *)(a2 + 32) + 8));
}

char *sub_100876788(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char v54;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[5];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for VideoArtwork(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C(&qword_1011BCC50);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = a3[6];
  v43 = a3[7];
  v44 = &a1[v42];
  v45 = &a2[v42];
  v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  *(_OWORD *)(v44 + 41) = *(_OWORD *)(v45 + 41);
  v47 = &a1[v43];
  v48 = &a2[v43];
  v49 = *((_QWORD *)v48 + 1);
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *((_QWORD *)v47 + 1) = v49;
  v50 = a3[8];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = *(_QWORD *)v52;
  v54 = v52[8];
  swift_bridgeObjectRetain();
  sub_10006B3F8(v53, v54);
  *(_QWORD *)v51 = v53;
  v51[8] = v54;
  return a1;
}

uint64_t sub_100876B04(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(void *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  char *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  v51 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  *(_QWORD *)v49 = v51;
  v52 = v30[7];
  v53 = a1 + v52;
  v54 = &a2[v52];
  v55 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = v54[8];
  *(_QWORD *)v53 = v55;
  v56 = *((_QWORD *)v54 + 2);
  *(_BYTE *)(v53 + 24) = v54[24];
  *(_QWORD *)(v53 + 16) = v56;
  v57 = *((_QWORD *)v54 + 4);
  *(_BYTE *)(v53 + 40) = v54[40];
  *(_QWORD *)(v53 + 32) = v57;
  *(_BYTE *)(v53 + 41) = v54[41];
  v58 = v30[8];
  v59 = a1 + v58;
  v60 = &a2[v58];
  v61 = *(_OWORD *)v60;
  *(_BYTE *)(v59 + 16) = v60[16];
  *(_OWORD *)v59 = v61;
  v62 = a3[5];
  v63 = (void *)(a1 + v62);
  v64 = &a2[v62];
  v65 = type metadata accessor for VideoArtwork(0);
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (!v68)
  {
    if (!v69)
    {
      (*(void (**)(void *, char *, uint64_t))(v66 + 24))(v63, v64, v65);
      goto LABEL_33;
    }
    (*(void (**)(void *, uint64_t))(v66 + 8))(v63, v65);
    goto LABEL_32;
  }
  if (v69)
  {
LABEL_32:
    v70 = sub_100007E8C(&qword_1011BCC50);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_33:
  v71 = a3[6];
  v72 = (_OWORD *)(a1 + v71);
  v73 = &a2[v71];
  v74 = *(_OWORD *)v73;
  v75 = *((_OWORD *)v73 + 1);
  v76 = *((_OWORD *)v73 + 2);
  *(_OWORD *)((char *)v72 + 41) = *(_OWORD *)(v73 + 41);
  v72[1] = v75;
  v72[2] = v76;
  *v72 = v74;
  v77 = a3[7];
  v78 = (_QWORD *)(a1 + v77);
  v79 = &a2[v77];
  *v78 = *(_QWORD *)v79;
  v78[1] = *((_QWORD *)v79 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v80 = a3[8];
  v81 = a1 + v80;
  v82 = &a2[v80];
  v83 = *(_QWORD *)v82;
  v84 = v82[8];
  sub_10006B3F8(*(_QWORD *)v82, v84);
  v85 = *(_QWORD *)v81;
  v86 = *(_BYTE *)(v81 + 8);
  *(_QWORD *)v81 = v83;
  *(_BYTE *)(v81 + 8) = v84;
  sub_10006B604(v85, v86);
  return a1;
}

char *sub_1008770F0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[5];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for VideoArtwork(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C(&qword_1011BCC50);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = a3[6];
  v43 = a3[7];
  v44 = &a1[v42];
  v45 = &a2[v42];
  v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  *(_OWORD *)(v44 + 41) = *(_OWORD *)(v45 + 41);
  *(_OWORD *)&a1[v43] = *(_OWORD *)&a2[v43];
  v47 = a3[8];
  v48 = &a1[v47];
  v49 = &a2[v47];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v48[8] = v49[8];
  return a1;
}

uint64_t sub_100877454(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  char *v69;
  __int128 v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char v80;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = v30[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)(v52 + 16) = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 32) = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_BYTE *)(v52 + 41) = v53[41];
  v54 = v30[8];
  v55 = a1 + v54;
  v56 = &a2[v54];
  *(_BYTE *)(v55 + 16) = v56[16];
  *(_OWORD *)v55 = *(_OWORD *)v56;
  v57 = a3[5];
  v58 = (void *)(a1 + v57);
  v59 = &a2[v57];
  v60 = type metadata accessor for VideoArtwork(0);
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 1, v60);
  v64 = v62(v59, 1, v60);
  if (!v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, char *, uint64_t))(v61 + 40))(v58, v59, v60);
      goto LABEL_33;
    }
    (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
    goto LABEL_32;
  }
  if (v64)
  {
LABEL_32:
    v65 = sub_100007E8C(&qword_1011BCC50);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
LABEL_33:
  v66 = a3[6];
  v67 = a3[7];
  v68 = (_OWORD *)(a1 + v66);
  v69 = &a2[v66];
  v70 = *((_OWORD *)v69 + 1);
  *v68 = *(_OWORD *)v69;
  v68[1] = v70;
  v68[2] = *((_OWORD *)v69 + 2);
  *(_OWORD *)((char *)v68 + 41) = *(_OWORD *)(v69 + 41);
  v71 = (_QWORD *)(a1 + v67);
  v72 = &a2[v67];
  v74 = *(_QWORD *)v72;
  v73 = *((_QWORD *)v72 + 1);
  *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  v75 = a3[8];
  v76 = a1 + v75;
  v77 = &a2[v75];
  v78 = *(_QWORD *)v77;
  LOBYTE(v77) = v77[8];
  v79 = *(_QWORD *)v76;
  v80 = *(_BYTE *)(v76 + 8);
  *(_QWORD *)v76 = v78;
  *(_BYTE *)(v76 + 8) = (_BYTE)v77;
  sub_10006B604(v79, v80);
  return a1;
}

uint64_t sub_100877A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100877A2C);
}

uint64_t sub_100877A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for ArtworkImage.Info(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100007E8C(&qword_1011BCC50);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100877ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100877AE8);
}

uint64_t sub_100877AE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for ArtworkImage.Info(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_100007E8C(&qword_1011BCC50);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

void sub_100877B94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v2 = type metadata accessor for ArtworkImage.Info(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, (unint64_t *)&qword_1011BCBF0, (uint64_t (*)(uint64_t))&type metadata accessor for VideoArtwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "9";
      v6[3] = &unk_100ED3CC0;
      v6[4] = &unk_100ED3C68;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

void sub_100877C4C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\t";
  v4[1] = (char *)&value witness table for () + 64;
  v4[2] = (char *)&value witness table for () + 64;
  sub_1000E3A44(319, (unint64_t *)&unk_1011CD270, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100ED3C68;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 48);
  }
}

_QWORD *sub_100877CF0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    v7 = a2[5];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v8 = *(int *)(a3 + 60);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 40) = v7;
    swift_retain();
    swift_retain();
    v11 = sub_100007E8C(&qword_1011D13C0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = *(int *)(a3 + 64);
    v16 = (char *)v4 + v15;
    v17 = (uint64_t)a2 + v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_BYTE *)(v17 + 8);
    sub_10006B3F8(*(_QWORD *)v17, v19);
    *(_QWORD *)v16 = v18;
    v16[8] = v19;
  }
  return v4;
}

uint64_t sub_100877E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 60);
  v5 = sub_100007E8C(&qword_1011D13C0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  return sub_10006B604(*(_QWORD *)(a1 + *(int *)(a2 + 64)), *(_BYTE *)(a1 + *(int *)(a2 + 64) + 8));
}

uint64_t sub_100877EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(int *)(a3 + 60);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  swift_retain();
  swift_retain();
  v10 = sub_100007E8C(&qword_1011D13C0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v13 = *(int *)(a3 + 64);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_10006B3F8(*(_QWORD *)v15, v17);
  *(_QWORD *)v14 = v16;
  *(_BYTE *)(v14 + 8) = v17;
  return a1;
}

uint64_t sub_100877FCC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  v8 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  if ((uint64_t *)a1 != a2)
  {
    v9 = *(int *)(a3 + 60);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_10004FF60(a1 + v9, &qword_1011D13C0);
    v12 = sub_100007E8C(&qword_1011D13C0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
  }
  v15 = *(int *)(a3 + 64);
  v16 = a1 + v15;
  v17 = (uint64_t)a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = *(_BYTE *)(v17 + 8);
  sub_10006B3F8(*(_QWORD *)v17, v19);
  v20 = *(_QWORD *)v16;
  v21 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v19;
  sub_10006B604(v20, v21);
  return a1;
}

uint64_t sub_100878104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(int *)(a3 + 60);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_100007E8C(&qword_1011D13C0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = *(int *)(a3 + 64);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  return a1;
}

uint64_t sub_1008781E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 60);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_10004FF60(a1 + v6, &qword_1011D13C0);
    v9 = sub_100007E8C(&qword_1011D13C0);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = *(int *)(a3 + 64);
  v12 = a1 + v11;
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  v15 = *(_QWORD *)v12;
  v16 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = (_BYTE)v13;
  sub_10006B604(v15, v16);
  return a1;
}

uint64_t sub_100878308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100878314);
}

uint64_t sub_100878314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011CD200);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 60), a2, v8);
  }
}

uint64_t sub_100878394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008783A0);
}

uint64_t sub_1008783A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011CD200);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 60), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for Header.Content(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.Content);
}

unint64_t sub_100878428()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CD480;
  if (!qword_1011CD480)
  {
    v1 = sub_100044B54(&qword_1011CD2B8);
    sub_1008784AC();
    sub_100049F28(&qword_1011CD4B8, &qword_1011CD2C0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CD480);
  }
  return result;
}

unint64_t sub_1008784AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CD488;
  if (!qword_1011CD488)
  {
    v1 = sub_100044B54(&qword_1011CD2B0);
    sub_100878530();
    sub_100049F28(&qword_1011CD4A8, &qword_1011CD4B0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CD488);
  }
  return result;
}

unint64_t sub_100878530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CD490;
  if (!qword_1011CD490)
  {
    v1 = sub_100044B54(&qword_1011A2C28);
    sub_10087859C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CD490);
  }
  return result;
}

unint64_t sub_10087859C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CD498;
  if (!qword_1011CD498)
  {
    v1 = sub_100044B54(&qword_1011A2C20);
    sub_100049F28(&qword_1011CD4A0, &qword_1011CD2A8, (uint64_t)&unk_100ED3D08);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CD498);
  }
  return result;
}

uint64_t sub_100878620(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_100FAF3F0, 1);
}

uint64_t sub_100878654(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_10087CAC4(a1, a2, a3, (uint64_t)&unk_100FAF388);
}

uint64_t sub_100878660(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAF360, 1);
}

uint64_t sub_100878670@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  double v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  double v14;
  double v15;
  double v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  double v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  double v30;
  char v31;
  uint64_t v32;
  char v33;
  unsigned __int8 v34;
  uint64_t v35;
  char v36;
  char v37;
  _BYTE v38[16];
  double v39;
  char v40;

  if (a1 == 2 || (a1 & 1) != 0)
  {
    result = ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0x4072C00000000000, 0, 0x4072C00000000000, 0, 0, 1, 2, (uint64_t)&v30);
    v6 = v30;
    v7 = v31;
    v8 = v32;
    v9 = v33;
    v10 = v35;
    v11 = v36;
    v12 = v37;
LABEL_11:
    *(double *)a3 = v6;
    *(_BYTE *)(a3 + 8) = v7;
    *(_QWORD *)(a3 + 16) = v8;
    *(_BYTE *)(a3 + 24) = v9;
    *(_QWORD *)(a3 + 32) = v10;
    *(_BYTE *)(a3 + 40) = v11;
    *(_BYTE *)(a3 + 41) = v12;
    return result;
  }
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0x4073100000000000, 0, 0x4073100000000000, 0, 0, 1, 2, (uint64_t)&v16);
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = v19;
  v10 = v20;
  v11 = v21;
  v12 = v22;
  result = sub_100065228(a2, (uint64_t)&v30, &qword_1011B4788);
  if ((unint64_t)v34 << 16 == 0x20000)
    goto LABEL_11;
  v14 = v30;
  sub_100065228((uint64_t)&v16, (uint64_t)v38, &qword_1011AD450);
  result = sub_100065228((uint64_t)v38, (uint64_t)&v39, &qword_1011AD450);
  if ((v40 & 1) == 0)
  {
    v15 = v39;
    if (v39 >= v14 + -144.0)
      v15 = v14 + -144.0;
    result = ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(*(uint64_t *)&v15, 0, *(uint64_t *)&v15, 0, 0, 1, 2, (uint64_t)&v23);
    v6 = v23;
    v7 = v24;
    v8 = v25;
    v9 = v26;
    v10 = v27;
    v11 = v28;
    v12 = v29;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

unint64_t sub_100878838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CD4C8;
  if (!qword_1011CD4C8)
  {
    v1 = sub_100044B54(&qword_1011CD4C0);
    sub_100048748(&qword_1011CD4D0, _s7ArtworkVMa, (uint64_t)&unk_100EBA2B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CD4C8);
  }
  return result;
}

uint64_t type metadata accessor for Header.TextVStack.TitleAttributionStack(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.TitleAttributionStack);
}

uint64_t type metadata accessor for Header.TextVStack.MetadataContainer(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.MetadataContainer);
}

uint64_t type metadata accessor for Header.TextVStack.PlaybackControlContainer(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.PlaybackControlContainer);
}

uint64_t type metadata accessor for Header.TextVStack.DescriptionContainer(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.DescriptionContainer);
}

uint64_t sub_1008788EC()
{
  return sub_100878904((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10086FB94);
}

uint64_t sub_1008788F8()
{
  return sub_100878904((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10086EFB0);
}

uint64_t sub_100878904(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[12], v1[13], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11]);
}

unint64_t sub_100878944()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B7148;
  if (!qword_1011B7148)
  {
    v1 = sub_100044B54(&qword_1011B7070);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011B7148);
  }
  return result;
}

uint64_t sub_1008789A0()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];

  v1 = *(_OWORD *)(v0 + 32);
  v10[0] = *(_OWORD *)(v0 + 16);
  v10[1] = v1;
  v2 = type metadata accessor for Header.Content(0, (uint64_t)v10);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  swift_release();
  swift_release();
  v6 = v0 + v4 + *(int *)(v2 + 60);
  v7 = sub_100007E8C(&qword_1011D13C0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  sub_10006B604(*(_QWORD *)(v0 + v4 + *(int *)(v2 + 64)), *(_BYTE *)(v0 + v4 + *(int *)(v2 + 64) + 8));
  return swift_deallocObject(v0, v4 + v5);
}

uint64_t sub_100878A94@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v4 = a1 & 1;
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v11[0] = v2[2];
  v5 = v11[0];
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Header.Content(0, (uint64_t)v11) - 8) + 80);
  return sub_10086DD94(v4, (uint64_t)v2 + ((v9 + 48) & ~v9), v5, v6, v7, v8, a2);
}

uint64_t sub_100878B1C()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];

  v1 = *(_OWORD *)(v0 + 32);
  v10[0] = *(_OWORD *)(v0 + 16);
  v10[1] = v1;
  v2 = type metadata accessor for Header.Content(0, (uint64_t)v10);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  swift_release();
  swift_release();
  v6 = v0 + v4 + *(int *)(v2 + 60);
  v7 = sub_100007E8C(&qword_1011D13C0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  sub_10006B604(*(_QWORD *)(v0 + v4 + *(int *)(v2 + 64)), *(_BYTE *)(v0 + v4 + *(int *)(v2 + 64) + 8));
  return swift_deallocObject(v0, v5 + v4 + 1);
}

uint64_t sub_100878C14@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[4];

  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v10[0] = v1[2];
  v3 = v10[0];
  v10[1] = v4;
  v10[2] = v5;
  v10[3] = v6;
  v7 = *(_QWORD *)(type metadata accessor for Header.Content(0, (uint64_t)v10) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_10086E2D4((uint64_t)v1 + v8, *((_BYTE *)v1 + v8 + *(_QWORD *)(v7 + 64)), v3, v4, v5, v6, a1);
}

uint64_t sub_100878C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 88);
}

uint64_t sub_100878CA0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 40));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100ED3C68;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 96);
    return 0;
  }
  return result;
}

uint64_t *sub_100878D14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(a3 + 40);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if ((v7 & 0x1000F8) != 0 || ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 40)))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v11 = ((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = ((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    v13 = *(_QWORD *)v12;
    v14 = *(_BYTE *)(v12 + 8);
    sub_10006B3F8(*(_QWORD *)v12, v14);
    *(_QWORD *)v11 = v13;
    *(_BYTE *)(v11 + 8) = v14;
  }
  return a1;
}

uint64_t sub_100878E30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v5 = a1 + *(_QWORD *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84))
    ++v5;
  return sub_10006B604(*(_QWORD *)((v5 + 7) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void *sub_100878EA4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(a3 + 40);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v12 = ((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_10006B3F8(*(_QWORD *)v13, v15);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = v15;
  return a1;
}

void *sub_100878F7C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  v5 = *(_QWORD *)(a3 + 40);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v13 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_10006B3F8(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v16;
  sub_10006B604(v17, v18);
  return a1;
}

char *sub_1008790A8(char *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 40);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v12 = (unint64_t)&a1[v11];
  v13 = ((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v12 &= 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = v14;
  return a1;
}

void *sub_100879174(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = *(_QWORD *)(a3 + 40);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v13 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  LOBYTE(v14) = *(_BYTE *)(v14 + 8);
  v16 = *(_QWORD *)v13;
  v17 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v14;
  sub_10006B604(v16, v17);
  return a1;
}

uint64_t sub_100879294(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v15;
  unsigned int v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 40) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = v6;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (!a2)
    return 0;
  if (v7 < a2)
  {
    v9 = ((v8 + 7) & 0xFFFFFFF8) + 9;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    __asm { BR              X16 }
  }
  if (v6 < 0xFE)
  {
    v16 = *(unsigned __int8 *)(((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 8);
    if (v16 > 1)
      return (v16 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v15 = (*(uint64_t (**)(void))(v4 + 48))();
    if (v15 >= 2)
      return v15 - 1;
    else
      return 0;
  }
}

void sub_1008793E0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 40) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0xFE)
    v10 = 254;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v10 < a3)
  {
    v13 = (a3 - v10 + 255) >> (8 * v12);
    if (v12 <= 3)
      v14 = v13 + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v6 = v15;
    else
      v6 = 0;
  }
  if (v10 < a2)
  {
    if (v12 >= 4)
      v16 = ~v10 + a2;
    else
      v16 = (~(_BYTE)v10 + a2);
    bzero(a1, v12);
    if ((_DWORD)v12 == 1)
      *a1 = v16;
    else
      *(_DWORD *)a1 = v16;
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_100879504()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1008795ECLL);
}

void sub_10087950C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x100879514);
  JUMPOUT(0x1008795ECLL);
}

void sub_10087957C()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x1008795ECLL);
}

void sub_1008795A4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1008795ECLL);
}

void sub_1008795AC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1008795ECLL);
}

void sub_1008795B4(unsigned int a1@<W1>, size_t a2@<X8>)
{
  int v2;
  unsigned int v3;
  char *v4;
  uint64_t v5;

  *(_WORD *)&v4[v5] = 0;
  if (a1)
  {
    if (v3 < 0xFE)
      JUMPOUT(0x100879584);
    if (v3 >= a1)
      JUMPOUT(0x1008795C0);
    if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v2 = a2;
      else
        v2 = 4;
      bzero(v4, a2);
      __asm { BR              X10 }
    }
  }
  JUMPOUT(0x1008795ECLL);
}

void sub_100879600()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x1008795ECLL);
}

void sub_100879610()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x1008795ECLL);
}

void sub_100879618()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x1008795ECLL);
}

uint64_t sub_100879624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 96);
}

uint64_t sub_10087962C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 48));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100ED3C50;
    v4[2] = &unk_100ED3C68;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 96);
    return 0;
  }
  return result;
}

_QWORD *sub_1008796AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
    v10 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 8);
    v13 = *(_BYTE *)(v11 + 16);
    sub_10006B3F8(v12, v13);
    *(_QWORD *)(v10 + 8) = v12;
    *(_BYTE *)(v10 + 16) = v13;
  }
  return v4;
}

uint64_t sub_10087976C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 48) - 8);
  (*(void (**)(void))(v3 + 8))();
  return sub_10006B604(*(_QWORD *)(((*(_QWORD *)(v3 + 64) + a1) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((*(_QWORD *)(v3 + 64) + a1) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_1008797AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 8);
  LOBYTE(v5) = *(_BYTE *)(v8 + 16);
  sub_10006B3F8(v10, v5);
  *(_QWORD *)(v9 + 8) = v10;
  *(_BYTE *)(v9 + 16) = v5;
  return a1;
}

uint64_t sub_100879820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 8);
  LOBYTE(v5) = *(_BYTE *)(v8 + 16);
  sub_10006B3F8(v10, v5);
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  *(_QWORD *)(v9 + 8) = v10;
  *(_BYTE *)(v9 + 16) = v5;
  sub_10006B604(v11, v12);
  return a1;
}

uint64_t sub_1008798A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 16);
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 16) = v9;
  return a1;
}

uint64_t sub_100879908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 8);
  LOBYTE(v8) = *(_BYTE *)(v8 + 16);
  v10 = *(_QWORD *)(v7 + 8);
  v11 = *(_BYTE *)(v7 + 16);
  *(_QWORD *)(v7 + 8) = v9;
  *(_BYTE *)(v7 + 16) = v8;
  sub_10006B604(v10, v11);
  return a1;
}

uint64_t sub_10087997C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 >= 0xFE)
      return (*(uint64_t (**)(void))(v4 + 48))();
    v14 = *(unsigned __int8 *)(v7 + a1);
    if (v14 >= 2)
      return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  v8 = (v7 & 0xFFFFFFF8) + 17;
  v9 = (a2 - v6 + 255) >> (8 * v8);
  if (v8 < 4)
    v10 = v9 + 1;
  else
    v10 = 2;
  if (v10 >= 0x10000)
    v11 = 4;
  else
    v11 = 2;
  if (v10 < 0x100)
    v11 = 1;
  if (v10 >= 2)
    v12 = v11;
  else
    v12 = 0;
  return ((uint64_t (*)(void))((char *)&loc_100879A00 + 4 * byte_100ED38A2[v12]))();
}

void sub_100879A8C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 48) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = (*(_QWORD *)(v5 + 64) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_100879BA4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_100879BAC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x100879BB4);
}

void sub_100879BE8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_100879BF0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_100879BF8(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
LABEL_2:
    JUMPOUT(0x100879C00);
  if (a3 < 0xFE)
  {
    *(_BYTE *)(v6 + v4) = a2 + 1;
    goto LABEL_2;
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 56))(v6);
}

uint64_t sub_100879C18(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 32));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100ED3C68;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 96);
    return 0;
  }
  return result;
}

uint64_t *sub_100879C8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if ((v7 & 0x1000F8) != 0 || ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 32)))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v11 = ((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = ((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    v13 = *(_QWORD *)v12;
    v14 = *(_BYTE *)(v12 + 8);
    sub_10006B3F8(*(_QWORD *)v12, v14);
    *(_QWORD *)v11 = v13;
    *(_BYTE *)(v11 + 8) = v14;
  }
  return a1;
}

uint64_t sub_100879DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v5 = a1 + *(_QWORD *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84))
    ++v5;
  return sub_10006B604(*(_QWORD *)((v5 + 7) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void *sub_100879E1C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v12 = ((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_10006B3F8(*(_QWORD *)v13, v15);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = v15;
  return a1;
}

void *sub_100879EF4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v13 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_10006B3F8(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v16;
  sub_10006B604(v17, v18);
  return a1;
}

char *sub_10087A020(char *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v12 = (unint64_t)&a1[v11];
  v13 = ((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v12 &= 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = v14;
  return a1;
}

void *sub_10087A0EC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v13 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  LOBYTE(v14) = *(_BYTE *)(v14 + 8);
  v16 = *(_QWORD *)v13;
  v17 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v14;
  sub_10006B604(v16, v17);
  return a1;
}

uint64_t sub_10087A20C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v15;
  unsigned int v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = v6;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (!a2)
    return 0;
  if (v7 < a2)
  {
    v9 = ((v8 + 7) & 0xFFFFFFF8) + 9;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    __asm { BR              X16 }
  }
  if (v6 < 0xFE)
  {
    v16 = *(unsigned __int8 *)(((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 8);
    if (v16 > 1)
      return (v16 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v15 = (*(uint64_t (**)(void))(v4 + 48))();
    if (v15 >= 2)
      return v15 - 1;
    else
      return 0;
  }
}

void sub_10087A358(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0xFE)
    v10 = 254;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v10 < a3)
  {
    v13 = (a3 - v10 + 255) >> (8 * v12);
    if (v12 <= 3)
      v14 = v13 + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v6 = v15;
    else
      v6 = 0;
  }
  if (v10 < a2)
  {
    if (v12 >= 4)
      v16 = ~v10 + a2;
    else
      v16 = (~(_BYTE)v10 + a2);
    bzero(a1, v12);
    if ((_DWORD)v12 == 1)
      *a1 = v16;
    else
      *(_DWORD *)a1 = v16;
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_10087A47C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10087A564);
}

void sub_10087A484(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10087A48CLL);
  JUMPOUT(0x10087A564);
}

void sub_10087A4F4()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x10087A564);
}

void sub_10087A51C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10087A564);
}

void sub_10087A524()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10087A564);
}

void sub_10087A52C(unsigned int a1@<W1>, size_t a2@<X8>)
{
  int v2;
  unsigned int v3;
  char *v4;
  uint64_t v5;

  *(_WORD *)&v4[v5] = 0;
  if (a1)
  {
    if (v3 < 0xFE)
      JUMPOUT(0x10087A4FCLL);
    if (v3 >= a1)
      JUMPOUT(0x10087A538);
    if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v2 = a2;
      else
        v2 = 4;
      bzero(v4, a2);
      __asm { BR              X10 }
    }
  }
  JUMPOUT(0x10087A564);
}

void sub_10087A578()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x10087A564);
}

void sub_10087A588()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x10087A564);
}

void sub_10087A590()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x10087A564);
}

uint64_t sub_10087A59C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_100ED3C50;
      v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[4] = &unk_100ED3C68;
      swift_initStructMetadata(a1, 0, 5, v5, a1 + 96);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10087A648(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const void *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  if (*(_DWORD *)(v7 + 84))
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (((((v9 & ~v8) + v10) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v16 = ((unint64_t)v4 + v9) & v15;
    v17 = (const void *)(((unint64_t)a2 + v9) & v15);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v17, 1, v5))
    {
      memcpy((void *)(((unint64_t)v4 + v9) & v15), v17, v10);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v17, v5);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(((unint64_t)v4 + v9) & v15, 0, 1, v5);
    }
    *(_BYTE *)(v10 + v16) = *((_BYTE *)v17 + v10);
    v18 = (v10 + v16) & 0xFFFFFFFFFFFFFFF8;
    v19 = ((unint64_t)v17 + v10) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
    v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
    v21 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
    v22 = *(_QWORD *)v21;
    v23 = *(_BYTE *)(v21 + 8);
    sub_10006B3F8(*(_QWORD *)v21, v23);
    *(_QWORD *)v20 = v22;
    *(_BYTE *)(v20 + 8) = v23;
  }
  return v4;
}

uint64_t sub_10087A7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  v9 = *(_QWORD *)(v7 + 64) + v8;
  if (!*(_DWORD *)(v7 + 84))
    ++v9;
  return sub_10006B604(*(_QWORD *)(((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10087A87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (char *)((v11 + a1) & ~v10);
  v13 = (char *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v13, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = (unint64_t)&v12[v17];
  v19 = (unint64_t)&v13[v17];
  *(_BYTE *)v18 = *(_BYTE *)v19;
  v18 &= 0xFFFFFFFFFFFFFFF8;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_10006B3F8(*(_QWORD *)v21, v23);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = v23;
  return a1;
}

uint64_t sub_10087A9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (char *)((v11 + a1) & ~v10);
  v13 = (char *)((v11 + a2) & ~v10);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v15 = v14(v12, 1, v8);
  v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v13, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v17);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = *(_QWORD *)(v9 + 64) + 1;
  v19 = (unint64_t)&v12[v18];
  v20 = (unint64_t)&v13[v18];
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  v21 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  v24 = *(_BYTE *)(v22 + 8);
  sub_10006B3F8(*(_QWORD *)v22, v24);
  v25 = *(_QWORD *)v21;
  v26 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v24;
  sub_10006B604(v25, v26);
  return a1;
}

uint64_t sub_10087AB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (char *)((v11 + a1) & ~v10);
  v13 = (char *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v13, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = (unint64_t)&v12[v17];
  v19 = (unint64_t)&v13[v17];
  *(_BYTE *)v18 = *(_BYTE *)v19;
  v18 &= 0xFFFFFFFFFFFFFFF8;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = v22;
  return a1;
}

uint64_t sub_10087AC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (char *)((v11 + a1) & ~v10);
  v13 = (char *)((v11 + a2) & ~v10);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v15 = v14(v12, 1, v8);
  v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v13, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v17);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = *(_QWORD *)(v9 + 64) + 1;
  v19 = (unint64_t)&v12[v18];
  v20 = (unint64_t)&v13[v18];
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  v21 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  LOBYTE(v22) = *(_BYTE *)(v22 + 8);
  v24 = *(_QWORD *)v21;
  v25 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v22;
  sub_10006B604(v24, v25);
  return a1;
}

uint64_t sub_10087ADC4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = *(_DWORD *)(v5 + 84);
  else
    v10 = v9;
  if (v10 <= 0xFE)
    v10 = 254;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  if (v10 < a2)
  {
    v14 = (((((v13 & ~(_DWORD)v12) + v11) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 9;
    v15 = (a2 - v10 + 255) >> (8 * v14);
    if (v14 < 4)
      v16 = v15 + 1;
    else
      v16 = 2;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    __asm { BR              X6 }
  }
  if (v6 == v10)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
  v20 = (v13 + a1) & ~v12;
  if (v9 != v10)
  {
    v22 = *(unsigned __int8 *)(v20 + v11);
    if (v22 >= 2)
      return ((v22 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  if (v8 < 2)
    return 0;
  v21 = (*(uint64_t (**)(uint64_t))(v7 + 48))(v20);
  if (v21 >= 2)
    return v21 - 1;
  else
    return 0;
}

void sub_10087AF60(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = v9 - 1;
  if (!v9)
    v10 = 0;
  if (v10 <= *(_DWORD *)(v7 + 84))
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = v10;
  if (v11 <= 0xFE)
    v12 = 254;
  else
    v12 = v11;
  v13 = *(unsigned __int8 *)(v8 + 80);
  v15 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v15;
  v14 = *(_QWORD *)(v7 + 64) + v13;
  v16 = (((((v14 & ~(_DWORD)v13) + v15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 9;
  if (v12 < a3)
  {
    v17 = (a3 - v12 + 255) >> (8 * v16);
    if (v16 <= 3)
      v18 = v17 + 1;
    else
      v18 = 2;
    if (v18 >= 0x10000)
      v19 = 4;
    else
      v19 = 2;
    if (v18 < 0x100)
      v19 = 1;
    if (v18 >= 2)
      v6 = v19;
    else
      v6 = 0;
  }
  if (v12 < a2)
  {
    if (v16 >= 4)
      v20 = ~v12 + a2;
    else
      v20 = (~(_BYTE)v12 + a2);
    bzero(a1, (((((v14 & ~v13) + v15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9);
    if (v16 == 1)
      *a1 = v20;
    else
      *(_DWORD *)a1 = v20;
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_10087B0B0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10087B130);
}

void sub_10087B0B8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10087B0C0);
  JUMPOUT(0x10087B130);
}

void sub_10087B108()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10087B130);
}

void sub_10087B110()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10087B130);
}

uint64_t sub_10087B118@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_WORD *)(v14 + v15) = 0;
  if (!(_DWORD)a1)
    JUMPOUT(0x10087B130);
  if ((_DWORD)v7 == v12)
  {
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v5 = v14;
    a2 = v7;
    a3 = a4;
  }
  else
  {
    v5 = (v13 + v14) & v8;
    if (v11 != v12)
      JUMPOUT(0x10087B124);
    a1 = (a1 + 1);
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  }
  return v4(v5, a1, a2, a3);
}

unint64_t sub_10087B14C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CD6E8;
  if (!qword_1011CD6E8)
  {
    v1 = sub_100044B54(&qword_1011CD6F0);
    sub_100878838();
    sub_100577BB4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CD6E8);
  }
  return result;
}

uint64_t sub_10087B1B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v10 = a1[8];
  v9 = a1[9];
  v21 = *a1;
  v1 = v21;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v10;
  v30 = v9;
  v11 = v9;
  type metadata accessor for Header.TextVStack.TitleAttributionStack(255, (uint64_t)&v21);
  v21 = v1;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v10;
  v30 = v11;
  type metadata accessor for Header.TextVStack.MetadataContainer(255, (uint64_t)&v21);
  v21 = v1;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v10;
  v30 = v11;
  v19 = v11;
  type metadata accessor for Header.TextVStack.PlaybackControlContainer(255, (uint64_t)&v21);
  v21 = v1;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v10;
  v30 = v11;
  type metadata accessor for Header.TextVStack.DescriptionContainer(255, (uint64_t)&v21);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 4);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v20 = type metadata accessor for VStack(255, v13);
  v21 = v1;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v10;
  v30 = v19;
  type metadata accessor for Header.TextVStack.TitleAttributionStack(255, (uint64_t)&v21);
  v21 = v1;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v10;
  v30 = v19;
  type metadata accessor for Header.TextVStack.MetadataContainer(255, (uint64_t)&v21);
  sub_100044B54(&qword_1011B7070);
  v21 = v1;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v10;
  v30 = v19;
  type metadata accessor for Header.TextVStack.DescriptionContainer(255, (uint64_t)&v21);
  v21 = v1;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v10;
  v30 = v19;
  type metadata accessor for Header.TextVStack.PlaybackControlContainer(255, (uint64_t)&v21);
  v14 = swift_getTupleTypeMetadata(255, 5);
  v15 = type metadata accessor for TupleView(255, v14);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  v16 = type metadata accessor for VStack(255, v15);
  v17 = type metadata accessor for _ConditionalContent(255, v20, v16);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v20);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v16);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v17);
}

uint64_t sub_10087B434(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_100044B54(&qword_1011CD4D8);
  v4 = type metadata accessor for ModifiedContent(255, v1, v3);
  v5 = type metadata accessor for ModifiedContent(255, v2, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v5, 0, 0);
  v7 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v7);
  v10 = type metadata accessor for AdaptativeContainerStack(255, v7, WitnessTable, v9);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _PaddingLayout);
  v12 = type metadata accessor for ModifiedContent(255, v11, &type metadata for _PaddingLayout);
  swift_getWitnessTable(&unk_100EC9838, v10);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v13 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v15 = type metadata accessor for AdaptativeContainer(255, v12, v13, v14);
  return swift_getWitnessTable(&unk_100ECDD38, v15);
}

uint64_t sub_10087B578(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_10087CAC4(a1, a2, a3, (uint64_t)&unk_100FAF9AC);
}

uint64_t sub_10087B584(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_10087CAC4(a1, a2, a3, (uint64_t)&unk_100FAF944);
}

uint64_t sub_10087B590(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_10087CAC4(a1, a2, a3, (uint64_t)&unk_100FAF8DC);
}

uint64_t sub_10087B59C(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_10087CAC4(a1, a2, a3, (uint64_t)&unk_100FAF874);
}

uint64_t type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.Before(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.TitleAttributionStack.Spacing.Before);
}

uint64_t sub_10087B5B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100870C04(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40), *(char **)(v1 + 48), *(_QWORD **)(v1 + 56), *(char **)(v1 + 64), a1, *(_OWORD *)(v1 + 72), *(_QWORD *)(v1 + 88));
}

uint64_t type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.After(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.TitleAttributionStack.Spacing.After);
}

uint64_t type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.After(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.DescriptionContainer.Spacing.After);
}

uint64_t type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.Before(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.DescriptionContainer.Spacing.Before);
}

uint64_t type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.Before(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.PlaybackControlContainer.Spacing.Before);
}

uint64_t type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.After(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.PlaybackControlContainer.Spacing.After);
}

uint64_t sub_10087B62C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10006B3F8(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_10087B670(uint64_t a1)
{
  return sub_10006B604(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_10087B684(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_10006B604(v5, v6);
  return a1;
}

uint64_t type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.TitleAttributionStack.Spacing);
}

void sub_10087B6CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_100ED3C50;
  v2 = type metadata accessor for Font.TextStyle(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_100ED3C68;
    sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 4, v6, a1 + 96);
    }
  }
}

uint64_t *sub_10087B77C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[25];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[26];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = *(_QWORD *)v13;
    LOBYTE(v9) = v13[8];
    sub_10006B3F8(*(_QWORD *)v13, (char)v9);
    *(_QWORD *)v12 = v14;
    v12[8] = (char)v9;
    v15 = a3[27];
    v16 = (uint64_t *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = v16;
      v21 = v18;
      v22 = 1;
    }
    else
    {
      *v16 = *v17;
      swift_retain();
      v20 = v16;
      v21 = v18;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
  return v4;
}

double sub_10087B8B8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v4 = a1 + a2[25];
  v5 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_10006B604(*(_QWORD *)(a1 + a2[26]), *(_BYTE *)(a1 + a2[26] + 8));
  v6 = a1 + a2[27];
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_BYTE *sub_10087B96C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[25];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[26];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)v12;
  LOBYTE(v8) = v12[8];
  sub_10006B3F8(*(_QWORD *)v12, (char)v8);
  *(_QWORD *)v11 = v13;
  v11[8] = (_BYTE)v8;
  v14 = a3[27];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    v19 = 1;
  }
  else
  {
    *v15 = *v16;
    swift_retain();
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v17, v19);
  return a1;
}

_BYTE *sub_10087BA74(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[25];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[26];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)v12;
  LOBYTE(v8) = v12[8];
  sub_10006B3F8(*(_QWORD *)v12, (char)v8);
  v14 = *(_QWORD *)v11;
  v15 = v11[8];
  *(_QWORD *)v11 = v13;
  v11[8] = (_BYTE)v8;
  sub_10006B604(v14, v15);
  if (a1 != a2)
  {
    v16 = a3[27];
    v17 = &a1[v16];
    v18 = &a2[v16];
    sub_10004FF60((uint64_t)&a1[v16], (uint64_t *)&unk_1011ACE40);
    v19 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = 1;
    }
    else
    {
      *v17 = *v18;
      swift_retain();
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v21);
  }
  return a1;
}

_BYTE *sub_10087BBA0(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[25];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[26];
  v11 = a3[27];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  v16 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_10087BC9C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[25];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[26];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)v12;
  LOBYTE(v12) = v12[8];
  v14 = *(_QWORD *)v11;
  v15 = v11[8];
  *(_QWORD *)v11 = v13;
  v11[8] = (_BYTE)v12;
  sub_10006B604(v14, v15);
  if (a1 != a2)
  {
    v16 = a3[27];
    v17 = &a1[v16];
    v18 = &a2[v16];
    sub_10004FF60((uint64_t)&a1[v16], (uint64_t *)&unk_1011ACE40);
    v19 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload(v17, v19, 1);
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10087BDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10087BDCC);
}

uint64_t sub_10087BDCC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for Font.TextStyle(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 100);
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011C6890);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 108);
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48))(&a1[v13], a2, v12);
  }
}

uint64_t sub_10087BE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10087BE7C);
}

_BYTE *sub_10087BE7C(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v8 = type metadata accessor for Font.TextStyle(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 100);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011C6890);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 108);
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_10087BF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10087BF40);
}

uint64_t sub_10087BF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10087BF50);
}

uint64_t type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.DescriptionContainer.Spacing);
}

uint64_t sub_10087BF60(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Font.TextStyle(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100ED3C68;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 96);
    return 0;
  }
  return result;
}

uint64_t *sub_10087BFD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 100);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    LOBYTE(v6) = v10[8];
    sub_10006B3F8(*(_QWORD *)v10, v6);
    *(_QWORD *)v9 = v11;
    v9[8] = v6;
  }
  return a1;
}

uint64_t sub_10087C074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_10006B604(*(_QWORD *)(a1 + *(int *)(a2 + 100)), *(_BYTE *)(a1 + *(int *)(a2 + 100) + 8));
}

uint64_t sub_10087C0C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 100);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  LOBYTE(a2) = *(_BYTE *)(v9 + 8);
  sub_10006B3F8(*(_QWORD *)v9, a2);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = a2;
  return a1;
}

uint64_t sub_10087C138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 100);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  LOBYTE(a2) = *(_BYTE *)(v9 + 8);
  sub_10006B3F8(*(_QWORD *)v9, a2);
  v11 = *(_QWORD *)v8;
  v12 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = a2;
  sub_10006B604(v11, v12);
  return a1;
}

uint64_t sub_10087C1BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 100);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_10087C228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 100);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  LOBYTE(v9) = *((_BYTE *)v9 + 8);
  v11 = *(_QWORD *)v8;
  v12 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = (_BYTE)v9;
  sub_10006B604(v11, v12);
  return a1;
}

uint64_t sub_10087C2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10087C2AC);
}

uint64_t sub_10087C2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 100) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_10087C32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10087C338);
}

uint64_t sub_10087C33C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Font.TextStyle(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 100) + 8) = -(char)a2;
  return result;
}

uint64_t sub_10087C3BC(uint64_t a1)
{
  return sub_10006B604(*(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_10087C3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_10006B3F8(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return a1;
}

uint64_t sub_10087C418(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_10006B3F8(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  sub_10006B604(v5, v6);
  return a1;
}

uint64_t sub_10087C470(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  sub_10006B604(v5, v6);
  return a1;
}

uint64_t type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.PlaybackControlContainer.Spacing);
}

uint64_t sub_10087C4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10006B3F8(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_10006B604(v5, v6);
  return a1;
}

uint64_t sub_10087C510(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata3;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v28 = a1[6];
  v29 = a1[5];
  v26 = a1[8];
  v27 = a1[7];
  v25 = a1[9];
  v31 = *a1;
  v1 = v31;
  v32 = v2;
  v33 = v3;
  v34 = v4;
  v35 = v5;
  v36 = v29;
  v37 = v28;
  v38 = v27;
  v39 = v26;
  v40 = v25;
  v30 = type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.Before(255, (uint64_t)&v31);
  v6 = type metadata accessor for BaselineSpacer(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v6, v2, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v9 = type metadata accessor for Optional(255, v8);
  v10 = swift_getTupleTypeMetadata2(255, v1, v9, 0, 0);
  v11 = type metadata accessor for TupleView(255, v10);
  v12 = sub_100044B54(&qword_1011BE8B0);
  v13 = type metadata accessor for ModifiedContent(255, v1, v12);
  v14 = sub_100044B54(&qword_1011B7088);
  v15 = type metadata accessor for Optional(255, v2);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v13, v14, v15, 0, 0);
  v17 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v18 = type metadata accessor for _ConditionalContent(255, v11, v17);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v17);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v18);
  v19 = type metadata accessor for VStack(255, v18);
  v20 = type metadata accessor for ModifiedContent(255, v19, v12);
  v31 = v1;
  v32 = v2;
  v33 = v3;
  v34 = v4;
  v35 = v5;
  v36 = v29;
  v37 = v28;
  v38 = v27;
  v39 = v26;
  v40 = v25;
  v21 = type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.After(255, (uint64_t)&v31);
  v22 = swift_getTupleTypeMetadata3(255, v30, v20, v21, 0, 0);
  v23 = type metadata accessor for TupleView(255, v22);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v23);
}

uint64_t sub_10087C744(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = type metadata accessor for BaselineSpacer(255);
  v3 = sub_100044B54(&qword_1011BE8B0);
  v4 = type metadata accessor for ModifiedContent(255, v1, v3);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v2, v4, 0, 0);
  v6 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v7 = type metadata accessor for _ConditionalContent(255, v6, v4);
  v8 = type metadata accessor for Optional(255, v7);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v6);
  sub_100049F28(&qword_1011BE8A8, &qword_1011BE8B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v7);
  return swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v8);
}

uint64_t sub_10087C870(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata3;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v9 = a1[8];
  v18 = a1[9];
  v20 = *a1;
  v1 = v20;
  v21 = v2;
  v22 = v4;
  v23 = v3;
  v24 = v5;
  v25 = v6;
  v26 = v7;
  v27 = v8;
  v28 = v9;
  v29 = v18;
  v19 = type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.Before(255, (uint64_t)&v20);
  v10 = type metadata accessor for ModifiedContent(255, v3, &type metadata for _FlexFrameLayout);
  v11 = sub_100044B54(&qword_1011BE8B0);
  v12 = type metadata accessor for ModifiedContent(255, v10, v11);
  v20 = v1;
  v21 = v2;
  v22 = v4;
  v23 = v3;
  v24 = v5;
  v25 = v6;
  v26 = v7;
  v27 = v8;
  v28 = v9;
  v29 = v18;
  v13 = type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.After(255, (uint64_t)&v20);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v19, v12, v13, 0, 0);
  v15 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v16 = type metadata accessor for Optional(255, v15);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  return swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v16);
}

uint64_t sub_10087C9AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata3;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v10 = a1[8];
  v9 = a1[9];
  v16 = *a1;
  v1 = v16;
  v17 = v2;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = v7;
  v23 = v8;
  v24 = v10;
  v25 = v9;
  v15 = type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.Before(255, (uint64_t)&v16);
  v16 = v1;
  v17 = v2;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = v7;
  v23 = v8;
  v24 = v10;
  v25 = v9;
  v11 = type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.After(255, (uint64_t)&v16);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v15, v5, v11, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
}

uint64_t sub_10087CA7C(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_10087CAC4(a1, a2, a3, (uint64_t)&unk_100FAFC1C);
}

uint64_t sub_10087CA88(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_10087CAC4(a1, a2, a3, (uint64_t)&unk_100FAFBB4);
}

uint64_t sub_10087CA94(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_10087CAC4(a1, a2, a3, (uint64_t)&unk_100FAFB4C);
}

uint64_t sub_10087CAA0(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_10087CAC4(a1, a2, a3, (uint64_t)&unk_100FAFAE4);
}

uint64_t sub_10087CAAC(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_10087CAC4(a1, a2, a3, (uint64_t)&unk_100FAFA7C);
}

uint64_t sub_10087CAB8(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_10087CAC4(a1, a2, a3, (uint64_t)&unk_100FAFA14);
}

uint64_t sub_10087CAC4(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];

  v4 = a2[2];
  v7[0] = a2[1];
  v7[1] = v4;
  v5 = a2[4];
  v7[2] = a2[3];
  v7[3] = v5;
  v7[4] = a2[5];
  return swift_getOpaqueTypeConformance2(v7, a4, 1);
}

unint64_t sub_10087CB04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDB90;
  if (!qword_1011CDB90)
  {
    v1 = sub_100044B54(&qword_1011CDB88);
    sub_10087CB68();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDB90);
  }
  return result;
}

unint64_t sub_10087CB68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDB98;
  if (!qword_1011CDB98)
  {
    v1 = sub_100044B54(&qword_1011CDBA0);
    sub_1004D9D80(&qword_1011CDBA8, &qword_1011CDBB0);
    sub_100049F28(&qword_1011BE8A8, &qword_1011BE8B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDB98);
  }
  return result;
}

uint64_t sub_10087CC0C(uint64_t result)
{
  *(_BYTE *)(result + 136) = 0;
  return result;
}

double sub_10087CC14(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 136) = 1;
  return result;
}

unint64_t sub_10087CC3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDBC8;
  if (!qword_1011CDBC8)
  {
    v1 = sub_100044B54(&qword_1011CDBD0);
    sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
    sub_10087CB04();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDBC8);
  }
  return result;
}

unint64_t sub_10087CCC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDBD8;
  if (!qword_1011CDBD8)
  {
    v1 = sub_100044B54(&qword_1011CDBE0);
    sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDBD8);
  }
  return result;
}

unint64_t sub_10087CD54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDBE8;
  if (!qword_1011CDBE8)
  {
    v1 = sub_100044B54(&qword_1011CDBF0);
    sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDBE8);
  }
  return result;
}

unint64_t sub_10087CDDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDBF8;
  if (!qword_1011CDBF8)
  {
    v1 = sub_100044B54(&qword_1011CDC00);
    sub_100048748(qword_1011CD6F8, type metadata accessor for BaselineSpacer, (uint64_t)"}s ");
    sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDBF8);
  }
  return result;
}

unint64_t sub_10087CE84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDC08;
  if (!qword_1011CDC08)
  {
    v1 = sub_100044B54(&qword_1011CDC10);
    sub_1006D0764();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDC08);
  }
  return result;
}

uint64_t sub_10087CF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;

  v5 = v4;
  v60 = a1;
  v9 = type metadata accessor for Optional(0, a2);
  v62 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v53 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v57 = (char *)&v51 - v12;
  __chkstk_darwin(v13);
  v61 = (char *)&v51 - v14;
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v19);
  v58 = (uint64_t)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v51 - v23;
  v25 = (*(uint64_t (**)(__n128))((swift_isaMask & *v4) + 0x250))(v22);
  v59 = a4;
  v54 = a2;
  v55 = v16;
  v52 = a3;
  v56 = v15;
  if (v25)
  {
    v26 = (void *)v25;
    static Artwork.CropStyle.specificRectangle.getter(v25);
    sub_100882874((uint64_t)v18, (uint64_t)v24);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {
    v27 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v24, 1, 1, v27);
  }
  v29 = v61;
  v28 = v62;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  v30(v61, v60, v9);
  v31 = type metadata accessor for ArtworkImage.ViewModel(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v33((uint64_t)v24, 1, v31) == 1)
  {
    v34 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x220))();
    if (v34)
    {
      v35 = (void *)v34;
      static Artwork.CropStyle.specificRectangle.getter(v34);
      v36 = v58;
      sub_100882874((uint64_t)v18, v58);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v56);
    }
    else
    {
      v36 = v58;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v58, 1, 1, v31);
    }
    v40 = v61;
    v39 = v62;
    v41 = v57;
    v30(v57, (uint64_t)v61, v9);
    if (v33(v36, 1, v31) == 1)
    {
      v42 = v53;
      v30(v53, (uint64_t)v41, v9);
      v43 = v42;
      v44 = v54;
      v45 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v54) == 1)
      {
        v46 = *(void (**)(char *, uint64_t))(v62 + 8);
        v47 = v59;
        v46(v41, v9);
        v46(v40, v9);
        v46(v43, v9);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v47, 1, 1, v31);
      }
      else
      {
        (*(void (**)(uint64_t))(v52 + 8))(v44);
        v50 = *(void (**)(char *, uint64_t))(v62 + 8);
        v50(v41, v9);
        v50(v40, v9);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
      }
      sub_10004FF60(v58, (uint64_t *)&unk_1011A3E10);
    }
    else
    {
      v48 = *(void (**)(char *, uint64_t))(v39 + 8);
      v48(v41, v9);
      v48(v40, v9);
      v49 = v59;
      sub_100077A18(v36, v59);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v49, 0, 1, v31);
    }
    return sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A3E10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v9);
    v37 = v59;
    sub_100077A18((uint64_t)v24, v59);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v37, 0, 1, v31);
  }
}

uint64_t sub_10087D344@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;

  v4 = type metadata accessor for MusicMovie(0);
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  __chkstk_darwin(v4);
  v63 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v64 = (char *)&v58 - v7;
  v8 = type metadata accessor for Artwork.CropStyle(0);
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v60 = (uint64_t)&v58 - v15;
  v16 = type metadata accessor for TVEpisode(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v59 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v58 - v20;
  v22 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v22);
  v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v58 - v26;
  sub_10004A160(a1, (uint64_t)&v58 - v26, (uint64_t *)&unk_1011A20D0);
  v28 = type metadata accessor for GenericMusicItem(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    goto LABEL_2;
  sub_10004A160((uint64_t)v27, (uint64_t)v24, (uint64_t *)&unk_1011A20D0);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v24, v28);
  if (v32 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v29 + 96))(v24, v28);
    v34 = v64;
    v33 = v65;
    v35 = v66;
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v65 + 32))(v64, v24, v66);
    v37 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v67) + 0x148))(v36);
    if (v37)
    {
      v38 = (void *)v37;
      static Artwork.CropStyle.boundedBox.getter(v37);
      sub_100882874((uint64_t)v10, (uint64_t)v13);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v62);
    }
    else
    {
      v44 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v13, 1, 1, v44);
    }
    v45 = a2;
    v46 = v63;
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v63, v34, v35);
    v47 = type metadata accessor for ArtworkImage.ViewModel(0);
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v13, 1, v47) == 1)
    {
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v35, (uint64_t)&protocol witness table for MusicMovie, v45);
      v49 = *(void (**)(char *, uint64_t))(v33 + 8);
      v49(v46, v35);
      v49(v34, v35);
      sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A3E10);
    }
    else
    {
      v50 = *(void (**)(char *, uint64_t))(v33 + 8);
      v50(v46, v35);
      v50(v34, v35);
      sub_100077A18((uint64_t)v13, (uint64_t)v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
  }
  else
  {
    if (v32 != enum case for GenericMusicItem.tvEpisode(_:))
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v28);
LABEL_2:
      v30 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a2, 1, 1, v30);
      return sub_10004FF60((uint64_t)v27, (uint64_t *)&unk_1011A20D0);
    }
    (*(void (**)(char *, uint64_t))(v29 + 96))(v24, v28);
    v39 = v16;
    v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v21, v24, v16);
    v41 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v67) + 0x148))(v40);
    if (v41)
    {
      v42 = (void *)v41;
      static Artwork.CropStyle.boundedBox.getter(v41);
      v43 = v60;
      sub_100882874((uint64_t)v10, v60);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v62);
    }
    else
    {
      v51 = type metadata accessor for ArtworkImage.ViewModel(0);
      v43 = v60;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v60, 1, 1, v51);
    }
    v52 = a2;
    v53 = v59;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v59, v21, v39);
    v54 = type metadata accessor for ArtworkImage.ViewModel(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v43, 1, v54) == 1)
    {
      TVEpisode.artworkViewModel.getter(v52);
      v56 = *(void (**)(char *, uint64_t))(v17 + 8);
      v56(v53, v39);
      v56(v21, v39);
      sub_10004FF60(v43, (uint64_t *)&unk_1011A3E10);
    }
    else
    {
      v57 = *(void (**)(char *, uint64_t))(v17 + 8);
      v57(v53, v39);
      v57(v21, v39);
      sub_100077A18(v43, (uint64_t)v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
  }
  return sub_10004FF60((uint64_t)v27, (uint64_t *)&unk_1011A20D0);
}

uint64_t sub_10087D8D4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44[24];

  v43 = a2;
  v3 = type metadata accessor for Artwork.CropStyle(0);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Station(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - v14;
  v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v37 - v20;
  sub_10004A160(a1, (uint64_t)&v37 - v20, (uint64_t *)&unk_1011A20D0);
  v22 = type metadata accessor for GenericMusicItem(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
    goto LABEL_6;
  v37 = v5;
  v38 = v12;
  v39 = v8;
  v24 = v43;
  sub_10004A160((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_1011A20D0);
  if ((*(unsigned int (**)(char *, uint64_t))(v23 + 88))(v18, v22) != enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v22);
LABEL_6:
    v29 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v43, 1, 1, v29);
    return sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A20D0);
  }
  (*(void (**)(char *, uint64_t))(v23 + 96))(v18, v22);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v18, v9);
  v25 = (id *)(v42 + OBJC_IVAR____TtC11MusicJSCore11JSMediaItem_backgroundArtwork);
  swift_beginAccess(v42 + OBJC_IVAR____TtC11MusicJSCore11JSMediaItem_backgroundArtwork, v44, 0, 0);
  if (*v25)
  {
    v26 = *v25;
    v27 = (uint64_t)v37;
    static Artwork.CropStyle.specificRectangle.getter(v26);
    v28 = (uint64_t)v39;
    sub_100882874(v27, (uint64_t)v39);

    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v27, v41);
  }
  else
  {
    v31 = type metadata accessor for ArtworkImage.ViewModel(0);
    v28 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v39, 1, 1, v31);
  }
  v32 = v38;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v38, v15, v9);
  v33 = type metadata accessor for ArtworkImage.ViewModel(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v28, 1, v33) == 1)
  {
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v9, (uint64_t)&protocol witness table for Station, v24);
    v35 = *(void (**)(char *, uint64_t))(v10 + 8);
    v35(v32, v9);
    v35(v15, v9);
    sub_10004FF60(v28, (uint64_t *)&unk_1011A3E10);
  }
  else
  {
    v36 = *(void (**)(char *, uint64_t))(v10 + 8);
    v36(v32, v9);
    v36(v15, v9);
    sub_100077A18(v28, (uint64_t)v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v24, 0, 1, v33);
  }
  return sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A20D0);
}

uint64_t sub_10087DC88@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X0>, NSObject *a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t (*v205)(char *, uint64_t, uint64_t, uint64_t);
  char *v206;
  uint64_t v207;
  char v209;
  char *v210;
  uint64_t v211;
  void *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  void *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  void *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  void (*v239)(char *, char *, uint64_t);
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  int v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t (*v250)(uint64_t, uint64_t, uint64_t);
  void (*v251)(char *, char *, uint64_t);
  uint64_t v252;
  void (*v253)(char *, char *, uint64_t);
  uint64_t v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  void (*v259)(char *, uint64_t);
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  void (*v264)(char *, uint64_t);
  void (*v265)(char *, uint64_t);
  uint64_t v266;
  char *v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  void (*v271)(char *, char *, uint64_t);
  uint64_t v272;
  int v273;
  char *v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  void (*v290)(char *, uint64_t);
  uint64_t *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  char *v298;
  void (*v299)(char *, uint64_t);
  void (*v300)(char *, uint64_t);
  char *v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  char *v305;
  NSObject *v306;
  uint64_t v307;
  uint64_t v308;
  void *v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  void (*v313)(char *, uint64_t);
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  _UNKNOWN **v318;
  void (*v319)(char *, uint64_t);
  char *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void *v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  void *v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  void (*v342)(char *, uint64_t);
  uint64_t v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  void *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  char *v358;
  char *v359;
  uint64_t v360;
  uint64_t v361;
  char *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  void (*v367)(char *, uint64_t);
  uint64_t *v368;
  void (*v369)(char *, uint64_t);
  uint64_t v370;
  char *v371;
  uint64_t v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  void *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  _UNKNOWN **v382;
  uint64_t v383;
  uint64_t v384;
  void *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  void (*v389)(char *, uint64_t);
  uint64_t v390;
  uint64_t v391;
  void *v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  void *v397;
  char *v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  int v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  void (*v408)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v409)(char *, uint64_t);
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  void *v415;
  uint64_t v416;
  uint64_t v417;
  char *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  uint64_t v431;
  uint64_t v432;
  char *v433;
  uint64_t v434;
  uint64_t v435;
  char v436;
  char *v437;
  char *v438;
  uint64_t v439;
  uint64_t v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  char **v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  char *v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  void *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  void *v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  void (*v467)(char *, uint64_t);
  char *v468;
  uint64_t v469;
  uint64_t v470;
  void *v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  char *v476;
  char *v477;
  uint64_t v478;
  void (*v479)(char *, uint64_t);
  void (*v480)(char *, uint64_t);
  char *v481;
  uint64_t v482;
  uint64_t v483;
  void *v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  char *v489;
  void (*v490)(char *, uint64_t);
  void (*v491)(char *, uint64_t);
  uint64_t v492;
  uint64_t *v493;
  char *v494;
  uint64_t v495;
  uint64_t v496;
  void *v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  char *v502;
  void (*v503)(char *, uint64_t);
  void (*v504)(char *, uint64_t);
  uint64_t v505;
  char *v506;
  uint64_t v507;
  uint64_t v508;
  void *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  char *v514;
  void (*v515)(char *, uint64_t);
  void (*v516)(char *, uint64_t);
  uint64_t v517;
  char *v518;
  uint64_t v519;
  uint64_t v520;
  void *v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  void (*v525)(char *, char *, uint64_t);
  uint64_t v526;
  uint64_t (*v527)(uint64_t, uint64_t, uint64_t);
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  void (*v531)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v532)(char *, uint64_t);
  uint64_t v533;
  char *v534;
  uint64_t v535;
  uint64_t v536;
  void *v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  char *v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  char *v548;
  void (*v549)(char *, uint64_t);
  char *v550;
  uint64_t v551;
  void (*v552)(char *, uint64_t);
  uint64_t v553;
  char *v554;
  uint64_t v555;
  uint64_t v556;
  char *v557;
  void (*v558)(char *, uint64_t);
  void (*v559)(char *, uint64_t);
  uint64_t v560;
  char *v561;
  uint64_t v562;
  uint64_t v563;
  void *v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  char v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  char *v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  void (*v581)(char *, uint64_t);
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  char *v585;
  void (*v586)(char *, uint64_t);
  void (*v587)(char *, uint64_t);
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  char *v591;
  void (*v592)(char *, uint64_t);
  void (*v593)(char *, uint64_t);
  uint64_t v594;
  void (*v595)(char *, uint64_t);
  uint64_t v596;
  uint64_t v597;
  id v598;
  NSObject *v599;
  __n128 v600;
  os_log_type_t v601;
  uint64_t v602;
  uint64_t ObjectType;
  uint64_t v604;
  unint64_t v605;
  id v606;
  uint64_t (*v607)(uint64_t, uint64_t, uint64_t);
  NSObject *v608;
  uint64_t v609;
  id v610;
  uint64_t v611;
  uint64_t v612;
  char *v613;
  void (*v614)(char *, uint64_t);
  void (*v615)(char *, uint64_t);
  uint64_t v616;
  void (*v617)(char *, uint64_t);
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  char *v621;
  char *v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  char *v627;
  uint64_t v628;
  char *v629;
  uint64_t v630;
  char *v631;
  uint64_t v632;
  uint64_t v633;
  char *v634;
  uint64_t v635;
  uint64_t v636;
  char *v637;
  char *v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  char *v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  char *v647;
  char *v648;
  uint64_t v649;
  uint64_t v650;
  char *v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  char *v656;
  char *v657;
  uint64_t v658;
  char *v659;
  uint64_t v660;
  char *v661;
  uint64_t v662;
  uint64_t v663;
  char *v664;
  uint64_t v665;
  char *v666;
  uint64_t v667;
  uint64_t v668;
  char *v669;
  char *v670;
  uint64_t v671;
  char *v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  char *v677;
  char *v678;
  uint64_t v679;
  uint64_t v680;
  char *v681;
  uint64_t v682;
  uint64_t v683;
  char *v684;
  char *v685;
  _QWORD v686[2];
  uint64_t v687;
  char *v688;
  uint64_t v689;
  uint64_t v690;
  char *v691;
  char *v692;
  uint64_t v693;
  char *v694;
  char *v695;
  char *v696;
  uint64_t v697;
  uint64_t v698;
  char *v699;
  char *v700;
  char *v701;
  char *v702;
  uint64_t v703;
  uint64_t v704;
  char *v705;
  uint64_t v706;
  uint64_t v707;
  char *v708;
  char *v709;
  uint64_t v710;
  uint64_t v711;
  char *v712;
  uint64_t v713;
  char *v714;
  uint64_t v715;
  char *v716;
  char *v717;
  uint64_t v718;
  uint64_t v719;
  char *v720;
  char *v721;
  char *v722;
  char *v723;
  char *v724;
  char *v725;
  char *v726;
  uint64_t v727;
  uint64_t v728;
  char *v729;
  char *v730;
  char *v731;
  char *v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  char *v737;
  char *v738;
  uint64_t v739;
  uint64_t v740;
  char *v741;
  char *v742;
  char *v743;
  char *v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  char *v750;
  char *v751;
  uint64_t v752;
  uint64_t v753;
  char *v754;
  char *v755;
  char *v756;
  char *v757;
  uint64_t v758;
  void (*v759)(char *, char *, uint64_t);
  uint64_t (*v760)(uint64_t, uint64_t, uint64_t);
  id v761;
  NSObject *v762;
  char *v763;
  __int128 v764;
  __int128 v765;
  uint64_t v766;
  uint64_t v767;
  char v768[8];
  uint64_t v769;

  v762 = a2;
  v760 = a1;
  v763 = a3;
  v624 = type metadata accessor for Logger(0);
  v623 = *(_QWORD *)(v624 - 8);
  __chkstk_darwin(v624);
  v622 = (char *)&v619 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v674 = type metadata accessor for SocialProfile(0);
  v673 = *(_QWORD *)(v674 - 8);
  __chkstk_darwin(v674);
  v670 = (char *)&v619 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v672 = (char *)&v619 - v6;
  v633 = type metadata accessor for UploadedVideo(0);
  v632 = *(_QWORD *)(v633 - 8);
  __chkstk_darwin(v633);
  v627 = (char *)&v619 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v631 = (char *)&v619 - v9;
  v640 = type metadata accessor for UploadedAudio(0);
  v639 = *(_QWORD *)(v640 - 8);
  __chkstk_darwin(v640);
  v634 = (char *)&v619 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v638 = (char *)&v619 - v12;
  v653 = type metadata accessor for TVSeason(0);
  v652 = *(_QWORD *)(v653 - 8);
  __chkstk_darwin(v653);
  v647 = (char *)&v619 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v651 = (char *)&v619 - v15;
  v644 = type metadata accessor for TVShow(0);
  v642 = *(_QWORD *)(v644 - 8);
  __chkstk_darwin(v644);
  v637 = (char *)&v619 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v629 = (char *)&v619 - v18;
  __chkstk_darwin(v19);
  v643 = (char *)&v619 - v20;
  v658 = type metadata accessor for TVEpisode(0);
  v655 = *(_QWORD *)(v658 - 8);
  __chkstk_darwin(v658);
  v648 = (char *)&v619 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v656 = (char *)&v619 - v23;
  __chkstk_darwin(v24);
  v657 = (char *)&v619 - v25;
  v683 = type metadata accessor for RecordLabel(0);
  v682 = *(_QWORD *)(v683 - 8);
  __chkstk_darwin(v683);
  v669 = (char *)&v619 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v681 = (char *)&v619 - v28;
  v680 = type metadata accessor for RadioShow(0);
  v679 = *(_QWORD *)(v680 - 8);
  __chkstk_darwin(v680);
  v677 = (char *)&v619 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v678 = (char *)&v619 - v31;
  v663 = type metadata accessor for Station(0);
  v662 = *(_QWORD *)(v663 - 8);
  __chkstk_darwin(v663);
  v659 = (char *)&v619 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v661 = (char *)&v619 - v34;
  v668 = type metadata accessor for Song(0);
  v667 = *(_QWORD *)(v668 - 8);
  __chkstk_darwin(v668);
  v664 = (char *)&v619 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v666 = (char *)&v619 - v37;
  v740 = type metadata accessor for Playlist(0);
  v739 = *(_QWORD *)(v740 - 8);
  __chkstk_darwin(v740);
  v737 = (char *)&v619 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v738 = (char *)&v619 - v40;
  __chkstk_darwin(v41);
  v685 = (char *)&v619 - v42;
  __chkstk_darwin(v43);
  v686[0] = (char *)&v619 - v44;
  v704 = type metadata accessor for MusicMovie(0);
  v703 = *(_QWORD *)(v704 - 8);
  __chkstk_darwin(v704);
  v691 = (char *)&v619 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v702 = (char *)&v619 - v47;
  __chkstk_darwin(v48);
  v712 = (char *)&v619 - v49;
  v698 = type metadata accessor for MusicVideo(0);
  v697 = *(_QWORD *)(v698 - 8);
  __chkstk_darwin(v698);
  v695 = (char *)&v619 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v696 = (char *)&v619 - v52;
  v711 = type metadata accessor for Genre(0);
  v710 = *(_QWORD *)(v711 - 8);
  __chkstk_darwin(v711);
  v708 = (char *)&v619 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54);
  v709 = (char *)&v619 - v55;
  v719 = type metadata accessor for EditorialItem(0);
  v718 = *(_QWORD *)(v719 - 8);
  __chkstk_darwin(v719);
  v716 = (char *)&v619 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  v717 = (char *)&v619 - v58;
  v59 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v59);
  v741 = (char *)&v619 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v748 = type metadata accessor for Artwork(0);
  v747 = *(_QWORD *)(v748 - 8);
  __chkstk_darwin(v748);
  v745 = (uint64_t)&v619 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v62);
  v742 = (char *)&v619 - v63;
  v64 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v64);
  v756 = (char *)&v619 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v66);
  v744 = (char *)&v619 - v67;
  __chkstk_darwin(v68);
  v735 = (uint64_t)&v619 - v69;
  __chkstk_darwin(v70);
  v743 = (char *)&v619 - v71;
  __chkstk_darwin(v72);
  v625 = (uint64_t)&v619 - v73;
  __chkstk_darwin(v74);
  v626 = (uint64_t)&v619 - v75;
  __chkstk_darwin(v76);
  v645 = (uint64_t)&v619 - v77;
  __chkstk_darwin(v78);
  v646 = (uint64_t)&v619 - v79;
  __chkstk_darwin(v80);
  v700 = (char *)&v619 - v81;
  __chkstk_darwin(v82);
  v701 = (char *)&v619 - v83;
  __chkstk_darwin(v84);
  v693 = (uint64_t)&v619 - v85;
  __chkstk_darwin(v86);
  v694 = (char *)&v619 - v87;
  __chkstk_darwin(v88);
  v715 = (uint64_t)&v619 - v89;
  __chkstk_darwin(v90);
  v720 = (char *)&v619 - v91;
  v92 = type metadata accessor for Curator(0);
  v752 = *(_QWORD *)(v92 - 8);
  v753 = v92;
  __chkstk_darwin(v92);
  v750 = (char *)&v619 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v94);
  v751 = (char *)&v619 - v95;
  __chkstk_darwin(v96);
  v723 = (char *)&v619 - v97;
  __chkstk_darwin(v98);
  v721 = (char *)&v619 - v99;
  v728 = type metadata accessor for CreditArtist(0);
  v727 = *(_QWORD *)(v728 - 8);
  __chkstk_darwin(v728);
  v725 = (char *)&v619 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v101);
  v726 = (char *)&v619 - v102;
  v734 = type metadata accessor for Artist(0);
  v733 = *(_QWORD *)(v734 - 8);
  __chkstk_darwin(v734);
  v731 = (char *)&v619 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v104);
  v732 = (char *)&v619 - v105;
  v106 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v106);
  v736 = (uint64_t)&v619 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v108);
  v755 = (char *)&v619 - v109;
  __chkstk_darwin(v110);
  v749 = (uint64_t)&v619 - v111;
  __chkstk_darwin(v112);
  v758 = (uint64_t)&v619 - v113;
  __chkstk_darwin(v114);
  v759 = (void (*)(char *, char *, uint64_t))((char *)&v619 - v115);
  __chkstk_darwin(v116);
  v671 = (uint64_t)&v619 - v117;
  __chkstk_darwin(v118);
  v630 = (uint64_t)&v619 - v119;
  __chkstk_darwin(v120);
  v636 = (uint64_t)&v619 - v121;
  __chkstk_darwin(v122);
  v649 = (uint64_t)&v619 - v123;
  __chkstk_darwin(v124);
  v635 = (uint64_t)&v619 - v125;
  __chkstk_darwin(v126);
  v628 = (uint64_t)&v619 - v127;
  __chkstk_darwin(v128);
  v641 = (uint64_t)&v619 - v129;
  __chkstk_darwin(v130);
  v650 = (uint64_t)&v619 - v131;
  __chkstk_darwin(v132);
  v654 = (uint64_t)&v619 - v133;
  __chkstk_darwin(v134);
  v676 = (uint64_t)&v619 - v135;
  __chkstk_darwin(v136);
  v675 = (uint64_t)&v619 - v137;
  __chkstk_darwin(v138);
  v660 = (uint64_t)&v619 - v139;
  __chkstk_darwin(v140);
  v665 = (uint64_t)&v619 - v141;
  __chkstk_darwin(v142);
  v684 = (char *)&v619 - v143;
  __chkstk_darwin(v144);
  v688 = (char *)&v619 - v145;
  __chkstk_darwin(v146);
  v689 = (uint64_t)&v619 - v147;
  __chkstk_darwin(v148);
  v686[1] = (char *)&v619 - v149;
  __chkstk_darwin(v150);
  v687 = (uint64_t)&v619 - v151;
  __chkstk_darwin(v152);
  v690 = (uint64_t)&v619 - v153;
  __chkstk_darwin(v154);
  v713 = (uint64_t)&v619 - v155;
  __chkstk_darwin(v156);
  v699 = (char *)&v619 - v157;
  __chkstk_darwin(v158);
  v706 = (uint64_t)&v619 - v159;
  __chkstk_darwin(v160);
  v707 = (uint64_t)&v619 - v161;
  __chkstk_darwin(v162);
  v692 = (char *)&v619 - v163;
  __chkstk_darwin(v164);
  v705 = (char *)&v619 - v165;
  __chkstk_darwin(v166);
  v714 = (char *)&v619 - v167;
  __chkstk_darwin(v168);
  v722 = (char *)&v619 - v169;
  __chkstk_darwin(v170);
  v724 = (char *)&v619 - v171;
  __chkstk_darwin(v172);
  v729 = (char *)&v619 - v173;
  __chkstk_darwin(v174);
  v746 = (uint64_t)&v619 - v175;
  v176 = type metadata accessor for Album(0);
  v177 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v179 = (char *)&v619 - ((v178 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v180);
  v182 = (char *)&v619 - v181;
  v183 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v183);
  v185 = (char *)&v619 - ((v184 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = type metadata accessor for GenericMusicItem(0);
  v187 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v730 = (char *)&v619 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v189);
  v754 = (char *)&v619 - v190;
  __chkstk_darwin(v191);
  v193 = (char *)&v619 - v192;
  __chkstk_darwin(v194);
  v196 = (char *)&v619 - v195;
  __chkstk_darwin(v197);
  v757 = (char *)&v619 - v198;
  __chkstk_darwin(v199);
  v201 = (char *)&v619 - v200;
  v203 = v202;
  sub_10004A160((uint64_t)v762, (uint64_t)v185, (uint64_t *)&unk_1011A20D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v187 + 48))(v185, 1, v203) == 1)
  {
    sub_10004FF60((uint64_t)v185, (uint64_t *)&unk_1011A20D0);
    v204 = type metadata accessor for ArtworkImage.ViewModel(0);
    v205 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 56);
    v206 = v763;
LABEL_3:
    v207 = 1;
    return v205(v206, v207, 1, v204);
  }
  (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v201, v185, v203);
  sub_1002297E0();
  if (v209 != 5)
  {
    v216 = v757;
    (*(void (**)(char *, char *, uint64_t))(v187 + 16))(v757, v201, v203);
    v217 = (*(uint64_t (**)(char *, uint64_t))(v187 + 88))(v216, v203);
    if (v217 == enum case for GenericMusicItem.album(_:))
    {
      v621 = v201;
      v218 = v187;
      (*(void (**)(char *, uint64_t))(v187 + 96))(v216, v203);
      v219 = (*(uint64_t (**)(char *, char *, uint64_t))(v177 + 32))(v182, v216, v176);
      v220 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v219);
      v221 = v763;
      if (v220)
      {
        v222 = (void *)v220;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v223 = v203;
        v224 = type metadata accessor for Artwork.CropStyle(0);
        v225 = sub_100048B14(v224, (uint64_t)qword_1011CDC18);
        v226 = v746;
        sub_100882874(v225, v746);

      }
      else
      {
        v223 = v203;
        v261 = type metadata accessor for ArtworkImage.ViewModel(0);
        v226 = v746;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v261 - 8) + 56))(v746, 1, 1, v261);
      }
      (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v179, v182, v176);
      v262 = type metadata accessor for ArtworkImage.ViewModel(0);
      v263 = *(_QWORD *)(v262 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v263 + 48))(v226, 1, v262) != 1)
      {
        v265 = *(void (**)(char *, uint64_t))(v177 + 8);
        v265(v179, v176);
        v265(v182, v176);
        (*(void (**)(char *, uint64_t))(v218 + 8))(v621, v223);
        sub_100077A18(v226, (uint64_t)v221);
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v263 + 56))(v221, 0, 1, v262);
      }
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v176, (uint64_t)&protocol witness table for Album, v221);
      v264 = *(void (**)(char *, uint64_t))(v177 + 8);
      v264(v179, v176);
      v264(v182, v176);
      (*(void (**)(char *, uint64_t))(v218 + 8))(v621, v223);
      return sub_10004FF60(v226, (uint64_t *)&unk_1011A3E10);
    }
    if (v217 == enum case for GenericMusicItem.artist(_:))
    {
      v227 = v187;
      (*(void (**)(char *, uint64_t))(v187 + 96))(v216, v203);
      v228 = v733;
      v229 = v732;
      v230 = v734;
      v231 = (*(uint64_t (**)(char *, char *, uint64_t))(v733 + 32))(v732, v216, v734);
      v232 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v231);
      if (v232)
      {
        v233 = (void *)v232;
        v234 = v731;
        v226 = (uint64_t)v729;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v235 = type metadata accessor for Artwork.CropStyle(0);
        v236 = sub_100048B14(v235, (uint64_t)qword_1011CDC18);
        sub_100882874(v236, v226);

      }
      else
      {
        v315 = type metadata accessor for ArtworkImage.ViewModel(0);
        v226 = (uint64_t)v729;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v315 - 8) + 56))(v729, 1, 1, v315);
        v234 = v731;
      }
      (*(void (**)(char *, char *, uint64_t))(v228 + 16))(v234, v229, v230);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v317 = *(_QWORD *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v226, 1, v316) == 1)
      {
        v318 = &protocol witness table for Artist;
LABEL_62:
        ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v230, (uint64_t)v318, v763);
        v319 = *(void (**)(char *, uint64_t))(v228 + 8);
        v319(v234, v230);
        v319(v229, v230);
        (*(void (**)(char *, uint64_t))(v227 + 8))(v201, v203);
        return sub_10004FF60(v226, (uint64_t *)&unk_1011A3E10);
      }
LABEL_77:
      v342 = *(void (**)(char *, uint64_t))(v228 + 8);
      v342(v234, v230);
      v342(v229, v230);
      (*(void (**)(char *, uint64_t))(v227 + 8))(v201, v203);
LABEL_78:
      v343 = v226;
LABEL_79:
      v344 = v763;
      sub_100077A18(v343, (uint64_t)v763);
      v205 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v317 + 56);
      v206 = v344;
LABEL_80:
      v207 = 0;
      v204 = v316;
      return v205(v206, v207, 1, v204);
    }
    if (v217 == enum case for GenericMusicItem.composer(_:))
    {
      v259 = *(void (**)(char *, uint64_t))(v187 + 8);
      v259(v201, v203);
      v259(v216, v203);
      goto LABEL_28;
    }
    if (v217 == enum case for GenericMusicItem.creditArtist(_:))
    {
      v227 = v187;
      (*(void (**)(char *, uint64_t))(v187 + 96))(v216, v203);
      v228 = v727;
      v229 = v726;
      v230 = v728;
      v307 = (*(uint64_t (**)(char *, char *, uint64_t))(v727 + 32))(v726, v216, v728);
      v308 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v307);
      if (v308)
      {
        v309 = (void *)v308;
        v234 = v725;
        v226 = (uint64_t)v724;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v310 = type metadata accessor for Artwork.CropStyle(0);
        v311 = sub_100048B14(v310, (uint64_t)qword_1011CDC18);
        sub_100882874(v311, v226);

      }
      else
      {
        v341 = type metadata accessor for ArtworkImage.ViewModel(0);
        v226 = (uint64_t)v724;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v341 - 8) + 56))(v724, 1, 1, v341);
        v234 = v725;
      }
      (*(void (**)(char *, char *, uint64_t))(v228 + 16))(v234, v229, v230);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v317 = *(_QWORD *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v226, 1, v316) == 1)
      {
        v318 = &protocol witness table for CreditArtist;
        goto LABEL_62;
      }
      goto LABEL_77;
    }
    if (v217 == enum case for GenericMusicItem.curator(_:))
    {
      v762 = v187;
      (*(void (**)(char *, uint64_t))(v187 + 96))(v216, v203);
      v320 = v721;
      v321 = (*(uint64_t (**)(char *, char *, uint64_t))(v752 + 32))(v721, v216, v753);
      v322 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v321);
      v323 = v748;
      if (v322)
      {
        v324 = (void *)v322;
        v325 = v723;
        v326 = (uint64_t)v722;
        if (qword_10119C9B0 != -1)
          swift_once(&qword_10119C9B0, sub_100886A04);
        v327 = type metadata accessor for Artwork.CropStyle(0);
        v328 = sub_100048B14(v327, (uint64_t)qword_1011CDC30);
        sub_100882874(v328, v326);

      }
      else
      {
        v350 = type metadata accessor for ArtworkImage.ViewModel(0);
        v326 = (uint64_t)v722;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v350 - 8) + 56))(v722, 1, 1, v350);
        v325 = v723;
      }
      v351 = v752;
      v352 = v753;
      (*(void (**)(char *, char *, uint64_t))(v752 + 16))(v325, v320, v753);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v353 = *(_QWORD *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v353 + 48))(v326, 1, v316) == 1)
      {
        v354 = (uint64_t)v720;
        Curator.editorialArtwork.getter();
        v355 = v715;
        sub_10004A160(v354, v715, &qword_1011A1440);
        v356 = v747;
        v357 = 1;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v747 + 48))(v355, 1, v323) != 1)
        {
          v358 = v742;
          (*(void (**)(char *, uint64_t, uint64_t))(v356 + 32))(v742, v355, v323);
          v359 = v201;
          v360 = v745;
          v361 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v356 + 16))(v745, v358, v323);
          v362 = v741;
          static Artwork.CropStyle.featuredContentCrop170T100B.getter(v361);
          v363 = type metadata accessor for Artwork.CropStyle(0);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v363 - 8) + 56))(v362, 0, 1, v363);
          v364 = v360;
          v201 = v359;
          v354 = (uint64_t)v720;
          v365 = (uint64_t)v362;
          v320 = v721;
          ArtworkImage.ViewModel.init(artwork:cropStyle:)(v364, v365, (uint64_t)v763);
          (*(void (**)(char *, uint64_t))(v356 + 8))(v358, v323);
          v357 = 0;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v353 + 56))(v763, v357, 1, v316);
        sub_10004FF60(v354, &qword_1011A1440);
        v366 = v753;
        v367 = *(void (**)(char *, uint64_t))(v752 + 8);
        v367(v723, v753);
        v367(v320, v366);
        ((void (*)(char *, uint64_t))v762[1].isa)(v201, v203);
        v368 = (uint64_t *)&v754;
        return sub_10004FF60(*(v368 - 32), (uint64_t *)&unk_1011A3E10);
      }
      v369 = *(void (**)(char *, uint64_t))(v351 + 8);
      v369(v325, v352);
      v369(v320, v352);
      ((void (*)(char *, uint64_t))v762[1].isa)(v201, v203);
      v370 = v326;
      goto LABEL_93;
    }
    v329 = v748;
    if (v217 == enum case for GenericMusicItem.editorialItem(_:))
    {
      v330 = v187;
      (*(void (**)(char *, uint64_t))(v187 + 96))(v216, v203);
      v331 = v718;
      v332 = v717;
      v333 = v719;
      v334 = (*(uint64_t (**)(char *, char *, uint64_t))(v718 + 32))(v717, v216, v719);
      v335 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v334);
      if (v335)
      {
        v336 = (void *)v335;
        v337 = v716;
        v338 = (uint64_t)v714;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v339 = type metadata accessor for Artwork.CropStyle(0);
        v340 = sub_100048B14(v339, (uint64_t)qword_1011CDC18);
        sub_100882874(v340, v338);

      }
      else
      {
        v381 = type metadata accessor for ArtworkImage.ViewModel(0);
        v338 = (uint64_t)v714;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v381 - 8) + 56))(v714, 1, 1, v381);
        v337 = v716;
      }
      (*(void (**)(char *, char *, uint64_t))(v331 + 16))(v337, v332, v333);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v317 = *(_QWORD *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v338, 1, v316) == 1)
      {
        v382 = &protocol witness table for EditorialItem;
LABEL_111:
        ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v333, (uint64_t)v382, v763);
LABEL_112:
        v389 = *(void (**)(char *, uint64_t))(v331 + 8);
        v389(v337, v333);
        v389(v332, v333);
        (*(void (**)(char *, uint64_t))(v330 + 8))(v201, v203);
        return sub_10004FF60(v338, (uint64_t *)&unk_1011A3E10);
      }
      goto LABEL_167;
    }
    if (v217 == enum case for GenericMusicItem.genre(_:))
    {
      v330 = v187;
      (*(void (**)(char *, uint64_t))(v187 + 96))(v216, v203);
      v331 = v710;
      v332 = v709;
      v333 = v711;
      v345 = (*(uint64_t (**)(char *, char *, uint64_t))(v710 + 32))(v709, v216, v711);
      v346 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v345);
      if (v346)
      {
        v347 = (void *)v346;
        v337 = v708;
        v338 = (uint64_t)v705;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v348 = type metadata accessor for Artwork.CropStyle(0);
        v349 = sub_100048B14(v348, (uint64_t)qword_1011CDC18);
        sub_100882874(v349, v338);

      }
      else
      {
        v388 = type metadata accessor for ArtworkImage.ViewModel(0);
        v338 = (uint64_t)v705;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v388 - 8) + 56))(v705, 1, 1, v388);
        v337 = v708;
      }
      (*(void (**)(char *, char *, uint64_t))(v331 + 16))(v337, v332, v333);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v317 = *(_QWORD *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v338, 1, v316) == 1)
      {
        v382 = &protocol witness table for Genre;
        goto LABEL_111;
      }
LABEL_167:
      v467 = *(void (**)(char *, uint64_t))(v331 + 8);
      v467(v337, v333);
      v467(v332, v333);
      (*(void (**)(char *, uint64_t))(v330 + 8))(v201, v203);
      v343 = v338;
      goto LABEL_79;
    }
    if (v217 == enum case for GenericMusicItem.musicMovie(_:))
    {
      v762 = v187;
      (*(void (**)(char *, uint64_t))(v187 + 96))(v216, v203);
      v372 = v703;
      v373 = v712;
      v374 = v704;
      v375 = (*(uint64_t (**)(char *, char *, uint64_t))(v703 + 32))(v712, v216, v704);
      v376 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v375);
      if (v376)
      {
        v377 = (void *)v376;
        v378 = (uint64_t)v699;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v379 = type metadata accessor for Artwork.CropStyle(0);
        v380 = sub_100048B14(v379, (uint64_t)qword_1011CDC18);
        sub_100882874(v380, v707);

      }
      else
      {
        v395 = type metadata accessor for ArtworkImage.ViewModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v395 - 8) + 56))(v707, 1, 1, v395);
        v378 = (uint64_t)v699;
      }
      v396 = (*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v760) + 0x160))();
      v620 = v203;
      if (v396)
      {
        v397 = (void *)v396;
        v398 = v702;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v399 = type metadata accessor for Artwork.CropStyle(0);
        v400 = sub_100048B14(v399, (uint64_t)qword_1011CDC18);
        sub_100882874(v400, v378);

      }
      else
      {
        v401 = type metadata accessor for ArtworkImage.ViewModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v401 - 8) + 56))(v378, 1, 1, v401);
        v398 = v702;
      }
      v759 = *(void (**)(char *, char *, uint64_t))(v372 + 16);
      v759(v398, v373, v374);
      v402 = type metadata accessor for ArtworkImage.ViewModel(0);
      v403 = *(_QWORD *)(v402 - 8);
      v760 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v403 + 48);
      v404 = v760(v378, 1, v402);
      v621 = v201;
      if (v404 == 1)
      {
        v405 = (uint64_t)v694;
        EditorialArtworkVending.gridEditorialArtwork.getter(v374, &protocol witness table for MusicMovie);
        v406 = v693;
        sub_10004A160(v405, v693, &qword_1011A1440);
        v407 = v747;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v747 + 48))(v406, 1, v329) == 1)
        {
          v408 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v403 + 56);
          v408(v706, 1, 1, v402);
        }
        else
        {
          v418 = v742;
          (*(void (**)(char *, uint64_t, uint64_t))(v407 + 32))(v742, v406, v329);
          v419 = v745;
          v420 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v407 + 16))(v745, v418, v329);
          v421 = (uint64_t)v741;
          static Artwork.CropStyle.specificRectangle.getter(v420);
          v422 = type metadata accessor for Artwork.CropStyle(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v422 - 8) + 56))(v421, 0, 1, v422);
          v423 = v706;
          v424 = v419;
          v374 = v704;
          ArtworkImage.ViewModel.init(artwork:cropStyle:)(v424, v421, v706);
          (*(void (**)(char *, uint64_t))(v407 + 8))(v418, v329);
          v408 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v403 + 56);
          v408(v423, 0, 1, v402);
        }
        v412 = (uint64_t)v701;
        sub_10004FF60(v405, &qword_1011A1440);
        v409 = *(void (**)(char *, uint64_t))(v703 + 8);
        v409(v702, v374);
        v411 = sub_10004FF60(v378, (uint64_t *)&unk_1011A3E10);
      }
      else
      {
        v409 = *(void (**)(char *, uint64_t))(v372 + 8);
        v409(v398, v374);
        v410 = v706;
        sub_100077A18(v378, v706);
        v408 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v403 + 56);
        v411 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v408)(v410, 0, 1, v402);
        v412 = (uint64_t)v701;
      }
      v425 = (uint64_t)v700;
      v426 = v402;
      MusicMovie.editorialArtwork.getter(v411);
      sub_10004A160(v412, v425, &qword_1011A1440);
      v427 = v747;
      v428 = 1;
      v429 = v748;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v747 + 48))(v425, 1, v748) != 1)
      {
        v430 = v742;
        (*(void (**)(char *, uint64_t, uint64_t))(v427 + 32))(v742, v425, v429);
        v431 = v745;
        v432 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v427 + 16))(v745, v430, v429);
        v433 = v741;
        static Artwork.CropStyle.specificRectangle.getter(v432);
        v434 = type metadata accessor for Artwork.CropStyle(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v434 - 8) + 56))(v433, 0, 1, v434);
        v435 = (uint64_t)v433;
        v374 = v704;
        ArtworkImage.ViewModel.init(artwork:cropStyle:)(v431, v435, v713);
        (*(void (**)(char *, uint64_t))(v427 + 8))(v430, v429);
        v428 = 0;
      }
      v408(v713, v428, 1, v426);
      sub_10004FF60(v412, &qword_1011A1440);
      sub_1002297E0();
      if (v436 == 7)
      {
        sub_10004FF60(v707, (uint64_t *)&unk_1011A3E10);
        v409(v712, v374);
        ((void (*)(char *, uint64_t))v762[1].isa)(v621, v620);
        v442 = v687;
        sub_100886A68(v706, v687);
        v443 = v713;
        v444 = (char **)&v718;
      }
      else
      {
        v437 = v621;
        v438 = v712;
        v439 = v707;
        if (!v436)
        {
          v440 = v690;
          sub_10004A160(v707, v690, (uint64_t *)&unk_1011A3E10);
          v441 = v691;
          v759(v691, v438, v374);
          if (v760(v440, 1, v426) == 1)
          {
            ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v374, (uint64_t)&protocol witness table for MusicMovie, v763);
            v409(v441, v374);
            sub_10004FF60(v713, (uint64_t *)&unk_1011A3E10);
            sub_10004FF60(v706, (uint64_t *)&unk_1011A3E10);
            sub_10004FF60(v439, (uint64_t *)&unk_1011A3E10);
            v409(v438, v374);
            ((void (*)(char *, uint64_t))v762[1].isa)(v437, v620);
            v292 = v440;
            return sub_10004FF60(v292, (uint64_t *)&unk_1011A3E10);
          }
          v409(v441, v374);
          sub_10004FF60(v713, (uint64_t *)&unk_1011A3E10);
          sub_10004FF60(v706, (uint64_t *)&unk_1011A3E10);
          sub_10004FF60(v439, (uint64_t *)&unk_1011A3E10);
          v409(v438, v374);
          ((void (*)(char *, uint64_t))v762[1].isa)(v437, v620);
          v447 = v440;
LABEL_150:
          v449 = v763;
          sub_100077A18(v447, (uint64_t)v763);
          return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v408)(v449, 0, 1, v426);
        }
        sub_10004FF60(v706, (uint64_t *)&unk_1011A3E10);
        v409(v438, v374);
        ((void (*)(char *, uint64_t))v762[1].isa)(v437, v620);
        v445 = v439;
        v442 = v689;
        sub_100886A68(v445, v689);
        v443 = v713;
        v444 = &v720;
      }
      v446 = (uint64_t)*(v444 - 32);
      sub_100886A68(v443, v446);
      if (v760(v442, 1, v426) == 1)
      {
        sub_100886A68(v446, (uint64_t)v763);
        return sub_10004FF60(v442, (uint64_t *)&unk_1011A3E10);
      }
      sub_10004FF60(v446, (uint64_t *)&unk_1011A3E10);
      v447 = v442;
      goto LABEL_150;
    }
    if (v217 == enum case for GenericMusicItem.musicVideo(_:))
    {
      v330 = v187;
      (*(void (**)(char *, uint64_t))(v187 + 96))(v216, v203);
      v331 = v697;
      v332 = v696;
      v333 = v698;
      v383 = (*(uint64_t (**)(char *, char *, uint64_t))(v697 + 32))(v696, v216, v698);
      v384 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v383);
      if (v384)
      {
        v385 = (void *)v384;
        v337 = v695;
        v338 = (uint64_t)v692;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v386 = type metadata accessor for Artwork.CropStyle(0);
        v387 = sub_100048B14(v386, (uint64_t)qword_1011CDC18);
        sub_100882874(v387, v338);

      }
      else
      {
        v448 = type metadata accessor for ArtworkImage.ViewModel(0);
        v338 = (uint64_t)v692;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v448 - 8) + 56))(v692, 1, 1, v448);
        v337 = v695;
      }
      (*(void (**)(char *, char *, uint64_t))(v331 + 16))(v337, v332, v333);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v317 = *(_QWORD *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v338, 1, v316) == 1)
      {
        v382 = &protocol witness table for MusicVideo;
        goto LABEL_111;
      }
      goto LABEL_167;
    }
    if (v217 == enum case for GenericMusicItem.playlist(_:))
    {
      v330 = v187;
      (*(void (**)(char *, uint64_t))(v187 + 96))(v216, v203);
      v331 = v739;
      v332 = (char *)v686[0];
      v333 = v740;
      v390 = (*(uint64_t (**)(_QWORD, char *, uint64_t))(v739 + 32))(v686[0], v216, v740);
      v391 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v390);
      if (v391)
      {
        v392 = (void *)v391;
        v337 = v685;
        v338 = (uint64_t)v684;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v393 = type metadata accessor for Artwork.CropStyle(0);
        v394 = sub_100048B14(v393, (uint64_t)qword_1011CDC18);
        sub_100882874(v394, v338);

      }
      else
      {
        v457 = type metadata accessor for ArtworkImage.ViewModel(0);
        v338 = (uint64_t)v684;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v457 - 8) + 56))(v684, 1, 1, v457);
        v337 = v685;
      }
      (*(void (**)(char *, char *, uint64_t))(v331 + 16))(v337, v332, v333);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v317 = *(_QWORD *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v338, 1, v316) == 1)
      {
        Playlist.artworkViewModel.getter((uint64_t)v763);
        goto LABEL_112;
      }
      goto LABEL_167;
    }
    if (v217 == enum case for GenericMusicItem.radioShow(_:))
    {
      v330 = v187;
      (*(void (**)(char *, uint64_t))(v187 + 96))(v216, v203);
      v331 = v679;
      v332 = v678;
      v333 = v680;
      v413 = (*(uint64_t (**)(char *, char *, uint64_t))(v679 + 32))(v678, v216, v680);
      v414 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v413);
      if (v414)
      {
        v415 = (void *)v414;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v416 = type metadata accessor for Artwork.CropStyle(0);
        v417 = sub_100048B14(v416, (uint64_t)qword_1011CDC18);
        v338 = v675;
        sub_100882874(v417, v675);

      }
      else
      {
        v466 = type metadata accessor for ArtworkImage.ViewModel(0);
        v338 = v675;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v466 - 8) + 56))(v675, 1, 1, v466);
      }
      v337 = v677;
      (*(void (**)(char *, char *, uint64_t))(v331 + 16))(v677, v332, v333);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v317 = *(_QWORD *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v338, 1, v316) == 1)
      {
        v382 = &protocol witness table for RadioShow;
        goto LABEL_111;
      }
      goto LABEL_167;
    }
    if (v217 == enum case for GenericMusicItem.recordLabel(_:))
    {
      v450 = v187;
      v451 = v203;
      (*(void (**)(char *, uint64_t))(v187 + 96))(v216, v203);
      v452 = (*(uint64_t (**)(char *, char *, uint64_t))(v682 + 32))(v681, v216, v683);
      v453 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v452);
      if (v453)
      {
        v454 = (void *)v453;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v455 = type metadata accessor for Artwork.CropStyle(0);
        v456 = sub_100048B14(v455, (uint64_t)qword_1011CDC18);
        sub_100882874(v456, v676);

      }
      else
      {
        v474 = type metadata accessor for ArtworkImage.ViewModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v474 - 8) + 56))(v676, 1, 1, v474);
      }
      v475 = v682;
      v476 = v669;
      v477 = v681;
      v478 = v683;
      (*(void (**)(char *, char *, uint64_t))(v682 + 16))(v669, v681, v683);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v317 = *(_QWORD *)(v316 - 8);
      v226 = v676;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v676, 1, v316) == 1)
      {
        ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v478, (uint64_t)&protocol witness table for RecordLabel, v763);
        v479 = *(void (**)(char *, uint64_t))(v475 + 8);
        v479(v476, v478);
        v479(v477, v478);
        (*(void (**)(char *, uint64_t))(v450 + 8))(v201, v451);
        return sub_10004FF60(v226, (uint64_t *)&unk_1011A3E10);
      }
      v480 = *(void (**)(char *, uint64_t))(v475 + 8);
      v480(v476, v478);
      v480(v477, v478);
      (*(void (**)(char *, uint64_t))(v450 + 8))(v201, v451);
      goto LABEL_78;
    }
    v458 = v187;
    v459 = v203;
    if (v217 == enum case for GenericMusicItem.socialProfile(_:))
    {
      v460 = v757;
      (*(void (**)(char *, uint64_t))(v458 + 96))(v757, v203);
      v461 = (*(uint64_t (**)(char *, char *, uint64_t))(v673 + 32))(v672, v460, v674);
      v462 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v461);
      if (v462)
      {
        v463 = (void *)v462;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v464 = type metadata accessor for Artwork.CropStyle(0);
        v465 = sub_100048B14(v464, (uint64_t)qword_1011CDC18);
        sub_100882874(v465, v671);

      }
      else
      {
        v487 = type metadata accessor for ArtworkImage.ViewModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v487 - 8) + 56))(v671, 1, 1, v487);
      }
      (*(void (**)(char *, char *, uint64_t))(v673 + 16))(v670, v672, v674);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v317 = *(_QWORD *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v671, 1, v316) == 1)
      {
        v488 = v674;
        v489 = v670;
        ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v674, (uint64_t)&protocol witness table for SocialProfile, v763);
        v490 = *(void (**)(char *, uint64_t))(v673 + 8);
        v490(v489, v488);
        v490(v672, v488);
        (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v203);
        v368 = (uint64_t *)&v702;
        return sub_10004FF60(*(v368 - 32), (uint64_t *)&unk_1011A3E10);
      }
      v491 = *(void (**)(char *, uint64_t))(v673 + 8);
      v492 = v674;
      v491(v670, v674);
      v491(v672, v492);
      (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
      v493 = (uint64_t *)&v702;
    }
    else if (v217 == enum case for GenericMusicItem.song(_:))
    {
      v468 = v757;
      (*(void (**)(char *, uint64_t))(v458 + 96))(v757, v203);
      v469 = (*(uint64_t (**)(char *, char *, uint64_t))(v667 + 32))(v666, v468, v668);
      v470 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v469);
      if (v470)
      {
        v471 = (void *)v470;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v472 = type metadata accessor for Artwork.CropStyle(0);
        v473 = sub_100048B14(v472, (uint64_t)qword_1011CDC18);
        sub_100882874(v473, v665);

      }
      else
      {
        v500 = type metadata accessor for ArtworkImage.ViewModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v500 - 8) + 56))(v665, 1, 1, v500);
      }
      (*(void (**)(char *, char *, uint64_t))(v667 + 16))(v664, v666, v668);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v317 = *(_QWORD *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v665, 1, v316) == 1)
      {
        v501 = v668;
        v502 = v664;
        ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v668, (uint64_t)&protocol witness table for Song, v763);
        v503 = *(void (**)(char *, uint64_t))(v667 + 8);
        v503(v502, v501);
        v503(v666, v501);
        (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v203);
        v368 = (uint64_t *)&v696;
        return sub_10004FF60(*(v368 - 32), (uint64_t *)&unk_1011A3E10);
      }
      v504 = *(void (**)(char *, uint64_t))(v667 + 8);
      v505 = v668;
      v504(v664, v668);
      v504(v666, v505);
      (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
      v493 = (uint64_t *)&v696;
    }
    else if (v217 == enum case for GenericMusicItem.station(_:))
    {
      v481 = v757;
      (*(void (**)(char *, uint64_t))(v458 + 96))(v757, v203);
      v482 = (*(uint64_t (**)(char *, char *, uint64_t))(v662 + 32))(v661, v481, v663);
      v483 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v482);
      if (v483)
      {
        v484 = (void *)v483;
        if (qword_10119C9A8 != -1)
          swift_once(&qword_10119C9A8, sub_1008869F0);
        v485 = type metadata accessor for Artwork.CropStyle(0);
        v486 = sub_100048B14(v485, (uint64_t)qword_1011CDC18);
        sub_100882874(v486, v660);

      }
      else
      {
        v512 = type metadata accessor for ArtworkImage.ViewModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v512 - 8) + 56))(v660, 1, 1, v512);
      }
      (*(void (**)(char *, char *, uint64_t))(v662 + 16))(v659, v661, v663);
      v316 = type metadata accessor for ArtworkImage.ViewModel(0);
      v317 = *(_QWORD *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v660, 1, v316) == 1)
      {
        v513 = v663;
        v514 = v659;
        ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v663, (uint64_t)&protocol witness table for Station, v763);
        v515 = *(void (**)(char *, uint64_t))(v662 + 8);
        v515(v514, v513);
        v515(v661, v513);
        (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v203);
        v368 = (uint64_t *)&v691;
        return sub_10004FF60(*(v368 - 32), (uint64_t *)&unk_1011A3E10);
      }
      v516 = *(void (**)(char *, uint64_t))(v662 + 8);
      v517 = v663;
      v516(v659, v663);
      v516(v661, v517);
      (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
      v493 = (uint64_t *)&v691;
    }
    else
    {
      if (v217 == enum case for GenericMusicItem.tvEpisode(_:))
      {
        v494 = v757;
        (*(void (**)(char *, uint64_t))(v458 + 96))(v757, v203);
        v495 = (*(uint64_t (**)(char *, char *, uint64_t))(v655 + 32))(v657, v494, v658);
        v496 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v495);
        if (v496)
        {
          v497 = (void *)v496;
          if (qword_10119C9A8 != -1)
            swift_once(&qword_10119C9A8, sub_1008869F0);
          v498 = type metadata accessor for Artwork.CropStyle(0);
          v499 = sub_100048B14(v498, (uint64_t)qword_1011CDC18);
          sub_100882874(v499, v654);

        }
        else
        {
          v524 = type metadata accessor for ArtworkImage.ViewModel(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v524 - 8) + 56))(v654, 1, 1, v524);
        }
        v525 = *(void (**)(char *, char *, uint64_t))(v655 + 16);
        v525(v656, v657, v658);
        v316 = type metadata accessor for ArtworkImage.ViewModel(0);
        v526 = *(_QWORD *)(v316 - 8);
        v527 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v526 + 48);
        v528 = v527(v654, 1, v316);
        if ((_DWORD)v528 == 1)
        {
          v529 = v646;
          TVEpisode.previewArtwork.getter(v528);
          v530 = v645;
          sub_10004A160(v529, v645, &qword_1011A1440);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v747 + 48))(v530, 1, v748) == 1)
          {
            v531 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v526 + 56);
            v531(v650, 1, 1, v316);
          }
          else
          {
            v540 = v747;
            v541 = v742;
            v542 = v748;
            (*(void (**)(char *, uint64_t, uint64_t))(v747 + 32))(v742, v645, v748);
            (*(void (**)(uint64_t, char *, uint64_t))(v540 + 16))(v745, v541, v542);
            if (qword_10119C9A8 != -1)
              swift_once(&qword_10119C9A8, sub_1008869F0);
            v543 = type metadata accessor for Artwork.CropStyle(0);
            v544 = sub_100048B14(v543, (uint64_t)qword_1011CDC18);
            v545 = *(_QWORD *)(v543 - 8);
            v546 = (uint64_t)v741;
            (*(void (**)(char *, uint64_t, uint64_t))(v545 + 16))(v741, v544, v543);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v545 + 56))(v546, 0, 1, v543);
            v547 = v650;
            ArtworkImage.ViewModel.init(artwork:cropStyle:)(v745, v546, v650);
            (*(void (**)(char *, uint64_t))(v747 + 8))(v742, v748);
            v531 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v526 + 56);
            v531(v547, 0, 1, v316);
          }
          sub_10004FF60(v646, &qword_1011A1440);
          v525(v648, v656, v658);
          if (v527(v650, 1, v316) == 1)
          {
            v548 = v648;
            TVEpisode.artworkViewModel.getter(v763);
            v549 = *(void (**)(char *, uint64_t))(v655 + 8);
            v550 = v548;
            v551 = v658;
            v549(v550, v658);
            v549(v656, v551);
            v549(v657, v551);
            (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
            sub_10004FF60(v650, (uint64_t *)&unk_1011A3E10);
          }
          else
          {
            v552 = *(void (**)(char *, uint64_t))(v655 + 8);
            v553 = v658;
            v552(v648, v658);
            v552(v656, v553);
            v552(v657, v553);
            (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
            v554 = v763;
            sub_100077A18(v650, (uint64_t)v763);
            v531((uint64_t)v554, 0, 1, v316);
          }
          v368 = v686;
          return sub_10004FF60(*(v368 - 32), (uint64_t *)&unk_1011A3E10);
        }
        v532 = *(void (**)(char *, uint64_t))(v655 + 8);
        v533 = v658;
        v532(v656, v658);
        v532(v657, v533);
        (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
        v371 = v763;
        sub_100077A18(v654, (uint64_t)v763);
        v205 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v526 + 56);
LABEL_94:
        v206 = v371;
        goto LABEL_80;
      }
      if (v217 == enum case for GenericMusicItem.tvSeason(_:))
      {
        v506 = v757;
        (*(void (**)(char *, uint64_t))(v458 + 96))(v757, v203);
        v507 = (*(uint64_t (**)(char *, char *, uint64_t))(v652 + 32))(v651, v506, v653);
        v508 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v507);
        if (v508)
        {
          v509 = (void *)v508;
          if (qword_10119C9A8 != -1)
            swift_once(&qword_10119C9A8, sub_1008869F0);
          v510 = type metadata accessor for Artwork.CropStyle(0);
          v511 = sub_100048B14(v510, (uint64_t)qword_1011CDC18);
          sub_100882874(v511, v649);

        }
        else
        {
          v555 = type metadata accessor for ArtworkImage.ViewModel(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v555 - 8) + 56))(v649, 1, 1, v555);
        }
        (*(void (**)(char *, char *, uint64_t))(v652 + 16))(v647, v651, v653);
        v316 = type metadata accessor for ArtworkImage.ViewModel(0);
        v317 = *(_QWORD *)(v316 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v649, 1, v316) == 1)
        {
          v556 = v653;
          v557 = v647;
          ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v653, (uint64_t)&protocol witness table for TVSeason, v763);
          v558 = *(void (**)(char *, uint64_t))(v652 + 8);
          v558(v557, v556);
          v558(v651, v556);
          (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v203);
          v368 = (uint64_t *)&v681;
          return sub_10004FF60(*(v368 - 32), (uint64_t *)&unk_1011A3E10);
        }
        v559 = *(void (**)(char *, uint64_t))(v652 + 8);
        v560 = v653;
        v559(v647, v653);
        v559(v651, v560);
        (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
        v493 = (uint64_t *)&v681;
      }
      else if (v217 == enum case for GenericMusicItem.tvShow(_:))
      {
        v518 = v757;
        (*(void (**)(char *, uint64_t))(v458 + 96))(v757, v203);
        v519 = (*(uint64_t (**)(char *, char *, uint64_t))(v642 + 32))(v643, v518, v644);
        v520 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v519);
        if (v520)
        {
          v521 = (void *)v520;
          if (qword_10119C9A8 != -1)
            swift_once(&qword_10119C9A8, sub_1008869F0);
          v522 = type metadata accessor for Artwork.CropStyle(0);
          v523 = sub_100048B14(v522, (uint64_t)qword_1011CDC18);
          sub_100882874(v523, v641);

        }
        else
        {
          v567 = type metadata accessor for ArtworkImage.ViewModel(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v567 - 8) + 56))(v641, 1, 1, v567);
        }
        sub_1002297E0();
        if (v568)
        {
          v569 = v635;
          sub_10004A160(v641, v635, (uint64_t *)&unk_1011A3E10);
          (*(void (**)(char *, char *, uint64_t))(v642 + 16))(v637, v643, v644);
          v316 = type metadata accessor for ArtworkImage.ViewModel(0);
          v353 = *(_QWORD *)(v316 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v353 + 48))(v569, 1, v316) == 1)
          {
            v570 = v626;
            TVShow.editorialArtwork.getter();
            v571 = v570;
            v572 = v625;
            sub_10004A160(v571, v625, &qword_1011A1440);
            v573 = 1;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v747 + 48))(v572, 1, v748) != 1)
            {
              v574 = v747;
              v575 = v742;
              v576 = v748;
              (*(void (**)(char *, uint64_t, uint64_t))(v747 + 32))(v742, v625, v748);
              v577 = v745;
              v578 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v574 + 16))(v745, v575, v576);
              v579 = (uint64_t)v741;
              static Artwork.CropStyle.featuredContentCrop170T100B.getter(v578);
              v580 = type metadata accessor for Artwork.CropStyle(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v580 - 8) + 56))(v579, 0, 1, v580);
              ArtworkImage.ViewModel.init(artwork:cropStyle:)(v577, v579, (uint64_t)v763);
              (*(void (**)(char *, uint64_t))(v574 + 8))(v575, v576);
              v573 = 0;
            }
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v353 + 56))(v763, v573, 1, v316);
            sub_10004FF60(v626, &qword_1011A1440);
            v581 = *(void (**)(char *, uint64_t))(v642 + 8);
            v582 = v644;
            v581(v637, v644);
            sub_10004FF60(v641, (uint64_t *)&unk_1011A3E10);
            v581(v643, v582);
            (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
            v291 = &v667;
            goto LABEL_42;
          }
          v587 = *(void (**)(char *, uint64_t))(v642 + 8);
          v588 = v644;
          v587(v637, v644);
          sub_10004FF60(v641, (uint64_t *)&unk_1011A3E10);
          v587(v643, v588);
          (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
          v370 = v635;
LABEL_93:
          v371 = v763;
          sub_100077A18(v370, (uint64_t)v763);
          v205 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v353 + 56);
          goto LABEL_94;
        }
        v583 = v628;
        sub_10004A160(v641, v628, (uint64_t *)&unk_1011A3E10);
        (*(void (**)(char *, char *, uint64_t))(v642 + 16))(v629, v643, v644);
        v316 = type metadata accessor for ArtworkImage.ViewModel(0);
        v317 = *(_QWORD *)(v316 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v583, 1, v316) == 1)
        {
          v584 = v644;
          v585 = v629;
          ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v644, (uint64_t)&protocol witness table for TVShow, v763);
          v586 = *(void (**)(char *, uint64_t))(v642 + 8);
          v586(v585, v584);
          sub_10004FF60(v641, (uint64_t *)&unk_1011A3E10);
          v586(v643, v584);
          (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v203);
          v291 = &v660;
LABEL_42:
          v292 = *(v291 - 32);
          return sub_10004FF60(v292, (uint64_t *)&unk_1011A3E10);
        }
        v595 = *(void (**)(char *, uint64_t))(v642 + 8);
        v596 = v644;
        v595(v629, v644);
        sub_10004FF60(v641, (uint64_t *)&unk_1011A3E10);
        v595(v643, v596);
        (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
        v493 = &v660;
      }
      else if (v217 == enum case for GenericMusicItem.uploadedAudio(_:))
      {
        v534 = v757;
        (*(void (**)(char *, uint64_t))(v458 + 96))(v757, v203);
        v535 = (*(uint64_t (**)(char *, char *, uint64_t))(v639 + 32))(v638, v534, v640);
        v536 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v535);
        if (v536)
        {
          v537 = (void *)v536;
          if (qword_10119C9A8 != -1)
            swift_once(&qword_10119C9A8, sub_1008869F0);
          v538 = type metadata accessor for Artwork.CropStyle(0);
          v539 = sub_100048B14(v538, (uint64_t)qword_1011CDC18);
          sub_100882874(v539, v636);

        }
        else
        {
          v589 = type metadata accessor for ArtworkImage.ViewModel(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v589 - 8) + 56))(v636, 1, 1, v589);
        }
        (*(void (**)(char *, char *, uint64_t))(v639 + 16))(v634, v638, v640);
        v316 = type metadata accessor for ArtworkImage.ViewModel(0);
        v317 = *(_QWORD *)(v316 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v636, 1, v316) == 1)
        {
          v590 = v640;
          v591 = v634;
          ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v640, (uint64_t)&protocol witness table for UploadedAudio, v763);
          v592 = *(void (**)(char *, uint64_t))(v639 + 8);
          v592(v591, v590);
          v592(v638, v590);
          (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v203);
          v368 = &v668;
          return sub_10004FF60(*(v368 - 32), (uint64_t *)&unk_1011A3E10);
        }
        v593 = *(void (**)(char *, uint64_t))(v639 + 8);
        v594 = v640;
        v593(v634, v640);
        v593(v638, v594);
        (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
        v493 = &v668;
      }
      else
      {
        if (v217 != enum case for GenericMusicItem.uploadedVideo(_:))
        {
          if (v217 != enum case for GenericMusicItem.other(_:))
          {
            v597 = Logger.musicKit.unsafeMutableAddressor();
            (*(void (**)(char *, uint64_t, uint64_t))(v623 + 16))(v622, v597, v624);
            v598 = v761;
            v599 = Logger.logObject.getter(v598);
            v601 = static os_log_type_t.fault.getter(v600);
            v762 = v599;
            if (os_log_type_enabled(v599, v601))
            {
              v602 = swift_slowAlloc(22, -1);
              v760 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc(8, -1);
              v761 = (id)swift_slowAlloc(32, -1);
              *(_QWORD *)&v764 = v761;
              *(_DWORD *)v602 = 136446466;
              ObjectType = swift_getObjectType();
              v604 = _typeName(_:qualified:)(ObjectType, 0);
              v767 = sub_100322200(v604, v605, (uint64_t *)&v764);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v767, v768);

              swift_bridgeObjectRelease();
              *(_WORD *)(v602 + 12) = 2114;
              v767 = (uint64_t)v598;
              v606 = v598;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v767, v768);
              v607 = v760;
              *(_QWORD *)v760 = v598;

              v608 = v762;
              _os_log_impl((void *)&_mh_execute_header, v762, v601, "Unhandled case for %{public}s: %{public}@", (uint8_t *)v602, 0x16u);
              v609 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
              swift_arrayDestroy(v607, 1, v609);
              swift_slowDealloc(v607, -1, -1);
              v610 = v761;
              swift_arrayDestroy(v761, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v610, -1, -1);
              swift_slowDealloc(v602, -1, -1);

            }
            else
            {

            }
            (*(void (**)(char *, uint64_t))(v623 + 8))(v622, v624);
            v617 = *(void (**)(char *, uint64_t))(v458 + 8);
            v617(v201, v459);
            v618 = type metadata accessor for ArtworkImage.ViewModel(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v618 - 8) + 56))(v763, 1, 1, v618);
            return ((uint64_t (*)(char *, uint64_t))v617)(v757, v459);
          }
          (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v203);
          (*(void (**)(char *, uint64_t))(v458 + 96))(v757, v203);
          swift_bridgeObjectRelease();
LABEL_28:
          v260 = v763;
          v204 = type metadata accessor for ArtworkImage.ViewModel(0);
          v205 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 56);
          v206 = v260;
          goto LABEL_3;
        }
        v561 = v757;
        (*(void (**)(char *, uint64_t))(v458 + 96))(v757, v203);
        v562 = (*(uint64_t (**)(char *, char *, uint64_t))(v632 + 32))(v631, v561, v633);
        v563 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v760) + 0x148))(v562);
        if (v563)
        {
          v564 = (void *)v563;
          if (qword_10119C9A8 != -1)
            swift_once(&qword_10119C9A8, sub_1008869F0);
          v565 = type metadata accessor for Artwork.CropStyle(0);
          v566 = sub_100048B14(v565, (uint64_t)qword_1011CDC18);
          sub_100882874(v566, v630);

        }
        else
        {
          v611 = type metadata accessor for ArtworkImage.ViewModel(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v611 - 8) + 56))(v630, 1, 1, v611);
        }
        (*(void (**)(char *, char *, uint64_t))(v632 + 16))(v627, v631, v633);
        v316 = type metadata accessor for ArtworkImage.ViewModel(0);
        v317 = *(_QWORD *)(v316 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v630, 1, v316) == 1)
        {
          v612 = v633;
          v613 = v627;
          ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v633, (uint64_t)&protocol witness table for UploadedVideo, v763);
          v614 = *(void (**)(char *, uint64_t))(v632 + 8);
          v614(v613, v612);
          v614(v631, v612);
          (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v203);
          v368 = &v662;
          return sub_10004FF60(*(v368 - 32), (uint64_t *)&unk_1011A3E10);
        }
        v615 = *(void (**)(char *, uint64_t))(v632 + 8);
        v616 = v633;
        v615(v627, v633);
        v615(v631, v616);
        (*(void (**)(char *, uint64_t))(v458 + 8))(v201, v459);
        v493 = &v662;
      }
    }
    v343 = *(v493 - 32);
    goto LABEL_79;
  }
  v210 = v201;
  v211 = (*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v760) + 0x160))();
  if (v211)
  {
    v212 = (void *)v211;
    v213 = v758;
    if (qword_10119C9A8 != -1)
      swift_once(&qword_10119C9A8, sub_1008869F0);
    v214 = type metadata accessor for Artwork.CropStyle(0);
    v215 = sub_100048B14(v214, (uint64_t)qword_1011CDC18);
    sub_100882874(v215, v213);

  }
  else
  {
    v237 = type metadata accessor for ArtworkImage.ViewModel(0);
    v213 = v758;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v237 - 8) + 56))(v758, 1, 1, v237);
  }
  v238 = v187;
  v239 = *(void (**)(char *, char *, uint64_t))(v187 + 16);
  v239(v196, v201, v203);
  v240 = type metadata accessor for ArtworkImage.ViewModel(0);
  v241 = *(_QWORD *)(v240 - 8);
  v761 = *(id *)(v241 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v761)(v213, 1, v240) == 1)
  {
    v239(v193, v196, v203);
    v242 = sub_100007E8C(&qword_1011CDC48);
    v243 = swift_dynamicCast(&v764, v193, v203, v242, 6);
    v620 = v203;
    if (v243)
    {
      v244 = *((_QWORD *)&v765 + 1);
      v245 = v766;
      sub_100007E68(&v764, *((uint64_t *)&v765 + 1));
      v246 = (uint64_t)v743;
      dispatch thunk of EditorialArtworkVending.gridEditorialArtwork.getter(v244, v245);
      v247 = v735;
      sub_10004A160(v246, v735, &qword_1011A1440);
      v248 = v747;
      v249 = v748;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v747 + 48))(v247, 1, v748) == 1)
      {
        v250 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v241 + 56);
        v251 = v759;
        v252 = 1;
      }
      else
      {
        v266 = v247;
        v267 = v742;
        (*(void (**)(char *, uint64_t, uint64_t))(v248 + 32))(v742, v266, v249);
        v268 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v248 + 16))(v745, v267, v249);
        v269 = v741;
        static Artwork.CropStyle.specificRectangle.getter(v268);
        v270 = type metadata accessor for Artwork.CropStyle(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v270 - 8) + 56))(v269, 0, 1, v270);
        v621 = v210;
        v271 = v759;
        v272 = (uint64_t)v269;
        v246 = (uint64_t)v743;
        ArtworkImage.ViewModel.init(artwork:cropStyle:)(v745, v272, (uint64_t)v759);
        (*(void (**)(char *, uint64_t))(v248 + 8))(v267, v249);
        v250 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v241 + 56);
        v251 = v271;
        v210 = v621;
        v252 = 0;
      }
      v760 = v250;
      ((void (*)(void (*)(char *, char *, uint64_t), uint64_t, uint64_t, uint64_t))v250)(v251, v252, 1, v240);
      v238 = v187;
      v258 = v754;
      v256 = (uint64_t)v755;
      sub_10004FF60(v246, &qword_1011A1440);
      v762 = *(NSObject **)(v187 + 8);
      ((void (*)(char *, uint64_t))v762)(v196, v620);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v764);
      v255 = v763;
      v257 = (uint64_t)v756;
      v253 = v759;
    }
    else
    {
      v766 = 0;
      v764 = 0u;
      v765 = 0u;
      v762 = *(NSObject **)(v187 + 8);
      ((void (*)(char *, uint64_t))v762)(v196, v203);
      sub_10004FF60((uint64_t)&v764, &qword_1011CDC50);
      v253 = v759;
      v760 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v241 + 56);
      ((void (*)(void (*)(char *, char *, uint64_t), uint64_t, uint64_t, uint64_t))v760)(v759, 1, 1, v240);
      v255 = v763;
      v256 = (uint64_t)v755;
      v257 = (uint64_t)v756;
      v258 = v754;
    }
    sub_10004FF60(v758, (uint64_t *)&unk_1011A3E10);
    v254 = v620;
  }
  else
  {
    v762 = *(NSObject **)(v187 + 8);
    ((void (*)(char *, uint64_t))v762)(v196, v203);
    v253 = v759;
    sub_100077A18(v213, (uint64_t)v759);
    v254 = v203;
    v760 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v241 + 56);
    ((void (*)(void (*)(char *, char *, uint64_t), _QWORD, uint64_t, uint64_t))v760)(v253, 0, 1, v240);
    v255 = v763;
    v256 = (uint64_t)v755;
    v257 = (uint64_t)v756;
    v258 = v754;
  }
  v239(v258, v210, v254);
  v273 = (*(uint64_t (**)(char *, uint64_t))(v238 + 88))(v258, v254);
  if (v273 == enum case for GenericMusicItem.curator(_:))
  {
    v621 = v210;
    (*(void (**)(char *, uint64_t))(v238 + 96))(v258, v254);
    v274 = v258;
    v276 = v751;
    v275 = v752;
    v277 = v753;
    (*(void (**)(char *, char *, uint64_t))(v752 + 32))(v751, v274, v753);
    v256 = v749;
    sub_10004A160((uint64_t)v253, v749, (uint64_t *)&unk_1011A3E10);
    v278 = v750;
    (*(void (**)(char *, char *, uint64_t))(v275 + 16))(v750, v276, v277);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v761)(v256, 1, v240) == 1)
    {
      v279 = (uint64_t)v744;
      Curator.editorialArtwork.getter();
      sub_10004A160(v279, v257, &qword_1011A1440);
      v280 = v747;
      v281 = 1;
      v282 = v748;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v747 + 48))(v257, 1, v748) != 1)
      {
        v283 = v742;
        (*(void (**)(char *, uint64_t, uint64_t))(v280 + 32))(v742, v257, v282);
        v284 = v745;
        v285 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v280 + 16))(v745, v283, v282);
        v286 = (uint64_t)v741;
        static Artwork.CropStyle.featuredContentCrop170T100B.getter(v285);
        v287 = type metadata accessor for Artwork.CropStyle(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v287 - 8) + 56))(v286, 0, 1, v287);
        v288 = v284;
        v279 = (uint64_t)v744;
        ArtworkImage.ViewModel.init(artwork:cropStyle:)(v288, v286, (uint64_t)v255);
        (*(void (**)(char *, uint64_t))(v280 + 8))(v283, v282);
        v281 = 0;
      }
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v760)(v255, v281, 1, v240);
      sub_10004FF60(v279, &qword_1011A1440);
      v289 = v753;
      v290 = *(void (**)(char *, uint64_t))(v752 + 8);
      v290(v750, v753);
      v290(v751, v289);
      sub_10004FF60((uint64_t)v759, (uint64_t *)&unk_1011A3E10);
      ((void (*)(char *, uint64_t))v762)(v621, v254);
      v291 = &v769;
      goto LABEL_42;
    }
    v300 = *(void (**)(char *, uint64_t))(v275 + 8);
    v300(v278, v277);
    v300(v276, v277);
    sub_10004FF60((uint64_t)v253, (uint64_t *)&unk_1011A3E10);
    v301 = v621;
    v302 = v254;
    goto LABEL_56;
  }
  if (v273 == enum case for GenericMusicItem.playlist(_:))
  {
    v621 = v210;
    v293 = v254;
    (*(void (**)(char *, uint64_t))(v238 + 96))(v258, v254);
    v294 = (uint64_t)v253;
    v295 = v739;
    v296 = v738;
    v297 = v740;
    (*(void (**)(char *, char *, uint64_t))(v739 + 32))(v738, v258, v740);
    sub_10004A160(v294, v256, (uint64_t *)&unk_1011A3E10);
    v298 = v737;
    (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v737, v296, v297);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v761)(v256, 1, v240) == 1)
    {
      Playlist.artworkViewModel.getter((uint64_t)v255);
      v299 = *(void (**)(char *, uint64_t))(v295 + 8);
      v299(v298, v297);
      v299(v296, v297);
      sub_10004FF60(v294, (uint64_t *)&unk_1011A3E10);
      ((void (*)(char *, uint64_t))v762)(v621, v293);
      v292 = v256;
      return sub_10004FF60(v292, (uint64_t *)&unk_1011A3E10);
    }
    v312 = v298;
    v313 = *(void (**)(char *, uint64_t))(v295 + 8);
    v313(v312, v297);
    v313(v296, v297);
    sub_10004FF60(v294, (uint64_t *)&unk_1011A3E10);
    v301 = v621;
    v302 = v293;
LABEL_56:
    ((void (*)(char *, uint64_t))v762)(v301, v302);
    sub_100077A18(v256, (uint64_t)v255);
    return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v760)(v255, 0, 1, v240);
  }
  v303 = v736;
  sub_10004A160((uint64_t)v253, v736, (uint64_t *)&unk_1011A3E10);
  v304 = v730;
  v239(v730, v210, v254);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v761)(v303, 1, v240) == 1)
  {
    GenericMusicItem.artworkViewModel.getter(v255);
    v305 = v304;
    v306 = v762;
    ((void (*)(char *, uint64_t))v762)(v305, v254);
    sub_10004FF60((uint64_t)v253, (uint64_t *)&unk_1011A3E10);
    ((void (*)(char *, uint64_t))v306)(v210, v254);
    sub_10004FF60(v303, (uint64_t *)&unk_1011A3E10);
  }
  else
  {
    v314 = v304;
    v306 = v762;
    ((void (*)(char *, uint64_t))v762)(v314, v254);
    sub_10004FF60((uint64_t)v253, (uint64_t *)&unk_1011A3E10);
    ((void (*)(char *, uint64_t))v306)(v210, v254);
    sub_100077A18(v303, (uint64_t)v255);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v760)(v255, 0, 1, v240);
  }
  return ((uint64_t (*)(char *, uint64_t))v306)(v258, v254);
}

uint64_t sub_100882874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void **v24;
  void *v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33[24];

  v30 = a1;
  v32 = a2;
  v3 = type metadata accessor for Artwork.CropStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v30 - v10;
  v12 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v30 - v20;
  JSArtwork.artwork.getter(v14);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10004FF60((uint64_t)v14, &qword_1011A1440);
    v22 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v32, 1, 1, v22);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v16 + 32))(v21, v14, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
    v24 = (void **)(v2 + OBJC_IVAR____TtC11MusicJSCore9JSArtwork_cropStyle);
    swift_beginAccess(v24, v33, 0, 0);
    v25 = *v24;
    v26 = v25;
    Artwork.CropStyle.init(_:)(v25, (uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    v27 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v31, v30, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v27, v3);
      sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A14A0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v27, v3);
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v9, v3);
    }
    v28 = v32;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v11, 0, 1, v3);
    ArtworkImage.ViewModel.init(artwork:cropStyle:)((uint64_t)v19, (uint64_t)v11, v28);
    v29 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
  }
}

uint64_t sub_100882B68@<X0>(_QWORD *a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t (*v143)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  char *v146;
  void (*v147)(char *, char *, uint64_t);
  int v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  void (*v171)(char *, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(char *, uint64_t);
  void (*v176)(char *, uint64_t);
  char *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void (*v191)(char *, uint64_t);
  void (*v193)(char *, uint64_t);
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void (*v219)(char *, uint64_t);
  void (*v220)(char *, uint64_t);
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  int v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  void (*v246)(char *, uint64_t);
  char *v247;
  void (*v248)(char *, uint64_t);
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  void (*v264)(char *, uint64_t);
  void (*v265)(char *, uint64_t);
  uint64_t v266;
  uint64_t v267;
  void *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  _UNKNOWN **v273;
  void (*v274)(char *, uint64_t);
  char v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  char *v279;
  void (*v280)(char *, uint64_t);
  uint64_t v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  void (*v298)(char *, uint64_t);
  uint64_t v299;
  uint64_t v300;
  void *v301;
  uint64_t v302;
  uint64_t v303;
  void (*v304)(char *, uint64_t);
  uint64_t v305;
  void (*v306)(char *, uint64_t);
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  void *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  void *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  void *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  void *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  void (*v332)(char *, uint64_t);
  uint64_t v333;
  uint64_t v334;
  void *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  void (*v341)(char *, uint64_t);
  uint64_t *v342;
  void (*v343)(char *, uint64_t);
  uint64_t v344;
  uint64_t *v345;
  uint64_t v346;
  uint64_t v347;
  void *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  void (*v354)(char *, uint64_t);
  void (*v355)(char *, uint64_t);
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  void *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  char *v364;
  void (*v365)(char *, uint64_t);
  void (*v366)(char *, uint64_t);
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  void *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  void (*v374)(char *, char *, uint64_t);
  uint64_t v375;
  uint64_t (*v376)(uint64_t, uint64_t, uint64_t);
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  void (*v380)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v381)(char *, uint64_t);
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  void *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  void (*v397)(char *, uint64_t);
  char *v398;
  uint64_t v399;
  void (*v400)(char *, uint64_t);
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  char *v404;
  void (*v405)(char *, uint64_t);
  void (*v406)(char *, uint64_t);
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  void *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  char *v415;
  void (*v416)(char *, uint64_t);
  void (*v417)(char *, uint64_t);
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  char *v421;
  void (*v422)(char *, uint64_t);
  void (*v423)(char *, uint64_t);
  uint64_t v424;
  uint64_t v425;
  id v426;
  NSObject *v427;
  __n128 v428;
  os_log_type_t v429;
  uint64_t v430;
  uint64_t ObjectType;
  uint64_t v432;
  unint64_t v433;
  id v434;
  _QWORD *v435;
  NSObject *v436;
  uint64_t v437;
  char *v438;
  uint64_t v439;
  uint64_t v440;
  char *v441;
  void (*v442)(char *, uint64_t);
  void (*v443)(char *, uint64_t);
  uint64_t v444;
  void (*v445)(char *, uint64_t);
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  char *v449;
  char *v450;
  uint64_t v451;
  uint64_t v452;
  char *v453;
  uint64_t v454;
  char *v455;
  uint64_t v456;
  uint64_t v457;
  char *v458;
  uint64_t v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  char *v463;
  uint64_t v464;
  uint64_t v465;
  char *v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  char *v470;
  char *v471;
  uint64_t v472;
  uint64_t v473;
  char *v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  char *v479;
  char *v480;
  uint64_t v481;
  char *v482;
  uint64_t v483;
  char *v484;
  uint64_t v485;
  uint64_t v486;
  char *v487;
  uint64_t v488;
  char *v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  char *v493;
  char *v494;
  uint64_t v495;
  uint64_t v496;
  char *v497;
  uint64_t v498;
  char *v499;
  uint64_t v500;
  char *v501;
  uint64_t v502;
  uint64_t v503;
  char *v504;
  char *v505;
  char *v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  char *v511;
  uint64_t v512;
  char *v513;
  uint64_t v514;
  char *v515;
  char *v516;
  uint64_t v517;
  uint64_t v518;
  char *v519;
  char *v520;
  char *v521;
  char *v522;
  uint64_t v523;
  char *v524;
  uint64_t v525;
  uint64_t v526;
  id v527;
  char *v528;
  char *v529;
  char *v530;
  uint64_t v531;
  uint64_t v532;
  char *v533;
  uint64_t v534;
  char *v535;
  char *v536;
  uint64_t v537;
  char *v538;
  char *v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  char *v547;
  char *v548;
  uint64_t v549;
  char *v550;
  char *v551;
  char *v552;
  uint64_t v553;
  uint64_t v554;
  char *v555;
  char *v556;
  char *v557;
  uint64_t v558;
  _QWORD *v559;
  char *v560;
  _QWORD *v561;
  NSObject *v562;
  char *v563;
  uint64_t v564;
  char *v565;

  v561 = a1;
  v562 = a2;
  v563 = (char *)a3;
  v452 = type metadata accessor for Logger(0);
  v451 = *(_QWORD *)(v452 - 8);
  __chkstk_darwin(v452);
  v450 = (char *)&v447 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v503 = type metadata accessor for SocialProfile(0);
  v502 = *(_QWORD *)(v503 - 8);
  __chkstk_darwin(v503);
  v497 = (char *)&v447 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v501 = (char *)&v447 - v6;
  v457 = type metadata accessor for UploadedVideo(0);
  v456 = *(_QWORD *)(v457 - 8);
  __chkstk_darwin(v457);
  v453 = (char *)&v447 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v455 = (char *)&v447 - v9;
  v462 = type metadata accessor for UploadedAudio(0);
  v461 = *(_QWORD *)(v462 - 8);
  __chkstk_darwin(v462);
  v458 = (char *)&v447 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v460 = (char *)&v447 - v12;
  v476 = type metadata accessor for TVSeason(0);
  v475 = *(_QWORD *)(v476 - 8);
  __chkstk_darwin(v476);
  v470 = (char *)&v447 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v474 = (char *)&v447 - v15;
  v468 = type metadata accessor for TVShow(0);
  v467 = *(_QWORD *)(v468 - 8);
  __chkstk_darwin(v468);
  v463 = (char *)&v447 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v466 = (char *)&v447 - v18;
  v481 = type metadata accessor for TVEpisode(0);
  v478 = *(_QWORD *)(v481 - 8);
  __chkstk_darwin(v481);
  v471 = (char *)&v447 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v479 = (char *)&v447 - v21;
  __chkstk_darwin(v22);
  v480 = (char *)&v447 - v23;
  v496 = type metadata accessor for RecordLabel(0);
  v495 = *(_QWORD *)(v496 - 8);
  __chkstk_darwin(v496);
  v493 = (char *)&v447 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v494 = (char *)&v447 - v26;
  v508 = type metadata accessor for RadioShow(0);
  v507 = *(_QWORD *)(v508 - 8);
  __chkstk_darwin(v508);
  v505 = (char *)&v447 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v506 = (char *)&v447 - v29;
  v523 = type metadata accessor for MusicMovie(0);
  v526 = *(_QWORD *)(v523 - 8);
  __chkstk_darwin(v523);
  v520 = (char *)&v447 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v519 = (char *)&v447 - v32;
  __chkstk_darwin(v33);
  v522 = (char *)&v447 - v34;
  v486 = type metadata accessor for Station(0);
  v485 = *(_QWORD *)(v486 - 8);
  __chkstk_darwin(v486);
  v482 = (char *)&v447 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v484 = (char *)&v447 - v37;
  v491 = type metadata accessor for Song(0);
  v490 = *(_QWORD *)(v491 - 8);
  __chkstk_darwin(v491);
  v487 = (char *)&v447 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v489 = (char *)&v447 - v40;
  v512 = type metadata accessor for Playlist(0);
  v510 = *(_QWORD *)(v512 - 8);
  __chkstk_darwin(v512);
  v499 = (char *)&v447 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v511 = (char *)&v447 - v43;
  v518 = type metadata accessor for MusicVideo(0);
  v517 = *(_QWORD *)(v518 - 8);
  __chkstk_darwin(v518);
  v515 = (char *)&v447 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v516 = (char *)&v447 - v46;
  v532 = type metadata accessor for Genre(0);
  v531 = *(_QWORD *)(v532 - 8);
  __chkstk_darwin(v532);
  v529 = (char *)&v447 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v530 = (char *)&v447 - v49;
  v541 = type metadata accessor for EditorialItem(0);
  v540 = *(_QWORD *)(v541 - 8);
  __chkstk_darwin(v541);
  v538 = (char *)&v447 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v539 = (char *)&v447 - v52;
  v53 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v53);
  v533 = (char *)&v447 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v544 = type metadata accessor for Artwork(0);
  v543 = *(_QWORD *)(v544 - 8);
  __chkstk_darwin(v544);
  v534 = (uint64_t)&v447 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  v535 = (char *)&v447 - v57;
  v58 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v58);
  v465 = (uint64_t)&v447 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v469 = (uint64_t)&v447 - v61;
  __chkstk_darwin(v62);
  v509 = (uint64_t)&v447 - v63;
  __chkstk_darwin(v64);
  v514 = (uint64_t)&v447 - v65;
  __chkstk_darwin(v66);
  v537 = (uint64_t)&v447 - v67;
  __chkstk_darwin(v68);
  v542 = (uint64_t)&v447 - v69;
  v545 = type metadata accessor for Curator(0);
  v549 = *(_QWORD *)(v545 - 8);
  __chkstk_darwin(v545);
  v547 = (char *)&v447 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v71);
  v548 = (char *)&v447 - v72;
  v73 = type metadata accessor for CreditArtist(0);
  v553 = *(_QWORD *)(v73 - 8);
  v554 = v73;
  __chkstk_darwin(v73);
  v551 = (char *)&v447 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v75);
  v552 = (char *)&v447 - v76;
  v77 = type metadata accessor for Artist(0);
  v558 = *(_QWORD *)(v77 - 8);
  v559 = (_QWORD *)v77;
  __chkstk_darwin(v77);
  v556 = (char *)&v447 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v79);
  v557 = (char *)&v447 - v80;
  v81 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v81);
  v500 = (uint64_t)&v447 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v83);
  v454 = (uint64_t)&v447 - v84;
  __chkstk_darwin(v85);
  v459 = (uint64_t)&v447 - v86;
  __chkstk_darwin(v87);
  v472 = (uint64_t)&v447 - v88;
  __chkstk_darwin(v89);
  v464 = (uint64_t)&v447 - v90;
  __chkstk_darwin(v91);
  v473 = (uint64_t)&v447 - v92;
  __chkstk_darwin(v93);
  v477 = (uint64_t)&v447 - v94;
  __chkstk_darwin(v95);
  v492 = (uint64_t)&v447 - v96;
  __chkstk_darwin(v97);
  v504 = (char *)&v447 - v98;
  __chkstk_darwin(v99);
  v524 = (char *)&v447 - v100;
  __chkstk_darwin(v101);
  v521 = (char *)&v447 - v102;
  __chkstk_darwin(v103);
  v525 = (uint64_t)&v447 - v104;
  __chkstk_darwin(v105);
  v483 = (uint64_t)&v447 - v106;
  __chkstk_darwin(v107);
  v488 = (uint64_t)&v447 - v108;
  __chkstk_darwin(v109);
  v498 = (uint64_t)&v447 - v110;
  __chkstk_darwin(v111);
  v513 = (char *)&v447 - v112;
  __chkstk_darwin(v113);
  v528 = (char *)&v447 - v114;
  __chkstk_darwin(v115);
  v536 = (char *)&v447 - v116;
  __chkstk_darwin(v117);
  v546 = (uint64_t)&v447 - v118;
  __chkstk_darwin(v119);
  v550 = (char *)&v447 - v120;
  __chkstk_darwin(v121);
  v555 = (char *)&v447 - v122;
  __chkstk_darwin(v123);
  v560 = (char *)&v447 - v124;
  v125 = type metadata accessor for Album(0);
  v126 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v128 = (char *)&v447 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v129);
  v131 = (char *)&v447 - v130;
  v132 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v132);
  v134 = (char *)&v447 - ((v133 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for GenericMusicItem(0);
  v136 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v138 = (char *)&v447 - ((v137 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v139);
  v141 = (char *)&v447 - v140;
  sub_10004A160((uint64_t)v562, (uint64_t)v134, (uint64_t *)&unk_1011A20D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v134, 1, v135) == 1)
  {
    sub_10004FF60((uint64_t)v134, (uint64_t *)&unk_1011A20D0);
    v142 = type metadata accessor for ArtworkImage.ViewModel(0);
    v143 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 56);
    v144 = (uint64_t)v563;
LABEL_3:
    v145 = 1;
    return v143(v144, v145, 1, v142);
  }
  v146 = v563;
  (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v141, v134, v135);
  v147 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
  v449 = v141;
  v147(v138, v141, v135);
  v148 = (*(uint64_t (**)(char *, uint64_t))(v136 + 88))(v138, v135);
  v149 = v135;
  v150 = v136;
  if (v148 == enum case for GenericMusicItem.album(_:))
  {
    v151 = *(void (**)(char *, uint64_t))(v136 + 96);
    v152 = v135;
    v151(v138, v135);
    v153 = (*(uint64_t (**)(char *, char *, uint64_t))(v126 + 32))(v131, v138, v125);
    v154 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v153);
    if (v154)
    {
      v155 = (void *)v154;
      v156 = (uint64_t)v560;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v157 = type metadata accessor for Artwork.CropStyle(0);
      v158 = sub_100048B14(v157, (uint64_t)qword_1011CDC18);
      sub_100882874(v158, v156);

    }
    else
    {
      v172 = type metadata accessor for ArtworkImage.ViewModel(0);
      v156 = (uint64_t)v560;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 56))(v560, 1, 1, v172);
    }
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v128, v131, v125);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v174 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v156, 1, v173) == 1)
    {
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v125, (uint64_t)&protocol witness table for Album, v146);
      v175 = *(void (**)(char *, uint64_t))(v126 + 8);
      v175(v128, v125);
      v175(v131, v125);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v152);
      return sub_10004FF60(v156, (uint64_t *)&unk_1011A3E10);
    }
    v176 = *(void (**)(char *, uint64_t))(v126 + 8);
    v176(v128, v125);
    v176(v131, v125);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v152);
LABEL_31:
    v194 = v156;
LABEL_32:
    sub_100077A18(v194, (uint64_t)v146);
    v143 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v174 + 56);
LABEL_33:
    v144 = (uint64_t)v146;
LABEL_34:
    v145 = 0;
    v142 = v173;
    return v143(v144, v145, 1, v142);
  }
  v159 = v138;
  if (v148 == enum case for GenericMusicItem.artist(_:))
  {
    v160 = v135;
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v135);
    v162 = v557;
    v161 = v558;
    v163 = (uint64_t)v559;
    v164 = (*(uint64_t (**)(char *, char *, _QWORD *))(v558 + 32))(v557, v138, v559);
    v165 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v164);
    if (v165)
    {
      v166 = (void *)v165;
      v156 = (uint64_t)v555;
      v167 = v556;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v168 = type metadata accessor for Artwork.CropStyle(0);
      v169 = sub_100048B14(v168, (uint64_t)qword_1011CDC18);
      sub_100882874(v169, v156);

    }
    else
    {
      v190 = type metadata accessor for ArtworkImage.ViewModel(0);
      v156 = (uint64_t)v555;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 56))(v555, 1, 1, v190);
      v167 = v556;
    }
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v167, v162, v163);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v174 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v156, 1, v173) == 1)
    {
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v163, (uint64_t)&protocol witness table for Artist, v146);
      v191 = *(void (**)(char *, uint64_t))(v161 + 8);
      v191(v167, v163);
      v191(v162, v163);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v160);
      return sub_10004FF60(v156, (uint64_t *)&unk_1011A3E10);
    }
    v193 = *(void (**)(char *, uint64_t))(v161 + 8);
    v193(v167, v163);
    v193(v162, v163);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v160);
    goto LABEL_31;
  }
  v170 = v146;
  if (v148 == enum case for GenericMusicItem.composer(_:))
  {
    v171 = *(void (**)(char *, uint64_t))(v150 + 8);
    v171(v449, v149);
    v171(v138, v149);
LABEL_16:
    v142 = type metadata accessor for ArtworkImage.ViewModel(0);
    v143 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 56);
    v144 = (uint64_t)v170;
    goto LABEL_3;
  }
  v177 = v138;
  v448 = v149;
  if (v148 == enum case for GenericMusicItem.creditArtist(_:))
  {
    v178 = v146;
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v180 = v552;
    v179 = v553;
    v181 = v554;
    v182 = (*(uint64_t (**)(char *, char *, uint64_t))(v553 + 32))(v552, v177, v554);
    v183 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v182);
    if (v183)
    {
      v184 = (void *)v183;
      v185 = v449;
      v186 = (uint64_t)v550;
      v187 = v551;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v188 = type metadata accessor for Artwork.CropStyle(0);
      v189 = sub_100048B14(v188, (uint64_t)qword_1011CDC18);
      sub_100882874(v189, v186);

    }
    else
    {
      v217 = type metadata accessor for ArtworkImage.ViewModel(0);
      v186 = (uint64_t)v550;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v217 - 8) + 56))(v550, 1, 1, v217);
      v185 = v449;
      v187 = v551;
    }
    (*(void (**)(char *, char *, uint64_t))(v179 + 16))(v187, v180, v181);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v218 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v218 + 48))(v186, 1, v173) != 1)
    {
      v220 = *(void (**)(char *, uint64_t))(v179 + 8);
      v220(v187, v181);
      v220(v180, v181);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v185, v448);
      sub_100077A18(v186, (uint64_t)v178);
      v143 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v218 + 56);
      v144 = (uint64_t)v178;
      goto LABEL_34;
    }
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v181, (uint64_t)&protocol witness table for CreditArtist, v178);
    v219 = *(void (**)(char *, uint64_t))(v179 + 8);
    v219(v187, v181);
    v219(v180, v181);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v185, v448);
    return sub_10004FF60(v186, (uint64_t *)&unk_1011A3E10);
  }
  if (v148 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v195 = v548;
    v196 = v549;
    v197 = v545;
    v198 = (*(uint64_t (**)(char *, char *, uint64_t))(v549 + 32))(v548, v138, v545);
    v199 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v198);
    if (v199)
    {
      v200 = (void *)v199;
      v201 = v544;
      v202 = v543;
      v203 = v546;
      if (qword_10119C9B0 != -1)
        swift_once(&qword_10119C9B0, sub_100886A04);
      v204 = type metadata accessor for Artwork.CropStyle(0);
      v205 = sub_100048B14(v204, (uint64_t)qword_1011CDC30);
      sub_100882874(v205, v203);

    }
    else
    {
      v232 = type metadata accessor for ArtworkImage.ViewModel(0);
      v203 = v546;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v232 - 8) + 56))(v546, 1, 1, v232);
      v201 = v544;
      v202 = v543;
    }
    v233 = v547;
    (*(void (**)(char *, char *, uint64_t))(v196 + 16))(v547, v195, v197);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v234 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 48))(v203, 1, v173) != 1)
    {
      v247 = v233;
      v248 = *(void (**)(char *, uint64_t))(v196 + 8);
      v248(v247, v197);
      v248(v195, v197);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v448);
      v249 = (uint64_t)v563;
      sub_100077A18(v203, (uint64_t)v563);
      v143 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v234 + 56);
      v144 = v249;
      goto LABEL_34;
    }
    v235 = v542;
    Curator.editorialArtwork.getter();
    v236 = v537;
    sub_10004A160(v235, v537, &qword_1011A1440);
    v237 = 1;
    v238 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v202 + 48))(v236, 1, v201);
    v239 = (uint64_t)v563;
    if (v238 != 1)
    {
      v240 = v535;
      (*(void (**)(char *, uint64_t, uint64_t))(v202 + 32))(v535, v236, v201);
      v241 = v534;
      v242 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v202 + 16))(v534, v240, v201);
      v243 = (uint64_t)v533;
      static Artwork.CropStyle.featuredContentCrop170T100B.getter(v242);
      v244 = type metadata accessor for Artwork.CropStyle(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v244 - 8) + 56))(v243, 0, 1, v244);
      v245 = v241;
      v197 = v545;
      ArtworkImage.ViewModel.init(artwork:cropStyle:)(v245, v243, v239);
      (*(void (**)(char *, uint64_t))(v202 + 8))(v240, v201);
      v237 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v234 + 56))(v239, v237, 1, v173);
    sub_10004FF60(v542, &qword_1011A1440);
    v246 = *(void (**)(char *, uint64_t))(v549 + 8);
    v246(v547, v197);
    v246(v548, v197);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v448);
    return sub_10004FF60(v546, (uint64_t *)&unk_1011A3E10);
  }
  if (v148 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v206 = v540;
    v207 = v539;
    v208 = v541;
    v209 = (*(uint64_t (**)(char *, char *, uint64_t))(v540 + 32))(v539, v177, v541);
    v210 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v209);
    if (v210)
    {
      v211 = (void *)v210;
      v212 = v449;
      v213 = v538;
      v214 = (uint64_t)v536;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v215 = type metadata accessor for Artwork.CropStyle(0);
      v216 = sub_100048B14(v215, (uint64_t)qword_1011CDC18);
      sub_100882874(v216, v214);

    }
    else
    {
      v261 = type metadata accessor for ArtworkImage.ViewModel(0);
      v214 = (uint64_t)v536;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v261 - 8) + 56))(v536, 1, 1, v261);
      v212 = v449;
      v213 = v538;
    }
    (*(void (**)(char *, char *, uint64_t))(v206 + 16))(v213, v207, v208);
    v262 = type metadata accessor for ArtworkImage.ViewModel(0);
    v263 = *(_QWORD *)(v262 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v263 + 48))(v214, 1, v262) == 1)
    {
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v208, (uint64_t)&protocol witness table for EditorialItem, v170);
      v264 = *(void (**)(char *, uint64_t))(v206 + 8);
      v264(v213, v208);
      v264(v207, v208);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v212, v448);
      return sub_10004FF60(v214, (uint64_t *)&unk_1011A3E10);
    }
    else
    {
      v265 = *(void (**)(char *, uint64_t))(v206 + 8);
      v265(v213, v208);
      v265(v207, v208);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v212, v448);
      sub_100077A18(v214, (uint64_t)v170);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v263 + 56))(v170, 0, 1, v262);
    }
  }
  if (v148 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v221 = v531;
    v222 = v530;
    v223 = v532;
    v224 = (*(uint64_t (**)(char *, char *, uint64_t))(v531 + 32))(v530, v159, v532);
    v225 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v224);
    if (v225)
    {
      v226 = (void *)v225;
      v227 = v449;
      v228 = v529;
      v229 = (uint64_t)v528;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v230 = type metadata accessor for Artwork.CropStyle(0);
      v231 = sub_100048B14(v230, (uint64_t)qword_1011CDC18);
      sub_100882874(v231, v229);

    }
    else
    {
      v271 = type metadata accessor for ArtworkImage.ViewModel(0);
      v229 = (uint64_t)v528;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v271 - 8) + 56))(v528, 1, 1, v271);
      v227 = v449;
      v228 = v529;
    }
    (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v228, v222, v223);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v272 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v229, 1, v173) == 1)
    {
      v273 = &protocol witness table for Genre;
LABEL_78:
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v223, (uint64_t)v273, v170);
LABEL_79:
      v274 = *(void (**)(char *, uint64_t))(v221 + 8);
      v274(v228, v223);
      v274(v222, v223);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v227, v448);
      return sub_10004FF60(v229, (uint64_t *)&unk_1011A3E10);
    }
    goto LABEL_132;
  }
  if (v148 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v250 = v526;
    v251 = v522;
    v252 = v523;
    v253 = (*(uint64_t (**)(char *, char *, uint64_t))(v526 + 32))(v522, v138, v523);
    v254 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v253);
    if (v254)
    {
      v255 = (void *)v254;
      v256 = v525;
      v257 = (uint64_t)v524;
      v258 = (uint64_t)v521;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v259 = type metadata accessor for Artwork.CropStyle(0);
      v260 = sub_100048B14(v259, (uint64_t)qword_1011CDC18);
      sub_100882874(v260, v256);

    }
    else
    {
      v276 = type metadata accessor for ArtworkImage.ViewModel(0);
      v256 = v525;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v276 - 8) + 56))(v525, 1, 1, v276);
      v257 = (uint64_t)v524;
      v258 = (uint64_t)v521;
    }
    sub_10022A288();
    if (v277 == 5)
    {
      sub_10004A160(v256, v258, (uint64_t *)&unk_1011A3E10);
      v278 = v256;
      v279 = v519;
      (*(void (**)(char *, char *, uint64_t))(v250 + 16))(v519, v251, v252);
      v173 = type metadata accessor for ArtworkImage.ViewModel(0);
      v272 = *(_QWORD *)(v173 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v258, 1, v173) != 1)
      {
        v304 = *(void (**)(char *, uint64_t))(v250 + 8);
        v304(v279, v252);
        sub_10004FF60(v278, (uint64_t *)&unk_1011A3E10);
        v304(v251, v252);
        (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v448);
        v305 = v258;
LABEL_133:
        sub_100077A18(v305, (uint64_t)v170);
        v143 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v272 + 56);
        goto LABEL_134;
      }
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v252, (uint64_t)&protocol witness table for MusicMovie, v170);
      v280 = *(void (**)(char *, uint64_t))(v250 + 8);
      v280(v279, v252);
      sub_10004FF60(v278, (uint64_t *)&unk_1011A3E10);
      v280(v251, v252);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v448);
      v281 = v258;
    }
    else
    {
      sub_10004A160(v256, v257, (uint64_t *)&unk_1011A3E10);
      v282 = v520;
      (*(void (**)(char *, char *, uint64_t))(v250 + 16))(v520, v251, v252);
      v173 = type metadata accessor for ArtworkImage.ViewModel(0);
      v283 = *(_QWORD *)(v173 - 8);
      v284 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v283 + 48))(v257, 1, v173);
      if ((_DWORD)v284 != 1)
      {
        v306 = *(void (**)(char *, uint64_t))(v250 + 8);
        v306(v282, v252);
        sub_10004FF60(v256, (uint64_t *)&unk_1011A3E10);
        v306(v251, v252);
        (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v448);
        sub_100077A18(v257, (uint64_t)v170);
        v143 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v283 + 56);
LABEL_134:
        v144 = (uint64_t)v170;
        goto LABEL_34;
      }
      v285 = v514;
      MusicMovie.editorialArtwork.getter(v284);
      v286 = v285;
      v287 = v509;
      sub_10004A160(v286, v509, &qword_1011A1440);
      v288 = v543;
      v289 = 1;
      v290 = v544;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v543 + 48))(v287, 1, v544) != 1)
      {
        v291 = v535;
        (*(void (**)(char *, uint64_t, uint64_t))(v288 + 32))(v535, v287, v290);
        v292 = v534;
        v293 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v288 + 16))(v534, v291, v290);
        v294 = (uint64_t)v533;
        static Artwork.CropStyle.specificRectangle.getter(v293);
        v295 = type metadata accessor for Artwork.CropStyle(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v295 - 8) + 56))(v294, 0, 1, v295);
        v296 = v292;
        v252 = v523;
        ArtworkImage.ViewModel.init(artwork:cropStyle:)(v296, v294, (uint64_t)v170);
        v297 = v291;
        v251 = v522;
        (*(void (**)(char *, uint64_t))(v288 + 8))(v297, v290);
        v289 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v283 + 56))(v170, v289, 1, v173);
      sub_10004FF60(v514, &qword_1011A1440);
      v298 = *(void (**)(char *, uint64_t))(v526 + 8);
      v298(v520, v252);
      sub_10004FF60(v525, (uint64_t *)&unk_1011A3E10);
      v298(v251, v252);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v448);
      v281 = (uint64_t)v524;
    }
    return sub_10004FF60(v281, (uint64_t *)&unk_1011A3E10);
  }
  if (v148 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v221 = v517;
    v222 = v516;
    v223 = v518;
    v266 = (*(uint64_t (**)(char *, char *, uint64_t))(v517 + 32))(v516, v159, v518);
    v267 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v266);
    v227 = v449;
    if (v267)
    {
      v268 = (void *)v267;
      v228 = v515;
      v229 = (uint64_t)v513;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v269 = type metadata accessor for Artwork.CropStyle(0);
      v270 = sub_100048B14(v269, (uint64_t)qword_1011CDC18);
      sub_100882874(v270, v229);

    }
    else
    {
      v307 = type metadata accessor for ArtworkImage.ViewModel(0);
      v229 = (uint64_t)v513;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v307 - 8) + 56))(v513, 1, 1, v307);
      v228 = v515;
    }
    (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v228, v222, v223);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v272 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v229, 1, v173) == 1)
    {
      v273 = &protocol witness table for MusicVideo;
      goto LABEL_78;
    }
    goto LABEL_132;
  }
  if (v148 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v221 = v510;
    v222 = v511;
    v223 = v512;
    (*(void (**)(char *, char *, uint64_t))(v510 + 32))(v511, v159, v512);
    sub_10022A288();
    v227 = v449;
    if (((1 << v275) & 0x1DA) != 0)
    {
      Playlist.artworkViewModel.getter((uint64_t)v146);
      (*(void (**)(char *, uint64_t))(v221 + 8))(v222, v223);
      return (*(uint64_t (**)(char *, uint64_t))(v150 + 8))(v227, v448);
    }
    if (((1 << v275) & 0x25) == 0)
    {
      (*(void (**)(char *, uint64_t))(v221 + 8))(v222, v223);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v227, v448);
      goto LABEL_16;
    }
    v313 = (*(uint64_t (**)(void))((swift_isaMask & *v561) + 0x148))();
    if (v313)
    {
      v314 = (void *)v313;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v315 = type metadata accessor for Artwork.CropStyle(0);
      v316 = sub_100048B14(v315, (uint64_t)qword_1011CDC18);
      v229 = v498;
      sub_100882874(v316, v498);

    }
    else
    {
      v330 = type metadata accessor for ArtworkImage.ViewModel(0);
      v229 = v498;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v330 - 8) + 56))(v498, 1, 1, v330);
    }
    v228 = v499;
    (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v499, v222, v223);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v272 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v229, 1, v173) == 1)
    {
      Playlist.artworkViewModel.getter((uint64_t)v170);
      goto LABEL_79;
    }
LABEL_132:
    v332 = *(void (**)(char *, uint64_t))(v221 + 8);
    v332(v228, v223);
    v332(v222, v223);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v227, v448);
    v305 = v229;
    goto LABEL_133;
  }
  if (v148 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v221 = v507;
    v222 = v506;
    v223 = v508;
    v299 = (*(uint64_t (**)(char *, char *, uint64_t))(v507 + 32))(v506, v159, v508);
    v300 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v299);
    if (v300)
    {
      v301 = (void *)v300;
      v227 = v449;
      v228 = v505;
      v229 = (uint64_t)v504;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v302 = type metadata accessor for Artwork.CropStyle(0);
      v303 = sub_100048B14(v302, (uint64_t)qword_1011CDC18);
      sub_100882874(v303, v229);

    }
    else
    {
      v323 = type metadata accessor for ArtworkImage.ViewModel(0);
      v229 = (uint64_t)v504;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v323 - 8) + 56))(v504, 1, 1, v323);
      v227 = v449;
      v228 = v505;
    }
    (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v228, v222, v223);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v272 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v229, 1, v173) == 1)
    {
      v273 = &protocol witness table for RadioShow;
      goto LABEL_78;
    }
    goto LABEL_132;
  }
  if (v148 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v221 = v495;
    v222 = v494;
    v223 = v496;
    v308 = (*(uint64_t (**)(char *, char *, uint64_t))(v495 + 32))(v494, v159, v496);
    v309 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v308);
    if (v309)
    {
      v310 = (void *)v309;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v311 = type metadata accessor for Artwork.CropStyle(0);
      v312 = sub_100048B14(v311, (uint64_t)qword_1011CDC18);
      v229 = v492;
      sub_100882874(v312, v492);

    }
    else
    {
      v331 = type metadata accessor for ArtworkImage.ViewModel(0);
      v229 = v492;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v331 - 8) + 56))(v492, 1, 1, v331);
    }
    v227 = v449;
    v228 = v493;
    (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v493, v222, v223);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v272 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v229, 1, v173) == 1)
    {
      v273 = &protocol witness table for RecordLabel;
      goto LABEL_78;
    }
    goto LABEL_132;
  }
  if (v148 == enum case for GenericMusicItem.socialProfile(_:))
  {
    v317 = v149;
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v318 = (*(uint64_t (**)(char *, char *, uint64_t))(v502 + 32))(v501, v138, v503);
    v319 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v318);
    if (v319)
    {
      v320 = (void *)v319;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v321 = type metadata accessor for Artwork.CropStyle(0);
      v322 = sub_100048B14(v321, (uint64_t)qword_1011CDC18);
      sub_100882874(v322, v500);

    }
    else
    {
      v338 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v338 - 8) + 56))(v500, 1, 1, v338);
    }
    (*(void (**)(char *, char *, uint64_t))(v502 + 16))(v497, v501, v503);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v174 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v500, 1, v173) == 1)
    {
      v339 = v503;
      v340 = v497;
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v503, (uint64_t)&protocol witness table for SocialProfile, v146);
      v341 = *(void (**)(char *, uint64_t))(v502 + 8);
      v341(v340, v339);
      v341(v501, v339);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v317);
      v342 = &v532;
      return sub_10004FF60(*(v342 - 32), (uint64_t *)&unk_1011A3E10);
    }
    v343 = *(void (**)(char *, uint64_t))(v502 + 8);
    v344 = v503;
    v343(v497, v503);
    v343(v501, v344);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v317);
    v345 = &v532;
    goto LABEL_210;
  }
  v324 = v149;
  if (v148 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v325 = (*(uint64_t (**)(char *, char *, uint64_t))(v490 + 32))(v489, v138, v491);
    v326 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v325);
    if (v326)
    {
      v327 = (void *)v326;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v328 = type metadata accessor for Artwork.CropStyle(0);
      v329 = sub_100048B14(v328, (uint64_t)qword_1011CDC18);
      sub_100882874(v329, v488);

    }
    else
    {
      v351 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v351 - 8) + 56))(v488, 1, 1, v351);
    }
    (*(void (**)(char *, char *, uint64_t))(v490 + 16))(v487, v489, v491);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v174 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v488, 1, v173) == 1)
    {
      v352 = v491;
      v353 = v487;
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v491, (uint64_t)&protocol witness table for Song, v146);
      v354 = *(void (**)(char *, uint64_t))(v490 + 8);
      v354(v353, v352);
      v354(v489, v352);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
      v342 = (uint64_t *)&v520;
      return sub_10004FF60(*(v342 - 32), (uint64_t *)&unk_1011A3E10);
    }
    v355 = *(void (**)(char *, uint64_t))(v490 + 8);
    v356 = v491;
    v355(v487, v491);
    v355(v489, v356);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
    v345 = (uint64_t *)&v520;
LABEL_210:
    v194 = *(v345 - 32);
    goto LABEL_32;
  }
  if (v148 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v333 = (*(uint64_t (**)(char *, char *, uint64_t))(v485 + 32))(v484, v138, v486);
    v334 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v333);
    if (v334)
    {
      v335 = (void *)v334;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v336 = type metadata accessor for Artwork.CropStyle(0);
      v337 = sub_100048B14(v336, (uint64_t)qword_1011CDC18);
      sub_100882874(v337, v483);

    }
    else
    {
      v362 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v362 - 8) + 56))(v483, 1, 1, v362);
    }
    (*(void (**)(char *, char *, uint64_t))(v485 + 16))(v482, v484, v486);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v174 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v483, 1, v173) == 1)
    {
      v363 = v486;
      v364 = v482;
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v486, (uint64_t)&protocol witness table for Station, v146);
      v365 = *(void (**)(char *, uint64_t))(v485 + 8);
      v365(v364, v363);
      v365(v484, v363);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
      v342 = (uint64_t *)&v515;
      return sub_10004FF60(*(v342 - 32), (uint64_t *)&unk_1011A3E10);
    }
    v366 = *(void (**)(char *, uint64_t))(v485 + 8);
    v367 = v486;
    v366(v482, v486);
    v366(v484, v367);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
    v345 = (uint64_t *)&v515;
    goto LABEL_210;
  }
  if (v148 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v346 = (*(uint64_t (**)(char *, char *, uint64_t))(v478 + 32))(v480, v138, v481);
    v347 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v346);
    if (v347)
    {
      v348 = (void *)v347;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v349 = type metadata accessor for Artwork.CropStyle(0);
      v350 = sub_100048B14(v349, (uint64_t)qword_1011CDC18);
      sub_100882874(v350, v477);

    }
    else
    {
      v373 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v373 - 8) + 56))(v477, 1, 1, v373);
    }
    v374 = *(void (**)(char *, char *, uint64_t))(v478 + 16);
    v374(v479, v480, v481);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v375 = *(_QWORD *)(v173 - 8);
    v376 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v375 + 48);
    v377 = v376(v477, 1, v173);
    if ((_DWORD)v377 != 1)
    {
      v381 = *(void (**)(char *, uint64_t))(v478 + 8);
      v382 = v481;
      v381(v479, v481);
      v381(v480, v382);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
      sub_100077A18(v477, (uint64_t)v146);
      v143 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v375 + 56);
      goto LABEL_33;
    }
    v378 = v469;
    TVEpisode.previewArtwork.getter(v377);
    v379 = v465;
    sub_10004A160(v378, v465, &qword_1011A1440);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v543 + 48))(v379, 1, v544) == 1)
    {
      v380 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v375 + 56);
      v380(v473, 1, 1, v173);
    }
    else
    {
      v388 = v543;
      v389 = v535;
      v390 = v544;
      (*(void (**)(char *, uint64_t, uint64_t))(v543 + 32))(v535, v465, v544);
      (*(void (**)(uint64_t, char *, uint64_t))(v388 + 16))(v534, v389, v390);
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v391 = type metadata accessor for Artwork.CropStyle(0);
      v392 = sub_100048B14(v391, (uint64_t)qword_1011CDC18);
      v393 = *(_QWORD *)(v391 - 8);
      v394 = (uint64_t)v533;
      (*(void (**)(char *, uint64_t, uint64_t))(v393 + 16))(v533, v392, v391);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v393 + 56))(v394, 0, 1, v391);
      v395 = v473;
      ArtworkImage.ViewModel.init(artwork:cropStyle:)(v534, v394, v473);
      (*(void (**)(char *, uint64_t))(v543 + 8))(v535, v544);
      v380 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v375 + 56);
      v380(v395, 0, 1, v173);
    }
    sub_10004FF60(v469, &qword_1011A1440);
    v374(v471, v479, v481);
    if (v376(v473, 1, v173) == 1)
    {
      v396 = v471;
      TVEpisode.artworkViewModel.getter(v146);
      v397 = *(void (**)(char *, uint64_t))(v478 + 8);
      v398 = v396;
      v399 = v481;
      v397(v398, v481);
      v397(v479, v399);
      v397(v480, v399);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
      sub_10004FF60(v473, (uint64_t *)&unk_1011A3E10);
    }
    else
    {
      v400 = *(void (**)(char *, uint64_t))(v478 + 8);
      v401 = v481;
      v400(v471, v481);
      v400(v479, v401);
      v400(v480, v401);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
      sub_100077A18(v473, (uint64_t)v146);
      v380((uint64_t)v146, 0, 1, v173);
    }
    v342 = &v509;
    return sub_10004FF60(*(v342 - 32), (uint64_t *)&unk_1011A3E10);
  }
  if (v148 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v357 = (*(uint64_t (**)(char *, char *, uint64_t))(v475 + 32))(v474, v138, v476);
    v358 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v357);
    if (v358)
    {
      v359 = (void *)v358;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v360 = type metadata accessor for Artwork.CropStyle(0);
      v361 = sub_100048B14(v360, (uint64_t)qword_1011CDC18);
      sub_100882874(v361, v472);

    }
    else
    {
      v402 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v402 - 8) + 56))(v472, 1, 1, v402);
    }
    (*(void (**)(char *, char *, uint64_t))(v475 + 16))(v470, v474, v476);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v174 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v472, 1, v173) == 1)
    {
      v403 = v476;
      v404 = v470;
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v476, (uint64_t)&protocol witness table for TVSeason, v146);
      v405 = *(void (**)(char *, uint64_t))(v475 + 8);
      v405(v404, v403);
      v405(v474, v403);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
      v342 = (uint64_t *)&v504;
      return sub_10004FF60(*(v342 - 32), (uint64_t *)&unk_1011A3E10);
    }
    v406 = *(void (**)(char *, uint64_t))(v475 + 8);
    v407 = v476;
    v406(v470, v476);
    v406(v474, v407);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
    v345 = (uint64_t *)&v504;
    goto LABEL_210;
  }
  if (v148 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v368 = (*(uint64_t (**)(char *, char *, uint64_t))(v467 + 32))(v466, v138, v468);
    v369 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v368);
    if (v369)
    {
      v370 = (void *)v369;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v371 = type metadata accessor for Artwork.CropStyle(0);
      v372 = sub_100048B14(v371, (uint64_t)qword_1011CDC18);
      sub_100882874(v372, v464);

    }
    else
    {
      v413 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v413 - 8) + 56))(v464, 1, 1, v413);
    }
    (*(void (**)(char *, char *, uint64_t))(v467 + 16))(v463, v466, v468);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v174 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v464, 1, v173) == 1)
    {
      v414 = v468;
      v415 = v463;
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v468, (uint64_t)&protocol witness table for TVShow, v146);
      v416 = *(void (**)(char *, uint64_t))(v467 + 8);
      v416(v415, v414);
      v416(v466, v414);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
      v342 = &v496;
      return sub_10004FF60(*(v342 - 32), (uint64_t *)&unk_1011A3E10);
    }
    v417 = *(void (**)(char *, uint64_t))(v467 + 8);
    v418 = v468;
    v417(v463, v468);
    v417(v466, v418);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
    v345 = &v496;
    goto LABEL_210;
  }
  if (v148 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v383 = (*(uint64_t (**)(char *, char *, uint64_t))(v461 + 32))(v460, v138, v462);
    v384 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v383);
    if (v384)
    {
      v385 = (void *)v384;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v386 = type metadata accessor for Artwork.CropStyle(0);
      v387 = sub_100048B14(v386, (uint64_t)qword_1011CDC18);
      sub_100882874(v387, v459);

    }
    else
    {
      v419 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v419 - 8) + 56))(v459, 1, 1, v419);
    }
    (*(void (**)(char *, char *, uint64_t))(v461 + 16))(v458, v460, v462);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v174 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v459, 1, v173) == 1)
    {
      v420 = v462;
      v421 = v458;
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v462, (uint64_t)&protocol witness table for UploadedAudio, v146);
      v422 = *(void (**)(char *, uint64_t))(v461 + 8);
      v422(v421, v420);
      v422(v460, v420);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
      v342 = &v491;
      return sub_10004FF60(*(v342 - 32), (uint64_t *)&unk_1011A3E10);
    }
    v423 = *(void (**)(char *, uint64_t))(v461 + 8);
    v424 = v462;
    v423(v458, v462);
    v423(v460, v424);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
    v345 = &v491;
    goto LABEL_210;
  }
  if (v148 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    v408 = (*(uint64_t (**)(char *, char *, uint64_t))(v456 + 32))(v455, v138, v457);
    v409 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v561) + 0x148))(v408);
    if (v409)
    {
      v410 = (void *)v409;
      if (qword_10119C9A8 != -1)
        swift_once(&qword_10119C9A8, sub_1008869F0);
      v411 = type metadata accessor for Artwork.CropStyle(0);
      v412 = sub_100048B14(v411, (uint64_t)qword_1011CDC18);
      sub_100882874(v412, v454);

    }
    else
    {
      v439 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v439 - 8) + 56))(v454, 1, 1, v439);
    }
    (*(void (**)(char *, char *, uint64_t))(v456 + 16))(v453, v455, v457);
    v173 = type metadata accessor for ArtworkImage.ViewModel(0);
    v174 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v454, 1, v173) == 1)
    {
      v440 = v457;
      v441 = v453;
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v457, (uint64_t)&protocol witness table for UploadedVideo, v146);
      v442 = *(void (**)(char *, uint64_t))(v456 + 8);
      v442(v441, v440);
      v442(v455, v440);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
      v342 = &v486;
      return sub_10004FF60(*(v342 - 32), (uint64_t *)&unk_1011A3E10);
    }
    v443 = *(void (**)(char *, uint64_t))(v456 + 8);
    v444 = v457;
    v443(v453, v457);
    v443(v455, v444);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v324);
    v345 = &v486;
    goto LABEL_210;
  }
  if (v148 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v150 + 8))(v449, v149);
    (*(void (**)(char *, uint64_t))(v150 + 96))(v138, v149);
    swift_bridgeObjectRelease();
    v170 = v146;
    goto LABEL_16;
  }
  v425 = Logger.musicKit.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v451 + 16))(v450, v425, v452);
  v426 = v527;
  v427 = Logger.logObject.getter(v426);
  v429 = static os_log_type_t.fault.getter(v428);
  v562 = v427;
  LODWORD(v561) = v429;
  if (os_log_type_enabled(v427, v429))
  {
    v430 = swift_slowAlloc(22, -1);
    v559 = (_QWORD *)swift_slowAlloc(8, -1);
    v560 = (char *)swift_slowAlloc(32, -1);
    v565 = v560;
    *(_DWORD *)v430 = 136446466;
    ObjectType = swift_getObjectType();
    v432 = _typeName(_:qualified:)(ObjectType, 0);
    v564 = sub_100322200(v432, v433, (uint64_t *)&v565);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v564, &v565);

    swift_bridgeObjectRelease();
    *(_WORD *)(v430 + 12) = 2114;
    v564 = (uint64_t)v426;
    v434 = v426;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v564, &v565);
    v435 = v559;
    *v559 = v426;

    v436 = v562;
    _os_log_impl((void *)&_mh_execute_header, v562, (os_log_type_t)v561, "Unhandled case for %{public}s: %{public}@", (uint8_t *)v430, 0x16u);
    v437 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v435, 1, v437);
    swift_slowDealloc(v435, -1, -1);
    v438 = v560;
    swift_arrayDestroy(v560, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v438, -1, -1);
    swift_slowDealloc(v430, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v451 + 8))(v450, v452);
  v445 = *(void (**)(char *, uint64_t))(v150 + 8);
  v445(v449, v324);
  v446 = type metadata accessor for ArtworkImage.ViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v446 - 8) + 56))(v146, 1, 1, v446);
  return ((uint64_t (*)(char *, uint64_t))v445)(v138, v324);
}

uint64_t sub_100886654@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;

  v43 = a2;
  v3 = type metadata accessor for Artwork.CropStyle(0);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - v14;
  v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v38 - v20;
  sub_10004A160(a1, (uint64_t)&v38 - v20, (uint64_t *)&unk_1011A20D0);
  v22 = type metadata accessor for GenericMusicItem(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
    goto LABEL_6;
  v38 = v5;
  v39 = v12;
  v24 = v43;
  sub_10004A160((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_1011A20D0);
  if ((*(unsigned int (**)(char *, uint64_t))(v23 + 88))(v18, v22) != enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v22);
LABEL_6:
    v30 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v43, 1, 1, v30);
    return sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A20D0);
  }
  (*(void (**)(char *, uint64_t))(v23 + 96))(v18, v22);
  v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v15, v18, v9);
  v26 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v42) + 0x148))(v25);
  if (v26)
  {
    v27 = (void *)v26;
    v28 = (uint64_t)v38;
    static Artwork.CropStyle.specificRectangle.getter(v26);
    v29 = (uint64_t)v8;
    sub_100882874(v28, (uint64_t)v8);

    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v28, v41);
  }
  else
  {
    v32 = type metadata accessor for ArtworkImage.ViewModel(0);
    v29 = (uint64_t)v8;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v8, 1, 1, v32);
  }
  v33 = v39;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v15, v9);
  v34 = type metadata accessor for ArtworkImage.ViewModel(0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v29, 1, v34) == 1)
  {
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v9, (uint64_t)&protocol witness table for MusicVideo, v24);
    v36 = *(void (**)(char *, uint64_t))(v10 + 8);
    v36(v33, v9);
    v36(v15, v9);
    sub_10004FF60(v29, (uint64_t *)&unk_1011A3E10);
  }
  else
  {
    v37 = *(void (**)(char *, uint64_t))(v10 + 8);
    v37(v33, v9);
    v37(v15, v9);
    sub_100077A18(v29, (uint64_t)v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v24, 0, 1, v34);
  }
  return sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A20D0);
}

uint64_t sub_1008869F0(uint64_t a1)
{
  return sub_100886A18(a1, qword_1011CDC18, (uint64_t (*)(void))&static Artwork.CropStyle.boundedBox.getter);
}

uint64_t sub_100886A04(uint64_t a1)
{
  return sub_100886A18(a1, qword_1011CDC30, (uint64_t (*)(void))&static Artwork.CropStyle.featuredContentCrop170T100B.getter);
}

uint64_t sub_100886A18(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5;

  v5 = type metadata accessor for Artwork.CropStyle(0);
  sub_10004FACC(v5, a2);
  sub_100048B14(v5, (uint64_t)a2);
  return a3();
}

uint64_t sub_100886A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL GenericMusicItem.isPlayableFromSearchResults.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  _BOOL8 v12;
  uint64_t v14;

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  v12 = v5 == enum case for GenericMusicItem.musicMovie(_:)
     || v5 == enum case for GenericMusicItem.musicVideo(_:)
     || v5 == enum case for GenericMusicItem.song(_:)
     || v5 == enum case for GenericMusicItem.station(_:)
     || v5 == enum case for GenericMusicItem.tvEpisode(_:)
     || v5 == enum case for GenericMusicItem.uploadedAudio(_:)
     || v5 == enum case for GenericMusicItem.uploadedVideo(_:);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v12;
}

uint64_t sub_100886BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t _s7ContextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t _s7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t _s7ContextVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s7ContextVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s7ContextVMa()
{
  return &_s7ContextVN;
}

uint64_t sub_100886D40(uint64_t a1, uint64_t a2)
{
  return sub_10089B674(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_100886D5C()
{
  uint64_t v0;

  v0 = type metadata accessor for Search.ViewModel(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return sub_1003E4F9C();
}

uint64_t sub_100886D90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  void *v68;
  __int128 v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t OpaqueTypeConformance2;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  _OWORD *v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  __n128 v98;
  _OWORD *v99;
  __int128 v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  double (**v104)();
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _OWORD *v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  _OWORD *v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  _OWORD *v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t result;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unsigned int v182;
  char *v183;
  unint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  uint64_t v190;
  char v191[8];
  uint64_t v192;
  uint64_t v193;
  __int128 v194;
  void *v195;
  uint64_t v196;
  __int128 v197;

  v177 = a1;
  v171 = type metadata accessor for SubmitTriggers(0);
  v170 = *(_QWORD *)(v171 - 8);
  v2 = __chkstk_darwin(v171);
  v168 = (char *)&v143 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = type metadata accessor for SubmitLabel(0, v2);
  v162 = *(_QWORD *)(v164 - 8);
  v4 = __chkstk_darwin(v164);
  v159 = (char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for SearchFieldPlacement(0, v4);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v147 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_100007E8C(&qword_1011CDC70);
  __chkstk_darwin(v181);
  v178 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_100007E8C(&qword_1011CDC78);
  v154 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v150 = (char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100007E8C(&qword_1011CDC80);
  v158 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v151 = (char *)&v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100007E8C(&qword_1011CDC88);
  v163 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v152 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_100007E8C(&qword_1011CDC90);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v183 = (char *)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_100007E8C(&qword_1011CDC98);
  __chkstk_darwin(v161);
  v184 = (unint64_t)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = sub_100007E8C(&qword_1011CDCA0);
  __chkstk_darwin(v169);
  v167 = (uint64_t)&v143 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_100007E8C(&qword_1011CDCA8);
  __chkstk_darwin(v185);
  v179 = (uint64_t)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = sub_100007E8C(&qword_1011CDCB0);
  v175 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v186 = (char *)&v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_100007E8C(&qword_1011CDCB8);
  v173 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v172 = (char *)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v1 + 24);
  v188 = *(_QWORD *)(v1 + 16);
  v17 = v188;
  v180 = v18;
  v19 = *(unsigned __int8 *)(v1 + 32);
  v182 = *(unsigned __int8 *)(v1 + 32);
  v20 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v21 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v149 = v20;
  v22 = StateObject.projectedValue.getter(v17, v18, v19, v20, v21);
  KeyPath = swift_getKeyPath(&unk_100ED43B8);
  v148 = v21;
  ObservedObject.Wrapper.subscript.getter(&v193, KeyPath, v22, v21);
  swift_release();
  swift_release();
  v196 = v193;
  v197 = v194;
  v192 = v1;
  v24 = sub_100007E8C((uint64_t *)&unk_1011D11C0);
  v25 = sub_100007E8C(&qword_1011CDCC0);
  v26 = sub_100049F28(&qword_1011B1040, (uint64_t *)&unk_1011D11C0, (uint64_t)&protocol conformance descriptor for [A]);
  v27 = sub_100049F28(&qword_1011B1048, (uint64_t *)&unk_1011D11C0, (uint64_t)&protocol conformance descriptor for [A]);
  v28 = sub_100049F28(&qword_1011B1050, (uint64_t *)&unk_1011D11C0, (uint64_t)&protocol conformance descriptor for [A]);
  v29 = sub_10089BA38();
  v30 = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
  v142 = v29;
  v31 = v178;
  NavigationStack.init<>(path:root:)(&v196, sub_10089BA30, v191, v24, v25, v26, v27, v28, v142, v30);
  v32 = &v31[*(int *)(v181 + 36)];
  v33 = sub_100007E8C(&qword_10119F038);
  v34 = sub_100049F28(&qword_10119F040, &qword_10119F038, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v32 = EnvironmentObject.init()(v33, v34);
  *((_QWORD *)v32 + 1) = v35;
  *((_QWORD *)v32 + 2) = swift_getKeyPath(&unk_100ED43E0);
  v32[24] = 0;
  *((_QWORD *)v32 + 4) = EnvironmentObject.init()(v20, v21);
  *((_QWORD *)v32 + 5) = v36;
  v37 = (int *)type metadata accessor for PushPendingNavigationItemModifier(0);
  v38 = &v32[v37[7]];
  *(_QWORD *)v38 = swift_getKeyPath(&unk_100ED4408);
  v39 = sub_100007E8C(&qword_10119F4E0);
  swift_storeEnumTagMultiPayload(v38, v39, 0);
  v40 = &v32[v37[8]];
  v41 = type metadata accessor for TabSelectionManager(0);
  v42 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v145 = v41;
  v144 = v42;
  *(_QWORD *)v40 = EnvironmentObject.init()(v41, v42);
  *((_QWORD *)v40 + 1) = v43;
  v44 = &v32[v37[9]];
  v45 = sub_100007E8C(&qword_10119CBF8);
  v46 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v44 = EnvironmentObject.init()(v45, v46);
  *((_QWORD *)v44 + 1) = v47;
  v48 = &v32[v37[10]];
  v49 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v50 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v48 = EnvironmentObject.init()(v49, v50);
  *((_QWORD *)v48 + 1) = v51;
  v52 = &v32[v37[11]];
  v53 = sub_100007E8C(&qword_10119F4E8);
  v54 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v52 = EnvironmentObject.init()(v53, v54);
  *((_QWORD *)v52 + 1) = v55;
  v56 = &v32[v37[12]];
  *(_QWORD *)v56 = swift_getKeyPath(&unk_100ED4438);
  v56[8] = 0;
  v57 = &v32[v37[13]];
  *(_QWORD *)v57 = swift_getKeyPath(&unk_100ED4460);
  *((_QWORD *)v57 + 1) = 0;
  v57[16] = 0;
  v58 = &v32[v37[14]];
  *(_QWORD *)v58 = swift_getKeyPath(&unk_100ED4488);
  *((_QWORD *)v58 + 1) = 0;
  v58[16] = 0;
  v146 = v1;
  v60 = *(_QWORD *)(v1 + 40);
  v59 = *(_QWORD *)(v1 + 48);
  v61 = *(unsigned __int8 *)(v1 + 56);
  v62 = type metadata accessor for Search.ViewModel(0);
  v63 = sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
  v187 = v60;
  v190 = v59;
  v189 = v61;
  v64 = StateObject.projectedValue.getter(v60, v59, v61, v62, v63);
  v65 = swift_getKeyPath(&unk_100ED44B0);
  ObservedObject.Wrapper.subscript.getter(&v193, v65, v64, v63);
  swift_release();
  v66 = swift_release();
  v67 = v193;
  v69 = v194;
  v68 = v195;
  v70 = v147;
  static SearchFieldPlacement.toolbarPrincipal.getter(v66);
  StateObject.wrappedValue.getter(v60, v59, v61, v62, v63);
  LOBYTE(v63) = sub_1003E6E04();
  swift_release();
  v196 = sub_1003C1FD4(v63 & 1);
  *(_QWORD *)&v197 = v71;
  v72 = sub_10089BBD0();
  v73 = sub_100055B68();
  v74 = v150;
  v75 = v181;
  v76 = (uint64_t)v178;
  View.searchable<A>(text:placement:prompt:)(v67, v69, *((_QWORD *)&v69 + 1), v68, v70, &v196, v181, &type metadata for String, v72, v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v77 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v155 + 8))(v70, v156, v77);
  sub_10004FF60(v76, &qword_1011CDC70);
  v193 = v75;
  *(_QWORD *)&v194 = &type metadata for String;
  *((_QWORD *)&v194 + 1) = v72;
  v195 = (void *)v73;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v193, &opaque type descriptor for <<opaque return type of View.searchable<A>(text:placement:prompt:)>>, 1);
  v79 = v151;
  v80 = v153;
  v81 = v74;
  v82 = v146;
  View.disableAutocorrection(_:)(1, v153, OpaqueTypeConformance2);
  v83 = (*(uint64_t (**)(char *, uint64_t))(v154 + 8))(v81, v80);
  v84 = v159;
  static SubmitLabel.search.getter(v83);
  v193 = v80;
  *(_QWORD *)&v194 = OpaqueTypeConformance2;
  v85 = swift_getOpaqueTypeConformance2(&v193, &opaque type descriptor for <<opaque return type of View.disableAutocorrection(_:)>>, 1);
  v86 = v152;
  v87 = v157;
  View.submitLabel(_:)(v84, v157, v85);
  (*(void (**)(char *, uint64_t))(v162 + 8))(v84, v164);
  v88 = (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v79, v87);
  v89 = v168;
  static SubmitTriggers.search.getter(v88);
  v90 = *(char **)(v82 + 8);
  v181 = *(_QWORD *)v82;
  v178 = v90;
  v91 = (_OWORD *)swift_allocObject(&unk_1010DF5B8, 73, 7);
  v92 = *(_OWORD *)(v82 + 16);
  v91[1] = *(_OWORD *)v82;
  v91[2] = v92;
  v91[3] = *(_OWORD *)(v82 + 32);
  *(_OWORD *)((char *)v91 + 57) = *(_OWORD *)(v82 + 41);
  swift_retain();
  v93 = v188;
  v94 = v180;
  KeyValueObservationTrigger.keyPath.getter(v188, v180);
  KeyValueObservationTrigger.keyPath.getter(v187, v190);
  v193 = v87;
  *(_QWORD *)&v194 = v85;
  v95 = swift_getOpaqueTypeConformance2(&v193, &opaque type descriptor for <<opaque return type of View.submitLabel(_:)>>, 1);
  v96 = v183;
  v97 = v160;
  View.onSubmit(of:_:)(v89, sub_10089BC70, v91, v160, v95);
  v98 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v170 + 8))(v89, v171, v98);
  (*(void (**)(char *, uint64_t))(v163 + 8))(v86, v97);
  v99 = (_OWORD *)swift_allocObject(&unk_1010DF5E0, 73, 7);
  v100 = *(_OWORD *)(v82 + 16);
  v99[1] = *(_OWORD *)v82;
  v99[2] = v100;
  v99[3] = *(_OWORD *)(v82 + 32);
  *(_OWORD *)((char *)v99 + 57) = *(_OWORD *)(v82 + 41);
  v101 = v165;
  v102 = v184;
  v103 = v166;
  (*(void (**)(unint64_t, char *, uint64_t))(v165 + 16))(v184, v96, v166);
  v104 = (double (**)())(v102 + *(int *)(v161 + 36));
  *v104 = sub_10089BC7C;
  v104[1] = (double (*)())v99;
  v104[2] = 0;
  v104[3] = 0;
  swift_retain();
  v105 = v182;
  KeyValueObservationTrigger.keyPath.getter(v93, v94);
  v106 = v187;
  v107 = v190;
  KeyValueObservationTrigger.keyPath.getter(v187, v190);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v183, v103);
  v108 = (_OWORD *)swift_allocObject(&unk_1010DF608, 73, 7);
  v109 = *(_OWORD *)(v82 + 16);
  v108[1] = *(_OWORD *)v82;
  v108[2] = v109;
  v108[3] = *(_OWORD *)(v82 + 32);
  *(_OWORD *)((char *)v108 + 57) = *(_OWORD *)(v82 + 41);
  v110 = v102;
  v111 = v167;
  sub_10004A160(v110, v167, &qword_1011CDC98);
  v112 = (_QWORD *)(v111 + *(int *)(v169 + 36));
  *v112 = 0;
  v112[1] = 0;
  v112[2] = sub_10089BC9C;
  v112[3] = v108;
  swift_retain();
  v113 = v188;
  v114 = v180;
  KeyValueObservationTrigger.keyPath.getter(v188, v180);
  KeyValueObservationTrigger.keyPath.getter(v106, v107);
  sub_10004FF60(v184, &qword_1011CDC98);
  v115 = v113;
  v116 = v114;
  v117 = v114;
  v118 = v149;
  v119 = v148;
  v120 = StateObject.wrappedValue.getter(v113, v117, v105, v149, v148);
  v121 = static ObservableObject.environmentStore.getter(v118, v119);
  v122 = v179;
  sub_10004A160(v111, v179, &qword_1011CDCA0);
  v123 = (uint64_t *)(v122 + *(int *)(v185 + 36));
  *v123 = v121;
  v123[1] = v120;
  sub_10004FF60(v111, &qword_1011CDCA0);
  if (v181)
  {
    v124 = v181;
    LOBYTE(v193) = *(_BYTE *)(v181 + qword_10124D088);
    v125 = (_OWORD *)swift_allocObject(&unk_1010DF630, 73, 7);
    v126 = *(_OWORD *)(v82 + 16);
    v125[1] = *(_OWORD *)v82;
    v125[2] = v126;
    v125[3] = *(_OWORD *)(v82 + 32);
    *(_OWORD *)((char *)v125 + 57) = *(_OWORD *)(v82 + 41);
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v115, v116);
    v127 = v187;
    KeyValueObservationTrigger.keyPath.getter(v187, v190);
    v184 = sub_10089BCC4();
    v128 = v185;
    v129 = v179;
    View.onChange<A>(of:initial:_:)(&v193, 0, sub_10089BCBC, v125, v185, &type metadata for Bool, v184, &protocol witness table for Bool);
    swift_release();
    sub_10004FF60(v129, &qword_1011CDCA8);
    v131 = *(_QWORD *)(v124 + qword_10124D090 + 8);
    v132 = *(_BYTE *)(v124 + qword_10124D090 + 16);
    v196 = *(_QWORD *)(v124 + qword_10124D090);
    v130 = v196;
    *(_QWORD *)&v197 = v131;
    BYTE8(v197) = v132;
    v133 = (_OWORD *)swift_allocObject(&unk_1010DF658, 73, 7);
    v134 = *(_OWORD *)(v82 + 16);
    v133[1] = *(_OWORD *)v82;
    v133[2] = v134;
    v133[3] = *(_OWORD *)(v82 + 32);
    *(_OWORD *)((char *)v133 + 57) = *(_OWORD *)(v82 + 41);
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v188, v116);
    KeyValueObservationTrigger.keyPath.getter(v127, v190);
    sub_1003351D4(v130, v131);
    v135 = sub_100007E8C(&qword_1011CDD18);
    v193 = v128;
    *(_QWORD *)&v194 = &type metadata for Bool;
    *((_QWORD *)&v194 + 1) = v184;
    v195 = &protocol witness table for Bool;
    v136 = swift_getOpaqueTypeConformance2(&v193, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v137 = sub_1000E4570(&qword_1011CDD20, &qword_1011CDD18, (void (*)(void))sub_10089BEE0, (uint64_t)&protocol conformance descriptor for <A> A?);
    v138 = v172;
    v139 = v176;
    v140 = v186;
    View.onChange<A>(of:initial:_:)(&v196, 0, sub_10089BED8, v133, v176, v135, v136, v137);
    swift_release();
    sub_10013B670(v196, v197);
    (*(void (**)(char *, uint64_t))(v175 + 8))(v140, v139);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v173 + 32))(v177, v138, v174);
  }
  else
  {
    result = EnvironmentObject.error()(0, v178, v145, v144);
    __break(1u);
  }
  return result;
}

uint64_t sub_100887D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD v82[4];
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v81 = a2;
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v75 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v74 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GridItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011CDD30);
  v77 = *(_QWORD *)(v11 - 8);
  v78 = v11;
  __chkstk_darwin(v11);
  v76 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100007E8C(&qword_1011CDCD8);
  __chkstk_darwin(v79);
  v80 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(unsigned __int8 *)(a1 + 56);
  v17 = type metadata accessor for Search.ViewModel(0);
  v18 = sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
  v19 = StateObject.wrappedValue.getter(v14, v15, v16, v17, v18);
  KeyPath = swift_getKeyPath(&unk_100ED4638);
  v21 = ObservedObject.init(wrappedValue:)(v19, v17, v18);
  v23 = v22;
  if (qword_10119C9B8 != -1)
    swift_once(&qword_10119C9B8, sub_10088C280);
  v24 = sub_100048B14(v7, (uint64_t)qword_1011CDC58);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v25(v10, v24, v7);
  v26 = static Array._allocateBufferUninitialized(minimumCapacity:)(3, v7);
  *(_QWORD *)(v26 + 16) = 3;
  v27 = v26 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v25((char *)v27, (uint64_t)v10, v7);
  v28 = *(_QWORD *)(v8 + 72);
  v25((char *)(v27 + v28), (uint64_t)v10, v7);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v27 + 2 * v28, v10, v7);
  v82[3] = KeyPath;
  v83 = 0;
  v84 = v21;
  v85 = v23;
  v86 = v26;
  v29 = v74;
  v30 = String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
  v31 = v75;
  static Locale.current.getter(v30);
  v82[0] = String.init(localized:table:bundle:locale:comment:)(v29, 0, 0, 0, v31, "Tab name for 'Search'", 21, 2);
  v82[1] = v32;
  v33 = sub_10089BB5C();
  v34 = sub_100055B68();
  v35 = v76;
  View.navigationTitle<A>(_:)(v82, &_s17SearchContentViewVN, &type metadata for String, v33, v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v36 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v37 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v38 = EnvironmentObject.init()(v36, v37);
  v74 = v39;
  v75 = (char *)v38;
  v40 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v41 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v42 = EnvironmentObject.init()(v40, v41);
  v72 = v43;
  v73 = v42;
  v44 = sub_100007E8C(&qword_10119F038);
  v45 = sub_100049F28(&qword_10119F040, &qword_10119F038, (uint64_t)&unk_100EC0A50);
  v46 = EnvironmentObject.init()(v44, v45);
  v71 = v47;
  v48 = sub_100007E8C(&qword_10119F630);
  v49 = sub_100049F28(&qword_10119F638, &qword_10119F630, (uint64_t)&unk_100EC0A50);
  v50 = EnvironmentObject.init()(v48, v49);
  v52 = v51;
  v53 = type metadata accessor for TabSelectionManager(0);
  v54 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v55 = EnvironmentObject.init()(v53, v54);
  v57 = v56;
  v59 = v77;
  v58 = v78;
  v60 = (uint64_t)v80;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v80, v35, v78);
  v61 = v79;
  v62 = (_QWORD *)(v60 + *(int *)(v79 + 36));
  v63 = v74;
  *v62 = v75;
  v62[1] = v63;
  v64 = v72;
  v62[2] = v73;
  v62[3] = v64;
  v65 = v71;
  v62[4] = v46;
  v62[5] = v65;
  v62[6] = v50;
  v62[7] = v52;
  v62[8] = v55;
  v62[9] = v57;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v35, v58);
  v66 = AccessibilityIdentifier.searchContentView.unsafeMutableAddressor();
  v67 = *v66;
  v68 = v66[1];
  v69 = sub_10089BABC();
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v67, v68, v61, v69);
  swift_bridgeObjectRelease();
  return sub_10004FF60(v60, &qword_1011CDCD8);
}

double sub_100888290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  char v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(unsigned __int8 *)(a1 + 56);
  v4 = type metadata accessor for Search.ViewModel(0);
  v5 = sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
  v6 = StateObject.wrappedValue.getter(v1, v2, v3, v4, v5);
  KeyPath = swift_getKeyPath(&unk_100ED4598);
  v8 = swift_getKeyPath(&unk_100ED45C0);
  static Published.subscript.getter(&v13, v6, KeyPath, v8);
  swift_release();
  swift_release();
  LODWORD(KeyPath) = v13;
  v9 = swift_getKeyPath(&unk_100ED4598);
  v10 = swift_getKeyPath(&unk_100ED45C0);
  v12 = 0;
  swift_retain();
  static Published.subscript.setter(&v12, v6, v9, v10);
  sub_1003E7C88(KeyPath);
  swift_release();
  StateObject.wrappedValue.getter(v1, v2, v3, v4, v5);
  sub_1003E8F0C(0, 0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1008883E8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6 = type metadata accessor for Search.ViewModel(0);
  v7 = sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
  StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  sub_1003E7A68(a2);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10088846C(uint64_t result, _BYTE *a2, _QWORD *a3)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*a2 == 1)
  {
    if (*a3)
    {
      __chkstk_darwin(result);
      sub_1000502A4();
      KeyPath = swift_getKeyPath(&unk_100ED45E0);
      __chkstk_darwin(KeyPath);
      v4 = swift_getKeyPath(&unk_100ED4618);
      swift_retain();
      static Published.subscript.getter(&v9, v5, KeyPath, v4);
      swift_release();
      swift_release();
      swift_release();
      __asm { BR              X10 }
    }
    v6 = a3[1];
    v7 = type metadata accessor for TabSelectionManager(0);
    v8 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    result = EnvironmentObject.error()(0, v6, v7, v8);
    __break(1u);
  }
  return result;
}

void sub_100888770(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 != 1)
  {
    v5 = *(_QWORD **)a2;
    v6 = *(unsigned __int8 *)(a2 + 16);
    v7 = a3[2];
    v8 = a3[3];
    v9 = *((unsigned __int8 *)a3 + 32);
    swift_bridgeObjectRetain();
    v10 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v11 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    v12 = StateObject.wrappedValue.getter(v7, v8, v9, v10, v11);
    __chkstk_darwin(v12);
    sub_100007E8C((uint64_t *)&unk_1011D11C0);
    KeyPath = swift_getKeyPath(&unk_100ED44D8);
    __chkstk_darwin(KeyPath);
    v14 = swift_getKeyPath(&unk_100ED4510);
    v56 = _swiftEmptyArrayStorage;
    static Published.subscript.setter(&v56, v12, KeyPath, v14);
    if (v6 != 2)
    {
      v15 = a3[5];
      v16 = a3[6];
      v17 = *((unsigned __int8 *)a3 + 56);
      v18 = type metadata accessor for Search.ViewModel(0);
      v19 = sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
      StateObject.wrappedValue.getter(v15, v16, v17, v18, v19);
      sub_1003E6F34(v6 & 1);
      swift_release();
    }
    v20 = a3[5];
    v21 = a3[6];
    v22 = *((unsigned __int8 *)a3 + 56);
    v53 = *((unsigned __int8 *)a3 + 56);
    v54 = type metadata accessor for Search.ViewModel(0);
    v55 = sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
    v23 = StateObject.wrappedValue.getter(v20, v21, v22, v54, v55);
    if (v3)
      v24 = v5;
    else
      v24 = 0;
    if (v3)
      v25 = v3;
    else
      v25 = 0xE000000000000000;
    v26 = swift_getKeyPath(&unk_100ED44B0);
    v27 = swift_getKeyPath(&unk_100ED4530);
    static Published.subscript.getter(&v56, v23, v26, v27);
    swift_release();
    swift_release();
    v28 = (uint64_t)v56;
    v29 = v57;
    v30 = swift_getKeyPath(&unk_100ED44B0);
    v31 = swift_getKeyPath(&unk_100ED4530);
    v56 = v24;
    v57 = v25;
    swift_retain();
    static Published.subscript.setter(&v56, v23, v30, v31);
    sub_1003E7454(v28, v29);
    swift_release();
    swift_bridgeObjectRelease();
    v32 = StateObject.wrappedValue.getter(v20, v21, v53, v54, v55);
    v33 = swift_getKeyPath(&unk_100ED4550);
    v34 = swift_getKeyPath(&unk_100ED4578);
    LOBYTE(v56) = 1;
    static Published.subscript.setter(&v56, v32, v33, v34);
    v35 = StateObject.wrappedValue.getter(v20, v21, v53, v54, v55);
    v36 = swift_getKeyPath(&unk_100ED4598);
    v37 = swift_getKeyPath(&unk_100ED45C0);
    static Published.subscript.getter(&v56, v35, v36, v37);
    swift_release();
    swift_release();
    LODWORD(v36) = v56;
    v38 = swift_getKeyPath(&unk_100ED4598);
    v39 = swift_getKeyPath(&unk_100ED45C0);
    LOBYTE(v56) = 0;
    swift_retain();
    static Published.subscript.setter(&v56, v35, v38, v39);
    sub_1003E7C88(v36);
    swift_release();
    StateObject.wrappedValue.getter(v20, v21, v53, v54, v55);
    sub_1003E8F0C(0, 0);
    swift_release();
    v40 = *a3;
    if (*a3)
    {
      v41 = v40 + qword_10124D090;
      v42 = *(_QWORD *)(v40 + qword_10124D090);
      v43 = *(_QWORD *)(v40 + qword_10124D090 + 8);
      *(_OWORD *)v41 = xmmword_100EA85A0;
      *(_BYTE *)(v41 + 16) = 0;
      swift_retain();
      v44 = sub_10013B670(v42, v43);
      if (*(_QWORD *)(v41 + 8) != 1)
      {
        __chkstk_darwin(v44);
        sub_1000502A4();
        v45 = swift_getKeyPath(&unk_100ED45E0);
        __chkstk_darwin(v45);
        v46 = swift_getKeyPath(&unk_100ED4618);
        static Published.subscript.getter(&v56, v40, v45, v46);
        swift_release();
        swift_release();
        LOBYTE(v45) = (_BYTE)v56;
        __chkstk_darwin(v47);
        v48 = swift_getKeyPath(&unk_100ED45E0);
        __chkstk_darwin(v48);
        v49 = swift_getKeyPath(&unk_100ED4618);
        LOBYTE(v56) = 4;
        swift_retain();
        static Published.subscript.setter(&v56, v40, v48, v49);
        sub_10046C638(v45);
      }
      swift_release();
    }
    else
    {
      v50 = a3[1];
      v51 = type metadata accessor for TabSelectionManager(0);
      v52 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
      EnvironmentObject.error()(0, v50, v51, v52);
      __break(1u);
    }
  }
}

uint64_t sub_100888D6C@<X0>(uint64_t a1@<X8>)
{
  return sub_100886D90(a1);
}

uint64_t sub_100888DAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  unint64_t v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _OWORD v31[2];
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v2 = v1;
  v29 = a1;
  v3 = sub_100007E8C(&qword_1011CDD38);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011CDD40);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100888FF4(v2, (uint64_t)v5);
  v10 = static Alignment.center.getter(v9);
  v27 = v11;
  v28 = v10;
  v26 = static HorizontalAlignment.center.getter(v10);
  sub_10088A768(v2, (uint64_t)v31);
  v12 = *(_QWORD *)&v31[0];
  v13 = BYTE8(v31[0]);
  v25 = v31[1];
  v14 = v32;
  v15 = v33;
  v16 = v34;
  v17 = v35;
  sub_10004A160((uint64_t)v5, (uint64_t)v8, &qword_1011CDD38);
  v18 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v18 = v26;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  *((_QWORD *)v18 + 3) = v12;
  v18[32] = v13;
  *(_OWORD *)(v18 + 40) = v25;
  *((_QWORD *)v18 + 7) = v14;
  v18[64] = v15;
  *((_QWORD *)v18 + 9) = v16;
  v18[80] = v17;
  v19 = v27;
  *((_QWORD *)v18 + 11) = v28;
  *((_QWORD *)v18 + 12) = v19;
  sub_10004FF60((uint64_t)v5, &qword_1011CDD38);
  v20 = *(_QWORD *)v2;
  LOBYTE(v5) = *(_BYTE *)(v2 + 8);
  sub_10006B3F8(*(_QWORD *)v2, (char)v5);
  LOBYTE(v16) = sub_10082568C(v20, (char)v5);
  sub_10006B604(v20, (char)v5);
  v30 = v16 & 1;
  v31[0] = *(_OWORD *)(v2 + 16);
  v36 = *(_QWORD *)(v2 + 32);
  v21 = swift_allocObject(&unk_1010DF708, 56, 7);
  v22 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(v2 + 32);
  sub_10006B3F8(v20, (char)v5);
  sub_1003E3468((uint64_t)v31);
  sub_100055D0C(&v36);
  v23 = sub_10089C258();
  View.onChange<A>(of:initial:_:)(&v30, 0, sub_10089C250, v21, v6, &type metadata for Bool, v23, &protocol witness table for Bool);
  swift_release();
  return sub_10004FF60((uint64_t)v8, &qword_1011CDD40);
}

uint64_t sub_100888FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;

  v30 = a2;
  v3 = sub_100007E8C(&qword_1011CDD98);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100007E8C(&qword_1011CDD70);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s4PageOMa(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(_OWORD *)(a1 + 16);
  swift_retain();
  sub_1003E86F0((uint64_t)v12);
  sub_1003E34C0((uint64_t)&v32);
  LODWORD(v10) = swift_getEnumCaseMultiPayload(v12, v10);
  v13 = sub_10005B748((uint64_t)v12, _s4PageOMa);
  if ((_DWORD)v10 == 4)
  {
    KeyPath = swift_getKeyPath(&unk_100ED4720);
    v15 = swift_getKeyPath(&unk_100ED4748);
    swift_retain();
    static Published.subscript.getter(&v31, v16, KeyPath, v15);
    swift_release();
    swift_release();
    sub_1003E34C0((uint64_t)&v32);
    v17 = v31;
    v18 = type metadata accessor for JSComponentController(0);
    v19 = sub_100048748(&qword_10119F048, type metadata accessor for JSComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
    *v5 = ObservedObject.init(wrappedValue:)(v17, v18, v19);
    v5[1] = v20;
    swift_storeEnumTagMultiPayload(v5, v3, 0);
    v21 = sub_1000A05E8();
    v22 = sub_100049F28(&qword_1011CDD68, &qword_1011CDD70, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    return _ConditionalContent<>.init(storage:)(v5, &type metadata for CatalogComponentView, v6, v21, v22);
  }
  else
  {
    __chkstk_darwin(v13);
    *(&v30 - 2) = a1;
    v25 = static Axis.Set.vertical.getter(v24);
    v26 = sub_100007E8C(&qword_1011CDDA0);
    v27 = sub_100049F28(&qword_1011CDDA8, &qword_1011CDDA0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    ScrollView.init(_:showsIndicators:content:)(v25, 1, sub_10089C458, &v30 - 4, v26, v27);
    (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 16))(v5, v9, v6);
    swift_storeEnumTagMultiPayload(v5, v3, 1);
    v28 = sub_1000A05E8();
    v29 = sub_100049F28(&qword_1011CDD68, &qword_1011CDD70, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    _ConditionalContent<>.init(storage:)(v5, &type metadata for CatalogComponentView, v6, v28, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

void sub_10088931C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  double v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int16 v147;
  _OWORD v148[3];
  uint64_t v149;
  char v150;
  char v151;
  __int128 v152;

  v139 = a2;
  v133 = sub_100007E8C(&qword_1011CDDB0);
  __chkstk_darwin(v133);
  v134 = (uint64_t)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100007E8C(&qword_1011CDDB8);
  __chkstk_darwin(v138);
  v135 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v117);
  v118 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100007E8C(&qword_1011CDDC0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100007E8C(&qword_1011CDDC8);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v119 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011B1800);
  __chkstk_darwin(v8);
  v10 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_100007E8C(&qword_1011ACBD8);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v131 = type metadata accessor for MusicSearchResultGroup(0);
  v130 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v129 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100007E8C(&qword_1011CDDD0);
  __chkstk_darwin(v132);
  v128 = (uint64_t)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100007E8C(&qword_1011CDDD8);
  __chkstk_darwin(v137);
  v18 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = _s4PageOMa(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011CDDE0);
  __chkstk_darwin(v22);
  v136 = (uint64_t)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v114 - v25;
  v27 = a1;
  v152 = *(_OWORD *)(a1 + 16);
  v28 = *((_QWORD *)&v152 + 1);
  KeyPath = swift_getKeyPath(&unk_100ED4550);
  v30 = swift_getKeyPath(&unk_100ED4578);
  swift_retain();
  static Published.subscript.getter(v148, v31, KeyPath, v30);
  swift_release();
  swift_release();
  sub_1003E34C0((uint64_t)&v152);
  v32 = 0;
  v33 = 0;
  if (LOBYTE(v148[0]) == 1)
  {
    v34 = type metadata accessor for Search.ViewModel(0);
    v35 = sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
    swift_retain();
    v32 = ObservedObject.init(wrappedValue:)(v36, v34, v35);
    v33 = v37;
  }
  swift_retain();
  sub_1003E86F0((uint64_t)v21);
  sub_1003E34C0((uint64_t)&v152);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v19);
  if (EnumCaseMultiPayload == 2)
  {
    v46 = *(_QWORD *)(v27 + 32);
    sub_1003E3468((uint64_t)&v152);
    v47 = swift_bridgeObjectRetain();
    v48 = static Edge.Set.all.getter(v47);
    v49 = EdgeInsets.init(_all:)(24.0);
    v140 = v28;
    v141 = v46;
    v142 = v48;
    v143 = v49;
    v144 = v50;
    v145 = v51;
    v146 = v52;
    v147 = 256;
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v116 = v32;
    v64 = swift_getKeyPath(&unk_100ED4768);
    v65 = swift_getKeyPath(&unk_100ED4790);
    swift_retain();
    static Published.subscript.getter(v14, v66, v64, v65);
    swift_release();
    swift_release();
    sub_1003E34C0((uint64_t)&v152);
    v67 = v130;
    v68 = v131;
    v69 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v130 + 48))(v14, 1, v131);
    v115 = v33;
    if (v69 == 1)
    {
      v70 = &qword_1011B11B0;
      v71 = (uint64_t)v14;
    }
    else
    {
      (*(void (**)(char *, _QWORD *, uint64_t))(v67 + 32))(v129, v14, v68);
      v79 = v28 + OBJC_IVAR____TtCV5Music6Search9ViewModel_selectedResultGroupUniqueItems;
      swift_beginAccess(v79, v148, 0, 0);
      sub_10004A160(v79, (uint64_t)v10, &qword_1011B1800);
      v80 = v124;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v10, 1, v125) != 1)
      {
        v82 = v123;
        v83 = (*(uint64_t (**)(void))(v80 + 32))();
        v114 = (uint64_t)&v114;
        v84 = *(_QWORD *)(v27 + 32);
        __chkstk_darwin(v83);
        v85 = v129;
        *(&v114 - 4) = (uint64_t)v82;
        *(&v114 - 3) = (uint64_t)v85;
        v86 = swift_bridgeObjectRetain();
        v87 = static HorizontalAlignment.center.getter(v86);
        LODWORD(v140) = 0;
        v88 = sub_100048748((unint64_t *)&qword_1011A0308, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
        v89 = v118;
        dispatch thunk of OptionSet.init(rawValue:)(&v140, v117, v88);
        sub_100007E8C(&qword_1011CDE50);
        v113 = sub_10089D5F0(&qword_1011CDE58, &qword_1011CDE50);
        v90 = v120;
        v91 = LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)(v84, v87, 0x4032000000000000, 0, v89, sub_10089C650);
        v92 = static Edge.Set.all.getter(v91);
        v93 = EdgeInsets.init(_all:)(24.0);
        v95 = v94;
        v97 = v96;
        v99 = v98;
        v100 = v121;
        v101 = (uint64_t)v119;
        v102 = v122;
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v119, v90, v122);
        v103 = v127;
        v104 = v101 + *(int *)(v127 + 36);
        *(_BYTE *)v104 = v92;
        *(double *)(v104 + 8) = v93;
        *(_QWORD *)(v104 + 16) = v95;
        *(_QWORD *)(v104 + 24) = v97;
        *(_QWORD *)(v104 + 32) = v99;
        *(_BYTE *)(v104 + 40) = 0;
        (*(void (**)(char *, uint64_t))(v100 + 8))(v90, v102);
        v81 = v128;
        sub_100065228(v101, v128, &qword_1011CDDC8);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56))(v81, 0, 1, v103);
        (*(void (**)(char *, uint64_t))(v124 + 8))(v123, v125);
        (*(void (**)(char *, uint64_t))(v130 + 8))(v129, v131);
        v32 = v116;
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v129, v68);
      v70 = &qword_1011B1800;
      v71 = (uint64_t)v10;
    }
    sub_10004FF60(v71, v70);
    v32 = v116;
    v81 = v128;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v126 + 56))(v128, 1, 1, v127);
LABEL_17:
    v105 = v134;
    sub_10004A160(v81, v134, &qword_1011CDDD0);
    swift_storeEnumTagMultiPayload(v105, v133, 0);
    v106 = sub_1000E4570(&qword_1011CDDE8, &qword_1011CDDD0, (void (*)(void))sub_10089C468, (uint64_t)&protocol conformance descriptor for <A> A?);
    v107 = (uint64_t)v135;
    _ConditionalContent<>.init(storage:)(v105, v132, &type metadata for EmptyView, v106, &protocol witness table for EmptyView);
    sub_10004A160(v107, (uint64_t)v18, &qword_1011CDDB8);
    swift_storeEnumTagMultiPayload(v18, v137, 1);
    v108 = sub_100007E8C(&qword_1011CDE00);
    v109 = sub_10015FD08(&qword_1011CDE08, &qword_1011CDE00, (void (*)(void))sub_10089C4EC, (void (*)(void))sub_10089C554);
    v110 = sub_10089C5BC();
    _ConditionalContent<>.init(storage:)(v18, v108, v138, v109, v110);
    sub_10004FF60(v107, &qword_1011CDDB8);
    sub_10004FF60(v81, &qword_1011CDDD0);
    sub_10004FF60((uint64_t)v21, &qword_1011B11B0);
    v78 = v139;
    v33 = v115;
    goto LABEL_18;
  }
  if (EnumCaseMultiPayload)
  {
    v72 = v134;
    swift_storeEnumTagMultiPayload(v134, v133, 1);
    v73 = sub_1000E4570(&qword_1011CDDE8, &qword_1011CDDD0, (void (*)(void))sub_10089C468, (uint64_t)&protocol conformance descriptor for <A> A?);
    v74 = (uint64_t)v135;
    _ConditionalContent<>.init(storage:)(v72, v132, &type metadata for EmptyView, v73, &protocol witness table for EmptyView);
    sub_10004A160(v74, (uint64_t)v18, &qword_1011CDDB8);
    swift_storeEnumTagMultiPayload(v18, v137, 1);
    v75 = sub_100007E8C(&qword_1011CDE00);
    v76 = sub_10015FD08(&qword_1011CDE08, &qword_1011CDE00, (void (*)(void))sub_10089C4EC, (void (*)(void))sub_10089C554);
    v77 = sub_10089C5BC();
    _ConditionalContent<>.init(storage:)(v18, v75, v138, v76, v77);
    sub_10004FF60(v74, &qword_1011CDDB8);
    sub_10005B748((uint64_t)v21, _s4PageOMa);
    goto LABEL_12;
  }
  v39 = *(_QWORD *)(v27 + 32);
  sub_1003E3468((uint64_t)&v152);
  v40 = swift_bridgeObjectRetain();
  v41 = static Edge.Set.all.getter(v40);
  v42 = EdgeInsets.init(_all:)(24.0);
  v140 = v28;
  v141 = v39;
  v142 = v41;
  v143 = v42;
  v144 = v43;
  v145 = v44;
  v146 = v45;
  v147 = 0;
LABEL_8:
  sub_1003E3468((uint64_t)&v152);
  swift_bridgeObjectRetain();
  v53 = sub_100007E8C(&qword_1011CDE18);
  v54 = sub_100007E8C(&qword_1011CDE30);
  v55 = sub_10089C4EC();
  v56 = sub_10089C554();
  _ConditionalContent<>.init(storage:)(&v140, v53, v54, v55, v56);
  v57 = v149;
  v58 = v150;
  v59 = v151;
  v60 = v148[1];
  *(_OWORD *)v18 = v148[0];
  *((_OWORD *)v18 + 1) = v60;
  *((_OWORD *)v18 + 2) = v148[2];
  *((_QWORD *)v18 + 6) = v57;
  v18[56] = v58;
  v18[57] = v59;
  swift_storeEnumTagMultiPayload(v18, v137, 0);
  v61 = sub_100007E8C(&qword_1011CDE00);
  v62 = sub_10015FD08(&qword_1011CDE08, &qword_1011CDE00, (void (*)(void))sub_10089C4EC, (void (*)(void))sub_10089C554);
  v63 = sub_10089C5BC();
  _ConditionalContent<>.init(storage:)(v18, v61, v138, v62, v63);
  sub_1003E34C0((uint64_t)&v152);
  swift_bridgeObjectRelease();
LABEL_12:
  v78 = v139;
LABEL_18:
  v111 = v136;
  sub_10004A160((uint64_t)v26, v136, &qword_1011CDDE0);
  *v78 = v32;
  v78[1] = v33;
  v112 = sub_100007E8C(&qword_1011CDE48);
  sub_10004A160(v111, (uint64_t)v78 + *(int *)(v112 + 48), &qword_1011CDDE0);
  swift_retain();
  sub_10004FF60((uint64_t)v26, &qword_1011CDDE0);
  sub_10004FF60(v111, &qword_1011CDDE0);
  swift_release();
}

uint64_t sub_10088A00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char v32;

  v28 = a4;
  v7 = sub_100007E8C(&qword_1011CDE68);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicSearchResultGroup(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(v10);
  v14 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a2, v10, v13);
  v31 = *a3;
  v32 = *((_BYTE *)a3 + 8);
  v30 = *((_OWORD *)a3 + 1);
  v29 = a3[4];
  v15 = *(unsigned __int8 *)(v11 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_1010DF730, v17 + 40, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v18 + v16, v14, v10);
  v19 = v18 + v17;
  v20 = *((_OWORD *)a3 + 1);
  *(_OWORD *)v19 = *(_OWORD *)a3;
  *(_OWORD *)(v19 + 16) = v20;
  *(_QWORD *)(v19 + 32) = a3[4];
  v21 = sub_100007E8C(&qword_1011ACBD8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v9, a1, v21);
  v22 = swift_allocObject(&unk_1010DF758, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_10089C6FC;
  *(_QWORD *)(v22 + 24) = v18;
  sub_10089C770((uint64_t)&v31);
  sub_1003E3468((uint64_t)&v30);
  sub_100055D0C(&v29);
  v23 = _s17SearchContentViewV14ResultItemViewVMa(0);
  v24 = sub_100049F28(&qword_1011CDE70, &qword_1011CDE68, (uint64_t)&protocol conformance descriptor for EnumeratedCollection<A>);
  v25 = sub_100048748(&qword_1011CDE60, _s17SearchContentViewV14ResultItemViewVMa, (uint64_t)&unk_100ED48E8);
  v26 = sub_100049F28(&qword_1011CDE78, &qword_1011CDE80, (uint64_t)&protocol conformance descriptor for EnumeratedCollection<A>.Pair);
  return ForEach<>.init(_:content:)(v9, sub_10089C764, v22, v7, &type metadata for MusicItemID, v23, v24, v25, v26);
}

uint64_t sub_10088A260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t, __n128);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;

  v66 = a3;
  v68 = a1;
  v69 = a5;
  v7 = type metadata accessor for Song(0);
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for GenericMusicItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v62 - v15;
  v17 = (int *)_s17SearchContentViewV14ResultItemViewVMa(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  v67 = v16;
  v22 = v21(v16, a2, v10, v18);
  v65 = MusicSearchResultGroup.isTopResultsGroup.getter(v22);
  v23 = *(_QWORD *)(a4 + 24);
  type metadata accessor for MusicLibrary(0);
  v66 = v23;
  swift_retain();
  static MusicLibrary.shared.getter(v24);
  ((void (*)(char *, uint64_t, uint64_t))v21)(v13, a2, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    v26 = v63;
    v25 = v64;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v9, v13, v64);
    MusicLibrary.state<A>(for:)(v9, v25, &protocol witness table for Song);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
    swift_release();
    *((_QWORD *)&v71 + 1) = sub_100007E8C((uint64_t *)&unk_1011C72B0);
    v72 = sub_100049F28(&qword_1011AFA30, (uint64_t *)&unk_1011C72B0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    sub_100049F68(&v70);
    dispatch thunk of MusicLibrary.ItemState.$downloadStatus.getter(v27);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
    v72 = 0;
    v70 = 0u;
    v71 = 0u;
  }
  v28 = sub_100007E8C((uint64_t *)&unk_1011C72C0);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v29 = OptionalObservableObject.init(publisher:)((uint64_t)&v70);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v67, v10);
  *(_QWORD *)&v20[v17[5]] = v68;
  v20[v17[6]] = 2;
  v20[v17[7]] = v65 & 1;
  v30 = &v20[v17[8]];
  v31 = type metadata accessor for Search.ViewModel(0);
  v32 = sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
  *(_QWORD *)v30 = ObservedObject.init(wrappedValue:)(v66, v31, v32);
  *((_QWORD *)v30 + 1) = v33;
  v34 = &v20[v17[9]];
  v35 = sub_100049F28(&qword_1011C3198, (uint64_t *)&unk_1011C72C0, (uint64_t)&protocol conformance descriptor for OptionalObservableObject<A>);
  *(_QWORD *)v34 = ObservedObject.init(wrappedValue:)(v29, v28, v35);
  *((_QWORD *)v34 + 1) = v36;
  v37 = &v20[v17[10]];
  *(_QWORD *)v37 = swift_getKeyPath(&unk_100ED4438);
  v37[8] = 0;
  v38 = &v20[v17[11]];
  v39 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v40 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v38 = EnvironmentObject.init()(v39, v40);
  *((_QWORD *)v38 + 1) = v41;
  v42 = &v20[v17[12]];
  v43 = type metadata accessor for NoticePresenter(0);
  v44 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *(_QWORD *)v42 = EnvironmentObject.init()(v43, v44);
  *((_QWORD *)v42 + 1) = v45;
  v46 = &v20[v17[13]];
  *(_QWORD *)v46 = sub_1000DEC04;
  *((_QWORD *)v46 + 1) = 0;
  v46[16] = 0;
  v47 = &v20[v17[14]];
  v48 = type metadata accessor for NavigationPusher();
  v49 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *(_QWORD *)v47 = EnvironmentObject.init()(v48, v49);
  *((_QWORD *)v47 + 1) = v50;
  v51 = &v20[v17[15]];
  v52 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v53 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v51 = EnvironmentObject.init()(v52, v53);
  *((_QWORD *)v51 + 1) = v54;
  v55 = &v20[v17[16]];
  v56 = type metadata accessor for TabSelectionManager(0);
  v57 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v55 = EnvironmentObject.init()(v56, v57);
  *((_QWORD *)v55 + 1) = v58;
  v59 = &v20[v17[17]];
  *(_QWORD *)v59 = swift_getKeyPath(&unk_100ED4460);
  *((_QWORD *)v59 + 1) = 0;
  v59[16] = 0;
  v60 = &v20[v17[18]];
  *(_QWORD *)v60 = swift_getKeyPath(&unk_100ED4488);
  *((_QWORD *)v60 + 1) = 0;
  v60[16] = 0;
  return sub_10005B6C0((uint64_t)v20, v69, _s17SearchContentViewV14ResultItemViewVMa);
}

uint64_t sub_10088A768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  double v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[3];
  unsigned __int8 v28;
  __int128 v29;

  v4 = _s4PageOMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_OWORD *)(a1 + 16);
  v7 = *((double *)&v29 + 1);
  swift_retain();
  sub_1003E86F0((uint64_t)v6);
  sub_1003E34C0((uint64_t)&v29);
  LODWORD(v4) = swift_getEnumCaseMultiPayload(v6, v4);
  sub_10005B748((uint64_t)v6, _s4PageOMa);
  if ((_DWORD)v4 == 3)
  {
    v24 = 0;
    v25 = 0;
    v23 = v7;
    v26 = 0;
    v8 = sub_10089C3D0();
    v9 = sub_10089C414();
    swift_retain();
    v10 = v8;
    v11 = v9;
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_100ED46D8);
    v13 = swift_getKeyPath(&unk_100ED4700);
    swift_retain();
    static Published.subscript.getter(v27, v14, KeyPath, v13);
    swift_release();
    swift_release();
    sub_1003E34C0((uint64_t)&v29);
    if ((v27[0] & 1) == 0)
    {
      v18 = 0;
      v19 = 0;
      v20 = 0;
      v21 = -1;
      goto LABEL_7;
    }
    v23 = InteractionFeedbackLoadingView.init(delay:)(0.5);
    v24 = v15 & 1;
    v25 = v16;
    v26 = 1;
    v17 = sub_10089C3D0();
    v11 = sub_10089C414();
    v10 = v17;
  }
  _ConditionalContent<>.init(storage:)(&v23, &_s17SearchContentViewV13NoResultsViewVN, &type metadata for InteractionFeedbackLoadingView, v10, v11);
  v18 = v27[0];
  v19 = v27[1];
  v20 = v27[2];
  v21 = v28;
LABEL_7:
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v18;
  *(_QWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v20;
  *(_BYTE *)(a2 + 40) = v21;
  *(_QWORD *)(a2 + 48) = 0;
  *(_BYTE *)(a2 + 56) = 1;
  sub_10089C388(v18, v19, v20, v21);
  return sub_10089C3AC(v18, v19, v20, v21);
}

uint64_t sub_10088A97C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v13;
  __int128 v14;

  v3 = *a2;
  v14 = *(_OWORD *)(a3 + 16);
  v4 = *((_QWORD *)&v14 + 1);
  KeyPath = swift_getKeyPath(&unk_100ED4550);
  v6 = swift_getKeyPath(&unk_100ED4578);
  v13 = v3;
  swift_retain();
  static Published.subscript.setter(&v13, *((_QWORD *)&v14 + 1), KeyPath, v6);
  v7 = swift_getKeyPath(&unk_100ED4598);
  v8 = swift_getKeyPath(&unk_100ED45C0);
  swift_retain();
  static Published.subscript.getter(&v13, v9, v7, v8);
  swift_release();
  swift_release();
  LODWORD(v7) = v13;
  v10 = swift_getKeyPath(&unk_100ED4598);
  v11 = swift_getKeyPath(&unk_100ED45C0);
  v13 = v3;
  swift_retain();
  static Published.subscript.setter(&v13, v4, v10, v11);
  sub_1003E7C88(v7);
  return sub_1003E34C0((uint64_t)&v14);
}

uint64_t sub_10088AA98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t OpaqueTypeConformance2;
  unint64_t v68;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  unint64_t v113;
  unint64_t v114;
  _QWORD v115[3];
  __int128 v116;
  __int128 v117;
  __int128 v118;

  v106 = a1;
  v111 = a3;
  v93 = sub_100007E8C(&qword_1011CE140);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v5 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100007E8C(&qword_1011CE148);
  __chkstk_darwin(v110);
  v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v92 - v9;
  v108 = sub_100007E8C(&qword_1011CE150);
  __chkstk_darwin(v108);
  v109 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for SegmentedPickerStyle(0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100007E8C(&qword_1011CE158);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v20 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100007E8C(&qword_1011CE160);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100007E8C(&qword_1011CE168);
  __chkstk_darwin(v105);
  v23 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100007E8C(&qword_1011CE170);
  v104 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v102 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v103 = (char *)&v92 - v26;
  KeyPath = swift_getKeyPath(&unk_100ED4598);
  v28 = swift_getKeyPath(&unk_100ED45C0);
  swift_retain();
  static Published.subscript.getter(&v116, v29, KeyPath, v28);
  swift_release();
  swift_release();
  swift_release();
  if (v116 == 1)
  {
    v31 = String.LocalizationValue.init(stringLiteral:)(0x73656372756F53, 0xE700000000000000);
    static Locale.current.getter(v31);
    v115[0] = String.init(localized:table:bundle:locale:comment:)(v18, 0, 0, 0, v15, "Picker to select search source", 30, 2);
    v115[1] = v32;
    type metadata accessor for MainActor(0);
    v33 = swift_retain();
    v34 = static MainActor.shared.getter(v33);
    v35 = (_QWORD *)swift_allocObject(&unk_1010DFA90, 48, 7);
    v35[2] = v34;
    v35[3] = &protocol witness table for MainActor;
    v36 = v106;
    v35[4] = v106;
    v35[5] = a2;
    v37 = swift_retain();
    v38 = static MainActor.shared.getter(v37);
    v39 = (_QWORD *)swift_allocObject(&unk_1010DFAB8, 48, 7);
    v39[2] = v38;
    v39[3] = &protocol witness table for MainActor;
    v39[4] = v36;
    v39[5] = a2;
    v40 = Binding.init(get:set:)(&v116, sub_10089E198, v35, sub_10089E1E4, v39, &_s6SourceON);
    v112 = v116;
    LOBYTE(v113) = v117;
    __chkstk_darwin(v40);
    v41 = sub_100007E8C(&qword_1011CE1B8);
    v42 = sub_1003C3648();
    v43 = sub_1000E4570(&qword_1011CE1C0, &qword_1011CE1B8, (void (*)(void))sub_10089E220, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    v44 = sub_100055B68();
    v45 = Picker<>.init<A>(_:selection:content:)(v115, &v112, sub_10089E218, &v92 - 4, &_s6SourceON, v41, &type metadata for String, v42, v43, v44);
    v46 = v99;
    SegmentedPickerStyle.init()(v45);
    v47 = sub_100049F28(&qword_1011CE1A0, &qword_1011CE158, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
    v48 = v96;
    v49 = v95;
    v50 = v101;
    View.pickerStyle<A>(_:)(v46, v95, v101, v47, &protocol witness table for SegmentedPickerStyle);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v46, v50);
    v51 = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v20, v49);
    v52 = static Alignment.center.getter(v51);
    _FrameLayout.init(width:height:alignment:)(&v116, 0x4079000000000000, 0, 0, 1, v52, v53);
    v54 = v97;
    v55 = v98;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v23, v48, v98);
    v56 = v105;
    v57 = &v23[*(int *)(v105 + 36)];
    v58 = v117;
    *(_OWORD *)v57 = v116;
    *((_OWORD *)v57 + 1) = v58;
    *((_OWORD *)v57 + 2) = v118;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v55);
    swift_retain();
    LOBYTE(v55) = sub_1003E6E04();
    swift_release();
    LOBYTE(v112) = v55 & 1;
    v59 = swift_allocObject(&unk_1010DFAE0, 32, 7);
    *(_QWORD *)(v59 + 16) = v36;
    *(_QWORD *)(v59 + 24) = a2;
    v60 = sub_10089E044();
    v61 = sub_1003C3144();
    swift_retain();
    v62 = v102;
    View.onChange<A>(of:initial:_:)(&v112, 0, sub_10089E328, v59, v56, &_s6SourceON, v60, v61);
    swift_release();
    sub_10004FF60((uint64_t)v23, &qword_1011CE168);
    v63 = v104;
    v64 = v103;
    v65 = v107;
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v103, v62, v107);
    v66 = v109;
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 16))(v109, v64, v65);
    swift_storeEnumTagMultiPayload(v66, v108, 0);
    *(_QWORD *)&v112 = v56;
    *((_QWORD *)&v112 + 1) = &_s6SourceON;
    v113 = v60;
    v114 = v61;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v112, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v68 = sub_10089E110();
    _ConditionalContent<>.init(storage:)(v66, v65, v110, OpaqueTypeConformance2, v68);
    return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  }
  else
  {
    v70 = static Axis.Set.horizontal.getter(v30);
    __chkstk_darwin(v70);
    v90 = v106;
    v91 = a2;
    v71 = sub_100007E8C(&qword_1011CE178);
    v72 = sub_10089DFC0();
    v73 = ScrollView.init(_:showsIndicators:content:)(v70, 0, sub_10089DFB8, &v92 - 4, v71, v72);
    LOBYTE(v70) = static Edge.Set.bottom.getter(v73);
    v74 = EdgeInsets.init(_all:)(22.0);
    v76 = v75;
    v78 = v77;
    v80 = v79;
    v81 = v92;
    v82 = v93;
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v7, v5, v93);
    v83 = v110;
    v84 = &v7[*(int *)(v110 + 36)];
    *v84 = v70;
    *((double *)v84 + 1) = v74;
    *((_QWORD *)v84 + 2) = v76;
    *((_QWORD *)v84 + 3) = v78;
    *((_QWORD *)v84 + 4) = v80;
    v84[40] = 0;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v5, v82);
    sub_100065228((uint64_t)v7, (uint64_t)v10, &qword_1011CE148);
    v85 = v109;
    sub_10004A160((uint64_t)v10, v109, &qword_1011CE148);
    swift_storeEnumTagMultiPayload(v85, v108, 1);
    v86 = sub_10089E044();
    v87 = sub_1003C3144();
    *(_QWORD *)&v116 = v105;
    *((_QWORD *)&v116 + 1) = &_s6SourceON;
    *(_QWORD *)&v117 = v86;
    *((_QWORD *)&v117 + 1) = v87;
    v88 = swift_getOpaqueTypeConformance2(&v116, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v89 = sub_10089E110();
    _ConditionalContent<>.init(storage:)(v85, v107, v83, v88, v89);
    return sub_10004FF60((uint64_t)v10, &qword_1011CE148);
  }
}

uint64_t sub_10088B3C4()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v10;

  KeyPath = swift_getKeyPath(&unk_100ED4B78);
  v1 = swift_getKeyPath(&unk_100ED4BA0);
  swift_retain();
  swift_retain();
  static Published.subscript.getter(&v10, v2, KeyPath, v1);
  swift_release();
  swift_release();
  swift_release();
  v3 = sub_100481F3C((uint64_t)v10);
  swift_release();
  swift_bridgeObjectRelease();
  v10 = v3;
  swift_retain();
  sub_100899D88((uint64_t *)&v10);
  swift_release();
  v4 = sub_100007E8C(&qword_1011CE208);
  v5 = sub_100007E8C(&qword_1011CE1D0);
  v6 = sub_100049F28(&qword_1011CE210, &qword_1011CE208, (uint64_t)&protocol conformance descriptor for [A]);
  v7 = sub_10089E220();
  v8 = sub_10089E338();
  return ForEach<>.init(_:content:)(&v10, sub_10088B538, 0, v4, &type metadata for String, v5, v6, v7, v8);
}

uint64_t sub_10088B538@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v10[2];

  v3 = *a1;
  v10[0] = sub_1003C1E54(*a1);
  v10[1] = v4;
  v5 = sub_100055B68();
  result = Text.init<A>(_:)(v10, &type metadata for String, v5);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8 & 1;
  *(_QWORD *)(a2 + 24) = v9;
  *(_BYTE *)(a2 + 32) = v3;
  *(_BYTE *)(a2 + 33) = v3;
  return result;
}

uint64_t sub_10088B59C(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_100007E8C(&qword_1011B17E8);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s5EventOMa(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v8 = *a2;
  swift_storeEnumTagMultiPayload(v8, v9, 5);
  v10 = _s4PageOMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  swift_retain();
  sub_1003E9A5C((uint64_t)v8, (uint64_t)v5);
  swift_release();
  sub_10004FF60((uint64_t)v5, &qword_1011B17E8);
  return sub_10005B748((uint64_t)v8, _s5EventOMa);
}

uint64_t sub_10088B6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  _QWORD v32[4];
  _QWORD *v33;

  v6 = sub_100007E8C(&qword_1011CE190);
  __chkstk_darwin(v6);
  v8 = (char *)&v32[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v9);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v31 = &v8[*(int *)(sub_100007E8C(&qword_1011CE220) + 44)];
  swift_retain();
  v10 = sub_1003E713C();
  swift_release();
  v33 = v10;
  v11 = swift_allocObject(&unk_1010DFB08, 32, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  swift_retain();
  v12 = sub_100007E8C(&qword_1011CE228);
  v13 = sub_100007E8C(&qword_1011CE230);
  v14 = sub_100049F28(&qword_1011CE238, &qword_1011CE228, (uint64_t)&protocol conformance descriptor for [A]);
  v15 = sub_100044B54(&qword_1011CE240);
  v16 = type metadata accessor for ButtonToggleStyle(255);
  v17 = sub_100049F28(&qword_1011CE248, &qword_1011CE240, (uint64_t)&protocol conformance descriptor for Toggle<A>);
  v18 = sub_100048748(&qword_1011CE250, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonToggleStyle, (uint64_t)&protocol conformance descriptor for ButtonToggleStyle);
  v32[0] = v15;
  v32[1] = v16;
  v32[2] = v17;
  v32[3] = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v32, &opaque type descriptor for <<opaque return type of View.toggleStyle<A>(_:)>>, 1);
  v20 = sub_100048748(&qword_1011CE258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicSearchResultGroup, (uint64_t)&protocol conformance descriptor for MusicSearchResultGroup);
  v21 = ForEach<>.init(_:content:)(&v33, sub_10089E37C, v11, v12, &type metadata for String, v13, v14, OpaqueTypeConformance2, v20);
  LOBYTE(OpaqueTypeConformance2) = static Edge.Set.horizontal.getter(v21);
  v22 = EdgeInsets.init(_all:)(24.0);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  sub_10004A160((uint64_t)v8, a3, &qword_1011CE190);
  v29 = a3 + *(int *)(sub_100007E8C(&qword_1011CE178) + 36);
  *(_BYTE *)v29 = OpaqueTypeConformance2;
  *(double *)(v29 + 8) = v22;
  *(_QWORD *)(v29 + 16) = v24;
  *(_QWORD *)(v29 + 24) = v26;
  *(_QWORD *)(v29 + 32) = v28;
  *(_BYTE *)(v29 + 40) = 0;
  return sub_10004FF60((uint64_t)v8, &qword_1011CE190);
}

uint64_t sub_10088B930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, __n128);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53[16];
  uint64_t v54;
  _QWORD v55[2];
  unsigned __int8 v56;

  v51 = a4;
  v52 = a2;
  v43 = a1;
  v6 = type metadata accessor for ButtonToggleStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  v50 = v7;
  __chkstk_darwin(v6);
  v46 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicSearchResultGroup(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011CE240);
  v14 = *(_QWORD *)(v13 - 8);
  v47 = v13;
  v48 = v14;
  v15 = __chkstk_darwin(v13);
  v45 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v44(v12, a1, v9, v15);
  type metadata accessor for MainActor(0);
  v17 = swift_retain();
  v18 = static MainActor.shared.getter(v17);
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = (v19 + 48) & ~v19;
  v21 = v20 + v11;
  v22 = v19 | 7;
  v23 = (char *)swift_allocObject(&unk_1010DFB30, v21, v19 | 7);
  *((_QWORD *)v23 + 2) = v18;
  *((_QWORD *)v23 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v23 + 4) = v52;
  *((_QWORD *)v23 + 5) = a3;
  v24 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v24(&v23[v20], v12, v9);
  v25 = v43;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v12, v43, v9);
  v26 = swift_retain();
  v27 = static MainActor.shared.getter(v26);
  v28 = (char *)swift_allocObject(&unk_1010DFB58, v21, v22);
  *((_QWORD *)v28 + 2) = v27;
  v29 = v52;
  *((_QWORD *)v28 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v28 + 4) = v29;
  *((_QWORD *)v28 + 5) = a3;
  v24(&v28[v20], v12, v9);
  Binding.init(get:set:)(v55, sub_10089E388, v23, sub_10089E44C, v28, &type metadata for Bool);
  v30 = v55[0];
  v31 = v55[1];
  v32 = v56;
  v54 = v25;
  v33 = sub_100007E8C(&qword_1011A5388);
  v34 = sub_1001C9648();
  v35 = v45;
  v36 = Toggle.init(isOn:label:)(v30, v31, v32, sub_10089E490, v53, v33, v34);
  v37 = v46;
  ButtonToggleStyle.init()(v36);
  v38 = sub_100049F28(&qword_1011CE248, &qword_1011CE240, (uint64_t)&protocol conformance descriptor for Toggle<A>);
  v39 = sub_100048748(&qword_1011CE250, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonToggleStyle, (uint64_t)&protocol conformance descriptor for ButtonToggleStyle);
  v40 = v47;
  v41 = v49;
  View.toggleStyle<A>(_:)(v37, v47, v49, v38, v39);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v35, v40);
}

uint64_t sub_10088BC2C@<X0>(uint64_t a1@<X4>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  int v22;
  uint64_t *v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t result;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;

  v32 = a1;
  v33 = a2;
  v2 = type metadata accessor for MusicSearchResultGroup(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v30 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CE260);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v8);
  v31 = (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  __chkstk_darwin(v13);
  v15 = (char **)((char *)&v30 - v14);
  KeyPath = swift_getKeyPath(&unk_100ED4768);
  v17 = swift_getKeyPath(&unk_100ED4790);
  swift_retain();
  static Published.subscript.getter(v15, v18, KeyPath, v17);
  swift_release();
  swift_release();
  v19 = swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v12, v32, v2, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
  v20 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_10004A160((uint64_t)v15, (uint64_t)v7, &qword_1011B11B0);
  sub_10004A160((uint64_t)v12, v20, &qword_1011B11B0);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v21((uint64_t)v7, 1, v2) == 1)
  {
    sub_10004FF60((uint64_t)v12, &qword_1011B11B0);
    sub_10004FF60((uint64_t)v15, &qword_1011B11B0);
    v22 = v21(v20, 1, v2);
    if (v22 == 1)
      v23 = &qword_1011B11B0;
    else
      v23 = &qword_1011CE260;
    if (v22 == 1)
      v24 = -1;
    else
      v24 = 0;
  }
  else
  {
    v25 = v31;
    sub_10004A160((uint64_t)v7, v31, &qword_1011B11B0);
    if (v21(v20, 1, v2) == 1)
    {
      sub_10004FF60((uint64_t)v12, &qword_1011B11B0);
      sub_10004FF60((uint64_t)v15, &qword_1011B11B0);
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v25, v2);
      v24 = 0;
      v23 = &qword_1011CE260;
    }
    else
    {
      v26 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v30, v20, v2);
      v27 = sub_100048748(&qword_1011CE268, (uint64_t (*)(uint64_t))&type metadata accessor for MusicSearchResultGroup, (uint64_t)&protocol conformance descriptor for MusicSearchResultGroup);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v26, v2, v27);
      v28 = *(void (**)(char *, uint64_t))(v3 + 8);
      v28(v26, v2);
      v23 = &qword_1011B11B0;
      sub_10004FF60((uint64_t)v12, &qword_1011B11B0);
      sub_10004FF60((uint64_t)v15, &qword_1011B11B0);
      v28((char *)v25, v2);
    }
  }
  result = sub_10004FF60((uint64_t)v7, v23);
  *v33 = v24 & 1;
  return result;
}

void sub_10088BF74(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v8 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011B17E8);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s5EventOMa(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    v17 = type metadata accessor for MusicSearchResultGroup(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    v19(v16, a6, v17);
    swift_storeEnumTagMultiPayload(v16, v14, 3);
    v19(v13, a6, v17);
    v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
    v20(v13, 0, 1, v17);
    v21 = _s4PageOMa(0);
    swift_storeEnumTagMultiPayload(v13, v21, 1);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v13, 0, 1, v21);
    swift_retain();
    sub_1003E9A5C((uint64_t)v16, (uint64_t)v13);
    swift_release();
    sub_10004FF60((uint64_t)v13, &qword_1011B17E8);
    sub_10005B748((uint64_t)v16, _s5EventOMa);
    v19(v10, a6, v17);
    v20(v10, 0, 1, v17);
    swift_retain();
    sub_1003EF404((uint64_t)v10);
    swift_release();
    sub_10004FF60((uint64_t)v10, &qword_1011B11B0);
  }
}

uint64_t sub_10088C18C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD v21[2];

  v21[0] = MusicSearchResultGroup.title.getter();
  v21[1] = v2;
  v3 = sub_100055B68();
  v4 = Text.init<A>(_:)(v21, &type metadata for String, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v12 = static Font.headline.getter(v11);
  v13 = Text.font(_:)(v12, v4, v6, v10, v8);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release();
  sub_100055BAC(v4, v6, v10);
  swift_bridgeObjectRelease();
  result = swift_getKeyPath(&unk_100ED4B48);
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v15;
  *(_BYTE *)(a1 + 16) = v17 & 1;
  *(_QWORD *)(a1 + 24) = v19;
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = 1;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_10088C278@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10088AA98(*v1, v1[1], a1);
}

uint64_t sub_10088C280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for GridItem.Size(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (_OWORD *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for GridItem(0);
  sub_10004FACC(v4, qword_1011CDC58);
  sub_100048B14(v4, (uint64_t)qword_1011CDC58);
  *v3 = xmmword_100EA9740;
  v5 = (*(uint64_t (**)(_OWORD *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for GridItem.Size.flexible(_:), v0);
  v6 = static Alignment.leading.getter(v5);
  return GridItem.init(_:spacing:alignment:)(v3, 0x4032000000000000, 0, v6, v7, 0);
}

uint64_t sub_10088C35C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  KeyPath = swift_getKeyPath(&unk_100ED4A58);
  v7 = swift_getKeyPath(&unk_100ED4A80);
  static Published.subscript.getter(&v14, a1, KeyPath, v7);
  swift_release();
  swift_release();
  v8 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRelease();
  if (v8)
  {
    *(_QWORD *)a3 = static HorizontalAlignment.center.getter(v9);
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = 1;
    v10 = sub_100007E8C(&qword_1011CDF50);
    sub_10088C468(a1, a2, a3 + *(int *)(v10 + 44));
    v11 = sub_100007E8C(&qword_1011CDF58);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 0, 1, v11);
  }
  else
  {
    v13 = sub_100007E8C(&qword_1011CDF58);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
}

uint64_t sub_10088C468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;

  v32 = a3;
  v5 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011CDF60);
  v31 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - v12;
  v14 = sub_100007E8C(&qword_1011CDF68);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v31 - v18;
  *(_QWORD *)v19 = static VerticalAlignment.center.getter(v20);
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  v21 = sub_100007E8C(&qword_1011CDF70);
  sub_10088C708(a1, a2, (uint64_t)&v19[*(int *)(v21 + 44)]);
  v33 = a1;
  v34 = a2;
  v22 = swift_bridgeObjectRetain();
  v23 = static HorizontalAlignment.center.getter(v22);
  v35 = 0;
  v24 = sub_100048748((unint64_t *)&qword_1011A0308, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(&v35, v5, v24);
  sub_100007E8C(&qword_1011CDF78);
  sub_10089D5F0(&qword_1011CDF80, &qword_1011CDF78);
  LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)(a2, v23, 0x4032000000000000, 0, v7, sub_10089D5E8);
  sub_10004A160((uint64_t)v19, (uint64_t)v16, &qword_1011CDF68);
  v25 = v31;
  v26 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v26(v10, v13, v8);
  v27 = v32;
  sub_10004A160((uint64_t)v16, v32, &qword_1011CDF68);
  v28 = sub_100007E8C(&qword_1011CDF88);
  v26((char *)(v27 + *(int *)(v28 + 48)), v10, v8);
  v29 = *(void (**)(char *, uint64_t))(v25 + 8);
  v29(v13, v8);
  sub_10004FF60((uint64_t)v19, &qword_1011CDF68);
  v29(v10, v8);
  return sub_10004FF60((uint64_t)v16, &qword_1011CDF68);
}

double sub_10088C708@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[16];
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[4];

  v54 = a1;
  v55 = a2;
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v51 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011CDFB0);
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100007E8C(&qword_1011CDFB8);
  __chkstk_darwin(v53);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v52 = (uint64_t)&v48 - v15;
  v16 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000011, 0x8000000100E47080);
  v17 = Text.init(_:tableName:bundle:comment:)(v16);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  v25 = static Font.headline.getter(v24);
  v26 = Text.font(_:)(v25, v17, v19, v23, v21);
  v48 = v27;
  v49 = v26;
  v29 = v28;
  v50 = v30;
  swift_release();
  sub_100055BAC(v17, v19, v23);
  swift_bridgeObjectRelease();
  v31 = String.LocalizationValue.init(stringLiteral:)(0x7261656C43, 0xE500000000000000);
  v32 = v51;
  static Locale.current.getter(v31);
  v61[0] = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v32, "Button Title to clear History", 29, 2);
  v61[1] = v33;
  v59 = v54;
  v60 = v55;
  v34 = sub_100007E8C(&qword_1011A5BA8);
  v35 = sub_100049F28(&qword_1011A5BB0, &qword_1011A5BA8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v36 = sub_100055B68();
  v37 = Menu.init<A>(_:content:)(v61, sub_10089D69C, v58, v34, &type metadata for String, v35, v36);
  v38 = static Font.subheadline.getter(v37);
  KeyPath = swift_getKeyPath(&unk_100ED4AA0);
  v41 = v56;
  v40 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v13, v11, v57);
  v42 = (uint64_t *)&v13[*(int *)(v53 + 36)];
  *v42 = KeyPath;
  v42[1] = v38;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v40);
  v43 = v52;
  sub_100065228((uint64_t)v13, v52, &qword_1011CDFB8);
  sub_10004A160(v43, (uint64_t)v13, &qword_1011CDFB8);
  v45 = v48;
  v44 = v49;
  *(_QWORD *)a3 = v49;
  *(_QWORD *)(a3 + 8) = v45;
  *(_BYTE *)(a3 + 16) = v29 & 1;
  *(_QWORD *)(a3 + 24) = v50;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 1;
  v46 = sub_100007E8C(&qword_1011CDFC0);
  sub_10004A160((uint64_t)v13, a3 + *(int *)(v46 + 64), &qword_1011CDFB8);
  sub_100055BBC(v44, v45, v29 & 1);
  swift_bridgeObjectRetain();
  sub_10004FF60(v43, &qword_1011CDFB8);
  sub_10004FF60((uint64_t)v13, &qword_1011CDFB8);
  sub_100055BAC(v44, v45, v29 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10088CABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_100007E8C((uint64_t *)&unk_1011C4E20);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  static ButtonRole.destructive.getter(v6);
  v7 = type metadata accessor for ButtonRole(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  v8 = swift_allocObject(&unk_1010DF978, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  v9 = sub_100007E8C(&qword_1011A2A80);
  v10 = sub_100049F28(&qword_1011A2BF8, &qword_1011A2A80, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  return Button.init(role:action:label:)(v6, sub_10089D6B0, v8, sub_10088CCC8, 0, v9, v10);
}

double sub_10088CBDC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  __n128 v5;
  double result;

  if (qword_10119C9C0 != -1)
    swift_once(&qword_10119C9C0, sub_100899D30);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100048B14(v0, (uint64_t)qword_10124DB48);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Did clear recently search items", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = swift_retain();
  dispatch thunk of MusicRecentlySearchedViewModel.clear()(v5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10088CCC8()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x8000000100E470C0);
  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_10088CD18(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  KeyPath = swift_getKeyPath(&unk_100ED4A58);
  v5 = swift_getKeyPath(&unk_100ED4A80);
  static Published.subscript.getter(&v15, a1, KeyPath, v5);
  swift_release();
  swift_release();
  v6 = v15;
  v7 = swift_allocObject(&unk_1010DF928, 32, 7);
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v15 = v6;
  v8 = swift_allocObject(&unk_1010DF950, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_10089D664;
  *(_QWORD *)(v8 + 24) = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  v9 = sub_100007E8C(&qword_1011CDF90);
  v10 = _s17SearchContentViewV14ResultItemViewVMa(0);
  v11 = sub_100049F28(&qword_1011CDF98, &qword_1011CDF90, (uint64_t)&protocol conformance descriptor for EnumeratedCollection<A>);
  v12 = sub_100048748(&qword_1011CDE60, _s17SearchContentViewV14ResultItemViewVMa, (uint64_t)&unk_100ED48E8);
  v13 = sub_100049F28(&qword_1011CDFA0, &qword_1011CDFA8, (uint64_t)&protocol conformance descriptor for EnumeratedCollection<A>.Pair);
  return ForEach<>.init(_:content:)(&v15, sub_10089D690, v8, v9, &type metadata for String, v10, v11, v12, v13);
}

uint64_t sub_10088CEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  __n128 v37;
  __n128 v38;
  void (*v39)(char *, uint64_t);
  __n128 v40;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  _QWORD v75[2];
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;

  v81 = a1;
  v82 = a2;
  v83 = a3;
  v3 = type metadata accessor for Song(0);
  v77 = *(_QWORD *)(v3 - 8);
  v78 = v3;
  v4 = __chkstk_darwin(v3);
  v76 = (char *)v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicRecentlySearchedViewModel.Entry.Source(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for GenericMusicItem(0);
  v79 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v75 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)v75 - v17;
  v19 = (int *)_s17SearchContentViewV14ResultItemViewVMa(0);
  __chkstk_darwin(v19);
  v21 = (char *)v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v18;
  v23 = MusicRecentlySearchedViewModel.Entry.item.getter(v22);
  MusicRecentlySearchedViewModel.Entry.source.getter(v23);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v24 != enum case for MusicRecentlySearchedViewModel.Entry.Source.catalog(_:))
  {
    if (v24 == enum case for MusicRecentlySearchedViewModel.Entry.Source.library(_:))
    {
      LODWORD(v25) = 1;
      goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  LODWORD(v25) = 0;
LABEL_6:
  v26 = v79;
  v27 = v82;
  swift_retain();
  MusicRecentlySearchedViewModel.Entry.item.getter(v28);
  v29 = type metadata accessor for MusicLibrary(0);
  static MusicLibrary.shared.getter(v29);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v12, v15, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v26 + 88))(v12, v10) == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v26 + 96))(v12, v10);
    v30 = v27;
    v31 = v77;
    v32 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
    LODWORD(v79) = (_DWORD)v25;
    v25 = v76;
    v33 = v12;
    v34 = v78;
    v32(v76, v33, v78);
    v75[1] = MusicLibrary.state<A>(for:)(v25, v34, &protocol witness table for Song);
    v35 = *(void (**)(char *, uint64_t))(v31 + 8);
    v27 = v30;
    v36 = v25;
    LOBYTE(v25) = v79;
    v35(v36, v34);
    v37 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v26 + 8))(v15, v10, v37);
    *((_QWORD *)&v85 + 1) = sub_100007E8C((uint64_t *)&unk_1011C72B0);
    v86 = sub_100049F28(&qword_1011AFA30, (uint64_t *)&unk_1011C72B0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    sub_100049F68(&v84);
    dispatch thunk of MusicLibrary.ItemState.$downloadStatus.getter(v38);
    swift_release();
  }
  else
  {
    v39 = *(void (**)(char *, uint64_t))(v26 + 8);
    v39(v12, v10);
    v40 = swift_release();
    ((void (*)(char *, uint64_t, __n128))v39)(v15, v10, v40);
    v86 = 0;
    v84 = 0u;
    v85 = 0u;
  }
  v41 = sub_100007E8C((uint64_t *)&unk_1011C72C0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v42 = OptionalObservableObject.init(publisher:)((uint64_t)&v84);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v21, v80, v10);
  *(_QWORD *)&v21[v19[5]] = v81;
  v21[v19[6]] = (char)v25;
  v21[v19[7]] = 1;
  v43 = &v21[v19[8]];
  v44 = type metadata accessor for Search.ViewModel(0);
  v45 = sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
  *(_QWORD *)v43 = ObservedObject.init(wrappedValue:)(v27, v44, v45);
  *((_QWORD *)v43 + 1) = v46;
  v47 = &v21[v19[9]];
  v48 = sub_100049F28(&qword_1011C3198, (uint64_t *)&unk_1011C72C0, (uint64_t)&protocol conformance descriptor for OptionalObservableObject<A>);
  *(_QWORD *)v47 = ObservedObject.init(wrappedValue:)(v42, v41, v48);
  *((_QWORD *)v47 + 1) = v49;
  v50 = &v21[v19[10]];
  *(_QWORD *)v50 = swift_getKeyPath(&unk_100ED4438);
  v50[8] = 0;
  v51 = &v21[v19[11]];
  v52 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v53 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v51 = EnvironmentObject.init()(v52, v53);
  *((_QWORD *)v51 + 1) = v54;
  v55 = &v21[v19[12]];
  v56 = type metadata accessor for NoticePresenter(0);
  v57 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *(_QWORD *)v55 = EnvironmentObject.init()(v56, v57);
  *((_QWORD *)v55 + 1) = v58;
  v59 = &v21[v19[13]];
  *(_QWORD *)v59 = sub_1000DEC04;
  *((_QWORD *)v59 + 1) = 0;
  v59[16] = 0;
  v60 = &v21[v19[14]];
  v61 = type metadata accessor for NavigationPusher();
  v62 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *(_QWORD *)v60 = EnvironmentObject.init()(v61, v62);
  *((_QWORD *)v60 + 1) = v63;
  v64 = &v21[v19[15]];
  v65 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v66 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v64 = EnvironmentObject.init()(v65, v66);
  *((_QWORD *)v64 + 1) = v67;
  v68 = &v21[v19[16]];
  v69 = type metadata accessor for TabSelectionManager(0);
  v70 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v68 = EnvironmentObject.init()(v69, v70);
  *((_QWORD *)v68 + 1) = v71;
  v72 = &v21[v19[17]];
  *(_QWORD *)v72 = swift_getKeyPath(&unk_100ED4460);
  *((_QWORD *)v72 + 1) = 0;
  v72[16] = 0;
  v73 = &v21[v19[18]];
  *(_QWORD *)v73 = swift_getKeyPath(&unk_100ED4488);
  *((_QWORD *)v73 + 1) = 0;
  v73[16] = 0;
  return sub_10005B6C0((uint64_t)v21, v83, _s17SearchContentViewV14ResultItemViewVMa);
}

uint64_t sub_10088D47C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10088C35C(*v1, v1[1], a1);
}

uint64_t sub_10088D484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t OpaqueTypeConformance2;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  __int16 v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v129 = a2;
  v123 = a3;
  v108 = sub_100007E8C(&qword_1011CDDC0);
  v105 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v104 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100007E8C(&qword_1011CDFD0);
  v110 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v109 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100007E8C(&qword_1011CDFD8);
  v121 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v107 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B1800);
  __chkstk_darwin(v7);
  v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011ACBD8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v106 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011CDFE0);
  __chkstk_darwin(v13);
  v122 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v120 = (uint64_t)&v100 - v16;
  v17 = type metadata accessor for AccessibilityChildBehavior(0);
  v18 = *(_QWORD *)(v17 - 8);
  v127 = v17;
  v128 = v18;
  __chkstk_darwin(v17);
  v126 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100007E8C(&qword_1011CDFE8);
  v112 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v24 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C(&qword_1011CDFF0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v26 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011CDFF8);
  v124 = *(_QWORD *)(v27 - 8);
  v125 = v27;
  __chkstk_darwin(v27);
  v113 = (char *)&v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_1011CE000);
  __chkstk_darwin(v29);
  v119 = (uint64_t)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v100 - v32;
  v34 = sub_1003E5E80();
  v130 = v11;
  v131 = v10;
  v103 = v22;
  v102 = v20;
  if (v34)
  {
    v35 = v34;
    v36 = static HorizontalAlignment.leading.getter(v34);
    v117 = a1;
    v101 = v9;
    v37 = v36;
    __chkstk_darwin(v36);
    v38 = v117;
    *(&v100 - 4) = (uint64_t)v35;
    *(&v100 - 3) = v38;
    v98 = v129;
    LODWORD(v132) = 0;
    v39 = sub_100048748((unint64_t *)&qword_1011A0308, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
    dispatch thunk of OptionSet.init(rawValue:)(&v132, v20, v39);
    v40 = sub_100007E8C(&qword_1011CE010);
    v41 = sub_10089D6D0();
    LazyVStack.init(alignment:spacing:pinnedViews:content:)(v37, 0x4020000000000000, 0, v22, sub_10089D6C4, &v100 - 6, v40, v41);
    swift_bridgeObjectRelease();
    v43 = v126;
    v42 = v127;
    static AccessibilityChildBehavior.contain.getter(v44);
    v45 = sub_100049F28(&qword_1011CE030, &qword_1011CDFE8, (uint64_t)&protocol conformance descriptor for LazyVStack<A>);
    v46 = v114;
    View.accessibilityElement(children:)(v43, v114, v45);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v43, v42);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v24, v46);
    v47 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000012, 0x8000000100E47150);
    v99 = 2;
    v98 = 42;
    v48 = Text.init(_:tableName:bundle:comment:)(v47);
    v50 = v49;
    v52 = v51;
    v54 = v53 & 1;
    v132 = v46;
    v133 = v45;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v132, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v56 = (uint64_t)v113;
    v57 = v116;
    View.accessibilityLabel(_:)(v48, v50, v54, v52, v116, OpaqueTypeConformance2);
    v58 = v48;
    v59 = v50;
    v9 = v101;
    a1 = v117;
    v60 = v54;
    v11 = v130;
    v10 = v131;
    sub_100055BAC(v58, v59, v60);
    v61 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v115 + 8))(v26, v57, v61);
    sub_100065228(v56, (uint64_t)v33, &qword_1011CDFF8);
    v62 = 0;
    v63 = (uint64_t)v33;
  }
  else
  {
    v62 = 1;
    v63 = (uint64_t)v33;
    v43 = v126;
  }
  v64.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56))(v63, v62, 1, v125);
  sub_1003E603C((uint64_t)v9, v64);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10004FF60((uint64_t)v9, &qword_1011B1800);
    v65 = v120;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v121 + 56))(v120, 1, 1, v118);
  }
  else
  {
    v66 = v106;
    v67 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v106, v9, v10);
    __chkstk_darwin(v67);
    *(&v100 - 4) = (uint64_t)v66;
    *(&v100 - 3) = a1;
    v68 = v129;
    v69 = swift_bridgeObjectRetain();
    v70 = static HorizontalAlignment.center.getter(v69);
    LODWORD(v132) = 0;
    v71 = sub_100048748((unint64_t *)&qword_1011A0308, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
    v72 = v103;
    dispatch thunk of OptionSet.init(rawValue:)(&v132, v102, v71);
    sub_100007E8C(&qword_1011CDE50);
    v98 = sub_10089D5F0(&qword_1011CDE58, &qword_1011CDE50);
    v73 = v104;
    v74 = LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)(v68, v70, 0x4032000000000000, 0, v72, sub_10089D6B8);
    static AccessibilityChildBehavior.contain.getter(v74);
    v75 = sub_100049F28(&qword_1011CDDF8, &qword_1011CDDC0, (uint64_t)&protocol conformance descriptor for LazyVGrid<A>);
    v76 = v43;
    v77 = v63;
    v78 = v109;
    v79 = v108;
    View.accessibilityElement(children:)(v76, v108, v75);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v76, v127);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v73, v79);
    v80 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x8000000100E470E0);
    v99 = 2;
    v98 = 66;
    v81 = Text.init(_:tableName:bundle:comment:)(v80);
    v83 = v82;
    v85 = v84;
    v87 = v86 & 1;
    v132 = v79;
    v133 = v75;
    v88 = swift_getOpaqueTypeConformance2(&v132, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v89 = (uint64_t)v107;
    v90 = v111;
    View.accessibilityLabel(_:)(v81, v83, v87, v85, v111, v88);
    sub_100055BAC(v81, v83, v87);
    v91 = swift_bridgeObjectRelease();
    v92 = v78;
    v63 = v77;
    (*(void (**)(char *, uint64_t, __n128))(v110 + 8))(v92, v90, v91);
    v65 = v120;
    sub_100065228(v89, v120, &qword_1011CDFD8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v121 + 56))(v65, 0, 1, v118);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v66, v131);
  }
  v94 = (uint64_t)v122;
  v93 = v123;
  v95 = v119;
  sub_10004A160(v63, v119, &qword_1011CE000);
  sub_10004A160(v65, v94, &qword_1011CDFE0);
  sub_10004A160(v95, v93, &qword_1011CE000);
  v96 = sub_100007E8C(&qword_1011CE008);
  sub_10004A160(v94, v93 + *(int *)(v96 + 48), &qword_1011CDFE0);
  sub_10004FF60(v65, &qword_1011CDFE0);
  sub_10004FF60(v63, &qword_1011CE000);
  sub_10004FF60(v94, &qword_1011CDFE0);
  return sub_10004FF60(v95, &qword_1011CE000);
}

uint64_t sub_10088DE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v12 = a1;
  v5 = swift_allocObject(&unk_1010DF9A0, 32, 7);
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v6 = sub_100007E8C(&qword_1011CE038);
  v7 = sub_100007E8C(&qword_1011CE028);
  v8 = sub_100049F28(&qword_1011CE040, &qword_1011CE038, (uint64_t)&protocol conformance descriptor for [A]);
  v9 = sub_100049F28(&qword_1011CE020, &qword_1011CE028, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v10 = sub_100048748(&qword_1011CE048, (uint64_t (*)(uint64_t))&type metadata accessor for MusicCatalogSearchSuggestionsResponse.Suggestion, (uint64_t)&protocol conformance descriptor for MusicCatalogSearchSuggestionsResponse.Suggestion);
  return ForEach<>.init(_:content:)(&v12, sub_10089D750, v5, v6, &type metadata for String, v7, v8, v9, v10);
}

uint64_t sub_10088DF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  char *v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t KeyPath;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char v81[16];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v67 = a3;
  v78 = a4;
  v80 = type metadata accessor for Divider(0);
  v77 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v79 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v76 = (char *)&v61 - v8;
  v9 = type metadata accessor for ButtonBorderShape(0);
  v74 = *(_QWORD *)(v9 - 8);
  v75 = v9;
  __chkstk_darwin(v9);
  v73 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BorderlessButtonStyle(0);
  v12 = *(_QWORD *)(v11 - 8);
  v68 = v11;
  v69 = v12;
  __chkstk_darwin(v11);
  v63 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicCatalogSearchSuggestionsResponse.Suggestion(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100007E8C(&qword_1011CE050);
  v66 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v62 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011CE058);
  v70 = *(_QWORD *)(v19 - 8);
  v71 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_1011CE060);
  __chkstk_darwin(v65);
  v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v24);
  v72 = (uint64_t)&v61 - v26;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v17, a1, v14, v25);
  v27 = *(unsigned __int8 *)(v15 + 80);
  v28 = (v27 + 32) & ~v27;
  v29 = swift_allocObject(&unk_1010DF9C8, v28 + v16, v27 | 7);
  v30 = a2;
  *(_QWORD *)(v29 + 16) = a2;
  v31 = v67;
  *(_QWORD *)(v29 + 24) = v67;
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v33 = v21;
  v32(v29 + v28, v17, v14);
  v82 = a1;
  v83 = v30;
  v84 = v31;
  v34 = sub_10089D810();
  swift_retain();
  swift_bridgeObjectRetain();
  v35 = v62;
  v36 = Button.init(action:label:)(sub_10089D7D4, v29, sub_10089D804, v81, &_s14SuggestionViewVN, v34);
  v37 = v63;
  BorderlessButtonStyle.init()(v36);
  v38 = sub_100049F28(&qword_1011CE070, &qword_1011CE050, (uint64_t)&protocol conformance descriptor for Button<A>);
  v39 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v40 = v64;
  v41 = v68;
  View.buttonStyle<A>(_:)(v37, v64, v68, v38, v39);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v37, v41);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v35, v40);
  if (qword_10119C8F0 != -1)
    swift_once(&qword_10119C8F0, sub_10085FB64);
  v42 = v73;
  static ButtonBorderShape.roundedRectangle(radius:)(*(double *)&qword_10124DA68);
  KeyPath = swift_getKeyPath(&unk_100ED4AD0);
  v44 = (uint64_t *)&v23[*(int *)(v65 + 36)];
  v45 = sub_100007E8C(&qword_1011A0610);
  v47 = v74;
  v46 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))((char *)v44 + *(int *)(v45 + 28), v42, v75);
  *v44 = KeyPath;
  v49 = v70;
  v48 = v71;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v23, v33, v71);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v46);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v48);
  v50 = v72;
  v51 = sub_100065228((uint64_t)v23, v72, &qword_1011CE060);
  v52 = v76;
  Divider.init()(v51);
  sub_10004A160(v50, (uint64_t)v23, &qword_1011CE060);
  v53 = v77;
  v54 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
  v56 = v79;
  v55 = v80;
  v54(v79, v52, v80);
  v57 = v78;
  sub_10004A160((uint64_t)v23, v78, &qword_1011CE060);
  v58 = sub_100007E8C(&qword_1011CE078);
  v54((char *)(v57 + *(int *)(v58 + 48)), v56, v55);
  v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  v59(v52, v55);
  sub_10004FF60(v50, &qword_1011CE060);
  v59(v56, v55);
  return sub_10004FF60((uint64_t)v23, &qword_1011CE060);
}

uint64_t sub_10088E480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  __n128 v33;
  uint8_t *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v5 = type metadata accessor for MusicCatalogSearchSuggestionsResponse.Suggestion(0);
  v54 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v55 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B17E8);
  __chkstk_darwin(v7);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s5EventOMa(0);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100007E8C(&qword_1011BEBF8);
  v14 = *(int *)(v13 + 48);
  v15 = *(int *)(v13 + 64);
  KeyPath = swift_getKeyPath(&unk_100ED44B0);
  v17 = swift_getKeyPath(&unk_100ED4530);
  static Published.subscript.getter(&v57, a1, KeyPath, v17);
  swift_release();
  swift_release();
  v18 = v58;
  *v12 = v57;
  v12[1] = v18;
  v19 = _s5EventO4ItemOMa(0);
  swift_storeEnumTagMultiPayload(v12, v19, 0);
  *((_BYTE *)v12 + v14) = 4;
  *((_BYTE *)v12 + v15) = sub_1003E6E04() & 1;
  v51 = v10;
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  v20 = _s4PageOMa(0);
  v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v52(v9, 1, 1, v20);
  sub_1003E9A5C((uint64_t)v12, (uint64_t)v9);
  v53 = v9;
  sub_10004FF60((uint64_t)v9, &qword_1011B17E8);
  sub_10005B748((uint64_t)v12, _s5EventOMa);
  if (qword_10119C9C0 != -1)
    swift_once(&qword_10119C9C0, sub_100899D30);
  v21 = type metadata accessor for Logger(0);
  sub_100048B14(v21, (uint64_t)qword_10124DB48);
  v22 = v54;
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 16))(v55, a3, v5);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(12, -1);
    v49 = v20;
    v27 = (uint8_t *)v26;
    v28 = swift_slowAlloc(32, -1);
    v57 = v28;
    v50 = a3;
    *(_DWORD *)v27 = 136446210;
    v48[1] = v27 + 4;
    v29 = sub_100048748(&qword_1011CE080, (uint64_t (*)(uint64_t))&type metadata accessor for MusicCatalogSearchSuggestionsResponse.Suggestion, (uint64_t)&protocol conformance descriptor for MusicCatalogSearchSuggestionsResponse.Suggestion);
    v30 = v55;
    v31 = dispatch thunk of CustomStringConvertible.description.getter(v5, v29);
    v56 = sub_100322200(v31, v32, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
    v33 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v30, v5, v33);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Did select Hint=%{public}s", v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    v34 = v27;
    v20 = v49;
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v55, v5);
  }

  v35 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  objc_msgSend(v35, "sendAction:to:from:forEvent:", "resignFirstResponder", 0, 0, 0);

  v36 = MusicCatalogSearchSuggestionsResponse.Suggestion.searchTerm.getter();
  sub_1003E8F0C(v36, v37);
  swift_bridgeObjectRelease();
  v38 = swift_getKeyPath(&unk_100ED4598);
  v39 = swift_getKeyPath(&unk_100ED45C0);
  static Published.subscript.getter(&v57, a1, v38, v39);
  swift_release();
  swift_release();
  LODWORD(v38) = v57;
  v40 = swift_getKeyPath(&unk_100ED4598);
  v41 = swift_getKeyPath(&unk_100ED45C0);
  LOBYTE(v57) = 0;
  swift_retain();
  static Published.subscript.setter(&v57, a1, v40, v41);
  sub_1003E7C88(v38);
  v42 = swift_getKeyPath(&unk_100ED44B0);
  v43 = swift_getKeyPath(&unk_100ED4530);
  static Published.subscript.getter(&v57, a1, v42, v43);
  swift_release();
  swift_release();
  v44 = v57;
  v45 = v58;
  *(_BYTE *)v12 = 21;
  v12[1] = v44;
  v12[2] = v45;
  swift_storeEnumTagMultiPayload(v12, v51, 4);
  v46 = (uint64_t)v53;
  v52(v53, 1, 1, v20);
  sub_1003E9A5C((uint64_t)v12, v46);
  sub_10004FF60(v46, &qword_1011B17E8);
  return sub_10005B748((uint64_t)v12, _s5EventOMa);
}

void sub_10088E9C8(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::String *a3@<X8>)
{
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;

  v5 = MusicCatalogSearchSuggestionsResponse.Suggestion.displayTerm.getter(a1);
  v7 = v6;
  KeyPath = swift_getKeyPath(&unk_100ED44B0);
  v9 = swift_getKeyPath(&unk_100ED4530);
  static Published.subscript.getter(&v11, a2, KeyPath, v9);
  swift_release();
  swift_release();
  v10 = String.trim()();
  swift_bridgeObjectRelease();
  a3->_countAndFlagsBits = v5;
  a3->_object = v7;
  a3[1] = v10;
}

uint64_t sub_10088EA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = sub_100007E8C(&qword_1011CDE68);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject(&unk_1010DF9F0, 32, 7);
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  v10 = sub_100007E8C(&qword_1011ACBD8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, a1, v10);
  v11 = swift_allocObject(&unk_1010DFA18, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_10089D88C;
  *(_QWORD *)(v11 + 24) = v9;
  v12 = _s17SearchContentViewV14ResultItemViewVMa(0);
  v13 = sub_100049F28(&qword_1011CDE70, &qword_1011CDE68, (uint64_t)&protocol conformance descriptor for EnumeratedCollection<A>);
  v14 = sub_100048748(&qword_1011CDE60, _s17SearchContentViewV14ResultItemViewVMa, (uint64_t)&unk_100ED48E8);
  v15 = sub_100049F28(&qword_1011CDE78, &qword_1011CDE80, (uint64_t)&protocol conformance descriptor for EnumeratedCollection<A>.Pair);
  swift_retain();
  swift_bridgeObjectRetain();
  return ForEach<>.init(_:content:)(v8, sub_10089C764, v11, v6, &type metadata for MusicItemID, v12, v13, v14, v15);
}

uint64_t sub_10088EC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, __n128);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;

  v63 = a1;
  v65 = a4;
  v6 = type metadata accessor for Song(0);
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GenericMusicItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - v14;
  v16 = (int *)_s17SearchContentViewV14ResultItemViewVMa(0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v62 = v15;
  v20(v15, a2, v9, v17);
  type metadata accessor for MusicLibrary(0);
  v64 = a3;
  swift_retain();
  static MusicLibrary.shared.getter(v21);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v12, a2, v9);
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v12, v9) == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    v22 = v60;
    v23 = v12;
    v24 = v61;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v8, v23, v61);
    MusicLibrary.state<A>(for:)(v8, v24, &protocol witness table for Song);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v24);
    swift_release();
    *((_QWORD *)&v67 + 1) = sub_100007E8C((uint64_t *)&unk_1011C72B0);
    v68 = sub_100049F28(&qword_1011AFA30, (uint64_t *)&unk_1011C72B0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    sub_100049F68(&v66);
    dispatch thunk of MusicLibrary.ItemState.$downloadStatus.getter(v25);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_release();
    v68 = 0;
    v66 = 0u;
    v67 = 0u;
  }
  v26 = sub_100007E8C((uint64_t *)&unk_1011C72C0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = OptionalObservableObject.init(publisher:)((uint64_t)&v66);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v62, v9);
  *(_QWORD *)&v19[v16[5]] = v63;
  v19[v16[6]] = 2;
  v19[v16[7]] = 1;
  v28 = &v19[v16[8]];
  v29 = type metadata accessor for Search.ViewModel(0);
  v30 = sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
  *(_QWORD *)v28 = ObservedObject.init(wrappedValue:)(v64, v29, v30);
  *((_QWORD *)v28 + 1) = v31;
  v32 = &v19[v16[9]];
  v33 = sub_100049F28(&qword_1011C3198, (uint64_t *)&unk_1011C72C0, (uint64_t)&protocol conformance descriptor for OptionalObservableObject<A>);
  *(_QWORD *)v32 = ObservedObject.init(wrappedValue:)(v27, v26, v33);
  *((_QWORD *)v32 + 1) = v34;
  v35 = &v19[v16[10]];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100ED4438);
  v35[8] = 0;
  v36 = &v19[v16[11]];
  v37 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v38 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v36 = EnvironmentObject.init()(v37, v38);
  *((_QWORD *)v36 + 1) = v39;
  v40 = &v19[v16[12]];
  v41 = type metadata accessor for NoticePresenter(0);
  v42 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *(_QWORD *)v40 = EnvironmentObject.init()(v41, v42);
  *((_QWORD *)v40 + 1) = v43;
  v44 = &v19[v16[13]];
  *(_QWORD *)v44 = sub_1000DEC04;
  *((_QWORD *)v44 + 1) = 0;
  v44[16] = 0;
  v45 = &v19[v16[14]];
  v46 = type metadata accessor for NavigationPusher();
  v47 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *(_QWORD *)v45 = EnvironmentObject.init()(v46, v47);
  *((_QWORD *)v45 + 1) = v48;
  v49 = &v19[v16[15]];
  v50 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v51 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v49 = EnvironmentObject.init()(v50, v51);
  *((_QWORD *)v49 + 1) = v52;
  v53 = &v19[v16[16]];
  v54 = type metadata accessor for TabSelectionManager(0);
  v55 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v53 = EnvironmentObject.init()(v54, v55);
  *((_QWORD *)v53 + 1) = v56;
  v57 = &v19[v16[17]];
  *(_QWORD *)v57 = swift_getKeyPath(&unk_100ED4460);
  *((_QWORD *)v57 + 1) = 0;
  v57[16] = 0;
  v58 = &v19[v16[18]];
  *(_QWORD *)v58 = swift_getKeyPath(&unk_100ED4488);
  *((_QWORD *)v58 + 1) = 0;
  v58[16] = 0;
  return sub_10005B6C0((uint64_t)v19, v65, _s17SearchContentViewV14ResultItemViewVMa);
}

uint64_t sub_10088F114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  v4 = v2[1];
  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v6 = sub_100007E8C(&qword_1011CDFC8);
  return sub_10088D484(v5, v4, a2 + *(int *)(v6 + 44));
}

void sub_10088F16C(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  char v133;
  __n128 v134;
  uint64_t v135;
  int v136;
  char v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  void (*v142)(char *, uint64_t);
  uint64_t v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  unint64_t v156;
  unint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  int *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  void (*v179)(char *, uint64_t);
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  unint64_t v185;
  unint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t OpaqueTypeConformance2;
  uint64_t v212;
  uint64_t v213;
  __n128 v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  __int128 *v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unsigned __int8 v230;
  id v231;
  int v232;
  uint64_t v233;
  int *v234;
  void *v235;
  uint64_t KeyPath;
  uint64_t v237;
  uint64_t v238;
  __n128 v239;
  uint64_t v240;
  char *v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  void (*v246)(char *, uint64_t, uint64_t);
  int *v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  void (*v251)(char *, uint64_t);
  char *v252;
  char *v253;
  uint64_t v254;
  id v255;
  char *v256;
  uint64_t v257;
  uint64_t *v258;
  uint64_t v259;
  uint64_t *v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t *v268;
  uint64_t v269;
  uint64_t v270;
  _QWORD *v271;
  _QWORD *v272;
  uint64_t v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char v278;
  int *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  unint64_t v289;
  char v290;
  unint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  _QWORD *v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void *v299;
  void *v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  _QWORD *v304;
  unint64_t v305;
  unint64_t v306;
  _QWORD *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  __n128 v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  uint64_t v321;
  __n128 v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  char *v334;
  char *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  uint64_t v340;
  char *v341;
  char *v342;
  void (*v343)(char *, uint64_t, uint64_t);
  char *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  char *v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  uint64_t v354;
  char *v355;
  char *v356;
  uint64_t v357;
  __n128 v358;
  char *v359;
  uint64_t v360;
  uint64_t (*v361)(char *, uint64_t, uint64_t);
  uint64_t v362;
  char *v363;
  void (*v364)(char *, uint64_t);
  int v365;
  uint64_t *v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  char *v371;
  uint64_t v372;
  char *v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  char *v379;
  void (*v380)(char *, uint64_t);
  void (*v381)(char *, uint64_t, uint64_t);
  char *v382;
  void (*v383)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v384;
  char *v385;
  uint64_t v386;
  char *v387;
  char *v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  _QWORD *v393;
  unint64_t v394;
  unint64_t v395;
  uint64_t v396;
  _QWORD *v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  char *v403;
  uint64_t v404;
  char *v405;
  uint64_t v406;
  char *v407;
  void (*v408)(char *, uint64_t);
  uint64_t v409;
  uint64_t v410;
  unint64_t v411;
  uint64_t v412;
  _QWORD *v413;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v415;
  unint64_t v416;
  _QWORD *v417;
  __n128 v418;
  char *v419;
  uint64_t v420;
  char *v421;
  char *v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  _QWORD *v427;
  unint64_t v428;
  unint64_t v429;
  _QWORD *v430;
  uint64_t v431;
  char *v432;
  uint64_t v433;
  char *v434;
  uint64_t v435;
  char *v436;
  char *v437;
  uint64_t v438;
  char *v439;
  uint64_t v440;
  char *v441;
  char *v442;
  uint64_t v443;
  char *v444;
  uint64_t v445;
  char *v446;
  char *v447;
  char *v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  _QWORD *v452;
  unint64_t v453;
  unint64_t v454;
  _QWORD *v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t *v460;
  uint64_t v461;
  char *v462;
  uint64_t v463;
  char *v464;
  char *v465;
  char *v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  _QWORD *v470;
  _QWORD *v471;
  unint64_t v472;
  unint64_t v473;
  _QWORD *v474;
  double v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  char *v480;
  char *v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  unint64_t v486;
  _QWORD *v487;
  unint64_t v488;
  unint64_t v489;
  _QWORD *v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  unsigned int (*v497)(uint64_t, uint64_t, uint64_t);
  char *v498;
  uint64_t v499;
  char *v500;
  char *v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  _QWORD *v512;
  unint64_t v513;
  unint64_t v514;
  _QWORD *v515;
  char *v516;
  uint64_t v517;
  char *v518;
  int v519;
  char *v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  _QWORD *v525;
  __n128 v526;
  unint64_t v527;
  unint64_t v528;
  _QWORD *v529;
  uint64_t v530;
  char *v531;
  uint64_t v532;
  char *v533;
  char *v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  _QWORD *v542;
  unint64_t v543;
  unint64_t v544;
  _QWORD *v545;
  char *v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  int v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  char *v554;
  uint64_t v555;
  char *v556;
  char *v557;
  uint64_t (*v558)(char *, uint64_t);
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  char *v562;
  char *v563;
  uint64_t v564;
  char *v565;
  char *v566;
  char *v567;
  uint64_t v568;
  char *v569;
  unint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  char v574;
  char v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  _QWORD *v579;
  unint64_t v580;
  unint64_t v581;
  _QWORD *v582;
  uint64_t v583;
  char *v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  char v588;
  void (*v589)(char *, uint64_t);
  uint64_t v590;
  uint64_t v591;
  uint64_t *v592;
  uint64_t v593;
  unint64_t *v594;
  void *v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  Swift::String v607;
  _QWORD v608[4];
  uint64_t v609;
  uint64_t v610;
  char *v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  char *v615;
  uint64_t v616;
  char *v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  char *v621;
  char *v622;
  char *v623;
  uint64_t v624;
  uint64_t v625;
  char *v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  char *v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  char *v637;
  char *v638;
  uint64_t v639;
  uint64_t v640;
  char *v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  char *v645;
  char *v646;
  uint64_t v647;
  uint64_t v648;
  char *v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  char *v653;
  char *v654;
  uint64_t v655;
  char *v656;
  char *v657;
  char *v658;
  uint64_t v659;
  uint64_t v660;
  char *v661;
  uint64_t v662;
  uint64_t v663;
  char *v664;
  char *v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  char *v669;
  uint64_t v670;
  char *v671;
  char *v672;
  uint64_t v673;
  char *v674;
  uint64_t v675;
  char *v676;
  char *v677;
  uint64_t v678;
  char *v679;
  char *v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  char *v684;
  uint64_t v685;
  uint64_t v686;
  char *v687;
  uint64_t v688;
  char *v689;
  char *v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  char *v699;
  uint64_t v700;
  uint64_t *v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  char *v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  char *v709;
  char *v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  char *v715;
  uint64_t v716;
  _QWORD *v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  char *v729;
  uint64_t v730;
  uint64_t v731;
  char *v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  char *v736;
  char *v737;
  void (*v738)(char *, uint64_t, uint64_t, __n128);
  char *v739;
  char *v740;
  char *v741;
  char *v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  char *v746;
  uint64_t v747;
  void (*v748)(char *, uint64_t);
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  int *v752;
  uint64_t v753;
  _BYTE v754[32];
  uint64_t v755;
  _QWORD v756[5];
  _QWORD v757[5];
  __int128 v758;
  __int128 v759;
  __int128 v760;
  uint64_t v761;
  __int128 v762;
  _QWORD v763[5];
  _QWORD v764[6];
  __n128 v765;
  char v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  _QWORD *v770;
  uint64_t v771;
  unint64_t v772;
  uint64_t v773;
  unint64_t v774;

  v735 = a1;
  v731 = type metadata accessor for TapGesture(0, a2);
  v730 = *(_QWORD *)(v731 - 8);
  __chkstk_darwin(v731);
  v729 = (char *)&v609 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v734 = sub_100007E8C(&qword_1011AD9B0);
  v733 = *(_QWORD *)(v734 - 8);
  __chkstk_darwin(v734);
  v732 = (char *)&v609 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v5);
  v744 = (uint64_t)&v609 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v713 = type metadata accessor for AccessibilityChildBehavior(0);
  v712 = *(_QWORD *)(v713 - 8);
  __chkstk_darwin(v713);
  v710 = (char *)&v609 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011CE088);
  __chkstk_darwin(v8);
  v701 = (uint64_t *)((char *)&v609 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v700 = sub_100007E8C(&qword_1011A2F00);
  __chkstk_darwin(v700);
  v702 = (uint64_t)&v609 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v706 = sub_100007E8C(&qword_1011A2F08);
  __chkstk_darwin(v706);
  v703 = (uint64_t)&v609 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v708 = sub_100007E8C(&qword_1011CE090);
  v707 = *(_QWORD *)(v708 - 8);
  __chkstk_darwin(v708);
  v705 = (char *)&v609 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011CE098);
  __chkstk_darwin(v13);
  v709 = (char *)&v609 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v714 = sub_100007E8C(&qword_1011CE0A0);
  __chkstk_darwin(v714);
  v711 = (uint64_t)&v609 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v717 = (_QWORD *)sub_100007E8C(&qword_1011CE0A8);
  v716 = *(v717 - 1);
  __chkstk_darwin(v717);
  v715 = (char *)&v609 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v719 = sub_100007E8C(&qword_1011CE0B0);
  v718 = *(_QWORD *)(v719 - 8);
  __chkstk_darwin(v719);
  v741 = (char *)&v609 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v743 = sub_100007E8C(&qword_1011CE0B8);
  __chkstk_darwin(v743);
  v742 = (char *)&v609 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v726 = sub_100007E8C(&qword_1011CE0C0);
  v725 = *(_QWORD *)(v726 - 8);
  __chkstk_darwin(v726);
  v724 = (uint64_t)&v609 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v728 = sub_100007E8C(&qword_1011CE0C8);
  v727 = *(_QWORD *)(v728 - 8);
  __chkstk_darwin(v728);
  v746 = (char *)&v609 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v747 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v745 = *(_QWORD *)(v747 - 8);
  __chkstk_darwin(v747);
  v750 = (uint64_t)&v609 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (int *)_s17SearchContentViewV14ResultItemViewVMa(0);
  v721 = *((_QWORD *)v22 - 1);
  __chkstk_darwin(v22);
  v723 = (uint64_t)&v609 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v720 = (uint64_t)&v609 - v25;
  __chkstk_darwin(v26);
  v704 = (uint64_t)&v609 - v27;
  v722 = v28;
  __chkstk_darwin(v29);
  v610 = (uint64_t)&v609 - v30;
  v682 = type metadata accessor for ArtworkImage.ViewModel(0);
  v681 = *(_QWORD *)(v682 - 8);
  __chkstk_darwin(v682);
  v612 = (uint64_t)&v609 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for UploadedVideo(0);
  v635 = *(_QWORD *)(v32 - 8);
  v636 = v32;
  __chkstk_darwin(v32);
  v641 = (char *)&v609 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for TVShow(0);
  v633 = *(_QWORD *)(v34 - 8);
  v634 = v34;
  v35 = __chkstk_darwin(v34);
  v632 = (char *)&v609 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v618 = type metadata accessor for Duration.TimeFormatStyle.Pattern(0, v35);
  v616 = *(_QWORD *)(v618 - 8);
  v37 = __chkstk_darwin(v618);
  v615 = (char *)&v609 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for Duration.TimeFormatStyle(0, v37);
  v619 = *(_QWORD *)(v39 - 8);
  v620 = v39;
  __chkstk_darwin(v39);
  v617 = (char *)&v609 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for TVEpisode(0);
  v647 = *(_QWORD *)(v41 - 8);
  v648 = v41;
  v42 = __chkstk_darwin(v41);
  v649 = (char *)&v609 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Date.FormatStyle.Symbol.Month(0, v42);
  v627 = *(_QWORD *)(v44 - 8);
  v628 = v44;
  v45 = __chkstk_darwin(v44);
  v626 = (char *)&v609 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Date.FormatStyle.Symbol.Day(0, v45);
  v624 = *(_QWORD *)(v47 - 8);
  v625 = v47;
  __chkstk_darwin(v47);
  v623 = (char *)&v609 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100007E8C(&qword_1011CE0D0);
  __chkstk_darwin(v49);
  v51 = (char *)&v609 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v695 = type metadata accessor for Date(0);
  v694 = *(_QWORD *)(v695 - 8);
  __chkstk_darwin(v695);
  v637 = (char *)&v609 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100007E8C(&qword_1011A58C8);
  __chkstk_darwin(v53);
  v642 = (uint64_t)&v609 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for EditorialNotes(0);
  v643 = *(_QWORD *)(v55 - 8);
  v644 = v55;
  v56 = __chkstk_darwin(v55);
  v638 = (char *)&v609 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v640 = type metadata accessor for Station.StreamingKind(0, v56);
  v629 = *(_QWORD *)(v640 - 8);
  __chkstk_darwin(v640);
  v611 = (char *)&v609 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v613 = sub_100007E8C(&qword_1011CE0D8);
  __chkstk_darwin(v613);
  v639 = (uint64_t)&v609 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100007E8C(&qword_1011CE0E0);
  __chkstk_darwin(v60);
  v645 = (char *)&v609 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011CE0E8);
  __chkstk_darwin(v62);
  v614 = (uint64_t)&v609 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v64);
  v630 = (uint64_t)&v609 - v65;
  __chkstk_darwin(v66);
  v631 = (uint64_t)&v609 - v67;
  v68 = type metadata accessor for Station(0);
  v651 = *(_QWORD *)(v68 - 8);
  v652 = v68;
  __chkstk_darwin(v68);
  v656 = (char *)&v609 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for RadioShow(0);
  v659 = *(_QWORD *)(v70 - 8);
  v660 = v70;
  __chkstk_darwin(v70);
  v658 = (char *)&v609 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v650 = type metadata accessor for Song(0);
  v655 = *(_QWORD *)(v650 - 8);
  __chkstk_darwin(v650);
  v654 = (char *)&v609 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for Playlist(0);
  v662 = *(_QWORD *)(v73 - 8);
  v663 = v73;
  __chkstk_darwin(v73);
  v661 = (char *)&v609 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for MusicVideo(0);
  v666 = *(_QWORD *)(v75 - 8);
  v667 = v75;
  __chkstk_darwin(v75);
  v665 = (char *)&v609 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v668 = type metadata accessor for MusicMovie(0);
  v670 = *(_QWORD *)(v668 - 8);
  __chkstk_darwin(v668);
  v669 = (char *)&v609 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v675 = type metadata accessor for Genre(0);
  v673 = *(_QWORD *)(v675 - 8);
  __chkstk_darwin(v675);
  v672 = (char *)&v609 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v79);
  v677 = (char *)&v609 - v80;
  v81 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v81);
  v680 = (char *)&v609 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v83);
  v657 = (char *)&v609 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v85);
  v671 = (char *)&v609 - v86;
  __chkstk_darwin(v87);
  v674 = (char *)&v609 - v88;
  __chkstk_darwin(v89);
  v684 = (char *)&v609 - v90;
  v685 = type metadata accessor for Artwork(0);
  v686 = *(_QWORD *)(v685 - 8);
  __chkstk_darwin(v685);
  v653 = (char *)&v609 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v92);
  v679 = (char *)&v609 - v93;
  __chkstk_darwin(v94);
  v676 = (char *)&v609 - v95;
  v96 = type metadata accessor for Curator(0);
  v683 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v98 = (char *)&v609 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  v692 = type metadata accessor for Date.FormatStyle.Symbol.Year(0);
  v691 = *(_QWORD *)(v692 - 8);
  __chkstk_darwin(v692);
  v690 = (char *)&v609 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  v693 = type metadata accessor for Date.FormatStyle(0);
  v688 = *(_QWORD *)(v693 - 8);
  __chkstk_darwin(v693);
  v621 = (char *)&v609 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v101);
  v622 = (char *)&v609 - v102;
  __chkstk_darwin(v103);
  v687 = (char *)&v609 - v104;
  __chkstk_darwin(v105);
  v689 = (char *)&v609 - v106;
  v107 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v107);
  v646 = (char *)&v609 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v109);
  v664 = (char *)&v609 - v110;
  __chkstk_darwin(v111);
  v113 = (char *)&v609 - v112;
  v697 = type metadata accessor for Album(0);
  v696 = *(_QWORD *)(v697 - 8);
  __chkstk_darwin(v697);
  v115 = (char *)&v609 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
  v751 = type metadata accessor for GenericMusicItem(0);
  v748 = *(void (**)(char *, uint64_t))(v751 - 8);
  __chkstk_darwin(v751);
  v699 = (char *)&v609 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v117);
  v740 = (char *)&v609 - v118;
  __chkstk_darwin(v119);
  v739 = (char *)&v609 - v120;
  __chkstk_darwin(v121);
  v123 = (char *)&v609 - v122;
  v124 = type metadata accessor for Locale(0);
  __chkstk_darwin(v124);
  v737 = (char *)&v609 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v126);
  v736 = (char *)&v609 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v128);
  v678 = (uint64_t)&v609 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v130);
  v771 = 0;
  v772 = 0;
  v769 = 0;
  v770 = _swiftEmptyArrayStorage;
  v767 = 0x3FF0000000000000;
  v768 = 0;
  v749 = (uint64_t)&v609 - v131;
  GenericMusicItem.artworkViewModel.getter((char *)&v609 - v131);
  v132 = Corner.large.unsafeMutableAddressor();
  v133 = *((_BYTE *)v132 + 16);
  v134 = *(__n128 *)v132;
  v765 = *(__n128 *)v132;
  v766 = v133;
  v752 = v22;
  v135 = v22[6];
  v753 = v2;
  v698 = v135;
  v136 = *(unsigned __int8 *)(v2 + v135);
  if (v136 != 2)
  {
    if ((v136 & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v137 = _stringCompareWithSmolCheck(_:_:expecting:)(0x676F6C61746163, 0xE700000000000000, 0x7972617262696CLL, 0xE700000000000000, 0);
      v134 = swift_bridgeObjectRelease();
      if ((v137 & 1) == 0)
        goto LABEL_7;
    }
    v138 = v736;
    v139 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100E47380);
    v140 = v737;
    static Locale.current.getter(v139);
    v768 = String.init(localized:table:bundle:locale:comment:)(v138, 0, 0, 0, v140, "Indicates if the result is from the library.", 44, 2);
    v769 = v141;
  }
LABEL_7:
  v142 = v748;
  v143 = v751;
  v738 = (void (*)(char *, uint64_t, uint64_t, __n128))*((_QWORD *)v748 + 2);
  v738(v123, v753, v751, v134);
  v144 = (*((uint64_t (**)(char *, uint64_t))v142 + 11))(v123, v143);
  if (v144 == enum case for GenericMusicItem.album(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 12))(v123, v143);
    v145 = v696;
    v146 = v697;
    (*(void (**)(char *, char *, uint64_t))(v696 + 32))(v115, v123, v697);
    v147 = v736;
    v148 = String.LocalizationValue.init(stringLiteral:)(0x6D75626C41, 0xE500000000000000);
    v149 = v737;
    static Locale.current.getter(v148);
    v736 = (char *)String.init(localized:table:bundle:locale:comment:)(v147, 0, 0, 0, v149, "Album result type", 17, 2);
    v737 = v150;
    v151 = Album.artistName.getter(v736);
    v153 = v152;
    v154 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
    v155 = v154;
    v157 = v154[2];
    v156 = v154[3];
    if (v157 >= v156 >> 1)
    {
      v154 = sub_100431480((_QWORD *)(v156 > 1), v157 + 1, 1, v154);
      v155 = v154;
    }
    v155[2] = v157 + 1;
    v158 = &v155[2 * v157];
    v158[4] = v151;
    v158[5] = v153;
    v770 = v155;
    if ((*(_BYTE *)(v753 + v752[7]) & 1) == 0)
    {
      Album.releaseDate.getter(v154);
      v159 = v694;
      v160 = v695;
      v161 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v694 + 48))(v113, 1, v695);
      if ((_DWORD)v161 == 1)
      {
        sub_10004FF60((uint64_t)v113, (uint64_t *)&unk_1011A30A0);
      }
      else
      {
        v175 = v687;
        v176 = static FormatStyle<>.dateTime.getter(v161);
        v177 = v690;
        static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v176);
        v178 = v689;
        Date.FormatStyle.year(_:)(v177);
        (*(void (**)(char *, uint64_t))(v691 + 8))(v177, v692);
        v179 = *(void (**)(char *, uint64_t))(v688 + 8);
        v180 = v693;
        v179(v175, v693);
        v181 = sub_100048748((unint64_t *)&unk_1011ACB20, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
        Date.formatted<A>(_:)(&v773, v178, v180, v181);
        v179(v178, v180);
        (*(void (**)(char *, uint64_t))(v159 + 8))(v113, v160);
        v183 = v773;
        v182 = v774;
        v184 = v770;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native(v184) & 1) == 0)
          v184 = sub_100431480(0, v184[2] + 1, 1, v184);
        v186 = v184[2];
        v185 = v184[3];
        v146 = v697;
        v145 = v696;
        if (v186 >= v185 >> 1)
          v184 = sub_100431480((_QWORD *)(v185 > 1), v186 + 1, 1, v184);
        v184[2] = v186 + 1;
        v187 = &v184[2 * v186];
        v187[4] = v183;
        v187[5] = v182;
        swift_bridgeObjectRelease();
        v770 = v184;
      }
    }
    (*(void (**)(char *, uint64_t))(v145 + 8))(v115, v146);
    v168 = v753;
    v169 = v752;
    v165 = (uint64_t)v736;
    goto LABEL_24;
  }
  if (v144 == enum case for GenericMusicItem.artist(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 1))(v123, v143);
    v162 = v736;
    v163 = String.LocalizationValue.init(stringLiteral:)(0x747369747241, 0xE600000000000000);
    v164 = v737;
    static Locale.current.getter(v163);
    v165 = String.init(localized:table:bundle:locale:comment:)(v162, 0, 0, 0, v164, "Artist result type", 18, 2);
    v167 = v166;
    v765 = 0uLL;
    v766 = 1;
    v168 = v753;
    v169 = v752;
    goto LABEL_25;
  }
  v170 = v51;
  v169 = v752;
  if (v144 == enum case for GenericMusicItem.composer(_:))
  {
    v171 = v736;
    v172 = String.LocalizationValue.init(stringLiteral:)(0x7265736F706D6F43, 0xE800000000000000);
    v173 = v737;
    static Locale.current.getter(v172);
    v165 = String.init(localized:table:bundle:locale:comment:)(v171, 0, 0, 0, v173, "Composer result type", 20, 2);
    v167 = v174;
LABEL_17:
    (*((void (**)(char *, uint64_t))v142 + 1))(v123, v143);
    v168 = v753;
    goto LABEL_25;
  }
  if (v144 == enum case for GenericMusicItem.curator(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 12))(v123, v143);
    v331 = v683;
    (*(void (**)(char *, char *, uint64_t))(v683 + 32))(v98, v123, v96);
    v332 = v736;
    v333 = String.LocalizationValue.init(stringLiteral:)(0x726F7461727543, 0xE700000000000000);
    v334 = v737;
    static Locale.current.getter(v333);
    v165 = String.init(localized:table:bundle:locale:comment:)(v332, 0, 0, 0, v334, "Curator result type", 19, 2);
    v167 = v335;
    v765 = 0uLL;
    v766 = 1;
    v336 = (uint64_t)v684;
    Curator.logoArtwork.getter();
    (*(void (**)(char *, uint64_t))(v331 + 8))(v98, v96);
    v337 = v686;
    v338 = v685;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v686 + 48))(v336, 1, v685) == 1)
    {
LABEL_41:
      sub_10004FF60(v336, &qword_1011A1440);
      v168 = v753;
      goto LABEL_25;
    }
    v343 = *(void (**)(char *, uint64_t, uint64_t))(v337 + 32);
    v344 = v676;
    v343(v676, v336, v338);
    goto LABEL_45;
  }
  if (v144 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 1))(v123, v143);
    v339 = v736;
    v340 = String.LocalizationValue.init(stringLiteral:)(0x79726F6765746143, 0xE800000000000000);
    v341 = v737;
    static Locale.current.getter(v340);
    v165 = String.init(localized:table:bundle:locale:comment:)(v339, 0, 0, 0, v341, "Category result type", 20, 2);
    v167 = v342;
    v168 = v753;
    goto LABEL_25;
  }
  if (v144 == enum case for GenericMusicItem.genre(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 12))(v123, v143);
    v349 = v677;
    v350 = v123;
    v351 = v673;
    v352 = v675;
    (*(void (**)(char *, char *, uint64_t))(v673 + 32))(v677, v350, v675);
    v353 = v736;
    v354 = String.LocalizationValue.init(stringLiteral:)(0x79726F6765746143, 0xE800000000000000);
    v355 = v737;
    static Locale.current.getter(v354);
    v165 = String.init(localized:table:bundle:locale:comment:)(v353, 0, 0, 0, v355, "Category result type", 20, 2);
    v737 = v356;
    v357 = (uint64_t)v671;
    Genre.logoArtwork.getter(v358);
    v359 = v672;
    (*(void (**)(char *, char *, uint64_t))(v351 + 16))(v672, v349, v352);
    v360 = v686;
    v361 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v686 + 48);
    v362 = v685;
    if (v361((char *)v357, 1, v685) == 1)
    {
      v363 = v674;
      Genre.artwork.getter();
      v364 = *(void (**)(char *, uint64_t))(v351 + 8);
      v364(v359, v352);
      v364(v677, v352);
      sub_10004FF60(v357, &qword_1011A1440);
      v365 = v361(v363, 1, v362);
      v168 = v753;
      if (v365 == 1)
      {
        v366 = &qword_1011A1440;
        v367 = (uint64_t)v363;
        goto LABEL_50;
      }
      v384 = v362;
      v381 = *(void (**)(char *, uint64_t, uint64_t))(v686 + 32);
      v167 = v737;
    }
    else
    {
      v379 = v359;
      v380 = *(void (**)(char *, uint64_t))(v351 + 8);
      v380(v379, v352);
      v380(v677, v352);
      v381 = *(void (**)(char *, uint64_t, uint64_t))(v360 + 32);
      v382 = v674;
      v381(v674, v357, v362);
      v383 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v360 + 56);
      v363 = v382;
      v383(v382, 0, 1, v362);
      v168 = v753;
      v167 = v737;
      v384 = v362;
    }
    v398 = (uint64_t)v679;
    v381(v679, (uint64_t)v363, v384);
    v399 = type metadata accessor for Artwork.CropStyle(0);
    v400 = (uint64_t)v680;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v399 - 8) + 56))(v680, 1, 1, v399);
    v401 = v678;
    ArtworkImage.ViewModel.init(artwork:cropStyle:)(v398, v400, v678);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v681 + 56))(v401, 0, 1, v682);
    sub_10089DC88(v401, v749);
LABEL_25:
    if (*(_BYTE *)(v168 + v169[7]) == 1)
      sub_1001FE3F8(0, 0, v165, (uint64_t)v167);
    else
      swift_bridgeObjectRelease();
    v188 = v750;
    v189 = sub_100545C34(v168, v750);
    v190 = static VerticalAlignment.center.getter(v189);
    v191 = (uint64_t)v701;
    *v701 = v190;
    *(_QWORD *)(v191 + 8) = 0x4028000000000000;
    *(_BYTE *)(v191 + 16) = 0;
    v192 = sub_100007E8C(&qword_1011CE0F0);
    v193 = sub_10089337C(v749, v168, (uint64_t)&v765, &v767, v188, &v771, (uint64_t *)&v770, &v768, v191 + *(int *)(v192 + 44));
    LOBYTE(v188) = static Edge.Set.all.getter(v193);
    v194 = v702;
    sub_10004A160(v191, v702, &qword_1011CE088);
    v195 = v194 + *(int *)(v700 + 36);
    *(_BYTE *)v195 = v188;
    __asm { FMOV            V0.2D, #9.0 }
    *(_OWORD *)(v195 + 8) = _Q0;
    *(_OWORD *)(v195 + 24) = xmmword_100ED4DE0;
    *(_BYTE *)(v195 + 40) = 0;
    v201 = sub_10004FF60(v191, &qword_1011CE088);
    v202 = static Alignment.leading.getter(v201);
    v203 = v703;
    sub_10014C968(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v703, 0.0, 1, INFINITY, 0, v202, v204);
    v205 = sub_10004FF60(v194, &qword_1011A2F00);
    v206 = v710;
    static AccessibilityChildBehavior.combine.getter(v205);
    v207 = sub_10089D8E8();
    v208 = v705;
    v209 = v706;
    View.accessibilityElement(children:)(v206, v706, v207);
    (*(void (**)(char *, uint64_t))(v712 + 8))(v206, v713);
    sub_10004FF60(v203, &qword_1011A2F08);
    v210 = sub_100892E4C(v168, (uint64_t *)&v770);
    v773 = v209;
    v774 = v207;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v773, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v212 = (uint64_t)v709;
    v213 = v708;
    View.accessibilityInputLabels(_:)(v210, v708, OpaqueTypeConformance2);
    v214 = swift_bridgeObjectRelease();
    v215 = (*(uint64_t (**)(char *, uint64_t, __n128))(v707 + 8))(v208, v213, v214);
    static Color.white.getter(v215);
    v216 = Color.opacity(_:)(0.15);
    swift_release();
    LOBYTE(v188) = static Edge.Set.all.getter(v217);
    v218 = v711;
    sub_10004A160(v212, v711, &qword_1011CE098);
    v219 = v714;
    v220 = v218 + *(int *)(v714 + 36);
    *(_QWORD *)v220 = v216;
    *(_BYTE *)(v220 + 8) = v188;
    sub_10004FF60(v212, &qword_1011CE098);
    v221 = Corner.search.unsafeMutableAddressor();
    v222 = *(_QWORD *)v221;
    v223 = *((_QWORD *)v221 + 1);
    LOBYTE(v212) = *((_BYTE *)v221 + 16);
    v224 = sub_10089D990();
    v225 = v715;
    View.corner(_:)(v222, v223, v212, v219, v224);
    sub_10004FF60(v218, &qword_1011CE0A0);
    v226 = *(_QWORD *)v221;
    v227 = *((_QWORD *)v221 + 1);
    LOBYTE(v221) = *((_BYTE *)v221 + 16);
    v773 = v219;
    v774 = v224;
    v228 = v753;
    v229 = swift_getOpaqueTypeConformance2(&v773, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v230 = v221;
    v231 = v717;
    View.hover(corner:outset:isRelative:namespace:isEnabled:)(v226, v227, v230, 0, 0, 1, 1, (uint64_t)v717, 0.0, v229);
    (*(void (**)(char *, id))(v716 + 8))(v225, v231);
    ((void (*)(char *, uint64_t, uint64_t))v738)(v739, v228, v751);
    v232 = *(unsigned __int8 *)(v228 + v698);
    v233 = v704;
    sub_10005B704(v228, v704, _s17SearchContentViewV14ResultItemViewVMa);
    if (v232 == 2)
    {
      swift_retain();
      LOBYTE(v232) = sub_1003E6E04();
      swift_release();
    }
    LODWORD(v737) = v232 & 1;
    sub_10005B748(v233, _s17SearchContentViewV14ResultItemViewVMa);
    v234 = v752;
    v235 = *(void **)(*(_QWORD *)(v228 + v752[8] + 8)
                    + OBJC_IVAR____TtCV5Music6Search9ViewModel_resultsComponentController);
    v736 = *(char **)(v228 + v752[5]);
    KeyPath = swift_getKeyPath(&unk_100ED4B00);
    v237 = swift_getKeyPath(&unk_100ED4B28);
    v717 = v235;
    swift_retain();
    static Published.subscript.getter(&v773, v238, KeyPath, v237);
    swift_release();
    swift_release();
    v239 = swift_release();
    v240 = v773;
    v241 = v742;
    v242 = &v742[*(int *)(v743 + 36)];
    v243 = v739;
    v244 = v228;
    v245 = v751;
    v246 = (void (*)(char *, uint64_t, uint64_t))v738;
    v738(v242, (uint64_t)v739, v751, v239);
    v247 = (int *)_s4LinkVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v745 + 16))(&v242[v247[8]], v750, v747);
    v242[v247[5]] = (char)v737;
    *(_QWORD *)&v242[v247[6]] = v717;
    *(_QWORD *)&v242[v247[7]] = v736;
    *(_QWORD *)&v242[v247[9]] = v240;
    v248 = v718;
    v249 = v741;
    v250 = v719;
    (*(void (**)(char *, char *, uint64_t))(v718 + 16))(v241, v741, v719);
    v251 = (void (*)(char *, uint64_t))*((_QWORD *)v748 + 1);
    v251(v243, v245);
    (*(void (**)(char *, uint64_t))(v248 + 8))(v249, v250);
    v246(v740, v244, v245);
    sub_1000E3E80();
    v252 = v699;
    v246(v699, v244, v245);
    v253 = (char *)MPCPlaybackIntent.init(_:)(v252);
    v254 = v244 + v234[10];
    v255 = *(id *)v254;
    LOBYTE(v252) = *(_BYTE *)(v254 + 8);
    sub_1000A4100(*(id *)v254, (char)v252);
    v256 = (char *)sub_100824044(v255, (char)v252);
    sub_1000A4224(v255, (char)v252);
    v257 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v257 - 8) + 56))(v744, 1, 1, v257);
    v258 = (uint64_t *)(v244 + v234[11]);
    v259 = *v258;
    if (!*v258)
    {
      v591 = v258[1];
      v592 = (uint64_t *)&unk_1011B4E40;
      v593 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
      v594 = (unint64_t *)&unk_10119CC10;
      v595 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_152:
      v605 = sub_100049F28(v594, v592, (uint64_t)v595);
      EnvironmentObject.error()(0, v591, v593, v605);
      __break(1u);
      goto LABEL_153;
    }
    v736 = v256;
    v737 = v253;
    v748 = v251;
    v764[3] = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v764[4] = &protocol witness table for <A> PresentedViewState<A>;
    v764[0] = v259;
    v260 = (uint64_t *)(v244 + v234[12]);
    v261 = *v260;
    if (*v260)
    {
      v763[3] = type metadata accessor for NoticePresenter(0);
      v763[4] = &protocol witness table for NoticePresenter;
      v763[0] = v261;
      v761 = 0;
      v760 = 0u;
      v759 = 0u;
      v758 = 0u;
      v762 = xmmword_100EA93A0;
      v262 = (char *)(v244 + v234[13]);
      v263 = *(_QWORD *)v262;
      v264 = *((_QWORD *)v262 + 1);
      v265 = v262[16];
      swift_retain();
      swift_retain();
      v266 = sub_100007E8C(&qword_1011A03A8);
      v738 = (void (*)(char *, uint64_t, uint64_t, __n128))sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v267 = StateObject.wrappedValue.getter(v263, v264, v265, v266, v738);
      v757[3] = v266;
      v757[4] = &protocol witness table for <A> PresentedViewState<A>;
      v757[0] = v267;
      v268 = (uint64_t *)(v244 + v234[14]);
      v269 = *v268;
      if (*v268)
      {
        v739 = (char *)v266;
        v270 = type metadata accessor for NavigationPusher();
        v756[4] = &off_1010D58B0;
        v756[3] = v270;
        v756[0] = v269;
        v755 = 0;
        memset(v754, 0, sizeof(v754));
        v271 = (_QWORD *)(v244 + v234[15]);
        if (*v271)
        {
          v741 = v262;
          v272 = (_QWORD *)(v244 + v234[16]);
          if (*v272)
          {
            v273 = v244;
            __chkstk_darwin(v270);
            v274 = sub_1000502A4();
            v275 = swift_getKeyPath(&unk_100ED45E0);
            __chkstk_darwin(v275);
            v608[2] = &type metadata for TabIdentifier;
            v608[3] = v274;
            v276 = swift_getKeyPath(&unk_100ED4618);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(&v773, v277, v275, v276);
            swift_release();
            swift_release();
            swift_release();
            v278 = v773;
            v279 = v752;
            v280 = v244 + v752[17];
            v281 = *(_QWORD *)v280;
            v282 = *(_QWORD *)(v280 + 8);
            LOBYTE(v276) = *(_BYTE *)(v280 + 16);
            sub_1000A410C(*(_QWORD *)v280, v282, v276);
            sub_100824224(v281, v282, v276);
            sub_1000A4230(v281, v282, v276);
            sub_10066D160(v278);
            v284 = v283;
            v286 = v285;
            swift_release();
            swift_bridgeObjectRelease();
            v287 = v244 + v279[18];
            v288 = *(_QWORD *)v287;
            v289 = *(_QWORD *)(v287 + 8);
            v290 = *(_BYTE *)(v287 + 16);
            sub_1000A411C(*(_QWORD *)v287, v289, v290);
            sub_100824400(v288, v289, v290, &v773);
            sub_1000A4240(v288, v289, v290);
            v292 = v773;
            v291 = v774;
            v293 = v273;
            v294 = v720;
            sub_10005B704(v293, v720, _s17SearchContentViewV14ResultItemViewVMa);
            if (v291 >> 60 != 15)
            {
LABEL_38:
              sub_10005B748(v294, _s17SearchContentViewV14ResultItemViewVMa);
              v297 = type metadata accessor for MusicLibrary(0);
              v298 = static MusicLibrary.shared.getter(v297);
              v299 = v737;
              v300 = v736;
              v301 = v744;
              v302 = v740;
              GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v737, v736, v298, v744, (uint64_t)v764, (unint64_t)v763, (unint64_t)&v758, (unint64_t)v757, &v773, (uint64_t)v756, (unint64_t)v754, v284, v286, v292, v291);
              swift_release();
              sub_1000822B4(v292, v291);

              swift_bridgeObjectRelease();
              sub_10004FF60((uint64_t)v754, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v758, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v301, (uint64_t *)&unk_1011A20C0);
              v748(v302, v751);
              sub_10004FF60((uint64_t)v756, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v757);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v763);
              v303 = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v764);
              __chkstk_darwin(v303);
              v304 = (_QWORD *)type metadata accessor for ContextualPreview(0);
              v305 = sub_10089DA58();
              v306 = sub_1000E3EE4();
              v307 = (_QWORD *)sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
              v308 = v743;
              v309 = v724;
              v310 = (uint64_t)v742;
              View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)&v773, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_10089DA50, (uint64_t)v608, (uint64_t)UIScreen.Dimensions.size.getter, 0, v724, v743, (uint64_t)&type metadata for ActionType, v304, v305, v306, v307);
              sub_1000E411C((uint64_t)&v773);
              sub_10004FF60(v310, &qword_1011CE0B8);
              v311 = StateObject.wrappedValue.getter(*(_QWORD *)v741, *((_QWORD *)v741 + 1), v741[16], v739, v738);
              *(_QWORD *)&v758 = v308;
              *((_QWORD *)&v758 + 1) = &type metadata for ActionType;
              *(_QWORD *)&v759 = v304;
              *((_QWORD *)&v759 + 1) = v305;
              *(_QWORD *)&v760 = v306;
              *((_QWORD *)&v760 + 1) = v307;
              v752 = (int *)swift_getOpaqueTypeConformance2(&v758, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
              v312 = v726;
              View.shareSheetPresenting(_:)(v311, v726, (uint64_t)v752);
              v313 = swift_release();
              (*(void (**)(uint64_t, uint64_t, __n128))(v725 + 8))(v309, v312, v313);
              v314 = v729;
              TapGesture.init(count:)(1);
              v315 = v723;
              sub_10005B704(v753, v723, _s17SearchContentViewV14ResultItemViewVMa);
              v316 = *(unsigned __int8 *)(v721 + 80);
              v317 = (v316 + 16) & ~v316;
              v318 = swift_allocObject(&unk_1010DFA40, v317 + v722, v316 | 7);
              sub_10005B6C0(v315, v318 + v317, _s17SearchContentViewV14ResultItemViewVMa);
              v319 = swift_allocObject(&unk_1010DFA68, 32, 7);
              *(_QWORD *)(v319 + 16) = sub_10089DC5C;
              *(_QWORD *)(v319 + 24) = v318;
              v320 = v732;
              v321 = v731;
              Gesture.onEnded(_:)(sub_100229354, v319, v731, &protocol witness table for TapGesture);
              v322 = swift_release();
              v323 = (*(uint64_t (**)(char *, uint64_t, __n128))(v730 + 8))(v314, v321, v322);
              v324 = static GestureMask.all.getter(v323);
              *(_QWORD *)&v758 = v312;
              *((_QWORD *)&v758 + 1) = v752;
              v325 = swift_getOpaqueTypeConformance2(&v758, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
              v326 = sub_100049F28(&qword_1011ADA10, &qword_1011AD9B0, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
              v327 = v324;
              v328 = v728;
              v329 = v734;
              v330 = v746;
              View.simultaneousGesture<A>(_:including:)(v320, v327, v728, v734, v325, v326);
              (*(void (**)(char *, uint64_t))(v733 + 8))(v320, v329);
              (*(void (**)(char *, uint64_t))(v727 + 8))(v330, v328);
              (*(void (**)(uint64_t, uint64_t))(v745 + 8))(v750, v747);
              sub_10004FF60(v749, (uint64_t *)&unk_1011A3E10);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return;
            }
            v295 = (_QWORD *)(v294 + v279[15]);
            if (*v295)
            {
              swift_retain();
              v292 = sub_10066D7A8();
              v291 = v296;
              swift_release();
              goto LABEL_38;
            }
          }
          else
          {
            v602 = v272[1];
            v603 = type metadata accessor for TabSelectionManager(0);
            v604 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain();
            swift_retain();
            EnvironmentObject.error()(0, v602, v603, v604);
            __break(1u);
          }
          v591 = v295[1];
          goto LABEL_151;
        }
LABEL_148:
        v591 = v271[1];
        swift_retain();
LABEL_151:
        v592 = (uint64_t *)&unk_10119CBE0;
        v593 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v594 = &qword_1011C5B90;
        v595 = &unk_100EC0A50;
        goto LABEL_152;
      }
    }
    else
    {
      v596 = v260[1];
      v597 = type metadata accessor for NoticePresenter(0);
      v598 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain();
      EnvironmentObject.error()(0, v596, v597, v598);
      __break(1u);
    }
    v599 = v268[1];
    v600 = type metadata accessor for NavigationPusher();
    v601 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v599, v600, v601);
    __break(1u);
    goto LABEL_148;
  }
  if (v144 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 12))(v123, v143);
    v369 = v669;
    v368 = v670;
    v370 = v668;
    (*(void (**)(char *, char *, uint64_t))(v670 + 32))(v669, v123, v668);
    v371 = v736;
    v372 = String.LocalizationValue.init(stringLiteral:)(0x6569766F4DLL, 0xE500000000000000);
    v373 = v737;
    static Locale.current.getter(v372);
    v165 = String.init(localized:table:bundle:locale:comment:)(v371, 0, 0, 0, v373, "Movie result type", 17, 2);
    v167 = v374;
    v375 = (uint64_t)v664;
    MusicMovie.releaseDate.getter();
    v376 = v694;
    v377 = v695;
    v378 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v694 + 48))(v375, 1, v695);
    if ((_DWORD)v378 != 1)
    {
      v402 = v376;
      v737 = v167;
      v403 = v687;
      v404 = static FormatStyle<>.dateTime.getter(v378);
      v405 = v690;
      static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v404);
      v406 = v375;
      v407 = v689;
      Date.FormatStyle.year(_:)(v405);
      (*(void (**)(char *, uint64_t))(v691 + 8))(v405, v692);
      v408 = *(void (**)(char *, uint64_t))(v688 + 8);
      v409 = v693;
      v408(v403, v693);
      v410 = sub_100048748((unint64_t *)&unk_1011ACB20, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
      Date.formatted<A>(_:)(&v773, v407, v409, v410);
      v408(v407, v409);
      (*(void (**)(uint64_t, uint64_t))(v402 + 8))(v406, v377);
      v412 = v773;
      v411 = v774;
      v413 = v770;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v413);
      v168 = v753;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v413 = sub_100431480(0, v413[2] + 1, 1, v413);
      v416 = v413[2];
      v415 = v413[3];
      if (v416 >= v415 >> 1)
        v413 = sub_100431480((_QWORD *)(v415 > 1), v416 + 1, 1, v413);
      v413[2] = v416 + 1;
      v417 = &v413[2 * v416];
      v417[4] = v412;
      v417[5] = v411;
      v418 = swift_bridgeObjectRelease();
      v770 = v413;
      (*(void (**)(char *, uint64_t, __n128))(v670 + 8))(v669, v370, v418);
      v767 = 0x3FE5555555555555;
      v169 = v752;
      goto LABEL_24;
    }
    sub_10004FF60(v375, (uint64_t *)&unk_1011A30A0);
    (*(void (**)(char *, uint64_t))(v368 + 8))(v369, v370);
    v767 = 0x3FE5555555555555;
    v168 = v753;
    goto LABEL_25;
  }
  if (v144 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 12))(v123, v143);
    (*(void (**)(char *, char *, uint64_t))(v666 + 32))(v665, v123, v667);
    v385 = v736;
    v386 = String.LocalizationValue.init(stringLiteral:)(0x695620636973754DLL, 0xEB000000006F6564);
    v387 = v737;
    static Locale.current.getter(v386);
    v165 = String.init(localized:table:bundle:locale:comment:)(v385, 0, 0, 0, v387, "Music Video result type", 23, 2);
    v389 = v388;
    v767 = 0x3FFC71C71C71C71CLL;
    v390 = MusicVideo.artistName.getter(v165);
    v392 = v391;
    v393 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
    v395 = v393[2];
    v394 = v393[3];
    if (v395 >= v394 >> 1)
      v393 = sub_100431480((_QWORD *)(v394 > 1), v395 + 1, 1, v393);
    v396 = v753;
    v393[2] = v395 + 1;
    v397 = &v393[2 * v395];
    v397[4] = v390;
    v397[5] = v392;
    v770 = v393;
    (*(void (**)(char *, uint64_t))(v666 + 8))(v665, v667);
LABEL_72:
    v167 = v389;
    v168 = v396;
    goto LABEL_25;
  }
  if (v144 == enum case for GenericMusicItem.playlist(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 12))(v123, v143);
    (*(void (**)(char *, char *, uint64_t))(v662 + 32))(v661, v123, v663);
    v419 = v736;
    v420 = String.LocalizationValue.init(stringLiteral:)(0x7473696C79616C50, 0xE800000000000000);
    v421 = v737;
    static Locale.current.getter(v420);
    v165 = String.init(localized:table:bundle:locale:comment:)(v419, 0, 0, 0, v421, "Item Type", 9, 2);
    v389 = v422;
    v423 = Playlist.curatorName.getter(v165);
    v396 = v753;
    if (v424)
    {
      v425 = v423;
      v426 = v424;
      swift_bridgeObjectRetain();
      v427 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
      v429 = v427[2];
      v428 = v427[3];
      if (v429 >= v428 >> 1)
        v427 = sub_100431480((_QWORD *)(v428 > 1), v429 + 1, 1, v427);
      v427[2] = v429 + 1;
      v430 = &v427[2 * v429];
      v430[4] = v425;
      v430[5] = v426;
      swift_bridgeObjectRelease();
      v770 = v427;
      v169 = v752;
    }
    (*(void (**)(char *, uint64_t))(v662 + 8))(v661, v663);
    goto LABEL_72;
  }
  if (v144 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 12))(v123, v143);
    v432 = v658;
    v431 = v659;
    v433 = v660;
    (*(void (**)(char *, char *, uint64_t))(v659 + 32))(v658, v123, v660);
    v434 = v736;
    v435 = String.LocalizationValue.init(stringLiteral:)(0x6853206F69646152, 0xEA0000000000776FLL);
    v436 = v737;
    static Locale.current.getter(v435);
    v165 = String.init(localized:table:bundle:locale:comment:)(v434, 0, 0, 0, v436, "Radio Show result type", 22, 2);
    v167 = v437;
    v336 = (uint64_t)v657;
    RadioShow.logoArtwork.getter();
    (*(void (**)(char *, uint64_t))(v431 + 8))(v432, v433);
    v438 = v686;
    v338 = v685;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v686 + 48))(v336, 1, v685) == 1)
      goto LABEL_41;
    v343 = *(void (**)(char *, uint64_t, uint64_t))(v438 + 32);
    v344 = v653;
    v343(v653, v336, v338);
LABEL_45:
    v345 = (uint64_t)v679;
    v343(v679, (uint64_t)v344, v338);
    v346 = type metadata accessor for Artwork.CropStyle(0);
    v347 = (uint64_t)v680;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v346 - 8) + 56))(v680, 1, 1, v346);
    v348 = v678;
    ArtworkImage.ViewModel.init(artwork:cropStyle:)(v345, v347, v678);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v681 + 56))(v348, 0, 1, v682);
    sub_10089DC88(v348, v749);
    v168 = v753;
    goto LABEL_25;
  }
  if (v144 == enum case for GenericMusicItem.recordLabel(_:))
  {
    v439 = v736;
    v440 = String.LocalizationValue.init(stringLiteral:)(0x4C2064726F636552, 0xEC0000006C656261);
    v441 = v737;
    static Locale.current.getter(v440);
    v165 = String.init(localized:table:bundle:locale:comment:)(v439, 0, 0, 0, v441, "Item Type", 9, 2);
    v167 = v442;
    v765 = 0uLL;
    v766 = 1;
    goto LABEL_17;
  }
  if (v144 == enum case for GenericMusicItem.song(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 12))(v123, v143);
    v443 = v650;
    (*(void (**)(char *, char *, uint64_t))(v655 + 32))(v654, v123, v650);
    v444 = v736;
    v445 = String.LocalizationValue.init(stringLiteral:)(1735290707, 0xE400000000000000);
    v446 = v737;
    static Locale.current.getter(v445);
    v165 = String.init(localized:table:bundle:locale:comment:)(v444, 0, 0, 0, v446, "Song result type", 16, 2);
    v448 = v447;
    v449 = Song.artistName.getter(v165);
    v451 = v450;
    v452 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
    v454 = v452[2];
    v453 = v452[3];
    if (v454 >= v453 >> 1)
      v452 = sub_100431480((_QWORD *)(v453 > 1), v454 + 1, 1, v452);
    v168 = v753;
    v452[2] = v454 + 1;
    v455 = &v452[2 * v454];
    v455[4] = v449;
    v455[5] = v451;
    v770 = v452;
    (*(void (**)(char *, uint64_t))(v655 + 8))(v654, v443);
    v167 = v448;
    goto LABEL_25;
  }
  if (v144 == enum case for GenericMusicItem.station(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 12))(v123, v143);
    v456 = (*(uint64_t (**)(char *, char *, uint64_t))(v651 + 32))(v656, v123, v652);
    v457 = (uint64_t)v645;
    Station.kind.getter(v456);
    v458 = type metadata accessor for Station.Kind(0);
    v459 = *(_QWORD *)(v458 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v459 + 48))(v457, 1, v458) == 1)
    {
      v460 = &qword_1011CE0E0;
      v461 = v457;
LABEL_85:
      sub_10004FF60(v461, v460);
LABEL_105:
      v516 = v736;
      v517 = String.LocalizationValue.init(stringLiteral:)(0x6E6F6974617453, 0xE700000000000000);
      v518 = v737;
      static Locale.current.getter(v517);
      v519 = 0;
LABEL_106:
      v165 = String.init(localized:table:bundle:locale:comment:)(v516, 0, 0, 0, v518, "Station result type", 19, 2);
      v737 = v520;
      v521 = Station.stationProviderName.getter(v165);
      if (v522)
      {
        v523 = v521;
        v524 = v522;
        v525 = v770;
        if ((swift_isUniquelyReferenced_nonNull_native(v770) & 1) == 0)
          v525 = sub_100431480(0, v525[2] + 1, 1, v525);
        v528 = v525[2];
        v527 = v525[3];
        if (v528 >= v527 >> 1)
          v525 = sub_100431480((_QWORD *)(v527 > 1), v528 + 1, 1, v525);
        v525[2] = v528 + 1;
        v529 = &v525[2 * v528];
        v529[4] = v523;
        v529[5] = v524;
        v770 = v525;
      }
      else
      {
        v530 = v642;
        Station.editorialNotes.getter(v521);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v643 + 48))(v530, 1, v644) == 1)
        {
          sub_10004FF60(v642, &qword_1011A58C8);
        }
        else
        {
          v537 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v643 + 32))(v638, v642, v644);
          if (v519)
            v538 = EditorialNotes.standard.getter(v537);
          else
            v538 = EditorialNotes.short.getter(v537);
          v540 = v538;
          v541 = v539;
          if (v539)
          {
            v542 = v770;
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native(v542) & 1) == 0)
              v542 = sub_100431480(0, v542[2] + 1, 1, v542);
            v544 = v542[2];
            v543 = v542[3];
            if (v544 >= v543 >> 1)
              v542 = sub_100431480((_QWORD *)(v543 > 1), v544 + 1, 1, v542);
            v542[2] = v544 + 1;
            v545 = &v542[2 * v544];
            v545[4] = v540;
            v545[5] = v541;
            v770 = v542;
          }
          (*(void (**)(char *, uint64_t))(v643 + 8))(v638, v644);
          v526 = swift_bridgeObjectRelease();
        }
      }
      v168 = v753;
      v546 = v646;
      v547 = (uint64_t)v170;
      Station.airTime.getter(v526);
      v548 = type metadata accessor for Station.AirTime(0);
      v549 = *(_QWORD *)(v548 - 8);
      v550 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v549 + 48))(v547, 1, v548);
      v169 = v752;
      v551 = v695;
      if (v550 == 1)
      {
        sub_10004FF60(v547, &qword_1011CE0D0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v694 + 56))(v546, 1, 1, v551);
      }
      else
      {
        Station.AirTime.startDate.getter();
        (*(void (**)(uint64_t, uint64_t))(v549 + 8))(v547, v548);
        v552 = v694;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v694 + 56))(v546, 0, 1, v551);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v552 + 48))(v546, 1, v551) != 1)
        {
          v553 = (*(uint64_t (**)(char *, char *, uint64_t))(v694 + 32))(v637, v546, v695);
          v554 = v621;
          v555 = static FormatStyle<>.dateTime.getter(v553);
          v556 = v623;
          static Date.FormatStyle.Symbol.Day.defaultDigits.getter(v555);
          v557 = v622;
          Date.FormatStyle.day(_:)(v556);
          (*(void (**)(char *, uint64_t))(v624 + 8))(v556, v625);
          v558 = *(uint64_t (**)(char *, uint64_t))(v688 + 8);
          v559 = v693;
          v560 = v558(v554, v693);
          v561 = v168;
          v562 = v626;
          static Date.FormatStyle.Symbol.Month.abbreviated.getter(v560);
          v563 = v687;
          Date.FormatStyle.month(_:)(v562);
          (*(void (**)(char *, uint64_t))(v627 + 8))(v562, v628);
          v564 = v558(v557, v559);
          v565 = v690;
          static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v564);
          v566 = v689;
          Date.FormatStyle.year(_:)(v565);
          v567 = v565;
          v168 = v561;
          (*(void (**)(char *, uint64_t))(v691 + 8))(v567, v692);
          v558(v563, v559);
          v568 = sub_100048748((unint64_t *)&unk_1011ACB20, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
          v569 = v637;
          Date.formatted<A>(_:)(&v773, v566, v559, v568);
          v558(v566, v559);
          (*(void (**)(char *, uint64_t))(v694 + 8))(v569, v695);
          (*(void (**)(char *, uint64_t))(v651 + 8))(v656, v652);
          v571 = v773;
          v570 = v774;
          swift_bridgeObjectRelease();
          v771 = v571;
          v772 = v570;
          goto LABEL_24;
        }
      }
      (*(void (**)(char *, uint64_t))(v651 + 8))(v656, v652);
      v366 = (uint64_t *)&unk_1011A30A0;
      v367 = (uint64_t)v546;
LABEL_50:
      sub_10004FF60(v367, v366);
LABEL_24:
      v167 = v737;
      goto LABEL_25;
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v459 + 88))(v457, v458) != enum case for Station.Kind.streaming(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v459 + 8))(v457, v458);
      goto LABEL_105;
    }
    (*(void (**)(uint64_t, uint64_t))(v459 + 96))(v457, v458);
    v491 = v631;
    sub_100065228(v457, v631, &qword_1011CE0E8);
    v492 = v629;
    v493 = v630;
    v494 = v640;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v629 + 104))(v630, enum case for Station.StreamingKind.episode(_:), v640);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v492 + 56))(v493, 0, 1, v494);
    v495 = v639;
    v496 = v639 + *(int *)(v613 + 48);
    sub_10004A160(v491, v639, &qword_1011CE0E8);
    sub_10004A160(v493, v496, &qword_1011CE0E8);
    v497 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v492 + 48);
    if (v497(v495, 1, v494) == 1)
    {
      sub_10004FF60(v630, &qword_1011CE0E8);
      sub_10004FF60(v631, &qword_1011CE0E8);
      if (v497(v496, 1, v640) == 1)
      {
        sub_10004FF60(v639, &qword_1011CE0E8);
        goto LABEL_144;
      }
    }
    else
    {
      sub_10004A160(v639, v614, &qword_1011CE0E8);
      if (v497(v496, 1, v640) != 1)
      {
        v583 = v629;
        v584 = v611;
        v585 = v640;
        (*(void (**)(char *, uint64_t, uint64_t))(v629 + 32))(v611, v496, v640);
        v586 = sub_100048748(&qword_1011CE130, (uint64_t (*)(uint64_t))&type metadata accessor for Station.StreamingKind, (uint64_t)&protocol conformance descriptor for Station.StreamingKind);
        v587 = v614;
        v588 = dispatch thunk of static Equatable.== infix(_:_:)(v614, v584, v585, v586);
        v589 = *(void (**)(char *, uint64_t))(v583 + 8);
        v589(v584, v585);
        sub_10004FF60(v630, &qword_1011CE0E8);
        sub_10004FF60(v631, &qword_1011CE0E8);
        v589((char *)v587, v585);
        sub_10004FF60(v639, &qword_1011CE0E8);
        if ((v588 & 1) == 0)
          goto LABEL_105;
LABEL_144:
        v516 = v736;
        v590 = String.LocalizationValue.init(stringLiteral:)(0x7045206F69646152, 0xED000065646F7369);
        v518 = v737;
        static Locale.current.getter(v590);
        v519 = 1;
        goto LABEL_106;
      }
      sub_10004FF60(v630, &qword_1011CE0E8);
      sub_10004FF60(v631, &qword_1011CE0E8);
      (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v614, v640);
    }
    v460 = &qword_1011CE0D8;
    v461 = v639;
    goto LABEL_85;
  }
  if (v144 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*((void (**)(char *, uint64_t))v142 + 12))(v123, v143);
    (*(void (**)(char *, char *, uint64_t))(v647 + 32))(v649, v123, v648);
    v462 = v736;
    v463 = String.LocalizationValue.init(stringLiteral:)(0x6F73697045205654, 0xEA00000000006564);
    v464 = v737;
    static Locale.current.getter(v463);
    v165 = String.init(localized:table:bundle:locale:comment:)(v462, 0, 0, 0, v464, "TV Episode result type", 22, 2);
    v466 = v465;
    v767 = 0x3FFC71C71C71C71CLL;
    v467 = TVEpisode.showName.getter(v165);
    v469 = v468;
    v470 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
    v471 = v470;
    v473 = v470[2];
    v472 = v470[3];
    if (v473 >= v472 >> 1)
    {
      v470 = sub_100431480((_QWORD *)(v472 > 1), v473 + 1, 1, v470);
      v471 = v470;
    }
    v471[2] = v473 + 1;
    v474 = &v471[2 * v473];
    v474[4] = v467;
    v474[5] = v469;
    v770 = v471;
    v475 = COERCE_DOUBLE(TVEpisode.duration.getter(v470));
    if ((v476 & 1) == 0)
    {
      v477 = static Duration.seconds(_:)(*(_QWORD *)&v475, v476, v475);
      v479 = v478;
      v480 = v615;
      static Duration.TimeFormatStyle.Pattern.minuteSecond.getter();
      v481 = v617;
      static FormatStyle<>.time(pattern:)(v480);
      (*(void (**)(char *, uint64_t))(v616 + 8))(v480, v618);
      v482 = sub_100048748(&qword_1011A5620, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.TimeFormatStyle, (uint64_t)&protocol conformance descriptor for Duration.TimeFormatStyle);
      v483 = v477;
      v484 = v620;
      Duration.formatted<A>(_:)(&v773, v481, v483, v479, v620, v482);
      (*(void (**)(char *, uint64_t))(v619 + 8))(v481, v484);
      v485 = v773;
      v486 = v774;
      v487 = v770;
      if ((swift_isUniquelyReferenced_nonNull_native(v770) & 1) == 0)
        v487 = sub_100431480(0, v487[2] + 1, 1, v487);
      v489 = v487[2];
      v488 = v487[3];
      if (v489 >= v488 >> 1)
        v487 = sub_100431480((_QWORD *)(v488 > 1), v489 + 1, 1, v487);
      v487[2] = v489 + 1;
      v490 = &v487[2 * v489];
      v490[4] = v485;
      v490[5] = v486;
      v770 = v487;
    }
    (*(void (**)(char *, uint64_t))(v647 + 8))(v649, v648);
LABEL_142:
    v168 = v753;
    v169 = v752;
    v167 = v466;
    goto LABEL_25;
  }
  if (v144 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*((void (**)(char *, uint64_t))v748 + 12))(v123, v751);
    (*(void (**)(char *, char *, uint64_t))(v633 + 32))(v632, v123, v634);
    v498 = v736;
    v499 = String.LocalizationValue.init(stringLiteral:)(0x776F6853205654, 0xE700000000000000);
    v500 = v737;
    static Locale.current.getter(v499);
    v165 = String.init(localized:table:bundle:locale:comment:)(v498, 0, 0, 0, v500, "Item Type", 9, 2);
    v466 = v501;
    v502 = String.LocalizationValue.init(stringLiteral:)(0x6F73697045206425, 0xED00002973286564);
    static Locale.current.getter(v502);
    v503 = String.init(localized:table:bundle:locale:comment:)(v498, 0, 0, 0, v500, "Numbers of episodes", 19, 2);
    v505 = v504;
    v506 = sub_100007E8C(&qword_1011E7E30);
    v507 = swift_allocObject(v506, 72, 7);
    *(_OWORD *)(v507 + 16) = xmmword_100EA7AA0;
    v508 = TVShow.episodeCount.getter();
    *(_QWORD *)(v507 + 56) = &type metadata for Int;
    *(_QWORD *)(v507 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v507 + 32) = v508;
    v509 = static String.localizedStringWithFormat(_:_:)(v503, v505, v507);
    v511 = v510;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v512 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
    v514 = v512[2];
    v513 = v512[3];
    if (v514 >= v513 >> 1)
      v512 = sub_100431480((_QWORD *)(v513 > 1), v514 + 1, 1, v512);
    v512[2] = v514 + 1;
    v515 = &v512[2 * v514];
    v515[4] = v509;
    v515[5] = v511;
    v770 = v512;
    (*(void (**)(char *, uint64_t))(v633 + 8))(v632, v634);
    goto LABEL_142;
  }
  if (v144 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*((void (**)(char *, uint64_t))v748 + 12))(v123, v751);
    (*(void (**)(char *, char *, uint64_t))(v635 + 32))(v641, v123, v636);
    v531 = v736;
    v532 = String.LocalizationValue.init(stringLiteral:)(0x6F65646956, 0xE500000000000000);
    v533 = v737;
    static Locale.current.getter(v532);
    v165 = String.init(localized:table:bundle:locale:comment:)(v531, 0, 0, 0, v533, "Video result type", 17, 2);
    v466 = v534;
    v535 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v681 + 48))(v749, 1, v682);
    if ((_DWORD)v535)
    {
      v536 = 0x3FFC71C71C71C71CLL;
    }
    else
    {
      v572 = v612;
      sub_10005B704(v749, v612, type metadata accessor for ArtworkImage.ViewModel);
      v573 = ArtworkImage.ViewModel.calculatedAspectRatio.getter();
      v575 = v574;
      v535 = sub_10005B748(v572, type metadata accessor for ArtworkImage.ViewModel);
      v536 = v573;
      if ((v575 & 1) != 0)
        v536 = 0x3FFC71C71C71C71CLL;
    }
    v767 = v536;
    v576 = UploadedVideo.artistName.getter(v535);
    v578 = v577;
    v579 = v770;
    if ((swift_isUniquelyReferenced_nonNull_native(v770) & 1) == 0)
      v579 = sub_100431480(0, v579[2] + 1, 1, v579);
    v581 = v579[2];
    v580 = v579[3];
    if (v581 >= v580 >> 1)
      v579 = sub_100431480((_QWORD *)(v580 > 1), v581 + 1, 1, v579);
    v579[2] = v581 + 1;
    v582 = &v579[2 * v581];
    v582[4] = v576;
    v582[5] = v578;
    v770 = v579;
    (*(void (**)(char *, uint64_t))(v635 + 8))(v641, v636);
    goto LABEL_142;
  }
LABEL_153:
  sub_10005B704(v753, v610, _s17SearchContentViewV14ResultItemViewVMa);
  v773 = 0;
  v774 = 0xE000000000000000;
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease();
  v773 = 0xD000000000000033;
  v774 = 0x8000000100E471C0;
  v606 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
  v607._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v751, v606);
  String.append(_:)(v607);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v773, v774, "Music/Search.swift", 18, 2, 449, 0);
  __break(1u);
}

_QWORD *sub_100892E4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE v86[24];

  v3 = ((uint64_t (*)(void))GenericMusicItem.title.getter)();
  v5 = v4;
  v6 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
  v8 = v6[2];
  v7 = v6[3];
  if (v8 >= v7 >> 1)
    v6 = sub_100431480((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v6[2] = v8 + 1;
  v9 = &v6[2 * v8];
  v9[4] = v3;
  v9[5] = v5;
  swift_beginAccess(a2, v86, 0, 0);
  v84 = *a2;
  swift_bridgeObjectRetain();
  v10 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v11 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = BidirectionalCollection<>.joined(separator:)(548913696, 0xA400000000000000, v10, v11);
  v14 = v13;
  swift_bridgeObjectRelease();
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = v12 & 0xFFFFFFFFFFFFLL;
  v81 = v15;
  if (v15)
  {
    v16 = v6[2];
    v17 = v6[3];
    swift_bridgeObjectRetain();
    if (v16 >= v17 >> 1)
      v6 = sub_100431480((_QWORD *)(v17 > 1), v16 + 1, 1, v6);
    v6[2] = v16 + 1;
    v18 = &v6[2 * v16];
    v18[4] = v12;
    v18[5] = v14;
  }
  swift_bridgeObjectRetain();
  v82 = v11;
  v83 = v10;
  v19 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v10, v11);
  v21 = v20;
  swift_bridgeObjectRelease();
  v84 = v19;
  v85 = v21;
  v22 = sub_100055B68();
  v23 = Text.init<A>(_:)(&v84, &type metadata for String, v22);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v30 = sub_100432428(0, 1, 1, _swiftEmptyArrayStorage);
  v32 = v30[2];
  v31 = v30[3];
  if (v32 >= v31 >> 1)
    v30 = sub_100432428((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
  v30[2] = v32 + 1;
  v33 = &v30[4 * v32];
  v33[4] = v23;
  v33[5] = v25;
  *((_BYTE *)v33 + 48) = v27 & 1;
  v33[7] = v29;
  if ((GenericMusicItem.explicitBadge(_:)(1) - 2) >= 3u)
  {
    if (qword_10119BE50 != -1)
      swift_once(&qword_10119BE50, sub_1002F406C);
    v36 = qword_10124CD50;
    v35 = *(_QWORD *)algn_10124CD58;
    swift_bridgeObjectRetain_n(*(_QWORD *)algn_10124CD58, 2);
    if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      v6 = sub_100431480(0, v6[2] + 1, 1, v6);
    v38 = v6[2];
    v37 = v6[3];
    if (v38 >= v37 >> 1)
      v6 = sub_100431480((_QWORD *)(v37 > 1), v38 + 1, 1, v6);
    v6[2] = v38 + 1;
    v39 = &v6[2 * v38];
    v39[4] = v36;
    v39[5] = v35;
    swift_bridgeObjectRelease();
    if (v81)
    {
      v84 = (uint64_t)v6;
      v40 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v83, v82);
      v42 = v41;
      swift_bridgeObjectRelease();
      v84 = v40;
      v85 = v42;
      v43 = Text.init<A>(_:)(&v84, &type metadata for String, v22);
      v45 = v44;
      v47 = v46;
      v49 = v48;
      v51 = v30[2];
      v50 = v30[3];
      if (v51 >= v50 >> 1)
        v30 = sub_100432428((_QWORD *)(v50 > 1), v51 + 1, 1, v30);
      v30[2] = v51 + 1;
      v52 = &v30[4 * v51];
      v52[4] = v43;
      v52[5] = v45;
      *((_BYTE *)v52 + 48) = v47 & 1;
      v52[7] = v49;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v53 = sub_100007E8C((uint64_t *)&unk_1011A6110);
    v54 = swift_allocObject(v53, 64, 7);
    *(_OWORD *)(v54 + 16) = xmmword_100EA7A80;
    *(_QWORD *)(v54 + 32) = ((uint64_t (*)(void))GenericMusicItem.title.getter)();
    *(_QWORD *)(v54 + 40) = v55;
    *(_QWORD *)(v54 + 48) = v36;
    *(_QWORD *)(v54 + 56) = v35;
    v84 = v54;
    v56 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v83, v82);
    v58 = v57;
    swift_bridgeObjectRelease();
    v84 = v56;
    v85 = v58;
    v59 = Text.init<A>(_:)(&v84, &type metadata for String, v22);
    v61 = v60;
    v63 = v62;
    v65 = v64;
    v67 = v30[2];
    v66 = v30[3];
    if (v67 >= v66 >> 1)
      v30 = sub_100432428((_QWORD *)(v66 > 1), v67 + 1, 1, v30);
    v30[2] = v67 + 1;
    v68 = &v30[4 * v67];
    v68[4] = v59;
    v68[5] = v61;
    *((_BYTE *)v68 + 48) = v63 & 1;
    v68[7] = v65;
  }
  else
  {
    swift_bridgeObjectRelease();
    v34 = swift_bridgeObjectRelease();
  }
  v84 = GenericMusicItem.title.getter(v34);
  v85 = v69;
  v70 = Text.init<A>(_:)(&v84, &type metadata for String, v22);
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v78 = v30[2];
  v77 = v30[3];
  if (v78 >= v77 >> 1)
    v30 = sub_100432428((_QWORD *)(v77 > 1), v78 + 1, 1, v30);
  v30[2] = v78 + 1;
  v79 = &v30[4 * v78];
  v79[4] = v70;
  v79[5] = v72;
  *((_BYTE *)v79 + 48) = v74 & 1;
  v79[7] = v76;
  return v30;
}

uint64_t sub_10089337C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t OpaqueTypeConformance2;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  void (*v68)(__n128);
  __n128 v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  void *v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t *v79;
  uint64_t v80;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t *KeyPath;
  uint64_t *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE v104[48];
  _OWORD v105[3];
  uint64_t v106;
  uint64_t v107;
  char v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  _BYTE v117[31];
  _OWORD v118[9];
  uint64_t v119;
  _OWORD v120[10];
  char v121;
  char v122;
  _BYTE v123[7];
  _OWORD v124[18];
  _QWORD v125[41];
  _QWORD v126[37];
  char v127;
  _BYTE v128[7];
  uint64_t *v129;
  uint64_t v130;
  char v131;

  KeyPath = a7;
  v97 = a8;
  v94 = a5;
  v95 = a6;
  v93 = a4;
  v103 = a2;
  v101 = a9;
  v99 = _s27DownloadStatusIndicatorViewVMa(0);
  __chkstk_darwin(v99);
  v100 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v98 = (char *)&v82 - v13;
  v83 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v14 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v20);
  v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v85 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v92 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v82 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v87 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v84 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v86);
  v29 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_100007E8C(&qword_1011A0630);
  __chkstk_darwin(v91);
  v102 = (uint64_t)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v90 = (uint64_t)&v82 - v32;
  sub_10004A160(a1, (uint64_t)v22, (uint64_t *)&unk_1011A3E10);
  GenericMusicItem.placeholder.getter((uint64_t)v19);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v104);
  v33 = v83;
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v83);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v22, (uint64_t)v19, (uint64_t)v104, (uint64_t)v16, (uint64_t)v25);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v33);
  sub_10005B748((uint64_t)v19, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011A3E10);
  v34 = *(_QWORD *)a3;
  v35 = *(_QWORD *)(a3 + 8);
  LOBYTE(v16) = *(_BYTE *)(a3 + 16);
  v36 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v37 = sub_1000E4264();
  v126[0] = v36;
  v126[1] = v37;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v126, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v39 = v82;
  View.corner(_:)(v34, v35, (char)v16, v23, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v25, v23);
  v40 = Border.artwork.unsafeMutableAddressor();
  v41 = *v40;
  v42 = *((double *)v40 + 1);
  v43 = *(_QWORD *)a3;
  v44 = *(_QWORD *)(a3 + 8);
  LOBYTE(a3) = *(_BYTE *)(a3 + 16);
  LOBYTE(v16) = *((_BYTE *)v40 + 16);
  swift_retain();
  v126[0] = v23;
  v126[1] = OpaqueTypeConformance2;
  v45 = swift_getOpaqueTypeConformance2(v126, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v46 = v84;
  v47 = v44;
  v48 = v88;
  View.border(_:corner:)(v41, (char)v16, v43, v47, a3, v88, v45, v42);
  v49 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v92 + 8))(v39, v48, v49);
  v50 = *v93;
  v51 = v87;
  v52 = v89;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v29, v46, v89);
  v53 = &v29[*(int *)(v86 + 36)];
  *(_QWORD *)v53 = v50;
  *((_WORD *)v53 + 4) = 0;
  v54 = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v46, v52);
  v55 = static Alignment.center.getter(v54);
  _FrameLayout.init(width:height:alignment:)(v105, 0, 1, 0x4050800000000000, 0, v55, v56);
  v57 = v102;
  sub_10004A160((uint64_t)v29, v102, &qword_1011A0628);
  v58 = (_OWORD *)(v57 + *(int *)(v91 + 36));
  v59 = v105[1];
  *v58 = v105[0];
  v58[1] = v59;
  v58[2] = v105[2];
  sub_10004FF60((uint64_t)v29, &qword_1011A0628);
  v60 = v90;
  v61 = sub_100065228(v57, v90, &qword_1011A0630);
  v62 = static HorizontalAlignment.leading.getter(v61);
  v63 = v103;
  sub_100893C10(v94, v103, v95, KeyPath, v97, v118);
  *(_OWORD *)((char *)&v120[7] + 7) = v118[7];
  *(_OWORD *)((char *)&v120[6] + 7) = v118[6];
  *(_OWORD *)((char *)&v120[3] + 7) = v118[3];
  *(_OWORD *)((char *)&v120[2] + 7) = v118[2];
  *(_OWORD *)((char *)&v120[8] + 7) = v118[8];
  *(_QWORD *)((char *)&v120[9] + 7) = v119;
  *(_OWORD *)((char *)&v120[4] + 7) = v118[4];
  *(_OWORD *)((char *)&v120[5] + 7) = v118[5];
  *(_OWORD *)((char *)v120 + 7) = v118[0];
  *(_OWORD *)((char *)&v120[1] + 7) = v118[1];
  v115 = v120[6];
  v116 = v120[7];
  *(_OWORD *)v117 = v120[8];
  *(_OWORD *)&v117[15] = *(_OWORD *)((char *)&v120[8] + 15);
  v111 = v120[2];
  v112 = v120[3];
  v113 = v120[4];
  v114 = v120[5];
  v109 = v120[0];
  v121 = 1;
  v106 = v62;
  v107 = 0;
  v108 = 1;
  v110 = v120[1];
  v65 = static Alignment.center.getter(v64);
  sub_10014C9CC(0, 1, 0.0, 1, 0.0, 1, 0, 1, v124, v67, 0.0, 1, INFINITY, 0, v65, v66);
  sub_10089DCD0((uint64_t)v118);
  KeyPath = (uint64_t *)swift_getKeyPath(&unk_100ED4A28);
  v97 = (uint64_t *)swift_getKeyPath(&unk_100ED4B48);
  v122 = 0;
  v68 = *(void (**)(__n128))(**(_QWORD **)(v63
                                                    + *(int *)(_s17SearchContentViewV14ResultItemViewVMa(0) + 36)
                                                    + 8)
                                      + 112);
  v69 = swift_retain();
  v70 = (uint64_t)v98;
  v68(v69);
  swift_release();
  v126[0] = 0x4000000000000000;
  v71 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(v126, &type metadata for CGFloat, v71);
  v126[0] = 0x3FF0000000000000;
  ScaledMetric.init(wrappedValue:)(v126, &type metadata for CGFloat, v71);
  v72 = v60;
  sub_10004A160(v60, v57, &qword_1011A0630);
  LOBYTE(v39) = v122;
  v73 = v100;
  sub_10005B704(v70, v100, _s27DownloadStatusIndicatorViewVMa);
  v74 = v101;
  sub_10004A160(v57, v101, &qword_1011A0630);
  v75 = (int *)sub_100007E8C(&qword_1011CE138);
  v76 = (void *)(v74 + v75[12]);
  v77 = v74;
  memcpy(v125, v124, 0x120uLL);
  v78 = KeyPath;
  v125[36] = KeyPath;
  LOBYTE(v125[37]) = 0;
  *(_DWORD *)((char *)&v125[37] + 1) = *(_DWORD *)v123;
  HIDWORD(v125[37]) = *(_DWORD *)&v123[3];
  v79 = v97;
  v125[38] = v97;
  v125[39] = 2;
  LOBYTE(v125[40]) = (_BYTE)v39;
  memcpy(v76, v125, 0x141uLL);
  v80 = v77 + v75[16];
  *(_QWORD *)v80 = 0;
  *(_BYTE *)(v80 + 8) = 0;
  sub_10005B704(v73, v77 + v75[20], _s27DownloadStatusIndicatorViewVMa);
  sub_10089DDE0((uint64_t)v125);
  sub_10005B748(v70, _s27DownloadStatusIndicatorViewVMa);
  sub_10004FF60(v72, &qword_1011A0630);
  sub_10005B748(v73, _s27DownloadStatusIndicatorViewVMa);
  memcpy(v126, v124, 0x120uLL);
  v126[36] = v78;
  v127 = 0;
  *(_DWORD *)v128 = *(_DWORD *)v123;
  *(_DWORD *)&v128[3] = *(_DWORD *)&v123[3];
  v129 = v79;
  v130 = 2;
  v131 = (char)v39;
  sub_10089DECC((uint64_t)v126);
  return sub_10004FF60(v102, &qword_1011A0630);
}

double sub_100893C10@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  _BOOL4 v23;
  int v24;
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  char v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  __n128 v143;
  uint64_t v144;
  uint64_t *v145;
  char v146;
  unint64_t v147;
  uint64_t v148;
  int v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t *v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;

  v179 = a5;
  v184 = a4;
  v180 = a6;
  v9 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v9);
  v183 = (uint64_t)&v172 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for GenericMusicItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v172 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s17SearchContentViewV14ResultItemViewVMa(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v172 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v172 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v19 + 104))(v22, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v18, v20);
  LOBYTE(a1) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(a1, v22);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  sub_10005B704(a2, (uint64_t)v17, _s17SearchContentViewV14ResultItemViewVMa);
  if ((a1 & 1) != 0)
  {
    v23 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
    v23 = v24 != enum case for GenericMusicItem.musicMovie(_:)
       && v24 != enum case for GenericMusicItem.musicVideo(_:)
       && v24 != enum case for GenericMusicItem.song(_:)
       && v24 != enum case for GenericMusicItem.station(_:)
       && v24 != enum case for GenericMusicItem.tvEpisode(_:)
       && v24 != enum case for GenericMusicItem.uploadedAudio(_:)
       && v24 != enum case for GenericMusicItem.uploadedVideo(_:);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  sub_10005B748((uint64_t)v17, _s17SearchContentViewV14ResultItemViewVMa);
  v32 = a3[1];
  LODWORD(v181) = v23;
  if (v32)
  {
    v191 = *a3;
    v192 = v32;
    v33 = sub_100055B68();
    swift_bridgeObjectRetain();
    v34 = Text.init<A>(_:)(&v191, &type metadata for String, v33);
    v36 = v35;
    v38 = v37;
    v40 = v39 & 1;
    LODWORD(v191) = static HierarchicalShapeStyle.tertiary.getter(v34);
    v41 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v191, v23, v34, v36, v40, v38, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v43 = v42;
    v45 = v44;
    v47 = v46 & 1;
    sub_100055BAC(v34, v36, v40);
    v48 = swift_bridgeObjectRelease();
    v49 = static Font.caption2.getter(v48);
    v50 = Text.font(_:)(v49, v41, v43, v47, v45);
    v189 = v51;
    v190 = v50;
    LOBYTE(v36) = v52;
    v188 = v53;
    swift_release();
    v187 = v36 & 1;
    v54 = v41;
    v23 = v181;
    sub_100055BAC(v54, v43, v47);
    v31 = swift_bridgeObjectRelease();
  }
  else
  {
    v189 = 0;
    v190 = 0;
    v187 = 0;
    v188 = 0;
  }
  v191 = GenericMusicItem.title.getter(v31);
  v192 = v55;
  v178 = sub_100055B68();
  v56 = Text.init<A>(_:)(&v191, &type metadata for String, v178);
  v58 = v57;
  v60 = v59;
  v62 = v61 & 1;
  v63 = GenericMusicItem.explicitBadge(_:)(v23);
  v64 = TextBadge.view.getter(v63);
  v66 = v65;
  v68 = v67 & 1;
  v176 = static Text.+ infix(_:_:)(v56, v58, v62, v60, v64, v65, v68, v69);
  v175 = v70;
  v177 = v71;
  v73 = v72 & 1;
  sub_100055BAC(v64, v66, v68);
  swift_bridgeObjectRelease();
  sub_100055BAC(v56, v58, v62);
  swift_bridgeObjectRelease();
  v74 = GenericMusicItem.favoriteBadge.getter();
  v75 = TextBadge.view.getter(v74);
  v77 = v76;
  v79 = v78 & 1;
  v80 = v176;
  v81 = v175;
  v185 = static Text.+ infix(_:_:)(v176, v175, v73, v177, v75, v76, v79, v82);
  v186 = v83;
  v85 = v84;
  LODWORD(v182) = v86 & 1;
  sub_100055BAC(v75, v77, v79);
  swift_bridgeObjectRelease();
  sub_100055BAC(v80, v81, v73);
  swift_bridgeObjectRelease();
  v87 = v183;
  sub_1009189EC(v183);
  v88 = type metadata accessor for URL(0);
  LODWORD(v75) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 48))(v87, 1, v88);
  sub_10004FF60(v87, &qword_10119E460);
  if ((_DWORD)v75 == 1)
    v89 = 2;
  else
    v89 = 4;
  v90 = TextBadge.view.getter(v89);
  v92 = v91;
  v94 = v93 & 1;
  v95 = v182;
  v97 = static Text.+ infix(_:_:)(v185, v85, v182, v186, v90, v91, v94, v96);
  v99 = v98;
  v101 = v100;
  v103 = v102 & 1;
  sub_100055BAC(v90, v92, v94);
  v104 = v181;
  swift_bridgeObjectRelease();
  sub_100055BAC(v185, v85, v95);
  v105 = swift_bridgeObjectRelease();
  LODWORD(v191) = static HierarchicalShapeStyle.primary.getter(v105);
  v106 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v191, v104, v97, v99, v103, v101, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v185 = v107;
  LODWORD(v177) = v108;
  v186 = v109;
  sub_100055BAC(v97, v99, v103);
  swift_bridgeObjectRelease();
  v191 = *v184;
  swift_bridgeObjectRetain();
  v110 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v111 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v112 = BidirectionalCollection<>.joined(separator:)(548913696, 0xA400000000000000, v110, v111);
  v114 = v113;
  swift_bridgeObjectRelease();
  v116 = HIBYTE(v114) & 0xF;
  if ((v114 & 0x2000000000000000) == 0)
    v116 = v112 & 0xFFFFFFFFFFFFLL;
  if (v116)
  {
    v184 = (uint64_t *)static VerticalAlignment.center.getter(v115);
    v191 = v112;
    v192 = v114;
    swift_bridgeObjectRetain();
    v117 = v178;
    v118 = Text.init<A>(_:)(&v191, &type metadata for String, v178);
    v120 = v119;
    v122 = v121;
    v124 = v123 & 1;
    LODWORD(v191) = static HierarchicalShapeStyle.secondary.getter(v118);
    v176 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v191, v104, v118, v120, v124, v122, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v183 = v125;
    v175 = v126;
    v174 = v127 & 1;
    sub_100055BAC(v118, v120, v124);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v182 = 0x4010000000000000;
  }
  else
  {
    swift_bridgeObjectRelease();
    v184 = 0;
    v182 = 0;
    v176 = 0;
    v183 = 0;
    v174 = 0;
    v175 = 0;
    v117 = v178;
  }
  v128 = v179[1];
  if (v128)
  {
    v191 = *v179;
    v192 = v128;
    swift_bridgeObjectRetain();
    v129 = Text.init<A>(_:)(&v191, &type metadata for String, v117);
    v131 = v130;
    v133 = v132;
    v135 = v134 & 1;
    LODWORD(v191) = static HierarchicalShapeStyle.tertiary.getter(v129);
    v136 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v191, v104, v129, v131, v135, v133, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v138 = v137;
    v140 = v139;
    v142 = v141 & 1;
    sub_100055BAC(v129, v131, v135);
    v143 = swift_bridgeObjectRelease();
    v144 = static Font.caption2.getter(v143);
    v181 = Text.font(_:)(v144, v136, v138, v142, v140);
    v179 = v145;
    LOBYTE(v131) = v146;
    v178 = v147;
    swift_release();
    v148 = v131 & 1;
    sub_100055BAC(v136, v138, v142);
    swift_bridgeObjectRelease();
  }
  else
  {
    v181 = 0;
    v179 = 0;
    v148 = 0;
    v178 = 0;
  }
  v172 = v148;
  v149 = v177 & 1;
  LOBYTE(v191) = v177 & 1;
  v150 = v180;
  v151 = v190;
  *v180 = v190;
  v152 = v151;
  v190 = v151;
  v153 = v189;
  v150[1] = v189;
  v154 = v153;
  v189 = v153;
  v155 = v187;
  v150[2] = v187;
  v156 = v155;
  v187 = v155;
  v157 = v188;
  v150[3] = v188;
  v150[4] = v106;
  v158 = v157;
  v188 = v157;
  v159 = v185;
  v150[5] = v185;
  *((_BYTE *)v150 + 48) = v149;
  LODWORD(v177) = v149;
  v173 = v106;
  v160 = v184;
  v150[7] = v186;
  v150[8] = v160;
  v150[9] = v182;
  v150[10] = 0;
  v161 = v176;
  v162 = v183;
  v150[11] = v176;
  v150[12] = v162;
  v163 = v174;
  v164 = v175;
  v150[13] = v174;
  v150[14] = v164;
  v165 = v181;
  v166 = (uint64_t)v179;
  v150[15] = v181;
  v150[16] = v166;
  v150[17] = v148;
  v167 = v178;
  v150[18] = v178;
  sub_1000E4440(v152, v154, v156, v158);
  sub_100055BBC(v106, v159, v149);
  swift_bridgeObjectRetain();
  v168 = v184;
  v169 = v182;
  v170 = v183;
  sub_100154B8C((uint64_t)v184, v182, 0, v161, v183, v163, v164);
  LOBYTE(v159) = v172;
  sub_1000E4440(v165, v166, v172, v167);
  sub_1000E450C(v165, v166, v159, v167);
  sub_10089DDA0((uint64_t)v168, v169, 0, v161, v170, v163, v164);
  sub_100055BAC(v173, v185, v177);
  swift_bridgeObjectRelease();
  return sub_1000E450C(v190, v189, v187, v188);
}

uint64_t sub_100894650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  sub_1001CB080(v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return sub_10005B6C0((uint64_t)v6, a2, type metadata accessor for ContextualPreview.Data);
}

double sub_10089473C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;

  v2 = sub_100007E8C(&qword_1011B17E8);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s5EventOMa(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s17SearchContentViewV14ResultItemViewVMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(unsigned __int8 *)(a1 + *(int *)(v11 + 24));
  sub_10005B704(a1, (uint64_t)v10, v13);
  if (v12 == 2)
  {
    swift_retain();
    LOBYTE(v12) = sub_1003E6E04();
    swift_release();
  }
  sub_10005B748((uint64_t)v10, _s17SearchContentViewV14ResultItemViewVMa);
  v14 = sub_100007E8C(&qword_1011BEBF8);
  v15 = *(int *)(v14 + 48);
  v16 = *(int *)(v14 + 64);
  v17 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, a1, v17);
  v18 = _s5EventO4ItemOMa(0);
  swift_storeEnumTagMultiPayload(v7, v18, 1);
  v7[v15] = 4;
  v7[v16] = v12 & 1;
  swift_storeEnumTagMultiPayload(v7, v5, 1);
  v19 = _s4PageOMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  swift_retain();
  sub_1003E9A5C((uint64_t)v7, (uint64_t)v4);
  swift_release();
  sub_10004FF60((uint64_t)v4, &qword_1011B17E8);
  sub_10005B748((uint64_t)v7, _s5EventOMa);
  swift_retain();
  sub_1003E9438(a1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100894978@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double result;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String.LocalizationValue.init(stringLiteral:)(0x100000000000001ELL, 0x8000000100E46FD0);
  static Locale.current.getter(v10);
  v11 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, "Message to invite the user to try again using different parameters", 66, 2);
  v13 = v12;
  v14 = sub_100007E8C(&qword_1011E7E30);
  v15 = swift_allocObject(v14, 112, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EA7A80;
  KeyPath = swift_getKeyPath(&unk_100ED44B0);
  v17 = swift_getKeyPath(&unk_100ED4530);
  static Published.subscript.getter(&v65, a1, KeyPath, v17);
  swift_release();
  swift_release();
  v18 = v65;
  v19 = v66;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  v20 = sub_10021F388();
  *(_QWORD *)(v15 + 64) = v20;
  *(_QWORD *)(v15 + 32) = v18;
  *(_QWORD *)(v15 + 40) = v19;
  v21 = sub_1003E6E04();
  v22 = sub_1003C1E54(v21 & 1);
  *(_QWORD *)(v15 + 96) = &type metadata for String;
  *(_QWORD *)(v15 + 104) = v20;
  *(_QWORD *)(v15 + 72) = v22;
  *(_QWORD *)(v15 + 80) = v23;
  v24 = String.init(format:_:)(v11, v13, v15);
  v26 = v25;
  swift_bridgeObjectRelease();
  v65 = v24;
  v66 = v26;
  v27 = sub_100055B68();
  v28 = Text.init<A>(_:)(&v65, &type metadata for String, v27);
  v30 = v29;
  v32 = v31;
  v34 = v33 & 1;
  LODWORD(v65) = static HierarchicalShapeStyle.primary.getter(v35);
  v36 = Text.foregroundStyle<A>(_:)(&v65, v28, v30, v34, v32, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v62 = v37;
  v63 = v36;
  v64 = v38;
  LOBYTE(KeyPath) = v39 & 1;
  sub_100055BAC(v28, v30, v34);
  swift_bridgeObjectRelease();
  v61 = swift_getKeyPath(&unk_100ED4A28);
  v40 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000030, 0x8000000100E47040);
  v41 = Text.init(_:tableName:bundle:comment:)(v40);
  v43 = v42;
  v45 = v44;
  v47 = v46 & 1;
  LODWORD(v65) = static HierarchicalShapeStyle.secondary.getter(v41);
  v48 = Text.foregroundStyle<A>(_:)(&v65, v41, v43, v47, v45, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v50 = v49;
  v52 = v51;
  LOBYTE(v30) = v53 & 1;
  sub_100055BAC(v41, v43, v47);
  swift_bridgeObjectRelease();
  v54 = swift_getKeyPath(&unk_100ED4A28);
  LOBYTE(v65) = KeyPath;
  v56 = v62;
  v55 = v63;
  *(_QWORD *)a2 = v63;
  *(_QWORD *)(a2 + 8) = v56;
  *(_BYTE *)(a2 + 16) = KeyPath;
  v57 = v61;
  *(_QWORD *)(a2 + 24) = v64;
  *(_QWORD *)(a2 + 32) = v57;
  *(_BYTE *)(a2 + 40) = 1;
  *(_QWORD *)(a2 + 48) = v48;
  *(_QWORD *)(a2 + 56) = v50;
  *(_BYTE *)(a2 + 64) = v30;
  *(_QWORD *)(a2 + 72) = v52;
  *(_QWORD *)(a2 + 80) = v54;
  *(_BYTE *)(a2 + 88) = 1;
  v58 = v55;
  sub_100055BBC(v55, v56, KeyPath);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BBC(v48, v50, v30);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BAC(v48, v50, v30);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100055BAC(v58, v56, v65);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100894D48(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[2];
  char v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  char v29;
  char v30;

  v4 = *v2;
  v20 = static HorizontalAlignment.center.getter(a1);
  sub_100894978(v4, (uint64_t)v21);
  v5 = v21[0];
  v6 = v21[1];
  v7 = v22;
  v8 = v24;
  v9 = v25;
  v10 = v26;
  v11 = v27;
  v12 = v29;
  v18 = v23;
  v19 = v28;
  LOBYTE(v4) = static Edge.Set.horizontal.getter(v13);
  v14 = EdgeInsets.init(_all:)(24.0);
  v30 = 0;
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 48) = v18;
  *(_BYTE *)(a2 + 64) = v8;
  *(_QWORD *)(a2 + 72) = v9;
  *(_QWORD *)(a2 + 80) = v10;
  *(_BYTE *)(a2 + 88) = v11;
  *(_OWORD *)(a2 + 96) = v19;
  *(_BYTE *)(a2 + 112) = v12;
  *(_BYTE *)(a2 + 120) = v4;
  *(double *)(a2 + 128) = v14;
  *(_QWORD *)(a2 + 136) = v15;
  *(_QWORD *)(a2 + 144) = v16;
  *(_QWORD *)(a2 + 152) = v17;
  *(_BYTE *)(a2 + 160) = v30;
}

uint64_t sub_100894E34@<X0>(uint64_t a1@<X8>)
{
  return sub_100888DAC(a1);
}

uint64_t sub_100894E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, __n128 a6@<Q0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __n128 v51;
  void (*v52)(_BYTE *, uint64_t, __n128);
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t KeyPath;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(__int128 *, _QWORD);
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(__int128 *, _QWORD);
  unint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t OpaqueTypeConformance2;
  uint64_t v81;
  __n128 v82;
  _BYTE v84[16];
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  unint64_t v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  __int128 v145;
  __int128 v146;
  _OWORD v147[2];
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  char v170;
  __int128 v171;

  v114 = a5;
  v113 = type metadata accessor for AttributedString.CharacterView(0, a6);
  __chkstk_darwin(v113);
  v112 = &v84[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_100007E8C(&qword_1011BC170);
  __chkstk_darwin(v11);
  v106 = &v84[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_100007E8C(&qword_1011BAAA8);
  __chkstk_darwin(v13);
  v108 = &v84[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v109 = sub_100007E8C(&qword_1011A6CA0);
  v105 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v86 = &v84[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v85 = &v84[-v17];
  v18 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v18);
  v97 = &v84[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v117 = type metadata accessor for AttributedString(0);
  v100 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v98 = &v84[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v115 = &v84[-v22];
  v23 = type metadata accessor for AccessibilityChildBehavior(0);
  v95 = *(_QWORD *)(v23 - 8);
  v96 = v23;
  __chkstk_darwin(v23);
  v25 = &v84[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = sub_100007E8C(&qword_1011CE368);
  v110 = *(_QWORD *)(v26 - 8);
  v111 = v26;
  __chkstk_darwin(v26);
  v116 = &v84[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v101 = static VerticalAlignment.center.getter(v28);
  v102 = a1;
  v103 = a2;
  v104 = a3;
  v107 = a4;
  sub_1008957C4(a1, a2, a3, a4, (uint64_t)&v145);
  v94 = v145;
  v93 = DWORD2(v145);
  v91 = *((_QWORD *)&v146 + 1);
  v92 = v146;
  v30 = v147[0];
  v99 = *(_OWORD *)((char *)v147 + 8);
  v90 = BYTE8(v147[1]);
  v88 = *((_QWORD *)&v148 + 1);
  v89 = v148;
  v31 = v149;
  v87 = *((_QWORD *)&v149 + 1);
  v32 = v150;
  if (qword_10119C8E8 != -1)
    v29 = swift_once(&qword_10119C8E8, sub_10085FB54);
  v33 = qword_10124DA60;
  v34 = static Alignment.center.getter(v29);
  v138 = 1;
  v137 = v30;
  v136 = v31;
  v135 = v32;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v159, 0, 1, 0, 1, 0, 1, v33, 0, 0, 1, 0, 1, v34, v35);
  v144 = v160;
  v143 = v162;
  v142 = v164;
  v141 = v166;
  v140 = v168;
  v139 = v170;
  v120 = (unint64_t)v101;
  LOBYTE(v121) = 1;
  *((_QWORD *)&v121 + 1) = v94;
  LODWORD(v122) = v93;
  *((_QWORD *)&v122 + 1) = v92;
  *(_QWORD *)&v123 = v91;
  BYTE8(v123) = v30;
  v124 = v99;
  LOBYTE(v125) = v90;
  *((_QWORD *)&v125 + 1) = v89;
  *(_QWORD *)&v126 = v88;
  BYTE8(v126) = v31;
  *(_QWORD *)&v127 = v87;
  BYTE8(v127) = v32;
  *(_QWORD *)&v128 = v159;
  BYTE8(v128) = v160;
  *(_QWORD *)&v129 = v161;
  BYTE8(v129) = v162;
  *(_QWORD *)&v130 = v163;
  BYTE8(v130) = v164;
  *(_QWORD *)&v131 = v165;
  BYTE8(v131) = v166;
  *(_QWORD *)&v132 = v167;
  BYTE8(v132) = v168;
  *(_QWORD *)&v133 = v169;
  BYTE8(v133) = v170;
  v134 = v171;
  static AccessibilityChildBehavior.combine.getter(v169);
  v36 = sub_100007E8C(&qword_1011CE370);
  v37 = sub_10089EE20();
  v38 = v116;
  v101 = v36;
  *(_QWORD *)&v99 = v37;
  View.accessibilityElement(children:)(v25, v36, v37);
  (*(void (**)(_BYTE *, uint64_t))(v95 + 8))(v25, v96);
  v156 = v132;
  v157 = v133;
  v158 = v134;
  v152 = v128;
  v153 = v129;
  v154 = v130;
  v155 = v131;
  v148 = v124;
  v149 = v125;
  v150 = v126;
  v151 = v127;
  v145 = v120;
  v146 = v121;
  v147[0] = v122;
  v147[1] = v123;
  sub_10089EEA4((uint64_t)&v145);
  v39 = v103;
  v40 = swift_bridgeObjectRetain();
  v41 = v97;
  AttributeContainer.init()(v40);
  v42 = v115;
  AttributedString.init(_:attributes:)(v102, v39, v41);
  v43 = v100;
  v44 = v98;
  v45 = v117;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v100 + 16))(v98, v42, v117);
  *(_QWORD *)&v120 = v104;
  *((_QWORD *)&v120 + 1) = v107;
  v46 = type metadata accessor for Locale(0);
  v47 = (uint64_t)v106;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v106, 1, 1, v46);
  v48 = sub_100048748((unint64_t *)&qword_1011A6C88, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v49 = sub_100055B68();
  swift_bridgeObjectRetain();
  v50 = (uint64_t)v108;
  v107 = v49;
  AttributedStringProtocol.range<A>(of:options:locale:)(&v120, 129, v47, v45, &type metadata for String, v48, v49);
  sub_10004FF60(v47, &qword_1011BC170);
  v51 = swift_bridgeObjectRelease();
  v52 = *(void (**)(_BYTE *, uint64_t, __n128))(v43 + 8);
  v52(v44, v45, v51);
  v53 = v109;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v50, 1, v109) == 1)
  {
    v54 = &qword_1011BAAA8;
    v55 = v50;
  }
  else
  {
    v56 = v85;
    sub_100065228(v50, (uint64_t)v85, &qword_1011A6CA0);
    v57 = v86;
    sub_10004A160((uint64_t)v56, (uint64_t)v86, &qword_1011A6CA0);
    KeyPath = swift_getKeyPath(&unk_100ED4C78);
    __chkstk_darwin(KeyPath);
    v59 = swift_getKeyPath(&unk_100ED4CA8);
    v118 = (uint64_t)objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    v60 = sub_100049F28((unint64_t *)&qword_1011BAAB0, &qword_1011A6CA0, (uint64_t)&protocol conformance descriptor for Range<A>);
    v61 = v53;
    v62 = (void (*)(__int128 *, _QWORD))AttributedString.subscript.modify(&v120, v57, v53, v60);
    v63 = sub_10013BB48();
    AttributedSubstring.subscript.setter(&v118, v59, v63);
    v62(&v120, 0);
    sub_10004FF60((uint64_t)v57, &qword_1011A6CA0);
    sub_10004A160((uint64_t)v56, (uint64_t)v57, &qword_1011A6CA0);
    v64 = swift_getKeyPath(&unk_100ED4CE8);
    __chkstk_darwin(v64);
    v65 = swift_getKeyPath(&unk_100ED4D18);
    v118 = 2;
    v119 = 0;
    v66 = v61;
    v42 = v115;
    v67 = (void (*)(__int128 *, _QWORD))AttributedString.subscript.modify(&v120, v57, v66, v60);
    v68 = sub_10089EF6C();
    AttributedSubstring.subscript.setter(&v118, v65, v68);
    v67(&v120, 0);
    sub_10004FF60((uint64_t)v57, &qword_1011A6CA0);
    v55 = (uint64_t)v56;
    v38 = v116;
    v54 = &qword_1011A6CA0;
  }
  v69 = sub_10004FF60(v55, v54);
  v70 = v112;
  AttributedString.characters.getter(v69);
  ((void (*)(_BYTE *, uint64_t))v52)(v42, v117);
  v71 = sub_100048748(&qword_1011CE390, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
  *(_QWORD *)&v120 = String.init<A>(_:)(v70, v113, v71);
  *((_QWORD *)&v120 + 1) = v72;
  v73 = Text.init<A>(_:)(&v120, &type metadata for String, v107);
  v75 = v74;
  v77 = v76;
  v79 = v78 & 1;
  *(_QWORD *)&v120 = v101;
  *((_QWORD *)&v120 + 1) = v99;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v120, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v81 = v111;
  View.accessibilityLabel(_:)(v73, v75, v79, v77, v111, OpaqueTypeConformance2);
  sub_100055BAC(v73, v75, v79);
  v82 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v110 + 8))(v38, v81, v82);
}

double sub_1008957C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __n128 v34;
  void (*v35)(char *, uint64_t, __n128);
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_QWORD *, _QWORD);
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD *, _QWORD);
  unint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  double result;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  _QWORD v90[6];

  v82 = a1;
  v83 = a3;
  v8 = sub_100007E8C(&qword_1011BC170);
  __chkstk_darwin(v8);
  v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011BAAA8);
  __chkstk_darwin(v11);
  v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A6CA0);
  v15 = *(_QWORD *)(v14 - 8);
  v84 = v14;
  v85 = v15;
  __chkstk_darwin(v14);
  v81 = (uint64_t)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v80 = (uint64_t)&v80 - v18;
  v19 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for AttributedString(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v80 - v27;
  v87 = Image.init(systemName:)(0x697966696E67616DLL, 0xEF7373616C67676ELL);
  v86 = static HierarchicalShapeStyle.primary.getter(v29);
  v30 = swift_bridgeObjectRetain();
  AttributeContainer.init()(v30);
  AttributedString.init(_:attributes:)(v82, a2, v21);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v25, v28, v22);
  v90[0] = v83;
  v90[1] = a4;
  v31 = type metadata accessor for Locale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v10, 1, 1, v31);
  v32 = sub_100048748((unint64_t *)&qword_1011A6C88, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v33 = sub_100055B68();
  swift_bridgeObjectRetain();
  AttributedStringProtocol.range<A>(of:options:locale:)(v90, 129, v10, v22, &type metadata for String, v32, v33);
  sub_10004FF60((uint64_t)v10, &qword_1011BC170);
  v34 = swift_bridgeObjectRelease();
  v35 = *(void (**)(char *, uint64_t, __n128))(v23 + 8);
  v36 = v84;
  v35(v25, v22, v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v13, 1, v36) == 1)
  {
    v37 = &qword_1011BAAA8;
    v38 = (uint64_t)v13;
  }
  else
  {
    v39 = (uint64_t)v13;
    v40 = v80;
    sub_100065228(v39, v80, &qword_1011A6CA0);
    v41 = v81;
    sub_10004A160(v40, v81, &qword_1011A6CA0);
    KeyPath = swift_getKeyPath(&unk_100ED4C78);
    __chkstk_darwin(KeyPath);
    *(&v80 - 2) = v43;
    v44 = swift_getKeyPath(&unk_100ED4CA8);
    v88 = (uint64_t)objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    v45 = sub_100049F28((unint64_t *)&qword_1011BAAB0, &qword_1011A6CA0, (uint64_t)&protocol conformance descriptor for Range<A>);
    v46 = (void (*)(_QWORD *, _QWORD))AttributedString.subscript.modify(v90, v41, v36, v45);
    v47 = sub_10013BB48();
    AttributedSubstring.subscript.setter(&v88, v44, v47);
    v46(v90, 0);
    sub_10004FF60(v41, &qword_1011A6CA0);
    sub_10004A160(v40, v41, &qword_1011A6CA0);
    v48 = swift_getKeyPath(&unk_100ED4CE8);
    __chkstk_darwin(v48);
    *(&v80 - 2) = v49;
    v50 = swift_getKeyPath(&unk_100ED4D18);
    v88 = 2;
    v89 = 0;
    v51 = (void (*)(_QWORD *, _QWORD))AttributedString.subscript.modify(v90, v41, v36, v45);
    v52 = sub_10089EF6C();
    AttributedSubstring.subscript.setter(&v88, v50, v52);
    v51(v90, 0);
    sub_10004FF60(v41, &qword_1011A6CA0);
    v38 = v40;
    v37 = &qword_1011A6CA0;
  }
  sub_10004FF60(v38, v37);
  v54 = Text.init(_:)(v28, v53);
  v56 = v55;
  v58 = v57;
  v60 = v59 & 1;
  v62 = static Font.headline.getter(v61);
  v63 = Text.font(_:)(v62, v54, v56, v60, v58);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  swift_release();
  sub_100055BAC(v54, v56, v60);
  swift_bridgeObjectRelease();
  LODWORD(v90[0]) = static HierarchicalShapeStyle.secondary.getter(v70);
  v71 = Text.foregroundStyle<A>(_:)(v90, v63, v65, v67 & 1, v69, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v73 = v72;
  v75 = v74;
  LOBYTE(v60) = v76 & 1;
  sub_100055BAC(v63, v65, v67 & 1);
  swift_bridgeObjectRelease();
  v77 = swift_getKeyPath(&unk_100ED4A28);
  v78 = swift_getKeyPath(&unk_100ED4B48);
  *(_QWORD *)a5 = v87;
  *(_DWORD *)(a5 + 8) = v86;
  *(_QWORD *)(a5 + 16) = v71;
  *(_QWORD *)(a5 + 24) = v73;
  *(_BYTE *)(a5 + 32) = v60;
  *(_QWORD *)(a5 + 40) = v75;
  *(_QWORD *)(a5 + 48) = v77;
  *(_BYTE *)(a5 + 56) = 0;
  *(_QWORD *)(a5 + 64) = v78;
  *(_QWORD *)(a5 + 72) = 2;
  *(_BYTE *)(a5 + 80) = 0;
  *(_QWORD *)(a5 + 88) = 0;
  *(_BYTE *)(a5 + 96) = 1;
  swift_retain();
  sub_100055BBC(v71, v73, v60);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100055BAC(v71, v73, v60);
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100895DE4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_100007E8C(&qword_1011CE3A0);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_100895E3C@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t *v2;

  return sub_100894E6C(*v2, v2[1], v2[2], v2[3], a1, a2);
}

uint64_t sub_100895E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t, __n128);
  uint64_t (*v110)(char *, uint64_t);
  void (*v111)(char *, char *, uint64_t);
  char *v112;
  uint64_t v113;
  int *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t OpaqueTypeConformance2;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  void *v150;
  void (*v151)(char *, uint64_t, uint64_t);
  int v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  void (*v169)(char *, uint64_t);
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void (*v204)(char *, uint64_t, uint64_t);
  char *v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  char *v213;
  _QWORD *v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t *v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  int *v266;
  char *v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  char *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  void (*v299)(char *, uint64_t, uint64_t);
  int v300;
  int v301;
  char *v302;
  _QWORD *v303;
  char *v304;
  uint64_t v305;
  void (*v306)(char *, uint64_t, uint64_t);
  char *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  unint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  unint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  int v337;
  int v338;
  uint64_t v339;
  _QWORD *v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  void (*v344)(char *, uint64_t, uint64_t);
  char *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  unint64_t v364;
  unint64_t v365;
  uint64_t v366;
  uint64_t v367;
  unint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  char *v374;
  int v375;
  int v376;
  _QWORD *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  void (*v387)(char *, uint64_t, uint64_t);
  char *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  unint64_t v404;
  unint64_t v405;
  uint64_t v406;
  uint64_t v407;
  unint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  char *v414;
  int v415;
  int v416;
  uint64_t *v417;
  char *v418;
  uint64_t v419;
  void (*v420)(char *, uint64_t, uint64_t);
  char *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  char *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  char *v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  unint64_t v440;
  unint64_t v441;
  uint64_t v442;
  uint64_t v443;
  unint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  NSObject *v454;
  os_log_type_t v455;
  uint8_t *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  unint64_t v460;
  uint64_t v461;
  uint64_t v462;
  void (*v463)(char *, uint64_t, uint64_t);
  char *v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  unint64_t v469;
  unint64_t v470;
  char *v472;
  uint64_t v473;
  char *v474;
  char *v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  char *v479;
  char *v480;
  char *v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  char *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  char *v492;
  char *v493;
  char *v494;
  char *v495;
  uint64_t v496;
  uint64_t v497;
  char *v498;
  uint64_t v499;
  char *v500;
  char *v501;
  char *v502;
  uint64_t v503;
  uint64_t v504;
  char *v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  char *v511;
  uint64_t v512;
  _QWORD *v513;
  char *v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  char *v518;
  uint64_t v519;
  char *v520;
  char *v521;
  uint64_t v522;
  uint64_t v523;
  char *v524;
  char *v525;
  uint64_t v526;
  uint64_t v527;
  char *v528;
  uint64_t v529;
  uint64_t v530;
  char *v531;
  char *v532;
  uint64_t v533;
  uint64_t v534;
  char *v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  char *v540;
  char *v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  char *v549;
  uint64_t v550;
  uint64_t v551;
  char *v552;
  char *v553;
  uint64_t v554;
  char *v555;
  uint64_t v556;
  char *v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  char *v561;
  uint64_t v562;
  uint64_t v563;
  char *v564;
  uint64_t v565;
  char *v566;
  char *v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  char *v574;
  uint64_t v575;
  char *v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  char *v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  char *v585;
  char *v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  char v599[8];

  v587 = a1;
  v592 = a2;
  v581 = sub_100007E8C(&qword_1011CE3A8);
  __chkstk_darwin(v581);
  v582 = (uint64_t)&v472 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v534 = type metadata accessor for SegueContext(0);
  __chkstk_darwin(v534);
  v535 = (char *)&v472 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v550 = sub_100007E8C(&qword_1011ACA78);
  __chkstk_darwin(v550);
  v533 = (uint64_t)&v472 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v537 = (uint64_t)&v472 - v7;
  v546 = sub_100007E8C(&qword_1011CE3B0);
  __chkstk_darwin(v546);
  v548 = (uint64_t)&v472 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C09B0);
  __chkstk_darwin(v9);
  v532 = (char *)&v472 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v547 = sub_100007E8C(&qword_1011CE3B8);
  __chkstk_darwin(v547);
  v531 = (char *)&v472 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v536 = (uint64_t)&v472 - v13;
  v579 = sub_100007E8C(&qword_1011CE3C0);
  __chkstk_darwin(v579);
  v549 = (char *)&v472 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v578 = type metadata accessor for IndexPath(0);
  v577 = *(_QWORD *)(v578 - 8);
  __chkstk_darwin(v578);
  v576 = (char *)&v472 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v591 = sub_100007E8C(&qword_1011CE3C8);
  __chkstk_darwin(v591);
  v580 = (char *)&v472 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v589 = sub_100007E8C(&qword_1011CE3D0);
  __chkstk_darwin(v589);
  v590 = (uint64_t)&v472 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v593 = sub_100007E8C(&qword_1011ACA70);
  v551 = *(_QWORD *)(v593 - 8);
  __chkstk_darwin(v593);
  v540 = (char *)&v472 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = _s4LinkVMa(0);
  __chkstk_darwin(v19);
  v477 = (uint64_t)&v472 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011A05C0);
  __chkstk_darwin(v21);
  v474 = (char *)&v472 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011A05C8);
  __chkstk_darwin(v23);
  v476 = (uint64_t)&v472 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v491 = sub_100007E8C(&qword_1011CE3D8);
  __chkstk_darwin(v491);
  v475 = (char *)&v472 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v478 = (uint64_t)&v472 - v27;
  v487 = sub_100007E8C(&qword_1011A03B0);
  v486 = *(_QWORD *)(v487 - 8);
  __chkstk_darwin(v487);
  v485 = (char *)&v472 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v489 = sub_100007E8C(&qword_1011CE3E0);
  __chkstk_darwin(v489);
  v490 = (uint64_t)&v472 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v519 = sub_100007E8C(&qword_1011CE3E8);
  __chkstk_darwin(v519);
  v492 = (char *)&v472 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100007E8C(&qword_1011B33F0);
  __chkstk_darwin(v31);
  v480 = (char *)&v472 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100007E8C(&qword_1011CE3F0);
  __chkstk_darwin(v33);
  v482 = (uint64_t)&v472 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v488 = sub_100007E8C(&qword_1011CE3F8);
  __chkstk_darwin(v488);
  v481 = (char *)&v472 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v484 = (uint64_t)&v472 - v37;
  v483 = sub_100007E8C(&qword_10119D2D0);
  v499 = *(_QWORD *)(v483 - 8);
  __chkstk_darwin(v483);
  v498 = (char *)&v472 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100007E8C(&qword_10119F7B0);
  __chkstk_darwin(v39);
  v494 = (char *)&v472 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_10119F7B8);
  __chkstk_darwin(v41);
  v496 = (uint64_t)&v472 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v512 = sub_100007E8C(&qword_1011CE400);
  __chkstk_darwin(v512);
  v495 = (char *)&v472 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v497 = (uint64_t)&v472 - v45;
  v507 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  v506 = *(_QWORD *)(v507 - 8);
  __chkstk_darwin(v507);
  v505 = (char *)&v472 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v515 = sub_100007E8C(&qword_1011CE408);
  __chkstk_darwin(v515);
  v517 = (uint64_t)&v472 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v509 = sub_100007E8C(&qword_1011CE410);
  __chkstk_darwin(v509);
  v510 = (uint64_t)&v472 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v516 = sub_100007E8C(&qword_1011CE418);
  __chkstk_darwin(v516);
  v511 = (char *)&v472 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v573 = sub_100007E8C(&qword_1011CE420);
  __chkstk_darwin(v573);
  v518 = (char *)&v472 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100007E8C(&qword_1011B33E8);
  __chkstk_darwin(v51);
  v502 = (char *)&v472 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100007E8C(&qword_1011CE428);
  __chkstk_darwin(v53);
  v503 = (uint64_t)&v472 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v539 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v538 = *(_QWORD *)(v539 - 8);
  __chkstk_darwin(v539);
  v514 = (char *)&v472 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v508 = sub_100007E8C(&qword_1011CE430);
  __chkstk_darwin(v508);
  v501 = (char *)&v472 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  v504 = (uint64_t)&v472 - v58;
  v545 = type metadata accessor for Library.Context(0);
  v544 = *(_QWORD *)(v545 - 8);
  __chkstk_darwin(v545);
  v513 = (char **)((char *)&v472 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  v523 = sub_100007E8C(&qword_1011A3C78);
  v522 = *(_QWORD *)(v523 - 8);
  __chkstk_darwin(v523);
  v521 = (char *)&v472 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v527 = type metadata accessor for Playlist(0);
  v526 = *(_QWORD *)(v527 - 8);
  __chkstk_darwin(v527);
  v525 = (char *)&v472 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v530 = type metadata accessor for Composer(0);
  v529 = *(_QWORD *)(v530 - 8);
  __chkstk_darwin(v530);
  v528 = (char *)&v472 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v543 = type metadata accessor for Artist(0);
  v542 = *(_QWORD *)(v543 - 8);
  __chkstk_darwin(v543);
  v541 = (char *)&v472 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v583 = sub_100007E8C(&qword_1011CE438);
  __chkstk_darwin(v583);
  v586 = (char *)&v472 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v570 = sub_100007E8C(&qword_1011CE440);
  __chkstk_darwin(v570);
  v572 = (uint64_t)&v472 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v562 = sub_100007E8C(&qword_1011CE448);
  __chkstk_darwin(v562);
  v565 = (uint64_t)&v472 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v560 = sub_100007E8C(&qword_1011CE450);
  __chkstk_darwin(v560);
  v561 = (char *)&v472 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v563 = sub_100007E8C(&qword_1011CE458);
  __chkstk_darwin(v563);
  v564 = (char *)&v472 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v571 = sub_100007E8C(&qword_1011CE460);
  __chkstk_darwin(v571);
  v566 = (char *)&v472 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v584 = sub_100007E8C(&qword_1011CE468);
  __chkstk_darwin(v584);
  v574 = (char *)&v472 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v559 = type metadata accessor for PlainButtonStyle(0);
  v556 = *(_QWORD *)(v559 - 8);
  __chkstk_darwin(v559);
  v555 = (char *)&v472 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C(&qword_1011A3CF0);
  __chkstk_darwin(v72);
  v552 = (char *)&v472 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v558 = sub_100007E8C(&qword_1011CE470);
  v554 = *(_QWORD *)(v558 - 8);
  __chkstk_darwin(v558);
  v553 = (char *)&v472 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v569 = sub_100007E8C(&qword_1011CE478);
  v568 = *(_QWORD *)(v569 - 8);
  __chkstk_darwin(v569);
  v557 = (char *)&v472 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v76);
  v567 = (char *)&v472 - v77;
  v78 = type metadata accessor for GenericMusicItem(0);
  v79 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v81 = (char *)&v472 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v82);
  v479 = (char *)&v472 - v83;
  __chkstk_darwin(v84);
  v493 = (char *)&v472 - v85;
  __chkstk_darwin(v86);
  v500 = (char *)&v472 - v87;
  __chkstk_darwin(v88);
  v520 = (char *)&v472 - v89;
  __chkstk_darwin(v90);
  v524 = (char *)&v472 - v91;
  __chkstk_darwin(v92);
  v94 = (char *)&v472 - v93;
  __chkstk_darwin(v95);
  v97 = (char *)&v472 - v96;
  __chkstk_darwin(v98);
  v100 = (char *)&v472 - v99;
  v575 = type metadata accessor for Album(0);
  v101 = *(_QWORD *)(v575 - 8);
  __chkstk_darwin(v575);
  v103 = (char *)&v472 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  v588 = sub_100007E8C(&qword_1011CE480);
  v105 = __chkstk_darwin(v588);
  v585 = (char *)&v472 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = *(int *)(v19 + 20);
  v108 = v2;
  if (*(_BYTE *)(v2 + v107) == 1)
  {
    v582 = v104;
    v109 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v79 + 16);
    v109(v100, v108, v78, v105);
    v110 = *(uint64_t (**)(char *, uint64_t))(v79 + 88);
    if (v110(v100, v78) == enum case for GenericMusicItem.album(_:))
    {
      (*(void (**)(char *, uint64_t))(v79 + 96))(v100, v78);
      v111 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
      v473 = v101;
      v112 = v103;
      v472 = v103;
      v113 = v575;
      v111(v103, v100, v575);
      v114 = (int *)sub_100007E8C(&qword_1011C5BA0);
      v115 = v552;
      v116 = &v552[v114[12]];
      v117 = &v552[v114[16]];
      v118 = v114[20];
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v552, v112, v113);
      Library.Context.init()(v116);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v544 + 56))(v116, 0, 1, v545);
      *(_QWORD *)v117 = 0;
      *((_QWORD *)v117 + 1) = 0;
      *(_OWORD *)&v115[v118] = xmmword_100EAE4D0;
      v119 = type metadata accessor for NavigationDestinationItem(0);
      swift_storeEnumTagMultiPayload(v115, v119, 1);
      v120 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v115, 0, 1, v119);
      __chkstk_darwin(v120);
      *(&v472 - 2) = (char *)v587;
      v121 = sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
      v587 = v121;
      v122 = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
      v123 = v553;
      v124 = NavigationLink<>.init<A>(value:label:)(v115, sub_10089F660, &v472 - 4, v593, v119, v121, v122);
      v125 = v555;
      PlainButtonStyle.init()(v124);
      v126 = sub_100049F28(&qword_1011CE4D8, &qword_1011CE470, (uint64_t)&protocol conformance descriptor for NavigationLink<A, B>);
      v127 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
      v128 = v557;
      v129 = v558;
      v130 = v559;
      View.buttonStyle<A>(_:)(v125, v558, v559, v126, v127);
      (*(void (**)(char *, uint64_t))(v556 + 8))(v125, v130);
      (*(void (**)(char *, uint64_t))(v554 + 8))(v123, v129);
      v131 = v568;
      v132 = v567;
      v133 = v569;
      (*(void (**)(char *, char *, uint64_t))(v568 + 32))(v567, v128, v569);
      v134 = v561;
      (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v561, v132, v133);
      swift_storeEnumTagMultiPayload(v134, v560, 0);
      v594 = v129;
      v595 = v130;
      v596 = v126;
      v597 = v127;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v594, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
      v136 = (uint64_t)v564;
      _ConditionalContent<>.init(storage:)(v134, v133, v133, OpaqueTypeConformance2, OpaqueTypeConformance2);
      v137 = v565;
      sub_10004A160(v136, v565, &qword_1011CE458);
      swift_storeEnumTagMultiPayload(v137, v562, 0);
      v138 = sub_10089F2F8();
      v139 = (uint64_t)v566;
      _ConditionalContent<>.init(storage:)(v137, v563, v563, v138, v138);
      sub_10004FF60(v136, &qword_1011CE458);
      v140 = v572;
      sub_10004A160(v139, v572, &qword_1011CE460);
      swift_storeEnumTagMultiPayload(v140, v570, 0);
      v141 = sub_10089F294();
      v142 = sub_10089F3E0();
      v143 = (uint64_t)v574;
      _ConditionalContent<>.init(storage:)(v140, v571, v573, v141, v142);
      sub_10004FF60(v139, &qword_1011CE460);
      v144 = (uint64_t)v586;
      sub_10004A160(v143, (uint64_t)v586, &qword_1011CE468);
      swift_storeEnumTagMultiPayload(v144, v583, 0);
      v145 = sub_10015FD08(&qword_1011CE4C0, &qword_1011CE468, (void (*)(void))sub_10089F294, (void (*)(void))sub_10089F3E0);
      v146 = (uint64_t)v585;
      _ConditionalContent<>.init(storage:)(v144, v584, v593, v145, v587);
      sub_10004FF60(v143, &qword_1011CE468);
      (*(void (**)(char *, uint64_t))(v131 + 8))(v132, v133);
      (*(void (**)(char *, uint64_t))(v473 + 8))(v472, v575);
    }
    else
    {
      v169 = *(void (**)(char *, uint64_t))(v79 + 8);
      v169(v100, v78);
      ((void (*)(char *, uint64_t, uint64_t))v109)(v97, v108, v78);
      if (v110(v97, v78) == enum case for GenericMusicItem.artist(_:))
      {
        (*(void (**)(char *, uint64_t))(v79 + 96))(v97, v78);
        v170 = v542;
        v171 = v541;
        v172 = v97;
        v173 = v543;
        (*(void (**)(char *, char *, uint64_t))(v542 + 32))(v541, v172, v543);
        v174 = *(int *)(sub_100007E8C(&qword_10119ED20) + 48);
        v175 = v552;
        (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v552, v171, v173);
        *(_OWORD *)&v175[v174] = xmmword_100EAE4D0;
        v176 = type metadata accessor for NavigationDestinationItem(0);
        swift_storeEnumTagMultiPayload(v175, v176, 3);
        v177 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v176 - 8) + 56))(v175, 0, 1, v176);
        __chkstk_darwin(v177);
        *(&v472 - 2) = (char *)v587;
        v178 = sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
        v587 = v178;
        v179 = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
        v180 = v553;
        v181 = NavigationLink<>.init<A>(value:label:)(v175, sub_10089F660, &v472 - 4, v593, v176, v178, v179);
        v182 = v555;
        PlainButtonStyle.init()(v181);
        v183 = sub_100049F28(&qword_1011CE4D8, &qword_1011CE470, (uint64_t)&protocol conformance descriptor for NavigationLink<A, B>);
        v184 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
        v185 = v557;
        v186 = v558;
        v187 = v559;
        View.buttonStyle<A>(_:)(v182, v558, v559, v183, v184);
        (*(void (**)(char *, uint64_t))(v556 + 8))(v182, v187);
        (*(void (**)(char *, uint64_t))(v554 + 8))(v180, v186);
        v188 = v568;
        v189 = v567;
        v190 = v569;
        (*(void (**)(char *, char *, uint64_t))(v568 + 32))(v567, v185, v569);
        v191 = v561;
        (*(void (**)(char *, char *, uint64_t))(v188 + 16))(v561, v189, v190);
        swift_storeEnumTagMultiPayload(v191, v560, 1);
        v594 = v186;
        v595 = v187;
        v596 = v183;
        v597 = v184;
        v192 = swift_getOpaqueTypeConformance2(&v594, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
        v193 = (uint64_t)v564;
        _ConditionalContent<>.init(storage:)(v191, v190, v190, v192, v192);
        v194 = v565;
        sub_10004A160(v193, v565, &qword_1011CE458);
        swift_storeEnumTagMultiPayload(v194, v562, 0);
        v195 = sub_10089F2F8();
        v196 = (uint64_t)v566;
        _ConditionalContent<>.init(storage:)(v194, v563, v563, v195, v195);
        sub_10004FF60(v193, &qword_1011CE458);
        v197 = v572;
        sub_10004A160(v196, v572, &qword_1011CE460);
        swift_storeEnumTagMultiPayload(v197, v570, 0);
        v198 = sub_10089F294();
        v199 = sub_10089F3E0();
        v200 = (uint64_t)v574;
        _ConditionalContent<>.init(storage:)(v197, v571, v573, v198, v199);
        sub_10004FF60(v196, &qword_1011CE460);
        v201 = (uint64_t)v586;
        sub_10004A160(v200, (uint64_t)v586, &qword_1011CE468);
        swift_storeEnumTagMultiPayload(v201, v583, 0);
        v202 = sub_10015FD08(&qword_1011CE4C0, &qword_1011CE468, (void (*)(void))sub_10089F294, (void (*)(void))sub_10089F3E0);
        v146 = (uint64_t)v585;
        _ConditionalContent<>.init(storage:)(v201, v584, v593, v202, v587);
        sub_10004FF60(v200, &qword_1011CE468);
        (*(void (**)(char *, uint64_t))(v188 + 8))(v189, v190);
        (*(void (**)(char *, uint64_t))(v542 + 8))(v541, v543);
      }
      else
      {
        v169(v97, v78);
        ((void (*)(char *, uint64_t, uint64_t))v109)(v94, v108, v78);
        if (v110(v94, v78) == enum case for GenericMusicItem.composer(_:))
        {
          (*(void (**)(char *, uint64_t))(v79 + 96))(v94, v78);
          v229 = v529;
          v230 = v528;
          v231 = v94;
          v232 = v530;
          (*(void (**)(char *, char *, uint64_t))(v529 + 32))(v528, v231, v530);
          v233 = *(int *)(sub_100007E8C(&qword_10119ED28) + 48);
          v234 = v552;
          (*(void (**)(char *, char *, uint64_t))(v229 + 16))(v552, v230, v232);
          *(_OWORD *)&v234[v233] = xmmword_100EAE4D0;
          v235 = type metadata accessor for NavigationDestinationItem(0);
          swift_storeEnumTagMultiPayload(v234, v235, 4);
          v236 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v235 - 8) + 56))(v234, 0, 1, v235);
          __chkstk_darwin(v236);
          *(&v472 - 2) = (char *)v587;
          v237 = sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
          v587 = v237;
          v238 = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
          v239 = v553;
          v240 = NavigationLink<>.init<A>(value:label:)(v234, sub_10089F660, &v472 - 4, v593, v235, v237, v238);
          v241 = v555;
          PlainButtonStyle.init()(v240);
          v242 = sub_100049F28(&qword_1011CE4D8, &qword_1011CE470, (uint64_t)&protocol conformance descriptor for NavigationLink<A, B>);
          v243 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
          v244 = v557;
          v245 = v558;
          v246 = v559;
          View.buttonStyle<A>(_:)(v241, v558, v559, v242, v243);
          (*(void (**)(char *, uint64_t))(v556 + 8))(v241, v246);
          (*(void (**)(char *, uint64_t))(v554 + 8))(v239, v245);
          v247 = v568;
          v248 = v567;
          v249 = v569;
          (*(void (**)(char *, char *, uint64_t))(v568 + 32))(v567, v244, v569);
          v250 = v561;
          (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v561, v248, v249);
          swift_storeEnumTagMultiPayload(v250, v560, 0);
          v594 = v245;
          v595 = v246;
          v596 = v242;
          v597 = v243;
          v251 = swift_getOpaqueTypeConformance2(&v594, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
          v252 = (uint64_t)v564;
          _ConditionalContent<>.init(storage:)(v250, v249, v249, v251, v251);
          v253 = v565;
          sub_10004A160(v252, v565, &qword_1011CE458);
          swift_storeEnumTagMultiPayload(v253, v562, 1);
          v254 = sub_10089F2F8();
          v255 = (uint64_t)v566;
          _ConditionalContent<>.init(storage:)(v253, v563, v563, v254, v254);
          sub_10004FF60(v252, &qword_1011CE458);
          v256 = v572;
          sub_10004A160(v255, v572, &qword_1011CE460);
          swift_storeEnumTagMultiPayload(v256, v570, 0);
          v257 = sub_10089F294();
          v258 = sub_10089F3E0();
          v259 = (uint64_t)v574;
          _ConditionalContent<>.init(storage:)(v256, v571, v573, v257, v258);
          sub_10004FF60(v255, &qword_1011CE460);
          v260 = (uint64_t)v586;
          sub_10004A160(v259, (uint64_t)v586, &qword_1011CE468);
          swift_storeEnumTagMultiPayload(v260, v583, 0);
          v261 = sub_10015FD08(&qword_1011CE4C0, &qword_1011CE468, (void (*)(void))sub_10089F294, (void (*)(void))sub_10089F3E0);
          v146 = (uint64_t)v585;
          _ConditionalContent<>.init(storage:)(v260, v584, v593, v261, v587);
          sub_10004FF60(v259, &qword_1011CE468);
          (*(void (**)(char *, uint64_t))(v247 + 8))(v248, v249);
          (*(void (**)(char *, uint64_t))(v529 + 8))(v528, v530);
        }
        else
        {
          v169(v94, v78);
          v262 = v524;
          ((void (*)(char *, uint64_t, uint64_t))v109)(v524, v108, v78);
          if (v110(v262, v78) == enum case for GenericMusicItem.playlist(_:))
          {
            (*(void (**)(char *, uint64_t))(v79 + 96))(v262, v78);
            v263 = v526;
            v264 = v525;
            v265 = v527;
            (*(void (**)(char *, char *, uint64_t))(v526 + 32))(v525, v262, v527);
            v266 = (int *)sub_100007E8C(&qword_10119ED18);
            v267 = v552;
            v268 = &v552[v266[12]];
            v269 = &v552[v266[16]];
            v270 = v266[20];
            (*(void (**)(char *, char *, uint64_t))(v263 + 16))(v552, v264, v265);
            Library.Context.init()(v268);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v544 + 56))(v268, 0, 1, v545);
            *(_QWORD *)v269 = 0;
            *((_QWORD *)v269 + 1) = 0;
            *(_OWORD *)&v267[v270] = xmmword_100EAE4D0;
            v271 = type metadata accessor for NavigationDestinationItem(0);
            swift_storeEnumTagMultiPayload(v267, v271, 2);
            v272 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v271 - 8) + 56))(v267, 0, 1, v271);
            __chkstk_darwin(v272);
            *(&v472 - 2) = (char *)v587;
            v273 = sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
            v587 = v273;
            v274 = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
            v275 = v553;
            v276 = NavigationLink<>.init<A>(value:label:)(v267, sub_10089F660, &v472 - 4, v593, v271, v273, v274);
            v277 = v555;
            PlainButtonStyle.init()(v276);
            v278 = sub_100049F28(&qword_1011CE4D8, &qword_1011CE470, (uint64_t)&protocol conformance descriptor for NavigationLink<A, B>);
            v279 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
            v280 = v557;
            v281 = v558;
            v282 = v559;
            View.buttonStyle<A>(_:)(v277, v558, v559, v278, v279);
            (*(void (**)(char *, uint64_t))(v556 + 8))(v277, v282);
            (*(void (**)(char *, uint64_t))(v554 + 8))(v275, v281);
            v283 = v568;
            v284 = v567;
            v285 = v569;
            (*(void (**)(char *, char *, uint64_t))(v568 + 32))(v567, v280, v569);
            v286 = v561;
            (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v561, v284, v285);
            swift_storeEnumTagMultiPayload(v286, v560, 1);
            v594 = v281;
            v595 = v282;
            v596 = v278;
            v597 = v279;
            v287 = swift_getOpaqueTypeConformance2(&v594, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
            v288 = (uint64_t)v564;
            _ConditionalContent<>.init(storage:)(v286, v285, v285, v287, v287);
            v289 = v565;
            sub_10004A160(v288, v565, &qword_1011CE458);
            swift_storeEnumTagMultiPayload(v289, v562, 1);
            v290 = sub_10089F2F8();
            v291 = (uint64_t)v566;
            _ConditionalContent<>.init(storage:)(v289, v563, v563, v290, v290);
            sub_10004FF60(v288, &qword_1011CE458);
            v292 = v572;
            sub_10004A160(v291, v572, &qword_1011CE460);
            swift_storeEnumTagMultiPayload(v292, v570, 0);
            v293 = sub_10089F294();
            v294 = sub_10089F3E0();
            v295 = (uint64_t)v574;
            _ConditionalContent<>.init(storage:)(v292, v571, v573, v293, v294);
            sub_10004FF60(v291, &qword_1011CE460);
            v296 = (uint64_t)v586;
            sub_10004A160(v295, (uint64_t)v586, &qword_1011CE468);
            swift_storeEnumTagMultiPayload(v296, v583, 0);
            v297 = sub_10015FD08(&qword_1011CE4C0, &qword_1011CE468, (void (*)(void))sub_10089F294, (void (*)(void))sub_10089F3E0);
            v146 = (uint64_t)v585;
            _ConditionalContent<>.init(storage:)(v296, v584, v593, v297, v587);
            sub_10004FF60(v295, &qword_1011CE468);
            (*(void (**)(char *, uint64_t))(v283 + 8))(v284, v285);
            (*(void (**)(char *, uint64_t))(v526 + 8))(v525, v527);
          }
          else
          {
            v169(v262, v78);
            v298 = v520;
            v299 = (void (*)(char *, uint64_t, uint64_t))v109;
            ((void (*)(char *, uint64_t, uint64_t))v109)(v520, v108, v78);
            v300 = v110(v298, v78);
            v301 = enum case for GenericMusicItem.song(_:);
            v169(v298, v78);
            v302 = (char *)v108;
            if (v300 == v301)
            {
              v303 = v513;
              Library.Context.init()(v513);
              v304 = v521;
              sub_10065172C(v303);
              sub_10005B748((uint64_t)v303, type metadata accessor for Library.Context);
              v305 = v538;
              v306 = *(void (**)(char *, uint64_t, uint64_t))(v538 + 16);
              v307 = v514;
              v308 = v539;
              v306(v514, v108 + *(int *)(v582 + 32), v539);
              v309 = v522;
              v310 = (uint64_t)v502;
              v311 = v304;
              v312 = v523;
              (*(void (**)(char *, char *, uint64_t))(v522 + 16))(v502, v311, v523);
              v313 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v309 + 56))(v310, 0, 1, v312);
              __chkstk_darwin(v313);
              *(&v472 - 2) = (char *)v108;
              v314 = v503;
              sub_10041606C(v310, (void (*)(uint64_t))sub_10089F640, v503);
              sub_10004FF60(v310, &qword_1011B33E8);
              v315 = v508;
              v316 = (uint64_t)v501;
              v317 = &v501[*(int *)(v508 + 36)];
              v306(v317, (uint64_t)v307, v308);
              v318 = sub_100007E8C(&qword_1011CE500);
              sub_10004A160(v314, (uint64_t)&v317[*(int *)(v318 + 36)], &qword_1011CE428);
              v319 = v593;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v551 + 16))(v316, v587, v593);
              sub_10004FF60(v314, &qword_1011CE428);
              (*(void (**)(char *, uint64_t))(v305 + 8))(v307, v308);
              v320 = v504;
              sub_100065228(v316, v504, &qword_1011CE430);
              v321 = v510;
              sub_10004A160(v320, v510, &qword_1011CE430);
              swift_storeEnumTagMultiPayload(v321, v509, 0);
              v322 = sub_10089F0B4(&qword_1011CE4F0, &qword_1011CE430, &qword_1011CE4F8, &qword_1011CE500);
              v323 = sub_10089F0B4(&qword_1011CE508, &qword_1011CE400, &qword_1011CE510, &qword_1011CE518);
              v324 = (uint64_t)v511;
              _ConditionalContent<>.init(storage:)(v321, v315, v512, v322, v323);
              v325 = v517;
              sub_10004A160(v324, v517, &qword_1011CE418);
              swift_storeEnumTagMultiPayload(v325, v515, 0);
              v326 = sub_10089F404();
              v327 = sub_10089F4B0();
              v328 = (uint64_t)v518;
              _ConditionalContent<>.init(storage:)(v325, v516, v519, v326, v327);
              sub_10004FF60(v324, &qword_1011CE418);
              v329 = v572;
              sub_10004A160(v328, v572, &qword_1011CE420);
              swift_storeEnumTagMultiPayload(v329, v570, 1);
              v330 = sub_10089F294();
              v331 = sub_10089F3E0();
              v332 = (uint64_t)v574;
              _ConditionalContent<>.init(storage:)(v329, v571, v573, v330, v331);
              sub_10004FF60(v328, &qword_1011CE420);
              v333 = (uint64_t)v586;
              sub_10004A160(v332, (uint64_t)v586, &qword_1011CE468);
              swift_storeEnumTagMultiPayload(v333, v583, 0);
              v334 = sub_10015FD08(&qword_1011CE4C0, &qword_1011CE468, (void (*)(void))sub_10089F294, (void (*)(void))sub_10089F3E0);
              v335 = sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
              v146 = (uint64_t)v585;
              _ConditionalContent<>.init(storage:)(v333, v584, v319, v334, v335);
              sub_10004FF60(v332, &qword_1011CE468);
              sub_10004FF60(v320, &qword_1011CE430);
              (*(void (**)(char *, uint64_t))(v522 + 8))(v521, v523);
            }
            else
            {
              v336 = v500;
              v299(v500, v108, v78);
              v337 = v110(v336, v78);
              v338 = enum case for GenericMusicItem.musicVideo(_:);
              v169(v336, v78);
              v339 = v582;
              if (v337 == v338)
              {
                v340 = v513;
                Library.Context.init()(v513);
                v341 = v505;
                sub_100650CAC(v340);
                sub_10005B748((uint64_t)v340, type metadata accessor for Library.Context);
                v342 = v108 + *(int *)(v339 + 32);
                v343 = v538;
                v344 = *(void (**)(char *, uint64_t, uint64_t))(v538 + 16);
                v345 = v514;
                v346 = v539;
                v344(v514, v342, v539);
                v347 = v506;
                v348 = (uint64_t)v494;
                v349 = v341;
                v350 = v507;
                (*(void (**)(char *, char *, uint64_t))(v506 + 16))(v494, v349, v507);
                v351 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v347 + 56))(v348, 0, 1, v350);
                __chkstk_darwin(v351);
                *(&v472 - 2) = (char *)v108;
                v352 = v496;
                sub_100415C78(v348, (void (*)(uint64_t))sub_10089F620, v496);
                sub_10004FF60(v348, &qword_10119F7B0);
                v353 = v512;
                v354 = (uint64_t)v495;
                v355 = &v495[*(int *)(v512 + 36)];
                v344(v355, (uint64_t)v345, v346);
                v356 = sub_100007E8C(&qword_1011CE518);
                sub_10004A160(v352, (uint64_t)&v355[*(int *)(v356 + 36)], &qword_10119F7B8);
                v357 = v593;
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v551 + 16))(v354, v587, v593);
                sub_10004FF60(v352, &qword_10119F7B8);
                (*(void (**)(char *, uint64_t))(v343 + 8))(v345, v346);
                v358 = v497;
                sub_100065228(v354, v497, &qword_1011CE400);
                v359 = v510;
                sub_10004A160(v358, v510, &qword_1011CE400);
                swift_storeEnumTagMultiPayload(v359, v509, 1);
                v360 = sub_10089F0B4(&qword_1011CE4F0, &qword_1011CE430, &qword_1011CE4F8, &qword_1011CE500);
                v361 = sub_10089F0B4(&qword_1011CE508, &qword_1011CE400, &qword_1011CE510, &qword_1011CE518);
                v362 = (uint64_t)v511;
                _ConditionalContent<>.init(storage:)(v359, v508, v353, v360, v361);
                v363 = v517;
                sub_10004A160(v362, v517, &qword_1011CE418);
                swift_storeEnumTagMultiPayload(v363, v515, 0);
                v364 = sub_10089F404();
                v365 = sub_10089F4B0();
                v366 = (uint64_t)v518;
                _ConditionalContent<>.init(storage:)(v363, v516, v519, v364, v365);
                sub_10004FF60(v362, &qword_1011CE418);
                v367 = v572;
                sub_10004A160(v366, v572, &qword_1011CE420);
                swift_storeEnumTagMultiPayload(v367, v570, 1);
                v368 = sub_10089F294();
                v369 = sub_10089F3E0();
                v370 = (uint64_t)v574;
                _ConditionalContent<>.init(storage:)(v367, v571, v573, v368, v369);
                sub_10004FF60(v366, &qword_1011CE420);
                v371 = (uint64_t)v586;
                sub_10004A160(v370, (uint64_t)v586, &qword_1011CE468);
                swift_storeEnumTagMultiPayload(v371, v583, 0);
                v372 = sub_10015FD08(&qword_1011CE4C0, &qword_1011CE468, (void (*)(void))sub_10089F294, (void (*)(void))sub_10089F3E0);
                v373 = sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
                v146 = (uint64_t)v585;
                _ConditionalContent<>.init(storage:)(v371, v584, v357, v372, v373);
                sub_10004FF60(v370, &qword_1011CE468);
                sub_10004FF60(v358, &qword_1011CE400);
                (*(void (**)(char *, uint64_t))(v506 + 8))(v505, v507);
              }
              else
              {
                v374 = v493;
                v299(v493, v108, v78);
                v375 = v110(v374, v78);
                v376 = enum case for GenericMusicItem.musicMovie(_:);
                v169(v374, v78);
                if (v375 == v376)
                {
                  v377 = v513;
                  Library.Context.init()(v513);
                  v378 = type metadata accessor for TitledSection(0);
                  v379 = type metadata accessor for MusicMovie(0);
                  v380 = sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
                  v381 = v498;
                  MusicLibrarySectionedRequest.init()(v378, v379, &protocol witness table for TitledSection, v380);
                  swift_retain();
                  v382 = v483;
                  MusicLibrarySectionedRequest.library.setter(v383, v483);
                  v384 = v381;
                  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)v377 + *(int *)(v545 + 48)), v382);
                  sub_10005B748((uint64_t)v377, type metadata accessor for Library.Context);
                  v385 = v108 + *(int *)(v339 + 32);
                  v386 = v538;
                  v387 = *(void (**)(char *, uint64_t, uint64_t))(v538 + 16);
                  v388 = v514;
                  v389 = v539;
                  v387(v514, v385, v539);
                  v390 = v499;
                  v391 = (uint64_t)v480;
                  (*(void (**)(char *, char *, uint64_t))(v499 + 16))(v480, v384, v382);
                  v392 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v390 + 56))(v391, 0, 1, v382);
                  __chkstk_darwin(v392);
                  *(&v472 - 2) = v302;
                  v393 = v482;
                  sub_100416088(v391, (void (*)(uint64_t))sub_10089F600, v482);
                  sub_10004FF60(v391, &qword_1011B33F0);
                  v394 = v488;
                  v395 = (uint64_t)v481;
                  v396 = &v481[*(int *)(v488 + 36)];
                  v387(v396, (uint64_t)v388, v389);
                  v397 = sub_100007E8C(&qword_1011CE538);
                  sub_10004A160(v393, (uint64_t)&v396[*(int *)(v397 + 36)], &qword_1011CE3F0);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v551 + 16))(v395, v587, v593);
                  sub_10004FF60(v393, &qword_1011CE3F0);
                  (*(void (**)(char *, uint64_t))(v386 + 8))(v388, v389);
                  v398 = v484;
                  sub_100065228(v395, v484, &qword_1011CE3F8);
                  v399 = v490;
                  sub_10004A160(v398, v490, &qword_1011CE3F8);
                  swift_storeEnumTagMultiPayload(v399, v489, 0);
                  v400 = sub_10089F0B4(&qword_1011CE528, &qword_1011CE3F8, &qword_1011CE530, &qword_1011CE538);
                  v401 = sub_10089F0B4(&qword_1011CE540, &qword_1011CE3D8, &qword_1011CE548, &qword_1011CE550);
                  v402 = (uint64_t)v492;
                  _ConditionalContent<>.init(storage:)(v399, v394, v491, v400, v401);
                  v403 = v517;
                  sub_10004A160(v402, v517, &qword_1011CE3E8);
                  swift_storeEnumTagMultiPayload(v403, v515, 1);
                  v404 = sub_10089F404();
                  v405 = sub_10089F4B0();
                  v406 = (uint64_t)v518;
                  _ConditionalContent<>.init(storage:)(v403, v516, v519, v404, v405);
                  sub_10004FF60(v402, &qword_1011CE3E8);
                  v407 = v572;
                  sub_10004A160(v406, v572, &qword_1011CE420);
                  swift_storeEnumTagMultiPayload(v407, v570, 1);
                  v408 = sub_10089F294();
                  v409 = sub_10089F3E0();
                  v410 = (uint64_t)v574;
                  _ConditionalContent<>.init(storage:)(v407, v571, v573, v408, v409);
                  sub_10004FF60(v406, &qword_1011CE420);
                  v411 = (uint64_t)v586;
                  sub_10004A160(v410, (uint64_t)v586, &qword_1011CE468);
                  swift_storeEnumTagMultiPayload(v411, v583, 0);
                  v412 = sub_10015FD08(&qword_1011CE4C0, &qword_1011CE468, (void (*)(void))sub_10089F294, (void (*)(void))sub_10089F3E0);
                  v413 = sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
                  v146 = (uint64_t)v585;
                  _ConditionalContent<>.init(storage:)(v411, v584, v593, v412, v413);
                  sub_10004FF60(v410, &qword_1011CE468);
                  sub_10004FF60(v398, &qword_1011CE3F8);
                  (*(void (**)(char *, uint64_t))(v499 + 8))(v498, v382);
                }
                else
                {
                  v414 = v479;
                  v299(v479, v108, v78);
                  v415 = v110(v414, v78);
                  v416 = enum case for GenericMusicItem.tvEpisode(_:);
                  v169(v414, v78);
                  if (v415 == v416)
                  {
                    v417 = v513;
                    Library.Context.init()(v513);
                    v418 = v485;
                    sub_100651CB8(v417);
                    sub_10005B748((uint64_t)v417, type metadata accessor for Library.Context);
                    v419 = v538;
                    v420 = *(void (**)(char *, uint64_t, uint64_t))(v538 + 16);
                    v421 = v514;
                    v422 = v539;
                    v420(v514, v108 + *(int *)(v339 + 32), v539);
                    v423 = v486;
                    v424 = (uint64_t)v474;
                    v425 = v418;
                    v426 = v487;
                    (*(void (**)(char *, char *, uint64_t))(v486 + 16))(v474, v425, v487);
                    v427 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v423 + 56))(v424, 0, 1, v426);
                    __chkstk_darwin(v427);
                    *(&v472 - 2) = (char *)v108;
                    v428 = v476;
                    sub_100415C94(v424, (void (*)(uint64_t))sub_10089F5E0, v476);
                    sub_10004FF60(v424, &qword_1011A05C0);
                    v429 = v491;
                    v430 = (uint64_t)v475;
                    v431 = &v475[*(int *)(v491 + 36)];
                    v420(v431, (uint64_t)v421, v422);
                    v432 = sub_100007E8C(&qword_1011CE550);
                    sub_10004A160(v428, (uint64_t)&v431[*(int *)(v432 + 36)], &qword_1011A05C8);
                    v433 = v593;
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v551 + 16))(v430, v587, v593);
                    sub_10004FF60(v428, &qword_1011A05C8);
                    (*(void (**)(char *, uint64_t))(v419 + 8))(v421, v422);
                    v434 = v478;
                    sub_100065228(v430, v478, &qword_1011CE3D8);
                    v435 = v490;
                    sub_10004A160(v434, v490, &qword_1011CE3D8);
                    swift_storeEnumTagMultiPayload(v435, v489, 1);
                    v436 = sub_10089F0B4(&qword_1011CE528, &qword_1011CE3F8, &qword_1011CE530, &qword_1011CE538);
                    v437 = sub_10089F0B4(&qword_1011CE540, &qword_1011CE3D8, &qword_1011CE548, &qword_1011CE550);
                    v438 = (uint64_t)v492;
                    _ConditionalContent<>.init(storage:)(v435, v488, v429, v436, v437);
                    v439 = v517;
                    sub_10004A160(v438, v517, &qword_1011CE3E8);
                    swift_storeEnumTagMultiPayload(v439, v515, 1);
                    v440 = sub_10089F404();
                    v441 = sub_10089F4B0();
                    v442 = (uint64_t)v518;
                    _ConditionalContent<>.init(storage:)(v439, v516, v519, v440, v441);
                    sub_10004FF60(v438, &qword_1011CE3E8);
                    v443 = v572;
                    sub_10004A160(v442, v572, &qword_1011CE420);
                    swift_storeEnumTagMultiPayload(v443, v570, 1);
                    v444 = sub_10089F294();
                    v445 = sub_10089F3E0();
                    v446 = (uint64_t)v574;
                    _ConditionalContent<>.init(storage:)(v443, v571, v573, v444, v445);
                    sub_10004FF60(v442, &qword_1011CE420);
                    v447 = (uint64_t)v586;
                    sub_10004A160(v446, (uint64_t)v586, &qword_1011CE468);
                    swift_storeEnumTagMultiPayload(v447, v583, 0);
                    v448 = sub_10015FD08(&qword_1011CE4C0, &qword_1011CE468, (void (*)(void))sub_10089F294, (void (*)(void))sub_10089F3E0);
                    v449 = sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
                    v146 = (uint64_t)v585;
                    _ConditionalContent<>.init(storage:)(v447, v584, v433, v448, v449);
                    sub_10004FF60(v446, &qword_1011CE468);
                    sub_10004FF60(v434, &qword_1011CE3D8);
                    (*(void (**)(char *, uint64_t))(v486 + 8))(v485, v487);
                  }
                  else
                  {
                    if (qword_10119C9C0 != -1)
                      swift_once(&qword_10119C9C0, sub_100899D30);
                    v450 = type metadata accessor for Logger(0);
                    sub_100048B14(v450, (uint64_t)qword_10124DB48);
                    v451 = v108;
                    v452 = v477;
                    v453 = sub_10005B704(v451, v477, _s4LinkVMa);
                    v454 = Logger.logObject.getter(v453);
                    v455 = static os_log_type_t.error.getter(v454);
                    if (os_log_type_enabled(v454, v455))
                    {
                      v456 = (uint8_t *)swift_slowAlloc(12, -1);
                      v457 = swift_slowAlloc(32, -1);
                      v594 = v457;
                      *(_DWORD *)v456 = 136446210;
                      v458 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                      v459 = dispatch thunk of CustomStringConvertible.description.getter(v78, v458);
                      v598 = sub_100322200(v459, v460, &v594);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v598, v599);
                      swift_bridgeObjectRelease();
                      sub_10005B748(v452, _s4LinkVMa);
                      _os_log_impl((void *)&_mh_execute_header, v454, v455, "Skipped rendering link for unhandled item: %{public}s", v456, 0xCu);
                      swift_arrayDestroy(v457, 1, (char *)&type metadata for Any + 8);
                      swift_slowDealloc(v457, -1, -1);
                      swift_slowDealloc(v456, -1, -1);
                    }
                    else
                    {
                      sub_10005B748(v452, _s4LinkVMa);
                    }

                    v461 = v593;
                    v462 = v551;
                    v463 = *(void (**)(char *, uint64_t, uint64_t))(v551 + 16);
                    v464 = v540;
                    v463(v540, v587, v593);
                    v465 = (uint64_t)v586;
                    v463(v586, (uint64_t)v464, v461);
                    swift_storeEnumTagMultiPayload(v465, v583, 1);
                    v466 = sub_10015FD08(&qword_1011CE4C0, &qword_1011CE468, (void (*)(void))sub_10089F294, (void (*)(void))sub_10089F3E0);
                    v467 = sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
                    v146 = (uint64_t)v585;
                    _ConditionalContent<>.init(storage:)(v465, v584, v461, v466, v467);
                    (*(void (**)(char *, uint64_t))(v462 + 8))(v464, v461);
                  }
                }
              }
            }
          }
        }
      }
    }
    v224 = &qword_1011CE480;
    v468 = v590;
    sub_10004A160(v146, v590, &qword_1011CE480);
    swift_storeEnumTagMultiPayload(v468, v589, 0);
    v469 = sub_10089F1F0();
    v470 = sub_10089F55C();
    _ConditionalContent<>.init(storage:)(v468, v588, v591, v469, v470);
    v228 = v146;
  }
  else
  {
    v147 = v2;
    v148 = v104;
    v149 = v576;
    IndexPath.init(item:section:)(*(_QWORD *)(v2 + *(int *)(v104 + 28)), 0);
    v150 = JSSearchResultComponentController.reportSearchResultSelection(at:)();
    (*(void (**)(char *, uint64_t))(v577 + 8))(v149, v578);
    if (v150)
    {
      v151 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
      v151(v81, v2, v78);
      v152 = (*(uint64_t (**)(char *, uint64_t))(v79 + 88))(v81, v78);
      v153 = enum case for GenericMusicItem.song(_:);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v81, v78);
      if (v152 == v153)
      {
        v154 = v147 + *(int *)(v148 + 32);
        v155 = (uint64_t)v532;
        v151(v532, v147, v78);
        v156 = sub_100007E8C(&qword_1011B4D20);
        v157 = v155 + *(int *)(v156 + 36);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v157, 1, 1, v78);
        v158 = sub_100007E8C(&qword_10119F7C8);
        swift_storeEnumTagMultiPayload(v157, v158, 0);
        *(_BYTE *)(v155 + *(int *)(v156 + 40)) = 2;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 56))(v155, 0, 1, v156);
        v159 = v547;
        v160 = (uint64_t)v531;
        v161 = &v531[*(int *)(v547 + 36)];
        (*(void (**)(char *, uint64_t, uint64_t))(v538 + 16))(v161, v154, v539);
        v162 = sub_100007E8C(&qword_1011CE4A8);
        sub_10004A160(v155, (uint64_t)&v161[*(int *)(v162 + 36)], &qword_1011C09B0);
        v163 = v593;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v551 + 16))(v160, v587, v593);
        sub_10004FF60(v155, &qword_1011C09B0);
        v164 = v536;
        sub_100065228(v160, v536, &qword_1011CE3B8);
        v165 = v548;
        sub_10004A160(v164, v548, &qword_1011CE3B8);
        swift_storeEnumTagMultiPayload(v165, v546, 0);
        v166 = sub_10089F0B4(&qword_1011CE490, &qword_1011CE3B8, &qword_1011CE4A0, &qword_1011CE4A8);
        v167 = sub_10089F154();
        v168 = (uint64_t)v549;
        _ConditionalContent<>.init(storage:)(v165, v159, v550, v166, v167);
        sub_10004FF60(v164, &qword_1011CE3B8);
      }
      else
      {
        v211 = v534;
        v212 = v535;
        v213 = &v535[*(int *)(v534 + 20)];
        v151(v213, v147, v78);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v213, 0, 1, v78);
        *v212 = v150;
        *((_BYTE *)v212 + *(int *)(v211 + 24)) = 0;
        v214 = (_QWORD *)((char *)v212 + *(int *)(v211 + 28));
        *v214 = 0;
        v214[1] = 0;
        v215 = v150;
        v216 = v533;
        sub_10030ED6C((uint64_t)v212, v533);
        sub_10005B748((uint64_t)v212, type metadata accessor for SegueContext);
        v217 = v537;
        sub_100065228(v216, v537, &qword_1011ACA78);
        v218 = v548;
        sub_10004A160(v217, v548, &qword_1011ACA78);
        swift_storeEnumTagMultiPayload(v218, v546, 1);
        v219 = sub_10089F0B4(&qword_1011CE490, &qword_1011CE3B8, &qword_1011CE4A0, &qword_1011CE4A8);
        v220 = sub_10089F154();
        v168 = (uint64_t)v549;
        _ConditionalContent<>.init(storage:)(v218, v547, v550, v219, v220);
        sub_10004FF60(v217, &qword_1011ACA78);
        v163 = v593;
      }
      v221 = v582;
      sub_10004A160(v168, v582, &qword_1011CE3C0);
      swift_storeEnumTagMultiPayload(v221, v581, 0);
      v222 = sub_10089F028();
      v223 = sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
      v210 = (uint64_t)v580;
      _ConditionalContent<>.init(storage:)(v221, v579, v163, v222, v223);

      sub_10004FF60(v168, &qword_1011CE3C0);
    }
    else
    {
      v203 = v551;
      v204 = *(void (**)(char *, uint64_t, uint64_t))(v551 + 16);
      v205 = v540;
      v206 = v593;
      v204(v540, v587, v593);
      v207 = v582;
      v204((char *)v582, (uint64_t)v205, v206);
      swift_storeEnumTagMultiPayload(v207, v581, 1);
      v208 = sub_10089F028();
      v209 = sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
      v210 = (uint64_t)v580;
      _ConditionalContent<>.init(storage:)(v207, v579, v206, v208, v209);
      (*(void (**)(char *, uint64_t))(v203 + 8))(v205, v206);
    }
    v224 = &qword_1011CE3C8;
    v225 = v590;
    sub_10004A160(v210, v590, &qword_1011CE3C8);
    swift_storeEnumTagMultiPayload(v225, v589, 1);
    v226 = sub_10089F1F0();
    v227 = sub_10089F55C();
    _ConditionalContent<>.init(storage:)(v225, v588, v591, v226, v227);
    v228 = v210;
  }
  return sub_10004FF60(v228, v224);
}

uint64_t sub_100899AE0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(sub_100007E8C(a3) + 36);
  sub_10004FF60(v4, &qword_10119F7C8);
  v5 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, a2, v5);
  v6 = sub_100007E8C(&qword_10119F7C8);
  return swift_storeEnumTagMultiPayload(v4, v6, 1);
}

uint64_t sub_100899B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v24 = a1;
  v25 = a3;
  WitnessTable = swift_getWitnessTable(&unk_100ED4D88, a2);
  v6 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = type metadata accessor for PlaybackSelection(255, v7, v8, v9);
  v22 = type metadata accessor for ModifiedContent(255, v6, v10);
  v11 = type metadata accessor for _ConditionalContent(0, v22, v6);
  v23 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v22 - v15;
  v17 = v3 + *(int *)(a2 + 36);
  v18 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v6);
  View.enqueueOnTap<A>(_:playabilityStatus:onSelection:)(v17, v3, 0, 0, v6, v7, v18, v8, (uint64_t)v13);
  v19 = swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, v10);
  v28 = v18;
  v29 = v19;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  v27 = v18;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11);
  sub_10081EB14((uint64_t)v13, v11, (uint64_t)v16);
  v20 = *(void (**)(char *, uint64_t))(v23 + 8);
  v20(v13, v11);
  sub_1000EA744((uint64_t)v16, v11, v25);
  return ((uint64_t (*)(char *, uint64_t))v20)(v16, v11);
}

uint64_t sub_100899D30()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124DB48);
  sub_100048B14(v0, (uint64_t)qword_10124DB48);
  return static Logger.music(_:)(0x686372616553, 0xE600000000000000);
}

void sub_100899D88(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_1008A7D1C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_100899DF0(v4);
  *a1 = v2;
}

void sub_100899DF0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::Int v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  Swift::Int v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  uint64_t *v80;
  _QWORD *v81;
  Swift::Int v82;
  Swift::Int v83;
  Swift::Int v84;
  Swift::Int v85;
  char *__dst;
  char *v87;
  Swift::Int v88;
  uint64_t v89;
  _QWORD v90[9];
  _QWORD v91[3];
  uint64_t v92;
  _QWORD v93[3];
  uint64_t v94;
  _QWORD v95[3];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_138;
    if (v3)
      sub_10089AC54(0, v3, 1, v2);
    return;
  }
  v82 = v4;
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_143;
  v84 = v3;
  if (v3 < 2)
  {
    v8 = (char *)_swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    v81 = _swiftEmptyArrayStorage;
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      goto LABEL_103;
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &_s6SourceON);
    *(_QWORD *)(v7 + 16) = v6;
    v81 = (_QWORD *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v8 = (char *)_swiftEmptyArrayStorage;
  v80 = v2;
  v10 = *v2;
  v11 = v84;
  v89 = *v2;
  do
  {
    v87 = v8;
    v13 = v9 + 1;
    v85 = v9;
    if (v9 + 1 >= v11)
    {
      v16 = v9 + 1;
      goto LABEL_24;
    }
    if ((*(_BYTE *)(v10 + v13) & 1) != 0 || !*(_BYTE *)(v10 + v9))
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v11)
        goto LABEL_24;
    }
    else
    {
      static ApplicationCapabilities.shared.getter((uint64_t)v91);
      v14 = v92;
      v99 = v92;
      swift_bridgeObjectRetain();
      sub_100065184(v91);
      if (*(_QWORD *)(v14 + 16))
      {
        Hasher.init(_seed:)(v90, *(_QWORD *)(v14 + 40));
        String.hash(into:)(v90, 0xD000000000000013, 0x8000000100E441F0);
        v15 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v14 + 32));
        if (((*(_QWORD *)(v14 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
          __asm { BR              X10 }
      }
      sub_1001E3E14(&v99);
      v16 = v85 + 2;
      if (v85 + 2 >= v84)
      {
        v10 = v89;
        goto LABEL_24;
      }
      v10 = v89;
    }
    v70 = v16;
    do
    {
      while ((*(_BYTE *)(v10 + v70) & 1) != 0 || !*(_BYTE *)(v10 + v13))
      {
        v16 = v70 + 1;
        v13 = v70;
        v70 = v16;
        if (v16 >= v84)
          goto LABEL_24;
      }
      static ApplicationCapabilities.shared.getter((uint64_t)v93);
      v71 = v94;
      v98 = v94;
      swift_bridgeObjectRetain();
      sub_100065184(v93);
      if (*(_QWORD *)(v71 + 16))
      {
        Hasher.init(_seed:)(v90, *(_QWORD *)(v71 + 40));
        String.hash(into:)(v90, 0xD000000000000013, 0x8000000100E441F0);
        v72 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v71 + 32));
        if (((*(_QWORD *)(v71 + 56 + ((v72 >> 3) & 0xFFFFFFFFFFFFF8)) >> v72) & 1) != 0)
          __asm { BR              X10 }
      }
      sub_1001E3E14(&v98);
      v16 = v70 + 1;
      v13 = v70;
      v70 = v16;
      v10 = v89;
    }
    while (v16 < v84);
LABEL_24:
    if (v16 >= v84)
    {
      v8 = v87;
    }
    else
    {
      v8 = v87;
      if (__OFSUB__(v16, v85))
        goto LABEL_137;
      if (v16 - v85 < v82)
      {
        v17 = v85 + v82;
        if (__OFADD__(v85, v82))
          goto LABEL_139;
        if (v17 >= v84)
          v17 = v84;
        if (v17 < v85)
        {
LABEL_140:
          __break(1u);
          __break(1u);
LABEL_141:
          __break(1u);
          JUMPOUT(0x10089AB7CLL);
        }
        v83 = v17;
        if (v16 != v17)
        {
          do
          {
            if ((*(_BYTE *)(v10 + v16) & 1) == 0 && *(_BYTE *)(v10 + v16 - 1))
            {
              static ApplicationCapabilities.shared.getter((uint64_t)v95);
              v18 = v96;
              v97 = v96;
              swift_bridgeObjectRetain();
              sub_100065184(v95);
              if (*(_QWORD *)(v18 + 16))
              {
                Hasher.init(_seed:)(v90, *(_QWORD *)(v18 + 40));
                String.hash(into:)(v90, 0xD000000000000013, 0x8000000100E441F0);
                v19 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v18 + 32));
                if (((*(_QWORD *)(v18 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
                  __asm { BR              X10 }
              }
              sub_1001E3E14(&v97);
              v8 = v87;
              v10 = v89;
            }
            ++v16;
          }
          while (v16 != v83);
          v16 = v83;
        }
      }
    }
    if (v16 < v85)
      goto LABEL_132;
    v88 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
      v8 = sub_1008A71C4(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v21 = *((_QWORD *)v8 + 2);
    v20 = *((_QWORD *)v8 + 3);
    v12 = v21 + 1;
    v10 = v89;
    if (v21 >= v20 >> 1)
    {
      v73 = sub_1008A71C4((char *)(v20 > 1), v21 + 1, 1, v8);
      v10 = v89;
      v8 = v73;
    }
    *((_QWORD *)v8 + 2) = v12;
    v22 = v8 + 32;
    v23 = &v8[16 * v21 + 32];
    *(_QWORD *)v23 = v85;
    *((_QWORD *)v23 + 1) = v88;
    if (v21)
    {
      while (1)
      {
        v24 = v12 - 1;
        if (v12 >= 4)
        {
          v29 = &v22[16 * v12];
          v30 = *((_QWORD *)v29 - 8);
          v31 = *((_QWORD *)v29 - 7);
          v35 = __OFSUB__(v31, v30);
          v32 = v31 - v30;
          if (v35)
            goto LABEL_121;
          v34 = *((_QWORD *)v29 - 6);
          v33 = *((_QWORD *)v29 - 5);
          v35 = __OFSUB__(v33, v34);
          v27 = v33 - v34;
          v28 = v35;
          if (v35)
            goto LABEL_122;
          v36 = v12 - 2;
          v37 = &v22[16 * v12 - 32];
          v39 = *(_QWORD *)v37;
          v38 = *((_QWORD *)v37 + 1);
          v35 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          if (v35)
            goto LABEL_124;
          v35 = __OFADD__(v27, v40);
          v41 = v27 + v40;
          if (v35)
            goto LABEL_127;
          if (v41 >= v32)
          {
            v59 = &v22[16 * v24];
            v61 = *(_QWORD *)v59;
            v60 = *((_QWORD *)v59 + 1);
            v35 = __OFSUB__(v60, v61);
            v62 = v60 - v61;
            if (v35)
              goto LABEL_131;
            v52 = v27 < v62;
            goto LABEL_78;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v53 = *((_QWORD *)v8 + 4);
            v54 = *((_QWORD *)v8 + 5);
            v35 = __OFSUB__(v54, v53);
            v46 = v54 - v53;
            v47 = v35;
            goto LABEL_72;
          }
          v26 = *((_QWORD *)v8 + 4);
          v25 = *((_QWORD *)v8 + 5);
          v35 = __OFSUB__(v25, v26);
          v27 = v25 - v26;
          v28 = v35;
        }
        if ((v28 & 1) != 0)
          goto LABEL_123;
        v36 = v12 - 2;
        v42 = &v22[16 * v12 - 32];
        v44 = *(_QWORD *)v42;
        v43 = *((_QWORD *)v42 + 1);
        v45 = __OFSUB__(v43, v44);
        v46 = v43 - v44;
        v47 = v45;
        if (v45)
          goto LABEL_126;
        v48 = &v22[16 * v24];
        v50 = *(_QWORD *)v48;
        v49 = *((_QWORD *)v48 + 1);
        v35 = __OFSUB__(v49, v50);
        v51 = v49 - v50;
        if (v35)
          goto LABEL_129;
        if (__OFADD__(v46, v51))
          goto LABEL_130;
        if (v46 + v51 >= v27)
        {
          v52 = v27 < v51;
LABEL_78:
          if (v52)
            v24 = v36;
          goto LABEL_80;
        }
LABEL_72:
        if ((v47 & 1) != 0)
          goto LABEL_125;
        v55 = &v22[16 * v24];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v35 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v35)
          goto LABEL_128;
        if (v58 < v46)
          goto LABEL_14;
LABEL_80:
        v63 = v24 - 1;
        if (v24 - 1 >= v12)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_141;
        v64 = v8;
        v65 = &v22[16 * v63];
        v66 = *(_QWORD *)v65;
        v67 = &v22[16 * v24];
        v68 = *((_QWORD *)v67 + 1);
        sub_10089AF74((char *)(v10 + *(_QWORD *)v65), (char *)(v10 + *(_QWORD *)v67), v10 + v68, __dst);
        if (v1)
          goto LABEL_114;
        if (v68 < v66)
          goto LABEL_118;
        if (v24 > *((_QWORD *)v64 + 2))
          goto LABEL_119;
        *(_QWORD *)v65 = v66;
        *(_QWORD *)&v22[16 * v63 + 8] = v68;
        v69 = *((_QWORD *)v64 + 2);
        if (v24 >= v69)
          goto LABEL_120;
        v8 = v64;
        v12 = v69 - 1;
        memmove(&v22[16 * v24], v67 + 16, 16 * (v69 - 1 - v24));
        *((_QWORD *)v64 + 2) = v69 - 1;
        v10 = v89;
        if (v69 <= 2)
          goto LABEL_14;
      }
    }
    v12 = 1;
LABEL_14:
    v11 = v84;
    v9 = v88;
  }
  while (v88 < v84);
  v2 = v80;
LABEL_103:
  if (v12 >= 2)
  {
    v74 = *v2;
    while (1)
    {
      v75 = v12 - 2;
      if (v12 < 2)
        goto LABEL_133;
      if (!v74)
        break;
      v76 = *(_QWORD *)&v8[16 * v75 + 32];
      v77 = *(_QWORD *)&v8[16 * v12 + 24];
      sub_10089AF74((char *)(v74 + v76), (char *)(v74 + *(_QWORD *)&v8[16 * v12 + 16]), v74 + v77, __dst);
      if (v1)
        goto LABEL_114;
      if (v77 < v76)
        goto LABEL_134;
      if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        v8 = sub_1008A77EC((uint64_t)v8);
      if (v75 >= *((_QWORD *)v8 + 2))
        goto LABEL_135;
      v78 = &v8[16 * v75 + 32];
      *(_QWORD *)v78 = v76;
      *((_QWORD *)v78 + 1) = v77;
      v79 = *((_QWORD *)v8 + 2);
      if (v12 > v79)
        goto LABEL_136;
      memmove(&v8[16 * v12 + 16], &v8[16 * v12 + 32], 16 * (v79 - v12));
      *((_QWORD *)v8 + 2) = v79 - 1;
      v12 = v79 - 1;
      if (v79 <= 2)
        goto LABEL_114;
    }
    __break(1u);
LABEL_143:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    JUMPOUT(0x10089ABD0);
  }
LABEL_114:
  swift_bridgeObjectRelease();
  v81[2] = 0;
  swift_bridgeObjectRelease();
}

_QWORD *sub_10089AC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[9];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  if (a3 != a2)
  {
    v4 = *a4;
    v9 = *a4;
    do
    {
      v10 = a3;
      if ((*(_BYTE *)(v4 + a3) & 1) == 0 && *(_BYTE *)(v4 + a3 - 1))
      {
        static ApplicationCapabilities.shared.getter((uint64_t)v12);
        v5 = v13;
        v14 = v13;
        swift_bridgeObjectRetain();
        sub_100065184(v12);
        if (*(_QWORD *)(v5 + 16))
        {
          Hasher.init(_seed:)(v11, *(_QWORD *)(v5 + 40));
          String.hash(into:)(v11, 0xD000000000000013, 0x8000000100E441F0);
          v6 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v5 + 32));
          if (((*(_QWORD *)(v5 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
            __asm { BR              X10 }
        }
        result = sub_1001E3E14(&v14);
        v4 = v9;
      }
      a3 = v10 + 1;
    }
    while (v10 + 1 != a2);
  }
  return result;
}

uint64_t sub_10089AF74(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  char *v7;
  size_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t result;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  _QWORD v25[9];
  char *v26;
  char *v27;
  char *v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v4 = __dst;
  v5 = (char *)a3;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v27 = __dst;
  v28 = __src;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst)
        memmove(__dst, a2, a3 - (_QWORD)a2);
      v13 = &v4[v9];
      v26 = &v4[v9];
      v28 = a2;
      if (v7 < a2 && v5 != a2)
      {
        v20 = v7;
        v21 = v4;
        do
        {
          v14 = v5 - 1;
          if ((*(v13 - 1) & 1) == 0 && *(a2 - 1))
          {
            v19 = v5 - 1;
            v24 = v5;
            static ApplicationCapabilities.shared.getter((uint64_t)v29);
            v15 = v30;
            v31 = v30;
            swift_bridgeObjectRetain();
            sub_100065184(v29);
            if (*(_QWORD *)(v15 + 16))
            {
              Hasher.init(_seed:)(v25, *(_QWORD *)(v15 + 40));
              String.hash(into:)(v25, 0xD000000000000013, 0x8000000100E441F0);
              v16 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v15 + 32));
              if (((*(_QWORD *)(v15 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
                __asm { BR              X10 }
            }
            sub_1001E3E14(&v31);
            v7 = v20;
            v4 = v21;
            v5 = v24;
            v14 = v19;
          }
          v17 = v13 - 1;
          v26 = v13 - 1;
          if (v5 < v13 || v14 >= v13 || v5 != v13)
            *v14 = *v17;
          --v13;
          if (a2 <= v7)
            break;
          v5 = v14;
        }
        while (v17 > v4);
      }
      goto LABEL_41;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v26 = &v4[v8];
    if (a2 != v7 && a2 < v5)
    {
      v22 = &v4[v8];
      v23 = v5;
      do
      {
        if ((*a2 & 1) == 0 && *v4)
        {
          static ApplicationCapabilities.shared.getter((uint64_t)v29);
          v11 = v30;
          v31 = v30;
          swift_bridgeObjectRetain();
          sub_100065184(v29);
          if (*(_QWORD *)(v11 + 16))
          {
            Hasher.init(_seed:)(v25, *(_QWORD *)(v11 + 40));
            String.hash(into:)(v25, 0xD000000000000013, 0x8000000100E441F0);
            v12 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v11 + 32));
            if (((*(_QWORD *)(v11 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
              __asm { BR              X10 }
          }
          sub_1001E3E14(&v31);
          v10 = v22;
          v5 = v23;
        }
        if (v7 != v4)
          *v7 = *v4;
        v27 = ++v4;
        ++v7;
      }
      while (v4 < v10 && a2 < v5);
      v28 = v7;
    }
LABEL_41:
    sub_1008A7740(&v28, &v27, &v26);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10089B674(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (!a2)
  {
    if (a5)
      return 0;
    goto LABEL_8;
  }
  if (!a5)
    return 0;
  if (a1 == a4 && a2 == a5
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0), result = 0, (v8 & 1) != 0))
  {
LABEL_8:
    if (a3 == 2)
    {
      if (a6 == 2)
        return 1;
    }
    else if (a6 != 2)
    {
      if ((a3 & 1) != 0)
        v10 = 0x7972617262696CLL;
      else
        v10 = 0x676F6C61746163;
      if ((a6 & 1) != 0)
        v11 = 0x7972617262696CLL;
      else
        v11 = 0x676F6C61746163;
      if (v10 == v11)
      {
        swift_bridgeObjectRelease_n(0xE700000000000000, 2);
        return 1;
      }
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, 0xE700000000000000, v11, 0xE700000000000000, 0);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      if ((v12 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s8MainViewVwxx(uint64_t *a1)
{
  swift_release();
  sub_1000A6174(a1[2], a1[3]);
  return sub_1000A6174(a1[5], a1[6]);
}

uint64_t _s8MainViewVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  KeyValueObservationTrigger.keyPath.getter(v8, v9);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v2;
  return a1;
}

uint64_t _s8MainViewVwca(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = v2[1];
  v4 = v2[2];
  v5 = v2[3];
  v6 = *((_BYTE *)v2 + 32);
  KeyValueObservationTrigger.keyPath.getter(v4, v5);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  sub_1000A6174(v7, v8);
  v9 = v2[5];
  v10 = v2[6];
  LOBYTE(v2) = *((_BYTE *)v2 + 56);
  KeyValueObservationTrigger.keyPath.getter(v9, v10);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = (_BYTE)v2;
  sub_1000A6174(v11, v12);
  return a1;
}

uint64_t _s8MainViewVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  sub_1000A6174(v6, v7);
  v8 = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v8;
  sub_1000A6174(v9, v10);
  return a1;
}

uint64_t _s8MainViewVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 57))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s8MainViewVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *_s8MainViewVMa_0()
{
  return &_s8MainViewVN;
}

uint64_t sub_10089BA18(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAFCE0, 1);
}

uint64_t sub_10089BA30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100887D60(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10089BA38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDCC8;
  if (!qword_1011CDCC8)
  {
    v1 = sub_100044B54(&qword_1011CDCC0);
    sub_10089BABC();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDCC8);
  }
  return result;
}

unint64_t sub_10089BABC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011CDCD0;
  if (!qword_1011CDCD0)
  {
    v1 = sub_100044B54(&qword_1011CDCD8);
    v2[0] = &_s17SearchContentViewVN;
    v2[1] = &type metadata for String;
    v2[2] = sub_10089BB5C();
    v2[3] = sub_100055B68();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
    sub_1003E4B30();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDCD0);
  }
  return result;
}

unint64_t sub_10089BB5C()
{
  unint64_t result;

  result = qword_1011CDCE0;
  if (!qword_1011CDCE0)
  {
    result = swift_getWitnessTable(&unk_100ED4688, &_s17SearchContentViewVN);
    atomic_store(result, (unint64_t *)&qword_1011CDCE0);
  }
  return result;
}

unint64_t sub_10089BBD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDCE8;
  if (!qword_1011CDCE8)
  {
    v1 = sub_100044B54(&qword_1011CDC70);
    sub_100049F28(&qword_1011CDCF0, &qword_1011CDCF8, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
    sub_100048748(&qword_1011B1038, type metadata accessor for PushPendingNavigationItemModifier, (uint64_t)&unk_100EA92E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDCE8);
  }
  return result;
}

double sub_10089BC70()
{
  uint64_t v0;

  return sub_100888290(v0 + 16);
}

double sub_10089BC7C()
{
  uint64_t v0;

  return sub_1008883E8(v0 + 16, 1);
}

double sub_10089BC9C()
{
  uint64_t v0;

  return sub_1008883E8(v0 + 16, 0);
}

uint64_t sub_10089BCBC(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  return sub_10088846C(a1, a2, (_QWORD *)(v2 + 16));
}

unint64_t sub_10089BCC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDD00;
  if (!qword_1011CDD00)
  {
    v1 = sub_100044B54(&qword_1011CDCA8);
    sub_10005610C(&qword_1011CDD08, &qword_1011CDCA0, (void (*)(void))sub_10089BD68);
    sub_100049F28((unint64_t *)&unk_1011B6D80, &qword_1011D1220, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDD00);
  }
  return result;
}

unint64_t sub_10089BD68()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  result = qword_1011CDD10;
  if (!qword_1011CDD10)
  {
    v1 = sub_100044B54(&qword_1011CDC98);
    v2 = sub_100044B54(&qword_1011CDC88);
    v3 = sub_100044B54(&qword_1011CDC80);
    v4 = sub_100044B54(&qword_1011CDC78);
    v8 = sub_100044B54(&qword_1011CDC70);
    v9 = &type metadata for String;
    v10 = sub_10089BBD0();
    v11 = sub_100055B68();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.searchable<A>(text:placement:prompt:)>>, 1);
    v8 = v4;
    v9 = (_QWORD *)OpaqueTypeConformance2;
    v6 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.disableAutocorrection(_:)>>, 1);
    v8 = v3;
    v9 = (_QWORD *)v6;
    v7 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.submitLabel(_:)>>, 1);
    v8 = v2;
    v9 = (_QWORD *)v7;
    swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.onSubmit(of:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDD10);
  }
  return result;
}

uint64_t sub_10089BE9C()
{
  uint64_t *v0;

  swift_release();
  sub_1000A6174(v0[4], v0[5]);
  sub_1000A6174(v0[7], v0[8]);
  return swift_deallocObject(v0, 73);
}

void sub_10089BED8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100888770(a1, a2, (uint64_t *)(v2 + 16));
}

unint64_t sub_10089BEE0()
{
  unint64_t result;

  result = qword_1011CDD28;
  if (!qword_1011CDD28)
  {
    result = swift_getWitnessTable(&unk_100ED4330, &_s7ContextVN);
    atomic_store(result, (unint64_t *)&qword_1011CDD28);
  }
  return result;
}

uint64_t sub_10089BF2C()
{
  return 8;
}

_QWORD *sub_10089BF38(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10089BF5C()
{
  return 16;
}

__n128 sub_10089BF68(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10089BF74@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isSearching.getter();
  *a1 = result & 1;
  return result;
}

double _s17SearchContentViewVwxx(uint64_t a1)
{
  double result;

  sub_10006B604(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t _s17SearchContentViewVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10006B3F8(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17SearchContentViewVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10006B3F8(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_10006B604(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17SearchContentViewVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_10006B604(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s17SearchContentViewVMa()
{
  return &_s17SearchContentViewVN;
}

uint64_t sub_10089C134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  void *v8;

  v0 = sub_100044B54(&qword_1011CDCB0);
  v1 = sub_100044B54(&qword_1011CDD18);
  v5 = sub_100044B54(&qword_1011CDCA8);
  v6 = &type metadata for Bool;
  v7 = sub_10089BCC4();
  v8 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v3 = sub_1000E4570(&qword_1011CDD20, &qword_1011CDD18, (void (*)(void))sub_10089BEE0, (uint64_t)&protocol conformance descriptor for <A> A?);
  v5 = v0;
  v6 = (void *)v1;
  v7 = OpaqueTypeConformance2;
  v8 = (void *)v3;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_10089C208(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAFDA0, 1);
}

uint64_t sub_10089C218()
{
  uint64_t v0;

  sub_10006B604(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 56);
}

uint64_t sub_10089C250(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return sub_10088A97C(a1, a2, v2 + 16);
}

unint64_t sub_10089C258()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDD48;
  if (!qword_1011CDD48)
  {
    v1 = sub_100044B54(&qword_1011CDD40);
    sub_1000E4570(&qword_1011CDD50, &qword_1011CDD38, (void (*)(void))sub_10089C2FC, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
    sub_100049F28(&qword_1011CDD78, &qword_1011CDD80, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDD48);
  }
  return result;
}

unint64_t sub_10089C2FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDD58;
  if (!qword_1011CDD58)
  {
    v1 = sub_100044B54(&qword_1011CDD60);
    sub_1000A05E8();
    sub_100049F28(&qword_1011CDD68, &qword_1011CDD70, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDD58);
  }
  return result;
}

uint64_t sub_10089C388(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_10089C3A0(result, a2, a3, a4 & 1);
  return result;
}

uint64_t sub_10089C3A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    a1 = a3;
  return swift_retain(a1);
}

uint64_t sub_10089C3AC(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_10089C3C4(result, a2, a3, a4 & 1);
  return result;
}

uint64_t sub_10089C3C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    a1 = a3;
  return swift_release(a1);
}

unint64_t sub_10089C3D0()
{
  unint64_t result;

  result = qword_1011CDD88;
  if (!qword_1011CDD88)
  {
    result = swift_getWitnessTable(&unk_100ED49D8, &_s17SearchContentViewV13NoResultsViewVN);
    atomic_store(result, (unint64_t *)&qword_1011CDD88);
  }
  return result;
}

unint64_t sub_10089C414()
{
  unint64_t result;

  result = qword_1011CDD90;
  if (!qword_1011CDD90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for InteractionFeedbackLoadingView, &type metadata for InteractionFeedbackLoadingView);
    atomic_store(result, (unint64_t *)&qword_1011CDD90);
  }
  return result;
}

void sub_10089C458(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_10088931C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10089C468()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDDF0;
  if (!qword_1011CDDF0)
  {
    v1 = sub_100044B54(&qword_1011CDDC8);
    sub_100049F28(&qword_1011CDDF8, &qword_1011CDDC0, (uint64_t)&protocol conformance descriptor for LazyVGrid<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDDF0);
  }
  return result;
}

uint64_t sub_10089C4EC()
{
  return sub_10005610C(&qword_1011CDE10, &qword_1011CDE18, (void (*)(void))sub_10089C510);
}

unint64_t sub_10089C510()
{
  unint64_t result;

  result = qword_1011CDE20;
  if (!qword_1011CDE20)
  {
    result = swift_getWitnessTable(&unk_100ED4988, &_s17SearchContentViewV16RecentSearchViewVN);
    atomic_store(result, (unint64_t *)&qword_1011CDE20);
  }
  return result;
}

uint64_t sub_10089C554()
{
  return sub_10005610C(&qword_1011CDE28, &qword_1011CDE30, (void (*)(void))sub_10089C578);
}

unint64_t sub_10089C578()
{
  unint64_t result;

  result = qword_1011CDE38;
  if (!qword_1011CDE38)
  {
    result = swift_getWitnessTable(&unk_100ED4938, &_s17SearchContentViewV21SearchSuggestionsViewVN);
    atomic_store(result, (unint64_t *)&qword_1011CDE38);
  }
  return result;
}

unint64_t sub_10089C5BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CDE40;
  if (!qword_1011CDE40)
  {
    v1 = sub_100044B54(&qword_1011CDDB8);
    sub_1000E4570(&qword_1011CDDE8, &qword_1011CDDD0, (void (*)(void))sub_10089C468, (uint64_t)&protocol conformance descriptor for <A> A?);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CDE40);
  }
  return result;
}

uint64_t sub_10089C650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10088A00C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t **)(v1 + 32), a1);
}

uint64_t _s17SearchContentViewV14ResultItemViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CDEE0, (uint64_t)&_s17SearchContentViewV14ResultItemViewVMn);
}

uint64_t sub_10089C670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = type metadata accessor for MusicSearchResultGroup(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_10006B604(*(_QWORD *)(v0 + v4), *(_BYTE *)(v0 + v4 + 8));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4 + 40);
}

uint64_t sub_10089C6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for MusicSearchResultGroup(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_10088A260(a1, a2, v3 + v8, v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8), a3);
}

uint64_t sub_10089C764(char *a1)
{
  return sub_10089D894(a1, &qword_1011CDE80);
}

uint64_t sub_10089C770(uint64_t a1)
{
  sub_10006B3F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

ValueMetadata *_s17SearchContentViewV13NoResultsViewVMa()
{
  return &_s17SearchContentViewV13NoResultsViewVN;
}

_QWORD *sub_10089C7AC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v60 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = a3[9];
    v14 = a3[10];
    v15 = (_QWORD *)((char *)a1 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (char *)a1 + v14;
    v19 = *(void **)((char *)a2 + v14);
    v20 = *((_BYTE *)a2 + v14 + 8);
    swift_retain();
    swift_retain();
    sub_1000A4100(v19, v20);
    *(_QWORD *)v18 = v19;
    v18[8] = v20;
    v21 = a3[11];
    v22 = a3[12];
    v23 = (_QWORD *)((char *)a1 + v21);
    v24 = (_QWORD *)((char *)a2 + v21);
    v25 = *v24;
    v26 = v24[1];
    *v23 = v25;
    v23[1] = v26;
    v27 = (_QWORD *)((char *)a1 + v22);
    v28 = (_QWORD *)((char *)a2 + v22);
    v30 = *v28;
    v29 = v28[1];
    *v27 = v30;
    v27[1] = v29;
    v31 = a3[13];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = *(_QWORD *)v33;
    v35 = *((_QWORD *)v33 + 1);
    LOBYTE(v18) = v33[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v34, v35);
    *(_QWORD *)v32 = v34;
    *((_QWORD *)v32 + 1) = v35;
    v32[16] = (char)v18;
    v36 = a3[14];
    v37 = a3[15];
    v38 = (_QWORD *)((char *)a1 + v36);
    v39 = (_QWORD *)((char *)a2 + v36);
    v40 = *v39;
    v41 = v39[1];
    *v38 = v40;
    v38[1] = v41;
    v42 = (_QWORD *)((char *)a1 + v37);
    v43 = (_QWORD *)((char *)a2 + v37);
    v45 = *v43;
    v44 = v43[1];
    *v42 = v45;
    v42[1] = v44;
    v46 = a3[16];
    v47 = a3[17];
    v48 = (_QWORD *)((char *)a1 + v46);
    v49 = (_QWORD *)((char *)a2 + v46);
    v51 = *v49;
    v50 = v49[1];
    *v48 = v51;
    v48[1] = v50;
    v52 = (char *)a1 + v47;
    v53 = *(_QWORD *)((char *)a2 + v47);
    v54 = *(_QWORD *)((char *)a2 + v47 + 8);
    LOBYTE(v32) = *((_BYTE *)a2 + v47 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v53, v54, (char)v32);
    *(_QWORD *)v52 = v53;
    *((_QWORD *)v52 + 1) = v54;
    v52[16] = (char)v32;
    v55 = a3[18];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    v58 = *(_QWORD *)v57;
    v59 = *((_QWORD *)v57 + 1);
    LOBYTE(v45) = v57[16];
    sub_1000A411C(*(_QWORD *)v57, v59, v45);
    *(_QWORD *)v56 = v58;
    *((_QWORD *)v56 + 1) = v59;
    v56[16] = v45;
  }
  return a1;
}

double sub_10089C9B0(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_release();
  sub_1000A4224(*(id *)(a1 + a2[10]), *(_BYTE *)(a1 + a2[10] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[17]), *(_QWORD *)(a1 + a2[17] + 8), *(_BYTE *)(a1 + a2[17] + 16));
  return sub_1000A4240(*(_QWORD *)(a1 + a2[18]), *(_QWORD *)(a1 + a2[18] + 8), *(_BYTE *)(a1 + a2[18] + 16));
}

uint64_t sub_10089CA94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a3[9];
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = a1 + v13;
  v18 = *(void **)(a2 + v13);
  v19 = *(_BYTE *)(a2 + v13 + 8);
  swift_retain();
  swift_retain();
  sub_1000A4100(v18, v19);
  *(_QWORD *)v17 = v18;
  *(_BYTE *)(v17 + 8) = v19;
  v20 = a3[11];
  v21 = a3[12];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (uint64_t *)(a2 + v20);
  v24 = *v23;
  v25 = v23[1];
  *v22 = v24;
  v22[1] = v25;
  v26 = (_QWORD *)(a1 + v21);
  v27 = (uint64_t *)(a2 + v21);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  v30 = a3[13];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)v32;
  v34 = *(_QWORD *)(v32 + 8);
  LOBYTE(v17) = *(_BYTE *)(v32 + 16);
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v33, v34);
  *(_QWORD *)v31 = v33;
  *(_QWORD *)(v31 + 8) = v34;
  *(_BYTE *)(v31 + 16) = v17;
  v35 = a3[14];
  v36 = a3[15];
  v37 = (_QWORD *)(a1 + v35);
  v38 = (uint64_t *)(a2 + v35);
  v39 = *v38;
  v40 = v38[1];
  *v37 = v39;
  v37[1] = v40;
  v41 = (_QWORD *)(a1 + v36);
  v42 = (uint64_t *)(a2 + v36);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  v45 = a3[16];
  v46 = a3[17];
  v47 = (_QWORD *)(a1 + v45);
  v48 = (uint64_t *)(a2 + v45);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  v51 = a1 + v46;
  v52 = *(_QWORD *)(a2 + v46);
  v53 = *(_QWORD *)(a2 + v46 + 8);
  LOBYTE(v31) = *(_BYTE *)(a2 + v46 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v52, v53, v31);
  *(_QWORD *)v51 = v52;
  *(_QWORD *)(v51 + 8) = v53;
  *(_BYTE *)(v51 + 16) = v31;
  v54 = a3[18];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = *(_QWORD *)v56;
  v58 = *(_QWORD *)(v56 + 8);
  LOBYTE(v44) = *(_BYTE *)(v56 + 16);
  sub_1000A411C(*(_QWORD *)v56, v58, v44);
  *(_QWORD *)v55 = v57;
  *(_QWORD *)(v55 + 8) = v58;
  *(_BYTE *)(v55 + 16) = v44;
  return a1;
}

uint64_t sub_10089CC6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v7 = a3[8];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_retain();
  swift_release();
  v10 = a3[9];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_retain();
  swift_release();
  v13 = a3[10];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(id *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_1000A4100(*(id *)v15, v17);
  v18 = *(void **)v14;
  v19 = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v14 = v16;
  *(_BYTE *)(v14 + 8) = v17;
  sub_1000A4224(v18, v19);
  v20 = a3[11];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  swift_retain();
  swift_release();
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  v23 = a3[12];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  v26 = a3[13];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)v28;
  v30 = *(_QWORD *)(v28 + 8);
  LOBYTE(v25) = *(_BYTE *)(v28 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v28, v30);
  v31 = *(_QWORD *)v27;
  v32 = *(_QWORD *)(v27 + 8);
  *(_QWORD *)v27 = v29;
  *(_QWORD *)(v27 + 8) = v30;
  *(_BYTE *)(v27 + 16) = v25;
  sub_1000A6174(v31, v32);
  v33 = a3[14];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  swift_retain();
  swift_release();
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
  v36 = a3[15];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);
  swift_retain();
  swift_release();
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  v39 = a3[16];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_QWORD *)(a1 + v39) = *(_QWORD *)(a2 + v39);
  swift_retain();
  swift_release();
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(v41 + 8);
  v42 = a3[17];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = *(_QWORD *)v44;
  v46 = *(_QWORD *)(v44 + 8);
  LOBYTE(v41) = *(_BYTE *)(v44 + 16);
  sub_1000A410C(*(_QWORD *)v44, v46, v41);
  v47 = *(_QWORD *)v43;
  v48 = *(_QWORD *)(v43 + 8);
  v49 = *(_BYTE *)(v43 + 16);
  *(_QWORD *)v43 = v45;
  *(_QWORD *)(v43 + 8) = v46;
  *(_BYTE *)(v43 + 16) = v41;
  sub_1000A4230(v47, v48, v49);
  v50 = a3[18];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = *(_QWORD *)v52;
  v54 = *(_QWORD *)(v52 + 8);
  LOBYTE(v45) = *(_BYTE *)(v52 + 16);
  sub_1000A411C(*(_QWORD *)v52, v54, v45);
  v55 = *(_QWORD *)v51;
  v56 = *(_QWORD *)(v51 + 8);
  v57 = *(_BYTE *)(v51 + 16);
  *(_QWORD *)v51 = v53;
  *(_QWORD *)(v51 + 8) = v54;
  *(_BYTE *)(v51 + 16) = v45;
  sub_1000A4240(v55, v56, v57);
  return a1;
}

uint64_t sub_10089CF00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v12 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[13];
  v14 = a3[14];
  v15 = a1 + v13;
  v16 = (__int128 *)(a2 + v13);
  v17 = *v16;
  *(_BYTE *)(v15 + 16) = *((_BYTE *)v16 + 16);
  *(_OWORD *)v15 = v17;
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v18 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[17];
  v20 = a3[18];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_BYTE *)(v23 + 16) = *(_BYTE *)(v24 + 16);
  return a1;
}

uint64_t sub_10089D01C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  char v58;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_release();
  v13 = a3[9];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_release();
  v18 = a3[10];
  v19 = a1 + v18;
  v20 = (uint64_t *)(a2 + v18);
  v21 = *v20;
  LOBYTE(v20) = *((_BYTE *)v20 + 8);
  v22 = *(void **)v19;
  v23 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = (_BYTE)v20;
  sub_1000A4224(v22, v23);
  v24 = a3[11];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_release();
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  v27 = a3[12];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  swift_release();
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  v30 = a3[13];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_BYTE *)(v32 + 16);
  v34 = *(_QWORD *)v31;
  v35 = *(_QWORD *)(v31 + 8);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_BYTE *)(v31 + 16) = v33;
  sub_1000A6174(v34, v35);
  v36 = a3[14];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);
  swift_release();
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  v39 = a3[15];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_QWORD *)(a1 + v39) = *(_QWORD *)(a2 + v39);
  swift_release();
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(v41 + 8);
  v42 = a3[16];
  v43 = a1 + v42;
  v44 = a2 + v42;
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);
  swift_release();
  *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
  v45 = a3[17];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = *(_BYTE *)(v47 + 16);
  v49 = *(_QWORD *)v46;
  v50 = *(_QWORD *)(v46 + 8);
  v51 = *(_BYTE *)(v46 + 16);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_BYTE *)(v46 + 16) = v48;
  sub_1000A4230(v49, v50, v51);
  v52 = a3[18];
  v53 = a1 + v52;
  v54 = a2 + v52;
  v55 = *(_BYTE *)(v54 + 16);
  v56 = *(_QWORD *)v53;
  v57 = *(_QWORD *)(v53 + 8);
  v58 = *(_BYTE *)(v53 + 16);
  *(_OWORD *)v53 = *(_OWORD *)v54;
  *(_BYTE *)(v53 + 16) = v55;
  sub_1000A4240(v56, v57, v58);
  return a1;
}

uint64_t sub_10089D21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10089D228);
}

uint64_t sub_10089D228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10089D2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10089D2B4);
}

uint64_t sub_10089D2B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for GenericMusicItem(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_10089D330(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[15];

  result = type metadata accessor for GenericMusicItem(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = &unk_100ED47D0;
    v4[3] = &unk_100ED47E8;
    v4[4] = &unk_100ED4800;
    v4[5] = &unk_100ED4800;
    v4[6] = &unk_100ED4818;
    v4[7] = &unk_100ED4830;
    v4[8] = &unk_100ED4830;
    v4[9] = &unk_100ED4848;
    v4[10] = &unk_100ED4830;
    v4[11] = &unk_100ED4830;
    v4[12] = &unk_100ED4830;
    v4[13] = &unk_100ED4848;
    v4[14] = &unk_100ED4848;
    swift_initStructMetadata(a1, 256, 15, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *_s17SearchContentViewV21SearchSuggestionsViewVMa()
{
  return &_s17SearchContentViewV21SearchSuggestionsViewVN;
}

uint64_t _s17SearchContentViewV16RecentSearchViewVwxx(_QWORD *a1)
{
  swift_release(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t *_s17SearchContentViewV21SearchSuggestionsViewVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *_s17SearchContentViewV21SearchSuggestionsViewVwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *_s17SearchContentViewV21SearchSuggestionsViewVwta_0(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *_s17SearchContentViewV16RecentSearchViewVMa()
{
  return &_s17SearchContentViewV16RecentSearchViewVN;
}

ValueMetadata *_s17SearchContentViewV6TabBarVMa()
{
  return &_s17SearchContentViewV6TabBarVN;
}

uint64_t sub_10089D528()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_1011CDD40);
  v1[1] = &type metadata for Bool;
  v1[2] = sub_10089C258();
  v1[3] = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_10089D588(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAFEB4, 1);
}

uint64_t sub_10089D598(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAFE8C, 1);
}

uint64_t sub_10089D5A8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAFE64, 1);
}

uint64_t sub_10089D5B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAFE3C, 1);
}

uint64_t sub_10089D5C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAFE14, 1);
}

uint64_t sub_10089D5E8()
{
  uint64_t v0;

  return sub_10088CD18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10089D5F0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100044B54(a2);
    sub_100048748(&qword_1011CDE60, _s17SearchContentViewV14ResultItemViewVMa, (uint64_t)&unk_100ED48E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10089D664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10088CEA0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_10089D66C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10089D690(char *a1)
{
  return sub_10089D894(a1, &qword_1011CDFA8);
}

uint64_t sub_10089D69C()
{
  uint64_t v0;

  return sub_10088CABC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_10089D6B0()
{
  return sub_10088CBDC();
}

uint64_t sub_10089D6B8()
{
  uint64_t *v0;

  return sub_10088EA78(v0[2], v0[3], v0[4]);
}

uint64_t sub_10089D6C4()
{
  uint64_t *v0;

  return sub_10088DE48(v0[2], v0[3], v0[4]);
}

unint64_t sub_10089D6D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE018;
  if (!qword_1011CE018)
  {
    v1 = sub_100044B54(&qword_1011CE010);
    sub_100049F28(&qword_1011CE020, &qword_1011CE028, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE018);
  }
  return result;
}

uint64_t sub_10089D750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10088DF70(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_10089D758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MusicCatalogSearchSuggestionsResponse.Suggestion(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10089D7D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MusicCatalogSearchSuggestionsResponse.Suggestion(0)
                                      - 8)
                          + 80);
  return sub_10088E480(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

void sub_10089D804(Swift::String *a1@<X8>)
{
  uint64_t v1;

  sub_10088E9C8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_10089D810()
{
  unint64_t result;

  result = qword_1011CE068;
  if (!qword_1011CE068)
  {
    result = swift_getWitnessTable(&unk_100ED4C24, &_s14SuggestionViewVN);
    atomic_store(result, (unint64_t *)&qword_1011CE068);
  }
  return result;
}

uint64_t sub_10089D860()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10089D88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_10088EC1C(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_10089D894(char *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t, char *);
  uint64_t v5;
  uint64_t v6;

  v4 = *(uint64_t (**)(uint64_t, char *))(v2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = sub_100007E8C(a2);
  return v4(v5, &a1[*(int *)(v6 + 44)]);
}

uint64_t sub_10089D8E8()
{
  return sub_10005610C(&qword_1011CE0F8, &qword_1011A2F08, (void (*)(void))sub_10089D90C);
}

unint64_t sub_10089D90C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE100;
  if (!qword_1011CE100)
  {
    v1 = sub_100044B54(&qword_1011A2F00);
    sub_100049F28(&qword_1011CE108, &qword_1011CE088, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE100);
  }
  return result;
}

unint64_t sub_10089D990()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE110;
  if (!qword_1011CE110)
  {
    v1 = sub_100044B54(&qword_1011CE0A0);
    sub_1008A149C(&qword_1011CE118, &qword_1011CE098, &qword_1011A2F08, sub_10089D8E8);
    sub_100049F28(&qword_1011A49A8, &qword_1011A49B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE110);
  }
  return result;
}

uint64_t _s4LinkVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CE2C8, (uint64_t)&_s4LinkVMn);
}

uint64_t sub_10089DA50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100894650(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10089DA58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_1011CE120;
  if (!qword_1011CE120)
  {
    v1 = sub_100044B54(&qword_1011CE0B8);
    v2 = sub_100044B54(&qword_1011CE0A8);
    v4 = sub_100044B54(&qword_1011CE0A0);
    v5 = sub_10089D990();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    sub_100048748(&qword_1011CE128, _s4LinkVMa, (uint64_t)&unk_100ED4BD4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE120);
  }
  return result;
}

uint64_t sub_10089DB34()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (int *)_s17SearchContentViewV14ResultItemViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  sub_1000A4224(*(id *)(v5 + v1[10]), *(_BYTE *)(v5 + v1[10] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(v5 + v1[13]), *(_QWORD *)(v5 + v1[13] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(v5 + v1[17]), *(_QWORD *)(v5 + v1[17] + 8), *(_BYTE *)(v5 + v1[17] + 16));
  sub_1000A4240(*(_QWORD *)(v5 + v1[18]), *(_QWORD *)(v5 + v1[18] + 8), *(_BYTE *)(v5 + v1[18] + 16));
  return swift_deallocObject(v0, v4);
}

double sub_10089DC5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s17SearchContentViewV14ResultItemViewVMa(0) - 8) + 80);
  return sub_10089473C(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_10089DC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10089DCD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_BYTE *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 88);
  v9 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(a1 + 104);
  v15 = *(_QWORD *)(a1 + 128);
  v16 = *(_QWORD *)(a1 + 120);
  v13 = *(_QWORD *)(a1 + 144);
  v14 = *(_QWORD *)(a1 + 136);
  sub_1000E450C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  sub_100055BAC(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_10089DDA0(v5, v6, v7, v8, v9, v12, v11);
  sub_1000E450C(v16, v15, v14, v13);
  return a1;
}

double sub_10089DDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  double result;

  if (a7)
  {
    sub_100055BAC(a4, a5, a6 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_10089DDE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 120);
  v11 = *(_QWORD *)(a1 + 136);
  v12 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 152);
  v16 = *(_QWORD *)(a1 + 144);
  v13 = *(_QWORD *)(a1 + 168);
  v14 = *(_QWORD *)(a1 + 160);
  sub_1000E4440(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  sub_100055BBC(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_100154B8C(v5, v6, v7, v8, v9, v12, v11);
  sub_1000E4440(v16, v15, v14, v13);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10089DECC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 120);
  v11 = *(_QWORD *)(a1 + 136);
  v12 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 152);
  v16 = *(_QWORD *)(a1 + 144);
  v13 = *(_QWORD *)(a1 + 168);
  v14 = *(_QWORD *)(a1 + 160);
  sub_1000E450C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  sub_100055BAC(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_10089DDA0(v5, v6, v7, v8, v9, v12, v11);
  sub_1000E450C(v16, v15, v14, v13);
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_10089DFB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10088B6B8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_10089DFC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE180;
  if (!qword_1011CE180)
  {
    v1 = sub_100044B54(&qword_1011CE178);
    sub_100049F28(&qword_1011CE188, &qword_1011CE190, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE180);
  }
  return result;
}

unint64_t sub_10089E044()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011CE198;
  if (!qword_1011CE198)
  {
    v1 = sub_100044B54(&qword_1011CE168);
    v2[0] = sub_100044B54(&qword_1011CE158);
    v2[1] = type metadata accessor for SegmentedPickerStyle(255);
    v2[2] = sub_100049F28(&qword_1011CE1A0, &qword_1011CE158, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
    v2[3] = &protocol witness table for SegmentedPickerStyle;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE198);
  }
  return result;
}

unint64_t sub_10089E110()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE1A8;
  if (!qword_1011CE1A8)
  {
    v1 = sub_100044B54(&qword_1011CE148);
    sub_100049F28(&qword_1011CE1B0, &qword_1011CE140, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE1A8);
  }
  return result;
}

void sub_10089E198(_BYTE *a1@<X8>)
{
  char v2;

  swift_retain();
  v2 = sub_1003E6E04();
  swift_release();
  *a1 = v2 & 1;
}

double sub_10089E1E4(char *a1)
{
  char v1;
  double result;

  v1 = *a1;
  swift_retain();
  sub_1003E6F34(v1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10089E218()
{
  return sub_10088B3C4();
}

unint64_t sub_10089E220()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE1C8;
  if (!qword_1011CE1C8)
  {
    v1 = sub_100044B54(&qword_1011CE1D0);
    sub_10089E2A4();
    sub_100049F28(&qword_1011CE1F8, &qword_1011CE200, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE1C8);
  }
  return result;
}

unint64_t sub_10089E2A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE1D8;
  if (!qword_1011CE1D8)
  {
    v1 = sub_100044B54(&qword_1011CE1E0);
    sub_100049F28(&qword_1011CE1E8, &qword_1011CE1F0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE1D8);
  }
  return result;
}

uint64_t sub_10089E328(uint64_t a1, _BYTE *a2)
{
  return sub_10088B59C(a1, a2);
}

unint64_t sub_10089E338()
{
  unint64_t result;

  result = qword_1011CE218;
  if (!qword_1011CE218)
  {
    result = swift_getWitnessTable(&unk_100EB8360, &_s6SourceON);
    atomic_store(result, (unint64_t *)&qword_1011CE218);
  }
  return result;
}

uint64_t sub_10089E37C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10088B930(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_10089E388@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MusicSearchResultGroup(0) - 8) + 80);
  return sub_10088BC2C(v1 + ((v3 + 48) & ~v3), a1);
}

uint64_t sub_10089E3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MusicSearchResultGroup(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10089E44C(_BYTE *a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MusicSearchResultGroup(0) - 8) + 80);
  sub_10088BF74(a1, v1[2], v1[3], v1[4], v1[5], (uint64_t)v1 + ((v3 + 48) & ~v3));
}

uint64_t sub_10089E490@<X0>(uint64_t a1@<X8>)
{
  return sub_10088C18C(a1);
}

ValueMetadata *_s14SuggestionViewVMa()
{
  return &_s14SuggestionViewVN;
}

_QWORD *sub_10089E4A8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v9;
    v10 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v15 = v9;
    v14(v11, v12, v13);
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  }
  return a1;
}

uint64_t sub_10089E590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  v5 = a1 + *(int *)(a2 + 32);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_10089E5F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v8;
  v13(v10, v11, v12);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10089E6B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10089E774(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10089E820(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10089E8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10089E8E0);
}

uint64_t sub_10089E8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10089E988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10089E994);
}

uint64_t sub_10089E994(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for GenericMusicItem(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_10089EA38(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  result = type metadata accessor for GenericMusicItem(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100ED47E8;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
    result = type metadata accessor for MusicPlayer.PlayabilityStatus(319);
    if (v4 <= 0x3F)
    {
      v5[4] = *(_QWORD *)(result - 8) + 64;
      v5[5] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initStructMetadata(a1, 256, 6, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

unint64_t sub_10089EAE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE310;
  if (!qword_1011CE310)
  {
    v1 = sub_100044B54(&qword_1011CE318);
    sub_100049F28(&qword_1011CE320, &qword_1011CE328, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE310);
  }
  return result;
}

unint64_t sub_10089EB6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE330;
  if (!qword_1011CE330)
  {
    v1 = sub_100044B54(&qword_1011CE338);
    sub_100049F28(&qword_1011CE340, &qword_1011CDF58, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE330);
  }
  return result;
}

uint64_t sub_10089EBE8()
{
  return sub_100049F28(&qword_1011CE348, &qword_1011CE350, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_10089EC14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  ValueMetadata *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v0 = sub_100044B54(&qword_1011CE0C8);
  v1 = sub_100044B54(&qword_1011AD9B0);
  v2 = sub_100044B54(&qword_1011CE0C0);
  v7 = sub_100044B54(&qword_1011CE0B8);
  v8 = &type metadata for ActionType;
  v9 = type metadata accessor for ContextualPreview(255);
  v10 = sub_10089DA58();
  v11 = sub_1000E3EE4();
  v12 = sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  v7 = v2;
  v8 = (ValueMetadata *)OpaqueTypeConformance2;
  v4 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
  v5 = sub_100049F28(&qword_1011ADA10, &qword_1011AD9B0, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  v7 = v0;
  v8 = (ValueMetadata *)v1;
  v9 = v4;
  v10 = v5;
  return swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
}

unint64_t sub_10089ED50()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011CE358;
  if (!qword_1011CE358)
  {
    v1 = sub_100044B54(&qword_1011CE360);
    v2[0] = sub_100044B54(&qword_1011CE168);
    v2[1] = &_s6SourceON;
    v2[2] = sub_10089E044();
    v2[3] = sub_1003C3144();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_10089E110();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE358);
  }
  return result;
}

uint64_t sub_10089EE00(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAFF60, 1);
}

uint64_t sub_10089EE10(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAFF38, 1);
}

unint64_t sub_10089EE20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE378;
  if (!qword_1011CE378)
  {
    v1 = sub_100044B54(&qword_1011CE370);
    sub_100049F28(&qword_1011CE380, &qword_1011CE388, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE378);
  }
  return result;
}

uint64_t sub_10089EEA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  swift_release();
  sub_100055BAC(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10089EF28()
{
  return 8;
}

uint64_t sub_10089EF34(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10089EF3C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

void sub_10089EF50()
{
  AttributeScopes.FoundationAttributes.inlinePresentationIntent.getter();
  __break(1u);
}

unint64_t sub_10089EF6C()
{
  unint64_t result;

  result = qword_1011CE398;
  if (!qword_1011CE398)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.FoundationAttributes.InlinePresentationIntentAttribute, &type metadata for AttributeScopes.FoundationAttributes.InlinePresentationIntentAttribute);
    atomic_store(result, (unint64_t *)&qword_1011CE398);
  }
  return result;
}

void sub_10089EFB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_10089EF6C();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_10089EFD4()
{
  return 8;
}

uint64_t sub_10089EFE4()
{
  uint64_t v0;

  v0 = sub_100007E8C(&qword_1011CE3A0);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

unint64_t sub_10089F028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE488;
  if (!qword_1011CE488)
  {
    v1 = sub_100044B54(&qword_1011CE3C0);
    sub_10089F0B4(&qword_1011CE490, &qword_1011CE3B8, &qword_1011CE4A0, &qword_1011CE4A8);
    sub_10089F154();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE488);
  }
  return result;
}

uint64_t sub_10089F0B4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(a3, a4, (uint64_t)&unk_100ED4D88);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10089F154()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE4B0;
  if (!qword_1011CE4B0)
  {
    v1 = sub_100044B54(&qword_1011ACA78);
    sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE4B0);
  }
  return result;
}

unint64_t sub_10089F1F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE4B8;
  if (!qword_1011CE4B8)
  {
    v1 = sub_100044B54(&qword_1011CE480);
    sub_10015FD08(&qword_1011CE4C0, &qword_1011CE468, (void (*)(void))sub_10089F294, (void (*)(void))sub_10089F3E0);
    sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE4B8);
  }
  return result;
}

unint64_t sub_10089F294()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE4C8;
  if (!qword_1011CE4C8)
  {
    v1 = sub_100044B54(&qword_1011CE460);
    sub_10089F2F8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE4C8);
  }
  return result;
}

unint64_t sub_10089F2F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011CE4D0;
  if (!qword_1011CE4D0)
  {
    v1 = sub_100044B54(&qword_1011CE458);
    v2[0] = sub_100044B54(&qword_1011CE470);
    v2[1] = type metadata accessor for PlainButtonStyle(255);
    v2[2] = sub_100049F28(&qword_1011CE4D8, &qword_1011CE470, (uint64_t)&protocol conformance descriptor for NavigationLink<A, B>);
    v2[3] = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE4D0);
  }
  return result;
}

uint64_t sub_10089F3E0()
{
  return sub_10015FD08(&qword_1011CE4E0, &qword_1011CE420, (void (*)(void))sub_10089F404, (void (*)(void))sub_10089F4B0);
}

unint64_t sub_10089F404()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE4E8;
  if (!qword_1011CE4E8)
  {
    v1 = sub_100044B54(&qword_1011CE418);
    sub_10089F0B4(&qword_1011CE4F0, &qword_1011CE430, &qword_1011CE4F8, &qword_1011CE500);
    sub_10089F0B4(&qword_1011CE508, &qword_1011CE400, &qword_1011CE510, &qword_1011CE518);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE4E8);
  }
  return result;
}

unint64_t sub_10089F4B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE520;
  if (!qword_1011CE520)
  {
    v1 = sub_100044B54(&qword_1011CE3E8);
    sub_10089F0B4(&qword_1011CE528, &qword_1011CE3F8, &qword_1011CE530, &qword_1011CE538);
    sub_10089F0B4(&qword_1011CE540, &qword_1011CE3D8, &qword_1011CE548, &qword_1011CE550);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE520);
  }
  return result;
}

unint64_t sub_10089F55C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE558[0];
  if (!qword_1011CE558[0])
  {
    v1 = sub_100044B54(&qword_1011CE3C8);
    sub_10089F028();
    sub_100049F28(&qword_1011CE498, &qword_1011ACA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, qword_1011CE558);
  }
  return result;
}

uint64_t sub_10089F5E0(uint64_t a1)
{
  uint64_t v1;

  return sub_100899AE0(a1, *(_QWORD *)(v1 + 16), &qword_1011A0620);
}

uint64_t sub_10089F600(uint64_t a1)
{
  uint64_t v1;

  return sub_100899AE0(a1, *(_QWORD *)(v1 + 16), &qword_1011A7880);
}

uint64_t sub_10089F620(uint64_t a1)
{
  uint64_t v1;

  return sub_100899AE0(a1, *(_QWORD *)(v1 + 16), &qword_10119F7C0);
}

uint64_t sub_10089F640(uint64_t a1)
{
  uint64_t v1;

  return sub_100899AE0(a1, *(_QWORD *)(v1 + 16), &qword_1011AC048);
}

uint64_t sub_10089F664@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_100007E8C(&qword_1011ACA70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10089F6A4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for MusicPlayer.PlayabilityStatus(319);
  if (v4 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v5 = type metadata accessor for SourcedPlaybackIntent(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v3);
    result = type metadata accessor for Optional(319, v5);
    if (v6 <= 0x3F)
    {
      v7[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 2, v7, a1 + 32);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10089F738(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  size_t v20;
  size_t v21;
  size_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  int v33;
  size_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unint64_t v38;
  int v39;
  void *v40;
  unsigned int v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  size_t __n;
  int v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  size_t v55;

  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v9, v10, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = *(_DWORD *)(v14 + 80) | v12;
  v17 = (*(_BYTE *)(v14 + 80) | v12);
  v18 = v8 + v17;
  v19 = *(_QWORD *)(v14 + 64);
  if (*(_DWORD *)(v14 + 84))
    v20 = *(_QWORD *)(v14 + 64);
  else
    v20 = v19 + 1;
  if (v19 <= v20)
    v21 = v20;
  else
    v21 = *(_QWORD *)(v14 + 64);
  v22 = v21 + ((*(_QWORD *)(v11 + 64) + v15) & ~v15) + 2;
  v23 = *(_DWORD *)(v7 + 80) | v16;
  v24 = (*(_BYTE *)(v7 + 80) | v16);
  v25 = v23 & 0x100000;
  if (v24 > 7 || v25 != 0 || v22 + ((v8 + v17) & ~v17) > 0x18)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v24 + 16) & ~v24));
    swift_retain(v28);
    return a1;
  }
  v51 = AssociatedTypeWitness;
  v52 = *(_QWORD *)(v11 + 64) + v15;
  __n = v20;
  v49 = *(_QWORD *)(v14 + 64);
  v50 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v48 = *(_DWORD *)(v14 + 84);
  v29 = ~v17;
  v30 = *(unsigned int *)(v11 + 84);
  v54 = ~v15;
  v55 = v21;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
  v53 = a1;
  v31 = (void *)(((unint64_t)a1 + v18) & v29);
  v32 = (const void *)(((unint64_t)a2 + v18) & v29);
  if (v30 <= 0xFD)
  {
    v35 = v54;
    v34 = v55;
    v37 = (unsigned __int8 *)(((unint64_t)v32 + v52) & v54);
    if (v37[v55] < 2u)
    {
      v38 = v49;
      v39 = v48;
      v36 = v52;
      goto LABEL_21;
    }
LABEL_26:
    memcpy(v31, v32, v22);
    return a1;
  }
  v33 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(((unint64_t)a2 + v18) & v29, v30, v10);
  v35 = v54;
  v34 = v55;
  if (v33)
    goto LABEL_26;
  v36 = v52;
  v37 = (unsigned __int8 *)(((unint64_t)v32 + v52) & v54);
  v38 = v49;
  v39 = v48;
LABEL_21:
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v31, v32, v10);
  v40 = (void *)(((unint64_t)v31 + v36) & v35);
  v41 = v37[v34];
  if (v41 >= 2)
  {
    if (v34 <= 3)
      v42 = v34;
    else
      v42 = 4;
    __asm { BR              X12 }
  }
  a1 = v53;
  if (v41 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v50 + 16))(v40, v37, v51);
    v43 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v50 + 48))(v37, 1, v51))
    {
      memcpy(v40, v37, __n);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v50 + 16))(v40, v37, v51);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v40, 0, 1, v51);
    }
    v43 = 0;
  }
  v44 = v38 + 1;
  *((_BYTE *)v40 + v34) = v43;
  if (v39)
  {
    *((_BYTE *)v40 + v44) = v37[v44];
  }
  else
  {
    if (v38 <= v44)
      v45 = v38 + 1;
    else
      v45 = v38;
    *((_BYTE *)v40 + v45 + 1) = v37[v45 + 1];
  }
  return a1;
}

uint64_t sub_10089FA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;

  v4 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  result = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a2 + 24), v7, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v11 = result;
  v12 = *(_QWORD *)(result - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = *(_DWORD *)(v12 + 80);
  v15 = *(_DWORD *)(v12 + 80) | v9;
  v16 = (v6 + v15) & ~v15;
  v17 = *(_QWORD *)(v12 + 64);
  v18 = *(_QWORD *)(v8 + 64);
  v19 = ~v14;
  if (*(_DWORD *)(v8 + 84) > 0xFDu)
  {
    result = (*(uint64_t (**)(uint64_t))(v8 + 48))(v16);
    if ((_DWORD)result)
      return result;
    v20 = (v18 + v14 + v16) & v19;
    if (v13)
      v21 = v17;
    else
      v21 = v17 + 1;
    if (v17 <= v21)
      v17 = v21;
    goto LABEL_15;
  }
  v20 = (v18 + v14 + v16) & v19;
  if (v13)
    v22 = *(_QWORD *)(v12 + 64);
  else
    v22 = v17 + 1;
  if (v17 <= v22)
    v17 = v22;
  if (*(unsigned __int8 *)(v20 + v17) < 2u)
  {
LABEL_15:
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v7);
    v23 = *(unsigned __int8 *)(v20 + v17);
    if (v23 >= 2)
    {
      if (v17 <= 3)
        v24 = v17;
      else
        v24 = 4;
      __asm { BR              X12 }
    }
    if (v23 == 1)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v20, v11);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v20, 1, v11);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v20, v11);
  }
  return result;
}

uint64_t sub_10089FC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  size_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  void *v27;
  size_t v28;
  size_t v29;
  unsigned int v30;
  uint64_t v31;
  char v32;
  size_t v33;
  size_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  LODWORD(a3) = *(unsigned __int8 *)(v11 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v9, v10, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v37 = AssociatedTypeWitness;
  v38 = a1;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = *(_DWORD *)(v13 + 80);
  v16 = *(_DWORD *)(v13 + 80) | a3;
  v17 = v8 + v16;
  v18 = (void *)((v8 + v16 + a1) & ~v16);
  v19 = (const void *)((v17 + a2) & ~v16);
  v20 = *(_QWORD *)(v13 + 64);
  v21 = ~v15;
  v22 = *(_QWORD *)(v11 + 64) + v15;
  if (*(_DWORD *)(v11 + 84) <= 0xFDu)
  {
    v36 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v25 = (unsigned __int8 *)(((unint64_t)v19 + v22) & v21);
    if (v14)
      v24 = v20;
    else
      v24 = v20 + 1;
    if (v20 > v24)
      v24 = v20;
    if (v25[v24] >= 2u)
      goto LABEL_16;
    v23 = v14;
  }
  else
  {
    v23 = *(_DWORD *)(v13 + 84);
    if ((*(unsigned int (**)(const void *))(v11 + 48))(v19))
    {
      if (v23)
        v24 = v20;
      else
        v24 = v20 + 1;
      if (v20 > v24)
        v24 = v20;
LABEL_16:
      memcpy(v18, v19, v24 + (v22 & ~v15) + 2);
      return v38;
    }
    v36 = v13;
    v25 = (unsigned __int8 *)(((unint64_t)v19 + v22) & v21);
  }
  v26 = v38;
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v18, v19, v10);
  v27 = (void *)(((unint64_t)v18 + v22) & v21);
  if (v23)
    v28 = v20;
  else
    v28 = v20 + 1;
  if (v20 <= v28)
    v29 = v28;
  else
    v29 = v20;
  v30 = v25[v29];
  if (v30 >= 2)
  {
    if (v29 <= 3)
      v31 = v29;
    else
      v31 = 4;
    __asm { BR              X12 }
  }
  if (v30 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v36 + 16))(v27, v25, v37);
    v32 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v36 + 48))(v25, 1, v37))
    {
      memcpy(v27, v25, v28);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v36 + 16))(v27, v25, v37);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v27, 0, 1, v37);
    }
    v32 = 0;
  }
  v33 = v20 + 1;
  *((_BYTE *)v27 + v29) = v32;
  if (v23)
  {
    *((_BYTE *)v27 + v33) = v25[v33];
  }
  else
  {
    if (v20 <= v33)
      v34 = v20 + 1;
    else
      v34 = v20;
    *((_BYTE *)v27 + v34 + 1) = v25[v34 + 1];
  }
  return v26;
}

uint64_t sub_10089FF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  void *v26;
  int v27;
  int v28;
  size_t v29;
  size_t v30;
  size_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  size_t v34;
  void *v35;
  size_t v36;
  void *v37;
  unint64_t v38;
  unsigned int v39;
  uint64_t v40;
  unsigned __int8 *v41;
  size_t v42;
  size_t v43;
  unsigned int v44;
  uint64_t v45;
  char v46;
  size_t v47;
  size_t v48;
  unsigned int v49;
  uint64_t v50;
  size_t v51;
  size_t v52;
  size_t v53;
  unsigned int v54;
  uint64_t v55;
  char v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;

  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  LODWORD(a3) = *(unsigned __int8 *)(v11 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v9, v10, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_DWORD *)(v13 + 80) | a3;
  v16 = v8 + v15;
  v17 = (void *)((v8 + v15 + a1) & ~v15);
  v18 = (void *)((v16 + a2) & ~v15);
  v19 = *(unsigned int *)(v11 + 84);
  v60 = v13;
  v61 = AssociatedTypeWitness;
  v20 = *(_QWORD *)(v13 + 64);
  v21 = *(_QWORD *)(v11 + 64);
  v22 = ~v14;
  v23 = v21 + v14;
  v24 = (v21 + v14) & ~v14;
  v62 = *(_DWORD *)(v13 + 84);
  if (v19 > 0xFD)
  {
    v58 = a1;
    v59 = (v21 + v14) & ~v14;
    v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
    v26 = v18;
    v27 = v25(v17, v19, v10);
    v28 = v25(v26, v19, v10);
    if (v27)
    {
      if (v28)
      {
        if (v62)
          v29 = v20;
        else
          v29 = v20 + 1;
        if (v20 <= v29)
          v30 = v29;
        else
          v30 = v20;
        v18 = v26;
        a1 = v58;
        v24 = v59;
        goto LABEL_21;
      }
      v18 = v26;
      v32 = (unsigned __int8 *)(((unint64_t)v26 + v23) & v22);
      a1 = v58;
      goto LABEL_38;
    }
    if (v28)
    {
      if (v62)
        v36 = v20;
      else
        v36 = v20 + 1;
      if (v20 <= v36)
        v30 = v36;
      else
        v30 = v20;
      v18 = v26;
      a1 = v58;
      goto LABEL_30;
    }
    v18 = v26;
    v32 = (unsigned __int8 *)(((unint64_t)v26 + v23) & v22);
    a1 = v58;
    goto LABEL_52;
  }
  if (*(_DWORD *)(v13 + 84))
    v31 = *(_QWORD *)(v13 + 64);
  else
    v31 = v20 + 1;
  if (v20 <= v31)
    v30 = v31;
  else
    v30 = *(_QWORD *)(v13 + 64);
  v32 = (unsigned __int8 *)(((unint64_t)v18 + v23) & v22);
  v33 = v32[v30];
  if (*(unsigned __int8 *)((((unint64_t)v17 + v23) & v22) + v30) < 2u)
  {
    v59 = v24;
    if (v33 >= 2)
    {
LABEL_30:
      v37 = v18;
      (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
      v38 = ((unint64_t)v17 + v23) & v22;
      v39 = *(unsigned __int8 *)(v38 + v30);
      if (v39 >= 2)
      {
        if (v30 <= 3)
          v40 = v30;
        else
          v40 = 4;
        __asm { BR              X12 }
      }
      if (v39 == 1 || !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v60 + 48))(v38, 1, v61))
        (*(void (**)(unint64_t, uint64_t))(v60 + 8))(v38, v61);
      v34 = v30 + v59 + 2;
      v35 = v17;
      v18 = v37;
      goto LABEL_69;
    }
LABEL_52:
    (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
    v41 = (unsigned __int8 *)(((unint64_t)v17 + v23) & v22);
    if (v62)
      v47 = v20;
    else
      v47 = v20 + 1;
    if (v20 <= v47)
      v48 = v47;
    else
      v48 = v20;
    if (v32 != v41)
    {
      v49 = v41[v48];
      if (v49 >= 2)
      {
        if (v48 <= 3)
          v50 = v48;
        else
          v50 = 4;
        __asm { BR              X12 }
      }
      if (v49 == 1 || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v60 + 48))(v41, 1, v61))
        (*(void (**)(unsigned __int8 *, uint64_t))(v60 + 8))(v41, v61);
      v54 = v32[v48];
      if (v54 >= 2)
      {
        if (v48 <= 3)
          v55 = v48;
        else
          v55 = 4;
        __asm { BR              X12 }
      }
      if (v54 == 1)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 16))(v41, v32, v61);
        v56 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v60 + 48))(v32, 1, v61))
        {
          memcpy(v41, v32, v47);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 16))(v41, v32, v61);
          (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v41, 0, 1, v61);
        }
        v56 = 0;
      }
      v41[v48] = v56;
    }
    v53 = v48 + 1;
    goto LABEL_95;
  }
  if (v33 < 2)
  {
LABEL_38:
    (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
    v41 = (unsigned __int8 *)(((unint64_t)v17 + v23) & v22);
    if (v62)
      v42 = v20;
    else
      v42 = v20 + 1;
    if (v20 <= v42)
      v43 = v42;
    else
      v43 = v20;
    v44 = v32[v43];
    if (v44 >= 2)
    {
      if (v43 <= 3)
        v45 = v43;
      else
        v45 = 4;
      __asm { BR              X12 }
    }
    if (v44 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 16))(v41, v32, v61);
      v46 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v60 + 48))(v32, 1, v61))
      {
        memcpy(v41, v32, v42);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 16))(v41, v32, v61);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v41, 0, 1, v61);
      }
      v46 = 0;
    }
    v51 = v20 + 1;
    v41[v43] = v46;
    if (v62)
    {
      v41[v51] = v32[v51];
      return a1;
    }
    if (v20 <= v51)
      v52 = v20 + 1;
    else
      v52 = v20;
    v53 = v52 + 1;
LABEL_95:
    v41[v53] = v32[v53];
    return a1;
  }
LABEL_21:
  v34 = v30 + v24 + 2;
  v35 = v17;
LABEL_69:
  memcpy(v35, v18, v34);
  return a1;
}

uint64_t sub_1008A0528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  size_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  void *v27;
  size_t v28;
  size_t v29;
  unsigned int v30;
  uint64_t v31;
  char v32;
  size_t v33;
  size_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  LODWORD(a3) = *(unsigned __int8 *)(v11 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v9, v10, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v37 = AssociatedTypeWitness;
  v38 = a1;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = *(_DWORD *)(v13 + 80);
  v16 = *(_DWORD *)(v13 + 80) | a3;
  v17 = v8 + v16;
  v18 = (void *)((v8 + v16 + a1) & ~v16);
  v19 = (const void *)((v17 + a2) & ~v16);
  v20 = *(_QWORD *)(v13 + 64);
  v21 = ~v15;
  v22 = *(_QWORD *)(v11 + 64) + v15;
  if (*(_DWORD *)(v11 + 84) <= 0xFDu)
  {
    v36 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v25 = (unsigned __int8 *)(((unint64_t)v19 + v22) & v21);
    if (v14)
      v24 = v20;
    else
      v24 = v20 + 1;
    if (v20 > v24)
      v24 = v20;
    if (v25[v24] >= 2u)
      goto LABEL_16;
    v23 = v14;
  }
  else
  {
    v23 = *(_DWORD *)(v13 + 84);
    if ((*(unsigned int (**)(const void *))(v11 + 48))(v19))
    {
      if (v23)
        v24 = v20;
      else
        v24 = v20 + 1;
      if (v20 > v24)
        v24 = v20;
LABEL_16:
      memcpy(v18, v19, v24 + (v22 & ~v15) + 2);
      return v38;
    }
    v36 = v13;
    v25 = (unsigned __int8 *)(((unint64_t)v19 + v22) & v21);
  }
  v26 = v38;
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v18, v19, v10);
  v27 = (void *)(((unint64_t)v18 + v22) & v21);
  if (v23)
    v28 = v20;
  else
    v28 = v20 + 1;
  if (v20 <= v28)
    v29 = v28;
  else
    v29 = v20;
  v30 = v25[v29];
  if (v30 >= 2)
  {
    if (v29 <= 3)
      v31 = v29;
    else
      v31 = 4;
    __asm { BR              X12 }
  }
  if (v30 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v36 + 32))(v27, v25, v37);
    v32 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v36 + 48))(v25, 1, v37))
    {
      memcpy(v27, v25, v28);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v36 + 32))(v27, v25, v37);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v27, 0, 1, v37);
    }
    v32 = 0;
  }
  v33 = v20 + 1;
  *((_BYTE *)v27 + v29) = v32;
  if (v23)
  {
    *((_BYTE *)v27 + v33) = v25[v33];
  }
  else
  {
    if (v20 <= v33)
      v34 = v20 + 1;
    else
      v34 = v20;
    *((_BYTE *)v27 + v34 + 1) = v25[v34 + 1];
  }
  return v26;
}

uint64_t sub_1008A0800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  void *v26;
  int v27;
  int v28;
  size_t v29;
  size_t v30;
  size_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  size_t v34;
  void *v35;
  size_t v36;
  void *v37;
  unint64_t v38;
  unsigned int v39;
  uint64_t v40;
  unsigned __int8 *v41;
  size_t v42;
  size_t v43;
  unsigned int v44;
  uint64_t v45;
  char v46;
  size_t v47;
  size_t v48;
  unsigned int v49;
  uint64_t v50;
  size_t v51;
  size_t v52;
  size_t v53;
  unsigned int v54;
  uint64_t v55;
  char v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;

  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  LODWORD(a3) = *(unsigned __int8 *)(v11 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v9, v10, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_DWORD *)(v13 + 80) | a3;
  v16 = v8 + v15;
  v17 = (void *)((v8 + v15 + a1) & ~v15);
  v18 = (void *)((v16 + a2) & ~v15);
  v19 = *(unsigned int *)(v11 + 84);
  v60 = v13;
  v61 = AssociatedTypeWitness;
  v20 = *(_QWORD *)(v13 + 64);
  v21 = *(_QWORD *)(v11 + 64);
  v22 = ~v14;
  v23 = v21 + v14;
  v24 = (v21 + v14) & ~v14;
  v62 = *(_DWORD *)(v13 + 84);
  if (v19 > 0xFD)
  {
    v58 = a1;
    v59 = (v21 + v14) & ~v14;
    v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
    v26 = v18;
    v27 = v25(v17, v19, v10);
    v28 = v25(v26, v19, v10);
    if (v27)
    {
      if (v28)
      {
        if (v62)
          v29 = v20;
        else
          v29 = v20 + 1;
        if (v20 <= v29)
          v30 = v29;
        else
          v30 = v20;
        v18 = v26;
        a1 = v58;
        v24 = v59;
        goto LABEL_21;
      }
      v18 = v26;
      v32 = (unsigned __int8 *)(((unint64_t)v26 + v23) & v22);
      a1 = v58;
      goto LABEL_38;
    }
    if (v28)
    {
      if (v62)
        v36 = v20;
      else
        v36 = v20 + 1;
      if (v20 <= v36)
        v30 = v36;
      else
        v30 = v20;
      v18 = v26;
      a1 = v58;
      goto LABEL_30;
    }
    v18 = v26;
    v32 = (unsigned __int8 *)(((unint64_t)v26 + v23) & v22);
    a1 = v58;
    goto LABEL_52;
  }
  if (*(_DWORD *)(v13 + 84))
    v31 = *(_QWORD *)(v13 + 64);
  else
    v31 = v20 + 1;
  if (v20 <= v31)
    v30 = v31;
  else
    v30 = *(_QWORD *)(v13 + 64);
  v32 = (unsigned __int8 *)(((unint64_t)v18 + v23) & v22);
  v33 = v32[v30];
  if (*(unsigned __int8 *)((((unint64_t)v17 + v23) & v22) + v30) < 2u)
  {
    v59 = v24;
    if (v33 >= 2)
    {
LABEL_30:
      v37 = v18;
      (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
      v38 = ((unint64_t)v17 + v23) & v22;
      v39 = *(unsigned __int8 *)(v38 + v30);
      if (v39 >= 2)
      {
        if (v30 <= 3)
          v40 = v30;
        else
          v40 = 4;
        __asm { BR              X12 }
      }
      if (v39 == 1 || !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v60 + 48))(v38, 1, v61))
        (*(void (**)(unint64_t, uint64_t))(v60 + 8))(v38, v61);
      v34 = v30 + v59 + 2;
      v35 = v17;
      v18 = v37;
      goto LABEL_69;
    }
LABEL_52:
    (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
    v41 = (unsigned __int8 *)(((unint64_t)v17 + v23) & v22);
    if (v62)
      v47 = v20;
    else
      v47 = v20 + 1;
    if (v20 <= v47)
      v48 = v47;
    else
      v48 = v20;
    if (v32 != v41)
    {
      v49 = v41[v48];
      if (v49 >= 2)
      {
        if (v48 <= 3)
          v50 = v48;
        else
          v50 = 4;
        __asm { BR              X12 }
      }
      if (v49 == 1 || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v60 + 48))(v41, 1, v61))
        (*(void (**)(unsigned __int8 *, uint64_t))(v60 + 8))(v41, v61);
      v54 = v32[v48];
      if (v54 >= 2)
      {
        if (v48 <= 3)
          v55 = v48;
        else
          v55 = 4;
        __asm { BR              X12 }
      }
      if (v54 == 1)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 32))(v41, v32, v61);
        v56 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v60 + 48))(v32, 1, v61))
        {
          memcpy(v41, v32, v47);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 32))(v41, v32, v61);
          (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v41, 0, 1, v61);
        }
        v56 = 0;
      }
      v41[v48] = v56;
    }
    v53 = v48 + 1;
    goto LABEL_95;
  }
  if (v33 < 2)
  {
LABEL_38:
    (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
    v41 = (unsigned __int8 *)(((unint64_t)v17 + v23) & v22);
    if (v62)
      v42 = v20;
    else
      v42 = v20 + 1;
    if (v20 <= v42)
      v43 = v42;
    else
      v43 = v20;
    v44 = v32[v43];
    if (v44 >= 2)
    {
      if (v43 <= 3)
        v45 = v43;
      else
        v45 = 4;
      __asm { BR              X12 }
    }
    if (v44 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 32))(v41, v32, v61);
      v46 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v60 + 48))(v32, 1, v61))
      {
        memcpy(v41, v32, v42);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 32))(v41, v32, v61);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v41, 0, 1, v61);
      }
      v46 = 0;
    }
    v51 = v20 + 1;
    v41[v43] = v46;
    if (v62)
    {
      v41[v51] = v32[v51];
      return a1;
    }
    if (v20 <= v51)
      v52 = v20 + 1;
    else
      v52 = v20;
    v53 = v52 + 1;
LABEL_95:
    v41[v53] = v32[v53];
    return a1;
  }
LABEL_21:
  v34 = v30 + v24 + 2;
  v35 = v17;
LABEL_69:
  memcpy(v35, v18, v34);
  return a1;
}

uint64_t sub_1008A0E10(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  unsigned int v27;
  int v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;

  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  v13 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, v9, v10, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v14 = *(_QWORD *)(v13 + 64);
  if (v12 <= 0xFE)
    v15 = 254;
  else
    v15 = v12;
  v16 = v15 - 1;
  if (v15 - 1 <= v8)
    v17 = v8;
  else
    v17 = v15 - 1;
  if (*(_DWORD *)(v13 + 84))
    v18 = *(_QWORD *)(v13 + 64);
  else
    v18 = v14 + 1;
  if (v14 > v18)
    v18 = *(_QWORD *)(v13 + 64);
  if (!a2)
    return 0;
  v19 = *(_DWORD *)(v13 + 80);
  v20 = v19 | *(unsigned __int8 *)(v11 + 80);
  v21 = *(_QWORD *)(v7 + 64) + v20;
  v22 = *(_QWORD *)(v11 + 64) + v19;
  if (a2 <= v17)
    goto LABEL_32;
  v23 = v18 + (v22 & ~v19) + (v21 & ~v20) + 2;
  v24 = 8 * v23;
  if (v23 <= 3)
  {
    v27 = ((a2 - v17 + ~(-1 << v24)) >> v24) + 1;
    if (HIWORD(v27))
    {
      v25 = *(_DWORD *)(a1 + v23);
      if (!v25)
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v27 > 0xFF)
    {
      v25 = *(unsigned __int16 *)(a1 + v23);
      if (!*(_WORD *)(a1 + v23))
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v27 < 2)
    {
LABEL_32:
      if (v8 >= v16)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, v8, v6);
      v30 = (v21 + a1) & ~v20;
      if (v12 < 0xFE)
      {
        v32 = *(unsigned __int8 *)(((v22 + v30) & ~v19) + v18);
        if (v32 >= 2)
          v31 = (v32 ^ 0xFF) + 1;
        else
          v31 = 0;
      }
      else
      {
        v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v30, v12, v10);
      }
      if (v31 >= 2)
        return v31 - 1;
      else
        return 0;
    }
  }
  v25 = *(unsigned __int8 *)(a1 + v23);
  if (!*(_BYTE *)(a1 + v23))
    goto LABEL_32;
LABEL_23:
  v28 = (v25 - 1) << v24;
  if (v23 > 3)
    v28 = 0;
  if ((_DWORD)v23)
  {
    if (v23 <= 3)
      v29 = v23;
    else
      v29 = 4;
    __asm { BR              X12 }
  }
  return v17 + v28 + 1;
}

void sub_1008A105C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  size_t v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;

  v8 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus(0) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v11 = *(_QWORD *)(a4 + 16);
  v10 = *(_QWORD *)(a4 + 24);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, v10, v11, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v15 = *(_QWORD *)(v14 + 64);
  if (v13 <= 0xFE)
    v16 = 254;
  else
    v16 = v13;
  if (v16 - 1 <= v9)
    v17 = v9;
  else
    v17 = v16 - 1;
  v19 = v14 + 80;
  v18 = *(_DWORD *)(v14 + 80);
  v20 = v18 | *(unsigned __int8 *)(v12 + 80);
  v21 = (*(_QWORD *)(v12 + 64) + v18) & ~(unint64_t)v18;
  if (*(_DWORD *)(v19 + 4))
    v22 = v15;
  else
    v22 = v15 + 1;
  if (v15 > v22)
    v22 = v15;
  v23 = v22 + v21 + 1 + ((*(_QWORD *)(v8 + 64) + v20) & ~v20) + 1;
  if (a3 <= v17)
  {
    v24 = 0;
  }
  else if (v23 <= 3)
  {
    v26 = ((a3 - v17 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v26))
    {
      v24 = &dword_100000004;
    }
    else if (v26 >= 0x100)
    {
      v24 = 2;
    }
    else
    {
      v24 = v26 > 1;
    }
  }
  else
  {
    v24 = &_mh_execute_header.magic + 1;
  }
  if (v17 < a2)
  {
    v25 = ~v17 + a2;
    if (v23 < 4)
    {
      if ((_DWORD)v22 + (_DWORD)v21 + 1 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v20) & ~(_DWORD)v20) != -1)
      {
        v27 = v25 & ~(-1 << (8 * v23));
        bzero(a1, v23);
        if ((_DWORD)v23 == 3)
        {
          *(_WORD *)a1 = v27;
          a1[2] = BYTE2(v27);
        }
        else if ((_DWORD)v23 == 2)
        {
          *(_WORD *)a1 = v27;
        }
        else
        {
          *a1 = v27;
        }
      }
    }
    else
    {
      bzero(a1, v23);
      *(_DWORD *)a1 = v25;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X0 }
}

void sub_1008A1438()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x1008A1388);
}

void sub_1008A1440()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x1008A1388);
}

void sub_1008A1450()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x1008A1388);
}

uint64_t _s20EnqueueOnTapModifierVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s20EnqueueOnTapModifierVMn);
}

uint64_t sub_1008A1468()
{
  return sub_1008A149C(&qword_1011CE5E0, &qword_1011CE5E8, &qword_1011CE370, (uint64_t (*)(void))sub_10089EE20);
}

uint64_t sub_1008A149C(unint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    v9[0] = sub_100044B54(a3);
    v9[1] = a4();
    swift_getOpaqueTypeConformance2(v9, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008A1548()
{
  return sub_10015FD08(&qword_1011CE5F0, &qword_1011CE5F8, (void (*)(void))sub_10089F1F0, (void (*)(void))sub_10089F55C);
}

uint64_t sub_1008A157C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FAFFA8, 1);
}

uint64_t sub_1008A15B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  v5 = a1[1];
  v6 = _s20EnqueueOnTapModifierVMa(255, *a1, v5, a4);
  WitnessTable = swift_getWitnessTable(&unk_100ED4D88, v6);
  v8 = type metadata accessor for _ViewModifier_Content(255, v6, WitnessTable);
  v10 = type metadata accessor for PlaybackSelection(255, v4, v5, v9);
  v11 = type metadata accessor for ModifiedContent(255, v8, v10);
  v12 = type metadata accessor for _ConditionalContent(255, v11, v8);
  swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, v10);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v12);
}

uint64_t sub_1008A16CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1008A16D4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100ED4F40);
  v2 = swift_getKeyPath(&unk_100ED4F68);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

char *sub_1008A1744()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  uint64_t v21;
  objc_super v22;
  _QWORD *v23;

  v1 = sub_100007E8C((uint64_t *)&unk_1011CE7D0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC5Music19BottomPlayerManager_routingController;
  v6 = objc_allocWithZone((Class)MPAVEndpointRoutingDataSource);
  v7 = v0;
  v8 = objc_msgSend(v6, "init");
  v9 = objc_msgSend(objc_allocWithZone((Class)MPAVRoutingController), "initWithDataSource:name:", v8, 0);

  *(_QWORD *)&v0[v5] = v9;
  v10 = OBJC_IVAR____TtC5Music19BottomPlayerManager_queuesMap;
  *(_QWORD *)&v7[v10] = sub_1000442DC((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Music19BottomPlayerManager_forcedPaths] = _swiftEmptyArrayStorage;
  v11 = OBJC_IVAR____TtC5Music19BottomPlayerManager_subscriptions;
  *(_QWORD *)&v7[v11] = sub_100044400((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Music19BottomPlayerManager_currentQueue] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Music19BottomPlayerManager_localDeviceQueue] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Music19BottomPlayerManager_overrideCurrentQueue] = 0;
  v7[OBJC_IVAR____TtC5Music19BottomPlayerManager_preventPersonalDeviceAutoSwitch] = 0;
  v12 = &v7[OBJC_IVAR____TtC5Music19BottomPlayerManager__queues];
  v23 = _swiftEmptyArrayStorage;
  v13 = sub_100007E8C(&qword_1011CACC8);
  Published.init(initialValue:)(&v23, v13);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v12, v4, v1);
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Music19BottomPlayerManager_ignoredQueues] = _swiftEmptyArrayStorage;

  v14 = (objc_class *)type metadata accessor for BottomPlayerManager(0);
  v22.receiver = v7;
  v22.super_class = v14;
  v15 = (char *)objc_msgSendSuper2(&v22, "init");
  v16 = OBJC_IVAR____TtC5Music19BottomPlayerManager_routingController;
  v17 = *(void **)&v15[OBJC_IVAR____TtC5Music19BottomPlayerManager_routingController];
  v18 = v15;
  objc_msgSend(v17, "setDiscoveryMode:", 2);
  v19 = *(id *)&v15[v16];
  objc_msgSend(v19, "setDelegate:", v18);

  return v18;
}

void sub_1008A1964(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  char v7;
  uint64_t KeyPath;
  uint64_t v9;
  double v10;
  id v11;
  id v12;
  void *v13;
  char *v14;
  void *v15;
  id v16;
  id v17;

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Music19BottomPlayerManager_currentQueue;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC5Music19BottomPlayerManager_currentQueue);
  if (v5)
  {
    v6 = v5;
    sub_1008A5470();
    if ((v7 & 1) != 0
      && (sub_1008A5638() & 1) != 0
      && (KeyPath = swift_getKeyPath(&unk_100ED4EF8),
          v9 = swift_getKeyPath(&unk_100ED4F20),
          static Published.subscript.getter(&v17, v6, KeyPath, v9),
          swift_release(KeyPath),
          *(_QWORD *)&v10 = swift_release(v9).n128_u64[0],
          (v11 = v17) != 0))
    {
      v12 = objc_msgSend(v17, "state", v10);

      if (v12 == (id)2)
        *(_BYTE *)(v2 + OBJC_IVAR____TtC5Music19BottomPlayerManager_preventPersonalDeviceAutoSwitch) = 1;
    }
    else
    {

    }
  }
  v13 = *(void **)(v2 + v4);
  *(_QWORD *)(v2 + v4) = a1;
  v14 = a1;

  v15 = (void *)objc_opt_self(MPAVRoutingController);
  v16 = objc_msgSend(*(id *)&v14[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path], "route");
  objc_msgSend(v15, "setActiveRoute:completion:", v16, 0);

}

void sub_1008A1AB0(char *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  char *v17;
  _QWORD v18[5];
  uint64_t v19;

  v2 = v1;
  v4 = OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path;
  v5 = *(void **)&a1[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path];
  v6 = &v1[OBJC_IVAR____TtC5Music19BottomPlayerManager_forcedPaths];
  swift_beginAccess(v6, v18, 33, 0);
  v7 = v5;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v9 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
  specialized Array._endMutation()(v10);
  swift_endAccess(v18);
  v11 = (void *)objc_opt_self(MPAVRoutingController);
  v12 = objc_msgSend(*(id *)&a1[v4], "route");
  v13 = swift_allocObject(&unk_1010DFFA0, 32, 7);
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = a1;
  v18[4] = sub_1008A8734;
  v19 = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_1001E5304;
  v18[3] = &unk_1010DFFB8;
  v14 = _Block_copy(v18);
  v15 = v19;
  v16 = v2;
  v17 = a1;
  objc_msgSend(v11, "setActiveRoute:completion:", v12, v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);

}

void sub_1008A1C24(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  id v4;

  v3 = *(void **)(a2 + OBJC_IVAR____TtC5Music19BottomPlayerManager_overrideCurrentQueue);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC5Music19BottomPlayerManager_overrideCurrentQueue) = a3;
  v4 = a3;

  sub_1008A26F0();
}

void sub_1008A1C5C(char *a1, char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  void *v27;
  _QWORD *v28;
  id v29;
  char *v30;
  char *v31;
  id v32;
  id v33;
  _QWORD aBlock[5];
  _QWORD *v35;

  v5 = v4;
  v33 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path], "route");
  if (v33)
  {
    objc_opt_self(MPAVEndpointRoute);
    v10 = (void *)swift_dynamicCastObjCClass(v33);
    if (!v10)
      goto LABEL_13;
    v32 = objc_msgSend(v10, "endpointObject");

    if (!v32)
      return;
    v11 = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path], "route");
    if (v11)
    {
      v12 = v11;
      objc_opt_self(MPAVEndpointRoute);
      v13 = (void *)swift_dynamicCastObjCClass(v12);
      if (v13)
      {
        v33 = objc_msgSend(v13, "endpointObject");

        if (v33)
        {
          v14 = objc_msgSend(v33, "outputDevices");
          if (v14)
          {
            v15 = v14;
            v16 = String._bridgeToObjectiveC()();
            v17 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
            v25 = (void *)static OS_dispatch_queue.main.getter(v17, v18, v19, v20, v21, v22, v23, v24);
            v26 = (_QWORD *)swift_allocObject(&unk_1010DFF00, 56, 7);
            v26[2] = a3;
            v26[3] = a4;
            v26[4] = v5;
            v26[5] = a1;
            v26[6] = a2;
            aBlock[4] = sub_1008A8654;
            v35 = v26;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1001E5304;
            aBlock[3] = &unk_1010DFF18;
            v27 = _Block_copy(aBlock);
            v28 = v35;
            sub_100048AAC(a3, a4);
            v29 = v5;
            v30 = a1;
            v31 = a2;
            objc_msgSend(v32, "migrateToOrSetOutputDevices:initiator:withReplyQueue:completion:", v15, v16, v25, v27, swift_release(v28).n128_f64[0]);
            _Block_release(v27);

            return;
          }

LABEL_13:
          return;
        }
      }
      else
      {

      }
    }

  }
}

void sub_1008A1EDC(uint64_t a1, void (*a2)(uint64_t, __n128), uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  id v24;
  uint64_t v25;
  __n128 v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v32[24];

  v11 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v12 = __chkstk_darwin(v11);
  v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    if (!a2)
      return;
    v15 = a1;
    goto LABEL_8;
  }
  v16 = (uint64_t *)(a4 + OBJC_IVAR____TtC5Music19BottomPlayerManager_forcedPaths);
  swift_beginAccess(a4 + OBJC_IVAR____TtC5Music19BottomPlayerManager_forcedPaths, v32, 33, 0);
  v17 = a5;
  v18 = sub_1008A7D44(v16, (uint64_t)v17);

  v19 = *v16;
  if ((unint64_t)*v16 >> 62)
  {
    if (v19 < 0)
      v30 = *v16;
    else
      v30 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v20 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v19);
    if (v20 >= v18)
      goto LABEL_6;
LABEL_14:
    __break(1u);
    return;
  }
  v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v20 < v18)
    goto LABEL_14;
LABEL_6:
  sub_1001FFA10(v18, v20);
  swift_endAccess(v32);
  sub_1008A26F0();
  v21 = type metadata accessor for TaskPriority(0);
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v14, 1, 1, v21);
  v23 = (_QWORD *)swift_allocObject(&unk_1010DFF50, 40, 7);
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = a6;
  v24 = a6;
  v25 = sub_100166D50((uint64_t)v14, (uint64_t)&unk_1011CE7B8, (uint64_t)v23);
  v26 = swift_release(v25);
  ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))v22)(v14, 1, 1, v21, v26);
  v27 = (_QWORD *)swift_allocObject(&unk_1010DFF78, 40, 7);
  v27[2] = 0;
  v27[3] = 0;
  v27[4] = v17;
  v28 = v17;
  v29 = sub_100166D50((uint64_t)v14, (uint64_t)&unk_1011CE7C8, (uint64_t)v27);
  v12 = swift_release(v29);
  if (!a2)
    return;
  v15 = 0;
LABEL_8:
  a2(v15, v12);
}

uint64_t sub_1008A20EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 56) = a1;
  *(_QWORD *)(v4 + 64) = a4;
  return swift_task_switch(sub_1008A2104, 0, 0);
}

uint64_t sub_1008A2104()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 80) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008A2170, v3, v4);
}

uint64_t sub_1008A2170()
{
  swift_release();
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  return swift_task_switch(sub_1008A21D4, 0, 0);
}

uint64_t sub_1008A21D4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 88) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008A2234, v3, v4);
}

uint64_t sub_1008A2234()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_release();
  v1 = (void *)qword_10124C798;
  *(_QWORD *)(v0 + 96) = qword_10124C798;
  v2 = v1;
  return swift_task_switch(sub_1008A2280, 0, 0);
}

uint64_t sub_1008A2280()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 40) = &type metadata for Player.PlaybackCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for Player.PlaybackCommand;
  *(_BYTE *)(v0 + 16) = 0;
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path), "route"));
  *(_QWORD *)(v0 + 104) = v2;
  v3 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
  *(_QWORD *)(v0 + 112) = v3;
  *v3 = v0;
  v3[1] = sub_1008A232C;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0, (uint64_t)v2, 0);
}

uint64_t sub_1008A232C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)();
  void *v9;

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 112));
  if (v1)
  {
    v7 = v4 + 96;
    v6 = *(void **)(v4 + 96);
    v5 = *(void **)(v7 + 8);
    swift_errorRelease(v1);

    v8 = sub_1008A23DC;
  }
  else
  {
    v9 = *(void **)(v4 + 104);

    *(_QWORD *)(v4 + 120) = a1;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v4 + 16));
    v8 = sub_1008A23C8;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1008A23C8()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008A23DC()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  **(_QWORD **)(v0 + 56) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008A2414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 56) = a1;
  *(_QWORD *)(v4 + 64) = a4;
  return swift_task_switch(sub_1008A242C, 0, 0);
}

uint64_t sub_1008A242C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 80) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008A2498, v3, v4);
}

uint64_t sub_1008A2498()
{
  swift_release();
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  return swift_task_switch(sub_1008A24FC, 0, 0);
}

uint64_t sub_1008A24FC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 88) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008A255C, v3, v4);
}

uint64_t sub_1008A255C()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_release();
  v1 = (void *)qword_10124C798;
  *(_QWORD *)(v0 + 96) = qword_10124C798;
  v2 = v1;
  return swift_task_switch(sub_1008A25A8, 0, 0);
}

uint64_t sub_1008A25A8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 40) = &type metadata for Player.ClearCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for Player.ClearCommand;
  *(_BYTE *)(v0 + 16) = 0;
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path), "route"));
  *(_QWORD *)(v0 + 104) = v2;
  v3 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
  *(_QWORD *)(v0 + 112) = v3;
  *v3 = v0;
  v3[1] = sub_1008A2654;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0, (uint64_t)v2, 0);
}

uint64_t sub_1008A2654(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)();
  void *v9;

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 112));
  if (v1)
  {
    v7 = v4 + 96;
    v6 = *(void **)(v4 + 96);
    v5 = *(void **)(v7 + 8);
    swift_errorRelease(v1);

    v8 = sub_1008A8CD0;
  }
  else
  {
    v9 = *(void **)(v4 + 104);

    *(_QWORD *)(v4 + 120) = a1;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v4 + 16));
    v8 = sub_1008A8CCC;
  }
  return swift_task_switch(v8, 0, 0);
}

void sub_1008A26F0()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  NSString v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t quot;
  ldiv_t v12;
  uint64_t v13;
  const __CFString *v14;
  unsigned __int8 *v15;
  char *v16;
  char *v17;
  uint64_t m;
  unsigned int v19;
  char *v20;
  id v21;
  char *v22;
  uint64_t v23;
  _BYTE *v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  id v33;
  _BYTE *v34;
  uint64_t v35;
  unsigned __int8 *v36;
  char *v37;
  char *v38;
  uint64_t j;
  unsigned int v40;
  char *v41;
  uint64_t v42;
  UInt8 *v43;
  uint64_t v44;
  lldiv_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  char *v48;
  char *v49;
  uint64_t k;
  unsigned int v51;
  char *v52;
  _BYTE *v53;
  unsigned __int8 v54;
  unsigned __int8 v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  __CFString *v58;
  unsigned __int8 *v59;
  char *v60;
  char *v61;
  uint64_t i;
  unsigned int v63;
  char *v64;
  __CFString *v65;
  __CFString *v66;
  __CFString *v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  _QWORD *v74;
  void *v75;
  uint64_t v76;
  id v77;
  char *v78;
  void *v79;
  void *v80;
  __CFString *v81;
  uint64_t v82;
  CC_SHA1_CTX v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _BYTE v91[72];
  _OWORD v92[4];
  uint64_t v93;
  unsigned __int8 v94[23];
  char v95;
  uint64_t v96;

  v1 = v0;
  sub_10004A07C(0, (unint64_t *)&unk_10119DC90, ICUserIdentityStore_ptr);
  v2 = static ICUserIdentityStore.activeAccountDSID.getter();
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "stringValue");

    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v6 = v5;

  }
  else
  {
    v6 = 0xE000000000000000;
  }
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = v7;
  v90 = 0u;
  v89 = 0u;
  v88 = 0u;
  v87 = 0u;
  v86 = 0u;
  v85 = 0u;
  v84 = 0u;
  memset(&v83, 0, sizeof(v83));
  v82 = 4001;
  CC_SHA1_Init(&v83);
  v9 = objc_retainAutorelease(v8);
  CC_SHA1_Update(&v83, objc_msgSend(v9, "UTF8String"), (CC_LONG)objc_msgSend(v9, "length"));

  memset(&v91[8], 0, 64);
  *(_QWORD *)v91 = 4001;
  CC_SHA1_Final(&v91[8], &v83);
  v92[0] = *(_OWORD *)v91;
  v92[1] = *(_OWORD *)&v91[16];
  v92[2] = *(_OWORD *)&v91[32];
  v92[3] = *(_OWORD *)&v91[48];
  v93 = *(_QWORD *)&v91[64];
  if (*(uint64_t *)v91 > 3999)
  {
    if (*(uint64_t *)v91 > 4255)
    {
      if (*(_QWORD *)v91 == 4256)
      {
        v59 = (unsigned __int8 *)v92 + 8;
        v60 = (char *)malloc_type_calloc(0x40uLL, 1uLL, 0x100004077774924uLL);
        v61 = v60;
        for (i = 0; i != 64; i += 2)
        {
          v63 = *v59++;
          v64 = &v60[i];
          *v64 = a0123456789abcd[(unint64_t)v63 >> 4];
          v64[1] = a0123456789abcd[v63 & 0xF];
        }
        v21 = objc_alloc((Class)NSString);
        v22 = v61;
        v23 = 64;
      }
      else
      {
        if (*(_QWORD *)v91 != 4512)
          goto LABEL_47;
        v36 = (unsigned __int8 *)v92 + 8;
        v37 = (char *)malloc_type_calloc(0x80uLL, 1uLL, 0x100004077774924uLL);
        v38 = v37;
        for (j = 0; j != 128; j += 2)
        {
          v40 = *v36++;
          v41 = &v37[j];
          *v41 = a0123456789abcd[(unint64_t)v40 >> 4];
          v41[1] = a0123456789abcd[v40 & 0xF];
        }
        v21 = objc_alloc((Class)NSString);
        v22 = v38;
        v23 = 128;
      }
    }
    else if (*(_QWORD *)v91 == 4000)
    {
      v47 = (unsigned __int8 *)v92 + 8;
      v48 = (char *)malloc_type_calloc(0x20uLL, 1uLL, 0x100004077774924uLL);
      v49 = v48;
      for (k = 0; k != 32; k += 2)
      {
        v51 = *v47++;
        v52 = &v48[k];
        *v52 = a0123456789abcd[(unint64_t)v51 >> 4];
        v52[1] = a0123456789abcd[v51 & 0xF];
      }
      v21 = objc_alloc((Class)NSString);
      v22 = v49;
      v23 = 32;
    }
    else
    {
      if (*(_QWORD *)v91 != 4001)
        goto LABEL_47;
      v15 = (unsigned __int8 *)v92 + 8;
      v16 = (char *)malloc_type_calloc(0x28uLL, 1uLL, 0x100004077774924uLL);
      v17 = v16;
      for (m = 0; m != 40; m += 2)
      {
        v19 = *v15++;
        v20 = &v16[m];
        *v20 = a0123456789abcd[(unint64_t)v19 >> 4];
        v20[1] = a0123456789abcd[v19 & 0xF];
      }
      v21 = objc_alloc((Class)NSString);
      v22 = v17;
      v23 = 40;
    }
    v58 = (__CFString *)objc_msgSend(v21, "initWithBytesNoCopy:length:encoding:freeWhenDone:", v22, v23, 4, 1, v82, *(_QWORD *)&v83.h0);
  }
  else if (*(uint64_t *)v91 > 2999)
  {
    if (*(_QWORD *)v91 == 3000)
    {
      *(_DWORD *)v94 = 0;
      sub_1008A8A74(v94, DWORD2(v92[0]));
      v53 = malloc_type_calloc(8uLL, 1uLL, 0x100004077774924uLL);
      v54 = v94[0];
      *v53 = a0123456789abcd[(unint64_t)v94[0] >> 4];
      v53[1] = a0123456789abcd[v54 & 0xF];
      v55 = v94[1];
      v53[2] = a0123456789abcd[(unint64_t)v94[1] >> 4];
      v53[3] = a0123456789abcd[v55 & 0xF];
      v56 = v94[2];
      v53[4] = a0123456789abcd[(unint64_t)v94[2] >> 4];
      v53[5] = a0123456789abcd[v56 & 0xF];
      v57 = v94[3];
      v53[6] = a0123456789abcd[(unint64_t)v94[3] >> 4];
      v53[7] = a0123456789abcd[v57 & 0xF];
      v33 = objc_alloc((Class)NSString);
      v34 = v53;
      v35 = 8;
    }
    else
    {
      if (*(_QWORD *)v91 != 3001)
        goto LABEL_47;
      *(_QWORD *)v94 = 0;
      sub_1008A8A80(v94, *((unint64_t *)&v92[0] + 1));
      v24 = malloc_type_calloc(0x10uLL, 1uLL, 0x100004077774924uLL);
      v25 = v94[0];
      *v24 = a0123456789abcd[(unint64_t)v94[0] >> 4];
      v24[1] = a0123456789abcd[v25 & 0xF];
      v26 = v94[1];
      v24[2] = a0123456789abcd[(unint64_t)v94[1] >> 4];
      v24[3] = a0123456789abcd[v26 & 0xF];
      v27 = v94[2];
      v24[4] = a0123456789abcd[(unint64_t)v94[2] >> 4];
      v24[5] = a0123456789abcd[v27 & 0xF];
      v28 = v94[3];
      v24[6] = a0123456789abcd[(unint64_t)v94[3] >> 4];
      v24[7] = a0123456789abcd[v28 & 0xF];
      v29 = v94[4];
      v24[8] = a0123456789abcd[(unint64_t)v94[4] >> 4];
      v24[9] = a0123456789abcd[v29 & 0xF];
      v30 = v94[5];
      v24[10] = a0123456789abcd[(unint64_t)v94[5] >> 4];
      v24[11] = a0123456789abcd[v30 & 0xF];
      v31 = v94[6];
      v24[12] = a0123456789abcd[(unint64_t)v94[6] >> 4];
      v24[13] = a0123456789abcd[v31 & 0xF];
      v32 = v94[7];
      v24[14] = a0123456789abcd[(unint64_t)v94[7] >> 4];
      v24[15] = a0123456789abcd[v32 & 0xF];
      v33 = objc_alloc((Class)NSString);
      v34 = v24;
      v35 = 16;
    }
    v58 = (__CFString *)objc_msgSend(v33, "initWithBytesNoCopy:length:encoding:freeWhenDone:", v34, v35, 4, 1, v82, *(_QWORD *)&v83.h0);
  }
  else
  {
    if (*(_QWORD *)v91 != 1000)
    {
      if (*(_QWORD *)v91 == 2000)
      {
        v10 = 0;
        quot = DWORD2(v92[0]);
        do
        {
          v12 = ldiv(quot, 10);
          quot = v12.quot;
          if (v12.rem >= 0)
            LOBYTE(v13) = v12.rem;
          else
            v13 = -v12.rem;
          *(&v95 + v10--) = v13 + 48;
        }
        while (v12.quot);
        v14 = (id)(id)(id)CFStringCreateWithBytes(0, (const UInt8 *)&v96 + v10, -v10, 0x8000100u, 0);
        goto LABEL_45;
      }
LABEL_47:
      v79 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler", v82, *(_QWORD *)&v83.h0));
      v80 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSString * _Nonnull _MSVHashGetDigest(MSVHash)"));
      objc_msgSend(v79, "handleFailureInFunction:file:lineNumber:description:", v80, CFSTR("MSVHasher+Algorithms.h"), 356, CFSTR("Cannot obtain digest from unknown hasher algorithm"));

      v65 = &stru_101122068;
      v81 = &stru_101122068;
      goto LABEL_46;
    }
    v42 = *((_QWORD *)&v92[0] + 1);
    v43 = (UInt8 *)&v95;
    v44 = *((_QWORD *)&v92[0] + 1);
    do
    {
      v45 = lldiv(v44, 10);
      v44 = v45.quot;
      if (v45.rem >= 0)
        LOBYTE(v46) = v45.rem;
      else
        v46 = -v45.rem;
      *v43-- = v46 + 48;
    }
    while (v45.quot);
    if (v42 < 0)
      *v43 = 45;
    else
      ++v43;
    v58 = (__CFString *)CFStringCreateWithBytes(0, v43, (char *)&v96 - (char *)v43, 0x8000100u, 0);
  }
  v14 = v58;
LABEL_45:
  v65 = (__CFString *)v14;
LABEL_46:
  v66 = v65;

  v67 = v66;
  v68 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString substringToIndex:](v67, "substringToIndex:", 7));

  v69 = v68;
  v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
  v72 = v71;

  v73 = *(void **)&v1[OBJC_IVAR____TtC5Music19BottomPlayerManager_routingController];
  v74 = (_QWORD *)swift_allocObject(&unk_1010DFEB0, 40, 7);
  v74[2] = v1;
  v74[3] = v70;
  v74[4] = v72;
  *(_QWORD *)&v83.Nh = sub_1008A85FC;
  *(_QWORD *)&v83.data[1] = v74;
  v82 = (uint64_t)_NSConcreteStackBlock;
  *(_QWORD *)&v83.h0 = 1107296256;
  *(_QWORD *)&v83.h2 = sub_1001E5304;
  *(_QWORD *)&v83.h4 = &unk_1010DFEC8;
  v75 = _Block_copy(&v82);
  v76 = *(_QWORD *)&v83.data[1];
  v77 = v73;
  v78 = v1;
  swift_release(v76);
  objc_msgSend(v77, "getActiveRouteWithTimeout:completion:", v75, 0.5);
  _Block_release(v75);

}

double sub_1008A352C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  double v32;
  int64_t v33;
  unint64_t v34;
  char *v35;
  id v36;
  unint64_t v37;
  id v38;
  id v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  int64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  int v76;
  id v77;
  void *v78;
  unsigned int v79;
  void *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  id v85;
  id v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  id v98;
  id v99;
  void *v100;
  id v101;
  char v102;
  id v103;
  void *v104;
  char *v105;
  id v106;
  id v107;
  char v108;
  void *v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  id v114;
  id v115;
  id v116;
  void *v117;
  uint64_t v118;
  id v119;
  char v120;
  id v121;
  void *v122;
  unsigned __int8 v123;
  uint64_t v124;
  uint64_t v125;
  double v126;
  id v127;
  id v128;
  id v129;
  id v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  double v135;
  id v136;
  id v137;
  id v138;
  id v139;
  int v140;
  unint64_t v141;
  double result;
  uint64_t v143;
  void *v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v154;
  uint64_t v155;
  int64_t v156;
  uint64_t v157;
  int64_t v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  _QWORD v164[4];
  id v165;
  unint64_t v166;
  uint64_t v167;
  _BYTE v168[32];

  v5 = a1;
  if (qword_10119B8B0 != -1)
    goto LABEL_146;
  while (1)
  {
    v6 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_10124C788 + 528))(a1);

    v159 = (void *)v5;
    if (!v6)
      break;
    v7 = (uint64_t *)&a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_queuesMap];
    swift_beginAccess(&a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_queuesMap], v168, 0, 0);
    v8 = *v7;
    v150 = a2;
    if ((v8 & 0xC000000000000001) != 0)
    {
      if (v8 < 0)
        v9 = v8;
      else
        v9 = v8 & 0xFFFFFFFFFFFFFF8;
      v160 = 0;
      v155 = 0;
      v10 = 0;
      v11 = __CocoaDictionary.makeIterator()(v9) | 0x8000000000000000;
    }
    else
    {
      v17 = -1 << *(_BYTE *)(v8 + 32);
      v155 = ~v17;
      v160 = v8 + 64;
      v18 = -v17;
      if (v18 < 64)
        v19 = ~(-1 << v18);
      else
        v19 = -1;
      v10 = v19 & *(_QWORD *)(v8 + 64);
      v11 = v8;
    }
    v20 = swift_bridgeObjectRetain();
    a2 = 0;
    v158 = (unint64_t)(v155 + 64) >> 6;
    v21 = &selRef_setMetricsOverlay_;
    while ((v11 & 0x8000000000000000) != 0)
    {
      v26 = __CocoaDictionary.Iterator.next()(v20);
      if (!v26)
        goto LABEL_137;
      v28 = v27;
      swift_unknownObjectRelease(v26);
      v167 = (uint64_t)v28;
      v29 = type metadata accessor for BottomPlayerManager.Queue(0);
      swift_unknownObjectRetain(v28, v30);
      swift_dynamicCast(v164, &v167, (char *)&type metadata for Swift.AnyObject + 8, v29, 7);
      v31 = (char *)v164[0];
      *(_QWORD *)&v32 = swift_unknownObjectRelease(v28).n128_u64[0];
      v25 = a2;
      v23 = v10;
      if (!v31)
        goto LABEL_137;
LABEL_44:
      v36 = objc_msgSend(*(id *)&v31[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path], v21[222], v32, v150);
      if (!v36)
      {
        if (!v5)
          goto LABEL_49;
LABEL_19:
        v22 = v31;
        goto LABEL_20;
      }
      v22 = v36;
      if (v5)
      {
        sub_10004A07C(0, qword_1011C8420, MPAVRoute_ptr);
        v37 = v11;
        v38 = (id)v5;
        v39 = v22;
        v40 = static NSObject.== infix(_:_:)(v39, v38);

        v11 = v37;
        v5 = (uint64_t)v159;
        v21 = &selRef_setMetricsOverlay_;
        if ((v40 & 1) != 0)
        {
LABEL_49:
          v31[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_isPicked] = 1;
          v41 = sub_100007E8C((uint64_t *)&unk_1011A1470);
          v42 = swift_allocObject(v41, 40, 7);
          *(_OWORD *)(v42 + 16) = xmmword_100EA7A90;
          *(_QWORD *)(v42 + 32) = v31;
          v164[0] = v42;
          specialized Array._endMutation()(v42);
          v43 = v164[0];
          KeyPath = swift_getKeyPath(&unk_100ED4F40);
          v45 = swift_getKeyPath(&unk_100ED4F68);
          v164[0] = v43;
          v46 = v150;
          v47 = v31;
          static Published.subscript.setter(v164, v46, KeyPath, v45);
          v48 = *(_QWORD *)&v46[OBJC_IVAR____TtC5Music19BottomPlayerManager_ignoredQueues];
          *(_QWORD *)&v46[OBJC_IVAR____TtC5Music19BottomPlayerManager_ignoredQueues] = _swiftEmptyArrayStorage;

          swift_bridgeObjectRelease(v48);
LABEL_137:
          sub_10004FA7C(v11);
          return result;
        }
        goto LABEL_19;
      }

LABEL_20:
      a2 = v25;
      v10 = v23;
    }
    if (v10)
    {
      v23 = (v10 - 1) & v10;
      v24 = __clz(__rbit64(v10)) | ((_QWORD)a2 << 6);
      v25 = a2;
LABEL_43:
      v31 = (char *)*(id *)(*(_QWORD *)(v11 + 56) + 8 * v24);
      if (!v31)
        goto LABEL_137;
      goto LABEL_44;
    }
    v33 = (int64_t)(a2 + 1);
    if (!__OFADD__(a2, 1))
    {
      if (v33 >= v158)
        goto LABEL_137;
      v34 = *(_QWORD *)(v160 + 8 * v33);
      v25 = a2 + 1;
      if (!v34)
      {
        v25 = a2 + 2;
        if ((uint64_t)(a2 + 2) >= v158)
          goto LABEL_137;
        v34 = *(_QWORD *)(v160 + 8 * (_QWORD)v25);
        if (!v34)
        {
          v25 = a2 + 3;
          if ((uint64_t)(a2 + 3) >= v158)
            goto LABEL_137;
          v34 = *(_QWORD *)(v160 + 8 * (_QWORD)v25);
          if (!v34)
          {
            v25 = a2 + 4;
            if ((uint64_t)(a2 + 4) >= v158)
              goto LABEL_137;
            v34 = *(_QWORD *)(v160 + 8 * (_QWORD)v25);
            if (!v34)
            {
              v25 = a2 + 5;
              if ((uint64_t)(a2 + 5) >= v158)
                goto LABEL_137;
              v34 = *(_QWORD *)(v160 + 8 * (_QWORD)v25);
              if (!v34)
              {
                v35 = a2 + 6;
                while ((char *)v158 != v35)
                {
                  v34 = *(_QWORD *)(v160 + 8 * (_QWORD)v35++);
                  if (v34)
                  {
                    v25 = v35 - 1;
                    goto LABEL_42;
                  }
                }
                goto LABEL_137;
              }
            }
          }
        }
      }
LABEL_42:
      v23 = (v34 - 1) & v34;
      v24 = __clz(__rbit64(v34)) + ((_QWORD)v25 << 6);
      goto LABEL_43;
    }
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    a1 = swift_once(&qword_10119B8B0, sub_1000E948C);
  }
  v166 = (unint64_t)_swiftEmptyArrayStorage;
  v167 = (uint64_t)_swiftEmptyArrayStorage;
  v12 = (uint64_t *)&a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_queuesMap];
  swift_beginAccess(&a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_queuesMap], v168, 0, 0);
  v13 = *v12;
  if ((v13 & 0xC000000000000001) != 0)
  {
    if (v13 < 0)
      v14 = v13;
    else
      v14 = v13 & 0xFFFFFFFFFFFFFF8;
    v157 = 0;
    v5 = 0;
    v15 = 0;
    v16 = __CocoaDictionary.makeIterator()(v14) | 0x8000000000000000;
  }
  else
  {
    v49 = -1 << *(_BYTE *)(v13 + 32);
    v5 = ~v49;
    v157 = v13 + 64;
    v50 = -v49;
    if (v50 < 64)
      v51 = ~(-1 << v50);
    else
      v51 = -1;
    v15 = v51 & *(_QWORD *)(v13 + 64);
    v16 = v13;
  }
  v52 = swift_bridgeObjectRetain();
  v151 = 0;
  v53 = 0;
  v156 = (unint64_t)(v5 + 64) >> 6;
  v154 = v5;
  while (2)
  {
    if ((v16 & 0x8000000000000000) != 0)
    {
      v61 = __CocoaDictionary.Iterator.next()(v52);
      if (!v61)
        goto LABEL_138;
      v63 = v62;
      swift_unknownObjectRelease(v61);
      v163 = v63;
      v64 = type metadata accessor for BottomPlayerManager.Queue(0);
      swift_unknownObjectRetain(v63, v65);
      swift_dynamicCast(&v165, &v163, (char *)&type metadata for Swift.AnyObject + 8, v64, 7);
      v66 = (char *)v165;
      swift_unknownObjectRelease(v63);
      v60 = v53;
      v58 = v15;
      if (!v66)
        goto LABEL_138;
      goto LABEL_81;
    }
    if (v15)
    {
      v58 = (v15 - 1) & v15;
      v59 = __clz(__rbit64(v15)) | (v53 << 6);
      v60 = v53;
LABEL_80:
      v66 = (char *)*(id *)(*(_QWORD *)(v16 + 56) + 8 * v59);
      if (!v66)
        goto LABEL_138;
LABEL_81:
      v161 = v60;
      v162 = v58;
      v70 = v16;
      v71 = (uint64_t *)&a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_forcedPaths];
      swift_beginAccess(&a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_forcedPaths], v164, 0, 0);
      v72 = *v71;
      v73 = OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path;
      v74 = *(void **)&v66[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path];
      swift_bridgeObjectRetain();
      v75 = v74;
      v76 = sub_1004150F8((uint64_t)v75, v72);
      swift_bridgeObjectRelease(v72);

      v77 = objc_msgSend(*(id *)&v66[v73], "route");
      if (v77)
      {
        v78 = v77;
        v79 = objc_msgSend(v77, "isDeviceRoute");

        if (v79)
        {
          *(_QWORD *)&v66[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order] = -1;
          v80 = *(void **)&a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_localDeviceQueue];
          *(_QWORD *)&a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_localDeviceQueue] = v66;
          v81 = v66;

          v82 = swift_getKeyPath(&unk_100ED4EF8);
          v83 = swift_getKeyPath(&unk_100ED4F20);
          static Published.subscript.getter(&v165, v81, v82, v83);
          swift_release(v82);
          *(_QWORD *)&v84 = swift_release(v83).n128_u64[0];
          v85 = v165;
          if (v165)
          {
            v86 = objc_msgSend(v165, "state", v84);

            if (v86 == (id)2)
              a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_preventPersonalDeviceAutoSwitch] = 1;
          }
        }
      }
      sub_1008A5470();
      if ((v87 & 1) != 0)
      {
        *(_QWORD *)&v66[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order] = 0;
        v88 = swift_getKeyPath(&unk_100ED4EF8);
        v89 = swift_getKeyPath(&unk_100ED4F20);
        static Published.subscript.getter(&v165, v66, v88, v89);
        swift_release(v88);
        *(_QWORD *)&v90 = swift_release(v89).n128_u64[0];
        v91 = v165;
        if (v165)
        {
          v92 = objc_msgSend(v165, "tracklist", v90);

          v93 = objc_msgSend(v92, "playingItem");
          if (v93)
          {
            v94 = objc_msgSend(v93, "metadataObject");

            if (v94)
            {

              v95 = swift_getKeyPath(&unk_100ED4EF8);
              v96 = swift_getKeyPath(&unk_100ED4F20);
              static Published.subscript.getter(&v165, v66, v95, v96);
              swift_release(v95);
              *(_QWORD *)&v97 = swift_release(v96).n128_u64[0];
              v98 = v165;
              if (v165)
              {
                v99 = objc_msgSend(v165, "state", v97);

                if (v99 == (id)2)
                  BYTE4(v151) = 1;
              }
            }
          }
        }
      }
      if ((v76 & 1) != 0)
        *(_QWORD *)&v66[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order] = 999;
      v100 = *(void **)&a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_overrideCurrentQueue];
      if (v100)
      {
        sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
        v101 = v100;
        v102 = static NSObject.== infix(_:_:)(v66, v101);
        v66[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_isPicked] = v102 & 1;
        if ((v102 & 1) == 0)
          goto LABEL_112;
        v103 = objc_msgSend(*(id *)&v66[v73], "route");
        if (v103)
        {
          v104 = v103;
          if (v159)
          {
            sub_10004A07C(0, qword_1011C8420, MPAVRoute_ptr);
            v105 = a2;
            v106 = v159;
            v107 = v104;
            v108 = static NSObject.== infix(_:_:)(v107, v106);

            v5 = v154;
            a2 = v105;
            if ((v108 & 1) != 0)
              goto LABEL_100;
LABEL_112:

          }
          else
          {

          }
        }
        else
        {
          if (v159)
            goto LABEL_112;
LABEL_100:
          v109 = *(void **)&a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_overrideCurrentQueue];
          *(_QWORD *)&a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_overrideCurrentQueue] = 0;

        }
        v16 = v70;
        v118 = v161;
LABEL_118:
        v121 = objc_msgSend(*(id *)&v66[v73], "route", v150);
        if (v121)
        {
          v122 = v121;
          v123 = objc_msgSend(v121, "isDeviceRoute");

          if ((v123 & 1) != 0)
            goto LABEL_55;
        }
        v124 = swift_getKeyPath(&unk_100ED4EF8);
        v125 = swift_getKeyPath(&unk_100ED4F20);
        static Published.subscript.getter(&v165, v66, v124, v125);
        swift_release(v124);
        *(_QWORD *)&v126 = swift_release(v125).n128_u64[0];
        v127 = v165;
        if (v165)
        {
          v128 = objc_msgSend(v165, "tracklist", v126);

          v129 = objc_msgSend(v128, "playingItem");
          if (v129)
          {
            v130 = objc_msgSend(v129, "metadataObject");

            if (v130)
            {

              v131 = &v66[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_hashedDSID];
              v132 = *(_QWORD *)&v66[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_hashedDSID + 8];
              if (v132)
              {
                if (*(_QWORD *)v131 == a3 && v132 == a4
                  || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v131, v132, a3, a4, 0) & 1) != 0)
                {
                  goto LABEL_55;
                }
              }
            }
          }
        }
        v133 = swift_getKeyPath(&unk_100ED4EF8);
        v134 = swift_getKeyPath(&unk_100ED4F20);
        static Published.subscript.getter(&v165, v66, v133, v134);
        swift_release(v133);
        *(_QWORD *)&v135 = swift_release(v134).n128_u64[0];
        v136 = v165;
        if (v165
          && (v137 = objc_msgSend(v165, "tracklist", v135),
              v136,
              v138 = objc_msgSend(v137, "playingItem"),
              v137,
              v138)
          && (v139 = objc_msgSend(v138, "metadataObject"), v138, v139))
        {

          sub_1008A5470();
          if (((v140 | v76) & 1) == 0)
            goto LABEL_133;
LABEL_55:
          v54 = v66;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
          v56 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v55 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v56 >= v55 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
        }
        else
        {
          if ((v76 & 1) != 0)
            goto LABEL_55;
LABEL_133:
          v54 = v66;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
          v56 = *(_QWORD *)((v166 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v141 = *(_QWORD *)((v166 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v56 >= v141 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v141 > 1, v56 + 1, 1);
        }
        v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
        specialized Array._endMutation()(v57);

        v53 = v118;
        v15 = v162;
        continue;
      }
      v16 = v70;
      if ((a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_preventPersonalDeviceAutoSwitch] & 1) == 0)
      {
        sub_1008A5470();
        if ((v110 & 1) != 0)
        {
          v111 = swift_getKeyPath(&unk_100ED4EF8);
          v112 = swift_getKeyPath(&unk_100ED4F20);
          static Published.subscript.getter(&v165, v66, v111, v112);
          swift_release(v111);
          *(_QWORD *)&v113 = swift_release(v112).n128_u64[0];
          v114 = v165;
          if (v165)
          {
            v115 = objc_msgSend(v165, "state", v113);

            if (!((v115 != (id)2) | v151 & 1))
            {
              LOBYTE(v151) = 1;
              v66[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_isPicked] = 1;
              v118 = v161;
              goto LABEL_118;
            }
          }
        }
      }
      v116 = objc_msgSend(*(id *)&v66[v73], "route", v150);
      v117 = v116;
      v118 = v161;
      if (v159)
      {
        if (v116)
        {
          sub_10004A07C(0, qword_1011C8420, MPAVRoute_ptr);
          v119 = v159;
          v120 = static NSObject.== infix(_:_:)(v119, v117);

          v5 = v154;
          goto LABEL_110;
        }
        v120 = 0;
      }
      else if (v116)
      {
        v120 = 0;
LABEL_110:

      }
      else
      {
        v120 = 1;
      }
      v66[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_isPicked] = v120 & 1;
      goto LABEL_118;
    }
    break;
  }
  v67 = v53 + 1;
  if (__OFADD__(v53, 1))
    goto LABEL_145;
  if (v67 >= v156)
    goto LABEL_138;
  v68 = *(_QWORD *)(v157 + 8 * v67);
  v60 = v53 + 1;
  if (v68)
    goto LABEL_79;
  v60 = v53 + 2;
  if (v53 + 2 >= v156)
    goto LABEL_138;
  v68 = *(_QWORD *)(v157 + 8 * v60);
  if (v68)
    goto LABEL_79;
  v60 = v53 + 3;
  if (v53 + 3 >= v156)
    goto LABEL_138;
  v68 = *(_QWORD *)(v157 + 8 * v60);
  if (v68)
    goto LABEL_79;
  v60 = v53 + 4;
  if (v53 + 4 >= v156)
    goto LABEL_138;
  v68 = *(_QWORD *)(v157 + 8 * v60);
  if (v68)
    goto LABEL_79;
  v60 = v53 + 5;
  if (v53 + 5 >= v156)
    goto LABEL_138;
  v68 = *(_QWORD *)(v157 + 8 * v60);
  if (v68)
  {
LABEL_79:
    v58 = (v68 - 1) & v68;
    v59 = __clz(__rbit64(v68)) + (v60 << 6);
    goto LABEL_80;
  }
  v69 = v53 + 6;
  while (v156 != v69)
  {
    v68 = *(_QWORD *)(v157 + 8 * v69++);
    if (v68)
    {
      v60 = v69 - 1;
      goto LABEL_79;
    }
  }
LABEL_138:
  sub_10004FA7C(v16);
  if ((v151 & 0x100000000) == 0)
    a2[OBJC_IVAR____TtC5Music19BottomPlayerManager_preventPersonalDeviceAutoSwitch] = 0;
  v143 = v167;
  if (v167 < 0 || (v167 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n(v167, 2);
    v144 = sub_100482724(v143);
    swift_bridgeObjectRelease(v143);
  }
  else
  {
    v144 = (void *)(v167 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain_n(v167, 2);
  }
  v165 = v144;
  sub_1008A656C((uint64_t *)&v165);
  swift_bridgeObjectRelease(v143);
  v145 = v165;
  swift_bridgeObjectRelease(v143);
  v146 = swift_getKeyPath(&unk_100ED4F40);
  v147 = swift_getKeyPath(&unk_100ED4F68);
  v165 = v145;
  v148 = a2;
  static Published.subscript.setter(&v165, v148, v146, v147);
  v149 = *(_QWORD *)&v148[OBJC_IVAR____TtC5Music19BottomPlayerManager_ignoredQueues];
  *(_QWORD *)&v148[OBJC_IVAR____TtC5Music19BottomPlayerManager_ignoredQueues] = v166;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v149).n128_u64[0];
  return result;
}

id sub_1008A4460()
{
  return sub_10015C40C(type metadata accessor for BottomPlayerManager);
}

uint64_t sub_1008A4530()
{
  return type metadata accessor for BottomPlayerManager(0);
}

uint64_t type metadata accessor for BottomPlayerManager(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011CE670, (uint64_t)&nominal type descriptor for BottomPlayerManager);
}

void sub_1008A454C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[4] = "\b";
  v4[5] = "\b";
  v4[6] = "\b";
  v4[7] = &unk_100ED4E50;
  sub_1000EA54C(319, (unint64_t *)&unk_1011CE680, &qword_1011CACC8);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(v2 - 8) + 64;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

uint64_t sub_1008A4600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for BottomPlayerManager(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

double sub_1008A463C(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  double result;
  _QWORD aBlock[6];
  char v12[24];

  v3 = swift_allocObject(&unk_1010DFE10, 24, 7);
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Music19BottomPlayerManager_queuesMap], v12, 0, 0);
  v4 = swift_bridgeObjectRetain();
  sub_10069FD1C(v4, v5);
  *(_QWORD *)(v3 + 16) = v6;
  v7 = swift_allocObject(&unk_1010DFE38, 32, 7);
  *(_QWORD *)(v7 + 16) = v1;
  *(_QWORD *)(v7 + 24) = v3;
  aBlock[4] = sub_1008A8584;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1008A5340;
  aBlock[3] = &unk_1010DFE50;
  v8 = _Block_copy(aBlock);
  v9 = v1;
  swift_retain();
  objc_msgSend(a1, "fetchAvailableRoutesWithCompletionHandler:", v8, swift_release().n128_f64[0]);
  _Block_release(v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1008A4750(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  char v23;
  id v24;
  id v25;
  char *v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  char *v53;
  __n128 v54;
  __n128 v55;
  void *v56;
  uint64_t v57;
  uint64_t *v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  unint64_t v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  Swift::Int *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  Swift::Int v91;
  unint64_t v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  void *v102;
  __n128 v103;
  uint64_t v104;
  Swift::Int v105;
  unint64_t v106;
  char v107;
  char v108;
  unint64_t v109;
  unint64_t v110;
  char v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  id v127;
  id v128;
  char *v129;
  char *v130;
  Swift::Int v131;
  _QWORD v132[3];
  _QWORD v133[3];
  char v134[24];
  void *v135;
  id v136[5];

  v130 = a2;
  v5 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v5);
  v124 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_100007E8C((uint64_t *)&unk_1011A8EE0);
  v122 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v121 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_100007E8C(&qword_1011B85B0);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v118 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = &_swiftEmptySetSingleton;
  if ((unint64_t)a1 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v9)
  {
    v127 = (id)objc_opt_self(MPCPlayerPath);
    if (v9 < 1)
      goto LABEL_91;
    v115 = a3;
    v10 = (uint64_t *)&v130[OBJC_IVAR____TtC5Music19BottomPlayerManager_queuesMap];
    v117 = &v130[OBJC_IVAR____TtC5Music19BottomPlayerManager_subscriptions];
    v126 = a1 & 0xC000000000000001;
    swift_beginAccess(&v130[OBJC_IVAR____TtC5Music19BottomPlayerManager_queuesMap], v134, 0, 0);
    v11 = 0;
    v116 = (char *)&type metadata for Swift.AnyObject + 8;
    v125 = a1;
    while (1)
    {
      v12 = v126
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a1)
          : *(id *)(a1 + 8 * v11 + 32);
      v13 = v12;
      v14 = v11 + 1;
      v15 = objc_msgSend(v127, "systemMusicPathWithRoute:playerID:", v12, 0);
      sub_100196F5C((Swift::Int *)v136, v15);

      a3 = *v10;
      if ((*v10 & 0xC000000000000001) != 0)
      {
        if (a3 < 0)
          v16 = *v10;
        else
          v16 = a3 & 0xFFFFFFFFFFFFFF8;
        v17 = v15;
        swift_bridgeObjectRetain();
        v18 = __CocoaDictionary.lookup(_:)(v17, v16);
        if (!v18)
        {
LABEL_19:

          swift_bridgeObjectRelease();
          goto LABEL_20;
        }
        a1 = v18;
        v133[0] = v18;
        v19 = type metadata accessor for BottomPlayerManager.Queue(0);
        swift_unknownObjectRetain(a1, v20);
        swift_dynamicCast(v136, v133, v116, v19, 7);
        v21 = (char *)v136[0];
        swift_unknownObjectRelease(a1);
      }
      else
      {
        if (!*(_QWORD *)(a3 + 16))
          goto LABEL_20;
        v17 = v15;
        swift_bridgeObjectRetain();
        v22 = sub_10079CCB8((uint64_t)v17);
        if ((v23 & 1) == 0)
          goto LABEL_19;
        v21 = (char *)*(id *)(*(_QWORD *)(a3 + 56) + 8 * v22);
      }

      swift_bridgeObjectRelease();
      if (v21)
      {

        *(_QWORD *)&v21[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order] = v14;
        goto LABEL_21;
      }
LABEL_20:
      v24 = objc_allocWithZone((Class)type metadata accessor for BottomPlayerManager.Queue(0));
      v25 = v15;
      v26 = sub_1008A5724(v25);
      v129 = v26;
      *(_QWORD *)&v26[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order] = v14;
      swift_beginAccess(&v26[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue__response], v136, 33, 0);
      v27 = v25;
      v28 = sub_100007E8C((uint64_t *)&unk_1011A9010);
      v29 = v121;
      Published.projectedValue.getter(v28);
      swift_endAccess(v136);
      v128 = v13;
      v30 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      v136[0] = (id)static OS_dispatch_queue.main.getter(v30, v31, v32, v33, v34, v35, v36, v37);
      v38 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      v39 = (uint64_t)v124;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v124, 1, 1, v38);
      v40 = sub_100049F28((unint64_t *)&unk_1011A8F00, (uint64_t *)&unk_1011A8EE0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v41 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
      v42 = v10;
      v43 = v9;
      v44 = v118;
      v45 = v123;
      Publisher.receive<A>(on:options:)(v136, v39, v123, v30, v40, v41);
      sub_10004FF60(v39, &qword_1011A08F0);

      (*(void (**)(char *, uint64_t))(v122 + 8))(v29, v45);
      v46 = swift_allocObject(&unk_1010DFE88, 24, 7);
      v47 = v130;
      *(_QWORD *)(v46 + 16) = v130;
      v48 = sub_100049F28((unint64_t *)&unk_1011A8F10, &qword_1011B85B0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v49 = v47;
      v50 = v120;
      v51 = Publisher<>.sink(receiveValue:)(sub_1008A85B0, v46, v120, v48);
      v52 = swift_release();
      v53 = v44;
      v9 = v43;
      v10 = v42;
      (*(void (**)(char *, uint64_t, __n128))(v119 + 8))(v53, v50, v52);
      v54 = swift_beginAccess(v117, v136, 33, 0);
      sub_1008A64A0(v51, (uint64_t)v27, (void (*)(uint64_t, uint64_t, uint64_t))sub_1005EF180, (uint64_t *)&unk_10119D3B0, (uint64_t (*)(_QWORD))&type metadata accessor for AnyCancellable, (void (*)(unint64_t, uint64_t))sub_1007A5A8C, v54);
      swift_endAccess(v136);

      swift_beginAccess(v42, v136, 33, 0);
      v21 = (char *)v27;
      a1 = v129;
      a3 = (uint64_t)v42;
      sub_1008A64A0(a1, (uint64_t)v21, (void (*)(uint64_t, uint64_t, uint64_t))sub_1005EF020, (uint64_t *)&unk_1011CE790, type metadata accessor for BottomPlayerManager.Queue, (void (*)(unint64_t, uint64_t))sub_1007A57BC, v55);
      swift_endAccess(v136);

LABEL_21:
      if (v11 == 0x7FFFFFFFFFFFFFFELL)
        break;
      ++v11;
      a1 = v125;
      if (v9 == v11)
      {
        swift_bridgeObjectRelease();
        v56 = v135;
        a3 = v115;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_25:
    if (a1 < 0)
      v57 = a1;
    else
      v57 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v57);
  }
  swift_bridgeObjectRelease();
  v56 = &_swiftEmptySetSingleton;
LABEL_30:
  v58 = (uint64_t *)(a3 + 16);
  v59 = swift_beginAccess(v58, v136, 33, 0);
  sub_1008A7994((uint64_t)v56, v59);
  swift_endAccess(v136);
  swift_bridgeObjectRelease();
  swift_beginAccess(v58, v133, 0, 0);
  v60 = *v58;
  if ((*v58 & 0xC000000000000001) != 0)
  {
    if (v60 < 0)
      v61 = *v58;
    else
      v61 = v60 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v62 = __CocoaSet.makeIterator()(v61);
    v63 = sub_10004A07C(0, &qword_1011A3AF8, MPCPlayerPath_ptr);
    v64 = sub_1000EA1BC((unint64_t *)&qword_1011CE780, &qword_1011A3AF8, MPCPlayerPath_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v65 = Set.Iterator.init(_cocoa:)(v136, v62, v63, v64);
    v60 = (uint64_t)v136[0];
    v66 = v136[1];
    v67 = (unint64_t)v136[2];
    v68 = (char *)v136[3];
    v69 = (unint64_t)v136[4];
  }
  else
  {
    v70 = -1 << *(_BYTE *)(v60 + 32);
    v66 = (_QWORD *)(v60 + 56);
    v67 = ~v70;
    v71 = -v70;
    if (v71 < 64)
      v72 = ~(-1 << v71);
    else
      v72 = -1;
    v69 = v72 & *(_QWORD *)(v60 + 56);
    v65 = (_QWORD *)swift_bridgeObjectRetain();
    v68 = 0;
  }
  v126 = v67;
  v128 = (id)(v60 & 0x7FFFFFFFFFFFFFFFLL);
  v129 = (char *)((v67 + 64) >> 6);
  v127 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    v73 = v68;
    if (v60 < 0)
    {
      v76 = __CocoaSet.Iterator.next()(v65);
      if (!v76)
        goto LABEL_88;
      v77 = v76;
      v131 = v76;
      v78 = sub_10004A07C(0, &qword_1011A3AF8, MPCPlayerPath_ptr);
      swift_unknownObjectRetain(v77, v79);
      swift_dynamicCast(v132, &v131, v127, v78, 7);
      v80 = (id)v132[0];
      swift_unknownObjectRelease(v77);
      if (!v80)
        goto LABEL_88;
    }
    else
    {
      if (v69)
      {
        v74 = __clz(__rbit64(v69));
        v69 &= v69 - 1;
        v75 = v74 | ((_QWORD)v68 << 6);
      }
      else
      {
        v81 = (uint64_t)(v68 + 1);
        if (__OFADD__(v68, 1))
          goto LABEL_90;
        if (v81 >= (uint64_t)v129)
          goto LABEL_88;
        v82 = v66[v81];
        ++v68;
        if (!v82)
        {
          v68 = v73 + 2;
          if ((uint64_t)(v73 + 2) >= (uint64_t)v129)
            goto LABEL_88;
          v82 = v66[(_QWORD)v68];
          if (!v82)
          {
            v68 = v73 + 3;
            if ((uint64_t)(v73 + 3) >= (uint64_t)v129)
              goto LABEL_88;
            v82 = v66[(_QWORD)v68];
            if (!v82)
            {
              v68 = v73 + 4;
              if ((uint64_t)(v73 + 4) >= (uint64_t)v129)
                goto LABEL_88;
              v82 = v66[(_QWORD)v68];
              if (!v82)
              {
                v83 = v73 + 5;
                while (v129 != v83)
                {
                  v82 = v66[(_QWORD)v83++];
                  if (v82)
                  {
                    v68 = v83 - 1;
                    goto LABEL_61;
                  }
                }
LABEL_88:
                sub_10004FA7C(v60);
                return;
              }
            }
          }
        }
LABEL_61:
        v69 = (v82 - 1) & v82;
        v75 = __clz(__rbit64(v82)) + ((_QWORD)v68 << 6);
      }
      v80 = *(id *)(*(_QWORD *)(v60 + 48) + 8 * v75);
      if (!v80)
        goto LABEL_88;
    }
    v84 = (Swift::Int *)&v130[OBJC_IVAR____TtC5Music19BottomPlayerManager_subscriptions];
    swift_beginAccess(&v130[OBJC_IVAR____TtC5Music19BottomPlayerManager_subscriptions], v132, 33, 0);
    v85 = *v84;
    if ((*v84 & 0xC000000000000001) == 0)
    {
      swift_bridgeObjectRetain();
      v92 = sub_10079CCB8((uint64_t)v80);
      v96 = v95;
      swift_bridgeObjectRelease();
      if ((v96 & 1) == 0)
        goto LABEL_75;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v84);
      v91 = *v84;
      v131 = *v84;
      *v84 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1007AA14C();
        v91 = v131;
      }
      goto LABEL_73;
    }
    v86 = v85 < 0 ? *v84 : v85 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v87 = v80;
    v88 = __CocoaDictionary.lookup(_:)(v87, v86);

    if (v88)
      break;
    swift_bridgeObjectRelease();
LABEL_75:
    swift_endAccess(v132);
    swift_release();
    v98 = (uint64_t *)&v130[OBJC_IVAR____TtC5Music19BottomPlayerManager_queuesMap];
    swift_beginAccess(&v130[OBJC_IVAR____TtC5Music19BottomPlayerManager_queuesMap], v132, 33, 0);
    v99 = *v98;
    if ((*v98 & 0xC000000000000001) != 0)
    {
      if (v99 < 0)
        v100 = *v98;
      else
        v100 = v99 & 0xFFFFFFFFFFFFFF8;
      v101 = v80;
      swift_bridgeObjectRetain();
      v102 = (void *)__CocoaDictionary.lookup(_:)(v101, v100);

      if (v102)
      {
        v103 = swift_unknownObjectRelease(v102);
        v104 = __CocoaDictionary.count.getter(v100, v103);
        v105 = sub_1008A6264(v100, v104, (uint64_t *)&unk_1011CE790, type metadata accessor for BottomPlayerManager.Queue, (void (*)(unint64_t, uint64_t))sub_1007A57BC);
        swift_retain();
        v106 = sub_10079CCB8((uint64_t)v101);
        v108 = v107;
        swift_release();
        if ((v108 & 1) == 0)
          goto LABEL_89;

        v102 = *(void **)(*(_QWORD *)(v105 + 56) + 8 * v106);
        v109 = v106;
LABEL_86:
        sub_1007AC718(v109, v105);
        *v98 = v105;
      }
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    swift_bridgeObjectRetain();
    v110 = sub_10079CCB8((uint64_t)v80);
    v112 = v111;
    swift_bridgeObjectRelease();
    if ((v112 & 1) != 0)
    {
      v113 = swift_isUniquelyReferenced_nonNull_native(*v98);
      v105 = *v98;
      v131 = *v98;
      *v98 = 0x8000000000000000;
      if ((v113 & 1) == 0)
      {
        sub_1007A9FA8();
        v105 = v131;
      }

      v102 = *(void **)(*(_QWORD *)(v105 + 56) + 8 * v110);
      v109 = v110;
      goto LABEL_86;
    }
    v102 = 0;
LABEL_41:
    swift_endAccess(v132);

  }
  v89 = swift_unknownObjectRelease(v88);
  v90 = __CocoaDictionary.count.getter(v86, v89);
  v91 = sub_1008A6264(v86, v90, (uint64_t *)&unk_10119D3B0, (uint64_t (*)(_QWORD))&type metadata accessor for AnyCancellable, (void (*)(unint64_t, uint64_t))sub_1007A5A8C);
  swift_retain();
  v92 = sub_10079CCB8((uint64_t)v87);
  v94 = v93;
  swift_release();
  if ((v94 & 1) != 0)
  {
LABEL_73:

    sub_1007AC718(v92, v91);
    *v84 = v91;
    swift_bridgeObjectRelease();
    goto LABEL_75;
  }
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
}

double sub_1008A5340(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  double result;

  v3 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v4 = sub_10004A07C(0, qword_1011C8420, MPAVRoute_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v4);
  v6 = swift_retain();
  v3(v5, v6);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1008A5400()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100ED4EF8);
  v2 = swift_getKeyPath(&unk_100ED4F20);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_1008A5470()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  unsigned __int8 v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path;
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path), "route"));
  if (!v2 || (v3 = v2, v4 = objc_msgSend(v2, "isDeviceRoute"), v3, (v4 & 1) == 0))
  {
    v5 = objc_msgSend(*(id *)(v0 + v1), "route");
    if (v5)
    {
      v6 = v5;
      objc_opt_self(MPAVEndpointRoute);
      v7 = (void *)swift_dynamicCastObjCClass(v6);
      if (!v7)
      {

        return;
      }
      v8 = objc_msgSend(v7, "endpointObject");

      if (!v8)
        goto LABEL_22;
      v9 = objc_msgSend(v8, "outputDevices");

      if (v9)
      {
        v10 = sub_10004A07C(0, (unint64_t *)&unk_1011CE750, MRAVOutputDevice_ptr);
        v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

        if ((unint64_t)v11 >> 62)
        {
          if (v11 < 0)
            v14 = v11;
          else
            v14 = v11 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v15 = _CocoaArrayWrapper.endIndex.getter(v14);
          swift_bridgeObjectRelease(v11);
          if (v15)
            goto LABEL_9;
        }
        else if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_9:
          if ((v11 & 0xC000000000000001) != 0)
          {
            v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
            goto LABEL_12;
          }
          if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v12 = *(id *)(v11 + 32);
LABEL_12:
            v13 = v12;
            objc_msgSend(v12, "deviceSubtype", swift_bridgeObjectRelease(v11).n128_f64[0]);

            return;
          }
          __break(1u);
LABEL_22:
          __break(1u);
          return;
        }
        swift_bridgeObjectRelease(v11);
      }
    }
  }
}

uint64_t sub_1008A5638()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v8;

  KeyPath = swift_getKeyPath(&unk_100ED4EF8);
  v2 = swift_getKeyPath(&unk_100ED4F20);
  static Published.subscript.getter(&v8, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v8;
  if (!v8)
    return 0;
  v4 = objc_msgSend(v8, "tracklist");

  v5 = objc_msgSend(v4, "playingItem");
  if (!v5)
    return 0;
  v6 = objc_msgSend(v5, "metadataObject");

  if (!v6)
    return 0;

  return 1;
}

char *sub_1008A5724(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  objc_class *v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  NSString v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v28;
  objc_super v29;
  uint64_t v30;

  v3 = sub_100007E8C((uint64_t *)&unk_1011A9010);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v1[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue__response];
  v30 = 0;
  v8 = v1;
  v9 = sub_100007E8C(&qword_1011ADC68);
  Published.init(initialValue:)(&v30, v9);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v6, v3);
  v8[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_isPicked] = 0;
  v10 = &v8[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_hashedDSID];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order] = 1;
  v11 = OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_playerRequestController;
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone((Class)MPRequestResponseController), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path] = a1;
  v12 = a1;

  v13 = (objc_class *)type metadata accessor for BottomPlayerManager.Queue(0);
  v29.receiver = v8;
  v29.super_class = v13;
  v14 = objc_msgSendSuper2(&v29, "init");
  v15 = objc_allocWithZone((Class)MPCPlayerRequest);
  v16 = (char *)v14;
  v17 = objc_msgSend(v15, "init");
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setLabel:", v18);

  sub_10053C6F8(1);
  v20 = v19;
  objc_msgSend(v17, "setPlayingItemProperties:", v19);

  sub_10053C6F8(2);
  v22 = v21;
  objc_msgSend(v17, "setQueueItemProperties:", v21);

  sub_10053C6F8(3);
  v24 = v23;
  objc_msgSend(v17, "setQueueSectionProperties:", v23);

  objc_msgSend(v17, "setPlayerPath:", v12);
  objc_msgSend(v17, "setTracklistRange:", 0, 99);
  v25 = *(void **)&v16[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_playerRequestController];
  objc_msgSend(v25, "setDelegate:", v16);
  objc_msgSend(v25, "setRequest:", v17);
  v26 = v25;
  objc_msgSend(v26, "beginAutomaticResponseLoading");

  return v16;
}

void sub_1008A59B8(void *a1, uint64_t a2, char *a3, void *a4)
{
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char **v16;
  id v17;
  void *v18;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;

  if (a1 && (v6 = objc_msgSend(a1, "supportedCommands")) != 0)
  {
    v7 = v6;
    v8 = sub_10004A07C(0, &qword_1011CE778, MRCommandInfo_ptr);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

    if ((unint64_t)v9 >> 62)
      goto LABEL_4;
  }
  else
  {
    v9 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
LABEL_4:
      if (v9 < 0)
        v10 = v9;
      else
        v10 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v11 = _CocoaArrayWrapper.endIndex.getter(v10);
      swift_bridgeObjectRelease();
      if (!v11)
      {
LABEL_8:
        *(_QWORD *)&v12 = swift_bridgeObjectRelease().n128_u64[0];
LABEL_40:
        v40 = objc_msgSend(a4, "response", v12, v45);
        if (v40)
        {
          v41 = v40;
          objc_opt_self(MPCPlayerResponse);
          v42 = swift_dynamicCastObjCClass(v41);
          if (!v42)
            swift_unknownObjectRelease(v41);
        }
        else
        {
          v42 = 0;
        }
        KeyPath = swift_getKeyPath(&unk_100ED4EF8);
        v44 = swift_getKeyPath(&unk_100ED4F20);
        v55 = v42;
        static Published.subscript.setter(&v55, a3, KeyPath, v44);
        return;
      }
      goto LABEL_11;
    }
  }
  v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v11)
    goto LABEL_8;
LABEL_11:
  v13 = 0;
  v45 = &a3[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_hashedDSID];
  v46 = a4;
  v14 = v9 & 0xC000000000000001;
  v15 = v9 & 0xFFFFFFFFFFFFFF8;
  v52 = (void *)kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  v53 = v9 + 32;
  v16 = &selRef_handleVolumeDownButton;
  v48 = v9;
  v49 = a3;
  v47 = v11;
  v50 = v9 & 0xFFFFFFFFFFFFFF8;
  v51 = v9 & 0xC000000000000001;
  while (1)
  {
    if (v14)
    {
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v9);
    }
    else
    {
      if (v13 >= *(_QWORD *)(v15 + 16))
        goto LABEL_46;
      v17 = *(id *)(v53 + 8 * v13);
    }
    v18 = v17;
    if (__OFADD__(v13++, 1))
      break;
    if (objc_msgSend(v17, v16[227]) == 133)
    {
      v20 = objc_msgSend(v18, "options");
      if (!v20)
      {
        v57 = 0u;
        v58 = 0u;
LABEL_34:

        sub_10004FF60((uint64_t)&v57, &qword_10119DCC0);
        goto LABEL_13;
      }
      v21 = v20;
      v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v54 = v52;
      v23 = v52;
      v24 = sub_100007E8C(&qword_1011CE760);
      v25 = sub_1008A8488();
      AnyHashable.init<A>(_:)(&v54, v24, v25);
      if (*(_QWORD *)(v22 + 16) && (v26 = sub_10079C294((uint64_t)&v55), (v27 & 1) != 0))
      {
        sub_10004FA40(*(_QWORD *)(v22 + 56) + 32 * v26, (uint64_t)&v57);
      }
      else
      {
        v57 = 0u;
        v58 = 0u;
      }
      sub_10004FF2C((uint64_t)&v55);
      swift_bridgeObjectRelease();
      v16 = &selRef_handleVolumeDownButton;
      if (!*((_QWORD *)&v58 + 1))
        goto LABEL_34;
      v28 = sub_100007E8C((uint64_t *)&unk_1011AD420);
      if ((swift_dynamicCast(&v55, &v57, (char *)&type metadata for Any + 8, v28, 6) & 1) != 0)
      {
        v29 = v55;
        v30 = *(_QWORD *)(v55 + 16);
        if (v30)
        {
          v31 = sub_100055B68();
          v32 = (uint64_t *)(v29 + 40);
          while (1)
          {
            v34 = *(v32 - 1);
            v33 = *v32;
            v55 = v34;
            v56 = v33;
            strcpy((char *)&v57, "cloudLibrary");
            BYTE13(v57) = 0;
            HIWORD(v57) = -5120;
            swift_bridgeObjectRetain();
            if ((StringProtocol.contains<A>(_:)(&v57, &type metadata for String, &type metadata for String, v31, v31) & 1) != 0)
            {
              v55 = v34;
              v56 = v33;
              *(_QWORD *)&v57 = 58;
              *((_QWORD *)&v57 + 1) = 0xE100000000000000;
              v35 = StringProtocol.components<A>(separatedBy:)(&v57, &type metadata for String, &type metadata for String, v31, v31);
              swift_bridgeObjectRelease();
              v36 = *(_QWORD *)(v35 + 16);
              if (v36)
                break;
            }
            swift_bridgeObjectRelease();
            v32 += 2;
            if (!--v30)
            {
              swift_bridgeObjectRelease();

              goto LABEL_38;
            }
          }
          v37 = v35 + 16 * v36;
          v39 = *(_QWORD *)(v37 + 16);
          v38 = *(_QWORD *)(v37 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_QWORD *)v45 = v39;
          *((_QWORD *)v45 + 1) = v38;

          swift_bridgeObjectRelease();
LABEL_38:
          v9 = v48;
          a3 = v49;
          v11 = v47;
          v15 = v50;
          v14 = v51;
          v16 = &selRef_handleVolumeDownButton;
        }
        else
        {
          swift_bridgeObjectRelease();

          v15 = v50;
          v14 = v51;
        }
        goto LABEL_13;
      }
    }

LABEL_13:
    if (v13 == v11)
    {
      *(_QWORD *)&v12 = swift_bridgeObjectRelease().n128_u64[0];
      a4 = v46;
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_46:
  __break(1u);
}

id sub_1008A5EF8()
{
  return sub_10015C40C(type metadata accessor for BottomPlayerManager.Queue);
}

uint64_t sub_1008A5F7C()
{
  return type metadata accessor for BottomPlayerManager.Queue(0);
}

uint64_t type metadata accessor for BottomPlayerManager.Queue(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011CE730, (uint64_t)&nominal type descriptor for BottomPlayerManager.Queue);
}

void sub_1008A5F98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_1000EA54C(319, (unint64_t *)&qword_1011CE740, &qword_1011ADC68);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_100ED4E50;
    v4[3] = &unk_100ED4E70;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

uint64_t sub_1008A6044@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for BottomPlayerManager.Queue(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1008A6080@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED4F40);
  v5 = swift_getKeyPath(&unk_100ED4F68);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1008A60FC(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED4F40);
  v5 = swift_getKeyPath(&unk_100ED4F68);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1008A6170@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED4EF8);
  v5 = swift_getKeyPath(&unk_100ED4F20);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1008A61F0(void **a1, void **a2)
{
  void *v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED4EF8);
  v5 = swift_getKeyPath(&unk_100ED4F20);
  v8 = v2;
  v6 = v2;
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

Swift::Int sub_1008A6264(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD), void (*a5)(unint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (a2)
  {
    sub_100007E8C(a3);
    v9 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v35 = v9;
    v10 = __CocoaDictionary.makeIterator()(a1);
    v11 = __CocoaDictionary.Iterator.next()(v10);
    if (v11)
    {
      v13 = v11;
      v14 = v12;
      v15 = sub_10004A07C(0, &qword_1011A3AF8, MPCPlayerPath_ptr);
      do
      {
        v33 = v13;
        swift_dynamicCast(&v34, &v33, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
        v32 = v14;
        v26 = a4(0);
        swift_dynamicCast(&v33, &v32, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
        v9 = v35;
        v27 = *(_QWORD *)(v35 + 16);
        if (*(_QWORD *)(v35 + 24) <= v27)
        {
          a5(v27 + 1, 1);
          v9 = v35;
        }
        v17 = v33;
        v16 = v34;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v9 + 40));
        v19 = v9 + 64;
        v20 = -1 << *(_BYTE *)(v9 + 32);
        v21 = result & ~v20;
        v22 = v21 >> 6;
        if (((-1 << v21) & ~*(_QWORD *)(v9 + 64 + 8 * (v21 >> 6))) != 0)
        {
          v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 64 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v28 = 0;
          v29 = (unint64_t)(63 - v20) >> 6;
          do
          {
            if (++v22 == v29 && (v28 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v30 = v22 == v29;
            if (v22 == v29)
              v22 = 0;
            v28 |= v30;
            v31 = *(_QWORD *)(v19 + 8 * v22);
          }
          while (v31 == -1);
          v23 = __clz(__rbit64(~v31)) + (v22 << 6);
        }
        *(_QWORD *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
        v24 = 8 * v23;
        *(_QWORD *)(*(_QWORD *)(v9 + 48) + v24) = v16;
        *(_QWORD *)(*(_QWORD *)(v9 + 56) + v24) = v17;
        ++*(_QWORD *)(v9 + 16);
        v13 = __CocoaDictionary.Iterator.next()(result);
        v14 = v25;
      }
      while (v13);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v9;
}

void sub_1008A64A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(unint64_t, uint64_t), __n128 a7)
{
  Swift::Int *v7;
  Swift::Int *v9;
  Swift::Int v12;
  uint64_t v16;
  uint64_t v17;
  uint64_t isUniquelyReferenced_nonNull_native;
  Swift::Int v19;

  v9 = v7;
  v12 = *v7;
  if ((*v7 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v12 < 0)
    v16 = *v7;
  else
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
  v17 = __CocoaDictionary.count.getter(v16, a7);
  if (!__OFADD__(v17, 1))
  {
    v12 = sub_1008A6264(v16, v17 + 1, a4, a5, a6);
    *v9 = v12;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
    v19 = *v9;
    *v9 = 0x8000000000000000;
    a3(a1, a2, isUniquelyReferenced_nonNull_native);
    *v9 = v19;
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

uint64_t sub_1008A656C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1008A7D30(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_1008A65E4(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_1008A65E4(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Swift::Int v17;
  uint64_t v18;
  _QWORD *v19;
  Swift::Int v20;
  unint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  Swift::Int v29;
  Swift::Int v30;
  uint64_t *v31;
  uint64_t v32;
  Swift::Int v33;
  uint64_t *v34;
  uint64_t v35;
  Swift::Int v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t *v123;
  Swift::Int v124;
  Swift::Int v125;
  uint64_t v126;
  Swift::Int v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *__dst;
  char *v133;
  char *v134;
  unint64_t v135;
  int64_t v136;
  uint64_t v137;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
    {
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
      __break(1u);
      goto LABEL_194;
    }
    if ((unint64_t)v3 >= 2)
    {
      v10 = 0;
      v11 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v13 = *(_QWORD *)(v11 + 8 * i);
        v14 = v10;
        do
        {
          v15 = *(_QWORD *)(v11 + v14);
          if (*(_QWORD *)(v13 + OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order) >= *(_QWORD *)(v15 + OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order))
            break;
          if (!v11)
            goto LABEL_189;
          *(_QWORD *)(v11 + v14 + 8) = v15;
          *(_QWORD *)(v11 + v14) = v13;
          v14 -= 8;
        }
        while (v14 != -8);
        v10 += 8;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
    {
LABEL_194:
      LOBYTE(v122) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, v122, 936, 0);
      __break(1u);
      return;
    }
    v123 = a1;
    v124 = v4;
    v126 = v1;
    if (v3 >= 2)
    {
      v6 = v5 >> 1;
      v7 = type metadata accessor for BottomPlayerManager.Queue(0);
      v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
      *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
      v9 = (char *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      v137 = v8;
      goto LABEL_18;
    }
    v16 = (char *)_swiftEmptyArrayStorage;
    v137 = (uint64_t)_swiftEmptyArrayStorage;
    v9 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 == 1)
    {
LABEL_18:
      v17 = 0;
      v18 = *a1;
      v128 = *a1 - 8;
      v16 = (char *)_swiftEmptyArrayStorage;
      v19 = &unk_1011CE000;
      v20 = v3;
      v125 = v3;
      __dst = v9;
      v129 = v18;
      while (1)
      {
        v22 = v17 + 1;
        if (v17 + 1 < v20)
        {
          v23 = v19[223];
          v24 = *(_QWORD *)(*(_QWORD *)(v18 + 8 * v22) + v23);
          v25 = *(_QWORD *)(*(_QWORD *)(v18 + 8 * v17) + v23);
          v22 = v17 + 2;
          if (v17 + 2 < v20)
          {
            v26 = v24;
            while (1)
            {
              v27 = *(_QWORD *)(*(_QWORD *)(v18 + 8 * v22) + v23);
              if (v24 < v25 == v27 >= v26)
                break;
              ++v22;
              v26 = v27;
              if (v20 == v22)
              {
                v22 = v20;
                break;
              }
            }
          }
          if (v24 < v25)
          {
            if (v22 < v17)
              goto LABEL_184;
            if (v17 < v22)
            {
              v28 = (uint64_t *)(v128 + 8 * v22);
              v29 = v22;
              v30 = v17;
              v31 = (uint64_t *)(v18 + 8 * v17);
              do
              {
                if (v30 != --v29)
                {
                  if (!v18)
                    goto LABEL_191;
                  v32 = *v31;
                  *v31 = *v28;
                  *v28 = v32;
                }
                ++v30;
                --v28;
                ++v31;
              }
              while (v30 < v29);
            }
          }
        }
        if (v22 < v20)
        {
          if (__OFSUB__(v22, v17))
            goto LABEL_179;
          if (v22 - v17 < v124)
          {
            v33 = v17 + v124;
            if (__OFADD__(v17, v124))
              goto LABEL_185;
            if (v33 >= v20)
              v33 = v20;
            if (v33 < v17)
              goto LABEL_186;
            if (v22 != v33)
            {
              v34 = (uint64_t *)(v128 + 8 * v22);
              do
              {
                v35 = *(_QWORD *)(v18 + 8 * v22);
                v36 = v17;
                v37 = v34;
                do
                {
                  v38 = *v37;
                  if (*(_QWORD *)(v35 + v19[223]) >= *(_QWORD *)(*v37 + v19[223]))
                    break;
                  if (!v18)
                    goto LABEL_187;
                  *v37 = v35;
                  v37[1] = v38;
                  --v37;
                  ++v36;
                }
                while (v22 != v36);
                ++v22;
                ++v34;
              }
              while (v22 != v33);
              v22 = v33;
            }
          }
        }
        if (v22 < v17)
          goto LABEL_178;
        v127 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          v16 = sub_1008A71C4(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
        v9 = __dst;
        v40 = *((_QWORD *)v16 + 2);
        v39 = *((_QWORD *)v16 + 3);
        v21 = v40 + 1;
        if (v40 >= v39 >> 1)
        {
          v113 = sub_1008A71C4((char *)(v39 > 1), v40 + 1, 1, v16);
          v9 = __dst;
          v16 = v113;
        }
        *((_QWORD *)v16 + 2) = v21;
        v41 = v16 + 32;
        v42 = &v16[16 * v40 + 32];
        *(_QWORD *)v42 = v17;
        *((_QWORD *)v42 + 1) = v127;
        if (v40)
          break;
        v21 = 1;
LABEL_20:
        v20 = v125;
        v17 = v127;
        if (v127 >= v125)
          goto LABEL_150;
      }
      v130 = v16 + 32;
      v131 = v16;
      while (1)
      {
        v43 = v21 - 1;
        if (v21 >= 4)
        {
          v48 = &v41[16 * v21];
          v49 = *((_QWORD *)v48 - 8);
          v50 = *((_QWORD *)v48 - 7);
          v54 = __OFSUB__(v50, v49);
          v51 = v50 - v49;
          if (v54)
            goto LABEL_167;
          v53 = *((_QWORD *)v48 - 6);
          v52 = *((_QWORD *)v48 - 5);
          v54 = __OFSUB__(v52, v53);
          v46 = v52 - v53;
          v47 = v54;
          if (v54)
            goto LABEL_168;
          v55 = v21 - 2;
          v56 = &v41[16 * v21 - 32];
          v58 = *(_QWORD *)v56;
          v57 = *((_QWORD *)v56 + 1);
          v54 = __OFSUB__(v57, v58);
          v59 = v57 - v58;
          if (v54)
            goto LABEL_170;
          v54 = __OFADD__(v46, v59);
          v60 = v46 + v59;
          if (v54)
            goto LABEL_173;
          if (v60 >= v51)
          {
            v78 = &v41[16 * v43];
            v80 = *(_QWORD *)v78;
            v79 = *((_QWORD *)v78 + 1);
            v54 = __OFSUB__(v79, v80);
            v81 = v79 - v80;
            if (v54)
              goto LABEL_177;
            v71 = v46 < v81;
            goto LABEL_90;
          }
        }
        else
        {
          if (v21 != 3)
          {
            v72 = *((_QWORD *)v16 + 4);
            v73 = *((_QWORD *)v16 + 5);
            v54 = __OFSUB__(v73, v72);
            v65 = v73 - v72;
            v66 = v54;
            goto LABEL_84;
          }
          v45 = *((_QWORD *)v16 + 4);
          v44 = *((_QWORD *)v16 + 5);
          v54 = __OFSUB__(v44, v45);
          v46 = v44 - v45;
          v47 = v54;
        }
        if ((v47 & 1) != 0)
          goto LABEL_169;
        v55 = v21 - 2;
        v61 = &v41[16 * v21 - 32];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v64 = __OFSUB__(v62, v63);
        v65 = v62 - v63;
        v66 = v64;
        if (v64)
          goto LABEL_172;
        v67 = &v41[16 * v43];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v54 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v54)
          goto LABEL_175;
        if (__OFADD__(v65, v70))
          goto LABEL_176;
        if (v65 + v70 >= v46)
        {
          v71 = v46 < v70;
LABEL_90:
          if (v71)
            v43 = v55;
          goto LABEL_92;
        }
LABEL_84:
        if ((v66 & 1) != 0)
          goto LABEL_171;
        v74 = &v41[16 * v43];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v54 = __OFSUB__(v75, v76);
        v77 = v75 - v76;
        if (v54)
          goto LABEL_174;
        if (v77 < v65)
          goto LABEL_20;
LABEL_92:
        if (v43 - 1 >= v21)
        {
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
          goto LABEL_180;
        }
        if (!v18)
          goto LABEL_190;
        v82 = v19;
        v135 = v43 - 1;
        v136 = v43;
        v134 = &v41[16 * v43 - 16];
        v83 = *(_QWORD *)v134;
        v84 = &v41[16 * v43];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v133 = v84;
        v87 = (char *)(v18 + 8 * *(_QWORD *)v134);
        v88 = (char *)(v18 + 8 * *(_QWORD *)v84);
        v89 = v18 + 8 * v85;
        v90 = v88 - v87;
        v91 = v88 - v87 + 7;
        if (v88 - v87 >= 0)
          v91 = v88 - v87;
        v92 = v91 >> 3;
        v93 = v89 - (_QWORD)v88;
        v94 = v89 - (_QWORD)v88 + 7;
        if ((uint64_t)(v89 - (_QWORD)v88) >= 0)
          v94 = v89 - (_QWORD)v88;
        v95 = v94 >> 3;
        if (v92 >= v94 >> 3)
        {
          if (v93 < -7)
            goto LABEL_193;
          if ((unint64_t)v9 >= v89 || v9 != v88)
          {
            v101 = v85;
            memmove(v9, v88, 8 * v95);
            v85 = v101;
            v9 = __dst;
          }
          v97 = &v9[8 * v95];
          v18 = v129;
          if (v83 < v86)
          {
            v71 = v93 < 8;
            v19 = v82;
            if (v71)
            {
              v98 = v9;
              goto LABEL_138;
            }
            v102 = (char *)(v128 + 8 * v85);
            v103 = v88;
            while (2)
            {
              v104 = v102 + 8;
              v106 = *((_QWORD *)v103 - 1);
              v103 -= 8;
              v105 = v106;
              if (*(_QWORD *)(*((_QWORD *)v97 - 1) + v82[223]) >= *(_QWORD *)(v106 + v82[223]))
              {
                v105 = *((_QWORD *)v97 - 1);
                v103 = v88;
                if (v104 != v97)
                {
                  v97 -= 8;
                  goto LABEL_130;
                }
                v107 = v102 >= v97;
                v97 -= 8;
                if (v107)
LABEL_130:
                  *(_QWORD *)v102 = v105;
              }
              else if (v104 != v88 || v102 >= v88)
              {
                goto LABEL_130;
              }
              if (v87 >= v103 || (v102 -= 8, v88 = v103, v9 >= v97))
              {
                v98 = v9;
                v88 = v103;
                goto LABEL_138;
              }
              continue;
            }
          }
          v98 = v9;
        }
        else
        {
          if (v90 < -7)
            goto LABEL_193;
          if (v9 != v87 || v9 >= v88)
          {
            v96 = v85;
            memmove(v9, v87, 8 * v92);
            v85 = v96;
            v9 = __dst;
          }
          v97 = &v9[8 * v92];
          if (v86 < v85)
          {
            v19 = v82;
            v98 = v9;
            if (v90 < 8)
            {
LABEL_113:
              v88 = v87;
              v18 = v129;
              goto LABEL_138;
            }
            while (2)
            {
              v99 = *(_QWORD *)v88;
              if (*(_QWORD *)(*(_QWORD *)v88 + v82[223]) >= *(_QWORD *)(*(_QWORD *)v98 + v82[223]))
              {
                v99 = *(_QWORD *)v98;
                v100 = v87 == v98;
                v98 += 8;
                if (!v100)
                  goto LABEL_110;
              }
              else
              {
                v100 = v87 == v88;
                v88 += 8;
                if (!v100)
LABEL_110:
                  *(_QWORD *)v87 = v99;
              }
              v87 += 8;
              if (v98 >= v97 || (unint64_t)v88 >= v89)
                goto LABEL_113;
              continue;
            }
          }
          v98 = v9;
          v88 = v87;
          v18 = v129;
        }
        v19 = v82;
LABEL_138:
        v108 = v97 - v98;
        v109 = v97 - v98 + 7;
        if (v108 >= 0)
          v109 = v108;
        if (v108 <= -8)
          goto LABEL_193;
        v110 = v109 >> 3;
        if (v88 != v98 || v88 >= &v98[8 * v110])
        {
          v111 = v85;
          memmove(v88, v98, 8 * v110);
          v85 = v111;
        }
        if (v85 < v83)
          goto LABEL_164;
        v16 = v131;
        if (v136 > *((_QWORD *)v131 + 2))
          goto LABEL_165;
        *(_QWORD *)v134 = v83;
        v41 = v130;
        *(_QWORD *)&v130[16 * v135 + 8] = v85;
        v112 = *((_QWORD *)v131 + 2);
        if (v136 >= (uint64_t)v112)
          goto LABEL_166;
        v21 = v112 - 1;
        memmove(v133, v133 + 16, 16 * (v112 - 1 - v136));
        *((_QWORD *)v131 + 2) = v112 - 1;
        v9 = __dst;
        if (v112 <= 2)
          goto LABEL_20;
      }
    }
    v21 = _swiftEmptyArrayStorage[2];
LABEL_150:
    if (v21 >= 2)
    {
      v114 = *v123;
      while (1)
      {
        v115 = v21 - 2;
        if (v21 < 2)
          break;
        if (!v114)
          goto LABEL_192;
        v116 = v9;
        v117 = *(_QWORD *)&v16[16 * v115 + 32];
        v118 = *(_QWORD *)&v16[16 * v21 + 24];
        sub_1008A6F38((char *)(v114 + 8 * v117), (char *)(v114 + 8 * *(_QWORD *)&v16[16 * v21 + 16]), v114 + 8 * v118, v9);
        if (v126)
          goto LABEL_161;
        if (v118 < v117)
          goto LABEL_181;
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          v16 = sub_1008A77EC((uint64_t)v16);
        if (v115 >= *((_QWORD *)v16 + 2))
          goto LABEL_182;
        v119 = &v16[16 * v115 + 32];
        *(_QWORD *)v119 = v117;
        *((_QWORD *)v119 + 1) = v118;
        v120 = *((_QWORD *)v16 + 2);
        if (v21 > v120)
          goto LABEL_183;
        memmove(&v16[16 * v21 + 16], &v16[16 * v21 + 32], 16 * (v120 - v21));
        *((_QWORD *)v16 + 2) = v120 - 1;
        v21 = v120 - 1;
        v9 = v116;
        if (v120 <= 2)
          goto LABEL_161;
      }
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
      goto LABEL_188;
    }
LABEL_161:
    swift_bridgeObjectRelease(v16);
    *(_QWORD *)((v137 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    specialized Array._endMutation()(v121);
    swift_bridgeObjectRelease(v137);
  }
}

uint64_t sub_1008A6F38(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*(_QWORD *)(*((_QWORD *)v16 - 1) + OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order) >= *(_QWORD *)(v20 + OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)(*(_QWORD *)v6 + OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order) >= *(_QWORD *)(*(_QWORD *)v4 + OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_order))
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1008A7744((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_1008A71C4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011CE7A0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_1008A72BC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  int64_t v4;
  char *result;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 < 0)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
      return (char *)memmove(result, v3, v4);
  }
  return result;
}

char *sub_1008A734C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 63;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -64)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
      return (char *)memmove(result, v3, v7 << 6);
  }
  return result;
}

char *sub_1008A73F4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

uint64_t sub_1008A749C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack(v3);
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront(v3);
  return result;
}

unint64_t sub_1008A75A8(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t result;
  char v6;

  v3 = *a2;
  v4 = *a3 - v3;
  if (v4 <= -112)
  {
    v6 = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v6, 1046, 0);
    __break(1u);
  }
  else
  {
    result = *a1;
    if (result < v3 || result >= v3 + 112 * (v4 / 112))
    {
      return swift_arrayInitWithTakeFrontToBack(result);
    }
    else if (result != v3)
    {
      return swift_arrayInitWithTakeBackToFront(result);
    }
  }
  return result;
}

char *sub_1008A7684(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_1008A7744(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1008A77EC(uint64_t a1)
{
  return sub_1008A71C4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1008A7800(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v7)
      goto LABEL_24;
    v17 = *(_QWORD *)(v3 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v7)
        goto LABEL_24;
      v17 = *(_QWORD *)(v3 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v7)
          goto LABEL_24;
        v17 = *(_QWORD *)(v3 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 3;
          if (v16 + 3 >= v7)
            goto LABEL_24;
          v17 = *(_QWORD *)(v3 + 8 * v8);
          if (!v17)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1001A3AA8(v12, v13);
    v15 = v14;
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v15);
  }
  v18 = v16 + 4;
  if (v18 >= v7)
  {
LABEL_24:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)(v3 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v17 = *(_QWORD *)(v3 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void sub_1008A7994(uint64_t a1, __n128 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[5];

  v4 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)(v4 + 16))
      return;
LABEL_8:
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 < 0)
        v6 = a1;
      else
        v6 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v7 = __CocoaSet.makeIterator()(v6);
      v8 = sub_10004A07C(0, &qword_1011A3AF8, MPCPlayerPath_ptr);
      v9 = sub_1000EA1BC((unint64_t *)&qword_1011CE780, &qword_1011A3AF8, MPCPlayerPath_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
      v10 = Set.Iterator.init(_cocoa:)(v33, v7, v8, v9);
      a1 = v33[0];
      v30 = v33[1];
      v11 = v33[2];
      v12 = v33[3];
      v13 = v33[4];
    }
    else
    {
      v14 = -1 << *(_BYTE *)(a1 + 32);
      v30 = a1 + 56;
      v11 = ~v14;
      v15 = -v14;
      if (v15 < 64)
        v16 = ~(-1 << v15);
      else
        v16 = -1;
      v13 = v16 & *(_QWORD *)(a1 + 56);
      v10 = (_QWORD *)swift_bridgeObjectRetain();
      v12 = 0;
    }
    v17 = (unint64_t)(v11 + 64) >> 6;
    if (a1 < 0)
      goto LABEL_20;
    while (1)
    {
      if (v13)
      {
        v18 = (v13 - 1) & v13;
        v19 = __clz(__rbit64(v13)) | (v12 << 6);
        v20 = v12;
      }
      else
      {
        v26 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          return;
        }
        if (v26 >= v17)
          goto LABEL_42;
        v27 = *(_QWORD *)(v30 + 8 * v26);
        v20 = v12 + 1;
        if (!v27)
        {
          v20 = v12 + 2;
          if (v12 + 2 >= v17)
            goto LABEL_42;
          v27 = *(_QWORD *)(v30 + 8 * v20);
          if (!v27)
          {
            v20 = v12 + 3;
            if (v12 + 3 >= v17)
              goto LABEL_42;
            v27 = *(_QWORD *)(v30 + 8 * v20);
            if (!v27)
            {
              v20 = v12 + 4;
              if (v12 + 4 >= v17)
                goto LABEL_42;
              v27 = *(_QWORD *)(v30 + 8 * v20);
              if (!v27)
              {
                v20 = v12 + 5;
                if (v12 + 5 >= v17)
                  goto LABEL_42;
                v27 = *(_QWORD *)(v30 + 8 * v20);
                if (!v27)
                {
                  v28 = v12 + 6;
                  while (v17 != v28)
                  {
                    v27 = *(_QWORD *)(v30 + 8 * v28++);
                    if (v27)
                    {
                      v20 = v28 - 1;
                      goto LABEL_38;
                    }
                  }
LABEL_42:
                  sub_10004FA7C(a1);
                  return;
                }
              }
            }
          }
        }
LABEL_38:
        v18 = (v27 - 1) & v27;
        v19 = __clz(__rbit64(v27)) + (v20 << 6);
      }
      v25 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v19);
      if (!v25)
        goto LABEL_42;
      while (1)
      {
        v29 = (void *)sub_1001A3EF0(v25);

        v12 = v20;
        v13 = v18;
        if ((a1 & 0x8000000000000000) == 0)
          break;
LABEL_20:
        v21 = __CocoaSet.Iterator.next()(v10);
        if (v21)
        {
          v22 = v21;
          v31 = v21;
          v23 = sub_10004A07C(0, &qword_1011A3AF8, MPCPlayerPath_ptr);
          swift_unknownObjectRetain(v22, v24);
          swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
          v25 = v32;
          swift_unknownObjectRelease(v22);
          v20 = v12;
          v18 = v13;
          if (v25)
            continue;
        }
        goto LABEL_42;
      }
    }
  }
  if (v4 < 0)
    v5 = *v2;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  if (__CocoaSet.count.getter(v5, a2))
    goto LABEL_8;
}

uint64_t sub_1008A7C90(uint64_t a1)
{
  return sub_10035D5B4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1008A7CA4(uint64_t a1)
{
  return sub_10035D700(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1008A7CB8(uint64_t a1)
{
  return sub_10035D44C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1008A7CCC(_QWORD *a1)
{
  return sub_10035CF94(0, a1[2], 0, a1);
}

uint64_t sub_1008A7CE0(_QWORD *a1)
{
  return sub_10035E458(0, a1[2], 0, a1);
}

uint64_t sub_1008A7CF4(uint64_t a1)
{
  return sub_10035E600(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1008A7D08(uint64_t a1)
{
  return sub_10035EBBC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1008A7D1C(uint64_t a1)
{
  return sub_10035ED30(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1008A7D30(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1008A7D44(uint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t i;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  id v22;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v3 = *a1;
  if ((unint64_t)*a1 >> 62)
    goto LABEL_65;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4)
  {
LABEL_3:
    sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
    v5 = 0;
    v41 = OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path;
    while (1)
    {
      v6 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3)
         : *(id *)(v3 + 8 * v5 + 32);
      v7 = v6;
      v8 = *(id *)(a2 + v41);
      v9 = static NSObject.== infix(_:_:)(v7, v8);

      if ((v9 & 1) != 0)
        break;
      v10 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        if ((v3 & 0x8000000000000000) != 0)
          v36 = v3;
        else
          v36 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v4 = _CocoaArrayWrapper.endIndex.getter(v36);
        if (!v4)
          goto LABEL_10;
        goto LABEL_3;
      }
      ++v5;
      if (v10 == v4)
        goto LABEL_10;
    }
    swift_bridgeObjectRelease(v3);
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
    }
    else
    {
      v9 = *a1;
      if (!((unint64_t)*a1 >> 62))
      {
        if (v13 != *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_16:
          for (i = v5 + 5; ; ++i)
          {
            v3 = i - 4;
            v15 = *a1;
            if ((*a1 & 0xC000000000000001) != 0)
            {
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v15);
            }
            else
            {
              if ((v3 & 0x8000000000000000) != 0)
                goto LABEL_55;
              if (v3 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_56;
              v16 = *(id *)(v15 + 8 * i);
            }
            v17 = v16;
            v18 = *(id *)(a2 + v41);
            v19 = static NSObject.== infix(_:_:)(v17, v18);

            if ((v19 & 1) != 0)
              goto LABEL_42;
            if (v3 != v5)
              break;
LABEL_41:
            if (__OFADD__(v5++, 1))
              goto LABEL_58;
LABEL_42:
            v32 = i - 3;
            if (__OFADD__(v3, 1))
              goto LABEL_57;
            v33 = *a1;
            if ((unint64_t)*a1 >> 62)
            {
              if (v33 < 0)
                v35 = *a1;
              else
                v35 = v33 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain();
              v34 = _CocoaArrayWrapper.endIndex.getter(v35);
              swift_bridgeObjectRelease(v33);
            }
            else
            {
              v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            if (v32 == v34)
              return v5;
          }
          v20 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, *a1);
            v20 = *a1;
            if ((*a1 & 0xC000000000000001) == 0)
            {
LABEL_27:
              if ((v3 & 0x8000000000000000) != 0)
                goto LABEL_61;
              if (v3 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_62;
              v22 = *(id *)(v20 + 8 * i);
              goto LABEL_30;
            }
          }
          else
          {
            if ((v5 & 0x8000000000000000) != 0)
              goto LABEL_59;
            if (v5 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_60;
            v21 = *(id *)(v20 + 8 * v5 + 32);
            if ((v20 & 0xC000000000000001) == 0)
              goto LABEL_27;
          }
          v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v20);
          v20 = *a1;
LABEL_30:
          isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v20);
          *a1 = v20;
          if (!isUniquelyReferenced_nonNull_bridgeObject || v20 < 0 || (v20 & 0x4000000000000000) != 0)
          {
            v20 = sub_10072E088(v20);
            *a1 = v20;
          }
          v24 = *(void **)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
          *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20) = v22;

          specialized Array._endMutation()(v25);
          v26 = *a1;
          v27 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
          *a1 = v26;
          if (!v27 || v26 < 0 || (v26 & 0x4000000000000000) != 0)
          {
            v26 = sub_10072E088(v26);
            *a1 = v26;
          }
          if ((v3 & 0x8000000000000000) != 0)
            goto LABEL_63;
          v28 = v26 & 0xFFFFFFFFFFFFFF8;
          if (v3 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_64;
          v29 = *(void **)(v28 + 8 * i);
          *(_QWORD *)(v28 + 8 * i) = v21;

          specialized Array._endMutation()(v30);
          goto LABEL_41;
        }
        return v5;
      }
    }
    if (v9 < 0)
      v39 = v9;
    else
      v39 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v40 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v9);
    if (v13 != v40)
      goto LABEL_16;
    return v5;
  }
LABEL_10:
  swift_bridgeObjectRelease(v3);
  v11 = *a1;
  if (!((unint64_t)*a1 >> 62))
    return *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11 < 0)
    v37 = *a1;
  else
    v37 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v38 = _CocoaArrayWrapper.endIndex.getter(v37);
  swift_bridgeObjectRelease(v11);
  return v38;
}

void sub_1008A8158(void *a1, char *a2, void (**a3)(_QWORD))
{
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  _QWORD v26[6];

  a3[2](a3);
  v6 = objc_msgSend(a1, "response");
  if (v6)
  {
    v7 = v6;
    if ((objc_msgSend(v6, "respondsToSelector:", "tracklist") & 1) == 0)
    {
      _Block_release(a3);
      swift_unknownObjectRelease(v7);
      __break(1u);
      return;
    }
    v8 = objc_msgSend(v7, "tracklist");
    v9 = objc_msgSend(v8, "playingItem", swift_unknownObjectRelease(v7).n128_f64[0]);

    if (v9)
    {
      v10 = objc_msgSend(v9, "metadataObject");

      if (v10)
      {

        v11 = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtCC5Music19BottomPlayerManager5Queue_path], "route");
        if (v11)
        {
          v12 = v11;
          objc_opt_self(MPAVEndpointRoute);
          v13 = (void *)swift_dynamicCastObjCClass(v12);
          if (v13)
          {
            v14 = objc_msgSend(v13, "endpointObject");

            if (v14)
            {
              v15 = objc_msgSend(objc_allocWithZone((Class)MRNowPlayingControllerConfiguration), "initWithEndpoint:", v14);
              objc_msgSend(v15, "setRequestSupportedCommands:", 1);
              v16 = objc_msgSend(objc_allocWithZone((Class)MRNowPlayingController), "initWithConfiguration:", v15);
              v17 = swift_allocObject(&unk_1010DFDC0, 32, 7);
              *(_QWORD *)(v17 + 16) = a2;
              *(_QWORD *)(v17 + 24) = a1;
              v26[4] = sub_1008A8468;
              v26[5] = v17;
              v26[0] = _NSConcreteStackBlock;
              v26[1] = 1107296256;
              v26[2] = sub_10004E2F4;
              v26[3] = &unk_1010DFDD8;
              v18 = _Block_copy(v26);
              v19 = a2;
              v20 = a1;
              objc_msgSend(v16, "performRequestWithCompletion:", v18, swift_release().n128_f64[0]);
              _Block_release(v18);

              return;
            }
          }
          else
          {

          }
        }
      }
    }
  }
  v21 = objc_msgSend(a1, "response");
  if (v21)
  {
    v22 = v21;
    objc_opt_self(MPCPlayerResponse);
    v23 = swift_dynamicCastObjCClass(v22);
    if (!v23)
      swift_unknownObjectRelease(v22);
  }
  else
  {
    v23 = 0;
  }
  KeyPath = swift_getKeyPath(&unk_100ED4EF8);
  v25 = swift_getKeyPath(&unk_100ED4F20);
  v26[0] = v23;
  static Published.subscript.setter(v26, a2, KeyPath, v25);
}

uint64_t sub_1008A843C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1008A8468(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1008A59B8(a1, a2, *(char **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1008A8470(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1008A8480(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1008A8488()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE768;
  if (!qword_1011CE768)
  {
    v1 = sub_100044B54(&qword_1011CE760);
    sub_1008A84EC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE768);
  }
  return result;
}

unint64_t sub_1008A84EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119D730;
  if (!qword_10119D730)
  {
    type metadata accessor for CFString(255);
    result = swift_getWitnessTable(&unk_100EA78DC, v1);
    atomic_store(result, (unint64_t *)&qword_10119D730);
  }
  return result;
}

uint64_t sub_1008A8534()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1008A8558()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1008A8584(uint64_t a1)
{
  uint64_t v1;

  sub_1008A4750(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1008A858C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1008A85B0()
{
  sub_1008A26F0();
}

uint64_t sub_1008A85D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1008A85FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1008A352C(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1008A8610()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 56, 7);
}

void sub_1008A8654(uint64_t a1)
{
  uint64_t v1;

  sub_1008A1EDC(a1, *(void (**)(uint64_t, __n128))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_1008A8668(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_1011CE7B4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  v5[7] = a1;
  v5[8] = v4;
  return swift_task_switch(sub_1008A2104, 0, 0);
}

uint64_t sub_1008A86D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_1011CE7C4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  v5[7] = a1;
  v5[8] = v4;
  return swift_task_switch(sub_1008A242C, 0, 0);
}

void sub_1008A8734(uint64_t a1)
{
  uint64_t v1;

  sub_1008A1C24(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

_DWORD *sub_1008A873C(_DWORD *result, char *__src, size_t __n)
{
  int v3;
  char *v4;
  _DWORD *v5;
  int v6;
  unsigned int v7;
  _BOOL4 v9;
  uint64_t v10;
  size_t v11;
  char *v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unint64_t v19;

  if (__src)
  {
    v3 = __n;
    v4 = __src;
    v5 = result;
    v6 = result[1];
    v7 = *result + __n;
    v9 = __n > 0xF || v7 > 0xF;
    *result = v7;
    result[1] = v6 | v9;
    v10 = result[10];
    if (v10 + __n <= 0xF)
    {
      result = memcpy((char *)result + v10 + 24, __src, __n);
      LODWORD(v11) = v5[10] + v3;
LABEL_18:
      v5[10] = v11;
      return result;
    }
    v12 = &__src[__n];
    if ((_DWORD)v10)
    {
      result = memcpy((char *)result + v10 + 24, __src, (16 - v10));
      HIDWORD(v13) = v5[2] - 2048144777 * v5[6];
      LODWORD(v13) = HIDWORD(v13);
      v14 = -1640531535 * (v13 >> 19);
      HIDWORD(v13) = v5[3] - 2048144777 * v5[7];
      LODWORD(v13) = HIDWORD(v13);
      v5[2] = v14;
      v5[3] = -1640531535 * (v13 >> 19);
      HIDWORD(v13) = v5[4] - 2048144777 * v5[8];
      LODWORD(v13) = HIDWORD(v13);
      v5[4] = -1640531535 * (v13 >> 19);
      HIDWORD(v13) = v5[5] - 2048144777 * v5[9];
      LODWORD(v13) = HIDWORD(v13);
      v5[5] = -1640531535 * (v13 >> 19);
      v4 += (16 - v5[10]);
      v5[10] = 0;
    }
    if (v4 <= v12 - 16)
    {
      v15 = v5[2];
      v16 = v5[3];
      v17 = v5[4];
      v18 = v5[5];
      do
      {
        HIDWORD(v19) = v15 - 2048144777 * *(_DWORD *)v4;
        LODWORD(v19) = HIDWORD(v19);
        v15 = -1640531535 * (v19 >> 19);
        HIDWORD(v19) = v16 - 2048144777 * *((_DWORD *)v4 + 1);
        LODWORD(v19) = HIDWORD(v19);
        v16 = -1640531535 * (v19 >> 19);
        HIDWORD(v19) = v17 - 2048144777 * *((_DWORD *)v4 + 2);
        LODWORD(v19) = HIDWORD(v19);
        v17 = -1640531535 * (v19 >> 19);
        HIDWORD(v19) = v18 - 2048144777 * *((_DWORD *)v4 + 3);
        LODWORD(v19) = HIDWORD(v19);
        v18 = -1640531535 * (v19 >> 19);
        v4 += 16;
      }
      while (v4 <= v12 - 16);
      v5[2] = v15;
      v5[3] = v16;
      v5[4] = v17;
      v5[5] = v18;
    }
    if (v4 < v12)
    {
      v11 = v12 - v4;
      result = memcpy(v5 + 6, v4, v11);
      goto LABEL_18;
    }
  }
  return result;
}

char *sub_1008A88E4(char *result, char *__src, size_t __n)
{
  int v3;
  char *v4;
  char *v5;
  uint64_t v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  if (__src)
  {
    v3 = __n;
    v4 = __src;
    v5 = result;
    *(_QWORD *)result += __n;
    v6 = *((unsigned int *)result + 18);
    if (v6 + __n <= 0x1F)
    {
      result = (char *)memcpy(&result[v6 + 40], __src, __n);
      LODWORD(v7) = *((_DWORD *)v5 + 18) + v3;
LABEL_12:
      *((_DWORD *)v5 + 18) = v7;
      return result;
    }
    v8 = &__src[__n];
    if ((_DWORD)v6)
    {
      result = (char *)memcpy(&result[v6 + 40], __src, (32 - v6));
      v9 = __ROR8__(*((_QWORD *)v5 + 2) - 0x3D4D51C2D82B14B1 * *((_QWORD *)v5 + 6), 33);
      *((_QWORD *)v5 + 1) = 0x9E3779B185EBCA87
                          * __ROR8__(*((_QWORD *)v5 + 1) - 0x3D4D51C2D82B14B1 * *((_QWORD *)v5 + 5), 33);
      *((_QWORD *)v5 + 2) = 0x9E3779B185EBCA87 * v9;
      v10 = 0x9E3779B185EBCA87 * __ROR8__(*((_QWORD *)v5 + 4) - 0x3D4D51C2D82B14B1 * *((_QWORD *)v5 + 8), 33);
      *((_QWORD *)v5 + 3) = 0x9E3779B185EBCA87
                          * __ROR8__(*((_QWORD *)v5 + 3) - 0x3D4D51C2D82B14B1 * *((_QWORD *)v5 + 7), 33);
      *((_QWORD *)v5 + 4) = v10;
      v4 += (32 - *((_DWORD *)v5 + 18));
      *((_DWORD *)v5 + 18) = 0;
    }
    if (v4 + 32 <= v8)
    {
      v11 = *((_QWORD *)v5 + 1);
      v12 = *((_QWORD *)v5 + 2);
      v14 = *((_QWORD *)v5 + 3);
      v13 = *((_QWORD *)v5 + 4);
      do
      {
        v11 = 0x9E3779B185EBCA87 * __ROR8__(v11 - 0x3D4D51C2D82B14B1 * *(_QWORD *)v4, 33);
        v12 = 0x9E3779B185EBCA87 * __ROR8__(v12 - 0x3D4D51C2D82B14B1 * *((_QWORD *)v4 + 1), 33);
        v14 = 0x9E3779B185EBCA87 * __ROR8__(v14 - 0x3D4D51C2D82B14B1 * *((_QWORD *)v4 + 2), 33);
        v13 = 0x9E3779B185EBCA87 * __ROR8__(v13 - 0x3D4D51C2D82B14B1 * *((_QWORD *)v4 + 3), 33);
        v4 += 32;
      }
      while (v4 <= v8 - 32);
      *((_QWORD *)v5 + 1) = v11;
      *((_QWORD *)v5 + 2) = v12;
      *((_QWORD *)v5 + 3) = v14;
      *((_QWORD *)v5 + 4) = v13;
    }
    if (v4 < v8)
    {
      v7 = v8 - v4;
      result = (char *)memcpy(v5 + 40, v4, v7);
      goto LABEL_12;
    }
  }
  return result;
}

_DWORD *sub_1008A8A74(_DWORD *result, unsigned int a2)
{
  *result = bswap32(a2);
  return result;
}

_QWORD *sub_1008A8A80(_QWORD *result, unint64_t a2)
{
  *result = bswap64(a2);
  return result;
}

uint64_t sub_1008A8A8C(uint64_t a1)
{
  int v1;
  unsigned int v2;
  int *v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unsigned int v9;

  if (*(_DWORD *)(a1 + 4))
    v1 = vaddvq_s32((int32x4_t)vorrq_s8((int8x16_t)vshlq_u32(*(uint32x4_t *)(a1 + 8), (uint32x4_t)xmmword_100ED4E00), (int8x16_t)vshlq_u32(*(uint32x4_t *)(a1 + 8), (uint32x4_t)xmmword_100ED4DF0)));
  else
    v1 = *(_DWORD *)(a1 + 16) + 374761393;
  v2 = *(_DWORD *)a1 + v1;
  v3 = (int *)(a1 + 24);
  v4 = *(_DWORD *)(a1 + 40) & 0xF;
  if ((*(_DWORD *)(a1 + 40) & 0xFu) >= 4)
  {
    do
    {
      v5 = *v3++;
      HIDWORD(v6) = v2 - 1028477379 * v5;
      LODWORD(v6) = HIDWORD(v6);
      v2 = 668265263 * (v6 >> 15);
      v4 -= 4;
    }
    while (v4 > 3);
  }
  for (; v4; --v4)
  {
    v7 = *(unsigned __int8 *)v3;
    v3 = (int *)((char *)v3 + 1);
    HIDWORD(v8) = v2 + 374761393 * v7;
    LODWORD(v8) = HIDWORD(v8);
    v2 = -1640531535 * (v8 >> 21);
  }
  v9 = -1028477379 * ((-2048144777 * (v2 ^ (v2 >> 15))) ^ ((-2048144777 * (v2 ^ (v2 >> 15))) >> 13));
  return v9 ^ HIWORD(v9);
}

unint64_t sub_1008A8B5C(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;

  if (*a1 < 0x20uLL)
    v1 = a1[3] + 0x27D4EB2F165667C5;
  else
    v1 = 0x85EBCA77C2B2AE63
       - 0x61C8864E7A143579
       * ((0x85EBCA77C2B2AE63
         - 0x61C8864E7A143579
         * ((0x85EBCA77C2B2AE63
           - 0x61C8864E7A143579
           * ((0x85EBCA77C2B2AE63
             - 0x61C8864E7A143579
             * ((__ROR8__(a1[2], 57) + __ROR8__(a1[1], 63) + __ROR8__(a1[3], 52) + __ROR8__(a1[4], 46)) ^ (0x9E3779B185EBCA87 * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[1], 33)))) ^ (0x9E3779B185EBCA87 * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[2], 33)))) ^ (0x9E3779B185EBCA87 * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[3], 33)))) ^ (0x9E3779B185EBCA87 * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[4], 33)));
  v2 = v1 + *a1;
  v3 = a1 + 5;
  v4 = *a1 & 0x1FLL;
  if (v4 >= 8)
  {
    do
    {
      v5 = *v3++;
      v2 = 0x85EBCA77C2B2AE63
         - 0x61C8864E7A143579 * __ROR8__((0x9E3779B185EBCA87 * __ROR8__(0xC2B2AE3D27D4EB4FLL * v5, 33)) ^ v2, 37);
      v4 -= 8;
    }
    while (v4 > 7);
  }
  if (v4 >= 4)
  {
    v6 = *(_DWORD *)v3;
    v3 = (uint64_t *)((char *)v3 + 4);
    v2 = 0x165667B19E3779F9 - 0x3D4D51C2D82B14B1 * __ROR8__((0x9E3779B185EBCA87 * v6) ^ v2, 41);
    v4 -= 4;
  }
  for (; v4; --v4)
  {
    v7 = *(unsigned __int8 *)v3;
    v3 = (uint64_t *)((char *)v3 + 1);
    v2 = 0x9E3779B185EBCA87 * __ROR8__((0x27D4EB2F165667C5 * v7) ^ v2, 53);
  }
  v8 = 0x165667B19E3779F9
     * ((0xC2B2AE3D27D4EB4FLL * (v2 ^ (v2 >> 33))) ^ ((0xC2B2AE3D27D4EB4FLL * (v2 ^ (v2 >> 33))) >> 29));
  return v8 ^ HIDWORD(v8);
}

uint64_t _s5SongsVwxx(_QWORD *a1)
{
  swift_release(*a1);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  return swift_bridgeObjectRelease(a1[7]);
}

uint64_t _s5SongsVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v4 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v4;
  v5 = a2[4];
  *(_QWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
  v6 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v6;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t *_s5SongsVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  *((_BYTE *)a1 + 41) = *((_BYTE *)a2 + 41);
  *((_BYTE *)a1 + 42) = *((_BYTE *)a2 + 42);
  *((_BYTE *)a1 + 43) = *((_BYTE *)a2 + 43);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t *_s5SongsVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  a1[2] = a2[2];
  swift_bridgeObjectRelease(a1[3]);
  v5 = a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  swift_bridgeObjectRelease(v5);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  *((_BYTE *)a1 + 41) = *((_BYTE *)a2 + 41);
  *((_BYTE *)a1 + 42) = *((_BYTE *)a2 + 42);
  *((_BYTE *)a1 + 43) = *((_BYTE *)a2 + 43);
  v6 = a2[7];
  v7 = a1[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

ValueMetadata *_s5SongsVMa()
{
  return &_s5SongsVN;
}

uint64_t sub_1008A8F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[6];
  uint64_t v22;
  int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void *v33;

  v3 = v2;
  v27 = a2;
  v5 = sub_100007E8C(&qword_1011A3C78);
  __chkstk_darwin(v5);
  v26 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v26);
  v24 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v10 = (char *)v21 - v9;
  v29 = v5;
  *(_QWORD *)&v30 = sub_1008AAF68();
  sub_100049F68(&v28);
  v11 = type metadata accessor for TitledSection(0);
  v12 = type metadata accessor for Song(0);
  v25 = v11;
  MusicLibrarySectionedRequest.init()(v11, v12, &protocol witness table for TitledSection, &protocol witness table for Song);
  MusicLibrarySectionedRequest.deferIdentifierResolution.setter(1, v5);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v13, v5);
  v14 = *(unsigned __int8 *)(v3 + 8);
  v23 = *(unsigned __int8 *)(v3 + 8);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v14, v5);
  v15._object = *(void **)(v3 + 24);
  v22 = *(_QWORD *)(v3 + 16);
  v15._countAndFlagsBits = v22;
  v21[5] = v15._object;
  MusicLibrarySectionedRequest.filterItems(text:)(v15);
  sub_1008A9B7C();
  sub_1008A9E7C();
  sub_1008AAFB4(a1, (uint64_t)v10);
  v16 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v12) == 1)
  {
    sub_1008AAFFC((uint64_t)v10);
    v31 = 0u;
    v32 = 0u;
    v33 = 0;
  }
  else
  {
    *((_QWORD *)&v32 + 1) = v12;
    v33 = &protocol witness table for Song;
    v17 = sub_100049F68(&v31);
    (*(void (**)(_QWORD *, char *, uint64_t))(v16 + 32))(v17, v10, v12);
  }
  v18 = v27;
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(&v28, &v31);
  v19 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 0, 1, v19);
}

uint64_t sub_1008A9548@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD v18[8];
  uint64_t v19;
  _QWORD v20[6];
  _OWORD v21[2];
  uint64_t v22;

  v3 = type metadata accessor for Song(0);
  v18[7] = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v18[6] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3C78);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v18[5] = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v18 - v9;
  v11 = type metadata accessor for TitledSection(0);
  MusicLibrarySectionedRequest.init()(v11, v3, &protocol witness table for TitledSection, &protocol witness table for Song);
  MusicLibrarySectionedRequest.deferIdentifierResolution.setter(1, v5);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v12, v5);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*(unsigned __int8 *)(v1 + 8), v5);
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)(v1 + 16));
  sub_1008A9B7C();
  sub_1008A9E7C();
  KeyPath = swift_getKeyPath(&unk_100ED5118);
  v20[0] = Song.id.getter(KeyPath);
  v20[1] = v14;
  MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(KeyPath, v20, v5, &protocol witness table for MusicItemID);
  swift_bridgeObjectRelease();
  swift_release();
  v20[3] = v5;
  v20[4] = sub_1008AAF68();
  v15 = sub_100049F68(v20);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v15, v10, v5);
  v22 = 0;
  memset(v21, 0, sizeof(v21));
  v19 = a1;
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(v20, v21);
  v16 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v19, 0, 1, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
}

uint64_t sub_1008A9AF4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibrarySongSortProperties.title.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1008A9B38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return dispatch thunk of LibrarySongInternalFilter.favoriteStatus.getter(v1, v2);
}

void sub_1008A9B7C()
{
  uint64_t v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __n128 v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  NSObject *oslog;
  uint64_t v21;
  uint64_t v22;

  v1 = (uint64_t *)v0;
  v2 = *(unsigned __int8 *)(v0 + 40);
  if (!*(_BYTE *)(v0 + 40))
  {
    KeyPath = swift_getKeyPath(&unk_100ED5050);
    v7 = sub_100007E8C(&qword_1011A3C78);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(KeyPath, 1, v7);
    swift_release();
    v8 = swift_getKeyPath(&unk_100ED5078);
    v9 = 1;
LABEL_7:
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v8, v9, v7);
    swift_release();
    v11 = swift_getKeyPath(&unk_100ED50A0);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v11, 1, v7);
    swift_release();
    v5 = swift_getKeyPath(&unk_100ED50C8);
    v4 = v7;
    goto LABEL_8;
  }
  if (v2 == 1)
  {
    v10 = swift_getKeyPath(&unk_100ED50F0);
    v7 = sub_100007E8C(&qword_1011A3C78);
    v8 = v10;
    v9 = 0;
    goto LABEL_7;
  }
  if (v2 == 3)
  {
    v3 = swift_getKeyPath(&unk_100ED50C8);
    v4 = sub_100007E8C(&qword_1011A3C78);
    v5 = v3;
LABEL_8:
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v5, 1, v4);
    swift_release();
    return;
  }
  if (qword_10119C028 != -1)
    swift_once(&qword_10119C028, sub_10046477C);
  v12 = type metadata accessor for Logger(0);
  sub_100048B14(v12, (uint64_t)static Logger.libraryView);
  sub_1001A829C((_QWORD *)v0);
  v13 = sub_1001A829C((_QWORD *)v0);
  oslog = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.fault.getter(v14);
  if (os_log_type_enabled(oslog, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v22 = v17;
    *(_DWORD *)v16 = 136446210;
    LOBYTE(v21) = v2;
    v18 = String.init<A>(describing:)(&v21, &_s11ContentSortV6OptionON);
    v21 = sub_100322200(v18, v19, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    swift_bridgeObjectRelease();
    sub_1001A82EC(v1);
    sub_1001A82EC(v1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v15, "Tried to apply unhandled sortOption=%{public}s to songs request.", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {
    sub_1001A82EC((uint64_t *)v0);
    sub_1001A82EC((uint64_t *)v0);

  }
}

void sub_1008A9E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD v27[9];

  v1 = type metadata accessor for MusicFavoriteStatus(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v27[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 32);
  if (!*(_QWORD *)(v5 + 16))
    return;
  Hasher.init(_seed:)(v27, *(_QWORD *)(v5 + 40));
  String.hash(into:)(v27, 0x657469726F766166, 0xE900000000000073);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  v9 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    goto LABEL_13;
  v10 = ~v7;
  while (!*(_BYTE *)(*(_QWORD *)(v5 + 48) + v8))
  {
    v11 = 0xE300000000000000;
    v12 = 7105633;
LABEL_8:
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v11, 0x657469726F766166, 0xE900000000000073, 0);
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      goto LABEL_12;
    v8 = (v8 + 1) & v10;
    if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      goto LABEL_13;
  }
  if (*(_BYTE *)(*(_QWORD *)(v5 + 48) + v8) == 2)
  {
    v11 = 0xE900000000000073;
    v12 = 0x64616F6C6E776F64;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
LABEL_12:
  KeyPath = swift_getKeyPath(&unk_100ED5028);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for MusicFavoriteStatus.favorited(_:), v1);
  v15 = sub_100007E8C(&qword_1011A3C78);
  v16 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
  MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(KeyPath, v4, v15, &protocol witness table for Song, v16);
  v17 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v17);
LABEL_13:
  if (!*(_QWORD *)(v5 + 16))
    return;
  Hasher.init(_seed:)(v27, *(_QWORD *)(v5 + 40));
  String.hash(into:)(v27, 0x64616F6C6E776F64, 0xE900000000000073);
  v18 = Hasher._finalize()();
  v19 = -1 << *(_BYTE *)(v5 + 32);
  v20 = v18 & ~v19;
  if (((*(_QWORD *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
    return;
  v21 = ~v19;
  while (2)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v5 + 48) + v20))
    {
      v22 = 0xE300000000000000;
      v23 = 7105633;
      goto LABEL_20;
    }
    v22 = 0xE900000000000073;
    v23 = 0x657469726F766166;
    if (*(_BYTE *)(*(_QWORD *)(v5 + 48) + v20) == 1)
    {
LABEL_20:
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v22, 0x64616F6C6E776F64, 0xE900000000000073, 0);
      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        goto LABEL_23;
      v20 = (v20 + 1) & v21;
      if (((*(_QWORD *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        return;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_23:
  v25 = sub_100007E8C(&qword_1011A3C78);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(1, v25);
}

void sub_1008AA1AC(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  int v5;
  char v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v10[6];

  v2 = v1;
  v4 = *(_BYTE *)(v1 + 40);
  v5 = *(unsigned __int8 *)(v2 + 41);
  sub_1005CFF5C(v4);
  if ((v6 & 1) == 0 || v5 != (unsigned __int16)(a1 & 0x100) >> 8)
  {
    v7 = (void *)objc_opt_self(NSUserDefaults);
    v8 = objc_msgSend(v7, "standardUserDefaults");
    v10[3] = &_s11ContentSortVN;
    v10[4] = sub_100049FE4();
    v10[5] = sub_10004A028();
    LOBYTE(v10[0]) = v4;
    BYTE1(v10[0]) = v5;
    NSUserDefaults.encodeValue(_:forKey:)(v10);

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v10);
    v9 = objc_msgSend(v7, "standardUserDefaults");
    __asm { BR              X10 }
  }
}

void sub_1008AA308(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  v4 = type metadata accessor for MusicLibrary(0);
  v5 = sub_100048748((unint64_t *)&qword_10119D2D8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
  Hasher._combine(_:)(*(_BYTE *)(v1 + 8) & 1);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v2 + 32);
  swift_bridgeObjectRetain();
  sub_100045DAC(a1, v8);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_1008AA410()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v2 & 1);
  return ((uint64_t (*)())((char *)sub_1008AA4EC + 4 * byte_100ED4F8F[*(unsigned __int8 *)(v1 + 42)]))();
}

uint64_t sub_1008AA4EC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease(0x8000000100E2B550);
  Hasher._combine(_:)(v1 & 1);
  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 56);
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v0, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

void sub_1008AA5E8()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  Swift::String v6;

  v5 = *v0;
  v6 = (Swift::String)v0[1];
  v1 = type metadata accessor for TitledSection(0);
  v2 = type metadata accessor for Song(0);
  MusicLibrarySectionedRequest.init()(v1, v2, &protocol witness table for TitledSection, &protocol witness table for Song);
  v3 = sub_100007E8C(&qword_1011A3C78);
  MusicLibrarySectionedRequest.deferIdentifierResolution.setter(1, v3);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v4, v3);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(BYTE8(v5), v3);
  MusicLibrarySectionedRequest.filterItems(text:)(v6);
  sub_1008A9B7C();
  sub_1008A9E7C();
}

Swift::Int sub_1008AA6B8()
{
  __int128 v1[4];

  Hasher.init(_seed:)(v1, 0);
  sub_1008AA308(v1);
  return Hasher._finalize()();
}

Swift::Int sub_1008AA6F8(uint64_t a1)
{
  __int128 v2[4];

  Hasher.init(_seed:)(v2, a1);
  sub_1008AA308(v2);
  return Hasher._finalize()();
}

uint64_t sub_1008AA730(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1008AA8E8((uint64_t)v7, (uint64_t)v8) & 1;
}

unint64_t sub_1008AA77C()
{
  unint64_t result;

  result = qword_1011CE7E0;
  if (!qword_1011CE7E0)
  {
    result = swift_getWitnessTable(&unk_100ED4FA4, &_s5SongsVN);
    atomic_store(result, (unint64_t *)&qword_1011CE7E0);
  }
  return result;
}

unint64_t sub_1008AA7C0(uint64_t a1)
{
  unint64_t result;

  result = sub_1008AA7E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1008AA7E4()
{
  unint64_t result;

  result = qword_1011CE8C0;
  if (!qword_1011CE8C0)
  {
    result = swift_getWitnessTable(&unk_100ED4FCC, &_s5SongsVN);
    atomic_store(result, (unint64_t *)&qword_1011CE8C0);
  }
  return result;
}

uint64_t sub_1008AA828(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibrarySongInternalFilter.favoriteStatus.getter);
}

uint64_t sub_1008AA834@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibrarySongSortProperties.artistName.getter, a2);
}

uint64_t sub_1008AA840@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibrarySongSortProperties.albumTitle.getter, a2);
}

uint64_t sub_1008AA84C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibrarySongSortProperties.trackNumber.getter(v3, v4);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v6 & 1;
  return result;
}

uint64_t sub_1008AA898@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibrarySongSortProperties.title.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1008AA8DC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibrarySongSortProperties.libraryAddedDate.getter);
}

uint64_t sub_1008AA8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t result;
  int v11;
  int v12;
  char v13;
  int v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  type metadata accessor for MusicLibrary(0);
  if ((static MusicLibrary.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0
    || ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) != 0)
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = v4 == v6 && v5 == v7;
  if (v8 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0), result = 0, (v9 & 1) != 0))
  {
    if ((sub_10016CD08(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) == 0)
      return 0;
    v11 = *(unsigned __int8 *)(a1 + 41);
    v12 = *(unsigned __int8 *)(a2 + 41);
    sub_1005CFF5C(*(_BYTE *)(a1 + 40));
    if ((v13 & 1) == 0)
      return 0;
    if (((v11 ^ v12) & 1) != 0)
      return 0;
    v14 = *(unsigned __int8 *)(a1 + 43);
    v15 = *(unsigned __int8 *)(a2 + 43);
    sub_1005CFF5C(*(_BYTE *)(a1 + 42));
    if ((v16 & 1) == 0 || ((v14 ^ v15) & 1) != 0)
      return 0;
    v17 = *(_QWORD *)(a1 + 48);
    v18 = *(_QWORD *)(a1 + 56);
    v19 = *(_QWORD *)(a2 + 48);
    v20 = *(_QWORD *)(a2 + 56);
    if (v17 == v19 && v18 == v20)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v19, v20, 0);
  }
  return result;
}

uint64_t sub_1008AA9EC()
{
  void *v0;
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::Int v8;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  unint64_t v17;

  v0 = (void *)objc_opt_self(NSUserDefaults);
  v1 = objc_msgSend(v0, "standardUserDefaults");
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "stringForKey:", v2, 0);

  if (v3)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

    v7._countAndFlagsBits = v4;
    v7._object = v6;
    v8 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010A9F50, v7);
    swift_bridgeObjectRelease(v6);
    if (!v8)
      return 0;
    if (v8 == 1)
      return 1;
  }
  v10 = objc_msgSend(v0, "standardUserDefaults");
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(0xE000000000000000);
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "stringForKey:", v11, 0);

  if (!v12)
    return 3;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16._countAndFlagsBits = v13;
  v16._object = v15;
  v17 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010A9FA0, v16);
  swift_bridgeObjectRelease(v15);
  if (v17 >= 3)
    return 3;
  else
    return v17;
}

_UNKNOWN **sub_1008AABBC()
{
  uint64_t *v0;
  id v1;
  id v2;
  _UNKNOWN **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  if ((v0[1] & 1) != 0)
    return &off_1010AA120;
  v1 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  v3 = &off_1010AA120;
  if (v2 != (id)6)
  {
    v9 = *v0;
    v4 = type metadata accessor for MusicLibrary(0);
    swift_retain();
    v8 = static MusicLibrary.shared.getter(v5);
    v6 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    LOBYTE(v4) = dispatch thunk of static Equatable.== infix(_:_:)(&v9, &v8, v4, v6);
    swift_release();
    swift_release();
    if ((v4 & 1) != 0)
      return &off_1010AA148;
  }
  return v3;
}

void sub_1008AACCC(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  void *v17;
  _UNKNOWN **v18;
  Swift::Int v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  char v25;
  char v26;
  __int16 v27;
  unint64_t v28;
  unint64_t v29;

  v4 = type metadata accessor for MusicLibrary(0);
  v5 = static MusicLibrary.shared.getter(v4);
  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = objc_msgSend(v6, "standardUserDefaults", swift_retain().n128_f64[0]);
  v8 = sub_100049FE4();
  sub_10004A028();
  NSUserDefaults.decodeValue<A>(_:forKey:)((uint64_t)&_s11ContentSortVN, v8, &v20);

  v9 = (unsigned __int16)v20;
  if ((v20 & 0xFF00) == 0x200)
  {
    v10 = sub_100464874(0xC0u);
    if ((v10 & 0xFF00) == 0x200)
    {
      LOBYTE(v9) = 0;
      LOBYTE(v11) = 1;
      goto LABEL_6;
    }
    v9 = v10;
  }
  v11 = (v9 >> 8) & 1;
LABEL_6:
  v12 = objc_msgSend(v6, "standardUserDefaults");
  v13 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
  v14 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  NSUserDefaults.decodeValue<A>(_:forKey:)(v13, v14, &v20);

  v15 = (void *)v20;
  if (!v20)
  {
    v16 = sub_1008AA9EC();
    Optional<A>.convertToSet.getter(v16);
    if (v17)
      v15 = v17;
    else
      v15 = &_swiftEmptySetSingleton;
  }
  v20 = v5;
  v21 = a1 & 1;
  v22 = 0;
  v23 = 0xE000000000000000;
  v24 = &_swiftEmptySetSingleton;
  v25 = v9;
  v26 = v11;
  v27 = 256;
  v28 = 0xD000000000000010;
  v29 = 0x8000000100E47710;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = sub_1008AABBC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v19 = sub_1001A53A0((uint64_t)v18, (uint64_t)v15);
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = a1 & 1;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0xE000000000000000;
  *(_QWORD *)(a2 + 32) = v19;
  *(_BYTE *)(a2 + 40) = v9;
  *(_BYTE *)(a2 + 41) = v11;
  *(_WORD *)(a2 + 42) = 256;
  *(_QWORD *)(a2 + 48) = 0xD000000000000010;
  *(_QWORD *)(a2 + 56) = 0x8000000100E47710;
}

unint64_t sub_1008AAF68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3350[0];
  if (!qword_1011B3350[0])
  {
    v1 = sub_100044B54(&qword_1011A3C78);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>, v1);
    atomic_store(result, qword_1011B3350);
  }
  return result;
}

uint64_t sub_1008AAFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119E480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008AAFFC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_10119E480);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1008AB03C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t i;
  id v9;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v5 = *(id *)(a2 + 32);
      }
      v6 = v5;
      sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      v7 = static NSObject.== infix(_:_:)(v6, a1);

      if ((v7 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v12 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v12 == v4)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v12 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v9 = *(id *)(a2 + 32 + 8 * v12);
          }
          v10 = v9;
          v11 = static NSObject.== infix(_:_:)(v9, a1);

          if ((v11 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        v13 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v4 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease(a2);
        if (v4)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_1008AB1D4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    __asm { BR              X9 }
  return 0;
}

uint64_t sub_1008AB3E4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = a1;
  if (*(unsigned __int8 *)(a2 + 32) == a1)
    return 0;
  result = 0;
  v5 = v2 - 1;
  while (v5 != result)
  {
    v6 = *(unsigned __int8 *)(a2 + 33 + result++);
    if (v6 == v3)
      return result;
  }
  return 0;
}

void sub_1008AB448(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t i;
  id v9;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v5 = *(id *)(a2 + 32);
      }
      v6 = v5;
      type metadata accessor for BottomPlayerManager.Queue(0);
      v7 = static NSObject.== infix(_:_:)(v6, a1);

      if ((v7 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v12 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v12 == v4)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v12 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v9 = *(id *)(a2 + 32 + 8 * v12);
          }
          v10 = v9;
          v11 = static NSObject.== infix(_:_:)(v9, a1);

          if ((v11 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        v13 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v4 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease(a2);
        if (v4)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_1008AB5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double *i;
  char v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 16);
  for (i = (double *)(a2 + 128);
        *((_QWORD *)i - 10) != v5
     || *(i - 12) != *(double *)a1
     || *(i - 11) != *(double *)(a1 + 8)
     || *(i - 7) != *(double *)(a1 + 40)
     || *(i - 6) != *(double *)(a1 + 48);
        i += 13)
  {
LABEL_4:
    if (v2 == ++v4)
      return 0;
  }
  v9 = (uint64_t (*)(uint64_t))*((_QWORD *)i - 5);
  v8 = *((_QWORD *)i - 4);
  v10 = *((_QWORD *)i - 2);
  v11 = *i;
  v21 = *((_QWORD *)i - 8);
  swift_bridgeObjectRetain(v21);
  swift_retain(v8);
  v20 = v10;
  swift_retain(v10);
  v12 = swift_retain(*(_QWORD *)&v11);
  v13 = v9(v12);
  v15 = v14;
  v17 = (*(uint64_t (**)(void))(a1 + 56))();
  v18 = v16;
  if (v13 != v17 || v15 != v16)
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v16, 0);
    swift_release(*(_QWORD *)&v11);
    swift_release(v20);
    swift_release(v8);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v18);
    if ((v7 & 1) != 0)
      return v4;
    goto LABEL_4;
  }
  swift_release(*(_QWORD *)&v11);
  swift_release(v20);
  swift_release(v8);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease_n(v15, 2);
  return v4;
}

uint64_t sub_1008AB780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD *)(v6 + 72);
  v9 = sub_100048748(&qword_1011B1840, (uint64_t (*)(uint64_t))&type metadata accessor for MusicCatalogSearchSuggestionsResponse, (uint64_t)&protocol conformance descriptor for MusicCatalogSearchSuggestionsResponse);
  v10 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)(v7, a1, v5, v9) & 1) == 0)
  {
    ++v10;
    v7 += v8;
    if (v2 == v10)
      return 0;
  }
  return v10;
}

uint64_t sub_1008AB84C(uint64_t a1, uint64_t a2)
{
  return sub_1008AB864(a1, a2, &OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_uuid);
}

uint64_t sub_1008AB858(uint64_t a1, uint64_t a2)
{
  return sub_1008AB864(a1, a2, &OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_uuid);
}

uint64_t sub_1008AB864(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t i;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v5 = result;
  if ((unint64_t)a2 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v6)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    }
    else
    {
      if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      v7 = *(_QWORD *)(a2 + 32);
      swift_retain(v7);
    }
    v5 += *a3;
    v8 = static UUID.== infix(_:_:)(v7 + *a3, v5);
    swift_release(v7);
    if ((v8 & 1) != 0)
      return 0;
    for (i = 0; ; ++i)
    {
      v9 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v9 == v6)
        return 0;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
      }
      else
      {
        if ((v9 & 0x8000000000000000) != 0)
          goto LABEL_19;
        if (v9 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_20;
        v11 = *(_QWORD *)(a2 + 32 + 8 * v9);
        swift_retain(v11);
      }
      v12 = static UUID.== infix(_:_:)(v11 + *a3, v5);
      swift_release(v11);
      if ((v12 & 1) != 0)
        return v9;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    if (a2 < 0)
      v13 = a2;
    else
      v13 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v6 = _CocoaArrayWrapper.endIndex.getter(v13);
    result = swift_bridgeObjectRelease(a2);
  }
  return 0;
}

double sub_1008ABA04(__int16 a1, uint64_t a2)
{
  return sub_1008ABA3C(a1, a2, _s6AlbumsVMa, (void (*)(_QWORD))sub_10023587C, (void (*)(_BYTE *))sub_10018168C);
}

double sub_1008ABA20(__int16 a1, uint64_t a2)
{
  return sub_1008ABA3C(a1, a2, _s9PlaylistsVMa, (void (*)(_QWORD))sub_10010B8F4, (void (*)(_BYTE *))sub_10018241C);
}

double sub_1008ABA3C(__int16 a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), void (*a5)(_BYTE *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t Strong;
  double result;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  int v22;
  int v23;
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];

  v10 = a3(0);
  v11 = __chkstk_darwin(v10);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v15 = &v25[-v14 - 8];
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v18 = Strong;
    v19 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 96);
    swift_beginAccess(v19, v26, 0, 0);
    sub_10005B704(v19, (uint64_t)v15, a3);
    v20 = &v15[*(int *)(v10 + 36)];
    v21 = *v20;
    v22 = v20[1];
    *v20 = a1;
    v20[1] = HIBYTE(a1) & 1;
    if (v22)
      v23 = 256;
    else
      v23 = 0;
    a4(v23 | v21);
    sub_10005B704(v19, (uint64_t)v13, a3);
    swift_beginAccess(v19, v25, 33, 0);
    sub_1001A81D8((uint64_t)v15, v19, a3);
    swift_endAccess(v25);
    a5(v13);
    sub_10005B748((uint64_t)v15, a3);
    sub_10005B748((uint64_t)v13, a3);
    *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  }
  return result;
}

double sub_1008ABBD8(__int16 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  _BYTE v14[24];
  _BYTE v15[24];
  _BYTE v16[24];

  v4 = _s11MusicVideosVMa(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)&v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v14[-v8 - 8];
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 96);
    swift_beginAccess(v12, v15, 0, 0);
    sub_10005B704(v12, (uint64_t)v9, _s11MusicVideosVMa);
    sub_10075DA44(a1 & 0x1FF);
    sub_10005B704(v12, (uint64_t)v6, _s11MusicVideosVMa);
    swift_beginAccess(v12, v14, 33, 0);
    sub_1001A81D8((uint64_t)v9, v12, _s11MusicVideosVMa);
    swift_endAccess(v14);
    sub_100183244(v6);
    sub_10005B748((uint64_t)v9, _s11MusicVideosVMa);
    sub_10005B748((uint64_t)v6, _s11MusicVideosVMa);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1008ABD34(unsigned int a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  __int16 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  _BYTE v25[24];
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  _OWORD v38[5];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v37, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    swift_beginAccess(Strong + 16, v25, 1, 0);
    v7 = *(_QWORD *)(v6 + 16);
    v21 = *(_BYTE *)(v6 + 24);
    v8 = *(_QWORD *)(v6 + 40);
    v20 = *(_QWORD *)(v6 + 32);
    v9 = *(_QWORD *)(v6 + 48);
    v10 = *(unsigned __int8 *)(v6 + 56);
    v11 = *(unsigned __int8 *)(v6 + 57);
    v23 = *(_BYTE *)(v6 + 59);
    v24 = *(_BYTE *)(v6 + 58);
    v12 = *(_QWORD *)(v6 + 72);
    v22 = *(_QWORD *)(v6 + 64);
    v26 = v7;
    v27 = v21;
    v28 = v20;
    v29 = v8;
    v30 = v9;
    v33 = v24;
    v34 = v23;
    v35 = v22;
    v36 = v12;
    v13 = (a1 >> 8) & 1;
    v19 = v13;
    v31 = a1;
    if (v11)
      v14 = 256;
    else
      v14 = 0;
    v15 = v14 | v10;
    v32 = v13;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1008AA1AC(v15);
    v16 = *(_OWORD *)(v6 + 16);
    v17 = *(_OWORD *)(v6 + 32);
    v18 = *(_OWORD *)(v6 + 64);
    v38[2] = *(_OWORD *)(v6 + 48);
    v38[3] = v18;
    v38[0] = v16;
    v38[1] = v17;
    *(_QWORD *)(v6 + 16) = v7;
    *(_BYTE *)(v6 + 24) = v21;
    *(_QWORD *)(v6 + 32) = v20;
    *(_QWORD *)(v6 + 40) = v8;
    *(_QWORD *)(v6 + 48) = v9;
    *(_BYTE *)(v6 + 56) = a1;
    *(_BYTE *)(v6 + 57) = v19;
    *(_BYTE *)(v6 + 58) = v24;
    *(_BYTE *)(v6 + 59) = v23;
    *(_QWORD *)(v6 + 64) = v22;
    *(_QWORD *)(v6 + 72) = v12;
    sub_1001A829C(v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_100182E0C((uint64_t *)v38);
    sub_1001A82EC((uint64_t *)v38);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1008ABEEC(__int16 a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v30, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = (__int128 *)(Strong + 16);
    swift_beginAccess(Strong + 16, v29, 1, 0);
    v26 = *(_BYTE *)(v6 + 24);
    v8 = *(_QWORD *)(v6 + 40);
    v25 = *(_QWORD *)(v6 + 32);
    v20 = *(unsigned __int8 *)(v6 + 49);
    v23 = *(_BYTE *)(v6 + 51);
    v24 = *(_BYTE *)(v6 + 50);
    v9 = *(_QWORD *)(v6 + 64);
    v27 = *(_QWORD *)(v6 + 16);
    v28 = *(_QWORD *)(v6 + 56);
    v10 = *(_QWORD *)(v6 + 72);
    v22 = *(_BYTE *)(v6 + 80);
    v11 = *(_QWORD *)(v6 + 96);
    v21 = *(_QWORD *)(v6 + 88);
    v12 = *(_QWORD *)(v6 + 104);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1005CFF5C(a1);
    if ((v13 & 1) == 0 || ((v20 ^ ((unsigned __int16)(a1 & 0x100) >> 8)) & 1) != 0)
    {
      v14 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      *((_QWORD *)&v32 + 1) = &_s11ContentSortVN;
      *(_QWORD *)&v33 = sub_100049FE4();
      *((_QWORD *)&v33 + 1) = sub_10004A028();
      LOBYTE(v31) = a1;
      BYTE1(v31) = (unsigned __int16)(a1 & 0x100) >> 8;
      NSUserDefaults.encodeValue(_:forKey:)(&v31);

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v31);
    }
    v15 = *v7;
    v16 = v7[1];
    v17 = v7[2];
    v18 = v7[3];
    v19 = v7[5];
    v35 = v7[4];
    v36 = v19;
    v33 = v17;
    v34 = v18;
    v31 = v15;
    v32 = v16;
    *(_QWORD *)(v6 + 16) = v27;
    *(_BYTE *)(v6 + 24) = v26;
    *(_QWORD *)(v6 + 32) = v25;
    *(_QWORD *)(v6 + 40) = v8;
    *(_BYTE *)(v6 + 48) = a1;
    *(_BYTE *)(v6 + 49) = (unsigned __int16)(a1 & 0x100) >> 8;
    *(_BYTE *)(v6 + 50) = v24;
    *(_BYTE *)(v6 + 51) = v23;
    *(_QWORD *)(v6 + 56) = v28;
    *(_QWORD *)(v6 + 64) = v9;
    *(_QWORD *)(v6 + 72) = v10;
    *(_BYTE *)(v6 + 80) = v22;
    *(_QWORD *)(v6 + 88) = v21;
    *(_QWORD *)(v6 + 96) = v11;
    *(_QWORD *)(v6 + 104) = v12;
    sub_100048B2C(&v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1001827AC((uint64_t *)&v31);
    sub_100048B98((uint64_t *)&v31);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1008AC160()
{
  double result;

  result = 102.0;
  xmmword_1011CE8D0 = xmmword_100ED5320;
  return result;
}

id sub_1008AC178(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  __int128 v40;
  objc_super v41;
  _BYTE v42[96];
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  _QWORD *v48;
  void *v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v1[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___globalHeaderRegistration];
  v12 = sub_100007E8C(&qword_1011CE988);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = &v2[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___headerRegistration];
  v14 = sub_100007E8C(&qword_1011A37B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = &v2[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___tvShowCellRegistration];
  v16 = sub_100007E8C(&qword_1011CE998);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = &v2[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___movieCellRegistration];
  v18 = sub_100007E8C((uint64_t *)&unk_1011CE9A8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___collectionView] = 0;
  v19 = OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_prefetchingController;
  v20 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  v21 = v2;
  *(_QWORD *)&v2[v19] = sub_1001EA3C8(0xD000000000000024, 0x8000000100E47970);
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_dragDropController] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___searchController] = 0;
  v22 = &v21[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___actionMetricsReportingContext];
  v23 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___sortMoviesBarButton] = 0;
  v21[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_context] = 0;
  v24 = type metadata accessor for MusicLibrary(0);
  v43 = static MusicLibrary.shared.getter(v24);
  v44 = a1;
  v45 = 0;
  v46 = 0xE000000000000000;
  v47 = 16974083;
  v48 = _swiftEmptyArrayStorage;
  v49 = &_swiftEmptySetSingleton;
  v50 = 7;
  v51 = 0;
  v52 = 0xE000000000000000;
  v53 = _swiftEmptyArrayStorage;
  v25 = sub_100007E8C(&qword_1011CEA78);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_tvShowsResponseController] = sub_10018CD98((uint64_t)&v43);
  sub_100046364(a1, (uint64_t)v42);
  v26 = sub_100007E8C((uint64_t *)&unk_1011CEA80);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_moviesResponseController] = sub_10018CB2C((uint64_t)v42);

  v41.receiver = v21;
  v41.super_class = ObjectType;
  v27 = objc_msgSendSuper2(&v41, "initWithNibName:bundle:", 0, 0);
  v28 = String.LocalizationValue.init(stringLiteral:)(0x766F4D2026205654, 0xEB00000000736569);
  static Locale.current.getter(v28);
  String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, 0, v7, 0, 0, 256);
  v29 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, "setTitle:", v29, swift_bridgeObjectRelease().n128_f64[0]);

  v30 = sub_100007E8C(&qword_1011A1750);
  v31 = swift_allocObject(v30, 48, 7);
  v40 = xmmword_100EA7AA0;
  *(_OWORD *)(v31 + 16) = xmmword_100EA7AA0;
  v32 = sub_10018D478();
  *(_QWORD *)(v31 + 32) = &type metadata for LibraryFilterTrait;
  *(_QWORD *)(v31 + 40) = v32;
  v33 = v27;
  v34 = UIViewController.registerForTraitChanges<A>(_:handler:)(v31, sub_1008B592C, 0, ObjectType);
  swift_unknownObjectRelease(v34);

  swift_bridgeObjectRelease();
  v35 = swift_allocObject(v30, 48, 7);
  *(_OWORD *)(v35 + 16) = v40;
  v36 = sub_10013ADBC();
  *(_QWORD *)(v35 + 32) = &type metadata for MusicLibraryTrait;
  *(_QWORD *)(v35 + 40) = v36;
  v37 = v33;
  v38 = UIViewController.registerForTraitChanges<A>(_:handler:)(v35, sub_1008B5930, 0, ObjectType);
  swift_unknownObjectRelease(v38);
  swift_bridgeObjectRelease();

  return v37;
}

double sub_1008AC604()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double (**v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t (**v13)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double result;
  _QWORD v37[4];
  _QWORD v38[4];
  _QWORD v39[4];
  _QWORD v40[4];
  objc_super v41;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v41.receiver = v0;
  v41.super_class = ObjectType;
  objc_msgSendSuper2(&v41, "viewDidLoad");
  v3 = sub_1008AC960();
  v4 = sub_1008AC960();
  v5 = sub_1005AEAE0((uint64_t)v4, 1);

  objc_msgSend(v3, "setCollectionViewLayout:", v5);
  v6 = sub_1008AC960();
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_prefetchingController];
  objc_msgSend(v6, "setPrefetchDataSource:", v7);

  v8 = swift_allocObject(&unk_1010E01E8, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  v9 = swift_allocObject(&unk_1010E0490, 32, 7);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = ObjectType;
  v10 = (double (**)(uint64_t, uint64_t))(v7
                                                 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v12 = *(_QWORD *)(v7 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v11 = *(_QWORD *)(v7 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider + 8);
  *v10 = sub_1008B8074;
  v10[1] = (double (*)(uint64_t, uint64_t))v9;
  sub_10004BA30(v12, v11);
  v13 = (unint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>))(v7
                                                                                        + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v14 = *(_QWORD *)(v7 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v15 = *(_QWORD *)(v7 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider + 8);
  *v13 = sub_1008AD040;
  v13[1] = 0;
  sub_10004BA30(v14, v15);
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_tvShowsResponseController];
  v17 = swift_allocObject(&unk_1010E01E8, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  v18 = *(_QWORD *)(v16 + 104);
  v19 = *(_QWORD *)(v16 + 112);
  *(_QWORD *)(v16 + 104) = sub_1008B807C;
  *(_QWORD *)(v16 + 112) = v17;
  sub_10004BA30(v18, v19);
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_moviesResponseController];
  v21 = swift_allocObject(&unk_1010E01E8, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16);
  v22 = *(_QWORD *)(v20 + 112);
  v23 = *(_QWORD *)(v20 + 120);
  *(_QWORD *)(v20 + 112) = sub_1008B8084;
  *(_QWORD *)(v20 + 120) = v21;
  sub_10004BA30(v22, v23);
  v24 = sub_1008ADB48();
  v25 = swift_allocObject(&unk_1010E01E8, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = *(_QWORD *)(v24 + 72);
  v27 = *(_QWORD *)(v24 + 80);
  *(_QWORD *)(v24 + 72) = sub_1008B808C;
  *(_QWORD *)(v24 + 80) = v25;
  sub_10004BA30(v26, v27);
  swift_release();
  v37[3] = sub_100007E8C(&qword_1011CE988);
  v28 = sub_100049F68(v37);
  sub_1008AE1D8((uint64_t)v28);
  v38[3] = sub_100007E8C(&qword_1011A37B0);
  v29 = sub_100049F68(v38);
  sub_1008AE3B8((uint64_t)v29);
  v39[3] = sub_100007E8C((uint64_t *)&unk_1011CE9A8);
  v30 = sub_100049F68(v39);
  sub_1008AE5AC((uint64_t)v30);
  v40[3] = sub_100007E8C(&qword_1011CE998);
  v31 = sub_100049F68(v40);
  sub_1008AE7BC((uint64_t)v31);
  swift_arrayDestroy(v37, 4, (char *)&type metadata for Any + 8);
  v32 = sub_1008AC960();
  v33 = swift_allocObject(&unk_1010E01E8, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16);
  v34 = type metadata accessor for CollectionViewDragDropController(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v35 = sub_1002E3B4C(v32, (uint64_t)sub_1008B8094, v33, 0, 0, 0, 0, 0, 0);

  swift_release();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_dragDropController] = v35;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

id sub_1008AC960()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  id result;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double Width;
  void *v36;
  unint64_t v37;
  id v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  _BYTE v45[16];
  objc_super v46;
  objc_super v47;
  objc_super v48;
  CGRect v49;
  CGRect v50;

  v1 = v0;
  v2 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___collectionView;
  v11 = *(void **)&v1[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___collectionView];
  if (v11)
  {
    v12 = *(id *)&v1[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___collectionView];
LABEL_8:
    v44 = v11;
    return v12;
  }
  sub_10004A07C(0, (unint64_t *)&unk_1011A3DA0, UICollectionViewCompositionalLayout_ptr);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v2);
  UICollectionLayoutListConfiguration.init(appearance:)(v5);
  v13 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v9);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v14 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
  objc_allocWithZone(v14);
  v15 = v13;
  v16 = sub_1001089FC(v15, 1, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v18 = result;
    objc_msgSend(result, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

    v48.receiver = v16;
    v48.super_class = v14;
    objc_msgSendSuper2(&v48, "frame");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v47.receiver = v16;
    v47.super_class = v14;
    objc_msgSendSuper2(&v47, "setFrame:", v20, v22, v24, v26);
    v49.origin.x = v28;
    v49.origin.y = v30;
    v49.size.width = v32;
    v49.size.height = v34;
    Width = CGRectGetWidth(v49);
    v46.receiver = v16;
    v46.super_class = v14;
    objc_msgSendSuper2(&v46, "frame");
    if (Width != CGRectGetWidth(v50))
      sub_100108B5C();
    objc_msgSend(v16, "setAutoresizingMask:", 18);
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v36 = result;
      objc_msgSend(result, "addSubview:", v16);

      objc_msgSend(v16, "_setShouldPrefetchCellsWhenPerformingReloadData:", 1);
      objc_msgSend(v16, "setDataSource:", v1);
      objc_msgSend(v16, "setDelegate:", v1);
      objc_msgSend(v16, "setAlwaysBounceVertical:", 1);
      objc_msgSend(v16, "setKeyboardDismissMode:", 1);
      objc_msgSend(v16, "setAllowsFocus:", 1);
      objc_msgSend(v16, "setRemembersLastFocusedIndexPath:", 1);
      v45[15] = 0;
      v37 = sub_10004D63C();
      v38 = v16;
      objc_msgSend(v38, "setAllowsMultipleSelection:", FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v37) & 1);

      v39 = AccessibilityIdentifier.libraryTVAndMoviesView.unsafeMutableAddressor();
      v40 = *v39;
      v41 = v39[1];
      swift_bridgeObjectRetain();
      v42 = UIView.withAccessibilityIdentifier(_:)(v40, v41);

      swift_bridgeObjectRelease();
      v43 = *(void **)&v1[v10];
      *(_QWORD *)&v1[v10] = v42;
      v12 = v42;

      v11 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_1008ACD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  double v17;
  void *v18;
  int v19;
  id v20;
  double (*v21)(uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  id v24;
  _QWORD v27[3];
  uint64_t v28;
  _BYTE v29[24];

  v6 = sub_100007E8C(&qword_1011CEA70);
  __chkstk_darwin(v6);
  v8 = (char *)&v27[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v27[-1] - v14;
  a3 += 16;
  swift_beginAccess(a3, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  v17 = 0.0;
  if (!Strong)
    return v17;
  v18 = (void *)Strong;
  sub_10004A160(a1, (uint64_t)v27, &qword_10119DCC0);
  if (!v28)
  {
    sub_10004FF60((uint64_t)v27, &qword_10119DCC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_8;
  }
  v19 = swift_dynamicCast(v8, v27, (char *)&type metadata for Any + 8, v9, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, v19 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_8:

    sub_10004FF60((uint64_t)v8, &qword_1011CEA70);
    return v17;
  }
  sub_10005B6C0((uint64_t)v8, (uint64_t)v15, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
  sub_10005B704((uint64_t)v15, (uint64_t)v12, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
  if (swift_getEnumCaseMultiPayload(v12, v9) == 1)
  {
    v20 = sub_1008AC960();
    v21 = sub_1001091D0();

    v28 = v9;
    v22 = sub_100049F68(v27);
    sub_10005B704((uint64_t)v15, (uint64_t)v22, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
    v17 = v21((uint64_t)v27, a2);
    swift_release();

    sub_10005B748((uint64_t)v15, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
    sub_10004FF60((uint64_t)v27, &qword_10119DCC0);
    v23 = (uint64_t)v12;
  }
  else
  {
    if (qword_10119C9C8 != -1)
      swift_once(&qword_10119C9C8, sub_1008AC160);
    v17 = *(double *)&xmmword_1011CE8D0;
    v24 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    objc_msgSend(v24, "displayScale");

    sub_10005B748((uint64_t)v15, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
    v23 = (uint64_t)v12;
  }
  sub_10005B748(v23, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
  return v17;
}

unint64_t sub_1008AD040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t result;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __n128 v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  char *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE v95[24];
  uint64_t v96;

  v93 = a2;
  v94 = a3;
  v4 = sub_100007E8C((uint64_t *)&unk_1011CEA10);
  v81 = *(_QWORD *)(v4 - 8);
  v82 = v4;
  __chkstk_darwin(v4);
  v80 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011AE0B0);
  v78 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  __chkstk_darwin(v6);
  v77 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119D3A0);
  __chkstk_darwin(v8);
  v90 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v88 = (char *)&v74 - v11;
  v89 = sub_100007E8C(&qword_1011A3AF0);
  v91 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v87 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100007E8C(&qword_10119FD50);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011AE0A0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011D1410);
  __chkstk_darwin(v19);
  v84 = (uint64_t)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v83 = (char *)&v74 - v22;
  v23 = sub_100007E8C(&qword_1011A3AA0);
  v85 = *(_QWORD *)(v23 - 8);
  v86 = v23;
  __chkstk_darwin(v23);
  v92 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011CEA70);
  __chkstk_darwin(v25);
  v27 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)&v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v74 - v33;
  sub_10004A160(a1, (uint64_t)v95, &qword_10119DCC0);
  if (!v96)
  {
    sub_10004FF60((uint64_t)v95, &qword_10119DCC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, 1, 1, v28);
    goto LABEL_9;
  }
  v35 = swift_dynamicCast(v27, v95, (char *)&type metadata for Any + 8, v28, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v27, v35 ^ 1u, 1, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
LABEL_9:
    v48 = &qword_1011CEA70;
    v49 = (uint64_t)v27;
LABEL_10:
    sub_10004FF60(v49, v48);
    v50 = type metadata accessor for Artwork(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v94, 1, 1, v50);
  }
  v36 = (uint64_t)v34;
  sub_10005B6C0((uint64_t)v27, (uint64_t)v34, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
  sub_10005B704((uint64_t)v34, (uint64_t)v31, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
  if (swift_getEnumCaseMultiPayload(v31, v28) == 1)
  {
    v38 = v85;
    v37 = v86;
    (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v92, v31, v86);
    v39 = *(_QWORD *)(MusicLibrarySectionedResponse.sections.getter(v37) + 16);
    swift_bridgeObjectRelease();
    if (!v39)
    {
      v47 = type metadata accessor for TVShow(0);
      v45 = (uint64_t)v83;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v83, 1, 1, v47);
      goto LABEL_17;
    }
    v40 = MusicLibrarySectionedResponse.sections.getter(v37);
    result = IndexPath.section.getter(v40);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)(v40 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, v40+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * result, v15);
      v42 = swift_bridgeObjectRelease();
      MusicLibrarySection.items.getter(v15, v42);
      v43 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v44 = IndexPath.item.getter(v43);
      v45 = (uint64_t)v83;
      v46 = v76;
      MusicItemCollection.subscript.getter(v44, v76);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v14, v46);
      v47 = type metadata accessor for TVShow(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v45, 0, 1, v47);
LABEL_17:
      v67 = v84;
      sub_10004A160(v45, v84, (uint64_t *)&unk_1011D1410);
      type metadata accessor for TVShow(0);
      v68 = *(_QWORD *)(v47 - 8);
      v69 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v67, 1, v47);
      v70 = v92;
      if (v69 != 1)
      {
        TVShow.artwork.getter();
        sub_10004FF60(v45, (uint64_t *)&unk_1011D1410);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v70, v37);
        sub_10005B748(v36, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 8))(v67, v47);
      }
      v71 = (uint64_t *)&unk_1011D1410;
      sub_10004FF60(v45, (uint64_t *)&unk_1011D1410);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v70, v37);
      sub_10005B748(v36, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
      v49 = v67;
      goto LABEL_23;
    }
    __break(1u);
    goto LABEL_28;
  }
  v51 = v91;
  v52 = v87;
  v53 = v89;
  (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v87, v31, v89);
  v54 = *(_QWORD *)(MusicLibrarySectionedResponse.sections.getter(v53) + 16);
  swift_bridgeObjectRelease();
  if (v54)
  {
    v55 = MusicLibrarySectionedResponse.sections.getter(v53);
    result = IndexPath.section.getter(v55);
    v56 = (uint64_t)v90;
    v57 = (uint64_t)v88;
    if ((result & 0x8000000000000000) != 0)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v92 = (char *)v36;
    if (result >= *(_QWORD *)(v55 + 16))
    {
LABEL_29:
      __break(1u);
      return result;
    }
    v59 = v78;
    v58 = v79;
    v60 = v77;
    (*(void (**)(char *, unint64_t, uint64_t))(v78 + 16))(v77, v55+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(_QWORD *)(v59 + 72) * result, v79);
    v61 = swift_bridgeObjectRelease();
    v62 = v80;
    MusicLibrarySection.items.getter(v58, v61);
    v63 = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v60, v58);
    v64 = IndexPath.item.getter(v63);
    v65 = v82;
    MusicItemCollection.subscript.getter(v64, v82);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v62, v65);
    v66 = type metadata accessor for MusicMovie(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v57, 0, 1, v66);
    v51 = v91;
    v36 = (uint64_t)v92;
  }
  else
  {
    v66 = type metadata accessor for MusicMovie(0);
    v57 = (uint64_t)v88;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v88, 1, 1, v66);
    v56 = (uint64_t)v90;
  }
  sub_10004A160(v57, v56, &qword_10119D3A0);
  type metadata accessor for MusicMovie(0);
  v72 = *(_QWORD *)(v66 - 8);
  v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v56, 1, v66);
  if ((_DWORD)v73 == 1)
  {
    v71 = &qword_10119D3A0;
    sub_10004FF60(v57, &qword_10119D3A0);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
    sub_10005B748(v36, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
    v49 = v56;
LABEL_23:
    v48 = v71;
    goto LABEL_10;
  }
  MusicMovie.artwork.getter(v73);
  sub_10004FF60(v57, &qword_10119D3A0);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
  sub_10005B748(v36, type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 8))(v56, v66);
}

uint64_t sub_1008AD894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  char v25;
  __n128 v26;
  char v27;
  _BYTE v28[24];
  _QWORD v29[4];
  _BYTE v30[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3A90);
  __chkstk_darwin(v4);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011A3AA0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v30, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v12 = (char *)result;
    sub_10004A160(a1, (uint64_t)v6, (uint64_t *)&unk_1011A3A90);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {

      return sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A3A90);
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    if ((v12[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_context] & 1) == 0)
    {
      v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_prefetchingController];
      v14 = type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext(0);
      v29[3] = v14;
      v15 = sub_100049F68(v29);
      (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v8 + 16))(v15, v10, v7);
      swift_storeEnumTagMultiPayload(v15, v14, 1);
      v16 = v13 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context;
      swift_beginAccess(v13 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context, v28, 33, 0);
      sub_1000A5508((uint64_t)v29, v16, &qword_10119DCC0);
      swift_endAccess(v28);
    }
    objc_msgSend(v12, "setNeedsUpdateContentUnavailableConfiguration");
    v17 = sub_1008AC960();
    objc_msgSend(v17, "reloadData");

    v18 = sub_1008ADB48();
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      v19 = (uint64_t *)(*(_QWORD *)(sub_1008ADB48() + 104)
                      + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
      v20 = v19[1];
      if (v20)
      {
        v21 = *v19;
        swift_release();
        v22 = HIBYTE(v20) & 0xF;
        if ((v20 & 0x2000000000000000) == 0)
          v22 = v21 & 0xFFFFFFFFFFFFLL;
        v23 = v22 != 0;
        v24 = *(unsigned __int8 *)(v18 + 48);
        *(_BYTE *)(v18 + 48) = v23;
        if (v24 == v23)
          goto LABEL_14;
      }
      else
      {
        swift_release();
        v27 = *(_BYTE *)(v18 + 48);
        *(_BYTE *)(v18 + 48) = 0;
        if ((v27 & 1) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v25 = *(_BYTE *)(v18 + 48);
      *(_BYTE *)(v18 + 48) = 1;
      if ((v25 & 1) != 0)
      {
LABEL_14:

        v26 = swift_release();
        return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v26);
      }
    }
    sub_100409F58();
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1008ADB48()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;

  v1 = OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___searchController;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___searchController])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___searchController];
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for LibrarySearchController();
    swift_allocObject(v4, 121, 7);
    v5 = v0;
    v2 = sub_10040A500(0, 0, 0, (uint64_t)v5);

    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1008ADBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  char v25;
  __n128 v26;
  char v27;
  _BYTE v28[24];
  _QWORD v29[4];
  _BYTE v30[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3AE0);
  __chkstk_darwin(v4);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011A3AF0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v30, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v12 = (char *)result;
    sub_10004A160(a1, (uint64_t)v6, (uint64_t *)&unk_1011A3AE0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {

      return sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A3AE0);
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (v12[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_context] == 1)
    {
      v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_prefetchingController];
      v14 = type metadata accessor for LibraryTVShowsMoviesViewController.PrefetchingContext(0);
      v29[3] = v14;
      v15 = sub_100049F68(v29);
      (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v8 + 16))(v15, v10, v7);
      swift_storeEnumTagMultiPayload(v15, v14, 0);
      v16 = v13 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context;
      swift_beginAccess(v13 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context, v28, 33, 0);
      sub_1000A5508((uint64_t)v29, v16, &qword_10119DCC0);
      swift_endAccess(v28);
    }
    objc_msgSend(v12, "setNeedsUpdateContentUnavailableConfiguration");
    v17 = sub_1008AC960();
    objc_msgSend(v17, "reloadData");

    v18 = sub_1008ADB48();
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      v19 = (uint64_t *)(*(_QWORD *)(sub_1008ADB48() + 104)
                      + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
      v20 = v19[1];
      if (v20)
      {
        v21 = *v19;
        swift_release();
        v22 = HIBYTE(v20) & 0xF;
        if ((v20 & 0x2000000000000000) == 0)
          v22 = v21 & 0xFFFFFFFFFFFFLL;
        v23 = v22 != 0;
        v24 = *(unsigned __int8 *)(v18 + 48);
        *(_BYTE *)(v18 + 48) = v23;
        if (v24 == v23)
          goto LABEL_14;
      }
      else
      {
        swift_release();
        v27 = *(_BYTE *)(v18 + 48);
        *(_BYTE *)(v18 + 48) = 0;
        if ((v27 & 1) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v25 = *(_BYTE *)(v18 + 48);
      *(_BYTE *)(v18 + 48) = 1;
      if ((v25 & 1) != 0)
      {
LABEL_14:

        v26 = swift_release();
        return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v26);
      }
    }
    sub_100409F58();
    goto LABEL_14;
  }
  return result;
}

void sub_1008ADE98(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[24];
  _OWORD v50[6];
  _OWORD v51[5];
  uint64_t v52;

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v49, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_tvShowsResponseController);
    if (a2)
      v8 = a1;
    else
      v8 = 0;
    if (a2)
      v9 = a2;
    else
      v9 = 0xE000000000000000;
    v44 = v8;
    v45 = v9;
    v46 = (char *)Strong;
    swift_beginAccess(v7 + 16, v48, 1, 0);
    v41 = *(_BYTE *)(v7 + 48);
    v37 = *(_BYTE *)(v7 + 49);
    v39 = *(_BYTE *)(v7 + 24);
    v34 = *(_BYTE *)(v7 + 51);
    v35 = *(_BYTE *)(v7 + 50);
    v10 = *(_QWORD *)(v7 + 56);
    v11 = *(_QWORD *)(v7 + 64);
    v33 = *(_BYTE *)(v7 + 72);
    v13 = *(_QWORD *)(v7 + 80);
    v12 = *(_QWORD *)(v7 + 88);
    v14 = *(_QWORD *)(v7 + 96);
    swift_retain();
    v15 = *(_OWORD *)(v7 + 16);
    v16 = *(_OWORD *)(v7 + 32);
    v17 = *(_OWORD *)(v7 + 48);
    v18 = *(_OWORD *)(v7 + 80);
    v51[3] = *(_OWORD *)(v7 + 64);
    v51[4] = v18;
    v52 = *(_QWORD *)(v7 + 96);
    v51[1] = v16;
    v51[2] = v17;
    v51[0] = v15;
    *(_QWORD *)(v7 + 16) = v19;
    *(_BYTE *)(v7 + 24) = v39;
    *(_QWORD *)(v7 + 32) = v8;
    *(_QWORD *)(v7 + 40) = v9;
    *(_BYTE *)(v7 + 48) = v41;
    *(_BYTE *)(v7 + 49) = v37;
    *(_BYTE *)(v7 + 50) = v35;
    *(_BYTE *)(v7 + 51) = v34;
    *(_QWORD *)(v7 + 56) = v10;
    *(_QWORD *)(v7 + 64) = v11;
    *(_BYTE *)(v7 + 72) = v33;
    *(_QWORD *)(v7 + 80) = v13;
    *(_QWORD *)(v7 + 88) = v12;
    *(_QWORD *)(v7 + 96) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A7DE4(v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_100182AD4((uint64_t *)v51);
    sub_1001A7E50((uint64_t *)v51);
    v20 = *(_QWORD *)&v46[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_moviesResponseController];
    swift_beginAccess(v20 + 16, v47, 1, 0);
    v21 = *(_QWORD *)(v20 + 16);
    v22 = *(_BYTE *)(v20 + 24);
    LOBYTE(v13) = *(_BYTE *)(v20 + 48);
    v23 = *(_BYTE *)(v20 + 49);
    v42 = *(_BYTE *)(v20 + 51);
    v43 = *(_BYTE *)(v20 + 50);
    v24 = *(_QWORD *)(v20 + 64);
    v40 = *(_QWORD *)(v20 + 56);
    v25 = *(_QWORD *)(v20 + 72);
    v38 = *(_BYTE *)(v20 + 80);
    v26 = *(_QWORD *)(v20 + 96);
    v36 = *(_QWORD *)(v20 + 88);
    v27 = *(_QWORD *)(v20 + 104);
    swift_bridgeObjectRetain();
    swift_retain();
    v28 = *(_OWORD *)(v20 + 16);
    v29 = *(_OWORD *)(v20 + 32);
    v30 = *(_OWORD *)(v20 + 48);
    v31 = *(_OWORD *)(v20 + 64);
    v32 = *(_OWORD *)(v20 + 96);
    v50[4] = *(_OWORD *)(v20 + 80);
    v50[5] = v32;
    v50[2] = v30;
    v50[3] = v31;
    v50[0] = v28;
    v50[1] = v29;
    *(_QWORD *)(v20 + 16) = v21;
    *(_BYTE *)(v20 + 24) = v22;
    *(_QWORD *)(v20 + 32) = v44;
    *(_QWORD *)(v20 + 40) = v45;
    *(_BYTE *)(v20 + 48) = v13;
    *(_BYTE *)(v20 + 49) = v23;
    *(_BYTE *)(v20 + 50) = v43;
    *(_BYTE *)(v20 + 51) = v42;
    *(_QWORD *)(v20 + 56) = v40;
    *(_QWORD *)(v20 + 64) = v24;
    *(_QWORD *)(v20 + 72) = v25;
    *(_BYTE *)(v20 + 80) = v38;
    *(_QWORD *)(v20 + 88) = v36;
    *(_QWORD *)(v20 + 96) = v26;
    *(_QWORD *)(v20 + 104) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100048B2C(v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1001827AC((uint64_t *)v50);
    sub_100048B98((uint64_t *)v50);

  }
}

uint64_t sub_1008AE1D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011CEA60);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___globalHeaderRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___globalHeaderRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011CEA60);
  v10 = sub_100007E8C(&qword_1011CE988);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011CEA60);
  v12 = (uint64_t *)UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  v13 = *v12;
  v14 = v12[1];
  v15 = swift_allocObject(&unk_1010E01E8, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = type metadata accessor for LibraryTVShowsMoviesViewController.SegmentedControlCell();
  swift_bridgeObjectRetain();
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v13, v14, sub_1008B7F78, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011CEA60);
  return swift_endAccess(v18);
}

uint64_t sub_1008AE3B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE50);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___headerRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___headerRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v10 = sub_100007E8C(&qword_1011A37B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v14 = v13;
  v15 = swift_allocObject(&unk_1010E01E8, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v12, v14, sub_1008B8068, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011ACE50);
  return swift_endAccess(v18);
}

uint64_t sub_1008AE5AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_100007E8C((uint64_t *)&unk_1011CEA40);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v19[-v9];
  v11 = v2 + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___movieCellRegistration;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___movieCellRegistration, v20, 0, 0);
  sub_10004A160(v11, (uint64_t)v10, (uint64_t *)&unk_1011CEA40);
  v12 = sub_100007E8C((uint64_t *)&unk_1011CE9A8);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a1, v10, v12);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011CEA40);
  v14 = swift_allocObject(&unk_1010E01E8, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = swift_allocObject(&unk_1010E0350, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = ObjectType;
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v17 = type metadata accessor for MusicMovie(0);
  UICollectionView.CellRegistration.init(handler:)(sub_1008B7E3C, v15, v16, v17);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v7, a1, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  swift_beginAccess(v11, v19, 33, 0);
  sub_1000A5508((uint64_t)v7, v11, (uint64_t *)&unk_1011CEA40);
  return swift_endAccess(v19);
}

uint64_t sub_1008AE7BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = sub_100007E8C(&qword_1011CEA38);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v16[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___tvShowCellRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController____lazy_storage___tvShowCellRegistration, v17, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, &qword_1011CEA38);
  v10 = sub_100007E8C(&qword_1011CE998);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, &qword_1011CEA38);
  v12 = swift_allocObject(&unk_1010E01E8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v14 = type metadata accessor for TVShow(0);
  UICollectionView.CellRegistration.init(handler:)(sub_1008B7E00, v12, v13, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v16, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, &qword_1011CEA38);
  return swift_endAccess(v16);
}

unint64_t sub_1008AE998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  unint64_t result;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char v68[24];
  char v69[24];
  char v70[24];
  _OWORD v71[6];

  v66 = a1;
  v67 = a3;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v4);
  v62 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100007E8C((uint64_t *)&unk_1011CEA10);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011AE0B0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A3AF0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for MusicMovie(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v63 = (char *)&v58 - v19;
  swift_beginAccess(a2 + 16, v70, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (!Strong)
    goto LABEL_5;
  v21 = (char *)Strong;
  v59 = v7;
  if (*(_BYTE *)(Strong + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_context) != 1
    || (v22 = OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_moviesResponseController,
        v23 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_moviesResponseController)
            + *(_QWORD *)(**(_QWORD **)(Strong
                                      + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_moviesResponseController)
                        + 112),
        v24 = swift_beginAccess(v23, v69, 0, 0),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v13 + 48))(v23, 1, v12, v24)))
  {
LABEL_4:

LABEL_5:
    v25 = type metadata accessor for DragItem(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v67, 1, 1, v25);
  }
  v58 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v23, v12);
  v27 = *(_QWORD *)(MusicLibrarySectionedResponse.sections.getter(v12) + 16);
  v28 = swift_bridgeObjectRelease();
  if (!v27)
  {
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v28);
    goto LABEL_4;
  }
  v29 = MusicLibrarySectionedResponse.sections.getter(v12);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  result = IndexPath.section.getter(v30);
  v31 = v59;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v32 = v58;
  if (result >= *(_QWORD *)(v29 + 16))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, v29+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * result, v8);
  v33 = swift_bridgeObjectRelease();
  MusicLibrarySection.items.getter(v8, v33);
  v34 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v35 = IndexPath.item.getter(v34);
  v36 = v61;
  MusicItemCollection.subscript.getter(v35, v61);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v31, v36);
  v37 = v64;
  v38 = (uint64_t)v63;
  v39 = v65;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v63, v17, v65);
  v40 = *(_OWORD **)&v21[v32];
  swift_beginAccess(v40 + 1, v68, 0, 0);
  v41 = v40[4];
  v71[2] = v40[3];
  v71[3] = v41;
  v42 = v40[6];
  v71[4] = v40[5];
  v71[5] = v42;
  v43 = v40[2];
  v71[0] = v40[1];
  v71[1] = v43;
  sub_100048B2C(v71);
  v44 = v62;
  sub_100040E3C(v38, v62);
  sub_100048B98((uint64_t *)v71);
  v45 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45);
  if ((_DWORD)v47 == 1)
  {
    sub_10004FF60(v44, (uint64_t *)&unk_1011A3D60);
    v48 = 0;
  }
  else
  {
    v48 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v47);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  }
  v49 = sub_100868CE4(v48);
  v50 = sub_100869D18(v49, (uint64_t)&off_1010AD810);
  swift_bridgeObjectRelease();
  v51 = sub_10047D540((uint64_t)v50);
  swift_bridgeObjectRelease();
  v52 = type metadata accessor for DragItem(0);
  v53 = v67;
  v54 = (char *)v67 + *(int *)(v52 + 20);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v54, v38, v39);
  v55 = enum case for GenericMusicItem.musicMovie(_:);
  v56 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 104))(v54, v55, v56);
  v57 = type metadata accessor for DragItem.Source(0);
  swift_storeEnumTagMultiPayload(v54, v57, 1);
  *v53 = v51;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v53, 0, 1, v52);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
}

void sub_1008AEF30(int a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  objc_super v12;

  v2 = v1;
  v12.receiver = v1;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, "viewWillAppear:", a1 & 1);
  v4 = sub_1008AC960();
  v5 = objc_msgSend(v2, "transitionCoordinator");
  UICollectionView.clearSelection(using:animated:)(v5, a1);

  swift_unknownObjectRelease(v5);
  if ((v2[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_context] & 1) != 0)
  {
    v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_moviesResponseController];
    v7 = *(_QWORD *)(*(_QWORD *)v6 + 128);
    v8 = *(_BYTE *)(v6 + v7);
    *(_BYTE *)(v6 + v7) = 1;
    sub_1008E4BBC(v8);
  }
  else
  {
    v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_tvShowsResponseController];
    v10 = *(_QWORD *)(*(_QWORD *)v9 + 128);
    v11 = *(_BYTE *)(v9 + v10);
    *(_BYTE *)(v9 + v10) = 1;
    sub_1008E4E90(v11);
  }
}

void sub_1008AF054(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, "viewDidDisappear:", a1 & 1);
  if ((v1[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_context] & 1) != 0)
  {
    v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_moviesResponseController];
    v4 = *(_QWORD *)(*(_QWORD *)v3 + 128);
    v5 = *(_BYTE *)(v3 + v4);
    *(_BYTE *)(v3 + v4) = 0;
    sub_1008E4BBC(v5);
  }
  else
  {
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_tvShowsResponseController];
    v7 = *(_QWORD *)(*(_QWORD *)v6 + 128);
    v8 = *(_BYTE *)(v6 + v7);
    *(_BYTE *)(v6 + v7) = 0;
    sub_1008E4E90(v8);
  }
}

uint64_t sub_1008AF12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  void (**v12)(char);
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v15, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v6);
  if (result)
  {
    v8 = result;
    v9 = *(_BYTE *)(result + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_context);
    v10 = *(_BYTE *)(a1
                   + OBJC_IVAR____TtCC5Music34LibraryTVShowsMoviesViewControllerP33_93C7FD7BE2577186821DBE5ED4FA54AB20SegmentedControlCell_currentSelection);
    *(_BYTE *)(a1
             + OBJC_IVAR____TtCC5Music34LibraryTVShowsMoviesViewControllerP33_93C7FD7BE2577186821DBE5ED4FA54AB20SegmentedControlCell_currentSelection) = v9;
    sub_1008B4CD8(v10);
    v11 = swift_allocObject(&unk_1010E03A0, 24, 7);
    *(_QWORD *)(v11 + 16) = v8;
    v12 = (void (**)(char))(a1
                                     + OBJC_IVAR____TtCC5Music34LibraryTVShowsMoviesViewControllerP33_93C7FD7BE2577186821DBE5ED4FA54AB20SegmentedControlCell_selectionDidChange);
    v14 = *(_QWORD *)(a1
                    + OBJC_IVAR____TtCC5Music34LibraryTVShowsMoviesViewControllerP33_93C7FD7BE2577186821DBE5ED4FA54AB20SegmentedControlCell_selectionDidChange);
    v13 = *(_QWORD *)(a1
                    + OBJC_IVAR____TtCC5Music34LibraryTVShowsMoviesViewControllerP33_93C7FD7BE2577186821DBE5ED4FA54AB20SegmentedControlCell_selectionDidChange
                    + 8);
    *v12 = sub_1008B7FA4;
    v12[1] = (void (*)(char))v11;
    return sub_10004BA30(v14, v13);
  }
  return result;
}

void sub_1008AF1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[5];
  _BYTE v51[24];
  char v52[24];

  v48 = a4;
  v49 = a1;
  v6 = sub_100007E8C(&qword_1011AE0B0);
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  __chkstk_darwin(v6);
  v45 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A3AF0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011AE0A0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A3AA0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v52, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v21 = (void *)Strong;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_context) & 1) != 0)
    {
      v22 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_moviesResponseController)
          + *(_QWORD *)(**(_QWORD **)(Strong
                                    + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_moviesResponseController)
                      + 112);
      v23 = swift_beginAccess(v22, v51, 0, 0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 48))(v22, 1, v8, v23))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v22, v8);
        v24 = *(_QWORD *)(MusicLibrarySectionedResponse.sections.getter(v8) + 16);
        v25 = swift_bridgeObjectRelease();
        if (v24)
        {
          v26 = MusicLibrarySectionedResponse.sections.getter(v8);
          v27 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
          v28 = IndexPath.section.getter(v27);
          if ((v28 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v28 < *(_QWORD *)(v26 + 16))
          {
            v29 = v45;
            v30 = v46;
            v31 = v47;
            (*(void (**)(char *, unint64_t, uint64_t))(v46 + 16))(v45, v26+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v46 + 72) * v28, v47);
            swift_bridgeObjectRelease();
            KeyPath = swift_getKeyPath(&unk_100ED52C8);
            MusicLibrarySection.subscript.getter(KeyPath, v31);
            v33 = swift_release();
            (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v29, v31, v33);
LABEL_14:
            v36 = v50[0];
            v37 = v50[1];
            goto LABEL_15;
          }
          __break(1u);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v25);
      }
    }
    else
    {
      v34 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_tvShowsResponseController)
          + *(_QWORD *)(**(_QWORD **)(Strong
                                    + OBJC_IVAR____TtC5Music34LibraryTVShowsMoviesViewController_tvShowsResponseController)
                      + 112);
      v35 = swift_beginAccess(v34, v51, 0, 0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v17 + 48))(v34, 1, v16, v35))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v34, v16);
        v38 = *(_QWORD *)(MusicLibrarySectionedResponse.sections.getter(v16) + 16);
        v39 = swift_bridgeObjectRelease();
        if (v38)
        {
          v40 = MusicLibrarySectionedResponse.sections.getter(v16);
          v41 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
          v42 = IndexPath.section.getter(v41);
          if ((v42 & 0x8000000000000000) == 0)
          {
            if (v42 < *(_QWORD *)(v40 + 16))
            {
              (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v15, v40+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v42, v12);
              swift_bridgeObjectRelease();
              v43 = swift_getKeyPath(&unk_100ED52C8);
              MusicLibrarySection.subscript.getter(v43, v12);
              v44 = swift_release();
              (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v44);
              goto LABEL_14;
            }
LABEL_22:
            __break(1u);
            return;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
        (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v39);
      }
    }
    v36 = 0;
    v37 = 0xE000000000000000;
LABEL_15:
    sub_10061170C(v36, v37, v50);
    swift_bridgeObjectRelease();
    UICollectionViewCell.contentConfiguration.setter(v50);

  }
}

void sub_1008AF5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A3DF0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v11 = (void *)Strong;
    __chkstk_darwin(Strong);
    v19[-2] = a3;
    v19[-1] = v12;
    v13 = sub_100007E8C(&qword_1011C6B50);
    v14 = _s8GridCellVMa(255);
    v15 = sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
    v19[0] = v14;
    v19[1] = v15;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v19, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v17 = UIHostingConfiguration<>.init(content:)(sub_1008B7E08, &v19[-4], v13, OpaqueTypeConformance2);
    v18 = static Edge.Set.all.getter(v17);
    v19[3] = v6;
    v19[4] = sub_100049F28((unint64_t *)&unk_1011AD800, (uint64_t *)&unk_1011A3DF0, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v19);
    UIHostingConfiguration.margins(_:_:)(v18, v6, 0.0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    UICollectionViewCell.contentConfiguration.setter(v19);

  }
}

uint64_t sub_1008AF77C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  char *v38;
  uint64_t v39;
  __n128 v40;
  _QWORD v42[3];
  uint64_t v43;
  _BYTE v44[48];

  v42[1] = a1;
  v1 = type metadata accessor for Locale(0);
  __chkstk_darwin(v1);
  v3 = (char *)v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v7);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v10);
  v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v13);
  v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)_s8GridCellVMa(0);
  __chkstk_darwin(v16);
  v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TVShow(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v19, (uint64_t)&protocol witness table for TVShow, v15);
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 5, 10, v20);
  v21 = (char *)sub_1008AC960();
  v22 = *(_QWORD *)&v21[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 48];

  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v22, 0, 0, 1, 0x3FF0000000000000, 0, 2, (uint64_t)v44);
  v23 = Corner.medium.unsafeMutableAddressor();
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v15, (uint64_t)v12, 0x3FF0000000000000, 0, (uint64_t)v44, *v23, v23[1], *((_BYTE *)v23 + 16), (uint64_t)v18);
  v25 = TVShow.name.getter(v24);
  v27 = v26;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1);
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v28);
  v43 = TVShow.episodeCount.getter();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v43, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v29._countAndFlagsBits = 0x65646F7369704520;
  v29._object = (void *)0xEB00000000297328;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v29);
  v30 = String.LocalizationValue.init(stringInterpolation:)(v9);
  static Locale.current.getter(v30);
  v31 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v3, 0, 0, 256);
  v33 = v32;
  v34 = &v18[v16[9]];
  v35 = type metadata accessor for ContentRating(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  *(_QWORD *)&v18[v16[5]] = 0x3FF0000000000000;
  v36 = (uint64_t *)&v18[v16[6]];
  *v36 = v25;
  v36[1] = v27;
  v37 = (uint64_t *)&v18[v16[7]];
  *v37 = v31;
  v37[1] = v33;
  v18[v16[8]] = 0;
  v38 = &v18[v16[10]];
  *(_QWORD *)v38 = swift_getKeyPath(&unk_100ED5298);
  v39 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v38, v39, 0);
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
  v40 = swift_retain();
  View.artworkCaching(owner:)(v40);
  swift_release();
  return sub_10005B748((uint64_t)v18, _s8GridCellVMa);
}

void sub_1008AFB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  double v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  _QWORD v32[5];
  _BYTE v33[24];

  v10 = sub_100007E8C((uint64_t *)&unk_1011A3E50);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v31 - v15;
  a4 += 16;
  swift_beginAccess(a4, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v18 = (void *)Strong;
    v31[1] = a1;
    __chkstk_darwin(Strong);
    v31[-4] = a3;
    v31[-3] = v19;
    v31[-2] = a2;
    v31[-1] = a5;
    v20 = sub_100007E8C((uint64_t *)&unk_1011BEB30);
    v21 = _s8ListCellVMa(255);
    v22 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
    v32[0] = v21;
    v32[1] = v22;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v32, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v24 = UIHostingConfiguration<>.init(content:)(sub_1008B7E44, &v31[-6], v20, OpaqueTypeConformance2);
    v25 = static Edge.Set.horizontal.getter(v24);
    v26 = (char *)sub_1008AC960();
    v27 = *(double *)&v26[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

    UIHostingConfiguration.margins(_:_:)(v25, v10, v27);
    v28 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    v29 = v28(v13, v10);
    v30 = static Edge.Set.vertical.getter(v29);
    v32[3] = v10;
    v32[4] = sub_100049F28((unint64_t *)&unk_1011AD850, (uint64_t *)&unk_1011A3E50, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v32);
    UIHostingConfiguration.margins(_:_:)(v30, v10, 8.0);
    v28(v16, v10);
    UICollectionViewCell.contentConfiguration.setter(v32);

  }
}

uint64_t sub_1008AFDCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t inited;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  NSString *v110;
  __n128 v111;
  int v112;
  int *v113;
  uint64_t v114;
  char *v115;
  NSString *v116;
  int v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  unint64_t (**v122)(uint64_t);
  _QWORD *v123;
  uint64_t v124;
  __n128 v125;
  char *v126;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  char v166[8];
  char v167[8];

  v156 = a3;
  v161 = a4;
  v162 = a2;
  v5 = type metadata accessor for IndexPath(0);
  v159 = *(_QWORD *)(v5 - 8);
  v160 = v5;
  __chkstk_darwin(v5);
  v157 = v6;
  v158 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicMovie(0);
  v155 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v153 = v8;
  v154 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v9);
  v163 = (uint64_t)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy(0);
  v142 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v141 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy(0);
  v138 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v136 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth(0);
  v133 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v132 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for Duration.UnitsFormatStyle(0);
  v137 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v134 = (char *)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for Date.FormatStyle.Symbol.Year(0);
  v130 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v16 = (char *)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for Date.FormatStyle(0);
  v17 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v19 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v128 - v21;
  v23 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v23);
  v25 = (char *)&v128 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v26);
  v28 = (char *)&v128 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v29);
  v31 = (char *)&v128 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v32);
  v34 = (char *)&v128 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = _s8ListCellVMa(0);
  __chkstk_darwin(v150);
  v152 = (char *)&v128 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_100007E8C((uint64_t *)&unk_1011BEB30);
  v149 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v148 = (char *)&v128 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = v7;
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v7, (uint64_t)&protocol witness table for MusicMovie, v31);
  v37 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v28, 5, 10, v37);
  if (qword_10119C9C8 != -1)
    swift_once(&qword_10119C9C8, sub_1008AC160);
  ArtworkImage.Size.init(cgSize:)(xmmword_1011CE8D0, *((uint64_t *)&xmmword_1011CE8D0 + 1), 0, (uint64_t)v167);
  v38 = Corner.medium.unsafeMutableAddressor();
  v39 = *v38;
  v40 = v38[1];
  v41 = *((_BYTE *)v38 + 16);
  v147 = v34;
  v42 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v31, (uint64_t)v28, 0, 1, (uint64_t)v167, v39, v40, v41, (uint64_t)v34);
  v146 = MusicMovie.title.getter(v42);
  v145 = v43;
  v44 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v44, v166);
  v128 = xmmword_100EA7A80;
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  MusicMovie.releaseDate.getter();
  v46 = type metadata accessor for Date(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v25, 1, v46);
  if ((_DWORD)v48 == 1)
  {
    v49 = sub_10004FF60((uint64_t)v25, (uint64_t *)&unk_1011A30A0);
    v50 = 0;
    v51 = 0;
  }
  else
  {
    v52 = static FormatStyle<>.dateTime.getter(v48);
    static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v52);
    Date.FormatStyle.year(_:)(v16);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v16, v131);
    v53 = *(void (**)(char *, uint64_t))(v17 + 8);
    v54 = v19;
    v55 = v129;
    v53(v54, v129);
    v56 = sub_100048748((unint64_t *)&unk_1011ACB20, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
    Date.formatted<A>(_:)(&v164, v22, v55, v56);
    v53(v22, v55);
    v49 = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v25, v46);
    v50 = v164;
    v51 = v165;
  }
  *(_QWORD *)(inited + 32) = v50;
  *(_QWORD *)(inited + 40) = v51;
  v57 = a1;
  v58 = COERCE_DOUBLE(MusicMovie.duration.getter(v49));
  if ((v59 & 1) != 0)
  {
    v84 = 0;
    v83 = 0;
  }
  else
  {
    v60 = static Duration.seconds(_:)(*(_QWORD *)&v58, v59, v58);
    v62 = v61;
    v63 = sub_100007E8C(&qword_1011A0640);
    v64 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0);
    v65 = *(_QWORD *)(v64 - 8);
    v66 = *(_QWORD *)(v65 + 72);
    v67 = *(unsigned __int8 *)(v65 + 80);
    v68 = (v67 + 32) & ~v67;
    v69 = swift_allocObject(v63, v68 + 2 * v66, v67 | 7);
    *(_OWORD *)(v69 + 16) = v128;
    v70 = static Duration.UnitsFormatStyle.Unit.hours.getter();
    static Duration.UnitsFormatStyle.Unit.minutes.getter(v70);
    v71 = sub_1000476D0(v69);
    swift_setDeallocating(v69);
    swift_arrayDestroy(v69 + v68, 2, v64);
    v72 = swift_deallocClassInstance(v69, 32, 7);
    v73 = v132;
    v74 = static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter(v72);
    v75 = v136;
    v76 = static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter(v74);
    v77 = v141;
    static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter(v76);
    v78 = v134;
    static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)(v71, v73, 0, 1, v75, 0, 1, v77);
    v79 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v142 + 8))(v77, v143, v79);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v75, v140);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v73, v135);
    v80 = sub_100048748((unint64_t *)&unk_1011CEA50, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle, (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle);
    v81 = v60;
    v82 = v139;
    Duration.formatted<A>(_:)(&v164, v78, v81, v62, v139, v80);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v78, v82);
    v84 = v164;
    v83 = v165;
  }
  *(_QWORD *)(inited + 48) = v84;
  *(_QWORD *)(inited + 56) = v83;
  v85 = *(_QWORD *)(inited + 40);
  if (!v85)
  {
    v87 = _swiftEmptyArrayStorage;
    if (!v83)
      goto LABEL_20;
    goto LABEL_15;
  }
  v86 = *(_QWORD *)(inited + 32);
  swift_bridgeObjectRetain();
  v87 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
  v89 = v87[2];
  v88 = v87[3];
  if (v89 >= v88 >> 1)
    v87 = sub_100431480((_QWORD *)(v88 > 1), v89 + 1, 1, v87);
  v87[2] = v89 + 1;
  v90 = &v87[2 * v89];
  v90[4] = v86;
  v90[5] = v85;
  v84 = *(_QWORD **)(inited + 48);
  v83 = *(_QWORD *)(inited + 56);
  if (v83)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v87) & 1) == 0)
      v87 = sub_100431480(0, v87[2] + 1, 1, v87);
    v92 = v87[2];
    v91 = v87[3];
    if (v92 >= v91 >> 1)
      v87 = sub_100431480((_QWORD *)(v91 > 1), v92 + 1, 1, v87);
    v87[2] = v92 + 1;
    v93 = &v87[2 * v92];
    v93[4] = v84;
    v93[5] = v83;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  v164 = v87;
  v94 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v95 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v143 = BidirectionalCollection<>.joined(separator:)(548913696, 0xA400000000000000, v94, v95);
  v142 = v96;
  swift_bridgeObjectRelease();
  v97 = type metadata accessor for ContentRating(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v163, 1, 1, v97);
  v98 = swift_allocObject(&unk_1010E01E8, 24, 7);
  v141 = (char *)v98;
  swift_unknownObjectWeakInit(v98 + 16);
  v99 = v155;
  v100 = v154;
  v101 = v144;
  (*(void (**)(char *, uint64_t, uint64_t))(v155 + 16))(v154, v57, v144);
  v103 = v159;
  v102 = v160;
  v104 = v158;
  (*(void (**)(char *, uint64_t, uint64_t))(v159 + 16))(v158, v156, v160);
  v105 = *(unsigned __int8 *)(v99 + 80);
  v106 = (v105 + 24) & ~v105;
  v107 = *(unsigned __int8 *)(v103 + 80);
  v108 = (v153 + v107 + v106) & ~v107;
  v109 = swift_allocObject(&unk_1010E0378, v108 + v157, v105 | v107 | 7);
  *(_QWORD *)(v109 + 16) = v98;
  (*(void (**)(uint64_t, char *, uint64_t))(v99 + 32))(v109 + v106, v100, v101);
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 32))(v109 + v108, v104, v102);
  swift_retain();
  v110 = UIFontTextStyleBody;
  v112 = static HierarchicalShapeStyle.primary.getter(v111);
  v113 = (int *)v150;
  v114 = (uint64_t)v152;
  v115 = &v152[*(int *)(v150 + 36)];
  *((_QWORD *)v115 + 4) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v115 + 5) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v115 + 2) = v112;
  v116 = UIFontTextStyleSubheadline;
  v117 = static HierarchicalShapeStyle.secondary.getter(v116);
  *((_QWORD *)v115 + 10) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v115 + 11) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v115 + 14) = v117;
  *(_QWORD *)v115 = v110;
  *((_QWORD *)v115 + 6) = v116;
  v115[96] = 0;
  sub_10005B6C0((uint64_t)v147, v114, type metadata accessor for ArtworkImage.Info);
  v118 = (uint64_t *)(v114 + v113[5]);
  v119 = v145;
  *v118 = v146;
  v118[1] = v119;
  v120 = (uint64_t *)(v114 + v113[6]);
  v121 = v142;
  *v120 = v143;
  v120[1] = v121;
  *(_BYTE *)(v114 + v113[7]) = 0;
  sub_100065228(v163, v114 + v113[8], &qword_1011B8D50);
  v122 = (unint64_t (**)(uint64_t))(v114 + v113[10]);
  *v122 = sub_1008B7F0C;
  v122[1] = (unint64_t (*)(uint64_t))v109;
  v123 = (_QWORD *)(v114 + v113[11]);
  *v123 = swift_getKeyPath(&unk_100ED5298);
  v124 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v123, v124, 0);
  swift_release();
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
  v125 = swift_retain();
  v126 = v148;
  View.artworkCaching(owner:)(v125);
  swift_release();
  sub_10005B748(v114, _s8ListCellVMa);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v149 + 32))(v161, v126, v151);
}

